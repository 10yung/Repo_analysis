Noticed in another PR that a couple install docs were never updated or were missed. cc @OpenAPITools/generator-core-team 

### PR checklist

- [x] Read the [contribution guidelines](https://github.com/openapitools/openapi-generator/blob/master/CONTRIBUTING.md).
- [x] If contributing template-only or documentation-only changes which will change sample output, [build the project](https://github.com/OpenAPITools/openapi-generator#14---build-projects) before.
- [x] Run the shell script(s) under `./bin/` (or Windows batch scripts under`.\bin\windows`) to update Petstore samples related to your fix. This is important, as CI jobs will verify _all_ generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run `./bin/{LANG}-petstore.sh`, `./bin/openapi3/{LANG}-petstore.sh` if updating the code or mustache templates for a language (`{LANG}`) (e.g. php, ruby, python, etc).
- [x] File the PR against the [correct branch](https://github.com/OpenAPITools/openapi-generator/wiki/Git-Branches): `master`, `4.3.x`, `5.0.x`. Default: `master`.
- [x] Copy the [technical committee](https://github.com/openapitools/openapi-generator/#62---openapi-generator-technical-committee) to review the pull request if your PR is targeting a particular programming language.

Previously, there was a writeOptional method in DefaultCodegen which
allowed *Codegen instances to immediately write out a supporting file if
it did not exist. This would allow a codegen implementation to skip
user-facing options such as definitions in .openapi-codegen-ignore, the
"supportingFiles" system property, and support for the experimental
handlebars templating engine. While our implementation only modified the
supportingFiles list conditionally, it added confusion as it seemed to
imply that file writes were somewhat the responsibility of
DefaultCodgen (it's DefaultGenerator which handles file manipulation).

This commit moves the definition of whether a file supports overwriting
existing files into the SupportingFile type itself, allowing that
functionality to be determined at time-of-write rather than
time-of-definition. This would allow us, for example, to dump the list
of files which would be generated using a --dry-run option or similar.

This will be a breaking change for anyone who has extended
DefaultCodegen and called "writeOptional". The path to migrate is to add
the SupportingFile to the supportingFiles list and chain the method call
`.doNotOverwrite()` on the instance.

This has the added benefit of clarifying this behavior, considering the
write behavior wasn't previously "optional" writes but optionally
defining the list of supportingFiles based on the state of the file
system.

Fixes #4582 

This is both a bug fix (due to previous behavior of potentially circumventing user options) and a breaking change (due to workflow options exposed to users via DefaultCodegen rather than DefaultGenerator).

cc @OpenAPITools/generator-core-team 

### PR checklist

- [x] Read the [contribution guidelines](https://github.com/openapitools/openapi-generator/blob/master/CONTRIBUTING.md).
- [x] If contributing template-only or documentation-only changes which will change sample output, [build the project](https://github.com/OpenAPITools/openapi-generator#14---build-projects) before.
- [x] Run the shell script(s) under `./bin/` (or Windows batch scripts under`.\bin\windows`) to update Petstore samples related to your fix. This is important, as CI jobs will verify _all_ generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run `./bin/{LANG}-petstore.sh`, `./bin/openapi3/{LANG}-petstore.sh` if updating the code or mustache templates for a language (`{LANG}`) (e.g. php, ruby, python, etc).
- [x] File the PR against the [correct branch](https://github.com/OpenAPITools/openapi-generator/wiki/Git-Branches): `master`, `4.3.x`, `5.0.x`. Default: `master`.
- [x] Copy the [technical committee](https://github.com/openapitools/openapi-generator/#62---openapi-generator-technical-committee) to review the pull request if your PR is targeting a particular programming language.

#### Bug Report Checklist

- [x] Have you provided a full/minimal spec to reproduce the issue?
`Send a request with an array of object in query parameter and be able to find that the value of that query parameter is empty`
- [x] Have you validated the input using an OpenAPI validator ([example](https://apidevtools.org/swagger-parser/online/))?
- [x] What's the version of OpenAPI Generator used?
3
- [x] Have you search for related issues/PRs?
- [x] What's the actual output vs expected output?
Actual output: 
```
?where=
```
Expected output: array of object should be stringify and encoded.
```
?where=%7B%22id%22%3A1%7D
```
- [ ] [Optional] Bounty to sponsor the fix ([example](https://www.bountysource.com/issues/66123212-javascript-client-produces-a-wrong-object-for-a-string-enum-type-that-is-used-with-ref))



### Is your feature request related to a problem? Please describe.

For https://github.com/OpenAPITools/openapi-generator/pull/5019#discussion_r368043780

> We are tying to minimize the usage of flake8 E501 and other flake8 opt out lines.




## Describe the solution you'd like

<!-- A clear and concise description of what you want to happen. -->

## Describe alternatives you've considered

<!-- A clear and concise description of any alternative solutions or features you've considered. -->

## Additional context

<!-- Add any other context or screenshots about the feature request here. -->

This pull request disables the mustache html-escaper (see #4537, we should not want any html). The second commit skips the use of the codegen-escaper for setting the query parameters hashmap keys for the client request (e.g. use ```put("for", listOf(`for`.toString()))``` instead of ```put("`for`", listOf(`for`.toString()))```).

@jimschubert (2017/09) heart, @dr4ke616 (2018/08) @karismann (2019/03) @Zomzog (2019/04) @andrewemery (2019/10) @4brunu (2019/11)

<!-- Please check the completed items below -->
### PR checklist

- [x] Read the [contribution guidelines](https://github.com/openapitools/openapi-generator/blob/master/CONTRIBUTING.md).
- [x] If contributing template-only or documentation-only changes which will change sample output, [build the project](https://github.com/OpenAPITools/openapi-generator#14---build-projects) before.
- [x] Run the shell script(s) under `./bin/` (or Windows batch scripts under`.\bin\windows`) to update Petstore samples related to your fix. This is important, as CI jobs will verify _all_ generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run `./bin/{LANG}-petstore.sh`, `./bin/openapi3/{LANG}-petstore.sh` if updating the code or mustache templates for a language (`{LANG}`) (e.g. php, ruby, python, etc).
- [x] File the PR against the [correct branch](https://github.com/OpenAPITools/openapi-generator/wiki/Git-Branches): `master`, `4.3.x`, `5.0.x`. Default: `master`.
- [x] Copy the [technical committee](https://github.com/openapitools/openapi-generator/#62---openapi-generator-technical-committee) to review the pull request if your PR is targeting a particular programming language.

This PR includes a few different fixes:

- Add missing import, serializer for `dateLibrary=timemachine`
- Remove bad import `package:http/io_client.dart`
- Use raw strings for those that contain variable name. This should eliminate potential issue with variables like `$ref`.
- Use `_path` instead of `path` to avoid potential conflict with op params.

These fixes are required when I try to generate for Kubernetes API ([example json here](https://gist.github.com/daohoangson/6431f46beb4c2d0d163f3a4791f518e8)).

Please note that this PR needs another PR to work properly (https://github.com/google/built_value.dart/pull/804).

CC @ircecho @swipesight @jaumard @nickmeinhold @athornz @amondnet

<!-- Please check the completed items below -->
### PR checklist

- [x] Read the [contribution guidelines](https://github.com/openapitools/openapi-generator/blob/master/CONTRIBUTING.md).
- [ ] If contributing template-only or documentation-only changes which will change sample output, [build the project](https://github.com/OpenAPITools/openapi-generator#14---build-projects) before.
- [x] Run the shell script(s) under `./bin/` (or Windows batch scripts under`.\bin\windows`) to update Petstore samples related to your fix. This is important, as CI jobs will verify _all_ generator outputs of your HEAD commit, and these must match the expectations made by your contribution. You only need to run `./bin/{LANG}-petstore.sh`, `./bin/openapi3/{LANG}-petstore.sh` if updating the code or mustache templates for a language (`{LANG}`) (e.g. php, ruby, python, etc).
- [x] File the PR against the [correct branch](https://github.com/OpenAPITools/openapi-generator/wiki/Git-Branches): `master`, `4.3.x`, `5.0.x`. Default: `master`.
- [x] Copy the [technical committee](https://github.com/openapitools/openapi-generator/#62---openapi-generator-technical-committee) to review the pull request if your PR is targeting a particular programming language.

Hi All,
regard required, readOnly and writeOnly open api specification report:

If a readOnly or writeOnly property is included in the required list, required affects just the relevant scope – responses only or requests only. That is, read-only required properties apply to responses only, and write-only required properties – to requests only.


so if i declare a field required and read-only means that in the request that field should be empty.

example with this yam:

    Poll:
      title: Poll
      type: object
      description: A poll is an election, or a survey of people's opinions to ask inside the platform
      properties:
        id:
          type: integer
          format: int64
          readOnly: true
          description: Unique Identifier of a Poll
-------
openapigenerator generate the class with id not null

  @JsonProperty("id")
  private Long id;

  @NotNull
    public Long getId() {
    return id;
  }

  public void setId(Long id) {
    this.id = id;
  }

What happen if i run my code and  i perform a post with an empty id ? Spring raise bad request but it is not correct.  For openapi specification  read-only required properties apply to responses only and not for the request.
I think that openapi generator should generate @NotNull only for writeOnly property
#### Bug Report Checklist

- [x] Have you provided a full/minimal spec to reproduce the issue?
- [x] Have you validated the input using an OpenAPI validator ([example](https://apidevtools.org/swagger-parser/online/))?
- [x] What's the version of OpenAPI Generator used?
- [x] Have you search for related issues/PRs?
- [x] What's the actual output vs expected output?
- [ ] [Optional] Bounty to sponsor the fix ([example](https://www.bountysource.com/issues/66123212-javascript-client-produces-a-wrong-object-for-a-string-enum-type-that-is-used-with-ref))

<!--
Please follow the issue template below for bug reports.
Also please indicate in the issue title which language/library is concerned. Eg:  [BUG][JAVA] Bug generating foo with bar 
-->

##### Description

The PHP code generator does not validate the value of the "scheme" attribute in the security scheme object. It assumes that when type is set to **"http"**, the auth scheme is "basic". But that's not always the case. Other HTTP schemes that are defined in the IANA registry.

The "scheme" attribute in the security scheme object is required as specified in [OAS 3.0.2](https://github.com/OAI/OpenAPI-Specification/blob/v3.1.0-dev/versions/3.0.2.md#security-scheme-object)
The value of the "scheme" attribute must be the auth scheme from the IANA registry available at
https://www.iana.org/assignments/http-authschemes/http-authschemes.xhtml (as per RFC 7235).

##### openapi-generator version

master branch, January 18 2020

##### OpenAPI declaration file content or url

Consider the following OAS security schemes:

```yaml
securitySchemes:
   http_basic_test:
      type: http
      scheme: basic
   http_scram:
      type: http
      scheme: SCRAM-SHA-256
   http_other_scheme:
      type: http
      scheme: my-security-scheme-value
```
The PHP generator properly generates the code for "http_basic_test". For the other two scheme values (http_scram and http_other_scheme), the generator still produces code assuming the scheme value is "basic". 

I found this issue while working on PR #4993 and #4958

##### Command line used for generation

./bin/openapi3/php-petstore.sh

##### Steps to reproduce

1. Edit modules/openapi-generator/src/test/resources/3_0/petstore-with-fake-endpoints-models-for-testing.yaml and add the following scheme:

```yaml
   http_signature_test:
      type: http
      scheme: signature
```
The "signature" value is NOT HTTP basic. This is just an example, I think any value would produce the same results.

2. Execute ./bin/openapi3/php-petstore.sh

3. Notice the following code is generated in b/samples/openapi3/client/petstore/php/OpenAPIClient-php/lib/Api/PetApi.php

```
+        // this endpoint requires HTTP basic authentication
+        if (!empty($this->config->getUsername()) || !(empty($this->config->getPassword()))) {
+            $headers['Authorization'] = 'Basic ' . base64_encode($this->config->getUsername() . ":" . $this->config->getPassword());
+        }
```

I would expect that the PHP generator to inspect the value of "scheme" and skip the "http basic" code generation.

##### Related issues/PRs

Similar issue: #239

##### Suggest a fix

I think the code generator should validate the value of the "scheme" attribute. If it does not understand the value and cannot generate the code that will be able to implement this value, it should skip the security scheme. Or alternatively it should fail, but I think skipping is better.
My reasoning for skipping is that if an OAS spec supports multiple schemes, at least the PHP generator will be able to generate a subset of the schemes, even if it does not support all of them.

#### Bug Report Checklist

- [x] Have you provided a full/minimal spec to reproduce the issue?
- [x] Have you validated the input using an OpenAPI validator ([example](https://apidevtools.org/swagger-parser/online/))?
- [x] What's the version of OpenAPI Generator used?
- [x] Have you search for related issues/PRs?
- [x] What's the actual output vs expected output?
- [ ] [Optional] Bounty to sponsor the fix ([example](https://www.bountysource.com/issues/66123212-javascript-client-produces-a-wrong-object-for-a-string-enum-type-that-is-used-with-ref))

<!--
Please follow the issue template below for bug reports.
Also please indicate in the issue title which language/library is concerned. Eg:  [BUG][JAVA] Bug generating foo with bar 
-->

##### Description

An enum type is generated twice instead of being generated once and then referenced from client code.

##### openapi-generator version

4.2.3-SNAPSHOT

##### OpenAPI declaration file content or url
```yaml
openapi: '3.0.0'
info:
  version: 1.0.0
  title: API with Default Values
servers:
  - url: http://localhost:8080
paths:
  /test:
    post:
      operationId: testDefaults
      requestBody:
        required: true
        content:
          application/json:
            schema:
              '$ref': '#/components/schemas/Payload'
      responses:
        '200':
          description: Ok
components:
  schemas:
    Payload:
      type: object
      properties:
        stringProp:
          type: string
          default: foo
        doubleProp:
          type: number
          format: double
          default: 1.234
        enumProp:
          $ref: '#/components/schemas/EnumProp'
    EnumProp:
          type: string
          enum: [One, Two, Three]
          default: Two
```

##### Command line used for generation

```
docker run --rm --user "$(id -u):$(id -g)" -v ${PWD}:/local openapitools/openapi-generator-cli generate -i /local/enum.yml -g aspnetcore -o /local/out -p aspnetVersion=3.0 -Dmodels
```

##### Steps to reproduce

Save the YAML as `enum.yml` and run the above command.

##### Related issues/PRs

https://github.com/OpenAPITools/openapi-generator/issues/3582

##### Suggest a fix

This seems to work as expected with `-g csharp`.

**Description of the Pull Request:**
By setting of x-spring-paginated: true for an operation in the yaml file at the same level as operationId this pull request add a Spring Pageable (org.springframework.data.domain.Pageable) parameter if JavaSpring is used.

The idea for the solution based on: https://github.com/swagger-api/swagger-codegen/pull/3357.

Spring Pageable: https://docs.spring.io/spring-data/commons/docs/current/api/org/springframework/data/domain/Pageable.html

**In yaml-file:**
operationId: findPetsByTags
x-spring-paginated: true

**Created PetApi.java:**
```
    @ApiOperation(value = "Finds Pets by tags", nickname = "findPetsByTags", notes = "Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.", response = Pet.class, responseContainer = "List", authorizations = {
        @Authorization(value = "petstore_auth", scopes = {
            @AuthorizationScope(scope = "write:pets", description = "modify pets in your account"),
            @AuthorizationScope(scope = "read:pets", description = "read your pets")
            })
    }, tags={ "pet", })
    @ApiImplicitParams({
        @ApiImplicitParam(name = "page", dataType = "integer", paramType = "query",
                value = "Results page you want to retrieve (0..N)"),
        @ApiImplicitParam(name = "size", dataType = "integer", paramType = "query",
                value = "Number of records per page."),
        @ApiImplicitParam(name = "sort", allowMultiple = true, dataType = "string", paramType = "query",
                value = "Sorting criteria in the format: property(,asc|desc). " +
                        "Default sort order is ascending. " +
                        "Multiple sort criteria are supported.")
    })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "successful operation", response = Pet.class, responseContainer = "List"),
        @ApiResponse(code = 400, message = "Invalid tag value") })
    @RequestMapping(value = "/pet/findByTags",
        produces = { "application/xml", "application/json" }, 
        method = RequestMethod.GET)
    default ResponseEntity<List<Pet>> findPetsByTags(@NotNull @ApiParam(value = "Tags to filter by", required = true) @Valid @RequestParam(value = "tags", required = true) List<String> tags, @ApiIgnore final Pageable pageable) {
```