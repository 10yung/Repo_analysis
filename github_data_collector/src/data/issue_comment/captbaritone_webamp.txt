Just putting this here to save some work that I keep losing track of locally. Due to bad rebase it includes some commits that should be stuck on other stuff.
We gotta in unhook the nodes

This is just a way to get a Netlify build that still has the media library.
Just happened to notice [this tweet](https://twitter.com/winampskins/status/1197605624453816320) with a neat skin. Clicked through to [try it out](https://webamp.org/?skinUrl=https%3A//s3.amazonaws.com/webamp-uploaded-skins/skins/2e146de10eef96773ea222fefad52eeb.wsz) and got a "failed to parse skin" error.

I've attached the skin file.

[2e146de10eef96773ea222fefad52eeb.wsz.zip](https://github.com/captbaritone/webamp/files/3876784/2e146de10eef96773ea222fefad52eeb.wsz.zip)
Test whether a `GuiObject` can have images with different sizes and how thats handled. For example: what happens if a button has an image of one size for its default state, and an image with a different size for its pressed state? How is this reflected in the UI and in calls to `getWidth`/`getHeight`?
Full description is in #943 . `GuiObject.getwidth`/`getheight` need to fallback to using the image `width`/`height` if a `w`/`h` isn't specified on the Object (like we do when rendering)
In 5.66 definition files but missing in objects.ts:

* AlbumArtLayer
* ColorMgr
* Application
* Core
* Frame
* File

Found by running `yarn analyze-wals` and looking at the errors.
This skin https://archive.org/details/winampskin_Fuzzy_Muffins causes Webamp to run out of memory when we try to extract the maki scripts. I've blacklisted it for now, but we should figure out what's going on.
So feel free to reject this and we can just keep things simple, it's not a large performance increase.

I do believe there is a slight performance increase. It is hard to measure because I think it's about 5%, but there is more variation in the runtime of the updates than that. I'd like to think it shouldn't be slower than comparing the node objects, but could be wrong :-X

Maybe there is a better way to measure specifically the memoization equality check?

Also think it's kind of cool to have available the # of updates a component has had, but don't actually have any plans of what we would do with that haha.