**Description**
This PR ensures that  headers defined in proxy mode are always returned in responses.

**Related Issue**

https://github.com/mockoon/mockoon/issues/136


**Motivation and Context**
In my projects, I often use custom headers like `x-auth-key` for authentication. If you use Mockoon with this header (x-auth-key) set in an environment, it will work if the proxied server returns a  200 response.  Incase of a 404 error from the proxied server, the header `x-auth-key` is ignored. See https://github.com/mockoon/mockoon/issues/136

**How Has This Been Tested?**

* Use Mockoon in proxy mode with some headers defined. 
* Access some valid endpoints in the proxied server from your browser and inspect  the response headers. It should return the headers defined
* Access an endpoint that does not exist in the proxied server such that you get a 404 error.  The headers you defined in mockoon should be returned in the response as well.


** Unit/UI test?**
No, this is my entry PR to this project. Things are still sketchy for me.

When you duplicate a route, it should be good to have the cloned one right after the original, not at the end of the list.

I use to organize the routes with the same path together, but when I duplicate a route I have to go down to the bottom of the list of routes and move it. It is tedious.
**Describe the bug**
Environment logs entries icons are hidden when path is too long

**To Reproduce**
Make requests on long paths.

**Expected behavior**
Icons shouldn't be hidden, text should be truncated

**Screenshots**
![Capture](https://user-images.githubusercontent.com/7489814/71896706-cd52f000-3154-11ea-8c5a-0679358413c6.PNG)

**Mockoon version:**
latest

**OS / OS version:**
all

**Is your feature request related to a problem? Please describe.**
When setting up an API prefix, it is forwarded as is to the proxied route. 
It can make sense that requests are proxied without the API prefix. 

Example: 
1. `localhost:3000/myprefix` is declared in Mockoon, with no route, and proxy mode active (set to `http://localhost: 3010/`)
2. when calling `localhost:3000/myprefix/foo` it is forwarded to `http://localhost: 3010/myprefix/foo`

**Describe the solution you'd like**
It could be useful to have it forwarded to `http://localhost: 3010/foo`, ignoring the prefix declared in Mockoon. 
This should be store in the settings. 

**Description**
Since you had trouble making version updates to the AUR PKGBUILD which I added, I figured I could provide an Arch Linux container with a small script that does just that.

**Motivation and Context**
Well, using this, it shouldn't be necessary anymore to contact me to bump the version number of the AUR package ;)

**How Has This Been Tested?**
Follow the steps provided in the README.md to build and run the container. To see if it's working, you can simply use the current version "1.7.0" as parameter to the docker run command - git should then output that there have been no changes.

**Screenshots (if appropriate):**
![image](https://user-images.githubusercontent.com/35728419/71547500-def00700-29a0-11ea-89e9-5790944e2ad9.png)


Happy Holidays,
Lukas
When I used api with dynamic response, I want to get the environment logs of current environment by api, so i can get the api response of last api call and use it to dynamic verify in my UT.
**Describe the bug**
Requesting mock route, never resolves. Keep waiting for response. If I create same route manually it works well.

**To Reproduce**
1. Turn On proxy mod
2. Wait for real request to be logged in Environmental Log
3. Create a mock route from env. log
4. Try to request the mocked route
5. It just keeps waiting for response, never resolves.

**Expected behaviour**
When request the mock route, it should return response.

**Mockoon version:**
`1.7.0`

**OS / OS version:**
Mac OS `10.14`

We cannot resize routes pane, so we cannot see from a quick look where is a specific route to make changes and we have to go through each one.

UP/DOWN keys are not working when you try to scroll down routes as well.

MAC OS v1.6.0

![image](https://user-images.githubusercontent.com/8059283/70626944-feabcf00-1c2d-11ea-94d8-123adf76592b.png)

i want to be able to make global rules that applies to all responses for that environment (eg. access_token in request header must be equal and exist). would be nice, thx bro
**Is your feature request related to a problem? Please describe.**

I am trying to use mockoon as a server to host my static files server as well as being able to reverse proxy per route.  for example when developing locally I'd like to be able to reverse proxy to one or more of the microservices running locally but also reverse proxy to the dev api layer which hosts the bulk of the services

**Describe the solution you'd like**
I have about 120 microservices running and to be able to the run the application as a whole I would like to be able to point my services that I modified locally and test with the rest of the microservices on the dev env

**Describe alternatives you've considered**
I considered caddy webserver but I like mockoon GUI.

