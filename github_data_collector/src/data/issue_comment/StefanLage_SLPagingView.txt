Integrating UITableviewController Not Updating Tableview Datasource.
Is there any way for refreshing particular tableview controller datasource and ui.
Hello, I am new to iOS development and honestly not sure where to start with what I'm attempting to build or how to phrase my question. I have a login page and once a user logs in I'd like to call for this type of paging. How would I go about doing so, making SLPagingView once a user logs in instead of in the app delegate file

This was working fine until I tried it on an iOS 9 device. The pageControl also is not updating where it was working fine before I tried iOS 9. Any thoughts?

``` Objective-C
    __weak typeof(self)weakSelf = self;
    self.didChangedPage = ^(NSInteger currentPageIndex) {
        // do something
        NSLog(@"page index: %i | scrollView: %@", (int)currentPageIndex, NSStringFromCGRect(weakSelf.scrollView.frame));
    };
```

Hi. I had to remove SLPagingView from my project because of this behaviour. It's hard to explain but, basically, when loading a html with a combo box (select element) within it, you can't select any option because every time you scroll the Picker View that appears at the bottom and lift your finger, the default option is selected; though if you tap an directly to an option it works but it is not the intended behaviour of a Picker View. Also the Picker View can be scrolled to the left and to the right and then it returns to the correct position but with the same bad behaviour. 

To replicate this, just create a brand new project, pod install SLPagingView and use this code in the ViewController.m:

```
#import <WebKit/WebKit.h>
.
.
.
@interface ViewController ()

@property (strong, nonatomic) WKWebView *theWebView;

@end

@implementation ViewController

- (void)viewDidLoad {
    [super viewDidLoad];

    _theWebView = [[WKWebView alloc] initWithFrame:self.view.frame];
    [self.view addSubview:_theWebView];
    NSURLRequest *request = [NSURLRequest requestWithURL:[NSURL URLWithString:@"http://www.example.com/some_html_with_select_element.html"]];
    [_theWebView loadRequest:request];
}
```

Fortunately, the project I'm working on wasn't making use of SLPagingView so I could removed it.

I have an iOS app where ViewController is the default view controller. The implementation of ViewController looks like this 

```
#import "ViewController.h"
#import "SLPagingViewController.h"
#import "UIColor+SLAddition.h"

@interface ViewController ()

@end

@implementation ViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    // Do any additional setup after loading the view, typically from a nib.

}

- (void)viewDidAppear:(BOOL)animated {
    UIColor *orange = [UIColor colorWithRed:255/255
                                      green:69.0/255
                                       blue:0.0/255
                                      alpha:1.0];

    UIColor *gray = [UIColor colorWithRed:.84
                                    green:.84
                                     blue:.84
                                    alpha:1.0];

    UIImage *img1 = [UIImage imageNamed:@"gear"];
    img1 = [img1 imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];

    UIImage *img2 = [UIImage imageNamed:@"profile"];
    img2 = [img2 imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];

    UIImage *img3 = [UIImage imageNamed:@"chat"];
    img3 = [img3 imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];

    NSArray *titles = @[[[UIImageView alloc] initWithImage:img1], [[UIImageView alloc] initWithImage:img2], [[UIImageView alloc] initWithImage:img3]];

    UIView *orangeView = [self viewWithBackground:[UIColor orangeColor]];

    UIView *yellowView = [self viewWithBackground:[UIColor yellowColor]];

    UIView *blueView = [self viewWithBackground:[UIColor blueColor]];

    NSArray *views = @[orangeView, yellowView, blueView];


    SLPagingViewController *pageViewController = [[SLPagingViewController alloc] initWithNavBarItems:titles
                                                                                    navBarBackground:[UIColor whiteColor]
                                                                                               views:views
                                                                                     showPageControl:NO];


    pageViewController.navigationSideItemsStyle = SLNavigationSideItemsStyleOnBounds;
    float minX = 45.0;
    // Tinder Like
    pageViewController.pagingViewMoving = ^(NSArray *subviews){
        float mid  = [UIScreen mainScreen].bounds.size.width/2 - minX;
        float midM = [UIScreen mainScreen].bounds.size.width - minX;
        for(UIImageView *v in subviews){
            UIColor *c = gray;
            if(v.frame.origin.x > minX
               && v.frame.origin.x < mid)
                // Left part
                c = [UIColor gradient:v.frame.origin.x
                                  top:minX+1
                               bottom:mid-1
                                 init:orange
                                 goal:gray];
            else if(v.frame.origin.x > mid
                    && v.frame.origin.x < midM)
                // Right part
                c = [UIColor gradient:v.frame.origin.x
                                  top:mid+1
                               bottom:midM-1
                                 init:gray
                                 goal:orange];
            else if(v.frame.origin.x == mid)
                c = orange;
            v.tintColor= c;
        }
    };



    [pageViewController setNavigationBarColor:[UIColor greenColor]];

    [self presentViewController:pageViewController animated:YES completion:nil];
}

-(UIView*)viewWithBackground:(UIColor *)color{
    UIView *v = [UIView new];
    v.backgroundColor = color;
    return v;
}
- (void)didReceiveMemoryWarning {
    [super didReceiveMemoryWarning];
    // Dispose of any resources that can be recreated.
}

@end
```

However, with the above code, the orange, yellow and blue views fill the whole screen and the tabs are not visible. How do I make the tabs visible?

This possibly could be my install of cocoa pods is messed up but it is unlikely. I am unable to install this via cocoa pods from github or just by refrencing 

pod 'SLPagingView'

i have also tried referencing the github repository

pod 'SLPagingView', :git => 'https://github.com/StefanLage/SLPagingView.git'

I have spend quite awhile trying to rule out my cocoa pods install but i have successfully installed other pods.

Any help would be appreciated. Thanks for this awesome control!

![screen shot 2015-08-25 at 7 20 57 am](https://cloud.githubusercontent.com/assets/5741343/9466352/dbd44f48-4af9-11e5-855f-70d163e8dc9f.png)
![screen shot 2015-08-25 at 7 20 42 am](https://cloud.githubusercontent.com/assets/5741343/9466353/dbe5304c-4af9-11e5-858e-49c96a5027de.png)

Hi! @StefanLage 
Thank you very much for your open source libraries.

The NavigationBar icon main color how i can change it?

Jack

Hello,

Like tinder, when user is on a page, I'd like to change the bar item to a UILabel (previously is a UIImage). 
1. How can I change that specific bar item without re-init the view controller? 

2.Where should i change the bar item, didChangePage block or pagingViewMovingRedefine block?

Thanks in advance.

I'm coding on swift and using your storyboard to create an example but when present a modal view and dismiss it, the layout of view controllers is broken.
Please help me solve this problem.
Thank you

Im trying to use this in a navigation controller. I present a login page and after the user logs in I present my SLPagingView, but when it gets presented self.navigationController is null so I cant push anything else. 
I've looked at #19, but thats still not working for me.

I've tried everything, please help!
