Hi,
Rollbar notifies me about the following error around super_fetch:
I did'nt find any particular problems or even if it had any consequences.

It happened few times since I've upgraded Sidekiq

```
Redis::CommandError: ERR wrong number of arguments for 'sadd' command

File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/redis-4.1.3/lib/redis/client.rb" line 209 in call_pipelined
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/redis-4.1.3/lib/redis/client.rb" line 164 in block in call_pipeline
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/redis-4.1.3/lib/redis/client.rb" line 306 in with_reconnect
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/redis-4.1.3/lib/redis/client.rb" line 162 in call_pipeline
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/redis-4.1.3/lib/redis.rb" line 2462 in block in multi
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/redis-4.1.3/lib/redis.rb" line 52 in block in synchronize
File "/home/bas/.rbenv/versions/2.6.3/lib/ruby/2.6.0/monitor.rb" line 230 in mon_synchronize
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/redis-4.1.3/lib/redis.rb" line 52 in synchronize
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/redis-4.1.3/lib/redis.rb" line 2454 in multi
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/sidekiq-pro-5.0.1/lib/sidekiq/pro/super_fetch.rb" line 227 in block in register_myself
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/sidekiq-6.0.4/lib/sidekiq.rb" line 97 in block in redis
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/connection_pool-2.2.2/lib/connection_pool.rb" line 65 in block (2 levels) in with
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/connection_pool-2.2.2/lib/connection_pool.rb" line 64 in handle_interrupt
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/connection_pool-2.2.2/lib/connection_pool.rb" line 64 in block in with
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/connection_pool-2.2.2/lib/connection_pool.rb" line 61 in handle_interrupt
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/connection_pool-2.2.2/lib/connection_pool.rb" line 61 in with
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/sidekiq-6.0.4/lib/sidekiq.rb" line 94 in redis
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/sidekiq-pro-5.0.1/lib/sidekiq/pro/super_fetch.rb" line 226 in register_myself
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/sidekiq-pro-5.0.1/lib/sidekiq/pro/super_fetch.rb" line 244 in block in startup
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/sidekiq-6.0.4/lib/sidekiq/util.rb" line 15 in watchdog
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/sidekiq-pro-5.0.1/lib/sidekiq/pro/super_fetch.rb" line 235 in startup
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.5/lib/concurrent/executor/ruby_thread_pool_executor.rb" line 348 in run_task
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.5/lib/concurrent/executor/ruby_thread_pool_executor.rb" line 337 in block (3 levels) in create_worker
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.5/lib/concurrent/executor/ruby_thread_pool_executor.rb" line 320 in loop
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.5/lib/concurrent/executor/ruby_thread_pool_executor.rb" line 320 in block (2 levels) in create_worker
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.5/lib/concurrent/executor/ruby_thread_pool_executor.rb" line 319 in catch
File "/home/bas/app_7a23cf47-b5d8-406e-b224-7bfa0644ae28/vendor/bundle/ruby/2.6.0/gems/concurrent-ruby-1.1.5/lib/concurrent/executor/ruby_thread_pool_executor.rb" line 319 in block in create_worker
```

## Versions :

* ruby 2.6.3p62
* sidekiq 6.0.4
* sidekiq-pro 5.0.1
* rails 5.2.4.1

## Initializer : 
```
Sidekiq.default_worker_options = { backtrace: 200 }
Sidekiq.options[:max_retries] = 0

Sidekiq.configure_server do |config|
  config.redis = { url: ENV['REDIS_SIDEKIQ_URL'], network_timeout: 5 }
  config.super_fetch! if defined?(Sidekiq::Pro)
end

Sidekiq.configure_client do |config|
  config.redis = { url: ENV['REDIS_SIDEKIQ_URL'], network_timeout: 5 }
end
```
`Sidekiq::RetrySet.new.find_job(self.jid).retry`
# Sidekiq periodic issue

## Overview

We had a periodic Sidekiq job set up and working before we upgraded Rails from 5.2.3 to 6.0.2 (both ruby 2.6.5). After the upgrade we have an odd issue. Doing all the same things in a blank brand new rails project doesn't cause the error to happen.

A copy of our project with a development database backup can be privately shared if desired, given NDA signing.

Ent receipt number: 2199-9755

### With a periodic job registered

If we boot sidekiq WITHOUT any jobs ready to process immediately, all standard/pro/ent features work as expected.

If we boot Sidekiq WITH jobs ready to process each job's START log appears as expected but then nothing else ever happens; referred to below as the 'stuck' state.

### In the 'stuck' state details

If we boot Sidekiq WITH jobs ready to process each job's START log appears as expected but then nothing else ever happens; no DONE log.

Leaving it for 1 hour doesn't cause anything else to happen.

No error is ever shown by our project or by Sidekiq.

```puts``` as the first/only line of the cron job's ```def perform(*args)``` never show up.

We have custom Sidekiq server/client middleware(issue happens whether or not it is commented out) and ```puts``` in the ```def call(...)``` don't fire either.

Sidekiq can only be stopped with a ```kill -9``` command; control-c gives the log "INFO: Bye!" but never finishes quitting.

Starting Sidekiq with a period job registered WITHOUT any jobs ready to process immediately, then enqueing and processing some jobs(works as expected), then quitting Sidekiq works correctly.

The ```ps -ef``` command lists "sidekiq 6.0.4 REDACTED [1 of 10 busy] stopping" after doing command-c.

If the ```config.periodic do |mgr|``` inner block registers no jobs everything works as expected.

```puts``` before and after the ```mgr.register('0 */6 * * *', 'ImHereJob', retry: false)``` in that block appear as expected.

Jobs enqueued after the start of Sidekiq work as expected, with or without the periodic job declaration.

Enabling/disabling other pro/ent features appears to have no affect, the issue happens with no other pro/ent features enabled.

I also did a ```bundle update``` in case another gem was the issue; no change in the issue.

All issue probing on localhost Mac OS X Catalina with Sidekiq cleared with ```Sidekiq.redis { |conn| conn.flushdb }``` between every probe and all rails processes restarted. Rebooting had no affect.


#### app/jobs/im_here_job.rb

```ruby
class ImHereJob
  include Sidekiq::Worker

  def perform(*args)
    # No args expected
    puts "I'm Here!"
  end
end
```

### config/initializers/sidekiq.rb

```ruby
require 'sidekiq/pro/expiry'

# Disable uniqueness in testing, this has the potential to cause much head scratching...
Sidekiq::Enterprise.unique! unless Rails.env.test?

Sidekiq::Client.reliable_push! unless Rails.env.test?

Sidekiq.configure_server do |config|
  config.redis = { url: ENV["REDIS_URL"] }
  config.super_fetch!
  config.reliable_scheduler!

  config.periodic do |mgr|
    puts "I got here1"
    # We had a more complex job here but the simple one fails too
    mgr.register('0 */6 * * *', 'ImHereJob', retry: false) # At 00 minutes of every 6 hours, http://corntab.com/?c=0_*/6_*_*_*
    puts "I got here2"
  end

  config.logger.level = Logger::DEBUG
end
```

### config/sidekiq.yml

```yml
---
:timeout: 25

production:
  :concurrency: 10
:queues:
  - scheduled
  - default
  - text
  - text_low
  - notifications_low
  - active_storage_analysis
  - active_storage_purge
  - background
  - mailers

# This file is ran/used with 'bundle exec sidekiq'
```


### Sidekiq boot log with DEBUG logging

```bash
➜  REDACTED git:(cmc_container_model) ✗ bundle exec sidekiq
2020-01-08T21:20:12.735Z pid=81317 tid=ouix02y95 INFO: Booting Sidekiq 6.0.4 with redis options {:id=>"Sidekiq-server-PID-81317", :url=>"redis://localhost:6379"}
2020-01-08T21:20:12.735Z pid=81317 tid=ouix02y95 INFO: Booting Sidekiq 6.0.4 with redis options {:url=>"redis://localhost:6379", :id=>"Sidekiq-server-PID-81317"}
I got here1
I got here2
Running Stripe in TEST mode: INFO log level
SHRINE DEPRECATION WARNING: The processing plugin is deprecated and will be removed in Shrine 4. If you were using it with versions plugin, use the new derivatives plugin instead.

PRO GRAPHIC

2020-01-08T21:20:13.359Z pid=81317 tid=ouix02y95 INFO: Booted Rails 6.0.2 application in development environment
2020-01-08T21:20:13.359Z pid=81317 tid=ouix02y95 INFO: Running in ruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-darwin18]
2020-01-08T21:20:13.360Z pid=81317 tid=ouix02y95 INFO: Sidekiq Pro 5.0.1 / Sidekiq Enterprise 2.0.1, commercially licensed.
2020-01-08T21:20:13.365Z pid=81317 tid=ouix02y95 DEBUG: Client Middleware: Sidekiq::Enterprise::Unique::Client, Sidekiq::Batch::Client, Sidekiq::Middleware::Expiry::Client
2020-01-08T21:20:13.365Z pid=81317 tid=ouix02y95 DEBUG: Server Middleware: Sidekiq::Limiter::Middleware, Sidekiq::Enterprise::Unique::Server, Sidekiq::Batch::Server, Airbrake::Sidekiq::ErrorHandler, Sidekiq::Middleware::Expiry::Server
2020-01-08T21:20:13.365Z pid=81317 tid=ouix02y95 INFO: Starting processing, hit Ctrl-C to stop
2020-01-08T21:20:13.365Z pid=81317 tid=ouix02y95 DEBUG: {:queues=>["scheduled", "default", "text", "text_low", "notifications_low", "active_storage_purge_jobs", "active_storage_analysis", "active_storage_purge", "background", "mailers"], :labels=>["reliable"], :concurrency=>10, :require=>".", :environment=>nil, :timeout=>25, :poll_interval_average=>nil, :average_scheduled_poll_interval=>5, :error_handlers=>[#<Sidekiq::ExceptionHandler::Logger:0x00007f82470f0b60>], :death_handlers=>[#<Proc:0x00007f82473a1ad0@/Users/REDACTED/.rvm/gems/ruby-2.6.5/gems/sidekiq-pro-5.0.1/lib/sidekiq/batch/death.rb:59 (lambda)>, #<Proc:0x00007f824db04b78@/Users/REDACTED/.rvm/gems/ruby-2.6.5/gems/sidekiq-ent-2.0.1/lib/sidekiq-ent/unique.rb:164 (lambda)>], :lifecycle_events=>{:startup=>[], :quiet=>[#<Proc:0x00007f82472e3968@/Users/REDACTED/.rvm/gems/ruby-2.6.5/gems/sidekiq-pro-5.0.1/lib/sidekiq/pro/config.rb:87>], :shutdown=>[#<Proc:0x00007f8247380830@/Users/REDACTED/.rvm/gems/ruby-2.6.5/gems/sidekiq-ent-2.0.1/lib/sidekiq-ent/election.rb:12>, #<Proc:0x00007f824840e3a0@/Users/REDACTED/.rvm/gems/ruby-2.6.5/gems/sidekiq-ent-2.0.1/lib/sidekiq-ent/periodic.rb:88>, #<Proc:0x00007f824de4c6c8@/Users/REDACTED/.rvm/gems/ruby-2.6.5/gems/sidekiq-pro-5.0.1/lib/sidekiq/pro/super_fetch.rb:163>], :heartbeat=>[], :leader=>[#<Proc:0x00007f824840e3c8@/Users/REDACTED/.rvm/gems/ruby-2.6.5/gems/sidekiq-ent-2.0.1/lib/sidekiq-ent/periodic.rb:77>, #<Proc:0x00007f824849e630@/Users/REDACTED/.rvm/gems/ruby-2.6.5/gems/sidekiq-ent-2.0.1/lib/sidekiq-ent/census.rb:180>]}, :dead_max_jobs=>10000, :dead_timeout_in_seconds=>15552000, :reloader=>#<Sidekiq::Rails::Reloader @app=REDACTEDRails::Application>, :production=>{:concurrency=>10}, :config_file=>"./config/sidekiq.yml", :strict=>true, :backup_limit=>1000, :fetch=>Sidekiq::Pro::SuperFetch, :scheduled_enq=>Sidekiq::Scheduled::FastEnq, :tag=>"REDACTED", :identity=>"MacBook-Pro-3.local:81317:e68c534f5c30"}
2020-01-08T21:20:13.365Z pid=81317 tid=ouiy8dyf5 INFO: SuperFetch activated
2020-01-08T21:20:13.368Z pid=81317 tid=ouiy8abl9 INFO: Managing 1 periodic jobs
2020-01-08T21:20:13.370Z pid=81317 tid=ouix02y95 DEBUG: SuperFetch found 0 super processes
2020-01-08T21:20:13.373Z pid=81317 tid=ouiy8abl9 DEBUG: Licensed user: a2fca63c
2020-01-08T21:20:13.373Z pid=81317 tid=ouiy8abl9 INFO: Gained leadership of the cluster
2020-01-08T21:20:13.373Z pid=81317 tid=ouiy8abl9 DEBUG: Loading Sidekiq Enterprise Lua extensions
2020-01-08T21:20:13.382Z pid=81317 tid=ouiyk7dj5 DEBUG: SuperFetch: Registering super process MacBook-Pro-3.local:81317:e68c534f5c30 with ["queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|scheduled", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|default", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|text", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|text_low", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|notifications_low", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|active_storage_purge_jobs", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|active_storage_analysis", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|active_storage_purge", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|background", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|mailers"]
2020-01-08T21:20:13.382Z pid=81317 tid=ouiyk7dsx class=SendMessageTrainAssignmentJob jid=f756474feaaff64bd25c9b29 INFO: start
2020-01-08T21:20:13.475Z pid=81317 tid=ouiy8dyf5 DEBUG: SuperFetch: Registering super process MacBook-Pro-3.local:81317:e68c534f5c30 with ["queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|scheduled", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|default", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|text", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|text_low", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|notifications_low", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|active_storage_purge_jobs", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|active_storage_analysis", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|active_storage_purge", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|background", "queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|mailers"]
2020-01-08T21:20:27.110Z pid=81317 tid=ouiyk7dnl DEBUG: Loading Sidekiq Pro Lua extensions
```

### Sidekiq stop log 'control-c'

```bash
^C2020-01-08T21:22:11.960Z pid=81317 tid=ouix02y95 DEBUG: Got INT signal
2020-01-08T21:22:11.961Z pid=81317 tid=ouix02y95 INFO: Shutting down
2020-01-08T21:22:11.961Z pid=81317 tid=ouix02y95 INFO: Terminating quiet workers
2020-01-08T21:22:11.963Z pid=81317 tid=ouiyk7dnl INFO: Scheduler exiting...
2020-01-08T21:22:11.966Z pid=81317 tid=ouiy8abl9 INFO: Leader stepping down
2020-01-08T21:22:12.072Z pid=81317 tid=ouix02y95 INFO: Pausing to allow workers to finish...
2020-01-08T21:22:36.906Z pid=81317 tid=ouix02y95 WARN: Terminating 1 busy worker threads
2020-01-08T21:22:36.906Z pid=81317 tid=ouix02y95 WARN: Work still in progress [#<struct Sidekiq::Pro::SuperFetch::Retriever::UnitOfWork queue="queue:default", job="{\"retry\":true,\"queue\":\"default\",\"backtrace\":true,\"class\":\"SendMessageTrainAssignmentJob\",\"args\":[{\"assignment_id\":96,\"scheduled_uid\":\"b34ed33ff5db83d929101a3ccf6dfdeb\"}],\"jid\":\"f756474feaaff64bd25c9b29\",\"created_at\":1578518398.623908,\"enqueued_at\":1578518398.623989}", local_queue="queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|default">]
2020-01-08T21:22:36.907Z pid=81317 tid=ouix02y95 INFO: SuperFetch: Moving job from queue:sq|MacBook-Pro-3.local:81317:e68c534f5c30|default back to queue:default
2020-01-08T21:22:36.911Z pid=81317 tid=ouix02y95 DEBUG: SuperFetch: Unregistering super process MacBook-Pro-3.local:81317:e68c534f5c30
2020-01-08T21:22:36.914Z pid=81317 tid=ouix02y95 DEBUG: SuperFetch: Unregistering super process MacBook-Pro-3.local:81317:e68c534f5c30
2020-01-08T21:22:36.915Z pid=81317 tid=ouix02y95 INFO: Bye!
```

### Gemfile

```ruby
source 'https://rubygems.org'
ruby "2.6.5"

# Run before big releases so we have the latest
# bundle update scout_apm airbrake

git_source(:github) do |repo_name|
  repo_name = "#{repo_name}/#{repo_name}" unless repo_name.include?("/")
  "https://github.com/#{repo_name}.git"
end

# https://devcenter.heroku.com/articles/ruby-support#libraries
# gem 'bundler', '2.0.2'

# Bundle edge Rails instead: gem 'rails', github: 'rails/rails'
gem 'rails', '6.0.2'
# Use sqlite3 as the database for Active Record
# gem 'sqlite3'
# Use Puma as the app server
gem 'puma', '~> 3.7'
# Use SCSS for stylesheets
gem 'sass-rails', '~> 5.0'
# Use Uglifier as compressor for JavaScript assets
gem 'uglifier', '>= 1.3.0'
# See https://github.com/rails/execjs#readme for more supported runtimes
# gem 'therubyracer', platforms: :ruby

# Use CoffeeScript for .coffee assets and views
gem 'coffee-rails', '~> 4.2'
# Turbolinks makes navigating your web application faster. Read more: https://github.com/turbolinks/turbolinks
gem 'turbolinks', '~> 5'
# Build JSON APIs with ease. Read more: https://github.com/rails/jbuilder
gem 'jbuilder', '~> 2.5'
# Use Redis adapter to run Action Cable in production
# gem 'redis', '~> 3.0'
# Use ActiveModel has_secure_password
# gem 'bcrypt', '~> 3.1.7'

# Use Capistrano for deployment
# gem 'capistrano-rails', group: :development
gem 'facebook-messenger'
gem 'omniauth-facebook'
gem 'omniauth-oauth2'
gem 'koala'
gem 'firebase_cloud_messenger'
gem 'language_filter'

# Reduces boot times through caching; required in config/boot.rb
gem 'bootsnap', '>= 1.1.0', require: false
gem "font-awesome-rails"

gem 'validates_timeliness', '~> 5.0.0.alpha3'
gem "unicode-emoji"

group :development, :test do
  # Call 'byebug' anywhere in the code to stop execution and get a debugger console
  gem 'byebug', platforms: [:mri, :mingw, :x64_mingw]
  gem 'rb-readline'
  # Adds support for Capybara system testing and selenium driver
  gem 'capybara', '~> 2.13'
  gem 'selenium-webdriver'
  gem 'dotenv-rails'
end

group :test do
  gem "shrine-memory"
  gem 'action-cable-testing'
end

group :development do
  # Access an IRB console on exception pages or by using <%= console %> anywhere in the code.
  gem 'web-console', '>= 3.3.0'
  gem 'listen', '>= 3.0.5', '< 3.2'
  # Spring speeds up development by keeping your application running in the background. Read more: https://github.com/rails/spring
  gem 'spring'
  gem 'spring-watcher-listen', '~> 2.0.0'

  gem 'derailed'
  gem 'stackprof'
  gem 'daemons'
  gem 'pry-rails'
  gem 'better_errors'
  gem 'annotate'
  gem 'bullet'
  gem 'binding_of_caller'
  gem 'highline'
  gem 'yard', '~> 0.9.9'
end

group :production do
  gem 'rails_12factor'
  gem 'dalli'
  gem 'heroku-deflater'
  gem 'puma_worker_killer'
end

# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]

gem 'pg'
gem 'slim', '3.0.9'
gem 'slim-rails'
gem 'devise'
gem 'devise_invitable'
gem 'impersonator', git: 'https://github.com/REDACTED/impersonator.git'
gem 'gaudi', git: 'https://github.com/REDACTED/gaudi.git', branch: 'v2.0.1'
gem 'remotipart'
gem 'autoprefixer-rails'
gem 'simple_form'
gem 'cocoon', '~> 1.2.14'
gem 'premailer-rails'
gem 'nokogiri'
gem 'validates_phone_number'
gem 'paranoia', '~> 2.2'
gem 'jquery-rails'
source "https://enterprise.contribsys.com/" do
  gem 'sidekiq-pro'
  gem 'sidekiq-ent'
end
gem 'sidekiq', '< 7'
gem 'sinatra', git: 'https://github.com/sinatra/sinatra.git', require: false
gem 'scout_apm'
gem 'airbrake'
gem 'js-routes'
gem 'rack-timeout'
gem 'shrine'
gem 'aws-sdk-s3', '~> 1.2'
gem 'roda'
gem 'image_processing'
gem 'mini_magick'
gem 'fastimage'
gem 'mailgun-ruby'
gem 'active_model_serializers'
gem 'vermeer', git: 'https://github.com/REDACTED/vermeer.git'

gem "ruby-bandwidth", '~> 2.0.1'
gem 'stripe'
gem 'money-rails'
gem 'searchkick'
gem 'faker'
gem 'gibbon'
gem 'groupdate'
gem "chartkick"
gem "barnes"

gem "auto_strip_attributes", "~> 2.5"
gem "validate_url"
gem 'active_storage_validations'

gem 'rails-erd', group: :development

```

### Gemlock

```text
GIT
  remote: https://github.com/REDACTED/gaudi.git
  revision: aeb4dbe9ab7cb3828c0a407463bd7ad1060fac41
  branch: v2.0.1
  specs:
    gaudi (2.0.26)
      bourbon
      inline_svg
      jquery-rails
      kaminari
      momentjs-rails (~> 2.11, >= 2.11.1)
      redcarpet
      slim

GIT
  remote: https://github.com/REDACTED/impersonator.git
  revision: d38c3e2315f6f68783f2b7037a3010021a57a5eb
  specs:
    impersonator (0.1.3)
      devise (>= 4.2)
      rails (>= 5.0)

GIT
  remote: https://github.com/REDACTED/vermeer.git
  revision: 5c42118c26fda3f4bb261a9ca0c4b629882accfc
  specs:
    vermeer (0.2.9)
      devise (>= 4.2)
      jwt (>= 1.5.2)
      rails (>= 5.0.1)

GIT
  remote: https://github.com/sinatra/sinatra.git
  revision: a4dd24add24f2dd0e7299b9e68e12038138294d3
  specs:
    rack-protection (2.0.8.1)
      rack
    sinatra (2.0.8.1)
      mustermann (~> 1.0)
      rack (~> 2.0)
      rack-protection (= 2.0.8.1)
      tilt (~> 2.0)

GEM
  remote: https://rubygems.org/
  remote: https://enterprise.contribsys.com/
  specs:
    action-cable-testing (0.6.0)
      actioncable (>= 5.0)
    actioncable (6.0.2)
      actionpack (= 6.0.2)
      nio4r (~> 2.0)
      websocket-driver (>= 0.6.1)
    actionmailbox (6.0.2)
      actionpack (= 6.0.2)
      activejob (= 6.0.2)
      activerecord (= 6.0.2)
      activestorage (= 6.0.2)
      activesupport (= 6.0.2)
      mail (>= 2.7.1)
    actionmailer (6.0.2)
      actionpack (= 6.0.2)
      actionview (= 6.0.2)
      activejob (= 6.0.2)
      mail (~> 2.5, >= 2.5.4)
      rails-dom-testing (~> 2.0)
    actionpack (6.0.2)
      actionview (= 6.0.2)
      activesupport (= 6.0.2)
      rack (~> 2.0)
      rack-test (>= 0.6.3)
      rails-dom-testing (~> 2.0)
      rails-html-sanitizer (~> 1.0, >= 1.2.0)
    actiontext (6.0.2)
      actionpack (= 6.0.2)
      activerecord (= 6.0.2)
      activestorage (= 6.0.2)
      activesupport (= 6.0.2)
      nokogiri (>= 1.8.5)
    actionview (6.0.2)
      activesupport (= 6.0.2)
      builder (~> 3.1)
      erubi (~> 1.4)
      rails-dom-testing (~> 2.0)
      rails-html-sanitizer (~> 1.1, >= 1.2.0)
    active_model_serializers (0.10.10)
      actionpack (>= 4.1, < 6.1)
      activemodel (>= 4.1, < 6.1)
      case_transform (>= 0.2)
      jsonapi-renderer (>= 0.1.1.beta1, < 0.3)
    active_storage_validations (0.8.5)
      rails (>= 5.2.0)
    activejob (6.0.2)
      activesupport (= 6.0.2)
      globalid (>= 0.3.6)
    activemodel (6.0.2)
      activesupport (= 6.0.2)
    activerecord (6.0.2)
      activemodel (= 6.0.2)
      activesupport (= 6.0.2)
    activestorage (6.0.2)
      actionpack (= 6.0.2)
      activejob (= 6.0.2)
      activerecord (= 6.0.2)
      marcel (~> 0.3.1)
    activesupport (6.0.2)
      concurrent-ruby (~> 1.0, >= 1.0.2)
      i18n (>= 0.7, < 2)
      minitest (~> 5.1)
      tzinfo (~> 1.1)
      zeitwerk (~> 2.2)
    addressable (2.7.0)
      public_suffix (>= 2.0.2, < 5.0)
    airbrake (10.0.0)
      airbrake-ruby (~> 4.12)
    airbrake-ruby (4.12.0)
      rbtree3 (~> 0.5)
    annotate (3.0.3)
      activerecord (>= 3.2, < 7.0)
      rake (>= 10.4, < 14.0)
    ast (2.4.0)
    auto_strip_attributes (2.5.0)
      activerecord (>= 4.0)
    autoprefixer-rails (9.7.3)
      execjs
    aws-eventstream (1.0.3)
    aws-partitions (1.262.0)
    aws-sdk-core (3.86.0)
      aws-eventstream (~> 1.0, >= 1.0.2)
      aws-partitions (~> 1, >= 1.239.0)
      aws-sigv4 (~> 1.1)
      jmespath (~> 1.0)
    aws-sdk-kms (1.27.0)
      aws-sdk-core (~> 3, >= 3.71.0)
      aws-sigv4 (~> 1.1)
    aws-sdk-s3 (1.60.1)
      aws-sdk-core (~> 3, >= 3.83.0)
      aws-sdk-kms (~> 1)
      aws-sigv4 (~> 1.1)
    aws-sigv4 (1.1.0)
      aws-eventstream (~> 1.0, >= 1.0.2)
    barnes (0.0.8)
      multi_json (~> 1)
      statsd-ruby (~> 1.1)
    bcrypt (3.1.13)
    benchmark-ips (2.7.2)
    better_errors (2.5.1)
      coderay (>= 1.0.0)
      erubi (>= 1.0.0)
      rack (>= 0.9.0)
    bindex (0.8.1)
    binding_of_caller (0.8.0)
      debug_inspector (>= 0.0.1)
    bootsnap (1.4.5)
      msgpack (~> 1.0)
    bourbon (4.2.3)
      sass (~> 3.4)
      thor
    builder (3.2.4)
    bullet (6.1.0)
      activesupport (>= 3.0.0)
      uniform_notifier (~> 1.11)
    byebug (11.0.1)
    capybara (2.18.0)
      addressable
      mini_mime (>= 0.1.3)
      nokogiri (>= 1.3.3)
      rack (>= 1.0.0)
      rack-test (>= 0.5.4)
      xpath (>= 2.0, < 4.0)
    case_transform (0.2)
      activesupport
    chartkick (3.3.1)
    childprocess (3.0.0)
    choice (0.2.0)
    cocoon (1.2.14)
    coderay (1.1.2)
    coffee-rails (4.2.2)
      coffee-script (>= 2.2.0)
      railties (>= 4.0.0)
    coffee-script (2.4.1)
      coffee-script-source
      execjs
    coffee-script-source (1.12.2)
    concurrent-ruby (1.1.5)
    connection_pool (2.2.2)
    content_disposition (1.0.0)
    crass (1.0.5)
    css_parser (1.7.1)
      addressable
    daemons (1.3.1)
    dalli (2.7.10)
    debug_inspector (0.0.3)
    derailed (0.1.0)
      derailed_benchmarks
    derailed_benchmarks (0.0.0)
      benchmark-ips (~> 2)
      get_process_mem (~> 0)
      memory_profiler (~> 0)
    devise (4.7.1)
      bcrypt (~> 3.0)
      orm_adapter (~> 0.1)
      railties (>= 4.1.0)
      responders
      warden (~> 1.2.3)
    devise_invitable (2.0.1)
      actionmailer (>= 5.0)
      devise (>= 4.6)
    domain_name (0.5.20190701)
      unf (>= 0.0.5, < 1.0.0)
    dotenv (2.7.5)
    dotenv-rails (2.7.5)
      dotenv (= 2.7.5)
      railties (>= 3.2, < 6.1)
    down (5.0.1)
      addressable (~> 2.5)
    einhorn (0.7.4)
    elasticsearch (7.4.0)
      elasticsearch-api (= 7.4.0)
      elasticsearch-transport (= 7.4.0)
    elasticsearch-api (7.4.0)
      multi_json
    elasticsearch-transport (7.4.0)
      faraday
      multi_json
    erubi (1.9.0)
    execjs (2.7.0)
    facebook-messenger (1.4.1)
      httparty (~> 0.13, >= 0.13.7)
      rack (>= 1.4.5)
    faker (2.10.0)
      i18n (>= 1.6, < 1.8)
    faraday (0.17.3)
      multipart-post (>= 1.2, < 3)
    fastimage (2.1.7)
    ffi (1.11.3)
    firebase_cloud_messenger (0.4.1)
      googleauth (~> 0.6)
      json-schema (~> 2.8)
    font-awesome-rails (4.7.0.5)
      railties (>= 3.2, < 6.1)
    get_process_mem (0.2.5)
      ffi (~> 1.0)
    gibbon (3.3.1)
      faraday (>= 0.9.1)
      multi_json (>= 1.11.0)
    globalid (0.4.2)
      activesupport (>= 4.2.0)
    googleauth (0.10.0)
      faraday (~> 0.12)
      jwt (>= 1.4, < 3.0)
      memoist (~> 0.16)
      multi_json (~> 1.11)
      os (>= 0.9, < 2.0)
      signet (~> 0.12)
    groupdate (4.3.0)
      activesupport (>= 5)
    hashie (3.6.0)
    heroku-deflater (0.6.3)
      rack (>= 1.4.5)
    highline (2.0.3)
    htmlentities (4.3.4)
    http-cookie (1.0.3)
      domain_name (~> 0.5)
    httparty (0.17.3)
      mime-types (~> 3.0)
      multi_xml (>= 0.5.2)
    i18n (1.7.1)
      concurrent-ruby (~> 1.0)
    image_processing (1.10.1)
      mini_magick (>= 4.9.5, < 5)
      ruby-vips (>= 2.0.17, < 3)
    inline_svg (1.6.0)
      activesupport (>= 3.0)
      nokogiri (>= 1.6)
    jbuilder (2.9.1)
      activesupport (>= 4.2.0)
    jmespath (1.4.0)
    jquery-rails (4.3.5)
      rails-dom-testing (>= 1, < 3)
      railties (>= 4.2.0)
      thor (>= 0.14, < 2.0)
    js-routes (1.4.9)
      railties (>= 4)
      sprockets-rails
    json (2.3.0)
    json-schema (2.8.1)
      addressable (>= 2.4)
    jsonapi-renderer (0.2.2)
    jwt (2.2.1)
    kaminari (1.1.1)
      activesupport (>= 4.1.0)
      kaminari-actionview (= 1.1.1)
      kaminari-activerecord (= 1.1.1)
      kaminari-core (= 1.1.1)
    kaminari-actionview (1.1.1)
      actionview
      kaminari-core (= 1.1.1)
    kaminari-activerecord (1.1.1)
      activerecord
      kaminari-core (= 1.1.1)
    kaminari-core (1.1.1)
    koala (3.0.0)
      addressable
      faraday
      json (>= 1.8)
    language_filter (0.3.01)
    listen (3.1.5)
      rb-fsevent (~> 0.9, >= 0.9.4)
      rb-inotify (~> 0.9, >= 0.9.7)
      ruby_dep (~> 1.2)
    loofah (2.4.0)
      crass (~> 1.0.2)
      nokogiri (>= 1.5.9)
    mail (2.7.1)
      mini_mime (>= 0.1.1)
    mailgun-ruby (1.2.0)
      rest-client (~> 2.0.2)
    marcel (0.3.3)
      mimemagic (~> 0.3.2)
    memoist (0.16.2)
    memory_profiler (0.9.14)
    method_source (0.9.2)
    mime-types (3.3.1)
      mime-types-data (~> 3.2015)
    mime-types-data (3.2019.1009)
    mimemagic (0.3.3)
    mini_magick (4.10.1)
    mini_mime (1.0.2)
    mini_portile2 (2.4.0)
    minitest (5.13.0)
    momentjs-rails (2.20.1)
      railties (>= 3.1)
    monetize (1.9.4)
      money (~> 6.12)
    money (6.13.7)
      i18n (>= 0.6.4, <= 2)
    money-rails (1.13.3)
      activesupport (>= 3.0)
      monetize (~> 1.9.0)
      money (~> 6.13.2)
      railties (>= 3.0)
    msgpack (1.3.1)
    multi_json (1.14.1)
    multi_xml (0.6.0)
    multipart-post (2.1.1)
    mustermann (1.1.1)
      ruby2_keywords (~> 0.0.1)
    netrc (0.11.0)
    nio4r (2.5.2)
    nokogiri (1.10.7)
      mini_portile2 (~> 2.4.0)
    oauth2 (1.4.2)
      faraday (>= 0.8, < 2.0)
      jwt (>= 1.0, < 3.0)
      multi_json (~> 1.3)
      multi_xml (~> 0.5)
      rack (>= 1.2, < 3)
    omniauth (1.9.0)
      hashie (>= 3.4.6, < 3.7.0)
      rack (>= 1.6.2, < 3)
    omniauth-facebook (5.0.0)
      omniauth-oauth2 (~> 1.2)
    omniauth-oauth2 (1.6.0)
      oauth2 (~> 1.1)
      omniauth (~> 1.9)
    orm_adapter (0.5.0)
    os (1.0.1)
    paranoia (2.4.2)
      activerecord (>= 4.0, < 6.1)
    parser (2.7.0.2)
      ast (~> 2.4.0)
    pg (1.2.2)
    premailer (1.11.1)
      addressable
      css_parser (>= 1.6.0)
      htmlentities (>= 4.0.0)
    premailer-rails (1.10.3)
      actionmailer (>= 3)
      premailer (~> 1.7, >= 1.7.9)
    pry (0.12.2)
      coderay (~> 1.1.0)
      method_source (~> 0.9.0)
    pry-rails (0.3.9)
      pry (>= 0.10.4)
    public_suffix (4.0.3)
    puma (3.12.2)
    puma_worker_killer (0.1.1)
      get_process_mem (~> 0.2)
      puma (>= 2.7, < 5)
    rack (2.0.8)
    rack-test (1.1.0)
      rack (>= 1.0, < 3)
    rack-timeout (0.6.0)
    rails (6.0.2)
      actioncable (= 6.0.2)
      actionmailbox (= 6.0.2)
      actionmailer (= 6.0.2)
      actionpack (= 6.0.2)
      actiontext (= 6.0.2)
      actionview (= 6.0.2)
      activejob (= 6.0.2)
      activemodel (= 6.0.2)
      activerecord (= 6.0.2)
      activestorage (= 6.0.2)
      activesupport (= 6.0.2)
      bundler (>= 1.3.0)
      railties (= 6.0.2)
      sprockets-rails (>= 2.0.0)
    rails-dom-testing (2.0.3)
      activesupport (>= 4.2.0)
      nokogiri (>= 1.6)
    rails-erd (1.6.0)
      activerecord (>= 4.2)
      activesupport (>= 4.2)
      choice (~> 0.2.0)
      ruby-graphviz (~> 1.2)
    rails-html-sanitizer (1.3.0)
      loofah (~> 2.3)
    rails_12factor (0.0.3)
      rails_serve_static_assets
      rails_stdout_logging
    rails_serve_static_assets (0.0.5)
    rails_stdout_logging (0.0.5)
    railties (6.0.2)
      actionpack (= 6.0.2)
      activesupport (= 6.0.2)
      method_source
      rake (>= 0.8.7)
      thor (>= 0.20.3, < 2.0)
    rake (13.0.1)
    rb-fsevent (0.10.3)
    rb-inotify (0.10.1)
      ffi (~> 1.0)
    rb-readline (0.5.5)
    rbtree3 (0.5.0)
    redcarpet (3.5.0)
    redis (4.1.3)
    remotipart (1.4.4)
    responders (3.0.0)
      actionpack (>= 5.0)
      railties (>= 5.0)
    rest-client (2.0.2)
      http-cookie (>= 1.0.2, < 2.0)
      mime-types (>= 1.16, < 4.0)
      netrc (~> 0.8)
    roda (3.27.0)
      rack
    ruby-bandwidth (2.0.5)
      activesupport
      builder
      faraday
      json
    ruby-graphviz (1.2.4)
    ruby-vips (2.0.17)
      ffi (~> 1.9)
    ruby2_keywords (0.0.2)
    ruby_dep (1.5.0)
    rubyzip (2.0.0)
    sass (3.7.4)
      sass-listen (~> 4.0.0)
    sass-listen (4.0.0)
      rb-fsevent (~> 0.9, >= 0.9.4)
      rb-inotify (~> 0.9, >= 0.9.7)
    sass-rails (5.1.0)
      railties (>= 5.2.0)
      sass (~> 3.1)
      sprockets (>= 2.8, < 4.0)
      sprockets-rails (>= 2.0, < 4.0)
      tilt (>= 1.1, < 3)
    scout_apm (2.6.6)
      parser
    searchkick (4.2.0)
      activemodel (>= 5)
      elasticsearch (>= 6)
      hashie
    selenium-webdriver (3.142.7)
      childprocess (>= 0.5, < 4.0)
      rubyzip (>= 1.2.2)
    shrine (3.2.0)
      content_disposition (~> 1.0)
      down (~> 5.0)
    shrine-memory (0.1.0)
      down
      shrine
    sidekiq (6.0.4)
      connection_pool (>= 2.2.2)
      rack (>= 2.0.0)
      rack-protection (>= 2.0.0)
      redis (>= 4.1.0)
    sidekiq-ent (2.0.1)
      einhorn (>= 0.7.4)
      sidekiq (>= 6.0.2)
      sidekiq-pro (>= 5.0.1)
    sidekiq-pro (5.0.1)
      concurrent-ruby (>= 1.0.5)
      sidekiq (>= 6.0.1)
    signet (0.12.0)
      addressable (~> 2.3)
      faraday (~> 0.9)
      jwt (>= 1.5, < 3.0)
      multi_json (~> 1.10)
    simple_form (5.0.1)
      actionpack (>= 5.0)
      activemodel (>= 5.0)
    slim (3.0.9)
      temple (>= 0.7.6, < 0.9)
      tilt (>= 1.3.3, < 2.1)
    slim-rails (3.2.0)
      actionpack (>= 3.1)
      railties (>= 3.1)
      slim (>= 3.0, < 5.0)
    spring (2.1.0)
    spring-watcher-listen (2.0.1)
      listen (>= 2.7, < 4.0)
      spring (>= 1.2, < 3.0)
    sprockets (3.7.2)
      concurrent-ruby (~> 1.0)
      rack (> 1, < 3)
    sprockets-rails (3.2.1)
      actionpack (>= 4.0)
      activesupport (>= 4.0)
      sprockets (>= 3.0.0)
    stackprof (0.2.15)
    statsd-ruby (1.4.0)
    stripe (5.12.1)
    temple (0.8.2)
    thor (1.0.1)
    thread_safe (0.3.6)
    tilt (2.0.10)
    timeliness (0.4.3)
    turbolinks (5.2.1)
      turbolinks-source (~> 5.2)
    turbolinks-source (5.2.0)
    tzinfo (1.2.6)
      thread_safe (~> 0.1)
    uglifier (4.2.0)
      execjs (>= 0.3.0, < 3)
    unf (0.1.4)
      unf_ext
    unf_ext (0.0.7.6)
    unicode-emoji (2.3.1)
    uniform_notifier (1.13.0)
    validate_url (1.0.8)
      activemodel (>= 3.0.0)
      public_suffix
    validates_phone_number (2.0.1)
    validates_timeliness (5.0.0.beta1)
      timeliness (>= 0.3.10, < 1)
    warden (1.2.8)
      rack (>= 2.0.6)
    web-console (4.0.1)
      actionview (>= 6.0.0)
      activemodel (>= 6.0.0)
      bindex (>= 0.4.0)
      railties (>= 6.0.0)
    websocket-driver (0.7.1)
      websocket-extensions (>= 0.1.0)
    websocket-extensions (0.1.4)
    xpath (3.2.0)
      nokogiri (~> 1.8)
    yard (0.9.24)
    zeitwerk (2.2.2)

PLATFORMS
  ruby

DEPENDENCIES
  action-cable-testing
  active_model_serializers
  active_storage_validations
  airbrake
  annotate
  auto_strip_attributes (~> 2.5)
  autoprefixer-rails
  aws-sdk-s3 (~> 1.2)
  barnes
  better_errors
  binding_of_caller
  bootsnap (>= 1.1.0)
  bullet
  byebug
  capybara (~> 2.13)
  chartkick
  cocoon (~> 1.2.14)
  coffee-rails (~> 4.2)
  daemons
  dalli
  derailed
  devise
  devise_invitable
  dotenv-rails
  facebook-messenger
  faker
  fastimage
  firebase_cloud_messenger
  font-awesome-rails
  gaudi!
  gibbon
  groupdate
  heroku-deflater
  highline
  image_processing
  impersonator!
  jbuilder (~> 2.5)
  jquery-rails
  js-routes
  koala
  language_filter
  listen (>= 3.0.5, < 3.2)
  mailgun-ruby
  mini_magick
  money-rails
  nokogiri
  omniauth-facebook
  omniauth-oauth2
  paranoia (~> 2.2)
  pg
  premailer-rails
  pry-rails
  puma (~> 3.7)
  puma_worker_killer
  rack-timeout
  rails (= 6.0.2)
  rails-erd
  rails_12factor
  rb-readline
  remotipart
  roda
  ruby-bandwidth (~> 2.0.1)
  sass-rails (~> 5.0)
  scout_apm
  searchkick
  selenium-webdriver
  shrine
  shrine-memory
  sidekiq (< 7)
  sidekiq-ent!
  sidekiq-pro!
  simple_form
  sinatra!
  slim (= 3.0.9)
  slim-rails
  spring
  spring-watcher-listen (~> 2.0.0)
  stackprof
  stripe
  turbolinks (~> 5)
  tzinfo-data
  uglifier (>= 1.3.0)
  unicode-emoji
  validate_url
  validates_phone_number
  validates_timeliness (~> 5.0.0.alpha3)
  vermeer!
  web-console (>= 3.3.0)
  yard (~> 0.9.9)

RUBY VERSION
   ruby 2.6.5p114

BUNDLED WITH
   2.0.2
```

Ruby version: 2.5.7
Sidekiq / Pro / Enterprise version(s): Sidekiq Open Source 5.2.6

Hi. I am using the ideas in https://github.com/mperham/sidekiq/wiki/FAQ#how-do-i-ensure-a-job-processes-on-a-given-machine to create a queue per machine. Machines are replaced frequently as part of our deployment and scaling processes and the unique machine queues are empty when that happens.

These empty queues appear to remain in the queues set forever with size 0. They show both in redis in the queues set and in `Sidekiq::Queue.all` and `Sidekiq::Stats.new.queues` output. The queue set therefore continues to grow.

Is this okay or could this potentially cause a future issue with sidekiq, such as a performance issue?

Are there any suggestions for working with this situation or alternative approaches to avoid it?

Perhaps I should be regularly clearing the empty queues to remove them from the set. There may be some complexities with this approach as I wouldn't want to have bad timing around clearing a queue just before a job is added.
When limiting against APIs that use a Leaky Bucket rate limit, it'd be helpful to limit requests in Sidekiq using a Leaky Bucket Limiter.

References:
https://help.shopify.com/en/api/reference/rest-admin-api-rate-limits#general-api-rate-limits
https://en.wikipedia.org/wiki/Leaky_bucket
Ruby version: 2.6.3p62
Sidekiq / Pro / Enterprise version(s): Pro

Are you using an old version? No: 6.0.4

[Active Record Slave](https://github.com/rocketjob/active_record_slave) uses thread-local variables to remember whether it should send queries to the master DB or a slave by default. Their recommendation is to set this default in an initializer – so far so good.

However, due to Sidekiq's multi-threaded setup those defaults aren't shared with the actual worker threads consuming our Sidekiq jobs.

**Question:** is there a way to set per-thread configuration in Sidekiq, like an initialization block or something similar?

Note that I'm not looking to synchronise the thread-local Active Record Slave state between threads – merely set a default upfront.
I want to access the arguments to a job in the sidekiq_retries_exhausted call back is it possible ?

```
class ConcernedJob
  include Sidekiq::Worker

  sidekiq_retries_exhausted do |msg, ex|
    #Access arg1 and arg2 here
  end
  def perform(arg1, arg2)
       #jobs work
  end
end
```



Ruby version: 2.3.7
Sidekiq / Pro / Enterprise version(s): Pro

Please include your initializer and any error message with the full backtrace.

Are you using an old version?
Have you checked the changelogs to see if your issue has been fixed in a later version?

https://github.com/mperham/sidekiq/blob/master/Changes.md
https://github.com/mperham/sidekiq/blob/master/Pro-Changes.md
https://github.com/mperham/sidekiq/blob/master/Ent-Changes.md

It would be nice to be able to override the CSS `@media` queries for light/dark mode so that, regardless of the user's theme choice in their OS, a specified theme is always served. This could take the form of a config option in `config/sidekiq.yml` for example:

```YAML
---
:theme: light
```

This addresses some of the tail comments from #4231.
Ruby version: 2.6.5
Rails version: 6.0.2
Sidekiq version: 6.0.3

Sidekiq initializer:
```
# initializers/sidekiq.rb
Sidekiq.configure_server do |config|
  config.redis = { url: Setting.sidekiq_host }
  config.logger.level = Logger::WARN
end
Sidekiq.configure_client do |config|
  config.redis = { url: Setting.sidekiq_host }
  config.logger.level = Logger::WARN
end
Sidekiq.default_worker_options = { 'backtrace' => true }
```
On the production server, I run Sidekiq through systemd. Guided by the instruction [https://github.com/mperham/sidekiq/blob/master/examples/systemd/sidekiq.service](https://github.com/mperham/sidekiq/blob/master/examples/systemd/sidekiq.service)

My service(/home/deploy/.config/systemd/user/sidekiq-production.service):

```
[Unit]
Description=sidekiq for track-server (production)
After=syslog.target network.target

[Service]
Type=simple
#Environment=RAILS_ENV=production
Environment=MALLOC_ARENA_MAX=2
WorkingDirectory=/var/www/track-server/current
#ExecStart=/usr/local/bin/bundler exec sidekiq -e production
#ExecStart=/home/deploy/.rvm/bin/rvm 2.6.5 do bundle exec sidekiq -e production >> /var/www/track-server/shared/log/sidekiq.log
#ExecStart=/home/deploy/.rvm/bin/rvm 2.6.5 do bundle exec sidekiq -e production 2>&1
#ExecStart=/home/deploy/.rvm/bin/rvm 2.6.5 do bundle exec sidekiq -e production | tee /var/www/track-server/shared/log/sidekiq.log
ExecStart=/bin/bash -lc '/home/deploy/.rvm/bin/rvm 2.6.5 do bundle exec sidekiq -e production'
ExecReload=/bin/kill -TSTP $MAINPID
ExecStop=/bin/kill -TERM $MAINPID

#User=deploy
#Group=deploy
#UMask=0002

RestartSec=1
Restart=on-failure

StandardOutput=syslog
StandardError=syslog
SyslogIdentifier=sidekiq

[Install]
WantedBy=default.target
```
After each change to the service startup file, I run 
`systemctl --user daemon-reload`

The service starts without problems and sidekiq works. But it does not write anything to the log (/var/log/syslog or to another file). I have already tried various startup options (ExecStart), nothing helps.

Tell me, what am I doing wrong?
Ruby version: 2.6.5p114
Sidekiq / Pro / Enterprise version(s): Sidekiq 6.0.3

As Sidekiq does not currently support keyword arguments being used in the `perform_async` method of a `Sidekiq::Worker`, using them should throw an error.

I think this would add a small amount of overhead when enqueuing a new worker, but throwing an error early seems preferable than allowing the unsupported kwargs to be serialized and then having the worker throw the error later.

example:
```ruby
class SomeWorker
  include Sidekiq::Worker

  def perform(some:, args:)
    ...
  end
end

SomeWorker.perform_async(some: 'foo', args: 'bar') # <= Should throw ArgumentError
```