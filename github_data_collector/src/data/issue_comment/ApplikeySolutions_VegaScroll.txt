Getting alpha issue while displaying rows from dequeueReusableCell(..)

Rows are displaying with less alpha value(some transparent).
guard let layout = myCollectionView.collectionViewLayout as? VegaScrollFlowLayout else { return }

keep coming out nil, how can i solve this
Hi ,
I am facing a issue in which first collectionView item disappears while displayed section header in collectionView. 
Flow layout gave two different issue,
1. While Scroll to downward: First Item after each section header disappears.
2. While Scroll to upward: Section header disappears.
See Attachment for issue. 
![ezgif com-video-to-gif](https://user-images.githubusercontent.com/25785697/37648801-f5d4b244-2c55-11e8-8481-ea412d6dfe95.gif)

Hi, I would like use VegaScroll in user-disabled mode and call action on button press to scroll to the next index. It all works fine, only problem is, that the animation is too fast and it doesn't look that great. 

I found only one way to control it in viewDidLoad method:
`collectionView.decelerationRate = UIScrollViewDecelerationRateNormal`

But that doesn't quite do the trick. Is there a way to control the speed of scroll animation directly in VegaScroll class?

Thank you

Can we have (or is there?) an option to don't have the spring animation of the cells? 
Hi, in the README, it says the minimum build target is iOS 9, but when I build the library with Carthage, it shows an error when importing it into a project with minimum build target as iOS 10.3, say gin that minimum build target for the framework is iOS 11.
I'd love to be able to update the `collectionView`'s data on the go. I found this code does the job:

    let range = Range(uncheckedBounds: (0, collectionView.numberOfSections))
    let indexSet = IndexSet(integersIn: range)
    collectionView.reloadSections(indexSet)

However, running this, makes the app crash at line 112 because of an `unexpected nil`:

    override open func layoutAttributesForItem(at indexPath: IndexPath) -> UICollectionViewLayoutAttributes? {
        return dynamicAnimator.layoutAttributesForCell(at: indexPath)!
    }

I tried removing the `!` to prevent the force-unwrapping of a nil variable, but that resulted in a generic `terminating with uncaught exception of type NSException`.

Any way we can update the data at runtime while viewing the `collectionView`?
I'm thinking of some cool animation: the cell that's to be removed scales down, then the cells below move up smoothly w/ a `.easeOut` curve. Would be awesome. Thanks!
I got this message when I added and ran a test project:

UICollectionViewFlowLayout has cached frame mismatch for index path <NSIndexPath: 0xc000000000000016> {length = 2, path = 0 - 0} - cached value: {{20, 10.083407407407407}, {374, 84}}; expected value: {{20, 10}, {374, 84}}
This is likely occurring because the flow layout subclass Coin.VegaScrollFlowLayout is modifying attributes returned by UICollectionViewFlowLayout without copying them.

Any idea how to fix this?  The one solution I found didn't work:

override func finalLayoutAttributesForDisappearingItemAtIndexPath(itemIndexPath: NSIndexPath) -> UICollectionViewLayoutAttributes? {
    let attr = self.layoutAttributesForItemAtIndexPath(itemIndexPath)?.copy() as! UICollectionViewLayoutAttributes
    // manipulate the attr
    return attr
}
If I want to use this on landscape view, specifically for iPad, where can I make the adjustment so that the cells stay centered?