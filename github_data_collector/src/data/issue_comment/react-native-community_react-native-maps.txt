<!--
PLEASE DON'T DELETE THIS TEMPLATE UNTIL YOU HAVE READ THE FIRST SECTION.

**What happens if you SKIP this step?**

Your pull request will NOT be evaluated!

PLEASE NOTE THAT PRs WITHOUT THE TEMPLATE IN PLACE WILL BE CLOSED RIGHT FROM THE START.

Thanks for helping us help you!
-->

### Does any other open PR do the same thing?

<!--
**Please keep in mind that we apply the FIFO rule for PRs, so if your PR comes after an existing one and there is no compelling reason to merge it instead of the existing one it will be discarded!**

If another PR exists that has similar scope to yours, please specify why you opened yours.
This could be one of the following (but not limited to)

 - the previous PR is stalled, as it's really old and the author didn't continue working on it
 - there are conflicts with the `master` branch and the author didn't fix them
 - the PR doesn't apply anymore (please specify why)
 - my PR is better (please specify why)
 -->

### What issue is this PR fixing?

Add tag to avoid bug (install from master branch) when install with :podspec instead :path 

### How did you test this PR?

<!--
Please let us know how you have verified that your changes work.

Ideally, your PR should contain a step-by-step test plan, so that reviewers can easily verify your changes.

Your PR will have much better chances of being merged if it is straightforward to verify.

Some questions you might want to think about:

- Which platform (eg. Android/iOS) & Maps API (eg. Google/Apple) does this change affect, if any?
- Did you test this on a real device, or in a simulator?
- Are there any platforms you were not able to test?
-->

(please answer here)

<!--
Thanks for your contribution :)
-->

Is there any way to make the marker fixed on one location?

I want the ability to be able to move the map but the location of marker stays fixed in the center of the screen even on dragging the map and the location of the marker gives the coordinates for region?

I have tried a lot to do it but coming up short. Any help would be greatly appreciated!
# Bug

<!--
  Please provide a clear and concise description of what the bug is.
  Include screenshots if needed.
  Please test using the latest release of the library, as maybe said bug has been already fixed.
  If the library has multiple install methods, describe installation method (e.g., pod, not pod, with jetifier etc)
-->
React Native Environment Info:
    System:
      OS: macOS 10.14.5
      CPU: (4) x64 Intel(R) Core(TM) i5-6360U CPU @ 2.00GHz
      Memory: 34.85 MB / 8.00 GB
      Shell: 3.2.57 - /bin/bash
    Binaries:
      Node: 10.13.0 - /usr/local/bin/node
      Yarn: 1.13.0 - /usr/local/bin/yarn
      npm: 6.4.1 - /usr/local/bin/npm
      Watchman: 4.9.0 - /usr/local/bin/watchman
    SDKs:
      iOS SDK:
        Platforms: iOS 12.4, macOS 10.14, tvOS 12.4, watchOS 5.3
      Android SDK:
        API Levels: 18, 21, 22, 23, 24, 25, 26, 27, 28, 29
        Build Tools: 23.0.1, 23.0.2, 23.0.3, 25.0.0, 25.0.2, 25.0.3, 26.0.1, 26.0.2, 26.0.3, 27.0.1, 27.0.3, 28.0.0, 28.0.1, 28.0.2, 28.0.3, 29.0.0, 29.0.0, 29.0.1, 29.0.2
        System Images: android-19 | Google APIs Intel x86 Atom, android-23 | Intel x86 Atom_64, android-23 | Google APIs Intel x86 Atom, android-26 | Google Play Intel x86 Atom, android-27 | Google APIs Intel x86 Atom, android-27 | Google Play Intel x86 Atom, android-28 | Intel x86 Atom, android-28 | Intel x86 Atom_64, android-28 | Google APIs Intel x86 Atom, android-28 | Google APIs Intel x86 Atom_64, android-28 | Google Play Intel x86 Atom, android-28 | Google Play Intel x86 Atom_64
    IDEs:
      Android Studio: 3.5 AI-191.8026.42.35.5900203
      Xcode: 10.3/10G8 - /usr/bin/xcodebuild
    npmPackages:
      react: 16.8.6 => 16.8.6 
      react-native: 0.59.9 => 0.59.9 
    npmGlobalPackages:
      react-native-cli: 2.0.1
      react-native-create-library: 3.1.2

Library Version:  "react-native-maps": "0.26.1",

1. When I changed the code in 855 in AirMapView.java with as shown below code, it must be fixed.

int width = getResources().getDisplayMetrics().widthPixels;
int height = getResources().getDisplayMetrics().heightPixels;
int padding = (int) (width * 0.12); // offset from edges of the map 12% of screen

CameraUpdate cu = CameraUpdateFactory.newLatLngBounds(bounds, width, height, padding);

Describe what you expected to happen:

1. I expect not happen this kind of crash.


The raw text of it : 

Fatal Exception: java.lang.IllegalStateException: no included points
       at com.google.android.gms.common.internal.Preconditions.checkState + 29(:29)
       at com.google.android.gms.maps.model.LatLngBounds$Builder.build + 21(:21)
       at com.airbnb.android.react.maps.AirMapView.fitToCoordinates + 885(AirMapView.java:885)
       at com.airbnb.android.react.maps.AirMapManager.receiveCommand + 342(AirMapManager.java:342)
       at com.airbnb.android.react.maps.AirMapManager.receiveCommand + 28(AirMapManager.java:28)
       at com.facebook.react.uimanager.NativeViewHierarchyManager.dispatchCommand + 761(NativeViewHierarchyManager.java:761)
       at com.facebook.react.uimanager.UIViewOperationQueue$DispatchCommandOperation.execute + 309(UIViewOperationQueue.java:309)
       at com.facebook.react.uimanager.UIViewOperationQueue$1.run + 917(UIViewOperationQueue.java:917)
       at com.facebook.react.uimanager.UIViewOperationQueue.flushPendingBatches + 1025(UIViewOperationQueue.java:1025)
       at com.facebook.react.uimanager.UIViewOperationQueue.access$2600 + 46(UIViewOperationQueue.java:46)
       at com.facebook.react.uimanager.UIViewOperationQueue$DispatchUIFrameCallback.doFrameGuarded + 1085(UIViewOperationQueue.java:1085)
       at com.facebook.react.uimanager.GuardedFrameCallback.doFrame + 29(GuardedFrameCallback.java:29)
       at com.facebook.react.modules.core.ReactChoreographer$ReactChoreographerDispatcher.doFrame + 166(ReactChoreographer.java:166)
       at com.facebook.react.modules.core.ChoreographerCompat$FrameCallback$1.doFrame + 84(ChoreographerCompat.java:84)
       at android.view.Choreographer$CallbackRecord.run + 947(Choreographer.java:947)
       at android.view.Choreographer.doCallbacks + 761(Choreographer.java:761)
       at android.view.Choreographer.doFrame + 693(Choreographer.java:693)
       at android.view.Choreographer$FrameDisplayEventReceiver.run + 935(Choreographer.java:935)
       at android.os.Handler.handleCallback + 873(Handler.java:873)
       at android.os.Handler.dispatchMessage + 99(Handler.java:99)
       at android.os.Looper.loop + 214(Looper.java:214)
       at android.app.ActivityThread.main + 7094(ActivityThread.java:7094)
       at java.lang.reflect.Method.invoke(Method.java)
       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run + 494(RuntimeInit.java:494)
       at com.android.internal.os.ZygoteInit.main + 975(ZygoteInit.java:975)
# Bug
I have about 800/1000+ markers on map due to this huge data rendering nothing is working properly as header buttons click, refresh,...etc.

Please suggest we how can we resolve this issues?...

## Environment info
React native info output:
"react-native": "0.60.5",
"react": "16.8.6",
"react-native-maps": "^0.25.0",
"react-native-maps-directions": "^1.7.0",

## Steps To Reproduce
1> Fetching geo points from Api and rendering on mapView
2> After rendered successfully header buttons onClick taking lots of time to perform action
3> Facing when getting a large amount of data from Api as 800/1000 points of array 

Describe what you expected to happen:
1> In case of large amount of data header buttons click should be work smoothly
2> Large data should be render smoothly on map

## Reproducible sample code
<MapView
                        initialRegion={this.state.region}
                        style={StyleSheet.absoluteFill}
                        ref={c => this.mapView = c}
                        pitchEnabled={true}
                        showsCompass={true}
                        liteMode={false}
                        showsBuildings={true}
                        showsTraffic={true}
                        showsIndoors={true}
                        loadingEnabled={true}
                        showsUserLocation={true}
                        followUserLocation={true}
                        showsMyLocationButton={true}
                        zoomEnabled={true}
                        minZoomLevel={5}
                        mapType={this.state.mapViewTitle}
                    >
 {this.state.coordinates.map((coordinate, index) =>
                            <MapView.Marker
                                key={`coordinate_${index}`}
                                coordinate={coordinate}
                                tracksViewChanges={this.state.tracksViewChanges}
                            //pinColor={'blue'}
                            >
                                {(coordinate.vehicle_color == 1 && !this.state.checkPoints) ? (<Animatable.View
                                    animation="pulse"
                                    easing="ease-in-out"
                                    iterationCount="infinite"
                                    style={{
                                        width: 50,
                                        height: 50,
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                    }}><Image
                                        source={require('../../images/truck3.png')}
                                        style={{
                                            width: 40,
                                            height: 45,
                                            resizeMode: 'contain',
                                        }}
                                    /></Animatable.View>) : null}
                                {(coordinate.vehicle_color == 2 && !this.state.checkPoints) ? (<Animatable.View
                                    animation="pulse"
                                    easing="ease-in-out"
                                    iterationCount="infinite"
                                    style={{
                                        width: 50,
                                        height: 50,
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                    }}><Image
                                        source={require('../../images/truck5.png')}
                                        style={{
                                            width: 40,
                                            height: 45,
                                            resizeMode: 'contain',
                                        }}
                                    /></Animatable.View>) : null}
                                {(coordinate.vehicle_color == 3 && !this.state.checkPoints) ? (<Animatable.View
                                    animation="pulse"
                                    easing="ease-in-out"
                                    iterationCount="infinite"
                                    style={{
                                        width: 50,
                                        height: 50,
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                    }}><Image
                                        source={require('../../images/truck1.png')}
                                        style={{
                                            width: 40,
                                            height: 45,
                                            resizeMode: 'contain',
                                        }}
                                    /></Animatable.View>) : null}
                                {(coordinate.vehicle_color == 4 && !this.state.checkPoints) ? (<Animatable.View
                                    animation="pulse"
                                    easing="ease-in-out"
                                    iterationCount="infinite"
                                    style={{
                                        width: 50,
                                        height: 50,
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                    }}><Image
                                        source={require('../../images/truck2.png')}
                                        style={{
                                            width: 40,
                                            height: 45,
                                            resizeMode: 'contain',
                                        }}
                                    /></Animatable.View>) : null}
                                {(coordinate.vehicle_color == 5 && !this.state.checkPoints) ? (<Animatable.View
                                    animation="pulse"
                                    easing="ease-in-out"
                                    iterationCount="infinite"
                                    style={{
                                        width: 50,
                                        height: 50,
                                        justifyContent: 'center',
                                        alignItems: 'center',
                                    }}><Image
                                        source={require('../../images/truck4.png')}
                                        style={{
                                            width: 40,
                                            height: 45,
                                            resizeMode: 'contain',
                                        }}
                                    /></Animatable.View>) : null}

                                <MapView.Callout
                                    style={{ margin: 5 }}
                                    onPress={() => this._callHere(coordinate.driverphone)}
                                >
                                    <View style={styles.mainViewStyle}>
                                        <CardView
                                            cardElevation={2}
                                            cardMaxElevation={2}
                                            cornerRadius={5}
                                            style={styles.cardViewStyle}
                                        >
                                            <View style={styles.viewStyle}>
                                                <Text style={styles.txtStyle}>{coordinate.title}</Text>
                                                <Text style={styles.txtStyle1}>{'Last updated:  ' + coordinate.lastupdated}</Text>
                                                <Text style={styles.txtStyle1}>{'Distance:  ' + coordinate.distance + ' km'}</Text>
                                                <Text style={styles.txtStyle1}>{'Location:  ' + coordinate.locTxt}</Text>
                                                <Text style={styles.txtCallStyle}>{'Click to call driver:  ' + coordinate.driverphone}</Text>
                                            </View>
                                        </CardView>
                                    </View>

                                </MapView.Callout>
                            </MapView.Marker>
                        )}
                    </MapView>

Please suggest we how can we handle large amount of data on mapView?...

Regards,
Bally Sharma

Hi, I am trying to work with the takeSnapshot method, but the set width and height props do not have any effect on the snapshot. Can someone kindly let me know if I am doing it wrong. 
I would also like to know if its possible to crop the snapshot to just the region and location?
Below is the code and image sample, showing it did not assign the width and height.

              takeSnapshot() {
                const { location: { longitude, latitude, }, result } = this.state;

                const snapshot = this.mapViewSnap.takeSnapshot({
                  width: 100,      // optional, when omitted the view-width is used
                  height: 100,     // optional, when omitted the view-height is used
                  region: {
                    latitude,
                    longitude,
                    latitudeDelta: LATITUDEDELTA,
                    longitudeDelta: LONGITUDEDELTA,
                  },
                  // iOS only, optional region to render
                  format: 'jpg',   // image formats: 'png', 'jpg' (default: 'png')
                  quality: 0.8,    // image quality: 0..1 (only relevant for jpg, default: 1)
                  result: 'file'   // result types: 'file', 'base64' (default: 'file')
                });
                snapshot.then((uri) => {
                  Firebase.shared.updateImage({
                    image: uri
                  }).then(() => {
                    console.log('sucesso');
                  }).catch((e) => {
                    console.log(e);
                  });
                });
            }

![image](https://user-images.githubusercontent.com/51086859/72211637-0bdb0880-34cf-11ea-9297-8d6403712757.png)

I use apple maps it doesn't start on the initial region I provided.

Here's a sample code.

` <MapView style={styles.map}

      provider={(this.props.selectedMap.selectedMap === 'AppleMaps') ? MapView.PROVIDER_DEFAULT : MapView.PROVIDER_GOOGLE}
      loadingIndicatorColor={"#ffbbbb"}
      loadingBackgroundColor={"#ffbbbb"}
      initialRegion={region}
      onRegionChangeComplete={this.onRegionChange}
      rotateEnabled={false}
      loadingEnabled={true}
      minZoomLevel={6}
      maxZoomLevel={19}
      ref={ref => (this.mapView = ref)}
      onMapReady={this.goToInitialRegion.bind(this)}
    >`
If i use google maps, initialRegion work fine but when I use appleMaps it doesn't start on the initial region I provided.

Here's a sample code.

`        <MapView style={styles.map}

          provider={(this.props.selectedMap.selectedMap === 'AppleMaps') ? MapView.PROVIDER_DEFAULT : MapView.PROVIDER_GOOGLE}
          loadingIndicatorColor={"#ffbbbb"}
          loadingBackgroundColor={"#ffbbbb"}
          initialRegion={region}
          onRegionChangeComplete={this.onRegionChange}
          rotateEnabled={false}
          loadingEnabled={true}
          minZoomLevel={6}
          maxZoomLevel={19}
          ref={ref => (this.mapView = ref)}
          onMapReady={this.goToInitialRegion.bind(this)}
        >`
# Question

I want to update the CSR value for loading the map like I want to load yandex map through `UrlTile` , but to show marker on exact location I need to change the CSR value to `CRS.EPSG3395` which I found no help to do this with this library. Any help in this regard is appreciated   

# Question

Is it possible to entirely disable touch events on certain markers? I have a map where I'm rendering two types of markers and geojson. The larger regular style red pins are touchable and handle onPress but the smaller custom orange dot markers should do nothing at all.

However, because they are often clumped together tapping what you think is a red marker actually centers the map onto a nearby orange one.

I'd like to be able to disable all touch events on the small orange ones so that tapping the red ones is easier.

![rnm_markers](https://user-images.githubusercontent.com/1535972/71774946-39561c80-2fcc-11ea-9c42-d3ea9d3f1111.png)


Is it possible to update the Google maps pod file  from GoogleMaps 3.2.0 to 3.7.0.

```
-   s.dependency 'GoogleMaps', '3.2.0'

+   s.dependency 'GoogleMaps', '3.7.0'
```
