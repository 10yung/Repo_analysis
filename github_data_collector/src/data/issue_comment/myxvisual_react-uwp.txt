### Problem description

### Link to minimal working code that reproduces the issue
### Versions

- React-UWP:
- React:
- Browser:

https://github.com/myxvisual/react-uwp/blob/096b8239b2b864db8658656a18a595d082becc32/src/NavigationView/index.tsx#L151

This piece of code seems wrong to me if used with this piece of code:

```javascript
<NavigationView
    pageTitle="Test"
    background="#FF0000"
    defaultExpanded={ true }
    expandedWidth={ 260 }
    isControlled={ true }
/>
```

it makes the `NavigationView` background disappear and first the remaining menu will overlay the content (until clicked / unfocused) and at the same time the whole layout is moved in the original place of the `NavigationView`. Or in other words, the logic seems inverted.

Also another issue is when the `currInitWidth: 0` is set because then these steps will remove the element completely from user's view and it can't be retrieved back without dev tools:

1. Load with 1280+ width
2. Resize to <1280
3. Resize back to 1280+

Also, unless either removed completely or replaced with original `props.initWidth` it'll just overwrite user's value which undesired.
I am working on NextJS project (server side rendering)

On link
https://www.react-uwp.com/server-side-rendering

Sample code says
`needGenerateAcrylic={false} // if using SSR, set this config to false, using fallback color`

But that's all the information I can really find. 
So I have some questions:
1. Why do I need to set to false even though acrylic background is display correctly with flag set to true
2. Where do I set a fallback colour? 

Thanks

**Uncaught TypeError: Cannot convert undefined or null to object**
When trying to change theme using local state(Toggling between 'dark' and 'light' ) gives error and UI breaks when loading page with new theme.  

**To Reproduce**
Steps to reproduce the behavior:
1. Create dropdown to choose between themes (values ['dark', 'light'])
2. Add onchange handler which will toggle value between dark and light. 
3. pass this theme string in state to getTheme [ Imported from 'react-uwp/Theme'] to change theme dyanamically.
4. On dropdown change this error fired.

**Expected behavior**
It should allow to change theme dyanamically.

**Additional context**
Toggle state between 'dark' and 'light' and passing it to getTheme for react-uwp/theme causes error breaking the UI.

Hi, myxvisual

I read the source code of this project recently.  And I have a question about icon component, what the difference between text and span to render icon ? 

```
<PseudoClasses
        {...attributes}
        onMouseEnter={this.handleMouseEnter}
        onMouseLeave={this.handleMouseLeave}
        {...styleClasses}
      >
        {useSVGElement ? (
          <text>{icon}</text>
        ) : (
          <span>{icon}</span>
        )}
</PseudoClasses>
```
I need a way to call and show Toast notifications by code, i mean something like the ant design notification 
https://ant.design/components/notification/

```javascript
import { Button, notification } from 'antd';

const openNotification = () => {
  notification.open({
    message: 'Notification Title',
    description:
      'This is the content of the notification. This is the content of the notification. This is the content of the notification.',
    onClick: () => {
      console.log('Notification Clicked!');
    },
  });
};

ReactDOM.render(
  <Button type="primary" onClick={openNotification}>
    Open the notification box
  </Button>,
  mountNode,
);
```
so I don't have to create che html , and i can show as many as Toast i need
it is possible ?

On TimePicker component the "onChangeTime" callback does not work, it seems that it does not exist. I tried with simple console.log in order to show hours and minutes but nothing was printed.

**How it should work**
onChangeTime={(hours, minutes) => {}}

Anyway, many thanks for this library!
**Describe the bug**
I intend to add onClick event in NavigationView, which uses SplitViewCommand as it children elements. So it will be like this as the examples:
```js
const navigationTopNodes =
      items.map(item => {
        return <SplitViewCommand icon={item.icon} label={item.label} onClick={()=>{console.log("<NavigatorBar> onClick", item.label)}}/>  
      });
...
<NavigationView
          ....
          navigationTopNodes={navigationTopNodes}
         ....
        >
          <SplitViewPane />
</NavigationView>  
```
But it not working, so i trace the code here in SplitViewCommand:
```js
in SplitViewCommand.prototype.render = function () {
....
return (React.createElement(PseudoClasses_1.default, __assign({}, rootStyleClasses),
            React.createElement("div", __assign({}, attributes),
                (visited && !isTenFt) ? React.createElement("div", __assign({}, visitedBorderStyleClasses)) : null,
                React.createElement(Icon_1.default, __assign({}, iconStyleClasses), icon),
                label && (React.createElement("div", __assign({}, labelStyleClasses), label)))));
}:
```
the "onClick" props set as "rest attributes" ans applied to 2nd level div, I'm not sure what this used, but it not work for the answer the click event.
So I tried move the "rest attributes" of the root div, it's working:
```js
return (React.createElement(PseudoClasses_1.default, __assign({attributes}, rootStyleClasses),
            React.createElement("div", __assign({}, /*attributes*/{}),
                (visited && !isTenFt) ? React.createElement("div", __assign({}, visitedBorderStyleClasses)) : null,
                React.createElement(Icon_1.default, __assign({}, iconStyleClasses), icon),
                label && (React.createElement("div", __assign({}, labelStyleClasses), label)))));
```

**Expected behavior**
onClick event working for NavigationView

**Desktop (please complete the following information):**
 - OS: Windows 10
 - Browser: "electron": "^4.0.4",

**Additional context**
I also see the onMouseEnter and onMouseLeave props are also not used here?

Thanks.

### Problem description
I saw there is mark theme as the "ReactUWP.ThemeType", but i don't see anywhere import the ReactUWP, what's the mean of this?

When i comment in git, it will show this is not definition:
15:21  error  'ReactUWP' is not defined  no-undef

```js
export default class ShellComponent extends React.Component {
    static contextTypes = { theme: PropTypes.object };
    context: { theme: ReactUWP.ThemeType };
     ....
```

### Link to minimal working code that reproduces the issue
### Versions

- React-UWP:
- React:
- Browser:

The problem is not at compile be when i commit the code to repository, it will occur the error
### Problem description

The icon size in this page is too small:
![image](https://user-images.githubusercontent.com/1384036/52050083-61eac080-258a-11e9-858b-250a0c258740.png)

The correct size should be:
![image](https://user-images.githubusercontent.com/1384036/52050109-762ebd80-258a-11e9-91cd-3f140d1fa89c.png)

The icons in FDS is based on a 32\*32 grid and 2px width stroke, to make the display result in a pixel perfect style, the image size should be 16\*16 32\*32 or 64\*64, any size not fit the grid will looks blur.

### Versions
- React-UWP: Same version as react-uwp.com
- React: Same above
- Browser: Microsoft Edge 44.17763.1.0
