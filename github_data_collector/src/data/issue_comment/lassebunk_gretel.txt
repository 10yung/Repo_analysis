Since the condition of link_current is not judged, the last url becomes current unconditionally.
remove warning message like this.
```
/home/travis/build/suzan2go/gretel/lib/gretel/crumb.rb:16: warning: `*' interpreted as argument prefix
/home/travis/build/suzan2go/gretel/lib/gretel/renderer.rb:84: warning: `*' interpreted as argument prefix
/home/travis/build/suzan2go/gretel/lib/gretel/renderer.rb:117: warning: `*' interpreted as argument prefix
/home/travis/build/suzan2go/gretel/lib/gretel/renderer.rb:129: warning: `*' interpreted as argument prefix
```

Hi, Thanks for this nice gem !

Our apps are running with Ruby 2.4.1 and Rails 5.0,  so I want to make sure this gem tested against newer versions of Ruby and Rails in the `.travis.yml` file.
And, I think we can drop support for EOL Ruby and Rails versions.
This is to add the title to the link wrapper. just in case if the user has very long text in link.


Since June 2011, several major search engines have been collaborating on a new common data vocabulary called schema.org.
Use cases from - https://developers.google.com/search/docs/data-types/breadcrumbs

When I used this gem, the logs noted deprecation warning. So I fixed README to avoid being pointed out.  

```
[Gretel] Calling `breadcrumbs` with a block has been deprecated and will be removed in Gretel version 4.0. Please use `tap` instead. Example:

 breadcrumbs(autoroot: false).tap do |links|
    if links.any?
      # process links here
    end
 end
```


This is somewhat similar to https://github.com/lassebunk/gretel/issues/48. 

I have 2 different namespace (`application` and `admin`), hence created 2 breadcrumbs file (`admin.rb` and `application.rb`) with 2 different root paths: `admin_root` and `root` respectively. Breadcrumbs rendering in application works like a charm. However in admin, it doesn't render `admin_root` but renders `root` instead. There is solution to disable `autoroot` but it doesn't look good to me. Therefore I forked the repo and modified a little bit to accept additional option `root_key`. When present, with the help of `autoroot`, it will render the desired `root`.
