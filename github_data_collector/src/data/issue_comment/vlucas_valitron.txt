How is it possible to implement such a check:
If there are products, then there must be 1 out of 2 indices - positive or negative, for example

products is absent - true
products[negative] = [1,2,3] -? true
products[positive] = [4,5,6] -> true
products[negative] = [1,2,3] AND products[positive] = [4,5,6]  -> true
products[blablabla] = [4,5,6] -> false (fail index)
products - false (nothing index)
```
@$v = new Valitron\Validator(['alias' => '-555']);
$v->rules([
	'integer' => [
		['alias']
		]
	]);
$v->validate()
```
Validation always returns true. It's negative value, so without true in alias array it must return false.
Hi, I am trying to create a new rule. The rule is that either one of two given parameters should be provided.

This is what I have as of now.

```
$validator = new Validator([
        'facilityId' => $request->getArg('facilityId'),
	 'wingId' => $request->getArg('wingId'),
]);

$validator->addRule('eitherOr', function($field, $value, array $params, array $fields) {
	return isset($fields['facilityId']) || isset($fields['wingId']);
}, 'Either Wing ID or Facility ID is required.');

$validator->rule('eitherOr', ['facilityId', 'wingId']);
```

The rule never gets executed.

This is the url to I am using to call:
servicesroot.php?module=Wing&action=get&rooId=2
I tried to validate` &action=get&id=555555555555` and it fails. But `&action=get&id=555` works fine. I keep getting `Id must be an integer`
i'm not using field name in massage. so i need this option.
I had some validation failures of boolean fields, because they are of type string coming from the request. I had a better result using filter_var.

return filter_var($value, FILTER_VALIDATE_BOOLEAN, FILTER_NULL_ON_FAILURE) !== null;
fields with DOT (.) not working
                 
$validationBody->rule('requiredWithout', 'card.id', ['card.name', 'card.expiryMonth', 'card.expiryYear', 'card.number']);
                    $validationBody->rule('requiredWithout', 'card.number', ['card.id'])->rule('numeric', 'card.number');
                    $validationBody->rule('requiredWithout', 'card.name', ['card.id'])->rule('alphaNumSpace', 'card.name');
Hi, 
When creating subset rules dynamically and pass the subset array (the second parameter) and is empty, I receive a php warning.

What I try to do is something like this
`$v->rule('subset', 'colors', []);`

Same problem when do it with `$v->rules`.

![Screenshot from 2019-06-05 16-49-20](https://user-images.githubusercontent.com/50920303/58985556-f91e8980-87b1-11e9-964e-8712b45275d5.png)
![Screenshot from 2019-06-05 16-49-48](https://user-images.githubusercontent.com/50920303/58985566-0176c480-87b2-11e9-973f-4cb3e16c7aed.png)


### How to reproduce
When you try to validate an URL containing an object like this example:

`src/bestFileName.php`
```php
$validator = new Validator(['someUrl' => new \stdClass()]);

$validator->rule('url', 'someUrl');

if (!$validator->validate()) {
    die('You are a bad person!');
}
```

### Expected Behavior
You should get the error message: `You are a bad person!`.

### Actual Behavior
You will get an exception message: `strpos() expects parameter 1 to be string, object given`.

*Stacktrace*:
```
/project/vendor/vlucas/valitron/src/Valitron/Validator.php:612
/project/vendor/vlucas/valitron/src/Valitron/Validator.php:1081
/project/src/bestFileName.php:5
```

Warning: explode() expects parameter 2 to be string, array given in /home/baihe/xiangyang_rpc-service/application/library/Util/Validator.php on line 981