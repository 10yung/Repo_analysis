Does this also work for a 2D Laser Range Finder?

How can a 2D finder produce a depth image as shown in your tech report?
Hello,
I had trying to launch this tool on test data, but Matlab outputs error:
```
Enter base name of scans (without numbers or suffix): laser_target
Enter suffix of scan files ([] = "xyz"): 
Reference to non-existent field 'active_images'.

Error in lasercamcalib>search_scans_bn_Callback (line 186)
    handles.camcalibparams.image_numbers(find(handles.camcalibparams.active_images)));

Error in gui_mainfcn (line 95)
        feval(varargin{:});

Error in lasercamcalib (line 56)
    gui_mainfcn(gui_State, varargin{:});

Error in
matlab.graphics.internal.figfile.FigFile/read>@(hObject,eventdata)lasercamcalib('search_scans_bn_Callback',hObject,eventdata,guidata(hObject)) 
Error while evaluating UIControl Callback.
```

What I should do?

Regards,
Hello,
when I use this new fuction, 3D display, input: p
error: double type can't match input param with fuction pointCloud .
Thanks.
Hello!

I am using your toolbox to calibrate with VLP-16. Since it is a long range lidar, it has an error rate which seems to bit a bit bigger than the device used in test sets - around +-2 cm. The procedure goes smooth, but the result is simply bad, and the fit as visually confirmed makes no sense. Interestingly enough, some samples even report a reflection where there is none, making me believe that the program has an issue with extracting the target plane.

Can you comment on this? How precise must this scanner be?
hello, i'm using velodyne VLP-16 LiDAR.

when i do calibrate camera and lidar data,
i have a error message about 

'Index exceeds matrix dimensions.

Error in ObtainPlanePoint (line 18)
        index_samples = temp(1:n_samples);

Error in select_plane_from_point_cloud/continue_callback (line 30)
            [theta, alpha, minError, inliers] = ObtainPlanePoint(pc.Location,cur_info.Position);
 
Error using uiwait (line 81)
Error while evaluating UIControl Callback.
'

so. what can i do next step?
Is there any way to directly import camera intrinsic parameters? We are using bumblebee stereo cameras, and their proprietary calibration already gives us very accurate values. So we don't want to replace that with MATLAB calibration. But when I loaded the sample Calib_Result.mat, there are a lot more variables than what's in MATLAB's cameraParameters object or struct, like extrinsic of the boards and errors etc. I tried to just create an instance of cameraParameters and just fill in the intrinsic with what we have, but the GUI just crushes when trying to load the laser scans - `no active_images in the parameter object`