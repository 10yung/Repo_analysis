Bumps [lodash](https://github.com/lodash/lodash) from 4.17.11 to 4.17.15.
<details>
<summary>Commits</summary>

- [`ddfd9b1`](https://github.com/lodash/lodash/commit/ddfd9b11a0126db2302cb70ec9973b66baec0975) Bump to v4.17.15.
- [`b185fce`](https://github.com/lodash/lodash/commit/b185fcee26b2133bd071f4aaca14b455c2ed1008) Rebuild lodash and docs.
- [`be87d30`](https://github.com/lodash/lodash/commit/be87d303941222b97c482755afc0f4a77ce46c30) Bump to v4.17.14.
- [`a6fe6b1`](https://github.com/lodash/lodash/commit/a6fe6b1e174fd02b5e60eb2664405f4c1262c300) Rebuild lodash and docs.
- [`e371828`](https://github.com/lodash/lodash/commit/e37182845f16715a0d1c391c8662d83c55609cee) Bump to v4.17.13.
- [`357e899`](https://github.com/lodash/lodash/commit/357e899e685872b4af5403ecc4b2a928f961ae63) Rebuild lodash and docs.
- [`fd9a062`](https://github.com/lodash/lodash/commit/fd9a062d57646450b61f74029315abd4cc834b08) Bump to v4.17.12.
- [`e77d681`](https://github.com/lodash/lodash/commit/e77d68121ff00ba86b53eed5893d35adfe94c9dd) Rebuild lodash and docs.
- [`629d186`](https://github.com/lodash/lodash/commit/629d1865793182cd967196716f4beff223aa4a91) Update OpenJS references.
- [`2406eac`](https://github.com/lodash/lodash/commit/2406eac542b2a1282be8d812a6d8a45433ade80a) Fix minified build.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/4.17.11...4.17.15)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.11&new-version=4.17.15)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/MaxBittker/sandspiel/network/alerts).

</details>
Hey there, thanks for this game. Me and my brothers have already spent hours playing around with it. :slightly_smiling_face: 

It would be nice if there was a way to save and load scenes to and from the local filesystem without using the cloud connection. That way you could still save your scenes while offline.
Hello! I was looking for something inspirational to dockerize and put in my team's kubernetes stack for training and education purposes, and so when I saw this amazing project I wanted to take a stab at it. I created this Dockerfile, feel free to use it:

```
FROM rust:latest

RUN apt-get update & apt-get upgrade
RUN apt-get install curl gcc -y
RUN curl -sL https://deb.nodesource.com/setup_12.x | bash -
RUN apt-get update && apt-get install nodejs -y
RUN curl -sS https://dl.yarnpkg.com/debian/pubkey.gpg | apt-key add -
RUN echo "deb https://dl.yarnpkg.com/debian/ stable main" | tee /etc/apt/sources.list.d/yarn.list
RUN apt-get update && apt-get install yarn -y

RUN cargo install wasm-pack
RUN mkdir sandspiel
WORKDIR /sandspiel

COPY sandspiel/package.json /sandspiel/package.json
COPY sandspiel/yarn.lock /sandspiel/yarn.lock
RUN yarn install

COPY sandspiel /sandspiel
RUN cd crate && wasm-pack build
RUN npm run build

EXPOSE 8080
WORKDIR /sandspiel/dist
CMD ["python3", "-m", "http.server", "8080"]
```

I was hoping that even if I didn't have a connection to a postgres database and firebase that I'd be able to get the Canvas to come up, but doesn't seem to work:

![image](https://user-images.githubusercontent.com/41309988/59970941-1af46c00-9527-11e9-8c39-86a22cdd3b9e.png)

Anyway since I spent a solid day getting a Dockerfile together, I wanted to share with you before moving on to find another project to try. Again awesome project! Super cool to see and the write up was great.
I made a strong wind tunnel here so you can see the effect
all you have to do is add seed and zero gravity seeds
https://sandspiel.club/#2db4f065dfb76777ac7a

I don't know much about internationalization  -- would it be configured with a cookie or via subdomain or something?
One of the biggest issues is not being able to control saves you have made. I had a user system idea but i think this system is more unique and probably easy to get into the game.

I think there should be a system which a user can claim 1 hashtag and only they can use the hashtag.
Then a user could put a password to use it. 

Also maybe when you post something you would be given a code that you can use to edit your level. Maybe entering this code could grant access to change the name, revise or make edits or possibly it would load a page with all the levels with that tag with the options listed before.

Also i think that there should be a downvote to discourage horrible spam levels

These are all my suggestions. I dont think i asked to much and all of these are reasonable suggestions So please think about adding these. But at the end of the day it is your decision.
The other day my friend and me were playing this game and we usually put our names on it so we can easily view each others levels, this worked kind of like usernames that would make it easy for people to see our work. But then, someone started spamming inappropriate levels under his name and also made a few bad ones that still havent got unpublished, im very lucky to say this hasnt happened to me but if this issue keeps going on it could get worse.

Solution:Username system that you can publish saves under your name

Also ive noticed its very hard to make builds without jagged lines so i have to rely on undo button alot.

Solution: Copy Paste system and/or Zoom in and zoom out feature
-Light dust
-press undo
-its still lit even if you press undo alot of times




After running `npm i && npm run start`

```Entrypoint main = main.055e3a6b4d149726fdf8.js
[0] multi (webpack)-dev-server/client?http://localhost ./js/bootstrap.js 40 bytes {main} [built]
[./js/bootstrap.js] 381 bytes {main} [built] [failed] [1 error]
[./node_modules/ansi-html/index.js] 4.16 KiB {main} [built]
[./node_modules/ansi-regex/index.js] 135 bytes {main} [built]
[./node_modules/html-entities/index.js] 231 bytes {main} [built]
[./node_modules/loglevel/lib/loglevel.js] 7.68 KiB {main} [built]
[./node_modules/node-libs-browser/node_modules/events/events.js] 13.3 KiB {main} [built]
[./node_modules/querystring-es3/index.js] 127 bytes {main} [built]
[./node_modules/strip-ansi/index.js] 161 bytes {main} [built]
[./node_modules/url/url.js] 22.8 KiB {main} [built]
[./node_modules/webpack-dev-server/client/index.js?http://localhost] (webpack)-dev-server/client?http://localhost 8.26 KiB {main} [built]
[./node_modules/webpack-dev-server/client/overlay.js] (webpack)-dev-server/client/overlay.js 3.59 KiB {main} [built]
[./node_modules/webpack-dev-server/client/socket.js] (webpack)-dev-server/client/socket.js 1.05 KiB {main} [built]
[./node_modules/webpack/hot sync ^\.\/log$] (webpack)/hot sync nonrecursive ^\.\/log$ 170 bytes {main} [built]
[./node_modules/webpack/hot/emitter.js] (webpack)/hot/emitter.js 75 bytes {main} [built]
    + 11 hidden modules

ERROR in ./js/bootstrap.js 4:6
Module parse failed: Unexpected token (4:6)
You may need an appropriate loader to handle this file type.
| // asynchronously. This `bootstrap.js` file does the single async import, so
| // that no one else needs to worry about it again.
> import("./index.js")["catch"](function (e) {
|   return console.error("Error importing `index.js`:", e);
| });
Child html-webpack-plugin for "index.html":
     1 asset
    Entrypoint undefined = index.html
    [./node_modules/html-webpack-plugin/lib/loader.js!./index.html] 2.44 KiB {0} [built]
    [./node_modules/lodash/lodash.js] 527 KiB {0} [built]
    [./node_modules/webpack/buildin/global.js] (webpack)/buildin/global.js 472 bytes {0} [built]
    [./node_modules/webpack/buildin/module.js] (webpack)/buildin/module.js 497 bytes {0} [built]
ℹ ｢wdm｣: Failed to compile.
```
Make a bowl using Wall element, fill it with Water, then make a small hole at the bottom with Empty.

I expect bubbles to float up symmetrically, just like water is falling down. Instead they strongly tend to go right, as if there is undertow.

If it is due to processing scanline direction when calculating, then this direction may be alternated bettween even and odd frames to negate the effect.