In the "Before we start" section, the lesson begins by suggesting the use of `documents/` and `scripts/` subdirectories in addition to `data/` and `data_raw/`. However, the workshop itself doesn't apply this useful directory structure. It may be more consistent to create these two folders, and to give people practice orienting their scripts to run out of the `scripts/` subdirectory. An update would require file references to begin with `../` (with an explanation in the text and given by the instructor). I've attached a file of the proposed directory structure here.
<img width="780" alt="SuggestedDirStruc" src="https://user-images.githubusercontent.com/7685727/72133783-267a7980-3337-11ea-8ec7-90e8a426054c.png">

1. Three ways to force R to print the value: using parentheses; typing the object name; using print() function.

The function print() was not introduced in this episode in the current version, possibly because functions haven't been introduced yet; maybe mention this function in the subsection of "Functions and their arguments"? This function is used in the episode "Manipulating, analyzing and exporting data with tidyr" later on.

2. The comment character # should be introduced earlier. In the current setup, comments showed up in the subsection "Objects vs. variables" but no explanation at all there.

3. It would be great to mention that the grammar of the language determines whether an expression is complete or not.
e.g. x<- ## incomplete expression

Nothing would happen after entering Enter, because it's waiting for the expression to be completed. This is also a good place to introduce the comment character #.
In other languages with C-like syntax and Python (and even in Fortran) the dot character has a peculiar meaning. 
R is pretty different in this regard, as dots are accepted in variable names and are largely used in the standard library. To a learner used to other languages, it seems that the 'as.*' functions can be part of module "as", implicitly loaded, that manages conversions between types. This is of course wrong. 

In the context of human languages, this situation is usually referred to as a "false friend" and such "false friends" are usually pointed out in language courses. The ["R-intro" bible on CRAN](https://cran.r-project.org/doc/manuals/r-release/R-intro.pdf) state this in a way that is somewhat clearer (see section 1.8).

I find this situation sightly unsatisfactory, and I see two alternatives:
1. maybe there is a way to stress this out, maybe using a callout in the "Creating objects in R" section of the Intro episode (although there is already a callout about the "object vs variable" issue).
2. It could also be that this material is not the best for people who have some programming experience and such learners should just not be catered to and should instead be diverted to differently-flavoured material. 
Contribution from a community member via email:

> I found an issue in one of the lessons in the Data Carpentry Ecology Curriculum called " Data Analysis and Visualization in R for Ecologists".
> 
> Site URL: https://datacarpentry.org/R-ecology-lesson/
> Git Repository: https://github.com/datacarpentry/R-ecology-lesson/
> 
> All the other pages in the ecology curriculum besides this lesson open to a home page that has a schedule with the approximate timings each episode will take. My suggestion would be to add a schedule to the beginning of this lesson as well.
> 
> Having a schedule seems to be common to most of the pages on the site and was very helpful when I was taking my instructor course. Additionally, it would make all of the lessons flow better together. Finally, having the students be able to see the breakdown of timings is something that would be helpful for their learning in order to better pace themselves if taking it on their own. When teaching, I would think that having this schedule would also help keep instructors and students on the right track and on time.
code below is confusing. One of the first 3 elements in the 7th column has a blank, so only 2 elements are returns. It's extra confusing because we haven't spoken about factors yet. Switching it to the surveys[1:3, 6] will make it clearer. 
```
# first three elements in the 7th column (as a vector)
surveys[1:3, 7] 
```
I have tried to address the issue and added a small explanation and a couple of examples of how the pipe operator can be integrated with ggplot2 obtaining the same results and in the previous plot (where no pipe is used)
I just gave a *Data Wrangling in `R`* using *Data Analysis and Visualization in R for Ecologists* and am currently preparing to give the *Data Visualization* follow-up workshop. While preparing, I noticed that nowhere in the Data Visualization materials do we use the pipe operator (`%>%`) to pipe a dataset into `ggplot()`. 

I think adding a short blurb on how you can do this would make a great connection between the Data Wrangling and Data Visualization workshops! 
Hi...

Question related to this post https://datacarpentry.org/R-ecology-lesson/05-r-and-databases.html#creating_a_new_sqlite_database

what I do not quite get is that if we want to avoid handling large amounts of data, then why would I want to load the datasets (large .csv files) to create the db? 

I would like to know if I can just "call" the location of the dataset and create the db as a file. Is that possible. 

Best
Just a pointer to https://github.com/datacarpentry/r-socialsci/issues/104, because also relevant here.

Since this will requires update to img/[gather](https://github.com/datacarpentry/R-ecology-lesson/blob/master/img/gather_data_R.png)_... & [spread](https://github.com/datacarpentry/R-ecology-lesson/blob/master/img/spread_data_R.png)_data_R.png: Where those generated from shareable source files for #305, @ab604? If so, please consider pushing them into `img/` as well.

cc @chriseshleman & @mondorescue because of #501
Similar to https://github.com/swcarpentry/python-novice-gapminder/pull/443, but since the resources we mention cover much of the advanced content here, how about we reduce this section to the most relevant part for new learners?