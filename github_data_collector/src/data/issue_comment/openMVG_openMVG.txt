Hello!

I am trying to run sfm pipeline with different intrinics. In my setting I have 30 different cameras so I would like to assign different intrinsics to all of them. However, the pipeline only allows me to set at most 3 different intrinsics.

Thanks :D
Problem:
- travis-ci CPU detection skylake-avx512 is sometimes detected as core_avx2 or broadwell
 
Fix: 
 - Desactivate skylake-avx512 to test CI build stability
 - Build are gonna be done in the worst case in `march=core2`
  
Log message:

https://travis-ci.org/openMVG/openMVG/jobs/631127231
```
    -- Detected CPU: skylake-avx512
    -- Performing Test check_c_compiler_flag__march_skylake_avx512
    -- Performing Test check_c_compiler_flag__march_skylake_avx512 - Failed
    -- Performing Test check_cxx_compiler_flag__march_skylake_avx512
    -- Performing Test check_cxx_compiler_flag__march_skylake_avx512 -
    Failed
    -- Performing Test check_c_compiler_flag__march_skylake
    -- Performing Test check_c_compiler_flag__march_skylake - Failed
    -- Performing Test check_cxx_compiler_flag__march_skylake
    -- Performing Test check_cxx_compiler_flag__march_skylake - Failed
    -- Performing Test check_c_compiler_flag__march_broadwell
    -- Performing Test check_c_compiler_flag__march_broadwell - Failed
    -- Performing Test check_cxx_compiler_flag__march_broadwell
    -- Performing Test check_cxx_compiler_flag__march_broadwell - Failed
    -- Performing Test check_c_compiler_flag__march_haswell
    -- Performing Test check_c_compiler_flag__march_haswell - Failed
    -- Performing Test check_cxx_compiler_flag__march_haswell
    -- Performing Test check_cxx_compiler_flag__march_haswell - Failed
    -- Performing Test check_c_compiler_flag__march_core_avx2
    -- Performing Test check_c_compiler_flag__march_core_avx2 - Success
```

https://travis-ci.org/openMVG/openMVG/jobs/631127233
```
    -- Detected CPU: skylake-avx512
    -- Performing Test check_c_compiler_flag__march_skylake_avx512
    -- Performing Test check_c_compiler_flag__march_skylake_avx512 - Failed
    -- Performing Test check_cxx_compiler_flag__march_skylake_avx512
    -- Performing Test check_cxx_compiler_flag__march_skylake_avx512 -
    Failed
    -- Performing Test check_c_compiler_flag__march_skylake
    -- Performing Test check_c_compiler_flag__march_skylake - Failed
    -- Performing Test check_cxx_compiler_flag__march_skylake
    -- Performing Test check_cxx_compiler_flag__march_skylake - Failed
    -- Performing Test check_c_compiler_flag__march_broadwell
    -- Performing Test check_c_compiler_flag__march_broadwell - Success
```
[New feaure]
Implement a pre-emptive matching `[1]` strategy to quickly match large dataset (approximation).

Pre-emptive matching is testing the matchability of image pair on a reduced set of `X` features.
- `X` features are selected from the largest scale of the features of each image.
- For each pair, we then test if `Y` matches remain once the `Lowe distance ratio` has been applied.
- Then for each selected pair, a new matching using `Z` features is launched.

Default paper parameters are set as `X=100`, `Y=8`and `Z = 8912`.

Pre-emptive matching in OpenMVG can be implemented easily using a 2 pass main_ComputeMatches. Here is the additional concept to bring the feature to life:
- Implemented a `Preemptive_Regions_Provider` that will select only the `X` regions of interest for each images,
- Use existing matching_image_collection engine
   - Since the features count is small BRUTE_FORCE_L2 is gonna be the faster and most accurate
- Add a rejection rule as a `geometric filter` to test if at least `Y` features are kept by pair
- Exporting the found pairs as a pair_list and reuse it for a new matching sequence.

Pre-emptive matching pipeline:
```
1. Pre-emptive matching (pair selection)
$ openMVG_main_ComputeMatches
 -i <PATH/matches/sfm_data.json> -o  <PATH/matches>
 -P
 -n BRUTEFORCEL2
 --preemptive_feature_count 100
 -g M

2. Matching on the pre-emptive selected pairs
$ openMVG_main_ComputeMatches
 -i <PATH/matches/sfm_data.json> -o  <PATH/matches>
 --pair_list <PATH/matches/pairs.txt>
 -f 1
```

Details about the parameters and their meaning:
- `-P`: enable preemptive matching
- `-n BRUTEFORCEL2`: select brute force matcher as matching engine
- `--preemptive_feature_count 100`: select `X` regions per image
- ` -g M`: select the Match count rejection strategy, `Y` threshold


[1] "Towards Linear-time Incremental Structure from Motion" C. Wu, 3DV 2013
Hi, I'm newbie to photogrammetry area. Recently I've been trying to reconstruct 3D model from pictures taken by my smartphone using openMVG and openMVS, but I'm stuck with openMVG process.

First of all, since there were no sensor width database for smartphone cameras, I planned to calculate it with [this formula.](https://vfxcamdb.com/film-back-calculator/) But images I'm trying to use for reconstruction were taken by **LG-F800K** smartphone, and images taken by this smartphone don't provide FOV info in its EXIF (it provides focal length). So I couldn't use the formula and had to find sensor width manually. I used information on [this document](https://www.sony-semicon.co.jp/products/common/pdf/ProductBrief_IMX298_20160210.pdf)  and added sensor width info of 'LG-F800k; 6.521' on sensor_width_camera_database.txt. (Not sure this is correct sensor width)

Here are [Images](https://github.com/piecemakerz/3D-reconstruction/tree/master/pictures_background_removed)  I used for 3D reconsturction.(took them myself) I'm trying to make 3D model for the chair, and backgrounds of each image are removed by deep learning based background removal open source. Couldn't remove all surrounding objects since my house is quite narrow.

Here is python code I used [MvgMvs_Pipeline.py](https://github.com/piecemakerz/3D-reconstruction/blob/master/MvgMvs_Pipeline.py). I used various options to make process work, but all of them failed. 

Below is failed result I'm continuously getting. As you can see the process is blocked in **openMVG_main_openMVG2openMVS**, and I don't think the problem occurs in openMVG_main_openMVG2openMVS. I think the problem is that in **ComputeMatches step**, only 2 from 51 input images were calibrated, and no 3D points were generated.


```
hyukwonlee@hyukwonlee-VirtualBox:~/Desktop/openMVS_Build/bin$ python MvgMvs_Pipeline.py /home/hyukwonlee/Desktop/openMVG_Material/Images/ /home/hyukwonlee/Desktop/openMVG_Material/Outputs/
#Using input dir  :  /home/hyukwonlee/Desktop/openMVG_Material/Images
#       output_dir :  /home/hyukwonlee/Desktop/openMVG_Material/Outputs
# First step  :  0
# Last step :  10

#0. Intrinsics analysis
['/home/hyukwonlee/Desktop/openMVG_Build/Linux-x86_64-RELEASE/openMVG_main_SfMInit_ImageListing', '-i', '/home/hyukwonlee/Desktop/openMVG_Material/Images', '-o', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches', '-d', '/home/hyukwonlee/Desktop/openMVG/src/openMVG/exif/sensor_width_database/sensor_width_camera_database.txt']
 You called :
/home/hyukwonlee/Desktop/openMVG_Build/Linux-x86_64-RELEASE/openMVG_main_SfMInit_ImageListing
--imageDirectory /home/hyukwonlee/Desktop/openMVG_Material/Images
--sensorWidthDatabase /home/hyukwonlee/Desktop/openMVG/src/openMVG/exif/sensor_width_database/sensor_width_camera_database.txt
--outputDirectory /home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches
--focal -1
--intrinsics
--camera_model 3
--group_camera_model 1

- Image listing -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

SfMInit_ImageListing report:
listed #File(s): 51
usable #File(s) listed in sfm_data: 51
usable #Intrinsic(s) listed in sfm_data: 2
#1. Compute features
['/home/hyukwonlee/Desktop/openMVG_Build/Linux-x86_64-RELEASE/openMVG_main_ComputeFeatures', '-i', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches/sfm_data.json', '-o', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches', '-f', '1', '-m', 'AKAZE_FLOAT']
 You called :
/home/hyukwonlee/Desktop/openMVG_Build/Linux-x86_64-RELEASE/openMVG_main_ComputeFeatures
--input_file /home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches/sfm_data.json
--outdir /home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches
--describerMethod AKAZE_FLOAT
--upright 0
--describerPreset NORMAL
--force 1
--numThreads 0


- EXTRACT FEATURES -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
Task done in (s): 334
#2. Compute matches
['/home/hyukwonlee/Desktop/openMVG_Build/Linux-x86_64-RELEASE/openMVG_main_ComputeMatches', '-i', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches/sfm_data.json', '-o', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches', '-n', 'ANNL2', '-r', '1.2']
 You called :
/home/hyukwonlee/Desktop/openMVG_Build/Linux-x86_64-RELEASE/openMVG_main_ComputeMatches
--input_file /home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches/sfm_data.json
--out_dir /home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches
Optional parameters:
--force 0
--ratio 1.2
--geometric_model f
--video_mode_matching -1
--pair_list
--nearest_matching_method ANNL2
--guided_matching 0
--cache_size unlimited

- Regions Loading -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

 - PUTATIVE MATCHES -
	 PREVIOUS RESULTS LOADED; #pair: 1275

- Geometric filtering -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
Task done in (s): 151

 Export Adjacency Matrix of the pairwise's geometric matches
#3. Incremental reconstruction
['/home/hyukwonlee/Desktop/openMVG_Build/Linux-x86_64-RELEASE/openMVG_main_IncrementalSfM2', '-i', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches/sfm_data.json', '-m', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches', '-o', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/reconstruction_sequential', '-M', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/matches/matches.f.bin', '-S', 'MAX_PAIR', '-c', '3']
Sequential/Incremental reconstruction (Engine 2)


- Features Loading -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
(42,49): 946 matches
Initialization status : Success

Track stats
------------------
-- Tracks Stats --
 Tracks number: 4753
 Images Id:
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50,
------------------
TrackLength, Occurrence
	2	3947
	3	584
	4	129
	5	59
	6	21
	7	6
	8	1
	9	4
	10	1
	12	1



-------------------------------
-- Starting Structure from Motion (statistics) with:
-- #Camera calibrated: 2 from 51 input images.
-- #Tracks, #3D points: 0
-------------------------------
#4. Export to openMVS
['/home/hyukwonlee/Desktop/openMVG_Build/Linux-x86_64-RELEASE/openMVG_main_openMVG2openMVS', '-i', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/reconstruction_sequential/sfm_data.bin', '-o', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs/scene.mvs', '-d', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs']

The input SfM_Data file "/home/hyukwonlee/Desktop/openMVG_Material/Outputs/reconstruction_sequential/sfm_data.bin" cannot be read.
#5. Densify point cloud
['/home/hyukwonlee/Desktop/openMVS_Build/bin/DensifyPointCloud', '--input-file', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs/scene.mvs', '--resolution-level', '5', '-w', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs']
14:21:15 [App     ] Build date: Dec 21 2019, 16:36:03
14:21:15 [App     ] CPU: AMD Ryzen 7 2700X Eight-Core Processor          (1 cores)
14:21:15 [App     ] RAM: 3.85GB Physical Memory 2.00GB Virtual Memory
14:21:15 [App     ] OS: Linux 5.0.0-37-generic (x86_64)
14:21:15 [App     ] SSE & AVX compatible CPU & OS detected
14:21:15 [App     ] Command line: --input-file /home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs/scene.mvs --resolution-level 5 -w /home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs
#6. Reconstruct the mesh
['/home/hyukwonlee/Desktop/openMVS_Build/bin/ReconstructMesh', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs/scene_dense.mvs', '-w', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs', '-d', '5']
14:21:15 [App     ] Build date: Dec 21 2019, 16:36:03
14:21:15 [App     ] CPU: AMD Ryzen 7 2700X Eight-Core Processor          (1 cores)
14:21:15 [App     ] RAM: 3.85GB Physical Memory 2.00GB Virtual Memory
14:21:15 [App     ] OS: Linux 5.0.0-37-generic (x86_64)
14:21:15 [App     ] SSE & AVX compatible CPU & OS detected
14:21:15 [App     ] Command line: /home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs/scene_dense.mvs -w /home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs -d 5
#7. Texture the mesh
['/home/hyukwonlee/Desktop/openMVS_Build/bin/TextureMesh', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs/scene_dense_mesh.mvs', '-w', '/home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs', '--resolution-level', '5']
14:21:15 [App     ] Build date: Dec 21 2019, 16:36:03
14:21:15 [App     ] CPU: AMD Ryzen 7 2700X Eight-Core Processor          (1 cores)
14:21:15 [App     ] RAM: 3.85GB Physical Memory 2.00GB Virtual Memory
14:21:15 [App     ] OS: Linux 5.0.0-37-generic (x86_64)
14:21:15 [App     ] SSE & AVX compatible CPU & OS detected
14:21:15 [App     ] Command line: /home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs/scene_dense_mesh.mvs -w /home/hyukwonlee/Desktop/openMVG_Material/Outputs/mvs --resolution-level 5
```

This is result [match folder](https://github.com/piecemakerz/3D-reconstruction/tree/master/matches)  including **sfm_data.json** file. Have no idea how to deal with this problem. plz help.
We want to listen to the community, better understand your usage of the library and react accordingly. In order to do so, we created a survey and we are really eager to see the results.

Please fill out this survey https://forms.gle/7MHuApGCgh7aDdgQ7.

We will analyze results, share them next year and will use them for the decision-making process in the future.

Please re-share this to your friends and remember that we are always looking for new contributors and users!

Happy holidays :christmas_tree: :santa: :mrs_claus: :snowman: :christmas_tree: 
Rewrite svgDrawer class to be closer to the SVG concepts (attributes/elements).

- https://developer.mozilla.org/en-US/docs/Web/SVG
- https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute
- https://developer.mozilla.org/en-US/docs/Web/SVG/Element

Here the new concepts:
- `svgDrawer` receives and handle the XML elements.
- `svgElement` provides drawing features that export XML string elements.
- `svgAttributes` provides customization for drawing style
I created a tool to help with getting dense geodetic point clouds/meshes using OpenMVG and MVE.
It helps to solve the issue of large ECEF numbers in MVE.
I included some instructions in the README.

Hope it helps!

https://github.com/eokeeffe/openMVG_MVE_Geodetic_Transform
This commit fix this error : 
`/usr/local/include/openMVG/robust_estimation/robust_estimator_ACRansac.hpp:50:10: erreur fatale: third_party/histogram/histogram.hpp : Aucun fichier ou dossier de ce type`
I think I get a result by running the code as follows, but I suspect that it may be wrong because the program runs very fast and process results slightly different than [#949](https://github.com/openMVG/openMVG/issues/949) .  How can I get the camera coordinates I have obtained using SfMDataConverter after this step?

```
`gurturk@gurturk:~$ openMVG_main_SfMInit_ImageListing -d /home/gurturk/Desktop/openMVG/src/openMVG/exif/sensor_width_database/sensor_width_camera_database.txt   -i /home/gurturk/Desktop/openMVG/test/images/           -o /home/gurturk/Desktop/openMVG/test/matches -f 1119.6`
 You called : 
openMVG_main_SfMInit_ImageListing
--imageDirectory /home/gurturk/Desktop/openMVG/test/images/
--sensorWidthDatabase /home/gurturk/Desktop/openMVG/src/openMVG/exif/sensor_width_database/sensor_width_camera_database.txt
--outputDirectory /home/gurturk/Desktop/openMVG/test/matches
--focal 1119.6
--intrinsics 
--camera_model 3
--group_camera_model 1

- Image listing -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

SfMInit_ImageListing report:
listed #File(s): 15
usable #File(s) listed in sfm_data: 15
usable #Intrinsic(s) listed in sfm_data: 1
`gurturk@gurturk:~$openMVG_main_ComputeFeatures    -i /home/gurturk/Desktop/openMVG/test/matches/           -o /home/gurturk/Desktop/openMVG/test/matches` 
 You called : 
openMVG_main_ComputeFeatures
--input_file /home/gurturk/Desktop/openMVG/test/matches/
--outdir /home/gurturk/Desktop/openMVG/test/matches
--describerMethod SIFT
--upright 0
--describerPreset NORMAL
--force 0
--numThreads 0

Unknown sfm_data input format: 

The input file "/home/gurturk/Desktop/openMVG/test/matches/" cannot be read
`gurturk@gurturk:~$openMVG_main_ComputeFeatures    -i /home/gurturk/Desktop/openMVG/test/matches/  -o /home/gurturk/Desktop/openMVG/test/matches` 
 You called : 
openMVG_main_ComputeFeatures
--input_file /home/gurturk/Desktop/openMVG/test/matches/
--outdir /home/gurturk/Desktop/openMVG/test/matches
--describerMethod SIFT
--upright 0
--describerPreset NORMAL
--force 0
--numThreads 0

Unknown sfm_data input format: 

The input file "/home/gurturk/Desktop/openMVG/test/matches/" cannot be read
`gurturk@gurturk:~$openMVG_main_ComputeFeatures    -i /home/gurturk/Desktop/openMVG/test/matches/sfm_data.json  -o /home/gurturk/Desktop/openMVG/test/matches
 You called : ` 
openMVG_main_ComputeFeatures
--input_file /home/gurturk/Desktop/openMVG/test/matches/sfm_data.json
--outdir /home/gurturk/Desktop/openMVG/test/matches
--describerMethod SIFT
--upright 0
--describerPreset NORMAL
--force 0
--numThreads 0


- EXTRACT FEATURES -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
Task done in (s): 66
`gurturk@gurturk:~$openMVG_main_ComputeMatches    -i /home/gurturk/Desktop/openMVG/test/matches/sfm_data.json  -o /home/gurturk/Desktop/openMVG/test/matches -g e` 
 You called : 
openMVG_main_ComputeMatches
--input_file /home/gurturk/Desktop/openMVG/test/matches/sfm_data.json
--out_dir /home/gurturk/Desktop/openMVG/test/matches
Optional parameters:
--force 0
--ratio 0.8
--geometric_model e
--video_mode_matching -1
--pair_list 
--nearest_matching_method AUTO
--guided_matching 0
--cache_size unlimited

- Regions Loading -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

 - PUTATIVE MATCHES - 
Use: exhaustive pairwise matching
Using FAST_CASCADE_HASHING_L2 matcher
Using the OPENMP thread interface

- Matching -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
Segmentation fault (core dumped)
`gurturk@gurturk:~$openMVG_main_ComputeMatches    -i /home/gurturk/Desktop/openMVG/test/matches/sfm_data.json  -o /home/gurturk/Desktop/openMVG/test/matches -g e -f 1 -n ANNL2` 
 You called : 
openMVG_main_ComputeMatches
--input_file /home/gurturk/Desktop/openMVG/test/matches/sfm_data.json
--out_dir /home/gurturk/Desktop/openMVG/test/matches
Optional parameters:
--force 1
--ratio 0.8
--geometric_model e
--video_mode_matching -1
--pair_list 
--nearest_matching_method ANNL2
--guided_matching 0
--cache_size unlimited

- Regions Loading -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

 - PUTATIVE MATCHES - 
Use: exhaustive pairwise matching
Using ANN_L2 matcher
Using the OPENMP thread interface

- Matching -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
Task (Regions Matching) done in (s): 5

- Geometric filtering -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
Task done in (s): 1

 Export Adjacency Matrix of the pairwise's geometric matches
`gurturk@gurturk:~$` openMVG_main_GlobalSfM    -i /home/gurturk/Desktop/openMVG/test/matches/sfm_data.json -m /home/gurturk/Desktop/openMVG/test/matches/ -o /home/gurturk/Desktop/openMVG/test/out_global 

-----------------------------------------------------------
Global Structure from Motion:
-----------------------------------------------------------
Open Source implementation of the paper:
"Global Fusion of Relative Motions for Robust, Accurate and Scalable Structure from Motion."
Pierre Moulon, Pascal Monasse and Renaud Marlet.  ICCV 2013.
------------------------------------------------------------

- Features Loading -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************

CleanGraph_KeepLargestBiEdge_Nodes():: => connected Component: 1
Connected component of size: 15

- Relative pose computation -
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
*********block_sparse_matrix.cc:80 Allocating values array with 209088 bytes.
block_sparse_matrix.cc:80 Allocating values array with 150624 bytes.
block_sparse_matrix.cc:80 Allocating values array with 192960 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
block_sparse_matrix.cc:80 Allocating values array with 252288 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
block_sparse_matrix.cc:80 Allocating values array with 264096 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
block_sparse_matrix.cc:80 Allocating values array with 236160 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
*block_sparse_matrix.cc:80 Allocating values array with 417312 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
block_sparse_matrix.cc:80 Allocating values array with 308736 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
*block_sparse_matrix.cc:80 Allocating values array with 222624 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
block_sparse_matrix.cc:80 Allocating values array with 257184 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
*block_sparse_matrix.cc:80 Allocating values array with 444096 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
detect_structure.cc:113 Schur complement static structure <2,3,6>.
block_sparse_matrix.cc:80 Allocating values array with 301824 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,6>.

Relative motion computation took: 6101(ms)

-------------------------------
 Global rotations computation: 
  #relative rotations: 105
  #global rotations: 15

Statistics about rotation triplets:

	 min: 0.00133742
	 mean: 0.0202594
	 median: 0.018422
	 max: 0.0603537
0	|	2
0.00302	|	16
0.00604	|	35
0.00905	|	62
0.0121	|	61
0.0151	|	49
0.0181	|	51
0.0211	|	33
0.0241	|	38
0.0272	|	28
0.0302	|	22
0.0332	|	18
0.0362	|	14
0.0392	|	6
0.0422	|	8
0.0453	|	4
0.0483	|	3
0.0513	|	3
0.0543	|	1
0.0573	|	0
0.0604


Triplets filtering based on composition error on unit cycles
#Triplets before: 455
#Triplets after: 455

 #Edges removed by triplet inference: 0

CleanGraph_KeepLargestBiEdge_Nodes():: => connected Component: 1
Connected component of size: 15
reorder_program.cc:146 Block ordering stats:  flops: 1240 lnz  : 120 anz  : 120
block_sparse_matrix.cc:80 Allocating values array with 15120 bytes.
block_sparse_matrix.cc:80 Allocating values array with 1080 bytes.
compressed_row_sparse_matrix.cc:169 # of rows: 45 # of columns: 45 max_num_nonzeros: 1080. Allocating 13144

CHOLMOD version 3.0.11, May 4, 2016: Symbolic Analysis: status: OK
  Architecture: Linux
    sizeof(int):      4
    sizeof(SuiteSparse_long):  8
    sizeof(void *):   8
    sizeof(double):   8
    sizeof(Int):      4 (CHOLMOD's basic integer)
    sizeof(BLAS_INT): 4 (integer used in the BLAS)
  Results from most recent analysis:
    Cholesky flop count: 31395
    Nonzeros in L:       1035
  memory blocks in use:           7
  memory in use (MB):           0.0
  peak memory usage (MB):       0.0
  maxrank:    update/downdate rank:   8
  supernodal control: 1 40 (supernodal if flops/lnz >= 40)
  nmethods:   number of ordering methods to try: 1
    method 0: natural
        flop count: 31395
        nnz(L):     1035
  OK
Found #global_rotations: 15
Timing: 0 seconds

Relative/Global degree rotations residual errors {0,0.0269525}:
0	|	0
0.00135	|	2
0.0027	|	5
0.00404	|	11
0.00539	|	13
0.00674	|	12
0.00809	|	7
0.00943	|	14
0.0108	|	14
0.0121	|	2
0.0135	|	2
0.0148	|	3
0.0162	|	4
0.0175	|	2
0.0189	|	5
0.0202	|	3
0.0216	|	0
0.0229	|	2
0.0243	|	1
0.0256	|	3
0.027


Relative/Global degree rotations residual errors {0,5}:
0	|	105
0.25	|	0
0.5	|	0
0.75	|	0
1	|	0
1.25	|	0
1.5	|	0
1.75	|	0
2	|	0
2.25	|	0
2.5	|	0
2.75	|	0
3	|	0
3.25	|	0
3.5	|	0
3.75	|	0
4	|	0
4.25	|	0
4.5	|	0
4.75	|	0
5


Statistics about global rotation evaluation:

	 min: 0.00250498
	 mean: 0.0107135
	 median: 0.00970708
	 max: 0.0269525

-------------------------------
 Relative translations computation: 
-------------------------------
#Triplets: 455

Relative translations computation (edge coverage algorithm)
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
***************************************************
TRIPLET COVERAGE TIMING:
-------------------------------
-- #Relative triplet of translations estimates: 81 computed from 455 triplets.
-- resulting in 243 translations estimation.
-- time to compute triplets of relative translations: 1 seconds.
-------------------------------

CleanGraph_KeepLargestBiEdge_Nodes():: => connected Component: 1
Connected component of size: 15

-------------------------------
 Global translations computation: 
   - Ready to compute 15 global translations.
     from #relative translations: 243
reorder_program.cc:146 Block ordering stats:  flops: 2206 lnz  : 414 anz  : 414
block_sparse_matrix.cc:80 Allocating values array with 39312 bytes.
block_sparse_matrix.cc:80 Allocating values array with 1656 bytes.
compressed_row_sparse_matrix.cc:169 # of rows: 123 # of columns: 123 max_num_nonzeros: 1710. Allocating 21016

CHOLMOD version 3.0.11, May 4, 2016: Symbolic Analysis: status: OK
  Architecture: Linux
    sizeof(int):      4
    sizeof(SuiteSparse_long):  8
    sizeof(void *):   8
    sizeof(double):   8
    sizeof(Int):      4 (CHOLMOD's basic integer)
    sizeof(BLAS_INT): 4 (integer used in the BLAS)
  Results from most recent analysis:
    Cholesky flop count: 32920
    Nonzeros in L:       1668
  memory blocks in use:           7
  memory in use (MB):           0.0
  peak memory usage (MB):       0.0
  maxrank:    update/downdate rank:   8
  supernodal control: 1 40 (supernodal if flops/lnz >= 40)
  nmethods:   number of ordering methods to try: 1
    method 0: natural
        flop count: 32920
        nnz(L):     1668
  OK
block_sparse_matrix.cc:80 Allocating values array with 1656 bytes.
block_sparse_matrix.cc:80 Allocating values array with 1656 bytes.
block_sparse_matrix.cc:80 Allocating values array with 1656 bytes.
block_sparse_matrix.cc:80 Allocating values array with 1656 bytes.
block_sparse_matrix.cc:80 Allocating values array with 1656 bytes.
block_sparse_matrix.cc:80 Allocating values array with 1656 bytes.
block_sparse_matrix.cc:80 Allocating values array with 1656 bytes.


Track stats
------------------
-- Tracks Stats --
 Tracks number: 3891
 Images Id: 
0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 
------------------
TrackLength, Occurrence
	3	1128
	4	586
	5	406
	6	305
	7	258
	8	205
	9	151
	10	150
	11	128
	12	143
	13	114
	14	130
	15	187

Blind triangulation progress:
0%   10   20   30   40   50   60   70   80   90   100%
|----|----|----|----|----|----|----|----|----|----|
*****************************************************
#removed tracks (invalid triangulation): 2

  Triangulation took (s): 0
block_sparse_matrix.cc:80 Allocating values array with 2411328 bytes.
detect_structure.cc:113 Schur complement static structure <2,3,3>.
block_random_access_sparse_matrix.cc:78 Matrix Size [45,45] 1080
detect_structure.cc:113 Schur complement static structure <2,3,3>.
compressed_row_sparse_matrix.cc:210 # of rows: 45 # of columns: 45 num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:169 # of rows: 45 # of columns: 45 max_num_nonzeros: 1080. Allocating 13144

CHOLMOD version 3.0.11, May 4, 2016: Symbolic Analysis: status: OK
  Architecture: Linux
    sizeof(int):      4
    sizeof(SuiteSparse_long):  8
    sizeof(void *):   8
    sizeof(double):   8
    sizeof(Int):      4 (CHOLMOD's basic integer)
    sizeof(BLAS_INT): 4 (integer used in the BLAS)
  Results from most recent analysis:
    Cholesky flop count: 31395
    Nonzeros in L:       1035
  memory blocks in use:           7
  memory in use (MB):           0.0
  peak memory usage (MB):       0.0
  maxrank:    update/downdate rank:   8
  supernodal control: 1 40 (supernodal if flops/lnz >= 40)
  nmethods:   number of ordering methods to try: 1
    method 0: natural
        flop count: 31395
        nnz(L):     1035
  OK
compressed_row_sparse_matrix.cc:210 # of rows: 45 # of columns: 45 num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:169 # of rows: 45 # of columns: 45 max_num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:210 # of rows: 45 # of columns: 45 num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:169 # of rows: 45 # of columns: 45 max_num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:210 # of rows: 45 # of columns: 45 num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:169 # of rows: 45 # of columns: 45 max_num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:210 # of rows: 45 # of columns: 45 num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:169 # of rows: 45 # of columns: 45 max_num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:210 # of rows: 45 # of columns: 45 num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:169 # of rows: 45 # of columns: 45 max_num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:210 # of rows: 45 # of columns: 45 num_nonzeros: 1080. Allocating 13144
compressed_row_sparse_matrix.cc:169 # of rows: 45 # of columns: 45 max_num_nonzeros: 1080. Allocating 13144



Bundle Adjustment statistics (approximated RMSE):
 #views: 15
 #poses: 15
 #intrinsics: 1
 #tracks: 1245
 #residuals: 19596
 Initial RMSE: 0.43702
 Final RMSE: 0.431074
 Time (s): 0.271623


 Total Ac-Global-Sfm took (s): 12
...Generating SfM_Report.html
...Export SfM_Data to disk.
```
Hello,

It seems that one of the header file are not installed correctly (when doing sudo make install) : 
`/usr/local/include/openMVG/robust_estimation/robust_estimator_ACRansac.hpp:50:10: erreur fatale: third_party/histogram/histogram.hpp : Aucun fichier ou dossier de ce type
`

Thomas.