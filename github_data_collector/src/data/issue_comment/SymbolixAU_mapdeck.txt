
**Describe the bug**
An error occurs when adding a layer without data. Having no data to display can be common in interactive environments.

**To Reproduce**
``` r
library(sf)
#> Linking to GEOS 3.6.2, GDAL 2.2.3, PROJ 5.1.0
library(mapdeck)
sf <- sf::st_as_sf( capitals, coords = c("lon", "lat") )
mapdeck() %>% 
    add_scatterplot(
      data = head(sf,0)
      , radius = 1000000
      , fill_colour = "country"
      , layer_id = "scatter_layer"
      , tooltip = "capital"
    )
#> Error in rcpp_point_geojson(data, l, geometry_column, digits, "scatterplot"): 'getCharCE' must be called on a CHARSXP
```

<sup>Created on 2019-12-09 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>

**Expected behaviour**
The layer to be added to the plot, without any data to display.

**Versions**
Current dev version

Is there a way to change the basemap language so that the labels from Mapbox appear in another language?

![Capture](https://user-images.githubusercontent.com/29704914/70233500-fac80a80-175e-11ea-8da3-556b7b975599.PNG)

Resolves #245 

Upstream branch can be updated when the appropriate merge destination is created.
Resolves #243 

This PR replaces #244 to merge from the appropriate branch.
https://github.com/uber/deck.gl/blob/master/docs/layers/s2-layer.md

related: https://github.com/SymbolixAU/mapdeck/issues/243
**What do you want the feature to do?**
Add support for the icon layer: https://github.com/uber/deck.gl/blob/master/docs/layers/icon-layer.md

Related to #30 and #118, any reason why these were closed?
Do you have a desired interface for adding these icons? I expect something similar to `add_scatterplot` with additional arguments for the icon. Perhaps auto packing icons will be the simplest place to start (and the default interface for users), where the icon variable input is simply the path to the image.
**What do you want the feature to do?**
Add the H3 hexagon layer.
https://github.com/uber/deck.gl/blob/master/docs/layers/h3-hexagon-layer.md

Happy to help with this, I briefly tried to add support for it but the input structure for the geometry is non-standard enough that I wanted to get your opinions before going further.

Some potential nuances for supporting this layer:
1. Geometry data for h3 is a character vector, and not a recognised sf geometry (expect df data input, not sf)
1. Computing the bounding box for the h3 hexagons may require converting the hexagons twice. Once in R/Rcpp for computing `bbox`, second in deck.gl to add it to the map (is this necessary?).
To work with https://github.com/SymbolixAU/spatialwidget/issues/40

requires https://github.com/dcooley/sfheaders/issues/28 so I can down-cast `sfc_MULTIPOINT` objects 
**What do you want the feature to do?**
We want to control the dual map view by using the package {mapdeck}. And also, from shiny environment, we want to do it. As a example, attached is what we want to do. 
![test](https://user-images.githubusercontent.com/32760683/68996611-7a527000-086a-11ea-814d-0ab3f56cdec6.jpg)

Is it possible? Could you suggest any idea?? @SymbolixAU 
Thank you so much!