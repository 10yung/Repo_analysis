Small gain in simplicity and flexibility.
#419 # Which version of React JS are you using?

✅ Officially supported ✅
- [x] v15.4.x

⚠️ Not officially supported, expect warnings ⚠️
- [ ] v15.5.x
- [ ] v15.6.x

☣️ Not officially supported, expect warnings and errors ☣️
- [ ] v16.x.x

---

### Which browser are you using?

✅ Officially supported ✅
- [ ] IE 9 / IE 10 / IE 11
- [ ] Edge
- [ x ] Chrome

⚠️ Not officially supported, but "should work" ⚠️
- [ ] Firefox
- [ ] Safari

---

### I'm submitting a ...

- [x] 🐛 Bug Report
- [ ] 💡 Feature Request

---

### Issue Details

Current behavior: when I set up a react-data-grid instance using Immutable rows and set up selectBy to use the 'id' key, it works when the rows are Arrays but not when they're Immutable Lists.

Desired behavior: React data grid should support key usage for Immutable rows

Steps to reproduce: see this sandbox here: https://codesandbox.io/s/rdg-row-selection-vrmg3 (See the commented-out code in rowGetter to toggle behavior)

Due to the general support for Immutable rows in Lists, I believe this is a bug and not a feature request.

Please let me know if I've just made a mistake in my code, as I had some difficulty finding documentation for the selectBy rowKey feature, but it seems to me like this should work.

I know that I can selectBy indexes instead, but I would prefer to use recordIds in order to avoid some unnecesary recalculation when sorting a list with records already selected.
- Have you already searched for similar issues? Please help us out and double-check first!

- Also, please don't be that person who deletes this template. It's here for a reason.

- Thanks!

---

### Which version of React JS are you using?

✅ Officially supported ✅
- [ ] v15.4.x

⚠️ Not officially supported, expect warnings ⚠️
- [ ] v15.5.x
- [ ] v15.6.x

☣️ Not officially supported, expect warnings and errors ☣️
- [ ] v16.x.x

---

### Which browser are you using?

✅ Officially supported ✅
- [ ] IE 9 / IE 10 / IE 11
- [ ] Edge
- [ ] Chrome

⚠️ Not officially supported, but "should work" ⚠️
- [ ] Firefox
- [ ] Safari

---

### I'm submitting a ...

- [ ] 🐛 Bug Report
- [ ] 💡 Feature Request

> 👋 Need general support? Not sure about how to use React itself, or how to get started with the Grid?
> Please do not submit a support request here. Instead see

> https://github.com/adazzle/react-data-grid/blob/master/docs/CONTRIBUTING.md

---

### Issue Details

```
Please include:
- What the current behavior is
- What the desired behavior is
- (If Bug) Steps to reproduce the issue
- (If Feature) The motivation / use case for the feature

We especially love screenshots / videos of problems, and remember
The Best Issue Is A Pull Request™
```

I ma using ReactDataGrid to display data from api. I don't want filter the rows using the tool bar, instead i want to display a filter icon in the column header and on click of it textbox should appear to filter the rows using the input from that textbox. Similarly I want to filter another column , the filter should appear only when clicked on the filter icon on this column header.Is something like this possible with react data grid.Please  suggest how can this be achieved.


### I'm submitting a ...

- [ ] 🐛 Bug Report
- [x] 💡 Feature Request

### Issue Details
Would like the ability to make cells or headers span across multiple columns/rows, like the cells highlighted in yellow below.

![image](https://user-images.githubusercontent.com/10884874/72098289-33be4680-32ec-11ea-8cbb-a259565273ab.png)

Easiest implementation would be in the underlying data to just consider the spanning cell to be part of the top row and leftmost column of those which it spans, and simply have it cover up any cells that it spans over... so it's just a matter of configuring the css like z-index and width/height of that cell and it's associated components like the border and editor. I believe this is how it's done in ag-grid.
### Which version of React JS are you using?

✅ Officially supported ✅
- [x] v15.4.x

⚠️ Not officially supported, expect warnings ⚠️
- [ ] v15.5.x
- [ ] v15.6.x

☣️ Not officially supported, expect warnings and errors ☣️
- [ ] v16.x.x

---

### Which browser are you using?

✅ Officially supported ✅
- [ ] IE 9 / IE 10 / IE 11
- [ ] Edge
- [x] Chrome

⚠️ Not officially supported, but "should work" ⚠️
- [ ] Firefox
- [ ] Safari

---

### I'm submitting a ...

- [x] 🐛 Bug Report
- [ ] 💡 Feature Request

---

### Issue Details

```
Please include:
- What the current behavior is
Added dependency data-grid and data-grid-addon version 6.1.0 to my project.
If I run `yarn audit` I get the following security warning

┌───────────────┬──────────────────────────────────────────────────────────────┐
│ high          │ Regular Expression Denial of Service                         │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ parsejson                                                    │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Patched in    │ No patch available                                           │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ react-data-grid-addons                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ react-data-grid-addons > ron-react-autocomplete >            │
│               │ socket.io-client > engine.io-client > parsejson              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://www.npmjs.com/advisories/528                         │
└───────────────┴──────────────────────────────────────────────────────────────┘

- What the desired behavior is
No audit warnings about data-grid-addon dependencies.

- (If Bug) Steps to reproduce the issue
1. add version 6.1.0 as a project dependency
```


### Which version of React JS are you using?

☣️ Not officially supported, expect warnings and errors ☣️
- [x] v16.x.x

---

### Which browser are you using?

✅ Officially supported ✅
- [ ] IE 9 / IE 10 / IE 11
- [ ] Edge
- [x] Chrome

---

### I'm submitting a ...

- [ ] 🐛 Bug Report
- [x] 💡 Feature Request

---

### Issue Details

- What the current behavior is

currently all cells can be selected / focused

- What the desired behavior is

I would like to disable selecting specific cells. At the very minimum I would like the tab navigation to only include editable cells. 

Lets assume that I have a table with 3 rows and 3 columns, the first column should not be editable / locked. 
Therefore you start in the 2nd column of the 1st row. Now you press tab, you get to the 3rd column, now you press tab again and you should be in the 2nd row/2nd column (skipping over the 1st column of the 2nd row).

- (If Feature) The motivation / use case for the feature

I would like to replicate the behaviour of locked cells in excel.


- Have you already searched for similar issues? Please help us out and double-check first!
Yes, there is an issue related to columns reordering (#1838) so just want to confirm I've already went through that one and it's not related.
- Also, please don't be that person who deletes this template. It's here for a reason.

- Thanks!

---

### Which version of React JS are you using?

✅ Officially supported ✅
- [ ] v15.4.x

⚠️ Not officially supported, expect warnings ⚠️
- [ ] v15.5.x
- [ ] v15.6.x

☣️ Not officially supported, expect warnings and errors ☣️
- [X] v16.x.x

---

### Which browser are you using?

✅ Officially supported ✅
- [ ] IE 9 / IE 10 / IE 11
- [ ] Edge
- [X] Chrome

⚠️ Not officially supported, but "should work" ⚠️
- [ ] Firefox
- [X] Safari

---

### I'm submitting a ...

- [X] 🐛 Bug Report
- [ ] 💡 Feature Request

> 👋 Need general support? Not sure about how to use React itself, or how to get started with the Grid?
> Please do not submit a support request here. Instead see

> https://github.com/adazzle/react-data-grid/blob/master/docs/CONTRIBUTING.md

---

### Issue Details
Steps where it works properly:
1. Do not scroll below the initially loaded items of the table (related to minHeight, number of items etc. the table we have is loading 40k elements)
2. Change columns
3. Table appears as expected

Steps to reproduce the bug:
1. Scroll below the initially loaded items (3-4 screens).
2. Change columns
3. Table rows are not being loaded, until the user scrolls up or down. After scrolling up or down table loads rows as expected

Desired behavior here would be that it loads items right away instead of waiting for scroll event to happen in order to load the elements in the table. My assumption is that the issue is with the infinite scroll not checking on which section it is, after making changes to the columns table is loading. Instead, it assumes it's on the initial page.
```
Please include:
- What the current behavior is
- What the desired behavior is
- (If Bug) Steps to reproduce the issue
- (If Feature) The motivation / use case for the feature

We especially love screenshots / videos of problems, and remember
The Best Issue Is A Pull Request™
```


Can this library handle HUMONGOUS rows of data in a memory-reasonable manner?
Hi Everyone,

I need a nested master/detail grid (similar to this one https://www.ag-grid.com/javascript-grid-master-detail/) and wanted to know if there is already anything I can continue working on. I was thinking that the easiest (and probably a bit messy) would be if I can possibly use custom row renderer to add another instance of the grid inside which can be linked using parent and child grid ids. Any thought on this s appreciated. Will start working on it anyway and share the results if there was any success or a proper failure.

Thanks
---

### Which version of React JS are you using?

✅ Officially supported ✅
- [ ] v15.4.x

⚠️ Not officially supported, expect warnings ⚠️
- [ ] v15.5.x
- [ ] v15.6.x

☣️ Not officially supported, expect warnings and errors ☣️
- [ ] v16.x.x

---

### Which browser are you using?

✅ Officially supported ✅
- [ ] IE 9 / IE 10 / IE 11
- [ ] Edge
- [ ] Chrome

⚠️ Not officially supported, but "should work" ⚠️
- [ ] Firefox
- [ ] Safari

---

### I'm submitting a ...

- [ ] 🐛 Bug Report
- [x] 💡 Feature Request

> 👋 Need general support? Not sure about how to use React itself, or how to get started with the Grid?
> Please do not submit support request here. Instead see

> https://github.com/adazzle/react-data-grid/blob/master/CONTRIBUTING.md

---

### Issue Details

```
Please include:
- What the current behavior is
- What the desired behvaior is
- (If Bug) Steps to reproduce the issue
- (If Feature) The motivation / use case for the feature

We especially love screenshots / videos of problems, and remember
The Best Issue Is A Pull Request™
```


- Have you already searched for similar issues? Please help us out and double-check first!

- Also, please don't be that person who deletes this template. It's here for a reason.

- Thanks!

---

### Which version of React JS are you using?

✅ Officially supported ✅
- [ ] v15.4.x

⚠️ Not officially supported, expect warnings ⚠️
- [ ] v15.5.x
- [ ] v15.6.x

☣️ Not officially supported, expect warnings and errors ☣️
- [X] v16.x.x

---

### Which browser are you using?

✅ Officially supported ✅
- [ ] IE 9 / IE 10 / IE 11
- [X] Edge
- [X] Chrome

⚠️ Not officially supported, but "should work" ⚠️
- [ ] Firefox
- [ ] Safari

---

### I'm submitting a ...

- [X] 🐛 Bug Report
- [ ] 💡 Feature Request

> 👋 Need general support? Not sure about how to use React itself, or how to get started with the Grid?
> Please do not submit support request here. Instead see

> https://github.com/adazzle/react-data-grid/blob/master/CONTRIBUTING.md

---

### Issue Details

Steps to reproduce:
1. Make demo from the official site using `react-data-grid` and `react-data-grid-addons` v. 6.1.0 without using `Immutable` ([Sandbox](https://codesandbox.io/s/react-data-grid-reordering-issue-nxnel)).
2. Try to reorder the columns.

**Expected result:** columns are reordered.
**Actual result:** columns are not reordered.

I investigated the bug and found out that [here in `componentWillReceiveProps`](https://github.com/adazzle/react-data-grid/blob/master/packages/react-data-grid/src/ReactDataGrid.js#L277) there is a check of current and next props via `ColumnMetrics.sameColumns` method. I've created a [Sandbox](https://codesandbox.io/s/react-data-grid-columns-comparison-j2nq1) with the working part of this method (`compareEachColumn`, because `areColumnsImmutable` returns `false` if `Immutable` is not used) to play around with it and better understand what's going on here.
It seems, that this algorithm compares the columns structures (that are the same of course), but doesn't take into account their order.

Maybe a snippet like this may solve the problem:
```javascript
function compareEachColumn(prevColumns, nextColumns, isSameColumn) {
  let i;
  let len;
  let column;
  const prevColumnsByKey = {};
  const nextColumnsByKey = {};

  if (getSize(prevColumns) !== getSize(nextColumns)) {
    return false;
  }

  // Possible solution.
  for (i = 0, len = getSize(prevColumns); i < len; i++) {
    column = prevColumns[i];
    const nextColumn = nextColumns[i];
    if (!isSameColumn(column, nextColumn)) {
      return false;
    }
  }

  // the rest code.
}
```

I'd like to create a pull request, but I'm afraid that I don't know enough about the library and if it may break something down anywhere/in any corner cases.