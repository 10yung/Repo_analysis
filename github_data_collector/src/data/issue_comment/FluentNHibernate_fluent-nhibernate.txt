## Exception Message
   'column "MyEnum" is of type enum_name but expression is of type text'

## Can't insert data base on code below

```csharp
public class MyClass
{
    public virtual enum_name MyEnum {get; set;}
}

public enum enum_name 
{
   nameone,
   nametwo,
   namethree
}

public class MyClass_Map : ClassMap<MyClass>, IPostgreMap
{
    public MyClass()
    {
        this.Table("MyClass");
        Map(x => x.MyEnum).Not.Nullable().Column("MyEnum").CustomSqlType("enum_name");
    }
}
```



the database was already created by the time the c# code was developed.
here is the ddl of the table:
```sql
CREATE TABLE public.meta_producoes (
	MyEnum enum_name  NOT NULL DEFAULT 'nameone'::enum_name
);
```


Dear Support,

I have problems with mapping.

In class i'm using timezoneinfo property, but when i mapping i have errors.

Example:
```
public class City : ICity
	{
		public virtual string Name { get; set; }
		public virtual TimeZoneInfo TimeZoneInfo { get; set; }
	}
```

```
public class CityMap : ClassMap<City>
	{
		public CityMap()
		{
			Map(x => x.Name).Not.Nullable();

			References(x => x.TimeZoneInfo).Not.Nullable();
		}
	}
```

I'm trying to use mapping of TimeZoneInfo class. but i have to added to all properties virtual

**Inner Exception**
Could not load type 'System.Web.Caching.CacheItemPriority' from assembly 'System.Web, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a'.":"System.Web.Caching.CacheItemPriority

**Exception
![nhibernate cache issue](https://user-images.githubusercontent.com/16057911/71021957-5d3ce580-2125-11ea-88cf-e9fe5cdadbbd.jpg)
**
{"An invalid or incomplete configuration was used while creating a SessionFactory. Check PotentialReasons collection, and InnerException for more detail.\r\n\r\n

Updated methods to use the Any() Linq extension method. Using Count() is horrible for performance.
Hi, fluentnhibernate.org which is shown in the top bar of the repo now redirects to a third party site.

I'm using Fluent NHibernate and trying to set listeners which expects a dependency. I'm trying to resolve the dependency which is registered in Autofac container. 

An idea how I can change the following code to support dependency injection in Listener class.

Registration
*************
var configuration = Fluently.Configure()
                .Mappings(m => m.FluentMappings.AddFromAssemblyOf<TasksMap>())
                .ExposeConfiguration(x =>
                {
                
                    x.SetListeners(ListenerType.PostCommitUpdate, new[] { typeof(PublishExternalEvents).AssemblyQualifiedName });
                })
                .Database(OracleManagedDataClientConfiguration.Oracle10.ConnectionString(connectionString));


Lister Class
************ 

 public class PublishExternalEvents : IPostInsertEventListener, IPostDeleteEventListener, IPostUpdateEventListener,
                                          IPostCollectionUpdateEventListener
    {
    private readonly IDispatch _dispatch;
     public PublishExternalEvents(IDispatch dispatch)
        {
            _dispatch = dispatch;
        }
}

Added a line at the end of README.md file
The SQL statement generated by HasOne mapping in FluentNHibernate will be out-of-line, which takes too long to serialize to list.

` 

1.    public class vProductMap : ClassMap<vProduct>
2.     {
3.         public vProductMap()
4.         {
5.             Id(p => p.ProductId);
6.             HasOne(p => p.Product).LazyLoad();
7.         }
8.      }

`

`
1. select ...
2.  FROM
3.         vProduct this_ 
4.     left outer join
5.         Product product2_ 
6.             on this_.ProductId=product2_.ProductId 
7. where ...

`
When I Fluently.Configure with fluent nhibernate I register mapping assemblies.
If I make a mistake in the name of mapping assembly and try to select something with Query or 
QueryOver - I receive empty result. It's really a problem - I need to guess whether there is no data returned from Db or mapping is not loaded.
Can you please throw an Exception while creating Fluently.Configure or while selecting data if no mapping where specified?
Goal:
*Use Stored procedure to retrieve the data and then paste it in the class personprofile and order.
*Use Fluent Nhibernate in order to retrieve the mapping data that is one to many mapping.
*Get or retrieve the data only and not edit, delete or add data.

Problem:
It doesn't work. What part am I missing?

Info:
Using Asp.net core, SQL server, C#

Thank you!
```

`SQL

CREATE TABLE [dbo].[PersonProfil]
(
    [PersonProfilId] [int] IDENTITY(1,1) NOT NULL,
    [Firstname] [nvarchar](50) NOT NULL,
    [Lastname] [nvarchar](50) NOT NULL
)


CREATE TABLE [dbo].[Order]
(
    [OrderId] [int] IDENTITY(1,1) NOT NULL,
    [PersonProfilId] [int] NOT NULL,
    [ProductName] [nvarchar](50) NOT NULL,
)


INSERT INTO [dbo].[PersonProfil]([Firstname],[Lastname])
     VALUES ('a' ,'a')
GO

INSERT INTO [dbo].[PersonProfil]([Firstname],[Lastname])
     VALUES ('a' ,'a')
GO

INSERT INTO [dbo].[Order]([PersonProfilId],[ProductName])
     VALUES (1, 'aaa')
GO

INSERT INTO [dbo].[Order]([PersonProfilId],[ProductName])
     VALUES (1, 'bbb')
GO

INSERT INTO [dbo].[Order]([PersonProfilId],[ProductName])
     VALUES (2, 'ccc')
GO


CREATE PROCEDURE GetPersonProfil
AS  
BEGIN  

    SELECT
        a.[PersonProfilId],
        a.[Firstname],
        a.[Lastname]
    FROM 
        [dbo].[PersonProfil] a
        LEFT JOIN [dbo].[Order] b ON a.[PersonProfilId] = b.[PersonProfilId]
    WHERE
        a.[PersonProfilId] = 1

END  
GO`



C sharp

`public class PersonProfilFactory
{
    public static PersonProfil GetPersonProfil()
    {
        using (NHibernate.ISession session = FluentNHibernateHelper.OpenSession())
        {
            return session.CreateSQLQuery("EXEC GetPersonProfil")
                                    .AddEntity(typeof(PersonProfil))
                                    .List<PersonProfil>().Single();
        }
    }
}




public static class FluentNHibernateHelper
{
    public static NHibernate.ISession OpenSession()
    {
        string connectionString = "";

        ISessionFactory sessionFactory = Fluently.Configure()
            .Database(MsSqlConfiguration.MsSql7.ConnectionString(connectionString).ShowSql())
            .Mappings(m => m.FluentMappings.AddFromAssemblyOf<PersonProfil>()
                                           )
            .ExposeConfiguration(cfg => new SchemaExport(cfg).Create(false, false))
            .BuildSessionFactory();

        return sessionFactory.OpenSession();
    }
}




public class PersonProfil
{
    public virtual int PersonProfilId { get; set; }
    public virtual string Firstname { get; set; }
    public virtual string Lastname { get; set; }
    public virtual List<Order> Order { get; set; }
}




public class Order
{
    public virtual int OrderId { get; set; }
    public virtual int PersonProfilId { get; set; }
    public virtual string ProductName { get; set; }
}




public class PersonProfilMapping : ClassMap<PersonProfil>
{

    public PersonProfilMapping() : base()
    {
        Id(x => x.PersonProfilId);
        Map(x => x.Firstname);
        Map(x => x.Lastname);

        HasMany<Order>(x => x.Order).KeyColumn("PersonProfilId").Cascade.AllDeleteOrphan();
    }
}`
```
