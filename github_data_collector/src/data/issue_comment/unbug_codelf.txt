今天看到流量涨了三四倍，不知为何，特奉上个减压彩蛋

只要搜“咸鱼”就能看到这个唯美的彩蛋，看不到的同学等 ServiceWorker 更新完再刷新试试

娱乐娱乐，开心就好，传送门
https://unbug.github.io/codelf/#%E5%92%B8%E9%B1%BC
看了半天issue，好像没有只有chrome APP，没有支持chrome扩展程序（chrome extensions），自己写了个。[codelf chrome 扩展程序](https://github.com/Junezm/chrome-plugin/tree/master/codelf)
首先把 codeIf 的代码下载到本地，下面开始安装
step1：打开chrome 扩展程序
![image](https://user-images.githubusercontent.com/16557020/71800319-c4014f00-3092-11ea-9c3f-cd1215228acb.png)
step2: 打开 开发者模式
step3：加载已解压的扩展程序
![image](https://user-images.githubusercontent.com/16557020/71800463-23f7f580-3093-11ea-849e-28cfcb18377a.png)
step4: 选中代码文件
![image](https://user-images.githubusercontent.com/16557020/71800756-e778c980-3093-11ea-84dd-b3a42ec14805.png)
step5: 加载完毕，扩展程序栏出现 codeIf 图标
![image](https://user-images.githubusercontent.com/16557020/71800621-8cdf6d80-3093-11ea-8835-4943c1e69463.png)
step6: 点击图标，页面就出来
![image](https://user-images.githubusercontent.com/16557020/71800673-a54f8800-3093-11ea-9379-7e11e02fc5fe.png)





针对 Vim/Neovim 用户

## 链接

[vim-codelf](https://github.com/voldikss/vim-codelf)

## 安装
```vim
Plug 'voldikss/vim-codelf'
```

## 用法
使用示例按键映射
```vim
inoremap <silent> <F9> <C-R>=codelf#start()<CR>
nnoremap <silent> <F9> :call codelf#start()<CR>
```
- 按 `<F9>` 或者执行命令 `:Codelf [word]` 实现搜索并将结果作为补全候选
- 如果 `:Codelf [word]` 太慢等不了，可以用 `:CodelfOpenBrowser [word]`来一键打开浏览器并导航到在 coodelf 网站相应单词的搜索界面

## 效果展示

![](https://user-images.githubusercontent.com/20282795/71583991-a2acda00-2b4b-11ea-99aa-097762e92383.gif)
![](https://user-images.githubusercontent.com/20282795/71583992-a2acda00-2b4b-11ea-8f72-1d0068b020ff.gif)
By choosing a field related to app,like if I want to make a medicine list app ,then the extension must fetch me all the medicine related variables.
不能管理star项目了吗
我说的这个需求
一般在培训机构 学生自学 新手项目中 会经常用到。
作为中国人 字段注释都喜欢用中文标示

关于变量这里 我想实现的是在输入框输入以下信息
个人信息类
姓名
年龄
出生日期
城市
地区
乡镇
公司
职位

提交这些中文之后 
你这里能直接后台返回 json格式的信息
姓名 name
年龄 age
出生日期 birthday
城市 city
地区 region
乡镇 random
公司 company
职位 position

好处就是 
我只需要把所有的字段 都用中文写好
直接提交给你
你可以根据我的需要直接生成一整套方案.

如果我对某一个字段的命名不习惯 可以在前台直接可视化选择 那就更好了.

目前来看  能返回json 就不错了.

不知道我这个需求 怎么样?
I tried for some name searching, It just gave me many words and I had to pick the right one. I had to choose one name from tens of words, it's just fucked me. Hope you could do better with the time
# 关于Listary
- Listary是一款用于Windows的文件名定位/搜索辅助软件。它为Windows传统低效的文件打开/保存对话框提供了便捷、人性化的文件（夹）定位方式，同时改善了常见文件管理器中文件夹切换的效率。
- Listary官网: [下载地址](https://www.listary.com/)

# 效果截图
![snipaste_2019-01-20_22-55-44](https://user-images.githubusercontent.com/38807139/51440913-db6eed00-1d06-11e9-8da6-b24943ec5d4e.png)

# 设置教程
1. 启动Listary后，右键任务栏处的Listary图标，点击选项
![snipaste_2019-01-20_23-00-17](https://user-images.githubusercontent.com/38807139/51441081-d1e68480-1d08-11e9-9f5f-e97636547bed.png)

2. 出现Listary选项界面后，点击左侧导航栏的 <关键字> 菜单项，默认即是Web栏目，点击页面下方 <+> 号添加新条目，可以按照下图设置(关键字和显示名称可以自定义)
![snipaste_2019-01-20_23-03-43](https://user-images.githubusercontent.com/38807139/51441005-0a399300-1d08-11e9-93b5-c74d329e8ba6.png)

# 其他事项
- Listary还不止搜索文件的功能，免费版也足够日常使用，最近更新的6.0Beta版本更是令人惊喜，有兴趣的可以去Listary社区了解一下.以上本人与作者无任何利益相关(只不过白嫖了很久，心里有点过意不去)
- 给大家拜个早年，希望这个教程可以帮到大家。
练字帖会使人注意力高度集中，加深记忆。CODELF 多了一个贴心的功能 - 算法字帖。每天从GitHub 
 多个流行的算法 repo 选一个算法让同学们临摹，其中包括获得4万个 GitHub Star 的 trekhleb/javascript-algorithms repo。

支持的语言有：C, Python, JavaScript, Java, Swift 

怕把学校里学的算法忘光了？算法书看不下去？机器学习要了解一下？换工作想练算法？都坚持不下来？？？重拾儿时的练字方法，来试试每天花 5 分钟用 CODELF 算法字帖临摹算法吧。

如图，在又上角的板子按钮，刷不出来的同学关了浏览器标签再打开。目前不支持竖屏手机 https://unbug.github.io/codelf/

![image](https://user-images.githubusercontent.com/799578/51440235-f1c57a80-1cff-11e9-9089-70fceed73a39.png)

演示效果：
![jan-20-2019 14-29-06](https://user-images.githubusercontent.com/799578/51436194-75ad4180-1cc3-11e9-9ca0-80a0a56b9d7c.gif)

![image](https://user-images.githubusercontent.com/799578/51435445-71c4f380-1cb2-11e9-87a4-edc54cbe7052.png)


# 写在前面
作者的精力有限，仅给 CODELF 开发了 Atom, VS Code, Sublime 的插件。你可以在 [WiKi](https://github.com/unbug/codelf/wiki) 找到其他编辑器如何添加 CODEL 一键搜索的方法。
如果，你有兴趣给自己喜爱的编辑器开发 CODELF 插件，请往下看。

# 开发思路
CODELF 和 Google，Baidu 类似，可以通过拼装 URL 直接搜索，如 [https://unbug.github.io/codelf/#AI](https://unbug.github.io/codelf/#AI)。

即，`https://unbug.github.io/codelf/#搜索内容`。

# 案例说明
CODELF 的  Atom, VS Code, Sublime 的插件都是这么实现的，将选中的内容拼装成`https://unbug.github.io/codelf/#搜索内容`打开浏览器即可实现搜索。

有些编辑器有搜索引擎插件，可以直接添加 CODELF 实现一键搜索，[如 WebStorm 的 OnlineSearch](https://github.com/unbug/codelf/issues/24).

有的编辑器的插件可以直接打开 WebView, 你只需要将 WebView 的地址设置成`https://unbug.github.io/codelf/#搜索内容`即可。如 [CODELF 的 Atom 插件](https://github.com/unbug/codelf#codelf-for-atom)。

是不是超级简单？

# 必读
 * CODELF 中文转英文部分用的是有道翻译 API 的免费套餐，1小时仅有1K的请求次数限制！
 * 所以，如果你是二次开发亦或自造轮子，**请单独申请自己的有道翻译 API 的 KEY，否则会直接影响 CODELF 的用户**。
 * 有道翻译 API 申请参看： http://fanyi.youdao.com/openapi?path=data-mode