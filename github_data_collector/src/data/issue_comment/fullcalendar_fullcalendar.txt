### Bug Reports
Based on this document https://github.com/fullcalendar/fullcalendar/blob/master/CONTRIBUTING.md#getting-set-up

I tried `npm install` but seems that there is a problem with the dependencies.

To let `npm-install` work i had to change in **package.json**  this line:

`"rollup-plugin-multi-entry": "github:arshaw/rollup-plugin-multi-entry#dist" `

that is moved and no longer supported to this:

`"@rollup/plugin-multi-entry": "^3.0.0",`

and also change his reference into **rollup.config.js**:
`const multiEntry = require('@rollup/plugin-multi-entry')`

https://github.com/fullcalendar/fullcalendar/commit/bee86572bc3506dabf6b9820da80f0564b15514a
### Feature Requests

The `validRange` option perfectly works for dates. But there is nothing like that for time-cells.  
Yes, I'm aware of `minTime` option, but it is kinda static parameter. I think it will be very useful if `validRange` option works for time-cells in `timeGridDay` view.  

For example,  I want 'valid' time only greater than now moment i.e. I don't want the cells with time lesser than 'now' be active/selectable/clickable.
Reported in https://fullcalendar.freshdesk.com/a/tickets/1469

Using the example from the docs, renderSkeleton does not get called:

https://codesandbox.io/s/fullcalendar-react-3stjz
### Information about bug:
- Version: 4.3.1
- Framework: Vue, also reproducible on Vanilla version
- Codepen: https://codepen.io/georgehrke/pen/rNaJRKp

### Reproduction steps
- Initialise a minimal fullcalendar as documented
- Add some events
- Define a custom eventTimeFormat with `omitZeroMinute: false`

### Expected behaviour:
- Events previously displayed as `7p event name` turn into `7:00p event name`

### Actual behavior:
- Events are displayed as `MM/DD/YYYY event name`

### Why am i expecting my described behaviour:
- https://fullcalendar.io/docs/date-formatting
> None of the above properties are required. You may provide an assortment of these properties and the browser will do the best job it can to produce a string with all this information.

I expect to be able to set omitZeroMinute without redefining all the other possible date-formatting properties. I want to preserve all locale settings loaded previously, but I want to make sure that no matter what the locale is, it never omits zeros.

Edit:
Since you are using `Intl.DateTimeFormat` nowadays, i should mention some affected browsers:
- Safari 13.0.4 on macOS 10.15.2
- Chrome 81 on macOS 10.15.2
- Firefox 72 on macOS 10.5.2
- Firefox 71 on Windows 10 (Browserstack)
(Didn't find any browser where it works as expected)
### Feature Requests

Request for a single callback , when an event is dragged and dropped over another event, just like eventDrop. 

Issue with eventOverlap is , it emits continuous events , when an events is dragged over another event, which is great for disabling the overlap based on some condition. 

But there is no way to get a single callback ( like event drop ), when an event is dropped over another. I want to show a confirmation popover based on data present in both events.

eventDrop does not have information on , which event is dropped on which event.

### React/Vue/Angular/etc
Angular

Hi,

In my use case, and in any example I found, column width is not the same everywhere.

Ex: For a calendar of 1436px, with 7 columns, 6 first are at 205px and last one at 206px.
Why column width is not ~205.15px for the 7?

In my particular use case, I have a dayGridWeek overlaped by my own component and so the columns are not matched.

Thank you for your great job here.
Hi,

Im trying to use the trial version of the scheduler add-on. I added the libraries from the file "fullcalendar-scheduler-4.3.1.zip" to the project with the "Script Tags" method but when i try to use it with mootools-core JS it gives an error in the browser console like this:
![jserror](https://user-images.githubusercontent.com/59280081/71511513-ef19c080-2892-11ea-89a4-3de101070ec6.png)

As you can see the schedular library tries to use to mootools-core-2.js library.
I tried it with the given "vertical-resource-view.html" example. It works good without the mootools-core js but when i add the mootools-core library it gives an error like on the picture.
Is there a solutions for this problem ?

thanks
The fact that the json event source caches the events leads to the following : when an json call fails, that already cached events are shown. This can be ok in one case and bad (even dangerous) in another, depending on the desired implementation. 
A general solution of this specific problem and a nice option to have would be to implement an explicit "Clear cache" method that can be called on event source failure, if desired. It would be good, if the method has a parameter that defines, if calendar re-render should happen after the cache is cleared. Also, some granularity would be also nice, like (optionally) defining a period, for which the cache to be cleared.
In general, opening the cache access would be great for flexibility. Apart from cleaning the cache, a way to inject data in the cache would be also nice. This would allow pre-loading the cache for json sources, which would spare an ajax call on page load.
I use fullcalender 4.3.1 to show events in the resourceTimelineWeek.
I show the start time and the end time. When the eventTextColor is not white and the event duration is very small it will show the end time ouside the border of the event. You can see this in the next codepen example. I need the black eventTextColor because i show some events on a white foreground. 
[https://codepen.io/jackmagielse/pen/QWwpQQV](https://codepen.io/jackmagielse/pen/QWwpQQV)
![example](https://user-images.githubusercontent.com/48093740/71244832-b0748b00-2313-11ea-8703-d34ccf91c0ae.jpg)

I have a setup, where the user can select which resources to show in calendar dynamically. This works well and out of the box for the resource view, but in month/week/day views nothing changes (it even breaks the 'eventLimit' on resources change, but that is a different story, that I can't reproduce for now). 

So, in short, there is "filterResourcesWithEvents" but what about "filterEventsWithResources" ?