An error will be reported, in line 886 "KlayGE\RenderEffect.hpp",when Loadind "RenderableHelper.fxml" in two different frames.The Error is "vector subscript out of range".
- [ ] C++20 format
- [x] Upgrade to Boost 1.72
- [ ] clangcl support
cling based C++ as scripting language / hot code reload
Why? Able to run C++ script in runtime or compile it for max speed ( as in example https://github.com/derofim/cling-cmake )

> **HOT code reload**
> possible approaches:
> 
> store app state
> fix cling undo for files
> https://root-forum.cern.ch/t/loading-unloading-class-as-interpreted-macro-in-cling-multiple-times/32976/2
> 
> execute cling code to change callbacks & variables
> nested cling::Interpreter with multiple cling::MetaProcessor
> IDK how to do it, but you can create child cling::Interpreter

Compile HLSLs to D3D11/D3D12/OGL/OGLES/... shaders

Related to #113
Use OpenXR (https://www.khronos.org/openxr) to handle VR and AR devices.
I hope you will consider a permissive license instead of the GPL. Like MIT, BSD, Apache, or zlib. The GPL is not friendly to struggling indie game developers who would someday like to make money with what they work on. There's basically no endgame where one can pay the bills. There are a lot of game engines out there and permissive licenses are very common.
Publish binaries and maybe use them to setup android and UWP CI
A bunch of functionalities used in KlayGE are marked as deprecated on newer macOS SDK. Need to clear them and move forward to new ones.
Currently in MeshConverter, only static model can be saved. Joints and key frames are skipped during exporting. We need to enhance the exporter for completeness.

- [ ] Switch to C++ interface of assimp,
- [ ] Fit skinned model to new node-based model
- [ ] Save skinned model to file
Take DXR to implement GI effects