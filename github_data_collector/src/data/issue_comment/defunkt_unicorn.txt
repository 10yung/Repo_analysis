Hey there,

Used your example config and noticed that it spits warning:

'nginx: [warn] duplicate MIME type "text/html" in /path/to/nginx.conf'

Digged around a bit and found that it is because there is no need to explicitly turn on compression for 'text/html'. It's always turned on by default.

It is considered bad form to include a `set -e` in a script destined for /etc/init.d.  If there is an error in the script, the boot process may hault if `set -e` is used.  See http://serverfault.com/a/416097/236060


I have found that the way this gem works, the unicorn rack env parameter will overwrite the rails environment name (`ENV["RAILS_ENV"]` variable).

Example:

```
RAILS_ENV=staging BUNDLE_GEMFILE=/var/www/giga_webapp-staging/current/Gemfile bundle exec unicorn_rails -c config/unicorn.rb -E deployment -D
```

Expect:
1. That the unicorn rack environment name is "deployment" (it is).
2. That the ENV["RAILS_ENV"] variable remains as "staging"

Get:
1. The ENV["RAILS_ENV"] variable is NOT staging; it is "deployment".
2. I am unable to reliably use the ENV["RAILS_ENV"] variable in the unicorn.rb config file, as a result.

I recommend that these two variables/environment names should not influence each other. 
1. In a multi stage configuration, a site's rails environment may change names in each different environment (eg: Production, Staging, Development... plus other possible). 
2. Unicorn, however, supports two rack environments ("deployment" or "development" or none). These have effects on what middleware is loaded, and effects on performance http://unicorn.bogomips.org/unicorn_1.html#rack-environment
3. Therefore, it must be possible to choose a RAILS_ENV independently of the unicorn rack environment.

The suggested code change, while it stops the RAILS_ENV variable from being overwritten, is not a full solution. I opened this pull request to discuss this issue and possible solutions, though.

You will need to finish this off and add the `.markdown` extension.

No worries!
