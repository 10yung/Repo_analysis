Hi,
I have some questions about oncoprint function.
In instruction manual, i can reorder column by "column_order = sample_order (user defined list)".

Is it possible to automatically reorder in subgroup define by user?
Let's say we have two distinct tumor group, how can we reorder sample column in each subgroup?

![Oncoprint_sample](https://user-images.githubusercontent.com/40367441/72581994-4964da80-38af-11ea-92d2-6d470a725365.PNG)

- [ ]  add annotation name for the text annotations #295
- [ ] `densityHeatmap()`: add arguments to control whether show the quantile lines #312 
- [ ] support biclustering? how? #314 
- [ ] fix a bug of multiple horizontal legends put below the heatmap #318 
- [ ] support ggtree? #343
- [ ] improve the calculation of break values in the legends #362 
- [ ] the first page is still empty (the figure is in the second page) when saving oncoPrint into PDF (maybe other plots) #366 
- [ ] UpSet plots: optimize the processing of many sets (current solution consumes huge memory) #320 
- [ ] UpSet plots: the "intersect" and "union" seem not correct. Need more tests. #382 
- [ ] support a global and over-legends (e.g. gaps between legends) controls for multiple legends #387 #394 
- [ ] Setting a matrix as annotations is sometimes confusing, e.g. which dimension of the matrix should be corresponded to the heatmap row or columns. A solution is to automatically check it by looking at the dimension of the annotation matrix and the heatmap matrix. #392 
- [ ] `grid.dendrogram()`: optimized it solve the problem of "node stack overflow" #400 
I am working with data where I have a bar plot and I would like the bar plot to be able to be colored differently using a function.  How can I do this?  The function would just be use one color for all bars that share a different data value or feature.  Any help is appreciated!  Thanks!
Mark
I would like to able to use cell_fun to print the values of my cells.  When I try to do what you do at
https://jokergoo.github.io/ComplexHeatmap-reference/book/a-single-heatmap.html#customize-the-heatmap-body
in section 2.9.1, but skip the font size, I get something unreadable.  If I set the font size it is more readable, but I still can't see individual cell values.  This is partly because I have around 130 columns.  I would like to be able to make one heatmap that is readable with values.  I am also interested on if I can split my heatmap into multiple pieces, by column, but not lose the coloring being determined by the whole row(for the purpose of printing out the charts).  Please let me know if this is possible!  Thanks for such an amazing piece of software!
Mark
I've tried running this code several times but it does not work:

```
library(ComplexHeatmap)
alter_fun = list(
  mut1 = function(x, y, w, h) 
    grid.rect(x, y, w, h, gp = gpar(fill = "red", col = NA)),
  mut2 = function(x, y, w, h) 
    grid.rect(x, y, w, h, gp = gpar(fill = "blue", col = NA)),
  mut3 = function(x, y, w, h) 
    grid.rect(x, y, w, h, gp = gpar(fill = "yellow", col = NA)),
  mut4 = function(x, y, w, h) 
    grid.rect(x, y, w, h, gp = gpar(fill = "purple", col = NA)),
  mut5 = function(x, y, w, h) 
    grid.rect(x, y, w, h, gp = gpar(fill = NA, lwd = 2)),
  mut6 = function(x, y, w, h) 
    grid.points(x, y, pch = 16),
  mut7 = function(x, y, w, h) 
    grid.segments(x - w*0.5, y - h*0.5, x + w*0.5, y + h*0.5, gp = gpar(lwd = 2))
)
test_alter_fun(alter_fun)
```
I get the following error:
```
Error in test_alter_fun(alter_fun) : 
  could not find function "test_alter_fun"
```

here is my session information:
```
> sessionInfo()
R version 3.5.1 (2018-07-02)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS  10.14.6

Matrix products: default
BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
 [1] grid      stats4    parallel  stats     graphics  grDevices utils     datasets  methods  
[10] base     

other attached packages:
 [1] ComplexHeatmap_1.20.0  expands_2.1.2          trackViewer_1.18.3     rtracklayer_1.42.2    
 [5] Gviz_1.26.5            tidyr_1.0.0            dplyr_0.8.3            yarrr_0.1.5           
 [9] circlize_0.4.8         BayesFactor_0.9.12-4.2 Matrix_1.2-18          coda_0.19-3           
[13] jpeg_0.1-8.1           g3viz_1.1.2            RColorBrewer_1.1-2     stringr_1.4.0         
[17] GenVisR_1.14.2         cellscape_1.6.0        AneuFinder_1.10.2      cowplot_1.0.0         
[21] GenomicRanges_1.34.0   GenomeInfoDb_1.18.2    IRanges_2.16.0         S4Vectors_0.20.1      
[25] AneuFinderData_1.10.0  copynumber_1.22.0      BiocGenerics_0.28.0   

loaded via a namespace (and not attached):
  [1] tidyselect_0.2.5            RSQLite_2.1.5               AnnotationDbi_1.44.0       
  [4] htmlwidgets_1.5.1           ReorderCluster_1.0          BiocParallel_1.16.6        
  [7] RNeXML_2.4.0                munsell_0.5.0               codetools_0.2-16           
 [10] colorspace_1.4-1            BiocInstaller_1.32.1        Biobase_2.42.0             
 [13] knitr_1.26                  uuid_0.1-2                  rstudioapi_0.10            
 [16] rJava_0.9-11                labeling_0.3                GenomeInfoDbData_1.2.0     
 [19] bit64_0.9-7                 farver_2.0.1                vctrs_0.2.1                
 [22] xfun_0.11                   cgdsr_1.3.0                 biovizBase_1.30.1          
 [25] R6_2.4.1                    doParallel_1.0.15           AnnotationFilter_1.6.0     
 [28] flexmix_2.3-15              bitops_1.0-6                DelayedArray_0.8.0         
 [31] assertthat_0.2.1            scales_1.1.0                nnet_7.3-12                
 [34] gtable_0.3.0                phylobase_0.8.6             swirl_2.4.4                
 [37] ensembldb_2.6.8             rlang_0.4.2                 MatrixModels_0.4-1         
 [40] zeallot_0.1.0               GlobalOptions_0.1.1         splines_3.5.1              
 [43] lazyeval_0.2.2              acepack_1.4.1               dichromat_2.0-0            
 [46] checkmate_1.9.4             BiocManager_1.30.10         yaml_2.2.0                 
 [49] reshape2_1.4.3              GenomicFeatures_1.34.8      backports_1.1.5            
 [52] Hmisc_4.3-0                 RMySQL_0.10.18              tools_3.5.1                
 [55] ggplot2_3.2.1               ellipsis_0.3.0              gplots_3.0.1.1             
 [58] ggdendro_0.1-20             DNAcopy_1.56.0              Rcpp_1.0.3                 
 [61] plyr_1.8.5                  base64enc_0.1-3             progress_1.2.2             
 [64] zlibbioc_1.28.0             purrr_0.3.3                 RCurl_1.95-4.12            
 [67] prettyunits_1.0.2           rpart_4.1-15                GetoptLong_0.1.7           
 [70] pbapply_1.4-2               viridis_0.5.1               SummarizedExperiment_1.12.0
 [73] ggrepel_0.8.1               cluster_2.1.0               magrittr_1.5               
 [76] data.table_1.12.8           NbClust_3.0                 mvtnorm_1.0-11             
 [79] grImport_0.9-3              ProtGenerics_1.14.0         matrixStats_0.55.0         
 [82] flexclust_1.4-0             hms_0.5.2                   XML_3.98-1.20              
 [85] mclust_5.4.5                gridExtra_2.3               shape_1.4.4                
 [88] testthat_2.3.1              compiler_3.5.1              biomaRt_2.38.0             
 [91] tibble_2.1.3                KernSmooth_2.23-16          crayon_1.3.4               
 [94] R.oo_1.23.0                 htmltools_0.4.0             Formula_1.2-3              
 [97] DBI_1.1.0                   matlab_1.0.2                MASS_7.3-51.5              
[100] ade4_1.7-13                 R.methodsS3_1.7.1           gdata_2.18.0               
[103] pkgconfig_2.0.3             rncl_0.8.3                  GenomicAlignments_1.18.1   
[106] foreign_0.8-74              xml2_1.2.2                  InteractionSet_1.10.0      
[109] foreach_1.4.7               XVector_0.22.0              VariantAnnotation_1.28.13  
[112] digest_0.6.23               graph_1.60.0                Biostrings_2.50.2          
[115] htmlTable_1.13.3            curl_4.3                    Rsamtools_1.34.1           
[118] gtools_3.8.1                modeltools_0.2-22           rjson_0.2.20               
[121] FField_0.1.0                lifecycle_0.1.0             nlme_3.1-143               
[124] jsonlite_1.6                viridisLite_0.3.0           BSgenome_1.50.0            
[127] pillar_1.4.3                lattice_0.20-38             httr_1.4.1                 
[130] plotrix_3.7-7               survival_3.1-8              glue_1.3.1                 
[133] bamsignals_1.14.0           iterators_1.0.12            bit_1.1-14                 
[136] Rgraphviz_2.26.0            class_7.3-15                stringi_1.4.3              
[139] blob_1.2.0                  moments_0.14                commonsMath_1.2.4          
[142] ecp_3.1.2                   latticeExtra_0.6-28         caTools_1.17.1.3           
[145] memoise_1.1.0               ape_5.3     
```


As necessary extra functionality, also implemented the ability to adjust
vertical gaps between rows (wasn't implemented at all) and horizontal
gaps between columns separately.

Sorry, my editor vim automatically converted all tabs into spaces as well. Hope this is not a problem. 
Hello, I was trying to increase the texts sizes in my figure. I am trying the tutorial but failed. Maybe I am missing something. Any help? Here is my code and the figure I got. I want the same figure with larger font sizes in all texts. Is ther any way to do this? Best, Zillur
![heatmap_dna_repair3](https://user-images.githubusercontent.com/12833907/71528429-26e62f80-28b6-11ea-8354-96316c64cf28.png)

```
colAnn <- HeatmapAnnotation(df=anndata, which="col", col=colours, gap=unit(1, "mm"),gp = gpar(fontsize = 88))
rowAnn=HeatmapAnnotation(df=anndata2,which = 'row',col=color2, gap=unit(1, "mm"),gp = gpar(fontsize = 88))
boxplotcol2 <- HeatmapAnnotation(
  boxplot=anno_boxplot(data.matrix(cpm8),
                       border=TRUE,
                       gp=gpar(fill="#CCCCCC"),
                       pch=".",
                       size=unit(4, "mm"),
                       axis=TRUE,
                       axis_param = list(side = "left"),
                       annotation_width=unit(c(1, 9.0), "cm"),
                       which="col"))

png('../results/heatmap_dna_repair3.png',width = 1331,height = 2772)
ht2=Heatmap(data.matrix(cpm8),top_annotation = colAnn, left_annotation = rowAnn,
        bottom_annotation = boxplotcol2,
        name = "logCPM",
        col = rainbow(7), 
        show_row_names = T,
        show_column_names = FALSE,
        cluster_rows = F,
        cluster_columns = F,row_names_gp = gpar(fontsize = 88), 
        width = unit(300, "mm"))+rowAnnotation(rn = anno_text(rownames(cpm8)))

draw(ht2, heatmap_legend_side = "left", annotation_legend_side = "right",legend_label_gp=gpar(fontsize=12))
dev.off()

```
Hi,

I wonder if alter_fun for oncoprint could be generated programmatically as a list of functions

```r
alter_fun = list(
  background = function(x, y, w, h) {
    grid.rect(x, y, w-unit(0.5, "mm"), h-unit(0.5, "mm"), 
              gp = gpar(fill = "#CCCCCC", col = NA))
  },
  
  # small green
  MUT1 = function(x, y, w, h) {
    grid.rect(x, y, w-unit(0.5, "mm"), h, 
              gp = gpar(fill = **col["MUT1"]**, col = NA))
  },
  
  MUT2 = function(x, y, w, h) {
    grid.rect(x, y, w-unit(0.5, "mm"), h, 
              gp = gpar(fill = col["MUT2"], col = NA))
  }, ......)
```

I have lots of MUTs (MUT1,2 etc) and want to automate color assignment to them. Any advice?

Thanks
Hello, 

I was wondering if it is possible to have the possibility to programmatically set colors for column annotations, _in a case where it is not known what the columns of interest would be_.

Use case for this would be a function that wraps the call of Heatmap in a way where the user simply selects the `colData` covariate of interest, and then Heatmap handles these "sensibly enough".

I know it is possible to pass the data frame directly, but I was checking whether it is possible to have the output reproducible (apart from setting the seed), and at best, with a set of palettes that could handle nicely most cases.

If you need a MRE for showcasing this, I can try to put it together - it is tightly related to a package I am currently developing, https://github.com/federicomarini/GeneTonic (the function would be `gs_heatmap` in there).

I would appreciate any feedback on this! Thanks again for the care you put in writing your packages!
Federico