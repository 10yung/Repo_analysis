Seems like they are missing
hyper-v ISO builder - how to assign static IP address the to the VM????

I am trying to build a hyper-v VM through the JSON hyperv-windows-2012R2-serverstandard-amd64.json, Since there are no options to specify the IP address, the build could not connect to internet to get the windows update, Please advise, if I am missing anything.

Even the VM not getting the IP from DHCP server installed on the same Hyper-v HOST
Hi,

I've tried to build the ubuntu 18.04 server box on hyper-v, and the path and filename for bootx64.efi are not correct.

The correct script is (note the difference in case):
cp -r /boot/efi/EFI/ubuntu/ /boot/efi/EFI/BOOT
mv /boot/efi/EFI/BOOT/ubuntu/shimx64.efi /boot/efi/EFI/BOOT/BOOTX64.efi

Don't know if this breaks the build for other versions of Ubuntu. Tested only on 18.04.1-server-amd64 ISO.
Hello,

i tried the hyperv-windows-2016-serverstandard-amd64.json, adapted the variables to my enviroment, changed the ports in the powershell files to 5986 and added:
"winrm_use_ssl": true,
"winrm_insecure": true,

The result is "==> hyperv-iso: Waiting for WinRM to become available" with that error in the Logfile:

[ERROR] WinRM connection err: unknown error Post https://169.254.171.97:5986/wsman: dial tcp 169.254.171.97:5986: connectex: A connection attempt failed because the connected party did not properly respond after a period of time, or established connection failed because connected host has failed to respond.

The Host is Hyper-V host is Windows2012R2.
What could be the problem?
Many thanks in advance.

Regards Mathias

I am building for vmware and I am seeing this error. nothing changed from the json other the the ISO details 
I have got windows 2012 r2 standard template which is working fine with SCSI controller as LSI  and now I am looking to update the same to use pvscsi instead of LSI.  I was going through your build process but couldn't get from where (scripts) you are trying to install pvscsi drivers. I'm just looking to update drivers so that i can build template using SCSI controller as pvscsi. Could please let me know, how this be done.
i think you think swap statements in condition "if ((Get-WmiObject -Class Win32_OperatingSystem -ComputerName $env:COMPUTERNAME -ea 0).OSArchitecture -eq '64-bit')"
Hey all,

Just cloned the repo, applied all the steps from readme, but Windows 10 on hype-v configuration is not working.

https://github.com/taliesins/packer-baseboxes/blob/master/hyperv-windows-10-amd64.json

Is there any additional step I need to make?

Regards,
Radu
I get this when attempting to create a vmware-iso using 
packer build -force -only vmware-iso .\vmware-windows-2016-serverstandard-amd64.json.

I attach VMWare to the packer VM "windows2016", where I see a Windows setup window, and a dilaog box displaying the error message from the subject.
Packer itself hangs while "Waiting for WinRM to become available...".

I am running on a Windows 8.1 machine, VMWare 11.1.4.

This is the packer output:
==> vmware-iso: Downloading or copying ISO
    vmware-iso: Downloading or copying: http://care.dlservice.microsoft.com/dl/download/1/6/F/16FA20E6-4662-482A-920B-1A45CF5AAE3C/14393.0.160715-1616.RS1_RELEASE_SERVER_EVAL_X64FRE_EN-US.ISO
==> vmware-iso: Creating floppy disk...
    vmware-iso: Copying files flatly from floppy_files
    vmware-iso: Copying file: ./windows/windows-2016-serverstandard-amd64/autounattend.xml
    vmware-iso: Copying file: ./windows/windows-2016-serverstandard-amd64/sysprep-unattend.xml
    vmware-iso: Copying file: ./windows/common/variables.ps1
    vmware-iso: Copying file: ./windows/common/set-power-config.ps1
    vmware-iso: Copying file: ./windows/common/microsoft-updates.ps1
    vmware-iso: Copying file: ./windows/common/win-updates.ps1
    vmware-iso: Copying file: ./windows/common/run-sysprep.ps1
    vmware-iso: Copying file: ./windows/common/run-sysprep.cmd
    vmware-iso: Copying file: ./windows/common/enable-winrm.ps1
    vmware-iso: Copying file: ./windows/common/enable-winrm.task.ps1
    vmware-iso: Copying file: ./windows/common/fixnetwork.ps1
    vmware-iso: Copying file: ./windows/common/elevate.exe
    vmware-iso: Copying file: ./windows/common/sdelete.exe
    vmware-iso: Copying file: ./windows/common/sdelete.ps1
    vmware-iso: Copying file: ./windows/common/Set-ClientWSUSSetting.ps1
    vmware-iso: Copying file: ./windows/common/Set-ClientWSUSSetting.task.ps1
    vmware-iso: Done copying files from floppy_files
    vmware-iso: Collecting paths from floppy_dirs
    vmware-iso: Resulting paths from floppy_dirs : []
    vmware-iso: Done copying paths from floppy_dirs
==> vmware-iso: Creating virtual machine disk
==> vmware-iso: Building and writing VMX file
==> vmware-iso: Starting HTTP server on port 8433
==> vmware-iso: Starting virtual machine...
    vmware-iso: The VM will be run headless, without a GUI. If you want to
    vmware-iso: view the screen of the VM, connect via VNC with the password "PCiPGfIH" to
    vmware-iso: vnc://127.0.0.1:5924
==> vmware-iso: Waiting 5s for boot...
==> vmware-iso: Connecting to VM via VNC
==> vmware-iso: Typing the boot command over VNC...
==> vmware-iso: Waiting for WinRM to become available...

Please find the packer log file attached: [Log.zip](https://github.com/taliesins/packer-baseboxes/files/1305837/Log.zip)

I saw that in the windows\windows-2016-serverstandard-amd64\Autounattend.xml file there is a commented-out Non-UEFI <DiskConfiguration>; I tried to use that in place of the commented-in UEFI compatible, but with the same result.

I also tried to use "scsi0.virtualDev": "lsisas1068", instead of "scsi0.virtualDev": "pvscsi" in the json file (fixing this error message for other packer scripts), but no effect. I combined this two measures, no effect.

Help would be appreciated!

Looks like the boot command is no longer correct.

If you replace the first three lines of boot_command:
```
"<esc><wait10><esc><esc><enter><wait>",
            "set gfxpayload=1024x768<enter>",
            "linux /install/vmlinuz "

```

with:
```
"<enter><wait>",
            "<f6><esc>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs><bs><bs><bs><bs><bs><bs><bs>",
            "<bs><bs><bs>",
            "/install/vmlinuz ",
```

Looks like this gets you to the correct prompt to type in the boot command. It didn't like the linux command there.

I've left the rest of boot command lines as is.
And when I vrdp in, I see it's got a Kernel panic:

not syncing: VFS: Unable to mount root fs on unknown-block(0,0)