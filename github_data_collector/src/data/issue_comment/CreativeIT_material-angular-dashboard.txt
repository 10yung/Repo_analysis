Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.11 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.11...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.11&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/CreativeIT/material-angular-dashboard/network/alerts).

</details>
#### Expected behavior
build the production bundles


#### Actual behavior
ERROR in : Can't bind to 'htmlFor' since it isn't a known property of 'ng-component'.
1. If 'htmlFor' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.
2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component. ("[ERROR ->]<ng-component></ng-component>")


#### Steps to reproduce the behavior
ng build --prod


#### Relevant code
clone this repo
```

```

#### Environment description
Angular CLI: 8.2.2
Node: 10.16.3
OS: win32 x64
Angular: 8.2.14
... animations, common, compiler, compiler-cli, core, forms
... language-service, platform-browser, platform-browser-dynamic
... router

Package                           Version        
-----------------------------------------------------------
@angular-devkit/architect         0.802.2        
@angular-devkit/build-angular     0.802.2        
@angular-devkit/build-optimizer   0.802.2        
@angular-devkit/build-webpack     0.802.2        
@angular-devkit/core              8.2.2
@angular-devkit/schematics        8.2.2
@angular/cdk                      8.2.3
@angular/cli                      8.2.2
@angular/material                 8.2.3
@ngtools/webpack                  8.2.2
@schematics/angular               8.2.2
@schematics/update                0.802.2        
rxjs                              6.4.0
typescript                        3.5.3
webpack                           4.38.0

Hi- I'm having a lot of trouble figuring out how to extend this code for my project, specifically how to re-use your custom elements like "base-card", "app-sliders", etc. I'm still relatively new to Angular code organization.

For example, I tried to figure out how your "base-card" element finds its way into ChartsComponent, and using that as an template for how to have <base-card> elements in my new pages. It appears (see diagram) that this comes across via ThemeModule. But when I clone all the files in charts/ and swap all "chart" names with, say, "about" to create a new About page, I get nothing but errors like "Template parse errors: 'base-card' is not a known element". 

Do you have a step-by-step suggestion for how to create a new page that can leverage all your beautiful components?

![mat-ang-db diagram](https://user-images.githubusercontent.com/25495229/68250913-dd284980-ffd6-11e9-8845-f831c4d61739.PNG)

### **Issue type**

- [x] bug
- [ ] feature request
- [ ] question about the decisions made in the repository


### **Issue description**
When i built this project by command  `ng build`  for the test environment,the result is normal and correct.But when i take the command  `ng build --prod` for the production environment,the result always be wrong,The error Info is:

**ERROR in : Can't bind to 'htmlFor' since it isn't a known property of 'ng-component'.**
**1. If 'htmlFor' is an Angular directive, then add 'CommonModule' to the '@NgModule.imports' of this component.**
**2. To allow any property add 'NO_ERRORS_SCHEMA' to the '@NgModule.schemas' of this component. ("[ERROR ->]<ng-component></ng-component>")** 

I have downloaded the latest code and installed the dependencies ,i don't have any changement of the code,but i got the same error.
 

#### Related issues

Fixes: #20

#### Changes proposed in this pull request

- Upgrade the angular versions to 8.1.3
- Bugfix in the file, missing asterisk in package name added:
  - /src/app/pages/pages/login/login.component.ts

```
- import { AuthService } from '@services/';
+ import { AuthService } from '@services/*';
```

- Linting warnings removed
- Charts refactored due an errors in the console
- Bugfix in the upgrade of the core-js in the src/polyfills.ts file.

> The imports have changed for core-js version 3.0.1 - for example
> import 'core-js/es6/array'; and  import 'core-js/es7/array';
> can now be provided simply by the following
> import 'core-js/es/array';

Source: https://stackoverflow.com/a/56186570/1006079
**This PR is for code review, not for merging.**
#### Related issues
#21 


#### Changes proposed in this pull request


Since lock files appeared in npm, there is no valuable reason to use yarn anymore:
https://medium.com/@vincentnewkirk/npm-vs-yarn-2019-e88757b17038
https://iamturns.com/yarn-vs-npm-2018/
Expected behavior
Upgrade angular version to 8.0

Actual behavior
Current version is 7.x.x

Steps to reproduce the behavior
Relevant code

#### Expected behavior

I should be able to select dropdown value smoothly in the form controls with just a single click.

#### Actual behavior

We had to click the drop down twice to get the values listed. 

#### Steps to reproduce the behavior

Navigate to UI > Forms > Profile Info > Location drop down and try to select a value. 

I went and checked http://creativeit.io/material-dashboard-lite to verify if that was the case there as well. But I don't see any issue there. 
