The processing order of backticks vs table cell boundary is wrong:

```
| A table           |
| ----------------- |
| `a pipe (|) char` |
```

Results in:

| A table           |
| ----------------- |
| `a pipe (|) char` |

Use python3 for running tests as python 2 is no longer supported
This fixes #1317 update the sample file with actual output with html-pipeline 2.12
With html-pipeline 2.12,

```
diff --git a/github-markup.gemspec b/github-markup.gemspec
index 7c663d0..ed25ba7 100644
--- a/github-markup.gemspec
+++ b/github-markup.gemspec
@@ -19,7 +19,7 @@ Gem::Specification.new do |s|
   s.add_development_dependency 'rake', '~> 12'
   s.add_development_dependency 'activesupport', '~> 4.0'
   s.add_development_dependency 'minitest', '~> 5.4', '>= 5.4.3'
-  s.add_development_dependency 'html-pipeline', '~> 1.0'
+  s.add_development_dependency 'html-pipeline', '~> 2.12'
   s.add_development_dependency 'sanitize', '~> 2.1', '>= 2.1.0'
   s.add_development_dependency 'nokogiri', '~> 1.8.1'
   s.add_development_dependency 'nokogiri-diff', '~> 0.2.0'

```
One test fail,

```
F...

Finished in 1.159317s, 17.2515 runs/s, 42.2663 assertions/s.

  1) Failure:
MarkupTest#test_org [/home/pravi/forge/debian/git/ruby-team/ruby-github-markup/test/markup_test.rb:71]:
README.org.html's contents are not html equal to output:
--- -   2020-01-16 23:02:36.326624955 +0530
+++ test/markups/README.org.html        2020-01-16 19:59:53.699260519 +0530
@@ -13,17 +13,14 @@
 <td>0.9.0</td>
 </tr>
 </table>
-<h1>
-<span>1</span> Description</h1>
+<h1>1 Description</h1>
 <p>Helpful Ruby routines for parsing orgmode files. The most
   significant thing this library does today is convert orgmode files
   to textile. Currently, you cannot do much to customize the
   conversion. The supplied textile conversion is optimized for
   extracting “content” from the orgfile as opposed to “metadata.”</p>
-<h1>
-<span>2</span> History</h1>
-<h2>
-<span>2.1</span> 2014-02-08: Version 0.9.0</h2>
+<h1>2 History</h1>
+<h2>2.1 2014-02-08: Version 0.9.0</h2>
 <ul>
   <li>Let’s make sure <code>#+INCLUDE:</code> is not supported</li>
 </ul>
@@ -38,15 +35,13 @@
   end
 end
 </pre>
-<h2>
-<span>2.2</span> 2009-12-30: Version 0.5.1</h2>
+<h2>2.2 2009-12-30: Version 0.5.1</h2>
 <ul>
   <li>Minor enhancement: Recognize lines starting with “:” as examples.</li>
   <li>Minor enhancement: Recognize #+BEGIN_SRC as source blocks</li>
   <li>Minor enhancement: Add “src” and “example” classes to &lt;pre&gt; blocks.</li>
 </ul>
-<h2>
-<span>2.3</span> 2009-12-30: Version 0.5.0</h2>
+<h2>2.3 2009-12-30: Version 0.5.0</h2>
 <ul>
   <li>Parse (but not necessarily <b>use</b>) in-buffer settings. The following
     in-buffer settings <b>are</b> used:
@@ -70,8 +65,7 @@
     </ul>
   </li>
 </ul>
-<h2>
-<span>2.4</span> 2009-12-29: Version 0.4.2</h2>
+<h2>2.4 2009-12-29: Version 0.4.2</h2>
 <ul>
   <li>Got rid of the extraneous newline at the start of code blocks.</li>
   <li>Everything now shows up in code blocks, even org-mode metadata.</li>
@@ -82,14 +76,12 @@
     </ul>
   </li>
 </ul>
-<h2>
-<span>2.5</span> 2009-12-29: Version 0.4.1</h2>
+<h2>2.5 2009-12-29: Version 0.4.1</h2>
 <ul>
   <li>HTML is now escaped by default</li>
   <li>org-mode comments will show up in a code block.</li>
 </ul>
-<h2>
-<span>2.6</span> 2009-12-29: Version 0.4</h2>
+<h2>2.6 2009-12-29: Version 0.4</h2>
 <ul>
   <li>The first thing output in HTML gets the class “title”</li>
   <li>HTML output is now indented</li>
@@ -102,8 +94,7 @@
     </ul>
   </li>
 </ul>
-<h2>
-<span>2.7</span> 2009-12-27: Version 0.3</h2>
+<h2>2.7 2009-12-27: Version 0.3</h2>
 <ul>
   <li>Uses rubypants to get better typography (smart quotes, ellipses, etc…).</li>
   <li>Fixed bugs:
@@ -114,16 +105,14 @@
     </ul>
   </li>
 </ul>
-<h2>
-<span>2.8</span> 2009-12-26: Version 0.2</h2>
+<h2>2.8 2009-12-26: Version 0.2</h2>
 <ul>
   <li>Added <code>to_html</code> output on the parser.</li>
   <li>Added support for the full range of inline markup: <b>bold</b>,
-    <i>italic</i>, <code>code</code>, <code>verbatim</code>, <span>underline</span>, <del>strikethrough</del>.</li>
+    <i>italic</i>, <code>code</code>, <code>verbatim</code>, underline, <del>strikethrough</del>.</li>
   <li>Lots of refactoring to make the code more maintainable.</li>
 </ul>
-<h2>
-<span>2.9</span> 2009-12-23: Version 0.1</h2>
+<h2>2.9 2009-12-23: Version 0.1</h2>
 <ul>
   <li>Added support for block code, like this:
     <pre>



20 runs, 49 assertions, 1 failures, 0 errors, 0 skips
rake aborted!

```
.sk files are Skript files. Language from a Minecraft Plugin
Many open-source projects use [DocBook](https://en.wikipedia.org/wiki/DocBook) for rendering documentation into various formats, however, as it is XML based, it is not the easiest markup to review on GitHub (see, for example, https://github.com/NixOS/nixpkgs/pull/43150/files).

DocBook is primarily intended to be transformed into some output format using XSLT style sheets but since uses a semantic markup, it can be rendered easily. For content review even basic rendering without `XInclude`s and other complex mechanisms would work.

We could even use AsciiDoc’s [docbookrx](https://github.com/asciidoctor/docbookrx) library and render DocBook through AsciiDoc as an intermediary representation.

The main issue would be detecting that a file is a DocBook file. While Wikipedia suggests `dbk` extension is used, most projects use `xml` (or `sgml` for legacy SGML variant of DocBook 4). As such, we would need to read XML files and check for the presence of `xmlns="http://docbook.org/ns/docbook"` attribute on the root element or the use of DocBook DTD.

Would a pull request adding rudimentary support for DocBook be welcome?
## Scope

Add styling syntax (feature request).

## Details

Footnote syntax specification is available here: https://www.markdownguide.org/extended-syntax/#footnotes. 

Would also like to see superscript/subscript support.
CI is currently failing because of the use of some old, unsupported Ruby versions. 

This change adds the most recent point release for each minor version of Ruby that is still supported, as well as the 2.3 branch (which still works).
The contribution instructions were missing some details that were necessary to get the test suite working:

* Explicitly stating that Python 2 is required
* Clarifying that `rake` by itself isn't sufficient if you use the `bundle install` option for installing dependencies.
* No Ruby version is specified anywhere in the docs; the only versions that are mentioned are an unsupported version in the CI build script.
The relevant part of the spec is [here](https://spec.commonmark.org/0.29/#code-spans).

The new rules for collapsing spaces were discussed [here](https://talk.commonmark.org/t/leading-and-trailing-white-spaces-in-code-blocks/628/24) and implemented [here](https://github.com/commonmark/commonmark-spec/commit/e121b4e30185ca0513052cc4d08470ee75f9646b).

This has already been discussed on this project in #1079 but was closed, possibly because the commonmark spec had not been updated yet.

The current behaviour of markup collapses interior spaces and removes all leading and trailing spaces.