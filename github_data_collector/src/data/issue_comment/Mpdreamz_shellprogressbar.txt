I've got a console app that I'm looking to have a displayed progress (two layers deep) but also have log output to the console.

Unfortunately the logger (Serilog in my case) and ShellProgressBar don't play well with each other and are constantly overwriting each other which leaves the console an incomprehensible mess. Is there any way to prevent this or do I need to research how to make a custom Serilog console sink? Like maybe somehow force it to stick to certain lines or percentage of the screen or something?

thanks,
E
In the new [Windows Terminal](https://github.com/microsoft/terminal).
When you start a new timer at the bottom of the terminal like this:
![image](https://user-images.githubusercontent.com/8871328/68597662-a605dc80-049d-11ea-8a1e-a68111db369a.png)

Each .Tick() breaks the progress bar up in multiple lines like this:
![image](https://user-images.githubusercontent.com/8871328/68597614-91c1df80-049d-11ea-883f-c1247ae72848.png)

Repro steps
1. Open a new "Windows terminal"
2. Make sure you are at the bottom of the terminal
3. Start a new progressbar

Expected
I dont want the progressbar to be broken in several lines.

Actual
The progressbar is broken up in several lines for each tick()

OBS
I get the same behavioure in a terminal in VS Code

Hello! I love shellprogressbar.
`duration` column overflows on full-width characters such as CJK or Emoji contained `message`.
The program has no problem , but it looks like weired.
I think that Emoji will be used frequently in the future.

- Expected
  ![expected](https://user-images.githubusercontent.com/2059284/64089734-8f972280-cd82-11e9-8e84-670721ac6684.png)
- Actual
![actual](https://user-images.githubusercontent.com/2059284/64089802-d08f3700-cd82-11e9-8c78-65703dcc5189.png)

Is it possible to manually collapse a child when the option is set to `CollapseWhenFinished = false`?
 I'm using with .Net framework .Nothing appears except the first line. I changed some of code parts  , but console still not showing like the .net core example
![image](https://user-images.githubusercontent.com/14141071/63645959-0f354980-c712-11e9-9e98-b5ccce1f475f.png)


Is there a way to send messages to the progress bar for it to display permanently? I am thinking of something like how gradle works. 

Currently, the issue I am dealing with is that NLog is sending messages to the console and the cursor reset makes everything look janky. I have disabled console logging but would love a solution that could both display a progress bar and display permanent messages.
if (!pbar.CompletedHandle.WaitOne(wait))
                    --->    Console.Error.WriteLine($"{nameof(FixedDurationBar)} did not signal {nameof(FixedDurationBar.CompletedHandle)} after {wait}");
![image](https://user-images.githubusercontent.com/41802116/55346464-6be44f00-5467-11e9-8734-4f725b4074d0.png)

â€¦s should be shown when progressbar is on bottom of the screen
Added an option to set an estimated duration for a progress bar. In some cases you are able to calculate the estimated duration for an task (e.g. downloads or uploads). This option is deactivated by default and can be set in the `ProgressBarOptions`. The estimated duration can be set by using the new overload of the `Tick` method or by setting the `EstimatedDuration` property on the progress bar.

![](https://i.imgur.com/ju8GzTY.png)