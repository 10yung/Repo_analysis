Addresses #4316 

Checks for duplicate votes in a commit by checking for matching signatures (not matching validator addresses) 

<!--

Thanks for filing a PR! Before hitting the button, please check the following items.
Please note that every non-trivial PR must reference an issue that explains the
changes in the PR.

-->

* [x] Referenced an issue explaining the need for the change
* [ ] Updated all relevant documentation in docs
* [x] Updated all code comments where relevant
* [ ] Wrote tests
* [ ] Updated CHANGELOG_PENDING.md

It's incorrect for a commit https://godoc.org/github.com/tendermint/tendermint/types#Commit to contain duplicate votes for the same value.

After we do that, https://github.com/tendermint/tendermint/blob/5aa209a15617b91f19e18bf286e4cfccc68a229b/types/validator_set.go#L776-L779 can be removed.
Add a library like: https://github.com/profefe/profefe to be used as continuous profiling on nodes.

This can be a config bool similar to Prometheus in the config in which when true it exposes a port to listen for continuous profiling.

<!--
Please describe *in detail* the feature/behavior/change you'd like to see.

Be ready for followup questions, and please respond in a timely
manner. 

Word of caution: poorly thought out proposals may be rejected without deliberation 
-->

## Tendermint side (short-term):

- [ ] https://github.com/tendermint/tendermint/issues/4214 global evidence spec
- [ ] https://github.com/tendermint/tendermint/issues/4213 individual evidence spec (lunatic: https://github.com/tendermint/tendermint/issues/4182)
- [x] https://github.com/tendermint/tendermint/issues/2653 ~~hybrid time & height evidence~~ (PR: https://github.com/tendermint/tendermint/pull/4254) NOTE: cosmos-sdk also needs to make the unbonding period a hybrid of time & height.

## Tendermint side (future):

- [ ] https://github.com/tendermint/tendermint/issues/4189 Fork-accountability

## Light client (short-term):

- [ ] https://github.com/tendermint/tendermint/issues/4215 failure detection spec
[Ticket](https://github.com/tendermint/tendermint/issues/4303)

First PR for Tendermint. I wasn't able to find anything in regards to how errors should be formatted, but if there's any documentation I've missed please let me know. 

Excited to dig into this project and help out where I can.
<!--
Please fill in as much of the template below as you can.

Be ready for followup questions, and please respond in a timely
manner. We might ask you to provide additional logs and data (tendermint & app).
-->

**Tendermint version** (use `tendermint version` or `git rev-parse --verify HEAD` if installed from source):

Anything and everything starting at 1e3469789dce5a034a21b6e48288f1809a102595 .

**What happened**:

I looked at how the number of connections can be limited.

**What you expected to happen**:

`RPCConfig.GRPCMaxOpenConnections` to actually be used when instantiating the gRPC server.

**How to reproduce it** (as minimally and precisely as possible):

```
arnhem :: Documents/Development/tendermint ‹master› % ag GRPCMaxOpenConnections
config/toml.go
174:grpc_max_open_connections = {{ .RPC.GRPCMaxOpenConnections }}

config/config.go
335:	GRPCMaxOpenConnections int `mapstructure:"grpc_max_open_connections"`
398:		GRPCMaxOpenConnections: 900,
427:	if cfg.GRPCMaxOpenConnections < 0 {

config/config_test.go
71:		"GRPCMaxOpenConnections",
arnhem :: Documents/Development/tendermint ‹master› %
```                   

Alternatively look at the offending commit.
```
-               listener, err := rpcserver.Listen(
-                       grpcListenAddr, rpcserver.Config{MaxOpenConnections: n.config.RPC.GRPCMaxOpenConnections})
+               config := rpcserver.DefaultConfig()
+               config.MaxOpenConnections = n.config.RPC.MaxOpenConnections
+               listener, err := rpcserver.Listen(grpcListenAddr, config)
```

In the paper ["Byzantine Fault Tolerance in Partially Connected Asynchronous Networks" ](https://eprint.iacr.org/2019/1460.pdf) the author claims that tendermint doesn't achieve the liveness property in the partially synchronous model. According to the paper ["The latest gossip on BFT consensus"](https://arxiv.org/pdf/1807.04938.pdf,) this attack is feasible. 
Have you fixed the problem? 

- adding in buf as a proto tool to help with linting and breakage checking

ref #4288

Signed-off-by: Marko Baricevic <marbar3778@yahoo.com>

<!--

Thanks for filing a PR! Before hitting the button, please check the following items.
Please note that every non-trivial PR must reference an issue that explains the
changes in the PR.

-->

* [ ] Referenced an issue explaining the need for the change
* [ ] Updated all relevant documentation in docs
* [ ] Updated all code comments where relevant
* [ ] Wrote tests
* [ ] Updated CHANGELOG_PENDING.md

https://github.com/tendermint/tendermint/issues/4286

```
TMHOME="/Users/daniel/go/src/github.com/tendermint/thome" tendermint node --proxy_app=unix:///Users/daniel/go/src/github.com/kvstore/example.sock

ERROR: 1 error(s) decoding:

* error decoding 'consensus.create_empty_blocks_interval': time: invalid duration 
```

We should output more useful error instead of ^ for better usability. 
<!--

Thanks for filing a PR! Before hitting the button, please check the following items.
Please note that every non-trivial PR must reference an issue that explains the
changes in the PR.

-->
### ADR 052: Tendermint Mode

- Fullnode mode : fullnode mode does not have any capability to participate on consensus
- Validator mode : this mode is exactly same as existing state machine behavior. sync without voting on consensus, and participate consensus when fully synced
- Seed mode : lightweight seed mode only for maintain an address book, p2p like [TenderSeed](https://gitlab.com/polychainlabs/tenderseed)

Separate ADR Tendermint Mode from ADR-051 https://github.com/tendermint/tendermint/pull/4262

* [x] Referenced an issue explaining the need for the change
* [x] Updated all relevant documentation in docs
* [ ] Updated all code comments where relevant
* [ ] Wrote tests
* [ ] Updated CHANGELOG_PENDING.md
