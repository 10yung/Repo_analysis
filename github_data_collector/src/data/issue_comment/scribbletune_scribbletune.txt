I think the `isNote` function need to update , as it can't recognise `C7, Edim` chords.

I would suggest any note start with lower case letter to recognise as Note
and take full chord mapping from tonal library.
Hi,

Just to note that as well as _CDNJS_:

```html
<script src="https://cdnjs.cloudflare.com/ajax/libs/tone/13.8.28/Tone.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/scribbletune/3.3.2/scribbletune.js"></script>
```

... There is [UNPKG](https://unpkg.com/) ~~ based on `npm publish`:

```html
<script src="https://unpkg.com/tone@13.8.25/build/Tone.js"></script>
<script src="https://unpkg.com/scribbletune@3.4.1/dist/scribbletune.js"></script>
```

Has the maintainer of `Tone.js` missed some `npm publish`s?

Ta,

Nick

Hi @walmik,

I'm loving _Scribbletune_ -- thank you! 

I've being trying to set a lower volume for a clip (for example a `kick.wav`-based one), relative to other clips. What are valid volume numbers please? (I tried 5, 1, 0.5, `-10` as in decibels ...!)

And, would you accept a pull request, for `jsdoc` comments added to the [`ClipParams` interface](https://github.com/scribbletune/scribbletune/blob/master/src/typings.d.ts#L20-L42)? Perhaps in a separate `.ts` file, imported into `typings.d.ts` (not sure if/how that works)?

I know you've started [documenting some properties of `clip` here](https://github.com/scribbletune/scribbletune.com/blob/master/_pages/clip.md) -- I wonder if it would be appropriate to document nearer the code?

Thanks,

Nick

---
* Follows on from #25 -- _Add JSDoc ..._
## Sample and Reproduction:
Live Code: https://codesandbox.io/s/scribble-bug-tone-not-defined-3859w
Live Demo (see console errors): https://3859w.codesandbox.io/

## Steps to Reproduce:
1. Hit play

## Suggested solution
Can we make Tune a clip option, like synth... Corrupting and stepping on global objects is bad news.

## Errors:
1. Without hacking the tone module into the window object, `Tone not defined`
2. With the window global hack: `Cannot read property 'input' of undefined`
Hi, when I try the code you have provided in this section, I get: "TypeError: fs.writeFile is not a function" (in /nodemodules/scribbletune/src/midi.js:45):

```
  42 |     return;
  43 |   }
  44 | 
> 45 |   fs.writeFile(fileName, bytes, 'binary', callback);
  46 | };
  47 | 
  48 | function createFileFromNotes(notes) {
```

For context, I am running your code in a React app. (Set up with create-react-app.) I'm not sure if that  would affect anything. The JSBin link does download the file.

Thanks for creating this awesome library, btw! Also this is the first I have seen/heard of the ability to write Midi in-browser - feeling hopeful! :) 

Create a pull request template to formalize new changes being introduced to Scribbletune. Use this as reference https://help.github.com/articles/creating-a-pull-request-template-for-your-repository/
At the very least it should have some basic guidelines such as add tests for new code changes. It should also make a mention that Scribbletune works in the browser via Tone.js as well as in the terminal, hence a new code change needs to be such that it ll work in both the places. If it cannot, then that should be mentioned with some reasoning so that we can plan for it's creation in a subsequent code change.
Previously every tone was the duration length for the clip even if the note was subdivided. This change pulls out the computation of note length into common code which is then used by the browserClip and by the normal clip when generating midi.
The string-based API for specifying rhythm and timing of notes is awesome, but the maximum unit of time being a quarter-note makes complex rhythms difficult to construct. I suggest adding additional characters and structures for note lengths greater than 1/4 notes.
https://github.com/rollup/rollup/wiki/pkg.module
https://github.com/Rich-Harris/agadoo