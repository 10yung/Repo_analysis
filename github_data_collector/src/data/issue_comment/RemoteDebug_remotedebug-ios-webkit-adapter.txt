Running the latest version of Win 10.  Upgraded my iPad to iOS version 13.3 today. Successfully downloaded and installed remotedebug-ios-webkit-adapter and dependencies today, and it runs fine in PowerShell.   The iPad successfully connects to Win 10 and shows in iTunes.  Port is configured correctly, but nothing to inspect in chrome://inspect/#devices.

I am not getting app webview/ webpage opened in safari browser to inspect.

<img width="1636" alt="Screen Shot 2020-01-10 at 4 43 20 PM" src="https://user-images.githubusercontent.com/21220390/72189126-0f389c00-33ca-11ea-964d-070123bce963.png">


- **Device:** iPhone 6s
- **OS:** iOS 13.3
- **Browser:** Edge Canary v81

I have tried this with a first time clean install following the (great!) instructions from the README. After running the tool, I can see the device show up in **Edge** DevTools (since Chrome Beta v80 has disabled Custom Elements v0 that the DevTools inspector code relies on) and can open a DevTools window, but then the `remotedebug-ios-webkit-adapter` console logs the following error:

`(node:50307) UnhandledPromiseRejectionWarning: #<Object>`

![Screen Shot 2020-01-09 at 15 05 00](https://user-images.githubusercontent.com/145676/72074158-aaaa0e00-32f1-11ea-9267-6afbfad34b14.png)

![Screen Shot 2020-01-09 at 15 05 27](https://user-images.githubusercontent.com/145676/72074159-aaaa0e00-32f1-11ea-873e-44194e97d69c.png)

Full logs:

```
New websocket connection to /ios_4dcba3dc5102f3d8f829044e420e54e74c7b3b7c/ws://127.0.0.1:9101/devtools/page/1
Connection established to ws://127.0.0.1:9101/devtools/page/1
iosAdapter.getTargets
iosAdapter.getTargets
iosAdapter.getTargets
(node:50307) UnhandledPromiseRejectionWarning: #<Object>
(node:50307) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
(node:50307) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:50307) UnhandledPromiseRejectionWarning: #<Object>
(node:50307) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 2)
(node:50307) UnhandledPromiseRejectionWarning: #<Object>
(node:50307) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 3)
(node:50307) UnhandledPromiseRejectionWarning: #<Object>
(node:50307) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 4)
(node:50307) UnhandledPromiseRejectionWarning: #<Object>
(node:50307) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 5)
(node:50307) UnhandledPromiseRejectionWarning: #<Object>
(node:50307) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 6)
```
Device is been recognised correctly in the `chrome://inspect/#devices` pags. When I click inspect on any page I get the following error and the inspect page is completely blank.

```
New websocket connection to /ios_17a6ca61a706494c5279f59b8682b5a46cd88844/ws://127.0.0.1:9101/devtools/page/2
Connection established to ws://127.0.0.1:9101/devtools/page/2
(node:50417) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): [object Object]
(node:50417) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:50417) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): [object Object]
(node:50417) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): [object Object]
(node:50417) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): [object Object]
iosAdapter.getTargets
(node:50417) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): [object Object]
iosAdapter.getTargets
iosAdapter.getTargets
```

Will try to update to iOS 13.2. And report back to see if this can fix anything. 

Edit: same error log with iOS 13.32 

```
iosAdapter.getTargets
New websocket connection to /ios_17a6ca61a706494c5279f59b8682b5a46cd88844/ws://127.0.0.1:9101/devtools/page/1
Connection established to ws://127.0.0.1:9101/devtools/page/1
iosAdapter.getTargets
(node:81953) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 1): [object Object]
(node:81953) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.
(node:81953) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 2): [object Object]
(node:81953) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 3): [object Object]
(node:81953) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 4): [object Object]
(node:81953) UnhandledPromiseRejectionWarning: Unhandled promise rejection (rejection id: 5): [object Object]
iosAdapter.getTargets
```
Before iOS 13 I was able to use it following [these](https://github.com/RemoteDebug/remotedebug-ios-webkit-adapter/issues/138#issuecomment-523664256) instructions.

On iOS 13 (13.1.2) the situation looks like on the screenshot:
![image](https://user-images.githubusercontent.com/25297130/66634939-d3e5d000-ec16-11e9-87d6-75e30ad3649e.png)

The same issue found [here](https://github.com/google/ios-webkit-debug-proxy/issues/314#issuecomment-501253834). Seems fixed by adding support for ssl connection.

remotedebug-ios-webkit-adapter version: 0.3.2
Host OS: Ubuntu 19.0.4
Host browser: Chromium 77.0.3865.90 snap
iPhone version: 12.1

Port forwarding is definitely enabled. Localhost page is confirmed as working and accessibled on host. Device and tabs show as connected and inspectable on chrome://inspect. But Safari cannot find localhost page.

http://localhost:9000/json output:

```json
[
  {
    "devtoolsFrontendUrl": "https://chrome-devtools-frontend.appspot.com/serve_file/@7d149ef5473e980f0b3babd4d0f2839cb9338e73/inspector.html?experiments=true&remoteFrontend=screencast&ws=localhost:9000/ios_c72a798104ef8f8a2b57e7200938c41d46de9884/ws://127.0.0.1:9101/devtools/page/1",
    "faviconUrl": "",
    "thumbnailUrl": "/thumb/data:text/html,",
    "title": "Cannot Open Page",
    "url": "data:text/html,",
    "webSocketDebuggerUrl": "ws://localhost:9000/ios_c72a798104ef8f8a2b57e7200938c41d46de9884/ws://127.0.0.1:9101/devtools/page/1",
    "appId": "PID:276",
    "id": "ws://127.0.0.1:9101/devtools/page/1",
    "adapterType": "_ios_c72a798104ef8f8a2b57e7200938c41d46de9884",
    "type": "page",
    "metadata": {
      "deviceId": "c72a798104ef8f8a2b57e7200938c41d46de9884",
      "deviceName": "iPhone",
      "deviceOSVersion": "12.1.0",
      "url": "127.0.0.1:9101",
      "version": "12.1"
    }
  }
]
```

```
remotedebug_ios_webkit_adapter --port=9000
remotedebug-ios-webkit-adapter failed to run with the following error: adapter.spawnProcess.close, code=255

```
----------

```
remotedebug_ios_webkit_adapter --version
0.3.2

which remotedebug_ios_webkit_adapter 
/usr/local/bin/remotedebug_ios_webkit_adapter


which ios_webkit_debug_proxy  
/usr/local/bin/ios_webkit_debug_proxy

ios_webkit_debug_proxy --version
ios_webkit_debug_proxy 1.8.5
Built with libimobiledevice v1.2.1, libplist v2.0.0

dpkg --list | grep libplist
ii  libplist++-dev                                              2.0.0-2ubuntu1                                  amd64        Library for handling Apple binary and XML property lists
ii  libplist++3v5:amd64                                         2.0.0-2ubuntu1                                  amd64        Library for handling Apple binary and XML property lists
ii  libplist-dev                                                2.0.0-2ubuntu1                                  amd64        Library for handling Apple binary and XML property lists
ii  libplist3:amd64                                             2.0.0-2ubuntu1                                  amd64        Library for handling Apple binary and XML property lists

# installed packages
dpkg --list | grep libimobiledevice|libusbmuxd 
ii  libimobiledevice-dev                                        1.2.1~git20171128.5a854327+dfsg-0.1             amd64        Library for communicating with iPhone and iPod Touch devices
ii  libimobiledevice-utils                                      1.2.1~git20171128.5a854327+dfsg-0.1             amd64        Library for communicating with iPhone and iPod Touch devices
ii  libimobiledevice6:amd64                                     1.2.1~git20171128.5a854327+dfsg-0.1             amd64        Library for communicating with the iPhone and iPod Touch
ii  libusbmuxd-dev:amd64                                        1.1.0~git20171206.c724e70f-0.1                  amd64        USB multiplexor daemon for iPhone and iPod Touch devices - devel
ii  libusbmuxd4:amd64                                           1.1.0~git20171206.c724e70f-0.1                  amd64        USB multiplexor daemon for iPhone and iPod Touch devices - library
```

The instructions mention to use Chrome Canary. 

> Usage with Chrome (Canary) and Chrome DevTools


But there is no Chrome Canary for Linux (see [here](https://askubuntu.com/questions/309813/how-to-have-google-chrome-canary-on-ubuntu))
What flavor and version of Chrome should be used when using Linux to remote debug?
Thanks
The instructions mention to use Chrome Canary. But there is no Chrome Canary for Linux (see here: https://askubuntu.com/questions/309813/how-to-have-google-chrome-canary-on-ubuntu).
What flavor and version of Chrome should be used when using Linux to remote debug?
Thanks
Device not getting listed in Chrome Dev Tools Remote Target with MacOS 10.14.6

Attached the debug logs 

    ~ $ DEBUG=remotedebug remotedebug_ios_webkit_adapter
      remotedebug server.run, port=9000 +0ms
      remotedebug server.setupHttpHandlers +12ms
      remotedebug iOSAdapter.getProxySettings +5ms
      remotedebug iOSAdapter.getProxyPath +0ms
      remotedebug adapterCollection.start Map {} +5ms
      remotedebug adapter.start { port: 9100,
      proxyExePath: '/usr/local/bin/ios_webkit_debug_proxy',
      proxyExeArgs: [ '--no-frontend', '--config=null:9100,:9101-9201' ],
      pollingInterval: 3000,
      baseUrl: 'http://127.0.0.1',
      path: '/json' } +1ms
      remotedebug adapter.spawnProcess, path=/usr/local/bin/ios_webkit_debug_proxy +3ms
      remotedebug server.startTargetFetcher +214ms
    remotedebug-ios-webkit-adapter is listening on port 9000
      remotedebug iOSAdapter.getTargets +5s
    iosAdapter.getTargets
      remotedebug iOSAdapter.getDeviceVersion +36ms
      remotedebug iOSAdapter.getDeviceInfoPath +1ms
      remotedebug adapter.start { port: 9101,
      pollingInterval: 3000,
      baseUrl: 'http://127.0.0.1',
      path: '/json' } +136ms
      remotedebug adapter.start: Skip spawnProcess, no proxyExePath available +1ms
      remotedebug adapter.getTargets, metadata=[object Object] +0ms
      remotedebug server.startTargetFetcher.fetched.0 +5ms
      remotedebug iOSAdapter.getTargets +5s
    iosAdapter.getTargets
      remotedebug iOSAdapter.getDeviceVersion +7ms
      remotedebug iOSAdapter.getDeviceInfoPath +1ms
      remotedebug adapter.getTargets, metadata=[object Object] +107ms
      remotedebug server.startTargetFetcher.fetched.0 +3ms
      remotedebug iOSAdapter.getTargets +5s
    iosAdapter.getTargets
      remotedebug iOSAdapter.getDeviceVersion +9ms
      remotedebug iOSAdapter.getDeviceInfoPath +1ms
      remotedebug adapter.getTargets, metadata=[object Object] +103ms
      remotedebug server.startTargetFetcher.fetched.0 +3ms
      remotedebug iOSAdapter.getTargets +5s
    iosAdapter.getTargets
      remotedebug iOSAdapter.getDeviceVersion +6ms
      remotedebug iOSAdapter.getDeviceInfoPath +0ms
      remotedebug adapter.getTargets, metadata=[object Object] +144ms
      remotedebug server.startTargetFetcher.fetched.0 +3ms


    ~ $ ios_webkit_debug_proxy
    Listing devices on :9221
    Connected :9222 to iPhone (xxx)
