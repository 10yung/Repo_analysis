greetings,
my left prompt context menu is not showing at all. But when I'm logged in as root it shows. I have the same settings for both privilege and normal user:

here is the image. The top prompt is the normal user with no context segment.
The bottom is when I "su -l". There you'll see the context. Below is the relevant section of the ~/.p10k.zsh file:

https://imagebin.ca/v/58trJKQg85Hs

570   ##################################[ context: user@hostname ]##################################
  571   # Default context color.
  572   typeset -g POWERLEVEL9K_CONTEXT_FOREGROUND='white'
  573   typeset -g POWERLEVEL9K_CONTEXT_BACKGROUND='darkred'
  574   # Default context format: %n is username, %m is hostname.
  575   # typeset -g POWERLEVEL9K_CONTEXT_TEMPLATE='%n at %m'
  576   typeset -g POWERLEVEL9K_CONTEXT_TEMPLATE='%n@%m'
  577 
  578   # Context color when running with privileges.
  579   typeset -g POWERLEVEL9K_CONTEXT_ROOT_FOREGROUND='darkred' 
  580   typeset -g POWERLEVEL9K_CONTEXT_ROOT_BACKGROUND='white'  
  581   # Context format when running with privileges: %n is username, %m is hostname.
  582   # typeset -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE='%n at %m'
  583   typeset -g POWERLEVEL9K_CONTEXT_ROOT_TEMPLATE='%n@%m'


Hi, thanks for the hard work first.

I wanted to show virtualenv on my prompt, and I just found that as long as "virtualenv" is included here:
> POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(virtualenv context dir vcs)

virtualenv always displays, no matter whether I enable oh-my-zsh virtualenv plugin or not
> plugins=(git pip python)

After long time of research and grep-ing, I found that virtualenv segment is determined in powerlevel9k.zsh-theme file:
> prompt_virtualenv() {
>   local virtualenv_path="$VIRTUAL_ENV"
> 
>   [[ -z "$virtualenv_path" ]] && return
> 
>   "$1_prompt_segment" "$0" "$2" "blue" "$DEFAULT_COLOR" "${virtualenv_path:t}" 'PYTHON_ICON'
> }

so how virtualenv displays is pretty fixed here, it is not asking any other plugin for the appearance. But my system is configured a little differently, so the default value is not accurate, and I'm not able to use my own plugin to determine how I want to display my virtual environment name, is this on purpose? How can I display the way I want, please?
#### Describe Your Issue
What is happening?
No icons or glyphs on my powerlevel9k

#### Have you tried to debug or fix it?
Have tried different fonts, using urxvt terminal. Tried downloading nerd fonts and installed again, to see if the icons set maybe was bugged. 

Have you tinkered with your settings, and what happened when you did? Did you find a bit of code that you think might be the culprit? Let us know what you've done so far!

#### Environment Information

This information will help us understand your configuration.

  - What version of ZSH are you using? You can use `zsh --version` to see this.5.6.2
  - Do you use a ZSH framework (e.g., Oh-My-ZSH, Antigen)? Yes i use oh-my-ZSH
  - How did you install P9k (cloning the repo, by tarball, a package from your OS, etc.,)? cloning
  - What version of P9k are you using? latest
  - Which terminal emulator do you use? urxvt

#### Issues with Fonts & Icons
You may delete this section if your issue is not font / icon related.

  - Which font do you use? Hack Bold Nerd font but i have also tried different ones
  - Which [font configuration mode] (https://github.com/bhilburn/powerlevel9k/wiki/About-Fonts) are you using? You can check this with (`echo $POWERLEVEL9K_MODE`).
  - Please share the contents of `$P9k/debug/font-issues.zsh`.
  - If this is an icon problem, does the output of `$ get_icon_names` look correct?

When doing a $get_icon_names ther is no icons

On a default install of Anaconda, it installs to ~/anaconda3 but `conda env list` claims the name of the environment is `base`, not `anaconda3`. The environment variable has the correct name.
First I just want to say that I am brand new to git and contributing to open source projects. This might be a simple issue.

I want to modify the `prompt_dir()` function in `powerklevel9k.zsh-theme` to include more conditions to replace the icon depending of the `state_path`. 

This issue is related to #606. 

This can be easily done if you just add dir states and separate conditions. For instance, here I've added a `"DROPBOX"`"state that uses `"DROPBOX_ICON"` for paths that contain  `'~/dropbox'*`, almost exactly the same as the current`/etc` conditions.

```
  # save state of path for highlighting and bold options
  local path_opt=$current_path

  typeset -AH dir_states
  dir_states=(
    "DEFAULT"         "FOLDER_ICON"
    "HOME"            "HOME_ICON"
    "HOME_SUBFOLDER"  "HOME_SUB_ICON"
    "NOT_WRITABLE"    "LOCK_ICON"
    "ETC"             "ETC_ICON"
    "DROPBOX"         "DROPBOX_ICON"
  )
  local state_path="$(print -P '%~')"
  local current_state="DEFAULT"
  if [[ $state_path == '/etc'* ]]; then
    current_state='ETC'
  elif [[ "${POWERLEVEL9K_DIR_SHOW_WRITABLE}" == true && ! -w "$PWD" ]]; then
    current_state="NOT_WRITABLE"
  elif [[ $state_path == '~/dropbox'* ]]; then
    current_state="DROPBOX"
  elif [[ $state_path == '~' ]]; then
    current_state="HOME"
  elif [[ $state_path == '~'* ]]; then
    current_state="HOME_SUBFOLDER"
  fi
```

My question is; how could we do this within `.zshrc` instead of modifying `powerline9k.zsh-theme`?
I've seen other users utilize the `custom_user` prompt status in `.zshrc` to easily add icons and the like, but to my knowledge there is not a `custom_dir` status to do the same thing, and even so would it allow conditional formatting to icons?


I'm just moving vcs from the left to the right.

Why does the prompt on the right overflow to the next line?

![](https://i.loli.net/2019/12/08/FmRY8tPcz91nJjK.png)

#### Environment Information

  - windows 10 : wsl 
  - zsh --version : zsh 5.4.2 (x86_64-ubuntu-linux-gnu)
  - Oh-My-ZSH
  - install P9k (cloning the repo )
  - terminal emulatorï¼š Cmder


```
POWERLEVEL9K_PROMPT_ADD_NEWLINE=true

# LEFT_PROMPT
# ==============================
#POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(os_icon time dir dir_writable vcs)
POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=( os_icon time dir dir_writable)
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX=""
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX=" $ "
POWERLEVEL9K_WHITESPACE_BETWEEN_LEFT_SEGMENTS=' '
POWERLEVEL9K_LEFT_SUBSEGMENT_SEPARATOR=' '

# RIGHT_PROMP
# ================================
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(vcs)
#POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status)

POWERLEVEL9K_MODE='nerdfont-complete'
ZSH_THEME='powerlevel9k/powerlevel9k'
```

#### Describe Your Issue
What is happening?

`go_version` doesn't render outside of the $GOPATH. This made sense before, but now that go modules exist it would be nice if it also worked in a directory that has a go.mod file in one of the parent folders.

#### Have you tried to debug or fix it?

I have tried looking for solutions and found an old issue that said it would be easy to make `go_version` configurable to always render, but nothing beyond that.

#### Environment Information

This is a fresh install on a new macbook.

ZSH: `zsh 5.7.1 (x86_64-apple-darwin19.0.0)`
Antigen: `Antigen v2.2.2`

Install I believe was via these lines my `.zshrc` config:

```
POWERLEVEL9K_INSTALLATION_PATH=$ANTIGEN_BUNDLES/bhilburn/powerlevel9k
antigen theme bhilburn/powerlevel9k powerlevel9k
```

Using iterm2, unsure on p9k version.
I've just installed powerlevel9K with oh-my-zsh on a distant machine. Each time I open a shell or type a command, I get the following message:

``` build_left_prompt:12: command not found: prompt_vcsi ```

I use the same config on my personal laptop and this does not appear :s 

Here is my config:

```
##
## ZSH config
##

# Path to your oh-my-zsh installation.
export ZSH="$HOME/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/robbyrussell/oh-my-zsh/wiki/Themes
ZSH_THEME="powerlevel9k/powerlevel9k"

# Uncomment the following line to use case-sensitive completion.
CASE_SENSITIVE="true"

# Uncomment the following line if pasting URLs and other text is messed up.
# DISABLE_MAGIC_FUNCTIONS=true

# Uncomment the following line to enable command auto-correction.
ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# To prevent warning for root_indicator
ZSH_DISABLE_COMPFIX=true

# Which plugins would you like to load?
# Standard plugins can be found in ~/.oh-my-zsh/plugins/*
# Custom plugins may be added to ~/.oh-my-zsh/custom/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
plugins=(
  pyenv
  git
  zsh-autosuggestions
  colored-man-pages
  z
  zsh-syntax-highlighting
)

source $ZSH/oh-my-zsh.sh
source $HOME/.oh-my-zsh/plugins/z/z.sh

##
## Plugin config
##

POWERLEVEL9K_MODE="nerdfont-complete"

# OS icon segment
POWERLEVEL9K_CUSTOM_UBUNTU_ICON="echo -e '\uf31b'"
POWERLEVEL9K_CUSTOM_UBUNTU_ICON_BACKGROUND=234
POWERLEVEL9K_CUSTOM_UBUNTU_ICON_FOREGROUND=196

# SSH segment
POWERLEVEL9K_SSH_ICON='\uf68c'

# Root indicator segment
POWERLEVEL9K_ROOT_ICON="\uf198"
POWERLEVEL9K_ROOT_INDICATOR_BACKGROUND=196
POWERLEVEL9K_ROOT_INDICATOR_FOREGROUND=232

# Dir directory element
POWERLEVEL9K_DIR_HOME_BACKGROUND=39
POWERLEVEL9K_DIR_HOME_FOREGROUND=232
POWERLEVEL9K_DIR_HOME_SUBFOLDER_BACKGROUND=39
POWERLEVEL9K_DIR_HOME_SUBFOLDER_FOREGROUND=232
POWERLEVEL9K_DIR_DEFAULT_BACKGROUND=39
POWERLEVEL9K_DIR_DEFAULT_FOREGROUND=232
POWERLEVEL9K_SHORTEN_DIR_LENGTH=2
POWERLEVEL9K_SHORTEN_STRATEGY="truncate_to_first_and_last"

# Background job segment
POWERLEVEL9K_BACKGROUND_JOBS_FOREGROUND=232
POWERLEVEL9K_BACKGROUND_JOBS_BACKGROUND=178

# Status bar segment
POWERLEVEL9K_STATUS_OK_BACKGROUND=232
POWERLEVEL9K_STATUS_OK_FOREGROUND=46
POWERLEVEL9K_STATUS_ERROR_BACKGROUND=232
POWERLEVEL9K_STATUS_ERROR_FOREGROUND=196

# Time segment
POWERLEVEL9K_TIME_FORMAT="%D{\ue383 %H:%M \uf073 %d.%m.%y}"
POWERLEVEL9K_TIME_FOREGROUND=232

# Multiline prompt
POWERLEVEL9K_PROMPT_ON_NEWLINE=true
POWERLEVEL9K_MULTILINE_FIRST_PROMPT_PREFIX="\n\u256d\u2500 "
POWERLEVEL9K_MULTILINE_LAST_PROMPT_PREFIX="\u2570\uf460 "

# Pyenv segment

POWERLEVEL9K_PYTHON_ICON="\ue235"
POWERLEVEL9K_VIRTUALENV_BACKGROUND=128 # 165
POWERLEVEL9K_VIRTUALENV_FOREGROUND=232

#
# Segments config

# Left segments
if [ -n "$SSH_CLIENT" ] || [ -n "$SSH_TTY" ]; then
  # SSH connection
  POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(custom_ubuntu_icon ssh context root_indicator dir vcsi virtualenv)
else
  # No SSH connection
  POWERLEVEL9K_LEFT_PROMPT_ELEMENTS=(custom_ubuntu_icon root_indicator dir vcs virtualenv)
fi

# Right segments
POWERLEVEL9K_RIGHT_PROMPT_ELEMENTS=(status background_jobs time)


##
## User configuration
##

# You may need to manually set your language environment
export LANG=fr_FR.UTF-8

# Color 256
export TERM='xterm-256color'

# History configuration
HISTSIZE=3000     # Nb de lignes en mÃ©moire
HISTFILE=~/.zsh_history   # Fichier de sauvegarde
SAVEHIST=3000     # Nb d'entrÃ©es Ã  enregistrer
HISTDUP=erase     # Suppression des doublons
setopt  appendhistory   # Ajout des entrÃ©es en mode append
setopt  sharehistory    # Partage de l'historique entre les terminaux
setopt  incappendhistory  # Ajout immÃ©diat de l'historique (pas Ã  la fermeture)
 ```

I should check, but I think I had this problem before (distant machine also) and I just removed one or two segments to have it work.

Thanks.

When the number of commands reaches 10001, it will return to this number every time it is reconnected

![image](https://user-images.githubusercontent.com/48517501/69481107-2555c180-0e49-11ea-8b63-9b3a63908c85.png)

### Your Hardware

512GB PCIe NVMe Three Layer Cell SSD    

### Virtualization

Native Linux (Arch x86_64)

### Terminal

Termite (latest)

### How Fast is Fast

```
********************************************************************
                      Prompt Benchmark Results
********************************************************************
Warmup duration      8s
Benchmark duration   5.442s
Benchmarked prompts  1
Time per prompt      5442.32ms  <-- prompt latency (lower is better)
********************************************************************
```
Root cause seems to be the battery prompt.
Settings: 
```bash
POWERLEVEL9K_BATTERY_BACKGROUND="black"
POWERLEVEL9K_BATTERY_LOW_FOREGROUND="red"
POWERLEVEL9K_BATTERY_CHARGING_FOREGROUND="yellow"
POWERLEVEL9K_BATTERY_CHARGED_FOREGROUND="green"
POWERLEVEL9K_BATTERY_DISCONNECTED_FOREGROUND="green"
POWERLEVEL9K_BATTERY_LOW_THRESHOLD=15
POWERLEVEL9K_BATTERY_VERBOSE=false
POWERLEVEL9K_BATTERY_STAGES=('\uf244 ' '\uf243 ' 
                             '\uf243 ' '\uf243 ' 
                             '\uf242 ' '\uf242 ' 
                             '\uf241 ' '\uf241 ' 
                             '\uf241 ' '\uf240 ')
```
Cause seems to be `acpi -b` being slow, unknown why.