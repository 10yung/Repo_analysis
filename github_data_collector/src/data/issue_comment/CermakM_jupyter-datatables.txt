Datatables extension is fantastic, but for very small dataframe it is not useful and clutter output. It would be very handy, in the same notebook, to use jupyter datatables for some dataframe and not for other instead of globally on or off for every dataframe. 
It could be a flag per dataframe and a global default value.
Thanks.
Trying an install from pip and direct from the repo, I get an error trying to iniitialise the package as per the docs:

```python
from jupyter_datatables import init_datatables_mode

init_datatables_mode()

---------------------------------------------------------------------------
CommError                                 Traceback (most recent call last)
<ipython-input-1-4bdde0100650> in <module>
      5 from jupyter_datatables import init_datatables_mode
      6 
----> 7 init_datatables_mode()

/usr/local/lib/python3.7/site-packages/jupyter_datatables/__init__.py in init_datatables_mode(options, classes)
     94     extensions = config.defaults.extensions
     95 
---> 96     require("d3", "https://d3js.org/d3.v5.min")
     97     require("d3-array", "https://d3js.org/d3-array.v2.min")
     98 

/usr/local/lib/python3.7/site-packages/jupyter_require/core.py in __call__(self, library, path, *args, **kwargs)
    111         :param path: str, path (url) to the library without .js suffix
    112         """
--> 113         self.config({library: path}, shim=kwargs.pop('shim', {}))
    114 
    115     @property

/usr/local/lib/python3.7/site-packages/jupyter_require/core.py in config(self, paths, shim)
    158         """
    159         if not require._is_initialized:
--> 160             raise CommError("Comms haven't been initialized properly.")
    161 
    162         self.__LIBS.update(paths)

CommError: Comms haven't been initialized properly.. HINT: Try reloading <F5> the window.
```
**User story**
As a user,
I want to be able to use ipywidgets together with DataTables
so that I could dynamically change the content of the table and display it.

technical: @CermakM

**Acceptance Criteria**
- [ ] DataTables can be used together with ipywidgets to reflect dynamic changes (i.e., using `interact` to change a parameter)
- [ ] Demonstrate the usage using `interact` in an example notebook.

**References**
#24 

**Is your feature request related to a problem? Please describe.**
I am dynamically changing DataFrame with function in ipywidgets, and i really loved your datatables. But it could't work together.
Is it possible to do something that it could work together?
**User story**
As a user,
I want a quicker response and more efficient data handling
so that I could use this extension with bigger data sets.

technical: @CermakM

**Acceptance Criteria**
- [ ] Data is processed server-side and loaded lazily.


**User story**
As a user,
I want to have an option to undock the plot from the table,
so that I could explore the plot in more details.

technical: @CermakM

**Acceptance Criteria**
- [  ] There is an option in the toolbar which undocks the plot to the cell below.


**User story**
As a user,
I'd like to be able to define custom data types,
so that I could, later on, create custom plots for the specific data types.

technical: @CermakM

**Acceptance Criteria**
- [ ] There is a possibility to dynamically define custom data types
- [ ] A user-defined data type, when registered, integrates seamlessly with all the existing features
- [ ] The feature is documented and the usage is described

Depends on: https://github.com/CermakM/jupyter-datatables/issues/16

Failed to perform initial lock of your dependencies based on your [requirements.in](/CermakM/jupyter-datatables/blob/2848a1e7670ce858f2cae6afc38199e40650fe67/requirements.in).

See attached report below to inspect this issue.

##### Command

```
  $ pipenv lock
```

<details>
  <summary>Standard output</summary>

```

```

</details>

<details>
  <summary>Standard error</summary>

```
Creating a virtualenv for this project…
Pipfile: /tmp/tmpszud0w8h/Pipfile
Using /usr/bin/python3 (3.6.8) to create virtualenv…
Already using interpreter /usr/bin/python3
Using base prefix '/usr'
  No LICENSE.txt / LICENSE found in source
New python executable in /tmp/tmpszud0w8h/.venv/bin/python3
Also creating executable in /tmp/tmpszud0w8h/.venv/bin/python
Installing setuptools, pip, wheel...
done.

Virtualenv location: /tmp/tmpszud0w8h/.venv
Locking [dev-packages] dependencies…
Locking [packages] dependencies…

['Traceback (most recent call last):\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/expect.py", line 109, in expect_loop\n    return self.timeout()\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/expect.py", line 82, in timeout\n    raise TIMEOUT(msg)\n', "pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7ff107cfefd0>\nsearcher: searcher_re:\n    0: re.compile('\\n')\n", '\nDuring handling of the above exception, another exception occurred:\n\n', 'Traceback (most recent call last):\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/utils.py", line 501, in create_spinner\n    yield sp\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/utils.py", line 649, in venv_resolve_deps\n    c = resolve(cmd, sp)\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/utils.py", line 517, in resolve\n    result = c.expect(u"\\n", timeout=environments.PIPENV_INSTALL_TIMEOUT)\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/delegator.py", line 215, in expect\n    self.subprocess.expect(pattern=pattern, timeout=timeout)\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/spawnbase.py", line 341, in expect\n    timeout, searchwindowsize, async_)\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/spawnbase.py", line 369, in expect_list\n    return exp.expect_loop(timeout)\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/expect.py", line 119, in expect_loop\n    return self.timeout(e)\n', '  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/expect.py", line 82, in timeout\n    raise TIMEOUT(msg)\n', "pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7ff107cfefd0>\nsearcher: searcher_re:\n    0: re.compile('\\n')\n<pexpect.popen_spawn.PopenSpawn object at 0x7ff107cfefd0>\nsearcher: searcher_re:\n    0: re.compile('\\n')\n"]
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/expect.py", line 109, in expect_loop
    return self.timeout()
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/expect.py", line 82, in timeout
    raise TIMEOUT(msg)
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7ff107cfefd0>
searcher: searcher_re:
    0: re.compile('\n')

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/local/bin/pipenv", line 11, in <module>
    sys.exit(cli())
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 764, in __call__
    return self.main(*args, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 717, in main
    rv = self.invoke(ctx)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 1137, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 956, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 555, in invoke
    return callback(*args, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/click/decorators.py", line 64, in new_func
    return ctx.invoke(f, obj, *args, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/click/core.py", line 555, in invoke
    return callback(*args, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/click/decorators.py", line 17, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/usr/local/lib/python3.6/site-packages/pipenv/cli/command.py", line 332, in lock
    pypi_mirror=state.pypi_mirror,
  File "/usr/local/lib/python3.6/site-packages/pipenv/core.py", line 1068, in do_lock
    lockfile=lockfile
  File "/usr/local/lib/python3.6/site-packages/pipenv/utils.py", line 649, in venv_resolve_deps
    c = resolve(cmd, sp)
  File "/usr/local/lib/python3.6/site-packages/pipenv/utils.py", line 517, in resolve
    result = c.expect(u"\n", timeout=environments.PIPENV_INSTALL_TIMEOUT)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/delegator.py", line 215, in expect
    self.subprocess.expect(pattern=pattern, timeout=timeout)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/spawnbase.py", line 341, in expect
    timeout, searchwindowsize, async_)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/spawnbase.py", line 369, in expect_list
    return exp.expect_loop(timeout)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/expect.py", line 119, in expect_loop
    return self.timeout(e)
  File "/usr/local/lib/python3.6/site-packages/pipenv/vendor/pexpect/expect.py", line 82, in timeout
    raise TIMEOUT(msg)
pexpect.exceptions.TIMEOUT: <pexpect.popen_spawn.PopenSpawn object at 0x7ff107cfefd0>
searcher: searcher_re:
    0: re.compile('\n')
<pexpect.popen_spawn.PopenSpawn object at 0x7ff107cfefd0>
searcher: searcher_re:
    0: re.compile('\n')

```

</details>

<details>
  <summary>Environment details</summary>

```

Kebechet version: 1.0.0
Python version: 3.6.8
Platform: Linux-3.10.0-957.21.2.el7.x86_64-x86_64-with-fedora-28-Twenty_Eight
pipenv version: pipenv, version 2018.11.26


```

**User story**
As a Jupyter DataTables developer,
I need a toolbar which can embed custom scripts and styles per each chart
so that I could add custom functionality to it.

technical: @CermakM

**Acceptance Criteria**
- [x] There is a toolbar per each chart
- [ ] It is possible to add custom elements which interact with the chart to the toolbar
- [x] Make sure the toolbar is linked properly with the graph

**References**
