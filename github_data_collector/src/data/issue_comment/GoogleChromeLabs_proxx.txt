**Debug info**
```
    Version: 1.0.9
    Motion: true
    Supports WebGL: true
    Feature Phone: no
    Standalone Mode: no
    Screen Width: 1680px
    Screen Height: 913px
    DPR: 2
    Device Memory:
    Concurrency: 6
    UA: Mozilla/5.0 (Macintosh; Intel Mac OS X 10.14; rv:73.0) Gecko/20100101 Firefox/73.0
```

**Describe the bug**
When you open PROXX in Private Mode in Firefox, it is impossible to start the game. All form fields have no values set, preventing the start button from working.

Its likely that PROXX fails when IndexedDB isn't present, as is the case in private mode.

Originally reported here: https://github.com/mozilla-mobile/fenix/issues/7293

**To Reproduce**
Steps to reproduce the behaviour:
1. Open a Private tab in Firefox
2. Go to proxx.app
3. See that all fields are empty
4. Click start and see that it doesn't react due to failed form validation

**Expected behavior**
Start the game :)

see https://github.com/rollup/rollup/pull/3226#issuecomment-552580538

rollup brings in types for node, which are then automatically registered, and mean typecript won't error if you use an API that is only available in node
I watched your [jsconf presentation on making things fast](https://www.youtube.com/watch?v=fWc3Zu6A3Ws) (which was great by the way) and towards the end you mentioned including warning comments to try and prevent accidentally importing something into the entry bundle.

I thought there must be a way of automating this, so that the comments could actually enforce it, and put together [a rollup plugin](https://github.com/tjenkinson/rollup-plugin-bundle-guard) 

Interested to know what you think

The result of this PR is if you try and import something from a module that is in the `entry` group, that is not itself in the `entry` group (or an exception in the config), it will error out.
Items:
- [x] Add rollup plugin `rollup-plugin-size`
- [x] Add configuration file(`.github/size-plugin.yml`) for [size-plugin ðŸ¤–](https://github.com/kuldeepkeshwar/size-plugin-bot)
- [ ] Install [Github App](https://github.com/apps/size-plugin)  ðŸ‘ˆ@jakearchibald


> Note: putting this pull request in draft state, it will be ready after [Github App](https://github.com/apps/size-plugin) installation. 
Bumps [lodash](https://github.com/lodash/lodash) from 4.17.11 to 4.17.15.
<details>
<summary>Commits</summary>

- [`ddfd9b1`](https://github.com/lodash/lodash/commit/ddfd9b11a0126db2302cb70ec9973b66baec0975) Bump to v4.17.15.
- [`b185fce`](https://github.com/lodash/lodash/commit/b185fcee26b2133bd071f4aaca14b455c2ed1008) Rebuild lodash and docs.
- [`be87d30`](https://github.com/lodash/lodash/commit/be87d303941222b97c482755afc0f4a77ce46c30) Bump to v4.17.14.
- [`a6fe6b1`](https://github.com/lodash/lodash/commit/a6fe6b1e174fd02b5e60eb2664405f4c1262c300) Rebuild lodash and docs.
- [`e371828`](https://github.com/lodash/lodash/commit/e37182845f16715a0d1c391c8662d83c55609cee) Bump to v4.17.13.
- [`357e899`](https://github.com/lodash/lodash/commit/357e899e685872b4af5403ecc4b2a928f961ae63) Rebuild lodash and docs.
- [`fd9a062`](https://github.com/lodash/lodash/commit/fd9a062d57646450b61f74029315abd4cc834b08) Bump to v4.17.12.
- [`e77d681`](https://github.com/lodash/lodash/commit/e77d68121ff00ba86b53eed5893d35adfe94c9dd) Rebuild lodash and docs.
- [`629d186`](https://github.com/lodash/lodash/commit/629d1865793182cd967196716f4beff223aa4a91) Update OpenJS references.
- [`2406eac`](https://github.com/lodash/lodash/commit/2406eac542b2a1282be8d812a6d8a45433ade80a) Fix minified build.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/4.17.11...4.17.15)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.11&new-version=4.17.15)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/GoogleChromeLabs/proxx/network/alerts).

</details>
Do not merge. Just testing.
I went into a rabbit hole after reading Surma's article ["Is postMessage Slow?"](https://dassur.ma/things/is-postmessage-slow/) and became curious to know the feasibility of using an `ArrayBuffer` with PROXX for performant `postMessage()` calls.  My thoughts were to provide native JS property access while maintaining behavior of `interface Cell` to allow usage like: `grid.cells[col][row].hasMine = true`.

Do you think the approach below could provide benefits or is the current patchset implementation already performant enough?  Instead of cluttering this thread with code, I wrote an independent POC to test the transferability of `Cell` states in a 40x40 grid. Start at [`CellGrid`](https://github.com/GoogleChromeLabs/proxx/compare/master...AnthumChris:arraybuffer-poc#diff-45eb6ce6c3658b80d1cc7683a3872f71) and [`Cell`](https://github.com/GoogleChromeLabs/proxx/compare/master...AnthumChris:arraybuffer-poc#diff-daf85c8278d9ffdb6e26a48ea4c98618) in branch: https://github.com/GoogleChromeLabs/proxx/compare/master...AnthumChris:arraybuffer-poc

There's an app currently on the Google Play store called "[Proxx - modern minesweeper](https://play.google.com/store/apps/details?id=name.ratson.spaxx)".

However, checking the developer info suggests that this app wasn't published by the Google Chrome Labs team.

<img src="https://user-images.githubusercontent.com/144435/66150770-c6748880-e60d-11e9-86c6-a35b585b5405.png" alt="play google com_store_apps_details_id=name ratson spaxx" height="450">

Also, one of the reviews suggests that that app "eats battery" and "the back of the phone was over heating like crazy", which could indicate that this app version of Proxx contains a Bitcoin miner, other nasties or just perhaps wasn't created properly.

If I'm wrong and the app has been published by Google Chrome Labs team, it might be better to update the developer info and investigate the reviewers performance issues. Or otherwise if it an unofficial clone, it may be useful to add details/code on [how to add a PWA to the Google Play store](https://medium.com/@firt/google-play-store-now-open-for-progressive-web-apps-ec6f3c6ff3cc) and also publish an official version ðŸŽ‰
**Debug info**
Version: 1.0.9
Motion: true
Supports WebGL: true
Feature Phone: no
Standalone Mode: no
Screen Width: 414px
Screen Height: 852px
DPR: 2
Device Memory:
Concurrency:
UA: Mozilla/5.0 (iPhone; CPU iPhone OS 13_1 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/13.0.1 Mobile/15E148 Safari/604.1.

**Describe the bug**
If hold the pressing between empty spots (sometime others too) it start select from browser as it have text to copy.

![5229106A-8BCB-4ECD-894C-B4927BA795F4](https://user-images.githubusercontent.com/99608/65395821-9f3bd280-dd54-11e9-8fce-057f07f4ba37.png)
![040EB14A-4258-4696-9981-8079956934D5](https://user-images.githubusercontent.com/99608/65395822-9fd46900-dd54-11e9-8a9d-d2758405f0a5.png)


**To Reproduce**
Steps to reproduce the behavior:
1. Start the game in the iPhone 
2. Click on start
3. Play a bit
4. Press and hold between blocks

**Expected behavior**
Copy/paste/select should be disabled while playing the game.

**Debug info**
```
Version: 1.0.9
Motion: true
Supports WebGL: true
Feature Phone: no
Standalone Mode: no
Screen Width: 1920px
Screen Height: 969px
DPR: 1
Device Memory: 8
Concurrency: 8
UA: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/77.0.3865.75 Safari/537.36
```
**Describe the bug**
Every now and then, I flag a black hole and then some other one (usually nearby) becomes white (still flagged).
Visual representation: (Bottom row, 3rd column from left)
![](https://i.imgur.com/MAegHkW.png)

It is worth noting that it's not unique to Chrome on Windows. It also occurred to me while playing in the PWA version, as well as on Android in the app version.

**To Reproduce**
I don't know, seems to randomly happen.

**Expected behavior**
All the flagged black holes should be colored in blue, and stay as blue.