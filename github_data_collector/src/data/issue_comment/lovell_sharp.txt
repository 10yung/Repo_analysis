When I init sharp object in worker thread for uploaded image from the buffer
```js
const image = sharp(file.data);
```
and then try to retrieve its metadata or save image to disk with the sharp I'm getting `Input file is missing` error. **The same logic is working from the main thread**. Provided buffer is not blank, logged sharp object seems to be keeping blank object with empty buffer:
```json5
{
  _readableState: ReadableState {
    objectMode: false,
    highWaterMark: 16384,
    buffer: BufferList { head: null, tail: null, length: 0 },
    length: 0,
    pipes: null,
    pipesCount: 0,
    flowing: null,
    ended: false,
    endEmitted: false,
    reading: false,
    sync: true,
    needReadable: false,
    emittedReadable: false,
    readableListening: false,
    resumeScheduled: false,
    paused: true,
    emitClose: true,
    autoDestroy: false,
    destroyed: false,
    defaultEncoding: 'utf8',
    awaitDrain: 0,
    readingMore: false,
    decoder: null,
    encoding: null
  },
  readable: true,
  _events: [Object: null prototype] {},
  _eventsCount: 0,
  _maxListeners: undefined,
  _writableState: WritableState {
    objectMode: false,
    highWaterMark: 16384,
    finalCalled: false,
    needDrain: false,
    ending: false,
    ended: false,
    finished: false,
    destroyed: false,
    decodeStrings: true,
    defaultEncoding: 'utf8',
    length: 0,
    writing: false,
    corked: 0,
    sync: true,
    bufferProcessing: false,
    onwrite: [Function: bound onwrite],
    writecb: null,
    writelen: 0,
    bufferedRequest: null,
    lastBufferedRequest: null,
    pendingcb: 0,
    prefinished: false,
    errorEmitted: false,
    emitClose: true,
    autoDestroy: false,
    bufferedRequestCount: 0,
    corkedRequestsFree: {
      next: null,
      entry: null,
      finish: [Function: bound onCorkedFinish]
    }
  },
  writable: true,
  allowHalfOpen: true,
  options: {
    sequentialRead: false,
    limitInputPixels: 268402689,
    topOffsetPre: -1,
    leftOffsetPre: -1,
    widthPre: -1,
    heightPre: -1,
    topOffsetPost: -1,
    leftOffsetPost: -1,
    widthPost: -1,
    heightPost: -1,
    width: -1,
    height: -1,
    canvas: 'crop',
    position: 0,
    resizeBackground: [ 0, 0, 0, 255 ],
    useExifOrientation: false,
    angle: 0,
    rotationAngle: 0,
    rotationBackground: [ 0, 0, 0, 255 ],
    rotateBeforePreExtract: false,
    flip: false,
    flop: false,
    extendTop: 0,
    extendBottom: 0,
    extendLeft: 0,
    extendRight: 0,
    extendBackground: [ 0, 0, 0, 255 ],
    withoutEnlargement: false,
    kernel: 'lanczos3',
    fastShrinkOnLoad: true,
    tintA: 128,
    tintB: 128,
    flatten: false,
    flattenBackground: [ 0, 0, 0 ],
    negate: false,
    medianSize: 0,
    blurSigma: 0,
    sharpenSigma: 0,
    sharpenFlat: 1,
    sharpenJagged: 2,
    threshold: 0,
    thresholdGrayscale: true,
    trimThreshold: 0,
    gamma: 0,
    gammaOut: 0,
    greyscale: false,
    normalise: 0,
    brightness: 1,
    saturation: 1,
    hue: 0,
    booleanBufferIn: null,
    booleanFileIn: '',
    joinChannelIn: [],
    extractChannel: -1,
    removeAlpha: false,
    ensureAlpha: false,
    colourspace: 'srgb',
    composite: [],
    fileOut: '',
    formatOut: 'input',
    streamOut: false,
    withMetadata: true,
    withMetadataOrientation: -1,
    resolveWithObject: false,
    jpegQuality: 80,
    jpegProgressive: false,
    jpegChromaSubsampling: '4:2:0',
    jpegTrellisQuantisation: false,
    jpegOvershootDeringing: false,
    jpegOptimiseScans: false,
    jpegOptimiseCoding: true,
    jpegQuantisationTable: 0,
    pngProgressive: false,
    pngCompressionLevel: 9,
    pngAdaptiveFiltering: false,
    pngPalette: false,
    pngQuality: 100,
    pngColours: 256,
    pngDither: 1,
    webpQuality: 80,
    webpAlphaQuality: 100,
    webpLossless: false,
    webpNearLossless: false,
    webpSmartSubsample: false,
    webpReductionEffort: 4,
    tiffQuality: 80,
    tiffCompression: 'jpeg',
    tiffPredictor: 'horizontal',
    tiffPyramid: false,
    tiffSquash: false,
    tiffTile: false,
    tiffTileHeight: 256,
    tiffTileWidth: 256,
    tiffXres: 1,
    tiffYres: 1,
    heifQuality: 80,
    heifLossless: false,
    heifCompression: 'hevc',
    tileSize: 256,
    tileOverlap: 0,
    tileSkipBlanks: -1,
    tileBackground: [ 255, 255, 255, 255 ],
    linearA: 1,
    linearB: 0,
    debuglog: [Function],
    queueListener: [Function: queueListener],
    input: { failOnError: true }
  }
}
```
As discussed here: https://github.com/lovell/sharp/issues/659

This naming could make it clearer that it only applies to JPGs.

The proposed syntax would be:

```
pipeline.resize(100,100).whenJpeg({quality : 75}).toBuffer(function(){})
```

Which would do the same as:

```
pipeline.resize(100,100).jpeg({quality : 75, force : false}).toBuffer(function(){})
```

Alternative function names could be `ifJpeg` or `jpegOptions`.

I don't know this lib well enough to know whether `force: false` should be deprecated/removed or not.
<!-- If this issue relates to installation, please use https://github.com/lovell/sharp/issues/new?labels=installation&template=installation.md instead. -->

Normally compositing works great, but I've been occasionally seeing the final composited image to just render the composite input (overlay) with a transparent background rather than with the background image. This has only happened a few times and it has been pretty random, but wondering if anyone else has seen this and if it could be a potential bug.

**What is the output of running `npx envinfo --binaries --languages --system --utilities`?**
(service running in a docker container)

```
  System:
    OS: Linux 4.9 Ubuntu 18.04.3 LTS (Bionic Beaver)
    CPU: (2) x64 Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz
    Memory: 2.69 GB / 7.79 GB
    Container: Yes
    Shell: 4.4.20 - /bin/bash
  Binaries:
    Node: 10.17.0 - /usr/local/bin/node
    npm: 6.11.3 - /usr/local/bin/npm
  Languages:
    Bash: 4.4.20 - /bin/bash
    Perl: 5.26.1 - /usr/bin/perl
```

**What are the steps to reproduce?**

This seems to be happening randomly, so it's difficult to reproduce.

**What is the expected behaviour?**

I am trying to composite a background image with an arrow overlay. Expected behavior is an image renders with the arrow overlayed over the background image.

**Are you able to provide a standalone code sample, without other dependencies, that demonstrates this problem?**

```
const composite = (baseImage, arrow) => {
  return new Promise((resolve, reject) => {
    sharp(baseImage.Body)
      .composite({ input: arrow.Body })
      .toBuffer()
      .then((result) => resolve(result))
      .catch((e) => reject(e));
  });
};
```

I'm using Sharp with Libvips library compiled with magick support.
I've tested the conversion of some jp2 files to jpg and I don't realize why the conversion takes a long time when performed using sharp.

The conversion process using the convert program takes 14s:
`$ convert Dante003-jp2 Dante003.jpg`

The conversion process using the Libvips library inside a Doker takes 15sec:
`$ vips magickload Dante003-jp2 Dante003-jp2.jpg`

The conversion process using the sharp library, inside a Doker with node 10.x, takes 40sec.
```
const sharp = require('sharp');

sharp('Dante003-jp2')
	.toFile('Dante003-jp2.jpg');
```

Since the sharp code should run in a lambda function and I have a constraint of 30sec on the Gateway timeout, I ask if I can use some option to speed up the process.

The version used of sharp is 0.21.3 and Libvips was compiled using the following libraries:
`{
  "cairo": "1.16.0",
  "croco": "0.6.13",
  "curl": "7.67.0",
  "exif": "0.6.21",
  "expat": "2.2.9",
  "ffi": "3.3",
  "fftw3": "3.3.8",
  "fontconfig": "2.13.1",
  "freetype": "2.10.1",
  "fribidi": "1.0.6",
  "gdkpixbuf": "2.36.12",
  "ghostscript": "9.50",
  "gif": "5.1.4",
  "glib": "2.58.3",
  "gsf": "1.14.44",
  "harfbuzz": "2.6.4",
  "icu": "64.2",
  "imagemagick": "6.9.10-78",
  "jpeg-turbo": "1.5.3",
  "lcms2": "2.9",
  "nasm": "2.14.02",
  "openjpeg": "2.3.1",
  "openssl": "1.0.2t",
  "orc": "0.4.26",
  "pango": "1.38.1",
  "pcre": "8.43",
  "pixman": "0.38.4",
  "png16": "1.6.37",
  "poppler": "0.58.0",
  "svg": "2.46.3",
  "swig": "4.0.1",
  "tiff": "4.0.9",
  "vips": "8.7.0",
  "webp": "1.0.3",
  "xml2": "2.9.9",
  "xslt": "1.1.33",
  "zlib": "1.2.11"
}`

The Dante003-jp2 file is a 44M image with the following format
`$ magick identify Dante003-jp2`
`Dante003-jp2 JP2 5100x7019 5100x7019+0+0 8-bit sRGB 0.000u 0:00.003`
**What are you trying to achieve?**
Log/report libvips warnings when failOnError is flagged false.

**Have you searched for similar feature requests?**
Yes

**What would you expect the API to look like?**
Unsure

**What alternatives have you considered?**
Work around is to spawn sharp instance with failOnError flagged true, record any error message and then to try reprocess with failOnError flagged false.

**Is there a sample image that helps explain?**
I can provide if required.
Did you see the [documentation relating to installation](https://sharp.pixelplumbing.com/en/stable/install/)?
**Yes**

Have you ensured the platform and version of Node.js used for `npm install` is the same as the platform and version of Node.js used at runtime?
**Turns out Ubuntu repositories were quite out of date, and I was on npm 3.5.2. Using [this](https://stackoverflow.com/questions/44095985/why-only-outdated-version-of-npm-is-available-on-debian-ubuntu) I was able to get it up to 6.13.6, but there is still a discrepancy compared to Node, which is on 8.10.0. I realize this could be an issue.**

If you are installing as a `root` or `sudo` user, have you tried with the `npm install --unsafe-perm` flag?
**I gave this a try, and the previous error about missing my GraphQL dependency has disappeared. It has not resolved the gatsby issue, however.** 

What is the complete output of running `npm install --verbose sharp`? Have you checked this output for useful error messages?
**It looks like there are some minor optional dependency warnings, but no errors:**
> npm info it worked if it ends with ok
> npm verb cli [ '/usr/bin/node',
> npm verb cli   '/usr/local/bin/npm',
> npm verb cli   'install',
> npm verb cli   '--unsafe-perm',
> npm verb cli   '--verbose',
> npm verb cli   'sharp' ]
> npm info using npm@6.13.6
> npm info using node@v8.10.0
> npm verb npm-session 634ea073ccd922d9
> npm http fetch GET 304 https://registry.npmjs.org/sharp 158ms (from cache)
> npm timing stage:loadCurrentTree Completed in 2204ms
> npm timing stage:loadIdealTree:cloneCurrentTree Completed in 26ms
> npm timing stage:loadIdealTree:loadShrinkwrap Completed in 1364ms
> npm http fetch GET 304 https://registry.npmjs.org/semver 85ms (from cache)
> npm timing stage:loadIdealTree:loadAllDepsIntoIdealTree Completed in 2027ms
> npm timing stage:loadIdealTree Completed in 4114ms
> npm timing stage:generateActionsToTake Completed in 173ms
> npm verb correctMkdir /home/--redacted--/.npm/_locks correctMkdir not in flight; initializing
> npm verb lock using /home/--redacted--/.npm/_locks/staging-8093a87111e9e37b.lock for /home/--redacted--/node_modules/.staging
> npm timing action:extract Completed in 184ms
> npm info lifecycle undefined~preuninstall: undefined
> npm info lifecycle undefined~uninstall: undefined
> npm verb unbuild rmStuff undefined 'from' '/home/--redacted--/node_modules'
> npm info lifecycle undefined~postuninstall: undefined
> npm info lifecycle undefined~preuninstall: undefined
> npm info lifecycle undefined~uninstall: undefined
> npm verb unbuild rmStuff undefined 'from' '/home/--redacted--/node_modules'
> npm info lifecycle undefined~postuninstall: undefined
> npm info lifecycle undefined~preuninstall: undefined
> npm info lifecycle undefined~uninstall: undefined
> npm verb unbuild rmStuff undefined 'from' '/home/--redacted--/node_modules'
> npm info lifecycle undefined~postuninstall: undefined
> npm info lifecycle undefined~preuninstall: undefined
> npm info lifecycle undefined~uninstall: undefined
> npm verb unbuild rmStuff undefined 'from' '/home/--redacted--/node_modules'
> npm info lifecycle undefined~postuninstall: undefined
> npm info lifecycle undefined~preuninstall: undefined
> npm info lifecycle undefined~uninstall: undefined
> npm verb unbuild rmStuff undefined 'from' '/home/--redacted--/node_modules'
> npm info lifecycle undefined~postuninstall: undefined
> npm timing action:unbuild Completed in 4ms
> npm timing action:remove Completed in 18ms
> npm timing action:finalize Completed in 64ms
> npm timing action:refresh-package-json Completed in 91ms
> npm info lifecycle semver@6.3.0~preinstall: semver@6.3.0
> npm info lifecycle sharp@0.23.4~preinstall: sharp@0.23.4
> npm timing action:preinstall Completed in 1ms
> npm info linkStuff semver@6.3.0
> npm verb linkBins [ { semver: 'bin/semver.js' },
> npm verb linkBins   '/home/--redacted--/node_modules/sharp/node_modules/.bin',
> npm verb linkBins   false ]
> npm info linkStuff sharp@0.23.4
> npm timing action:build Completed in 8ms
> npm info lifecycle semver@6.3.0~install: semver@6.3.0
> npm info lifecycle sharp@0.23.4~install: sharp@0.23.4
> 
> > sharp@0.23.4 install /home/--redacted--/node_modules/sharp
> > (node install/libvips && node install/dll-copy && prebuild-install) || (node-gyp rebuild && node install/dll-copy)
> 
> info sharp Using cached /home/--redacted--/.npm/_libvips/libvips-8.8.1-linux-x64.tar.gz
> prebuild-install info begin Prebuild-install version 5.3.3
> prebuild-install info looking for cached prebuild @ /home/--redacted--/.npm/_prebuilds/f90d6d-sharp-v0.23.4-node-v57-linux-x64.tar.gz
> prebuild-install info found cached prebuild 
> prebuild-install info unpacking @ /home/--redacted--/.npm/_prebuilds/f90d6d-sharp-v0.23.4-node-v57-linux-x64.tar.gz
> prebuild-install info unpack resolved to /home/--redacted--/node_modules/sharp/build/Release/sharp.node
> prebuild-install info unpack required /home/--redacted--/node_modules/sharp/build/Release/sharp.node successfully
> prebuild-install info install Successfully installed prebuilt binary!
> npm verb lifecycle sharp@0.23.4~install: unsafe-perm in lifecycle true
> npm verb lifecycle sharp@0.23.4~install: PATH: /usr/local/lib/node_modules/npm/node_modules/npm-lifecycle/node-gyp-bin:/home/--redacted--/node_modules/sharp/node_modules/.bin:/home/--redacted--/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin
> npm verb lifecycle sharp@0.23.4~install: CWD: /home/--redacted--/node_modules/sharp
> npm timing audit submit Completed in 625ms
> npm http fetch POST 200 https://registry.npmjs.org/-/npm/v1/security/audits/quick 623ms
> npm timing audit body Completed in 1ms
> npm timing action:install Completed in 1901ms
> npm info lifecycle semver@6.3.0~postinstall: semver@6.3.0
> npm info lifecycle sharp@0.23.4~postinstall: sharp@0.23.4
> npm timing action:postinstall Completed in 2ms
> npm verb unlock done using /home/--redacted--/.npm/_locks/staging-8093a87111e9e37b.lock for /home/--redacted--/node_modules/.staging
> npm timing stage:executeActions Completed in 2329ms
> npm timing stage:rollbackFailedOptional Completed in 73ms
> npm timing stage:runTopLevelLifecycles Completed in 9624ms
> npm verb saving [ { name: 'sharp', spec: '^0.23.4', save: 'dependencies' } ]
> npm verb shrinkwrap skipping write for package.json because there were no changes.
> npm info lifecycle undefined~preshrinkwrap: undefined
> npm info lifecycle undefined~shrinkwrap: undefined
> npm verb shrinkwrap skipping write for package-lock.json because there were no changes.
> npm info lifecycle undefined~postshrinkwrap: undefined
> npm WARN tsutils@3.17.1 requires a peer of typescript@>=2.8.0 || >= 3.2.0-dev || >= 3.3.0-dev || >= 3.4.0-dev || >= 3.5.0-dev || >= 3.6.0-dev || >= 3.6.0-beta || >= 3.7.0-dev || >= 3.7.0-beta but none is installed. You must install peer dependencies yourself.
> npm WARN gatsby-demo-simple-auth@1.0.0 No repository field.
> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@2.1.2 (node_modules/chokidar/node_modules/fsevents):
> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@2.1.2: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
> npm verb notsup SKIPPING OPTIONAL DEPENDENCY: Valid OS:    darwin
> npm verb notsup SKIPPING OPTIONAL DEPENDENCY: Valid Arch:  any
> npm verb notsup SKIPPING OPTIONAL DEPENDENCY: Actual OS:   linux
> npm verb notsup SKIPPING OPTIONAL DEPENDENCY: Actual Arch: x64
> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.2.11 (node_modules/fsevents):
> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.2.11: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
> npm verb notsup SKIPPING OPTIONAL DEPENDENCY: Valid OS:    darwin
> npm verb notsup SKIPPING OPTIONAL DEPENDENCY: Valid Arch:  any
> npm verb notsup SKIPPING OPTIONAL DEPENDENCY: Actual OS:   linux
> npm verb notsup SKIPPING OPTIONAL DEPENDENCY: Actual Arch: x64
> 
> + sharp@0.23.4
> added 2 packages from 60 contributors, removed 5 packages and audited 22923 packages in 10.821s
> 
> 35 packages are looking for funding
>   run `npm fund` for details
> 
> found 0 vulnerabilities
> 
> npm verb exit [ 0, true ]
> npm timing npm Completed in 11970ms
> npm info ok 
> 

What is the output of running `npx envinfo --binaries --languages --system --utilities`?
  **System:
    OS: Linux 4.15 Ubuntu 18.04.3 LTS (Bionic Beaver)
    CPU: (16) x64 AMD Ryzen 7 1700 Eight-Core Processor
    Memory: 6.81 GB / 15.66 GB
    Container: Yes
    Shell: 4.4.20 - /bin/bash
  Binaries:
    Node: 8.10.0 - /usr/bin/node
    npm: 6.13.6 - /usr/local/bin/npm
  Utilities:
    Make: 4.1 - /usr/bin/make
    GCC: 7.4.0 - /usr/bin/gcc
    Git: 2.17.1 - /usr/bin/git**

This is the error I receive when trying to build my Gatsby site:
> Something went wrong installing the "sharp" module
> 
> Cannot find module '../build/Release/sharp.node'
> 
> Remove the "node_modules/sharp" directory, run "npm install" and look for errors
> Consult the installation documentation at https://sharp.pixelplumbing.com/en/stable/install/
> Search for this error at https://github.com/lovell/sharp/issues

Hello,

I am really new at using Sharp and I was trying to install and run it for my app. I plan on using it to composite multiple images together. 

The problem I am running into is after I do `npm install sharp` and in one of the files i have `const sharp = require('sharp')` run the app, I see:

`Something went wrong installing the "sharp" module
dlopen(/Users/.../node_modules/sharp/build/Release/sharp.node, 1): Library not loaded: @rpath/libvips-cpp.42.dylib
  Referenced from: /Users/.../node_modules/sharp/build/Release/sharp.node
  Reason: Incompatible library version: sharp.node requires version 54.0.0 or later, but libvips-cpp.42.dylib provides version 51.0.0

- Remove the "node_modules/sharp" directory, run "npm install" and look for errors
- Consult the installation documentation at https://sharp.pixelplumbing.com/en/stable/install/
- Search for this error at https://github.com/lovell/sharp/issues  `

I tried performing each of the steps but no luck. Also tried going here and installing this via homebrew https://libvips.github.io/libvips/install.html
Hi.

I want to use composite function, but I want to provide sharp objects instead of string (path)/buffer. The purpose is to boost speed for price of memory usage. Keeping sharp instances in memory whole time.

```js
let img1 = sharp('1.png')
let img2 = sharp('2.png')

sharp('blank.png')
  .composite([
    { input: img1, left: 10, top: 10 },
    { input: img2, left: 50, top: 50 }
  ])
  .toFile('output.png')
  .then(() => { console.log('done'); })
  .catch(err => { console.error(err); })
```

Dear @brandonaaron  , @jo  , @rexxars  , @gasi  , @wjordan 

What are you trying to achieve?

I am controlling some bitmap push button and need to generate on the fly a bitmap array each time a value parameter changed.

Bitmap structure of the push button is :

![image](https://user-images.githubusercontent.com/6151258/71598122-f4eafc80-2b45-11ea-8b7a-d070deb3a99c.png)

```
Size 64x32
That means to have array[32][8] that means 32 lines with 8 bytes  (8 horizontal pixel ) as shown above
Color 1 bit (Black : 0xFF, white : 0x00)
```

The first pixel starts from the top right corner
And if you see the picture above, I need to reverse the bits when sending to the button.

### Use case 1 : generating bitmap array from a picture loaded from file bmp, png, jpeg, ... with size 64x32 with 1bpp or 8,16,32 bits per pixel and generate the bitmap array as specified above.
=> Dark is bit = 1, white = 0 (nothing) 

### Use case 2 : generating bitmap array from a picture loaded from file bmp, png, jpeg, ... and generate the bitmap array as specified above with resizing to 64x32 if possible keeping aspect ratio (Height = 32 ) but 1 bpp color even it is a picture wit 8,16,32 bits per pixel

### Use case 3 . generating bitmap array of byte (as show above in the picture - size 64x32) with 1 till 4 lines
with possible auto size, position (x,y) ,wrap, space between lines, ... and be possible to invert for each line separately the background .

### Use case 4 . generating rectangle, line, circle, with text depending of parameter like this :

![image](https://user-images.githubusercontent.com/6151258/71598858-d76b6200-2b48-11ea-8d91-d7ce924ff83e.png)

![image](https://user-images.githubusercontent.com/6151258/71598929-18637680-2b49-11ea-9439-e9a98286c64c.png)

Those pictures could be already generated ina bitmap array as template and with a value we calculate the pixel needs to be disabled or enabled.

Have you searched for similar questions?

### Yes and most are forwarding to your npm

Are you able to provide a standalone code sample that demonstrates this question?

### No sample. I generated manually the byte but I found some apps doing this but ould not access the code.


[bitmap manager.zip](https://github.com/lovell/sharp/files/4010930/bitmap.manager.zip)


Are you able to provide a sample image that helps explain the question?

### Yes

* Bit map data is stored in flash NOT RAM, so the size of the flash will determine the number of bitmaps.
   Each bitmap will occupy 256 bytes of program memory space A "1" in the bitmap will indicate a dark pixel */

```
unsigned char IS01DBFRGB_bitmap_1[32][8] PROGMEM =
{
    { 0b10101010, 0b10101010, 0b10101010, 0b10101010, 0b10101010, 0b10101010, 0b10101010, 0b01010101 },     //Line #1
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #2
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #3
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #4
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #5
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #6
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #7
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #8

    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #9
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #10
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #11
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #12
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #13
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #14
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #15
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #16

    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #17
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #18
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #19
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #20
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #21
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #22
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #23
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #24

    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #25
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #26
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #27
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #28
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #29
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #30
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #31
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #32
};

unsigned char IS01DBFRGB_bitmap_2[32][8] PROGMEM=
{
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #1
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #2
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #3
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #4
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #5
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #6
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #7
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #8

    { 0b00000000, 0b00000000, 0b00001000, 0b10000000, 0b11001100, 0b00000000, 0b00000000, 0b00000000 },     //Line #9
    { 0b00000000, 0b00000000, 0b00001000, 0b10000000, 0b01000100, 0b00000000, 0b00000000, 0b00000000 },     //Line #10
    { 0b00000000, 0b00000000, 0b00001000, 0b10011100, 0b01000100, 0b01110000, 0b00000000, 0b00000000 },     //Line #11
    { 0b00000000, 0b00000000, 0b00001111, 0b10100010, 0b01000100, 0b10001000, 0b00000000, 0b00000000 },     //Line #12
    { 0b00000000, 0b00000000, 0b00001000, 0b10111110, 0b01000100, 0b10001000, 0b00000000, 0b00000000 },     //Line #13
    { 0b00000000, 0b00000000, 0b00001000, 0b10100000, 0b01000100, 0b10001000, 0b00000000, 0b00000000 },     //Line #14
    { 0b00000000, 0b00000000, 0b00001000, 0b10011100, 0b11101110, 0b01110000, 0b00000000, 0b00000000 },     //Line #15
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #16

    { 0b00000000, 0b00000000, 0b00010001, 0b00000000, 0b00000110, 0b00000100, 0b00000000, 0b00000000 },     //Line #17
    { 0b00000000, 0b00000000, 0b00010001, 0b00000000, 0b00000010, 0b00000100, 0b00000000, 0b00000000 },     //Line #18
    { 0b00000000, 0b00000000, 0b00010001, 0b00111001, 0b01100010, 0b00110100, 0b00000000, 0b00000000 },     //Line #19
    { 0b00000000, 0b00000000, 0b00010101, 0b01000101, 0b10010010, 0b01001100, 0b00000000, 0b00000000 },     //Line #20
    { 0b00000000, 0b00000000, 0b00010101, 0b01000101, 0b00000010, 0b01000100, 0b00000000, 0b00000000 },     //Line #21
    { 0b00000000, 0b00000000, 0b00010101, 0b01000101, 0b00000010, 0b01000100, 0b00000000, 0b00000000 },     //Line #22
    { 0b00000000, 0b00000000, 0b00001010, 0b00111001, 0b00000111, 0b00111100, 0b00000000, 0b00000000 },     //Line #23
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #24

    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #25
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #26
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #27
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #28
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #29
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #30
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #31
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #32
};

unsigned char IS01DBFRGB_bitmap_3[32][8] PROGMEM=
{
    { 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111 },     //Line #1
    { 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111 },     //Line #2
    { 0b11111111, 0b11111111, 0b11111111, 0b11110000, 0b00001111, 0b11111111, 0b11111111, 0b11111111 },     //Line #3
    { 0b11111111, 0b11111111, 0b11111111, 0b00000000, 0b00000001, 0b11111111, 0b11111111, 0b11111111 },     //Line #4
    { 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b00000000, 0b01111111, 0b11111111, 0b11111111 },     //Line #5
    { 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00111111, 0b11111111, 0b11111111 },     //Line #6
    { 0b11111111, 0b11111111, 0b11110000, 0b00000000, 0b00000000, 0b00011111, 0b11111111, 0b11111111 },     //Line #7
    { 0b11111111, 0b11111111, 0b11100000, 0b00000000, 0b00000000, 0b00001111, 0b11111111, 0b11111111 },     //Line #8
    { 0b11111111, 0b11111111, 0b11000000, 0b00000000, 0b00000000, 0b00000111, 0b11111111, 0b11111111 },     //Line #9
    { 0b11111111, 0b11111111, 0b10000000, 0b01000000, 0b00000100, 0b00000011, 0b11111111, 0b11111111 },     //Line #10
    { 0b11111111, 0b11111111, 0b10000000, 0b11100000, 0b00001110, 0b00000011, 0b11111111, 0b11111111 },     //Line #11
    { 0b11111111, 0b11111111, 0b00000001, 0b11110000, 0b00011111, 0b00000001, 0b11111111, 0b11111111 },     //Line #12
    { 0b11111111, 0b11111111, 0b00000000, 0b11100000, 0b00001110, 0b00000001, 0b11111111, 0b11111111 },     //Line #13
    { 0b11111111, 0b11111110, 0b00000000, 0b01000000, 0b00000100, 0b00000000, 0b11111111, 0b11111111 },     //Line #14
    { 0b11111111, 0b11111110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111111 },     //Line #15
    { 0b11111111, 0b11111110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111111 },     //Line #16
    { 0b11111111, 0b11111110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111111 },     //Line #17
    { 0b11111111, 0b11111110, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b11111111, 0b11111111 },     //Line #18
    { 0b11111111, 0b11111111, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b11111111, 0b11111111 },     //Line #19
    { 0b11111111, 0b11111111, 0b00000000, 0b00000000, 0b00000000, 0b00000001, 0b11111111, 0b11111111 },     //Line #20
    { 0b11111111, 0b11111111, 0b10000000, 0b00000000, 0b00000000, 0b00000011, 0b11111111, 0b11111111 },     //Line #21
    { 0b11111111, 0b11111111, 0b10000001, 0b10000000, 0b00000011, 0b00000011, 0b11111111, 0b11111111 },     //Line #22
    { 0b11111111, 0b11111111, 0b11000001, 0b11100000, 0b00001111, 0b00000111, 0b11111111, 0b11111111 },     //Line #23
    { 0b11111111, 0b11111111, 0b11100000, 0b11111111, 0b11111110, 0b00001111, 0b11111111, 0b11111111 },     //Line #24
    { 0b11111111, 0b11111111, 0b11110000, 0b00011111, 0b11110000, 0b00011111, 0b11111111, 0b11111111 },     //Line #25
    { 0b11111111, 0b11111111, 0b11111000, 0b00000000, 0b00000000, 0b00111111, 0b11111111, 0b11111111 },     //Line #26
    { 0b11111111, 0b11111111, 0b11111100, 0b00000000, 0b00000000, 0b01111111, 0b11111111, 0b11111111 },     //Line #27
    { 0b11111111, 0b11111111, 0b11111111, 0b00000000, 0b00000001, 0b11111111, 0b11111111, 0b11111111 },     //Line #28
    { 0b11111111, 0b11111111, 0b11111111, 0b11100000, 0b00001111, 0b11111111, 0b11111111, 0b11111111 },     //Line #29
    { 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111 },     //Line #30
    { 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111 },     //Line #31
    { 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111, 0b11111111 },     //Line #32
};

unsigned char IS01DBFRGB_bitmap_4[32][8] PROGMEM =
{
    { 0b00111000, 0b01111000, 0b00111000, 0b01110000, 0b01111100, 0b01111100, 0b00111000, 0b01000100 },     //Line #1
    { 0b01000100, 0b01000100, 0b01000100, 0b01001000, 0b01000000, 0b01000000, 0b01000100, 0b01000100 },     //Line #2
    { 0b01000100, 0b01000100, 0b01000000, 0b01000100, 0b01000000, 0b01000000, 0b01000000, 0b01000100 },     //Line #3
    { 0b01000100, 0b01111000, 0b01000000, 0b01000100, 0b01111000, 0b01111000, 0b01011100, 0b01111100 },     //Line #4
    { 0b01111100, 0b01000100, 0b01000000, 0b01000100, 0b01000000, 0b01000000, 0b01000100, 0b01000100 },     //Line #5
    { 0b01000100, 0b01000100, 0b01000100, 0b01001000, 0b01000000, 0b01000000, 0b01000100, 0b01000100 },     //Line #6
    { 0b01000100, 0b01111000, 0b00111000, 0b01110000, 0b01111100, 0b01000000, 0b00111100, 0b01000100 },     //Line #7
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #8

    { 0b00111000, 0b00111000, 0b01000100, 0b01000000, 0b01000100, 0b01000100, 0b00111000, 0b01111000 },     //Line #9
    { 0b00010000, 0b00010000, 0b01001000, 0b01000000, 0b01101100, 0b01000100, 0b01000100, 0b01000100 },     //Line #10
    { 0b00010000, 0b00010000, 0b01010000, 0b01000000, 0b01010100, 0b01100100, 0b01000100, 0b01000100 },     //Line #11
    { 0b00010000, 0b00010000, 0b01100000, 0b01000000, 0b01010100, 0b01010100, 0b01000100, 0b01111000 },     //Line #12
    { 0b00010000, 0b00010000, 0b01010000, 0b01000000, 0b01000100, 0b01001100, 0b01000100, 0b01000000 },     //Line #13
    { 0b00010000, 0b10010000, 0b01001000, 0b01000000, 0b01000100, 0b01000100, 0b01000100, 0b01000000 },     //Line #14
    { 0b00111000, 0b01100000, 0b01000100, 0b01111110, 0b01000100, 0b01000100, 0b00111000, 0b01000000 },     //Line #15
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #16

    { 0b00111000, 0b01111000, 0b00111100, 0b01111100, 0b01000100, 0b01000100, 0b01000100, 0b01000100 },     //Line #17
    { 0b01000100, 0b01000100, 0b01000000, 0b00010000, 0b01000100, 0b01000100, 0b01000100, 0b01000100 },     //Line #18
    { 0b01000100, 0b01000100, 0b01000000, 0b00010000, 0b01000100, 0b01000100, 0b01000100, 0b00101000 },     //Line #19
    { 0b01000100, 0b01111000, 0b00111000, 0b00010000, 0b01000100, 0b01000100, 0b01010100, 0b00010000 },     //Line #20
    { 0b01010100, 0b01010000, 0b00000100, 0b00010000, 0b01000100, 0b01000100, 0b01010100, 0b00101000 },     //Line #21
    { 0b01001000, 0b01001000, 0b00000100, 0b00010000, 0b01000100, 0b00101000, 0b01010100, 0b01000100 },     //Line #22
    { 0b00110100, 0b01000100, 0b01111000, 0b00010000, 0b00111000, 0b00010000, 0b00101000, 0b01000100 },     //Line #23
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #24

    { 0b01000100, 0b01111100, 0b00000000, 0b01000000, 0b00000000, 0b00000100, 0b00000000, 0b00011000 },     //Line #25
    { 0b01000100, 0b00000100, 0b00000000, 0b01000000, 0b00000000, 0b00000100, 0b00000000, 0b00100100 },     //Line #26
    { 0b01000100, 0b00001000, 0b00111000, 0b01011000, 0b00111000, 0b00110100, 0b00111000, 0b00100000 },     //Line #27
    { 0b00101000, 0b00010000, 0b00000100, 0b01100100, 0b01000000, 0b01001100, 0b01000100, 0b01110000 },     //Line #28
    { 0b00010000, 0b00100000, 0b00111100, 0b01000100, 0b01000000, 0b01000100, 0b01111100, 0b00100000 },     //Line #29
    { 0b00010000, 0b01000000, 0b01000100, 0b01000100, 0b01000100, 0b01000100, 0b01000000, 0b00100000 },     //Line #30
    { 0b00010000, 0b01111100, 0b00111100, 0b01111000, 0b00111000, 0b00111100, 0b00111000, 0b00100000 },     //Line #31
    { 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000, 0b00000000 },     //Line #32
};
```

If you have more questions or needs more details, let me know.

My best wishes for 2020
Youssef
**Requires `libvips 8.9`**

New features:
- load & save WEBP animations
- load & save GIF animations

Please keep in mind that to create a GIF file, *libvips* must be compiled with *imageMagick* support (which could be a real pain 😞 )