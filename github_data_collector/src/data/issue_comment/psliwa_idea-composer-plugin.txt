Right now there is no support for custom repositories that require authentication, so protected satis / private packagist are not supported. Credentials can be get from `$COMPOSER_HOME/auth.json` file.

More details: https://github.com/psliwa/idea-composer-plugin/issues/71#issuecomment-548955146
Hey. 

I'm on 2019.2 EAP and I have this issue, where a non-existing file in composer.json will want to create a new folder with that name.

https://twitter.com/phpstorm/status/1146075009036820481

This is the exact version: https://confluence.jetbrains.com/display/PhpStorm/PhpStorm+192.5438.24+Release+Notes
<details>

```
java.lang.AssertionError: QuickFix-es with the same family name (Composer.json) should be the same class instances but actually are org.psliwa.idea.composerJson.intellij.codeAssist.file.CreateFilesystemItemQuickFix$CreateFileQuickFix and org.psliwa.idea.composerJson.intellij.codeAssist.RemoveJsonElementQuickFix instances. Please assign reported exception for the inspection "class org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection" ("FilePath") developer.
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.collectProblems(FilePathInspection.scala:61)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$7(FilePathInspection.scala:52)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$7$adapted(FilePathInspection.scala:52)
	at scala.Option.foreach(Option.scala:257)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$6(FilePathInspection.scala:52)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$6$adapted(FilePathInspection.scala:51)
	at scala.collection.Iterator.foreach(Iterator.scala:929)
	at scala.collection.Iterator.foreach$(Iterator.scala:929)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1417)
	at scala.collection.IterableLike.foreach(IterableLike.scala:71)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:70)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.collectProblems(FilePathInspection.scala:51)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$4(FilePathInspection.scala:26)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$4$adapted(FilePathInspection.scala:26)
	at scala.Option.foreach(Option.scala:257)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$3(FilePathInspection.scala:26)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$3$adapted(FilePathInspection.scala:25)
	at scala.Option.foreach(Option.scala:257)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$2(FilePathInspection.scala:25)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$2$adapted(FilePathInspection.scala:24)
	at scala.collection.Iterator.foreach(Iterator.scala:929)
	at scala.collection.Iterator.foreach$(Iterator.scala:929)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1417)
	at scala.collection.IterableLike.foreach(IterableLike.scala:71)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:70)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.collectProblems(FilePathInspection.scala:24)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$4(FilePathInspection.scala:26)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$4$adapted(FilePathInspection.scala:26)
	at scala.Option.foreach(Option.scala:257)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$3(FilePathInspection.scala:26)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$3$adapted(FilePathInspection.scala:25)
	at scala.Option.foreach(Option.scala:257)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$2(FilePathInspection.scala:25)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.$anonfun$collectProblems$2$adapted(FilePathInspection.scala:24)
	at scala.collection.Iterator.foreach(Iterator.scala:929)
	at scala.collection.Iterator.foreach$(Iterator.scala:929)
	at scala.collection.AbstractIterator.foreach(Iterator.scala:1417)
	at scala.collection.IterableLike.foreach(IterableLike.scala:71)
	at scala.collection.IterableLike.foreach$(IterableLike.scala:70)
	at scala.collection.AbstractIterable.foreach(Iterable.scala:54)
	at org.psliwa.idea.composerJson.intellij.codeAssist.file.FilePathInspection.collectProblems(FilePathInspection.scala:24)
	at org.psliwa.idea.composerJson.intellij.codeAssist.AbstractInspection.$anonfun$doCheckFile$3(AbstractInspection.scala:25)
	at org.psliwa.idea.composerJson.intellij.codeAssist.AbstractInspection.$anonfun$doCheckFile$3$adapted(AbstractInspection.scala:24)
	at scala.Option.map(Option.scala:146)
	at org.psliwa.idea.composerJson.intellij.codeAssist.AbstractInspection.$anonfun$doCheckFile$2(AbstractInspection.scala:24)
	at scala.Option.flatMap(Option.scala:171)
	at org.psliwa.idea.composerJson.intellij.codeAssist.AbstractInspection.$anonfun$doCheckFile$1(AbstractInspection.scala:23)
	at scala.Option.flatMap(Option.scala:171)
	at org.psliwa.idea.composerJson.intellij.codeAssist.AbstractInspection.doCheckFile(AbstractInspection.scala:22)
	at org.psliwa.idea.composerJson.intellij.codeAssist.AbstractInspection.checkFile(AbstractInspection.scala:15)
	at com.intellij.codeInspection.LocalInspectionTool$1.visitFile(LocalInspectionTool.java:141)
	at com.intellij.extapi.psi.PsiFileBase.accept(PsiFileBase.java:70)
	at com.intellij.codeInspection.InspectionEngine.acceptElements(InspectionEngine.java:75)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$null$7(LocalInspectionsPass.java:316)
	at com.intellij.util.AstLoadingFilter.lambda$toComputable$2(AstLoadingFilter.java:168)
	at com.intellij.util.AstLoadingFilter.disallowTreeLoading(AstLoadingFilter.java:126)
	at com.intellij.util.AstLoadingFilter.disallowTreeLoading(AstLoadingFilter.java:115)
	at com.intellij.util.AstLoadingFilter.disallowTreeLoading(AstLoadingFilter.java:110)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.lambda$visitRestElementsAndCleanup$8(LocalInspectionsPass.java:315)
	at com.intellij.concurrency.ApplierCompleter.execAndForkSubTasks(ApplierCompleter.java:133)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:1163)
	at com.intellij.concurrency.ApplierCompleter.lambda$wrapInReadActionAndIndicator$1(ApplierCompleter.java:105)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:582)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:532)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:87)
	at com.intellij.concurrency.ApplierCompleter.wrapInReadActionAndIndicator(ApplierCompleter.java:116)
	at com.intellij.concurrency.ApplierCompleter.compute(ApplierCompleter.java:99)
	at java.util.concurrent.CountedCompleter.exec(CountedCompleter.java:731)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.pollAndExecCC(ForkJoinPool.java:1190)
	at java.util.concurrent.ForkJoinPool.helpComplete(ForkJoinPool.java:1879)
	at java.util.concurrent.ForkJoinPool.awaitJoin(ForkJoinPool.java:2045)
	at java.util.concurrent.ForkJoinTask.doJoin(ForkJoinTask.java:390)
	at java.util.concurrent.ForkJoinTask.join(ForkJoinTask.java:719)
	at java.util.concurrent.ForkJoinPool.invoke(ForkJoinPool.java:2616)
	at com.intellij.concurrency.JobLauncherImpl.invokeConcurrentlyUnderProgress(JobLauncherImpl.java:65)
	at com.intellij.concurrency.JobLauncher.invokeConcurrentlyUnderProgress(JobLauncher.java:56)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.visitRestElementsAndCleanup(LocalInspectionsPass.java:328)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.inspect(LocalInspectionsPass.java:199)
	at com.intellij.codeInsight.daemon.impl.LocalInspectionsPass.doInspectInBatch(LocalInspectionsPass.java:131)
	at com.intellij.codeInspection.ex.GlobalInspectionContextImpl.inspectFile(GlobalInspectionContextImpl.java:585)
	at com.intellij.codeInspection.ex.GlobalInspectionContextImpl.lambda$null$2(GlobalInspectionContextImpl.java:464)
	at com.intellij.openapi.project.DumbService.lambda$runReadActionInSmartMode$0(DumbService.java:79)
	at com.intellij.openapi.project.DumbService.lambda$runReadActionInSmartMode$1(DumbService.java:123)
	at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:977)
	at com.intellij.openapi.application.ReadAction.compute(ReadAction.java:57)
	at com.intellij.openapi.project.DumbService.runReadActionInSmartMode(DumbService.java:116)
	at com.intellij.openapi.project.DumbService.runReadActionInSmartMode(DumbService.java:79)
	at com.intellij.openapi.project.DumbService.tryRunReadActionInSmartMode(DumbService.java:97)
	at com.intellij.codeInspection.ex.GlobalInspectionContextImpl.lambda$runTools$6(GlobalInspectionContextImpl.java:455)
	at com.intellij.concurrency.JobLauncherImpl$1MyTask.lambda$call$0(JobLauncherImpl.java:291)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:582)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:532)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:87)
	at com.intellij.concurrency.JobLauncherImpl$1MyTask.call(JobLauncherImpl.java:278)
	at com.intellij.concurrency.JobLauncherImpl$1MyTask.call(JobLauncherImpl.java:268)
	at java.util.concurrent.ForkJoinTask$AdaptedCallable.exec(ForkJoinTask.java:1424)
	at java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:289)
	at java.util.concurrent.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1056)
	at java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1692)
	at java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:157)
```

</details>

Not sure how to reproduce, I got this with PHPStorm 2018.3 while running the code inspection.
Hi,

when you are installing a project without any desire to release it on packagist, the plugin shouldn't mark it as an error if "name" / "description" are missing – as they are not required when it is only an installation.

Thank you for your great work, though! 🎉 
See similar implementation for running npm tasks:
https://blog.jetbrains.com/webstorm/2018/01/webstorm-2018-1-eap/

... or PHPUnit plugin's run Unit tests:
https://github.com/Haehnchen/idea-php-phpunit-plugin/issues/4

Interface to implement is called `LineMarkerProvider`.
Hi,

I have remote private repository configured:

```
"repositories": [
    {
      "type": "git",
      "url": "XXXX"
    }
  ],
```

but autocomplete doesnt work.
Also tried through the plugin settings (other settings), select "Custom repository settings" click on "+", doesnt do anything...

am i missing something?
Hello!

Please add action - reorder packages and check if sort-packages option enabled https://getcomposer.org/doc/06-config.md#sort-packages - in this case - please reorder packages in composer.json on file saving.