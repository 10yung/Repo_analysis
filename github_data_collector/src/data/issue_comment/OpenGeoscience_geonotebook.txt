Hi I am wondering if this can import netcdf goes 16 data and convert them to GeoJsn. If so, how doe we do that?

Thank you,
Hi，I have a problem about adding and showing a raster on the map. I  would appreciate any help in debugging and tracking down the error source. 
I pull the lastest geonotebook image by run the code
``` pull geonotebook/geonotebook``` and use default config
When I run ``` M.add_layer(rd, opacity=1.0, gamma=2.5) ``` in  02_Raster_Data.ipynb,
nothing appears on the map. (I have tried chrome、Firefox and edge web browser)
But I think I read the raster image, because I can see the max and min values of the bands, besides ```M.layers``` is not an empty collection.
when I press F12 to see the chrome web browser console message.  There is a log reads
```
127.0.0.1:8888/ktile/69554045-2827-4058-8ec4-3cb375a2a9ee/L57.Globe.month09.2010.hh09vv04.h6v1.doy247to273.NBAR.v3.0_16693297702632292612/19/42/7.png?:1 GET http://127.0.0.1:8888/ktile/69554045-2827-4058-8ec4-3cb375a2a9ee/L57.Globe.month09.2010.hh09vv04.h6v1.doy247to273.NBAR.v3.0_16693297702632292612/19/42/7.png? net::ERR_CONNECTION_REFUSED
```
I enter the container and try to check if  there is a file names 7.png, but i find none.
``` docker exec -it containerid /bin/bash```
```find / -name 7.png``` 
Please let me know what additional info would be helpful in debugging this.
Thanks!
Hi
running the Docker container and following [01_Example.ipynb](https://github.com/OpenGeoscience/geonotebook/blob/master/notebooks/01_Example.ipynb), I immediately hit the following error and the kernel dies:

```
[E 08:53:41.324 NotebookApp] 500 POST /api/kernels/4d3b35a2-ebc1-41a6-8e89-8f2aa40ef632/restart (172.17.0.1) 31048.51ms referer=http://localhost:8888/notebooks/Geonotebook/01_Example.ipynb
ERROR:tornado.general:Uncaught exception in ZMQStream callback
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/zmq/eventloop/zmqstream.py", line 432, in _run_callback
    callback(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/tornado/stack_context.py", line 277, in null_wrapper
    return fn(*args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py", line 276, in dispatcher
    return self.dispatch_shell(stream, msg)
  File "/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py", line 226, in dispatch_shell
    self.pre_handler_hook()
  File "/usr/local/lib/python2.7/dist-packages/ipykernel/kernelbase.py", line 241, in pre_handler_hook
    self.saved_sigint_handler = signal(SIGINT, default_int_handler)
```
Hi
the example notebooks are not very informative in their current state on Github. Propose using [Binder](https://mybinder.org/) to bring them to life
Compatible with 0.36 and 1.0.x

Should fix https://github.com/OpenGeoscience/geonotebook/issues/139
I feel that a line annotation is really missing and I suppose it would be easy to implement considering that Shapely already has a LineString object so it is more a matter of Front-End. When measuring distances a visual representation would be really helpful.
Developer Documentation now only shows some figures and it could be much easier to understand if some explanations of those figures are clarified, especially the last 2 figures.Thanks:)
Hello,
I am new to GeoNotebook, I am at the stage where I try to understand how GeoNotebook works, or more precisely what each of the python libraries that are used in GeoNotebook do.

What I didn't understand is how I can change the projection of the rasters overplayed in Mapnik? What is the library that does this, is it Mapnik or Rasterio? For the vectors, is Shapely, if I am not mistaken. 
Hello, do you guys have any idea on how hard would it be to have the pip instalable bindings for python mapnik. Just to give me some pointers so I can do it (or else, not do, if it's completely unfeasible)
This isn't really an issue, but how would I display a series of X,Y coordinates of points? Would it be possible to add a pop up window to the display?

The docs go into depth about displaying raster data but don't really cover vector data:

`from geonotebook.wrappers import RasterData

rd = RasterData('file:///path/to/file.tiff')
M.add_layer(rd[1, 2, 3], opacity=1.0, gamma=2.5)
`
