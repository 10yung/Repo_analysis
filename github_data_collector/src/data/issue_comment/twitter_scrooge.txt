One line summary of the issue here.

Building the scrooge-linter fails because the 19.10.0 version of the util-logging dependency cannot be found. Changing build.sbt to use 19.9.0-SNAPSHOT works fine

### Expected behavior

A command like the following should run:
```
./sbt 'scrooge-linter/runMain com.twitter.scrooge.linter.Main --help'
```
In this case, this should display the linter's help message.

### Actual behavior

Builds fail with the following exception:

```
[info] Resolved scrooge-linter dependencies
[error] coursier.ResolutionException: Encountered 1 error(s) in dependency resolution:
[error]     com.twitter:util-logging_2.12:19.10.0-SNAPSHOT:
[error]         not found:
[error]             /Users/gfishman/.ivy2/local/com.twitter/util-logging_2.12/19.10.0-SNAPSHOT/ivys/ivy.xml
[error]             https://repo1.maven.org/maven2/com/twitter/util-logging_2.12/19.10.0-SNAPSHOT/util-logging_2.12-19.10.0-SNAPSHOT.pom
[error]             https://oss.sonatype.org/content/groups/public/com/twitter/util-logging_2.12/19.10.0-SNAPSHOT/util-logging_2.12-19.10.0-SNAPSHOT.pom
[error] (scrooge-linter / coursierResolutions) coursier.ResolutionException: Encountered 1 error(s) in dependency resolution:
[error]     com.twitter:util-logging_2.12:19.10.0-SNAPSHOT:
[error]         not found:
[error]             /Users/gfishman/.ivy2/local/com.twitter/util-logging_2.12/19.10.0-SNAPSHOT/ivys/ivy.xml
[error]             https://repo1.maven.org/maven2/com/twitter/util-logging_2.12/19.10.0-SNAPSHOT/util-logging_2.12-19.10.0-SNAPSHOT.pom
[error]             https://oss.sonatype.org/content/groups/public/com/twitter/util-logging_2.12/19.10.0-SNAPSHOT/util-logging_2.12-19.10.0-SNAPSHOT.pom
```

The latest version of util-logging available in maven repo appears to be 19.9.0-SNAPSHOT: https://mvnrepository.com/artifact/com.twitter/util-logging

`scrooge-serializer` is required by several projects, like chill which is used again by many other projects like Spark. Would be good to start supporting 2.13 as it will be soon out.


Intellij code insight feature cannot be used (no code jump or error highlight) on generated source file from big thrift service (~60 methods)

### Expected behavior

Intellij code insight works on generated source file

### Actual behavior

Got the following message when opening generated source in intellij
`Generated file size exceeds default intellij configured limit (2.44MB). Code insight features are not available.`

### Steps to reproduce the behavior

Create thrift service with roughly 60 methods with 2-3 arguments each, then runs scroogeGen on it. This should generate about 53,000 lines with 2.5MB in size. Open the project in intellij. Warning message should come up at the top of the editor (if file size actually exceeds 2.5MB)

### Additional Info
- The same thrift service works in 17.11.0, but not in 18.5.0. I think the new version adds 2 more interfaces: `ReqRepMethodPerEndpoint`, `ReqRepServicePerEndpointBuilder`
- Not really big issue, but just think it worth mention here
- Workaround is simple - just need to change default limit or reduce no. of methods in the service https://stackoverflow.com/questions/23057988/file-size-exceeds-configured-limit-2560000-code-insight-features-not-availabl/23058324#23058324
- However, it's still slow to open and jump to source
- Any plan to drop deprecated `FutureIface` or `ServiceIface`? or provide option to do so

When you define a service function that throws multiple exceptions, but you use the same exception identifier/name, scrooge-sbt-plugin should already fail to generate code.

### Expected behavior

The generate step should fail with a similar error that the vanilla thrift generator produces: `"2: e" - field identifier/name has already been used`. 

### Actual behavior

Code is generated but doesn't compile, so the user is left to figure out why. If the generate task would fail due to invalid syntax, you would immediately see what the problem is.

### Steps to reproduce the behavior

Use the following thrift definition:

	exception ArgumentInvalidException {
	    1: string message
	}

	exception ServiceException {
	    1: string message
	}

	service SomeService {
	    string foo(1: string name)
	        throws (1: ServiceException e, 2: ArgumentInvalidException e)
	}




The [documentation](https://github.com/twitter/scrooge/blob/develop/doc/src/sphinx/SBTPlugin.rst) refers to `scroogeBuildOptions` as a `Seq[String]` but it is now something related to `Seq[ServiceOption]`, see: https://github.com/twitter/scrooge/blob/develop/scrooge-sbt-plugin/src/main/scala/com/twitter/ScroogeSBT.scala#L64

If it possible to add options by creating `ServiceOption`s that should be explained too.
One line summary of the issue here.

### Expected behavior

When "deprecated" annotation is given, the field has `@Deprecated` annotation in generated scala file.

### Actual behavior

Nothing happens.

### Steps to reproduce the behavior

Prepare thrift file like this.

```thrift
struct Foo {
  1: optional i32
      bar (
        deprecated = "true",
      )
}
```

Compile it.

```scala
  def bar: _root_.scala.Option[Int]
```

Definition of bar appears, but it does not have `@Deprecated` annotation.

I expect something like

```scala
  @Deprecated
  def bar: _root_.scala.Option[Int]
```

### Reference

https://issues.apache.org/jira/browse/THRIFT-640
Unused imports are included in the headers of generated files causing 2.12 builds with the default -Yfatal-warnings` setting to fail (unless the correct linting options are unset)

### Expected behavior

Scrooge generates files with headers including only the imports the current file needs.

### Actual behavior

Scrooge generates import statements for classes that are never used.

### Steps to reproduce the behavior

Generate a simple class with the following Thrift
```thrift
struct Simple {
  1: required string simple
}
```

Compiling with 2.12, with `-Xfatal-warnings` and `-Xlint` set, the build will fail.

### Expected behavior

Apache Thrift defines a list of reserved words that apparently cannot be used as field identifiers: https://git-wip-us.apache.org/repos/asf?p=thrift.git;a=blob;f=compiler/cpp/src/thrift/thriftl.ll;hb=e1832c354391deb0e0ce94a62ff32e8ce1c83fd3#l273

Therefore, I expect Scrooge to fail to compile a .thrift file with a field named `delete`. Failing that I expect a clear warning that the thrift file may be incompatible with other Thrift implementations.

### Actual behavior

We have been using a Scrooge-compiled Thrift file in a production Java system for a while:

```
struct ThingMessage {
  //...
  200: optional bool delete
  //...
```

However, we are unable to use Apache Thrift's python generator to build an ops tool to observe these messages:

```
thrift --gen py -I .../ThingMessage.thrift:35
[ERROR: .../ThingMessage.thrift:35] (last token was 'delete')
Cannot use reserved language keyword: "delete"
```
see https://issues.apache.org/jira/browse/DL-28

[ERROR] Exception parsing: E:\incubator-distributedlog\distributedlog-protocol\src\main\thrift\service.thrift: [3.1] failure: string matching regex `\z' expected but `/' found
[ERROR] 
[ERROR] // Response stats codes
[ERROR] 
[ERROR] ^
[ERROR] -> [Help 1]
com.twitter.scrooge.frontend.FileParseException: Exception parsing: E:\isoftstone\workspacedeis\incubator-distributedlog\distributedlog-protocol\src\main\thrift\service.thrift
at com.twitter.scrooge.frontend.ThriftParser$$anonfun$parse$1.apply(ThriftParser.scala:427)
at com.twitter.scrooge.frontend.ThriftParser$$anonfun$parse$1.apply(ThriftParser.scala:427)
at scala.Option.map(Option.scala:145)
at com.twitter.scrooge.frontend.ThriftParser.parse(ThriftParser.scala:420)
at com.twitter.scrooge.frontend.ThriftParser.parseFile(ThriftParser.scala:448)
at com.twitter.scrooge.Compiler$$anonfun$run$2.apply(Compiler.scala:66)
at com.twitter.scrooge.Compiler$$anonfun$run$2.apply(Compiler.scala:64)
at scala.collection.immutable.List.foreach(List.scala:318)
at scala.collection.generic.TraversableForwarder$class.foreach(TraversableForwarder.scala:32)
at scala.collection.mutable.ListBuffer.foreach(ListBuffer.scala:45)
at com.twitter.scrooge.Compiler.run(Compiler.scala:64)
at com.twitter.ScroogeRunner.compile(ScroogeRunner.scala:45)
at com.twitter.AbstractMavenScroogeMojo.execute(AbstractMavenScroogeMojo.java:239)
at com.twitter.MavenScroogeCompileMojo.execute(MavenScroogeCompileMojo.java:22)
at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo(DefaultBuildPluginManager.java:132)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:208)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:153)
at org.apache.maven.lifecycle.internal.MojoExecutor.execute(MojoExecutor.java:145)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:116)
at org.apache.maven.lifecycle.internal.LifecycleModuleBuilder.buildProject(LifecycleModuleBuilder.java:80)
at org.apache.maven.lifecycle.internal.builder.singlethreaded.SingleThreadedBuilder.build(SingleThreadedBuilder.java:51)
at org.apache.maven.lifecycle.internal.LifecycleStarter.execute(LifecycleStarter.java:120)
at org.apache.maven.DefaultMaven.doExecute(DefaultMaven.java:355)
at org.apache.maven.DefaultMaven.execute(DefaultMaven.java:155)
at org.apache.maven.cli.MavenCli.execute(MavenCli.java:584)
at org.apache.maven.cli.MavenCli.doMain(MavenCli.java:216)
at org.apache.maven.cli.MavenCli.main(MavenCli.java:160)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.lang.reflect.Method.invoke(Method.java:497)
at org.codehaus.plexus.classworlds.launcher.Launcher.launchEnhanced(Launcher.java:289)
at org.codehaus.plexus.classworlds.launcher.Launcher.launch(Launcher.java:229)
at org.codehaus.plexus.classworlds.launcher.Launcher.mainWithExitCode(Launcher.java:415)
at org.codehaus.plexus.classworlds.launcher.Launcher.main(Launcher.java:356)
Caused by: com.twitter.scrooge.frontend.ParseException: [3.1] failure: string matching regex `\z' expected but `/' found
// Response stats codes
^
at com.twitter.scrooge.frontend.ThriftParser.parse(ThriftParser.scala:423)
I try to use scrooge to compile thrift files to Scala files, but get lots of compile errors even I use the code in demos/scrooge-maven-demo.

### Expected behavior

Build success with mvn clean install command.

### Actual behavior

Get lots of compile erros

Here is error log when I compile scrooge-maven-demo.

[ERROR] /home/sili/code/scrooge/demos/scrooge-maven-demo/target/generated-sources/thrift/scrooge/com/twitter/mydemo/renamed/UserService.scala:9: error: object HasThriftStructCodec3 is not a member of package com.twitter.scrooge
[ERROR] import com.twitter.scrooge.{
[ERROR]        ^
[ERROR] /home/sili/code/scrooge/demos/scrooge-maven-demo/target/generated-sources/thrift/scrooge/com/twitter/mydemo/renamed/User.scala:9: error: object HasThriftStructCodec3 is not a member of package com.twitter.scrooge
[ERROR] import com.twitter.scrooge.{
[ERROR]        ^
[ERROR] /home/sili/code/scrooge/demos/scrooge-maven-demo/target/generated-sources/thrift/scrooge/com/twitter/mydemo/renamed/User.scala:353: error: not found: type HasThriftStructCodec3
[ERROR]   with HasThriftStructCodec3[User]
[ERROR]        ^
[ERROR] /home/sili/code/scrooge/demos/scrooge-maven-demo/src/main/scala/com/twitter/example/Demo.scala:37: error: overloaded method value stack with alternatives:
[ERROR]   [Req1, Rep1](server: com.twitter.finagle.server.StackBasedServer[Req1,Rep1])com.twitter.finagle.builder.ServerBuilder[Req1,Rep1,com.twitter.finagle.builder.ServerConfig.Yes,Nothing,Nothing] <and>
[ERROR]   [Req1, Rep1](mk: com.twitter.finagle.Stack.Params => com.twitter.finagle.Server[Req1,Rep1])com.twitter.finagle.builder.ServerBuilder[Req1,Rep1,com.twitter.finagle.builder.ServerConfig.Yes,Nothing,Nothing]

And here is the error log when compile my project.

[ERROR] /home/sili/workspace/new-sessionlog-proto/target/generated-sources/thrift/scrooge/com/mediav/data/log/unitedlog/ShowInfo.scala:9: object HasThriftStructCodec3 is not a member of package com.twitter.scrooge
[ERROR] import com.twitter.scrooge.{
[ERROR]        ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/target/generated-sources/thrift/scrooge/com/mediav/data/log/unitedlog/ShowInfo.scala:3045: not found: type HasThriftStructCodec3
[ERROR]   with HasThriftStructCodec3[ShowInfo]
[ERROR]        ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/src/main/scala/com/mvad/sessionlog/newSessionlog.scala:32: value isSetFraudInfo is not a member of com.mediav.data.log.unitedlog.ShowInfo
[ERROR]     if (showInfo.isSetFraudInfo
[ERROR]                  ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/target/generated-sources/thrift/scrooge/com/mediav/data/log/unitedlog/FraudInfo.scala:9: object HasThriftStructCodec3 is not a member of package com.twitter.scrooge
[ERROR] import com.twitter.scrooge.{
[ERROR]        ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/target/generated-sources/thrift/scrooge/com/mediav/data/log/unitedlog/FraudInfo.scala:569: not found: type HasThriftStructCodec3
[ERROR]   with HasThriftStructCodec3[FraudInfo]
[ERROR]        ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/src/main/scala/com/mvad/sessionlog/newSessionlog.scala:34: value fraudReasons is not a member of Option[com.mediav.data.log.unitedlog.FraudInfo]
[ERROR]       showInfo.fraudInfo.fraudReasons.mkString(",")
[ERROR]                          ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/target/generated-sources/thrift/scrooge/com/mediav/data/log/unitedlog/UnitedEvent.scala:9: object HasThriftStructCodec3 is not a member of package com.twitter.scrooge
[ERROR] import com.twitter.scrooge.{
[ERROR]        ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/target/generated-sources/thrift/scrooge/com/mediav/data/log/unitedlog/UnitedEvent.scala:1096: not found: type HasThriftStructCodec3
[ERROR]   with HasThriftStructCodec3[UnitedEvent]
[ERROR]        ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/src/main/scala/com/mvad/sessionlog/newSessionlog.scala:44: trait UnitedEvent is abstract; cannot be instantiated
[ERROR]     Try(ThriftUtils.detectAndDeserialize(ueBytes, new UnitedEvent())) match {
[ERROR]                                                   ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/src/main/scala/com/mvad/sessionlog/newSessionlog.scala:45: too many arguments for method apply: (x: A)Some[A] in object Some
[ERROR]       case Success(ue) => Some(ue.getEventType.`type`,ue)
[ERROR]                               ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/target/generated-sources/thrift/scrooge/com/mediav/data/log/unitedlog/AdSlotClickInfo.scala:9: object HasThriftStructCodec3 is not a member of package com.twitter.scrooge
[ERROR] import com.twitter.scrooge.{
[ERROR]        ^
[ERROR] /home/sili/workspace/new-sessionlog-proto/target/generated-sources/thrift/scrooge/com/mediav/data/log/unitedlog/AdSlotClickInfo.scala:363: not found: type HasThriftStructCodec3
[ERROR]   with HasThriftStructCodec3[AdSlotClickInfo]
[ERROR]        ^

### Steps to reproduce the behavior

Add this configuration to my pom.xml then run mvn clean install

    <dependency>
      <groupId>com.twitter</groupId>
      <artifactId>scrooge-core_${scala.binary.version}</artifactId>
      <version>4.6.0</version>
      <exclusions>
        <exclusion>
          <groupId>org.apache.thrift</groupId>
          <artifactId>libthrift</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

Add this plugin configuration.

     <plugin>
        <groupId>com.twitter</groupId>
        <artifactId>scrooge-maven-plugin</artifactId>
        <version>4.12.0</version>
        <configuration>
          <thriftNamespaceMappings>
            <thriftNamespaceMapping>
              <from>com.mediav.data.log.unitedlog</from>
              <to>com.mediav.data.log.unitedlog</to>
            </thriftNamespaceMapping>
          </thriftNamespaceMappings>
          <language>scala</language>
          <buildExtractedThrift>false</buildExtractedThrift>
        </configuration>
        <executions>
          <execution>
            <id>thrift-sources</id>
            <phase>generate-sources</phase>
            <goals>
              <goal>compile</goal>
            </goals>
          </execution>
          <execution>
            <id>thrift-test-sources</id>
            <phase>generate-test-sources</phase>
            <goals>
              <goal>testCompile</goal>
            </goals>
          </execution>
        </executions>
      </plugin>