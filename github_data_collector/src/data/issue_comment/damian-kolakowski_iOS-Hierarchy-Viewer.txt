On our app, connecting the browser to view the hierarchy significantly messes up the layout on iOS 9.1 and 9.2.  I did not notice the problem on iOS 8.4. We make extensive use of autolayout in the app. This was on an iPad 2. Attached are 2 screen shots, one before attaching the browser and one after.  This is using iOS Hierarchy Viewer ver 1.4.7.

![before](https://cloud.githubusercontent.com/assets/5962463/11845737/7e4a30a4-a3d2-11e5-95d6-6960df0c4ecc.jpg)
![after](https://cloud.githubusercontent.com/assets/5962463/11845744/83f73a1a-a3d2-11e5-918b-bced490049c7.jpg)

addObserver UIApplicationDidFinishLaunchingNotification auto start,so don't need [iOSHierarchyViewer start] at applicationDidBecomeActive

A few of the similar commercial tools allow you to rotate the visual representation around to show depth; helping you understand how your views overlap. I think this could be a handy feature for this project too, and would help give the impression that it's a viable alternative.

I haven't looked into your codebase extensively, but I was thinking of giving this a shot (with CSS) if you thought it was a good idea.

Let me know

-a

I added this via CocoaPods to my project and I'm able to bring up the iOS Hierarchy Viewer in my browser but there is no data.  You need to put better instructions on how this works and what we should expect to see. There is mention of an "instructions" section but it is nowhere to be found.  I assume it's the readme but that is inadequate.  I want to like this project but you need to improve the documentation first.

Added automatic start of iOSHierarchyViewer via class HVAutostarter. Now yu don't need to change your project code. Just add libiOSHierarchyViewer_fat.a to project. It automagically finds  NSManagedObjectContext object (which has to be AppDelegate property) or uses obtain from MagicalRecord. 


On building my project I got this error:
Undefined symbols for architecture i386:
  "_OBJC_CLASS_$_NSAttributeDescription", referenced from:
      objc-class-ref in HVCoreDataHandler.o
  "_OBJC_CLASS_$_NSEntityDescription", referenced from:
      objc-class-ref in HVCoreDataHandler.o
  "_OBJC_CLASS_$_NSFetchRequest", referenced from:
      objc-class-ref in HVCoreDataHandler.o
  "_OBJC_CLASS_$_NSRelationshipDescription", referenced from:
      objc-class-ref in HVCoreDataHandler.o
ld: symbol(s) not found for architecture i386
clang: error: linker command failed with exit code 1 (use -v to see invocation)

A stack overflow post pointed out that it's because CoreData framework needs to be added. This should probably be mentioned in the installation notes.

Awesome tool! Guys, thanks for creating this! I just have one question regarding foreign keys.

Let's assume we have two tables: State and City. There is One to Many relationship between State and City: State -> City (State can have zero or more cities; City can belong to exactly one State).

If we look at State table there will be columns: stateId, stateName, cities, however cities field will be empty, even though state has 3 cities. But that is not a problem.

**Problem is this**: In City table there are columns: cityId, cityName, _state_. Even though city is connected to a state, _state_ field is empty. Is there a way to see stateId or something similar in that field?

I get a crash when I first load the viewer in my browser:

```
Hierarchy Viewer[6532:6307] REQUEST HTTP INIT LINE: GET /snapshot?nocache=1353964561487 HTTP/1.1
Hierarchy Viewer[6532:c07] -[UIWindow selectedTextRange]: unrecognized selector sent to instance 0xf36b030
```

```
* thread #1: tid = 0x1c03, 0x0341acaa libobjc.A.dylib`objc_exception_throw, stop reason = breakpoint 10.3
    frame #0: 0x0341acaa libobjc.A.dylib`objc_exception_throw
    frame #1: 0x03735cbd CoreFoundation`-[NSObject doesNotRecognizeSelector:] + 253
    frame #2: 0x0369aed0 CoreFoundation`___forwarding___ + 432
    frame #3: 0x0369acb2 CoreFoundation`_CF_forwarding_prep_0 + 50
    frame #4: 0x0268e6a0 UIKit`-[UIView(UITextSelectionAdditions) _caretRect] + 55
    frame #5: 0x02c496cd Foundation`_NSGetRectValueWithMethod + 64
    frame #6: 0x02bba831 Foundation`_NSGetUsingKeyValueGetter + 116
    frame #7: 0x02bb9c99 Foundation`-[NSObject(NSKeyValueCoding) valueForKey:] + 280
    frame #8: 0x00003e45 My Application`+[HVHierarchyScanner classProperties:object:] + 1889 at HVHierarchyScanner.m:198
    frame #9: 0x00005967 My Application`+[HVHierarchyScanner recursivePropertiesScan:] + 2502 at HVHierarchyScanner.m:387
    frame #10: 0x00005f41 My Application`__39+[HVHierarchyScanner hierarchySnapshot]_block_invoke_0 + 288 at HVHierarchyScanner.m:422
    frame #11: 0x0352f8d9 libdispatch.dylib`_dispatch_barrier_sync_f_slow_invoke + 93
    frame #12: 0x03530509 libdispatch.dylib`_dispatch_main_queue_callback_4CF + 353
    frame #13: 0x0366b803 CoreFoundation`__CFRunLoopRun + 2003
    frame #14: 0x0366ad84 CoreFoundation`CFRunLoopRunSpecific + 212
    frame #15: 0x0366ac9b CoreFoundation`CFRunLoopRunInMode + 123
    frame #16: 0x03b117d8 GraphicsServices`GSEventRunModal + 190
    frame #17: 0x03b1188a GraphicsServices`GSEventRun + 103
    frame #18: 0x0229e626 UIKit`UIApplicationMain + 1163
    frame #19: 0x0001cb4d My Application`main + 157 at main.m:17
    frame #20: 0x0001603d My Application`start + 53
```

Things I have done:
- Tried versions 1.4.5 and 1.4.6
- added `-ObjC -all_load` to my linker flags. (I actually did `-ObjC -force_load <path/to/lib.a>`, which should do the same thing.)
- Removed a library that had JSONKit.m

Running on:
- iPad 5.1 Simulator 
- Mac OS X 10.8.2 
- XCode 4.5.2
- llvm 4.1

This is a fairly large project with a great deal of static libraries, so if this is not an obvious crash, I can try chopping thing off the project to see if it works.

It would be great if releases were tagged, that way I could try to debug this without having to build the library myself.

Am I missing something or is this a bug?

Basically this works perfectly if I don't touch the orientation of my simulator. If I do rotate to landscape, then it appears that no views that are subviews of the root view of the UIWindow will be transformed in the web viewer as evidenced by the image below:

![](http://f.cl.ly/items/2a0s0p2J1d310q3O2e0k/Screen%20Shot%202012-09-03%20at%201.55.45%20AM.png)

Note the yellow it is highlighting is basically the identity transform of the segmented control.

I can provide sample code if needed, but I assume this is self explanatory.
