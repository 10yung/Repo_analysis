Device Xiaomi Redmi 3S
Android 5.1.1 LMY47V with MIUI 7.3.2.0.0(LHPCNDD)
Glide 4.11.0

I am in a list screen that shows objects created and deleted by the user. Each object is assigned an icon (enter Glide) selected by the user from local resources. No networking is involved. The user opens a new screen to create an object and when the user is done they return to the list screen and the object shows on the list. 

Both screens are a fragment inside an activity of their own. (An activity with the list fragment opens an activity with the object creator fragment).  To reproduce the crash I do a series of add/delete operations. The crash always happens after the creation of an object at the return to the list fragment. I include a video of reproducing the crash.

I could reproduce it every time on Redmi 3S. 
On Samsung SM-G355HN after many failed attempts to reproduce it I put the app in background while I was at the list screen and it immediately crashed with the same error. I haven't been able to reproduce that again.

The exception logged is:

```
E/UncaughtException: java.lang.IllegalStateException: Cannot recycle a resource that has already been recycled
        at com.bumptech.glide.load.engine.EngineResource.recycle(EngineResource.java:71)
        at com.bumptech.glide.load.engine.ResourceRecycler$ResourceRecyclerCallback.handleMessage(ResourceRecycler.java:37)
        at android.os.Handler.dispatchMessage(Handler.java:98)
        at android.os.Looper.loop(Looper.java:135)
        at android.app.ActivityThread.main(ActivityThread.java:5287)
        at java.lang.reflect.Method.invoke(Native Method)
        at java.lang.reflect.Method.invoke(Method.java:372)
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:908)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:703)
```

My Glide model class is this :

```
public class MyGlideInput {

    private String packageName, apkFilePath, iconResName;

    public MyGlideInput() {
    }

    @Override
    public boolean equals(@Nullable Object obj) {
        if(obj == null){
            return false;
        }
        if(!(obj instanceof MyGlideInput)){
            return false;
        }
        MyGlideInput input = (MyGlideInput) obj;
        return stringsEqual(packageName, input.packageName ) && stringsEqual(apkFilePath, input.apkFilePath)
                && stringsEqual(iconResName, input.iconResName);
    }

    @Override
    public int hashCode() {
        return (apkFilePath+packageName+iconResName+"").hashCode();
    }

    public boolean stringsEqual(String a, String b){
        return a != null && a.equals(b);
    }

}
```

Inside the RecyclerView adapter class on bindViewHolder I do this:
```
GlideInput glideInput = new GlideInput().setDrawableResName(iconName);
GlideApp.with(img).load(glideInput).dontAnimate().error(R.drawable.warning).into(img);
```
 

My Glide decoder




```
public class GlideInputBitmapDecoder implements ResourceDecoder<GlideInput, Drawable> {


    PackageManager packageManager;

    public GlideInputBitmapDecoder(PackageManager packageManager) {
        this.packageManager = packageManager;
    }

    @Override
    public boolean handles(@NonNull GlideInput source, @NonNull Options options) throws IOException {
        return true;
    }

    @Nullable
    @Override
    public Resource<Drawable> decode(@NonNull GlideInput source, int width, int height, @NonNull Options options) throws IOException {
        Drawable icon = null;
        Context con = MyApplication.context;
        if(source.getPackageName()!=null) {
            try {
                icon = packageManager.getApplicationIcon(source.getPackageName());
            } catch (PackageManager.NameNotFoundException e) {
                e.printStackTrace();
            }
        }
        else if(source.getApkFilePath()!=null){
            Bitmap b = Utils.getIconForApk(packageManager, source.getApkFilePath());
            if(b!=null){
                icon = new BitmapDrawable(con.getResources(), b);
            }
        }
        else if(source.getIconResName()!=null){
            String iconResName = source.getIconResName();
            Bitmap bm = Utils.getIconBitmapFromResName(iconResName, con);
            if(bm!=null) {
                icon = new BitmapDrawable(con.getResources(), bm);
            }
        }
        return new SimpleResource<>(icon);
    }

}
```



Keep in mind that the issue was present in Glide v 4.10.0. 

Same way to reproduce it but with a different exception message which was the following:

```
Attempt to invoke interface method 'int com.bumptech.glide.load.engine.Resource.getSize()' on a null object reference
com.bumptech.glide.load.engine.LockedResource.getSize (LockedResource.java:81)
com.bumptech.glide.load.engine.EngineResource.getSize (EngineResource.java:62)
com.bumptech.glide.load.engine.cache.LruResourceCache.getSize (LruResourceCache.java:40)
com.bumptech.glide.load.engine.cache.LruResourceCache.getSize (LruResourceCache.java:11)
com.bumptech.glide.util.LruCache.trimToSize (LruCache.java:171)
com.bumptech.glide.util.LruCache.evict (LruCache.java:179)
com.bumptech.glide.util.LruCache.put (LruCache.java:134)
com.bumptech.glide.load.engine.cache.LruResourceCache.put (LruResourceCache.java:11)
com.bumptech.glide.load.engine.Engine.onResourceReleased (Engine.java:394)
com.bumptech.glide.load.engine.EngineResource.release (EngineResource.java:116)
com.bumptech.glide.load.engine.Engine.release (Engine.java:362)
com.bumptech.glide.request.SingleRequest.clear (SingleRequest.java:326)
com.bumptech.glide.manager.RequestTracker.clearAndRemove (RequestTracker.java:72)
com.bumptech.glide.RequestManager.untrack (RequestManager.java:663)
com.bumptech.glide.RequestManager.untrackOrDelegate (RequestManager.java:631)
com.bumptech.glide.RequestManager.clear (RequestManager.java:627)
com.bumptech.glide.RequestManager.onDestroy (RequestManager.java:374)
com.bumptech.glide.manager.ActivityFragmentLifecycle.onDestroy (ActivityFragmentLifecycle.java:65)
com.bumptech.glide.manager.SupportRequestManagerFragment.onDestroy (SupportRequestManagerFragment.java:215)
```
[crash_video.zip](https://github.com/bumptech/glide/files/4081604/crash_video.zip)


com/bumptech/glide/manager/DefaultConnectivityMonitor.smali

This class are security risks what is dynamic register receiver.

may be in methond:
.method private register()V invoke-virtual {v0, v1, v2},
Landroid/content/Context;->registerReceiver(Landroid/content/
BroadcastReceiver;Landroid/content/IntentFilter;)Landroid/conte
nt/Intent;

Can you resolve it?
<!-- Make sure you've run `gradlew clean check jar assemble` before commit. -->
<!-- Don't forget that you can always force push to your private branches to make changes. -->
<!-- Please make sure there are no weird commits in the change set by rebasing to latest upstream. -->
<!-- Please squash typo/checkstyle/review fix commits into the base commit. -->

## Description
<!-- Please describe the changes you made on a high level. -->
<!-- Make sure you reference the GitHub issue here if this change is related to one. -->

This PR adds an option to request for ignoring the `EXIF` orientation parsing in `Downsampler`.  

## Motivation and Context
<!-- Why is this change required? What problem does it solve? -->
<!-- If it's fixing a bug reference it or provide repro steps. -->

Addresses: https://github.com/bumptech/glide/issues/665. For some applications (like ours), the application keeps track of the orientation not stored as the EXIF data. 

<!-- If you have any issues feel free to create the PR anyway, we'll help to resolve them. -->
See: https://github.com/gradle/wrapper-validation-action
I use glide to load bitmap, and then get pixel from the bitmap:

```java
private static Bitmap getBitmap(Context context, String path) {
        BitmapFactory.Options opt = new BitmapFactory.Options();
        opt.inJustDecodeBounds = true;
        BitmapFactory.decodeFile(path, opt);
        int ow = opt.outWidth;
        int oh = opt.outHeight;
        int w = Math.round(ow / SAMPLE_SIZE);
        int h = Math.round(oh / SAMPLE_SIZE);
        FutureTarget<Bitmap> feature = Glide.with(context).asBitmap().load(path)
                .apply(new RequestOptions().override(w, h).diskCacheStrategy(DiskCacheStrategy.RESOURCE)).submit();
        try {
            return feature.get();
        } catch (Exception e) {
            return null;
        }
    }
```

But then I got a issue, when first launch(decode from original file), the same location of (x,y)
getPixel(x,y) is not the same with bitmap decode from diskcache,
But when I set DiskCacheStrategy to DiskCacheStrategy.DATA,
getPixel(x,y) return same value.

 I dont understand,why DiskCacheStrategy change pixel of the image file?

When Bitmap or other image is ready, can  I insert the msg at the front of queue on main thread to make the image show immediately? Is there any risk when loading image? Thanks.

EngineJob.java
```
Message msg = MAIN_THREAD_HANDLER.obtainMessage(MSG_COMPLETE, this);
MAIN_THREAD_HANDLER.sendMessageAtFrontOfQueue(msg);
```

I need to use internationalization in my project,So I created new drawable-zh-hdpi, drawable-en-hdpi folders and put the corresponding pictures. I used Glid.with (context) .load (R.drawable.xxx) .into (img), but I couldn't Achieve international effects,However, if I use the native method, img.setImageResource (id) can achieve internationalization
<!--
Please fill in the below fields with some data to help us best diagnose the issue.
The more specific you are, the better! You can help a lot by not making us ask these questions.
Feel free to remove any irrelevant parts that you know are not related to the issue.
Any HTML comment like this will be stripped when rendering markdown, no need to delete them.
-->


<!-- What version of Glide you're running, for example: 3.7.1 | 3.8.0-SNAPSHOT | 4.0.0-SNAPSHOT
It's essentially the version number from your build.gradle: `dependencies { compile '...:x.y.z' }` -->
**Glide Version**:  4.10.0

<!-- Do you use any integration library, like OkHttp3 or Volley? For example:
Fails to display with stock networking, but works with okhttp3-1.4.0 -->
**Integration libraries**: using file path

<!-- What devices you managed to get the issue to come up on? For example:
fails on Galaxy S4/GT-I9500 4.4.2, works fine on Nexus 6P 5.1 and Genymotion Nexus 5 5.0.1 -->
**Device/Android Version**: Nokia 6.1 plus / 10 

<!-- Share the details of your issue in prose, detailing actual and expected behavior. It also helps if you give some info **why** you are trying to do something as opposed to **what** is not working. -->
**Issue details / Repro steps / Use case background**: 

<!-- How do you use Glide?
Make sure you include everything as is in your app's code:
Changing a single method parameter can yield totally different results.
Please clarify any magic variables that appear in the code, for example: "// `this` is a Fragment"
-->
**Glide load line / `GlideModule` (if any) / list Adapter code (if any)**:
```java
Glide.with(activity).load(string.get(position).toString())
                .placeholder(R.drawable.slider_bg)
                .into(touchImageView);
```

<!-- How does your app look like?
We're most interested in the layout attributes and the hierarchy around the ImageView -->
**Layout XML**:
```xml
<xxx.xxx.xxxx.xxx.TouchImageView
        android:id="@+id/imageView_image_show_adapter"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:src="@drawable/slider_bg" />
```
extend `ImageView`

<!--
What is the error message that you got in the log?
You can find some help on diagnosing issues here: https://github.com/bumptech/glide/wiki/Debugging-and-Error-Handling
-->
**Stack trace / LogCat**:
```ruby
using dark theme automatically change image color. but without dark theme image show proper format
```

<!-- Bonus points if you attach a relevant screenshot, screen recording or a small demo project -->

<!--
Please fill in the below fields with some data to help us best diagnose the issue.
The more specific you are, the better! You can help a lot by not making us ask these questions.
Feel free to remove any irrelevant parts that you know are not related to the issue.
Any HTML comment like this will be stripped when rendering markdown, no need to delete them.
-->


<!-- What version of Glide you're running, for example: 3.7.1 | 3.8.0-SNAPSHOT | 4.0.0-SNAPSHOT
It's essentially the version number from your build.gradle: `dependencies { compile '...:x.y.z' }` -->
**Glide Version**:

<!-- Do you use any integration library, like OkHttp3 or Volley? For example:
Fails to display with stock networking, but works with okhttp3-1.4.0 -->
**Integration libraries**:

<!-- What devices you managed to get the issue to come up on? For example:
fails on Galaxy S4/GT-I9500 4.4.2, works fine on Nexus 6P 5.1 and Genymotion Nexus 5 5.0.1 -->
**Device/Android Version**:

<!-- Share the details of your issue in prose, detailing actual and expected behavior. It also helps if you give some info **why** you are trying to do something as opposed to **what** is not working. -->
**Issue details / Repro steps / Use case background**: 

<!-- How do you use Glide?
Make sure you include everything as is in your app's code:
Changing a single method parameter can yield totally different results.
Please clarify any magic variables that appear in the code, for example: "// `this` is a Fragment"
-->
**Glide load line / `GlideModule` (if any) / list Adapter code (if any)**:
```java
Glide.with...
```

<!-- How does your app look like?
We're most interested in the layout attributes and the hierarchy around the ImageView -->
**Layout XML**:
```xml
<FrameLayout xmlns:android="...
```

<!--
What is the error message that you got in the log?
You can find some help on diagnosing issues here: https://github.com/bumptech/glide/wiki/Debugging-and-Error-Handling
-->
**Stack trace / LogCat**:
```ruby
paste stack trace and/or log here
```

<!-- Bonus points if you attach a relevant screenshot, screen recording or a small demo project -->

I use Glide to load image. Here is my code:

```
 Glide.with(mContext)
                .asBitmap()
                .load(object)
                .override(1080, 1920)
                .apply(requestOptions)
                .into(new CustomTarget<Bitmap>() {
                    @Override
                    public void onResourceReady(@NonNull Bitmap resource, @Nullable Transition<? super Bitmap> transition) {
                    }

                    @Override
                    public void onLoadCleared(@Nullable Drawable placeholder) {
                    }

                    @Override
                    public void onLoadFailed(@Nullable Drawable errorDrawable) {
                        super.onLoadFailed(errorDrawable);

                    }
                });
```

I see that if the first i select an error image(size =0) then select a normal image, Glide always jump to onLoadFailed and onResourceReady. This issue is always for many device in glide 4.9, 4.10 and have been raise to Glide https://github.com/bumptech/glide/issues/3866 but not resolved.