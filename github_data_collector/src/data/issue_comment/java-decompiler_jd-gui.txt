When opening the JD-GUI with jar which located on the network (without map drive)
e.g.
\\machine\folder\test.jar
(using double-click on the jar or dragging jar into the JD-GUI)
then, the JD-GUI failed to show the decomplied classes.
this issue began since version 1.4.2 (it working ok with version 1.4.1) 
such as classname.method   classname.field
Hi,
I think it would be great (at least for those who like me do not have installed an official Oracle JDK VM) to be able to setup the default JDK we'd like to use it for running JD-GUI. For example would be great if we can save a path of our desired JDK in the .cfg file and then be used by the app for running it.
Best, congrats for such a great tool and have a happy 2020 🥂! ,
This is a Java port of Jianhua Feng's earlier Groovy-based PR (https://github.com/java-decompiler/jd-gui/pull/180)
java -Xms1024m -Xmx1024m   -jar  .\jd-gui-1.6.6.jar
Java HotSpot(TM) 64-Bit Server VM

Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
        at org.jd.gui.service.treenode.AbstractTypeFileTreeNodeFactoryProvider$FileTreeNode.populateTreeNode(AbstractTypeFileTreeNodeFactoryProvider.java:96)
        at org.jd.gui.view.component.panel.TreeTabbedPanel$2.treeExpanded(TreeTabbedPanel.java:69)
        at javax.swing.JTree.fireTreeExpanded(Unknown Source)
        at javax.swing.JTree.setExpandedState(Unknown Source)
        at javax.swing.JTree.expandPath(Unknown Source)
        at javax.swing.plaf.basic.BasicTreeUI.toggleExpandState(Unknown Source)
        at javax.swing.plaf.basic.BasicTreeUI.selectPathForEvent(Unknown Source)
        at javax.swing.plaf.basic.BasicTreeUI$Handler.handleSelection(Unknown Source)
        at javax.swing.plaf.basic.BasicTreeUI$Handler.mousePressed(Unknown Source)
        at java.awt.AWTEventMulticaster.mousePressed(Unknown Source)
        at java.awt.Component.processMouseEvent(Unknown Source)
        at javax.swing.JComponent.processMouseEvent(Unknown Source)
        at java.awt.Component.processEvent(Unknown Source)
        at java.awt.Container.processEvent(Unknown Source)
        at java.awt.Component.dispatchEventImpl(Unknown Source)
        at java.awt.Container.dispatchEventImpl(Unknown Source)
        at java.awt.Component.dispatchEvent(Unknown Source)
        at java.awt.LightweightDispatcher.retargetMouseEvent(Unknown Source)
        at java.awt.LightweightDispatcher.processMouseEvent(Unknown Source)
        at java.awt.LightweightDispatcher.dispatchEvent(Unknown Source)
        at java.awt.Container.dispatchEventImpl(Unknown Source)
        at java.awt.Window.dispatchEventImpl(Unknown Source)
        at java.awt.Component.dispatchEvent(Unknown Source)
        at java.awt.EventQueue.dispatchEventImpl(Unknown Source)
        at java.awt.EventQueue.access$500(Unknown Source)
        at java.awt.EventQueue$3.run(Unknown Source)
        at java.awt.EventQueue$3.run(Unknown Source)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)
        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)
        at java.awt.EventQueue$4.run(Unknown Source)
        at java.awt.EventQueue$4.run(Unknown Source)
        at java.security.AccessController.doPrivileged(Native Method)
        at java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(Unknown Source)
        at java.awt.EventQueue.dispatchEvent(Unknown Source)
        at java.awt.EventDispatchThread.pumpOneEventForFilters(Unknown Source)
        at java.awt.EventDispatchThread.pumpEventsForFilter(Unknown Source)
        at java.awt.EventDispatchThread.pumpEventsForHierarchy(Unknown Source)
        at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
        at java.awt.EventDispatchThread.pumpEvents(Unknown Source)
        at java.awt.EventDispatchThread.run(Unknown Source)
I just want to keep my jd-gui.config in a dotfile in like `.config/` or something so it isnt showing up.

`java -Djd-gui.cfg=~/.jd-gui.cfg -jar ~/bin/jd-gui-1.6.6.jar` doesn't work

```
>uname -a
Linux 5.0.0-1030-oem-osp1 #34-Ubuntu SMP Tue Nov 19 10:30:25 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
>java --version
openjdk version "13.0.1" 2019-10-15
OpenJDK Runtime Environment (build 13.0.1+9)
OpenJDK 64-Bit Server VM (build 13.0.1+9, mixed mode, sharing)
>javac --version
javac 13.0.1
```
JD-GUI version: 1.6.5
JD-Core version: 1.1.12

Hi, thank you for working on jd-gui! I'm encountering a NullPointerException when I try to load a class file:
<details>
>java -jar ~/downloads/jd-gui-1.6.5.jar /tmp/main.class
Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
        at org.jd.gui.service.treenode.DirectoryTreeNodeFactoryProvider.make(DirectoryTreeNodeFactoryProvider.java:38)
        at org.jd.gui.service.mainpanel.ContainerPanelFactoryProvider$ContainerPanel.<init>(ContainerPanelFactoryProvider.java:59)
        at org.jd.gui.service.mainpanel.ContainerPanelFactoryProvider.make(ContainerPanelFactoryProvider.java:43)
        at org.jd.gui.service.fileloader.AbstractFileLoaderProvider.load(AbstractFileLoaderProvider.java:41)
        at org.jd.gui.service.fileloader.AbstractTypeFileLoaderProvider.load(AbstractTypeFileLoaderProvider.java:49)
        at org.jd.gui.service.fileloader.ClassFileLoaderProvider.load(ClassFileLoaderProvider.java:36)
        at org.jd.gui.service.uriloader.FileUriLoaderProvider.load(FileUriLoaderProvider.java:28)
        at org.jd.gui.controller.MainController.openURI(MainController.java:558)
        at org.jd.gui.controller.MainController.openFiles(MainController.java:455)
        at org.jd.gui.controller.MainController.lambda$show$28(MainController.java:125)
        at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
        at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:770)
        at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
        at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
        at java.base/java.security.AccessController.doPrivileged(AccessController.java:391)
        at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
        at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:740)
        at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
        at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
        at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
        at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
        at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
        at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
</details>
It also happens when try to load the class file through the GUI:
<details>
Exception in thread "AWT-EventQueue-0" java.lang.NullPointerException
        at org.jd.gui.service.treenode.DirectoryTreeNodeFactoryProvider.make(DirectoryTreeNodeFactoryProvider.java:38)
        at org.jd.gui.service.mainpanel.ContainerPanelFactoryProvider$ContainerPanel.<init>(ContainerPanelFactoryProvider.java:59)
        at org.jd.gui.service.mainpanel.ContainerPanelFactoryProvider.make(ContainerPanelFactoryProvider.java:43)
        at org.jd.gui.service.fileloader.AbstractFileLoaderProvider.load(AbstractFileLoaderProvider.java:41)
        at org.jd.gui.service.fileloader.AbstractTypeFileLoaderProvider.load(AbstractTypeFileLoaderProvider.java:49)
        at org.jd.gui.service.fileloader.ClassFileLoaderProvider.load(ClassFileLoaderProvider.java:36)
        at org.jd.gui.service.uriloader.FileUriLoaderProvider.load(FileUriLoaderProvider.java:28)
        at org.jd.gui.controller.MainController.openURI(MainController.java:558)
        at org.jd.gui.controller.MainController.openFiles(MainController.java:455)
        at org.jd.gui.controller.MainController.openFile(MainController.java:434)
        at org.jd.gui.controller.MainController.onOpen(MainController.java:200)
        at org.jd.gui.controller.MainController.lambda$null$0(MainController.java:88)
        at org.jd.gui.util.swing.SwingUtil$1.actionPerformed(SwingUtil.java:158)
        at java.desktop/javax.swing.AbstractButton.fireActionPerformed(AbstractButton.java:1967)
        at java.desktop/javax.swing.AbstractButton$Handler.actionPerformed(AbstractButton.java:2308)
        at java.desktop/javax.swing.DefaultButtonModel.fireActionPerformed(DefaultButtonModel.java:405)
        at java.desktop/javax.swing.DefaultButtonModel.setPressed(DefaultButtonModel.java:262)
        at java.desktop/javax.swing.AbstractButton.doClick(AbstractButton.java:369)
        at java.desktop/javax.swing.AbstractButton.doClick(AbstractButton.java:349)
        at java.desktop/javax.swing.plaf.basic.BasicMenuItemUI$Actions.actionPerformed(BasicMenuItemUI.java:975)
        at java.desktop/javax.swing.SwingUtilities.notifyAction(SwingUtilities.java:1810)
        at java.desktop/javax.swing.JComponent.processKeyBinding(JComponent.java:2900)
        at java.desktop/javax.swing.JMenuBar.processBindingForKeyStrokeRecursive(JMenuBar.java:699)
        at java.desktop/javax.swing.JMenuBar.processBindingForKeyStrokeRecursive(JMenuBar.java:706)
        at java.desktop/javax.swing.JMenuBar.processBindingForKeyStrokeRecursive(JMenuBar.java:706)
        at java.desktop/javax.swing.JMenuBar.processKeyBinding(JMenuBar.java:677)
        at java.desktop/javax.swing.KeyboardManager.fireBinding(KeyboardManager.java:311)
        at java.desktop/javax.swing.KeyboardManager.fireKeyboardAction(KeyboardManager.java:297)
        at java.desktop/javax.swing.JComponent.processKeyBindingsForAllComponents(JComponent.java:2993)
        at java.desktop/javax.swing.JComponent.processKeyBindings(JComponent.java:2985)
        at java.desktop/javax.swing.JComponent.processKeyEvent(JComponent.java:2862)
        at java.desktop/java.awt.Component.processEvent(Component.java:6413)
        at java.desktop/java.awt.Container.processEvent(Container.java:2263)
        at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:5012)
        at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
        at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
        at java.desktop/java.awt.KeyboardFocusManager.redispatchEvent(KeyboardFocusManager.java:1950)
        at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchKeyEvent(DefaultKeyboardFocusManager.java:870)
        at java.desktop/java.awt.DefaultKeyboardFocusManager.preDispatchKeyEvent(DefaultKeyboardFocusManager.java:1139)
        at java.desktop/java.awt.DefaultKeyboardFocusManager.typeAheadAssertions(DefaultKeyboardFocusManager.java:1009)
        at java.desktop/java.awt.DefaultKeyboardFocusManager.dispatchEvent(DefaultKeyboardFocusManager.java:835)
        at java.desktop/java.awt.Component.dispatchEventImpl(Component.java:4893)
        at java.desktop/java.awt.Container.dispatchEventImpl(Container.java:2321)
        at java.desktop/java.awt.Window.dispatchEventImpl(Window.java:2762)
        at java.desktop/java.awt.Component.dispatchEvent(Component.java:4844)
        at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:772)
        at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
        at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:715)
        at java.base/java.security.AccessController.doPrivileged(AccessController.java:391)
        at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
        at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:95)
        at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:745)
        at java.desktop/java.awt.EventQueue$5.run(EventQueue.java:743)
        at java.base/java.security.AccessController.doPrivileged(AccessController.java:391)
        at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
        at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:742)
        at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
        at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
        at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
        at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
        at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
        at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
</details>

The class file was just compiled from the following source code:
```java
class main {
        public static void main(String args[]) {
        }
}
```

You can download the class file here: [main.zip](https://github.com/java-decompiler/jd-gui/files/3987490/main.zip)
Some jars have text config files, such as xml/yml/properties/json files. jd-gui use system encoding while opening those files. But some times, another chaset is needed. For example, most jars are  compiled、packaged with charset 'UTF-8', but user system encoding may be another charset, it is very common for Asian users.
Proposed quick fix for https://github.com/java-decompiler/jd-gui/issues/277.
Ignore tabs with empty paths in TabbedPane.showPage(URI) method.
If JD GUI has some tabs with empty path (not bound to real files - e.g. tabs created from the clipboard), then they will prevent navigating to the right tab while clicking on the type link.

Test case:
0. Start JD-GUI.
1. Open rt.jar from JDK in JD-GUI.
2. Copy following text and paste it into JD-GUI - this should create new tab (e.g. 'clipboard-1.log') with such text:
`` at java.lang.String.equals(String.class)
3. Click on 'java.lang.String.equals' link in this newly created tab.
ER: JD-GUI is navigated to the 'java/lang/String' class and 'equals' method in 'rt.jar' tab.
AR: JD-GUI stays at the current tab ('clipboard-1.log') or navigates to the last tab created from clipboard instead of navigating to 'rt.jar'.

The problem seems to be related to the method TabbedPanel.showPage - it iterates through all existing tabs, checking whether tab path is at the beginning of the resolved URL path. However, tabs created from the clipboard have empty path, so they always match this check.