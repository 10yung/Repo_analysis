**Feature description**
Relation-related constraint properties cannot be edited at all.
Adding/Editing comments should be allowed.

**Additional info**
Comments on FK constraints are required to enable advanced features of PostGraphile for example.
â€¦ected.
RFC or merge + finish #1321
**Bug description**
When creating an export of the model, all `ALTER X OWNER TO Y` calls are now comments and uneffective in setting the owner of the entity.

**How to reproduce**
Export a model.

**Expected behavior**
The owner is still set as with 0.9.2-beta2 and earlier versions.

**Bug description**
pgModeler consistently crashes when diff tool tries to generate a migration for a table that has an RLS policy applied.

Note: If the remote database doesn't have any policy applied, the diff tool is able to generate the migration and then apply it.

**How to reproduce**
1. Download [bug.zip](https://github.com/pgmodeler/pgmodeler/files/4053120/bug.zip)
 and then extract bug.dbm.
2. Open the model file, import the model in Postgres using the Export tool.
3. Run diff tool (even w/o changing the schema). It will consistently crash.

**Expected behavior**
Diff tool generates the migration script and applies it.

**Screenshots**

<img width="695" alt="pgModeler-diff-crash" src="https://user-images.githubusercontent.com/1618005/72246714-a5033f80-35f3-11ea-9c8f-dc79d08e68a6.png">

The screenshot has been taken before pgModeler quits unexpectedly (no error codes).

**Info about your desktop**
 - OS: Windows
 - Version: 10.0.18363 Build 18363
 - pgModeler version: 0.9.2 (build 20200106)
 - Qt version: Qt 5.13.2

"Defualt values" should be "Default values"
Been trying this with the docs, but without success so far.

How would you define a EXCLUDE constraint as included in the PostgreSQL docs here:
https://www.postgresql.org/docs/11/rangetypes.html

```
CREATE EXTENSION btree_gist;
CREATE TABLE room_reservation (
    room text,
    during tsrange,
    EXCLUDE USING GIST (room WITH =, during WITH &&)
);
```

Can this (only) be done by using "Expression"?
**Bug description**
There's no text.

**How to reproduce**
Worked fine in all pre-released of 0.9.2, now the final is broken.

**Expected behavior**
Text in the boxes.

**Screenshots**
![image](https://user-images.githubusercontent.com/1658949/71971539-1cf3f300-320b-11ea-8c2b-12224e4b503c.png)

**Info about your desktop**
 - OS: Windows
 - Version: 10
 - Window manager: Explorer
 - pgModeler version: 0.9.2
 - Qt version:

**Additional info**
pgModeler should really try to break this tradition of having major breaking issues in the final release after months of stable pre-releases. I don't understand why this has been happening for years ðŸ˜¥ Is the problem using the pre-releases in the first place and messing up the local configurations? I keep running into this and it's super frustrating to have to roll back, because the Windows installer also refuses to operate if the previous version isn't uninstalled manually yet.
What do you think of a self-hosted / [OVH](https://www.ovh.com) PgModeler build farm, on a linux host with [gitlab Continuous Integration](https://about.gitlab.com/product/continuous-integration/) :
- *nix builds - bare containers
- [virtualbox](https://www.virtualbox.org/) windows - windows containers
- macOS - owned-apple-hardware/[macstadium containers](https://about.gitlab.com/blog/2017/05/15/how-to-use-macstadium-and-gitlab-ci-to-build-your-macos-or-ios-projects/)

Each platform could have as many [docker](https://www.docker.com/) containers as supported Qt versions.

Build, test-suite run and deployment status could be displayed on github repo with proper [shields](https://shields.io), or queried for a commit via an API.

@rkhaotix could automate the release packaging there too.

I do not see why this couldn't be [community-funded](https://www.gofundme.com/).

**Feature description**
PR #1372 fails currently and I researched a bit about what QT itself might log etc. and came across `qtlogging.ini`. While that is not of help for my concrete problem, having mechanisms to log is always of benefit in my opinion and should be documented or at least some examples shipped so that people know there's something available they can look at. Tracing pgModeler with Process Monitor shows that QT looks at the following directories by default for `qtlogging.ini` in the following order:

    C:\Users\tschoening\AppData\Local\QtProject\qtlogging.ini
    C:\ProgramData\QtProject\qtlogging.ini
    C:\Program Files\pgModeler\QtProject\qtlogging.ini
    C:\Program Files\pgModeler\data\QtProject\qtlogging.ini

It's most likely that especially the last two directories are the same on all platforms, so how about shipping such a file?

I've created one with the following lines only and got a lot of output for `pgmodeler-cli.exe` on the shell:

    [Rules]
    *.debug=true

Not sure whats possible additionally, but it might be a start.

https://doc.qt.io/qt-5/qloggingcategory.html