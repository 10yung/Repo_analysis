For #288 
I would like to propose to make use of Composer's ca-bundle package (https://github.com/composer/ca-bundle). Integrating this packages could make it a lot easier to support SSL/HTTPS. Just like @tbar0970 and @bgaillard in #200 I wasted an hour to figure out why my API call wasn't working and, just like them, it turned out I hadn't configured curl properly. 

Since I am not the first, and probably not the last, integrating this package sounds useful to me.
My understanding is to use the Add Product API first, then initiate the Create Member API before joining the shopping cart, and then execute the Add Shopping Cart API, is this correct?
It would be nice to have an method like `isSubscribed` which would have 2 arguments `$listId` and `$subscriberHash` and would return only `boolean`.

`public function isSubscribed(int $listId, string $subscriberHash): bool`
The Batch->check_status() method might timeout, but its arguments list doesn't allow to set the `$timeout` value.

I'd like to add the argument `$timeout = MailChimp::TIMEOUT` to `check_status()`
This is a handy & opt-in error-handler.

Based on my past MailChimp experiences I found there are many ways a MailChimp request can fail, and many try rightfully to handle them over and over again.

This error handler classifies a couple of failures and should help programmers to simplify their own error-handling routines.
Since, 99%  error-handlers also implement some logging alongside (which can hardly be extracted out of the error-handling itself),  some logging capability are provided (and try to play nice with user not providing a `\Psr\Log\LoggerInterface`).

PR related to errors:  #165, #236, #239, #275 
I need sent in 1 api call multiple emails.

[This example from mailChimp documentation](https://developer.mailchimp.com/documentation/mailchimp/reference/lists/#create-post_lists_list_id)
```
curl --request POST \
--url 'https://usX.api.mailchimp.com/3.0/lists/205d96e6b4' \
--user 'anystring:apikey' \
--header 'content-type: application/json' \
--data '{"members": [{"email_address": "urist.mcvankab@freddiesjokes.com", "status": "subscribed"}, {"email_address": "urist.mcvankab+1@freddiesjokes.com", "status": "subscribed"}, {"email_address": "urist.mcvankab+2@freddiesjokes.com", "status_if_new": "subscribed"}], "update_existing": true}' \
--include
```

How can I use that library to pass multiple emails?

Add function to check if mailchimp api key was set e.g.:

```php
$mailChimp = new MailChimp(get_env('MAILCHIMP_API_KEY'));

if (!$mailChimp->hasApiKey()) {
     // do nothing when no api key was set
     return;
}

$mailChimp->...
```

most use case if you register MailChimp class in dependency injection container so you avoid to inject also the api key to all services to check if its really needed.
I am try to get merge fields, but I am unable to guess the exact syntax, if this i capable of getting merge-fields.  Code is like:

include ("./MailChimp.php");

$list_id = $_POST['list_id'];
$api_key = "***mykey***";

use \DrewM\MailChimp\MailChimp;
$MailChimp = new MailChimp($api_key);
$response = $MailChimp->get('lists/$list_id/merge-fields');
print_r($response);

I have also tried:
$response = $MailChimp->get('lists/merge-fields', $list_id);
and
$response = $MailChimp->get('merge-fields', $list_id);
and a whole bunch of other combinations, but everything produces:

Array
(
    [type] => http://developer.mailchimp.com/documentation/mailchimp/guides/error-glossary/
    [title] => Resource Not Found
    [status] => 404
    [detail] => Invalid path
    [instance] => 8543a2f4-7f70-4ede-aada-00cf0621e443
)

I am able to get list information, so I have the basics working.  I don't see any merge-fields when using:
$response = $MailChimp->get('lists', $list_id);

which does return the details on any specific list.  I originally thought that this GET would show the merge-fields, but they are not included in the array.

Thanks