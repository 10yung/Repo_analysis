内存写入改为持久化读取 进行oom防治
如果filePath对应路径图片不存在，创建Bitmap可能为空
类org.kymjs.kjframe.http.HttpCallBack和org.kymjs.kjframe.http.KJHttpResponse中对http响应header的处理使用的是Map，而http响应header的名字是可以重复的，比如有多个Set-Cookie，服务器下发多个cookie，例如附件中访问git.oschina.net后下发了四个Set-Cookie
![qq 20170108141037](https://cloud.githubusercontent.com/assets/758077/21747758/38039050-d5ad-11e6-97e2-259a55628f15.png)

![image](https://cloud.githubusercontent.com/assets/19984894/18260885/be5b75b8-7424-11e6-9b09-b9244b57d269.png)
再调用super.onCreate方法之前setContentView 在布局中包含静态fragment的时候会报空指针的问题
将super.onCreate放到第一行执行就不会出现

https://github.com/kymjs/KJFrameForAndroid/blob/master/KJFrame/kjframe/src/main/java/org/kymjs/kjframe/KJDB.java#L826
这里调用 dropDb() 方法，而方法里的
`Cursor cursor = db.rawQuery(
                "SELECT name FROM sqlite_master WHERE type ='table'", null);` 
db 这会儿还是null,会有异常

HttpConfig httpconfig = new HttpConfig();
httpconfig.cacheTime = 0;
httpconfig.TIMEOUT=1000;
KJHttp kjh = new KJHttp(httpconfig);
HttpParams params = new HttpParams();
params.putJsonParams(MerchanDetailEditMerchantPictureJson.Create(shop_id, merchantId, base64Data));
httpconfig.TIMEOUT这个参数应该设置的超时连接吧。要是是的话。它的单位是s还是ms。

就它是大文件上传吧，这个功能还没有。
博主能否在put内容为file的时候，优先判断freeMemory的占有量然后再进行分片写入流操作。
如果直接把文件流转换为byte数据就有可能outOfMemory


package org.kymjs.kjframe.http;
Network.java
105行应该为
throw new KJHttpException("auth error",networkResponse);
目前代码中错误的：throw new KJHttpException("auth error");

我看了下你的KJHttp这个类的实现，当这个类实例化的时候，启动了两个线程，一个是去读取`cacheQueue`来做分发，另一个去读取networkQueue来做分发，NetworkDispatcher没有问题，请求完成之后，判断这个请求是否已经被标记为delivered，因为有可能这个请求已经在cacheQueue中被处理了。但是反过来，CacheDispatcher并没有类似的处理，一般情况下，当然CacheDispatcher处理要比NetworkDispatcher要快，所以不用这个也问题不大，但是是否存在某些特殊情况，导致CacheDispatcher处理慢于NetworkDispatcher，这种情况下，是否会出现两次请求返回？
