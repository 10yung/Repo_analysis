When I specify 1.8.3 as my dependency in a podspec file, `pod install` give me the following error:

```
[!] Unable to determine Swift version for the following pods:

- `PinLayout` does not specify a Swift version and none of the targets (`XXX_Example`) integrating it have the `SWIFT_VERSION` attribute set. Please contact the author or set the `SWIFT_VERSION` attribute in at least one of the targets that integrate this pod.
```

Since we just remove version range in last [release](https://github.com/layoutBox/PinLayout/commit/b1b2583fadc851051587c8aef9cc084301f31999).

Can we keep the version setting using something like [version range](https://github.com/groue/GRDB.swift/issues/410)?

Thanks.
How can I cover the AutoLayout like below to PinLayout.

```
let view1 = UIView()
let view2 = UIView()
addSubview(view1)
addSubview(view2)
        
view1.centerXAnchor.constraint(equalTo: view2.centerYAnchor, constant: -20)
view1.widthAnchor.constraint(equalTo: view2.widthAnchor, constant: -20)
```
I have a 1-line label that I need to size. I'd like it to be sized smaller if the text doesn't take up the allowed width, so I use .sizeToFit(.widthFlexible). However, this will give the label its full size, causing it not to truncate.

Is this the expected behavior? I would have expected the label to be sized smaller if possible, but still not overflow its allowed size.

```swift
let label = UILabel()
label.text = "blah blah blah blah"
label.pin.top().horizontally(20).sizeToFit(.widthFlexible)  
// label is sized beyond (superview.width - 2*20)
```

It looks like in [computeSizeToFit](https://github.com/layoutBox/PinLayout/blob/21a657a64bbcf1921b0740342bccd79a16001815/Sources/Impl/PinLayout%2BLayouting.swift#L274), the following line:

```swift
size.width = adjustSizeType.isFlexible ? sizeThatFits.width : fitWidth
```

could instead be:

```swift
size.width = adjustSizeType.isFlexible ? min(fitWidth, sizeThatFits.width) : fitWidth
```

(and the same for height).

Is this the intended behavior? Or am I misunderstanding how .widthFlexible is meant to be used?

Let me start by saying that PinLayout is a fantastic framework, thanks for working so hard on it!

Would it be possible to remove the argument names from the relative edge layout functions? Currently the English for most of them is incorrect. For example, `left(of: )` and `right(of: ) ` are perfect but the use of "of" in each function call in the first usage example,

`view.pin.after(of: view4).before(of: view1).below(of: view3)`

is grammatically incorrect.

Just a thought for readability. Thanks again for the existing work on this library!
Just came across an unexpected behaviour.

Lets says i have a view with 3 subviews that i layout side by side. if i hide one of the views, wrapContent on the parent view does not skip the hidden View so the parent ends up being too wide. 

I was wondering if adding the following at the beginning of the wrapContent method would be desirable:

```
let subviews = view.subviews.filter { (view) -> Bool in
            return view.isVisible
        }
```
It requires adding `isVisible` to the `Layoutable` protocol which is fairly easy

Thanks !
I have a UIScrollView which contains some subviews, I'm puzzled when I want to use these views to determine the scrollview's contentSize and frame size.
For example, when subviews' width is more than screen's width, I want to change the scrollView's width to screen's width and the contentSize.width to the subview's total width.
But now, I use below method to achieve this.
`tagScrollView.pin.below(of: likeButton).marginTop(10)
                             .left(StatusTableViewCellHorizentalSpacing)
                             .right()
                             .height(of: tagScrollViewContentView)
                             .maxWidth(Constants.screenWidth - StatusTableViewCellHorizentalSpacing)
   tagScrollView.contentSize = tagScrollViewContentView.size`
Hi,

Can you provide methods chaining in Objective C as it is available in Swift. 
So I have a simple text defined as follows:

```
self.descriptionCustom = UILabel().then {
                $0.text = descriptionLabel.text
                $0.textColor = .white
                $0.numberOfLines = 5
                $0.font = UIFont(name: "Rubik-Regular", size: 14.0)
                $0.baselineAdjustment = .none
                $0.textAlignment = .left
                
                self.scrollView.addSubview($0)
            }
            
   descriptionCustom.pin.left(8).width(UIScreen.main.bounds.size.width-50).height(90%).top(0)
```

And this UILabel text changes dynamically, the problem is that the top of the UILabel changes position (either higher or lower) depending on the height of the text, while I want it Pinned (no pun intented) on the same spot and just to adjust its height vertically.

Is there a property I should be using or some special syntax?

Thanks!
Hi! Could not add the possibility of changing views at once for the whole group, as `Stack View`. 

I'm tired of trying to sort through all possible combinations of methods in the `FlexLayout`. 
The task is simple at first glance:

<img width="347" alt="2018-06-07 16 17 58" src="https://user-images.githubusercontent.com/7115804/41102216-05032762-6a6f-11e8-8385-f74679cf586b.png">

As a result, I again returned to a clean `PinLayout`.

It would be great to add views to the main view and write the following code:

``` swift
cardView.add(bigTitle, blurView)
blurView.contentView.add(price, textView)
textView.add(title, subtitle)

card.pin.stack(axis: .vertical, alignment: .fill, distribution: .equalSpacing) {
  bigTitle.pin.inset(20).sizeToFit(.width, .heightFlexible).maxHeight(50%)
  blurView.stack(axis: .horizontal, alignment: .center, distribution: .equalSpacing, spacing: 4, inset: 20) {
    price.pin.height(28).maxWidth(50%).sizeToFit(.widthFlexible).priority(.highest)
    textView.pin.stack(axis: .vertical, alignment: .fill, distribution: .fillEqually, spacing: 2)
  }
}
```

