
Add vim editor configuration for [coc](https://github.com/neoclide/coc.nvim).
See [this post](https://forums.swift.org/t/sourcekit-lsp-for-other-build-systems/27109/19), namely `workspace/dependenciesUpdated`
Co-Authored-By: Ben Langmuir <blangmuir@apple.com>

Motivation:

SwiftNIO offers a lot of functionality that can be used to make the
sourcekit-lsp code more straightforward and more testable.

Modifications:

Replace DispatchIO with SwiftNIO, specifically NIO's PipeChannel which
allows two UNIX pipes / terminals / ... to be used as the input/output
file descriptors for a Channel.

Result:

More straightforward code.
Instead the `BuildSystem` should inform its delegate of changes to build settings via `fileBuildSettingsChanged`
Tasks are based on `swift package describe --type json` which will filter all three target types
also it can have multiple Executable Tasks based on Package desc.


![Screenshot from 2019-09-16 19-25-24](https://user-images.githubusercontent.com/16605023/64968013-15f14f80-d8bf-11e9-9b04-8de01f88fee8.png)


This patch adds support for the XPC transport layer that is used by ClangdXPC.framework.

A couple of notes:
- A lot of code between the JSON and XPC connection is the same. I think it might be possible to share it by using a common base class / protocol. @benlangmuir, WDYT?
- Tested locally, but swift-ci doesn't build the XPC framework yet, so it won't be tested in CI. I'll have to fix that too.
- Changes on `firstIndex` to use Boyer-Moore-Horspool algorithm [swift-algorithm-club](https://github.com/raywenderlich/swift-algorithm-club/tree/master/Boyer-Moore-Horspool) used as a reference.
[Still WIP]

**Screenshot (VSCode):**

<img width="611" alt="screen shot 2018-11-26 at 9 59 06 pm" src="https://user-images.githubusercontent.com/1573717/49041809-8dd27a00-f1c6-11e8-94f6-6cf9c7083dba.png">

This PR adds support for the `textDocument/codeAction` LSP method, so that Swift diagnostics that carry a quick fix can be applied from the LSP client with a keystroke.