Initially, I would launch wsltty, and quickly maximize the window (e.g. with `Win-↑`) when it appeared but before my shell starts (currently just measuring from when my .bashrc starts executing), at which point it would promptly exit:

> /bin/wslbridge2: Exit 1.

Quickly dragging the corner to resize the window doesn't seem to cause it to exit.  Once WSL has started up, I can maximize or restore the window going forward without issues.

As far as I can tell it's not a config issue, as starting with an empty config file also triggers it, though once I started faffing with the config it became trickier to reproduce consistently.

Now, when it does successfully open without exiting, the terminal size doesn't get updated, so launching e.g. tmux or vim only uses the first 120 cols / 40 rows, as defined in my config as the default window size.  As before, maximizing after WSL initialises works fine, and subsequent resizes fix WSL's view of the terminal size going forward.

Could be another case of #73 -- I replaced my .bashrc with `stty size` on its own, and it also confirms my default window size `40 120` when I trigger an early maximize.  Adding mintty's `-w max` option to the launch command does successfully maximize the window, and `stty size` then reports the correct size of `93 383`.

---

Using [v3.1.0.2 x64](https://github.com/mintty/wsltty/releases/download/3.1.0.2/wsltty-3.1.0.2-install-x86_64.exe), though the wsltty build number disagrees, unless it's truncated?

> mintty 3.1.0 (x86_64-pc-cygwin) – wsltty 3.1.0

Launching with the _WSL Terminal_ shortcut:

> C:\Users\User\AppData\Local\wsltty\bin\mintty.exe --WSL= --configdir="C:\Users\User\AppData\Roaming\wsltty" -~  -

<details>
<summary>Config file</summary>

```
Locale=en_GB
Charset=UTF-8
Columns=120
Rows=40
PgUpDnScroll=no
CursorType=block
Font=Iosevka Term
FontHeight=7
BoldAsFont=yes
ForegroundColour=230,230,230
BackgroundColour=34,34,34
CursorColour=255,255,255
Black=83,83,83
Red=220,92,92
BoldRed=240,62,62
Green=165,194,97
BoldGreen=174,244,117
Yellow=255,228,109
BoldYellow=255,248,139
Blue=108,153,187
BoldBlue=118,193,247
Magenta=209,151,217
BoldMagenta=239,181,247
Cyan=160,224,255
BoldCyan=200,234,255
White=230,230,230
BoldWhite=255,255,255
AllowBlinking=yes
Term=xterm-256color
Answerback=
BellType=2
BellSound=yes
Hold=error
Scrollbar=none
Transparency=low
OpaqueWhenFocused=yes
FontSmoothing=full
ClicksPlaceCursor=yes
ClickTargetMod=shift
```
</details>
I installed VoidMusl (from https://github.com/am11/VoidMuslWSL ) into WSL. After I installed it it, I ran the 'configure WSL shortcuts' script from the start menu.

This added entries for "VoidMusl Terminal" and "VoidMusl Terminal %" to the start menu, as expected.

I have since removed Void. I can't find a way to remove its shortcuts.
I can only find a script for removing entries from the context menu, but not the start menu.
'configure WSL shortcuts' merely creates new shortcuts for all of the currently installed distros and does not remove the invalid/old entries.

In the start menu, one can right-click and select "Uninstall" but all that does is bring up Windows' "Add/Remove Programs" settings, which doesn't help with wsltty shortcuts.
mc (midnight commander) under WSL ubuntu 18.04 hangs permanently on 3.1.0.2 (with extreme cpu usage showing for wslbridge2).

Works on 3.1.0.

This is true for both the i686 and x64 versions, and confirmed on multiple systems (windows 10 pro).
You can test with:
```
r2 -
[0x00000000]>
```
You should be able to write in commands then, but nothing happens

It works fine with 3.1.0
I use mintty with cygwin, and was just trying out WSL (default terminal is rubbish) when I found this.

Changing the user name would be possible, but I'd prefer to avoid it if it can be easily fixed. I'm guessing this is just a variable that hasn't been quoted properly? If I get a chance later I'll have a look through the scripts myself.

(Note: I get similar problems when trying to install with chocolaty and from the releases here)

Thanks!
![image](https://user-images.githubusercontent.com/12230820/70045190-a279f700-15fe-11ea-9963-0987cb3c27ab.png)
Error reporting in windows 10 of ARM
After wsltty-3.1.0-install-i686.exe is installed, the system reports this error and cannot run it.
Would it be possible to publish builds for ARM64?  Even a 32bit build would be convenient for those of us running the new Windows on ARM laptops.  The software is amazing for me on my x86 laptops, and I would definitely appreciate the ability to run it on these newer platforms.
Hi, this is more of a question: currently when I start tmux in my default WSL console, I can't have a scroll bar. Does wsltty solve this issue? I mean, if I type tmux from wsltty console will I be able to scroll with a mouse? If not, is this something that can be added as a feature? Thanks!
I recently downgraded from 1903 to 1709 and thus downgrade from wsl2 to wsl. Wsltty does no longer work, i have uninstalled deleted all local files etc. and reinstalled multiple times and still cant get it to work. How can i solve this issue?
I have my home directory symlinked to a location outside the WSL filesystem. This worked fine until wsltty started using wslbridge2; now the symlink is apparently resolved, and thus I end up in the symlink destination instead of ~ when starting wsltty.

Moreover
```
# set PATH so it includes user's private bin if it exists
if [ -d "$HOME/bin" ] ; then
     PATH="$HOME/bin:$PATH"
fi
```
in .profile acts as if $HOME/bin does not exist, even though it does. This also worked correctly before wslbridge2.

I am using 1809.