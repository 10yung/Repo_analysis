What is the expected behavior?
need proper responce
What is the actual behavior?
not getting any responce
What steps will reproduce the problem?
need to post like this
[  {    "query": "query ReviewListQuery($locationId: Int!, $offset: Int, $limit: Int, $filters: [FilterConditionInput!], $prefs: ReviewListPrefsInput, $initialPrefs: ReviewListPrefsInput, $filterCacheKey: String, $prefsCacheKey: String) {     locations(locationIds: [$locationId]) {    locationId    name    reviewListPage(page: {offset: $offset, limit: $limit}, filters: $filters, prefs: $prefs, initialPrefs: $initialPrefs, filterCacheKey: $filterCacheKey, prefsCacheKey: $prefsCacheKey) {    totalCount    reviews {    ... on Review {    id    createdDate    publishedDate    title    text    tripInfo {    stayDate    tripType    }    userProfile {    isVerified    displayName    hometown {    location {    additionalNames {    long    }    name    }    }    contributionCounts {    sumAllUgc    helpfulVote    }    }    additionalRatings {    rating    ratingLabel    }    mgmtResponse {    id    text    publishedDate    username    connectionToSubject    }    rating    photos {    id    photoSizes {    url    width    height    }    }    helpfulVotes    status    }    }    }    }    }",    "variables": {      "locationId": 12429815,      "offset": 0,      "limit": -1    }  }]
Code:
```php

```

I am making a post request with curl_exec to but am not getting a response just a 

```
Operation timed out after 10001 milliseconds with 0 bytes
```
error.  However, I get a response if I make the same request from Postman.   Any idea what might be going wrong here?

Code:
```php

$fields = array(
        'auth' => array(
               'cId' => 'DEADBEEF-8675309-8675309-123123-4321',
               'sig' => 'Not really a signature',
               'data' => array(
                    'field' => 'pat',
                    'value' => '12',
                    'id1' => 'lasagna',
                    'id2' => 'peperoni'
                )

        ),
        'item1' => 'QPFMgH1TnCTLrylGeNs8yzYVVXxUgR0RHwj9jNwgXJJEfxODdoOKDOJLv66CSU5XKRfu4KYtDJB5rAmngxNrRDFpWU69oHMTlZoHAewuy3ft',
        'item2' => 'gMiGdw==',
        'tokenList' => array(
                "token", "list"
        )
);

$postFields = json_encode($fields);

error_reporting(E_ALL);
ini_set('display_errors', true);

$curl = curl_init('http://localhost:8080/endpoint');

curl_setopt($curl, CURLOPT_POST, true);
curl_setopt($curl, CURLOPT_POSTFIELDS, $postFields);
curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
curl_setopt($curl, CURLOPT_HTTPHEADER, array('Content-Type: application/json'));
curl_setopt($curl, CURLOPT_FOLLOWLOCATION, true);
//curl_setopt($curl, CURLOPT_RETURNTRANSFER, true);
//$result = curl_exec($curl);

echo "before curl_exec" . "\n\n";
$response = json_decode(curl_exec($curl));
echo "after curl_exec" . "\n\n";

print_r($response);

```

Hi, would it be possible to set attempts and retries with delayed requests?
**What is the expected behavior?**

Would be very good to still be able to get the downloaded data, so for example, if I want to get only the first 5 bytes of a remote file, I will be able to get them in a new variable/field, i.e `$curl->downloaded_data` or we can still get it on `$curl->response`

**What is the actual behavior?**

Actually when the downloaded bytes reach the setMaxFileSize() limit, we get error 42:

```
Curl\Curl Object
(
    [curl] => Resource id #8
    [id] => 5dc94f7dab8a23.68230775
    [error] => 1
    [errorCode] => 42
    [errorMessage] => Operation was aborted by an application callback: Callback aborted
    [curlError] => 1
    [curlErrorCode] => 42
    [curlErrorMessage] => Operation was aborted by an application callback: Callback aborted
    [httpError] => 
    [httpStatusCode] => 200
    [httpErrorMessage] => HTTP/1.1 200 OK
```

**What steps will reproduce the problem?**

Code:
```php
    $curl = new Curl();
    $curl->setOpt(CURLOPT_TIMEOUT, 8);
    $curl->setOpt(CURLOPT_CONNECTTIMEOUT, 5);
    $curl->setOpt(CURLOPT_USERAGENT, "Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:68.0) Gecko/20100101 Firefox/68.0");
    $curl->setOpt(CURLOPT_FOLLOWLOCATION, false);
    $curl->setOpt(CURLOPT_SSL_VERIFYPEER, false);
    $curl->setMaxFilesize(5);
    $curl->get("https://ajax.googleapis.com/ajax/libs/jquery/1.11.2/jquery.min.js");
    $curl->close;
```

I'd like to still be able to get first 5 bytes of downloaded data.

Instead, I just get error 42 now.
I try to fetch a json data from a url, but it always return the http code 202 at first, and then it will go to  the url automatically to get the real data, the http code is 200 at this time.
version:8.6.1

When I use the download method to download a file, I get an error:

The URL address is wrong:

```
$curl = new Curl();
$curl->setTimeout(10);

$curl->setOpt(CURLOPT_SSL_VERIFYPEER, FALSE);
$curl->setOpt(CURLOPT_SSL_VERIFYHOST, FALSE);

$url = 'http://baiduxxxx.com/favicon.icoa';
$curl->download($url, './a.tmp');
```

PHP Fatal error:  Uncaught Exception: unlink(./a.tmp.pccdownload): Resource temporarily unavailable in \public\bat\helper\common.php:7
Stack trace:
#0 [internal function]: throwErr(2, 'unlink(./a.tmp....', '\www...', 1568, Array)
#1 \library\php-curl\src\Curl\Curl.php(1568): unlink('./a.tmp.pccdown...')
#2 \library\php-curl\src\Curl\Curl.php(447): Curl\Curl->downloadComplete(Resource id #29)
#3 \library\php-curl\src\Curl\Curl.php(430): Curl\Curl->execDone()
#4 \library\php-curl\src\Curl\Curl.php(469): Curl\Curl->exec()
#5 \library\php-curl\src\Curl\Curl.php(329): Curl\Curl->get('http://baiduxxxx.com...')
#6 \public\bat\www\start.php(111): Curl\Curl->download('http://baiduxxxx.com...', './a.tmp')

Currently, my method is to handle it with try-catchï¼Œlike:

```
$code = 9999;
$url = 'http://baidu.com/favicon.icoa';
try {
    $curl->download($url, './a.tmp');
} catch (Exception $e) {
    $code = $e->getCode();
    echo 'download ',$url,' error.';
}

if ($code == 9999) echo md5_file('./a.tmp');
```


I don't know if this question is a bug.

### What is the expected behavior?
`getCookie()` :  expect arg to accept a decoded name
expect the return value to be decoded

`getCookies()` expect decoded names/values

`responseCookies`  public property : expect decoded names/values


### What is the actual behavior?
must pass an encoded name to `getCookie()`  and it returns a raw/encoded value

### What steps will reproduce the problem?

response headers include
```
Set-Cookie: dingus=foo%3Bbar; path=/
Set-Cookie: a%3Bb=foo%3Bbar; path=/
```

Code:
```php
$curl->getCookie('dingus') // returns "foo%3Bbar"   I would expect "foo;bar"
$curl->getCookie('a;b'); // returns null, I would expect "foo;bar"
$curl->getCookie('a%3Bb'); // returns "foo%3Bbar"  -> ugh
```

likewise, I would expect `getCookies` (and public `responseCookies` property) to return array of decoded keys/values

feature or bug?

The `@expectedException*` annotations will be removed in PHPUnit 9. Replace with `expectException()`, `expectExceptionCode()`, `expectExceptionMessage()`, or `expectExceptionMessageRegExp()` instead.

Warning messages:
```
1) CurlTest\CurlTest::testJsonEncode
The @expectedException, @expectedExceptionCode, @expectedExceptionMessage, and @expectedExceptionMessageRegExp annotations are deprecated. They will be removed in PHPUnit 9. Refactor your test to use expectException(), expectExceptionCode(), expectExceptionMessage(), or expectExceptionMessageRegExp() instead.

2) CurlTest\CurlTest::testRequiredOptionCurlOptReturnTransferEmitsWarning
The @expectedException, @expectedExceptionCode, @expectedExceptionMessage, and @expectedExceptionMessageRegExp annotations are deprecated. They will be removed in PHPUnit 9. Refactor your test to use expectException(), expectExceptionCode(), expectExceptionMessage(), or expectExceptionMessageRegExp() instead.
```

Explains the new best practice of using `expectException()`.
https://thephp.cc/news/2016/02/questioning-phpunit-best-practices
there is no release info/note https://github.com/php-curl-class/php-curl-class/releases/tag/8.3.0

and there is no changelog too https://github.com/php-curl-class/php-curl-class
and no way to know active version except the badge

i dont know if releases are automated, at least i dont see that in [travis](https://github.com/php-curl-class/php-curl-class/blob/master/.travis.yml)

i would like to propose using [please](https://github.com/adhocore/please) for managing release. which automatically does all the things with just one simple command

**disclaimer** i authored `please`