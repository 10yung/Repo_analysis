we've had a couple of requests to output upload artifacts to disk for debugging and custom ci solutions. i'd like to do this for asset manifests, because it has implications for our code as well as the user benefits mentioned above.
Fixes #745 and #768 

This relies on [this PR](https://github.com/rustwasm/binary-install/pull/7) in @rustwasm/binary-install

Hey team,

Thanks for all the great work you and everyone else has done so far!

I have added support a custom URL to be passed to the `preview` command.

When either a URL is passed using the flag `-u` or `--url` to the `preview` command the browser will open to the URL specified.

Example usage:

```bash
$ wrangler preview --url https://example.com/endpoint?id=random
```

In the case where `--headless` is also passed, the server will output the response of the request to the URL.

When this flag is not specified the application will continue to use the default `https://example.com`.

The protocol specified in the URL can be either HTTP or HTTPS.

In the case that neither protocol are used, or the specified URL is not a valid URL, the command will fallback to using the default as specified above.

I hope you can review and implement this ASAP as I know a number of developers would love this feature!

Thanks heaps
ran `cargo update` which updates the `Cargo.lock` to the latest non-breaking change
So this works - 

```console
$ wrangler dev
💁  JavaScript project found. Skipping unnecessary build!
👂  Listening on http://localhost:8787
💁  watching "./"
[2020-01-08 11:34:33] "GET example.com/ HTTP/1.1"
"hello, world! i have not edited a file"
🌀  Detected changes...
💁  JavaScript project found. Skipping unnecessary build!
[2020-01-08 11:34:37] "GET example.com/ HTTP/1.1"
"hello, world! i have edited a file"
🌀  Detected changes...
💁  JavaScript project found. Skipping unnecessary build!
[2020-01-08 11:34:55] "GET example.com/ HTTP/1.1"
unknown console event: "Script modified; context reset."
"hello, world! i have edited a file again"
```

The problem is that the console event `"Script modified; context reset"` only occurs after I issue another curl command, which makes me think that my thread logic is blocking somewhere that it shouldn't be. I'm not quite sure how that would be happening as I made sure to drop the mutex guards after i use them.
Our `Cargo.toml` was getting a bit unruly, there's a tool called `cargo tomlfmt` that will format the toml for us. 
### 🐛 Bug Report

💁 Uploading...
Error: Failed to upload file batch. ⚠️ Error: https://api.cloudflare.com/client/v4/accounts/0b7ab10fa40087efd0c9f21d953d0956/storage/kv/namespaces/04939c355a074ce4a89c2a3b7c343f19/bulk: timed out

#### Environment

* operating system: Macos catalina
* output of `rustc -V`: zsh: command not found: rustc
* output of `node -v`: v10.17.0
* output of `wrangler -V`: 👷 ✨  wrangler 1.6.0

#### Steps to reproduce

`wrangler publish`

#### What did you expect to see?

Completed successfully 

#### What did you see instead?

Error: Failed to upload file batch. ⚠️ Error: https://api.cloudflare.com/client/v4/accounts/0b7ab10fa40087efd0c9f21d953d0956/storage/kv/namespaces/04939c355a074ce4a89c2a3b7c343f19/bulk: timed out
Right now, if you specify a kv_namespace binding in your wrangler.toml, and its id collides with an existing namespace configured for Sites, wrangler will just kinda... let it be. This opens up some undesirable edge cases i'd like to button up, but if there are users relying on it, the fix will break them.

https://github.com/cloudflare/wrangler/blob/master/src/commands/publish/mod.rs#L58

The above logic should be moved to Target.kv_namespaces, and complain if any kv namespaces listed in the wrangler.toml collide with the site namespace configured automatically by wrangler.
```
wrangler secret  blah --env staging
Enter the secret text you'd like assigned to blah?
sdfsf
sdfsf
🌀  Creating the secret for account 323b0253f67c95c7bf534629f3d2fc04
✨  Success! You've uploaded secret blah.
🌀  Binding secret to script my-worker-staging
✨  Success! You've bound the secret blah to my-worker-staging.