Removing these leftover directories can be forgotten resulting in
increasing disk usage.

Add an option to create-workers to remove these directories when
detected (disabled by default to keep current behaviour).

> $ buildbot-worker create-worker --delete-leftover-dirs <dir> <server>
<name> <password>
> mkdir -p <dir>/TFA-test
> 2020-01-17 14:38:55+0100 [Broker,client] Deleting directory 'TFA-test' that is not being used by the buildmaster

Signed-off-by: Robin Jarry <robin@jarry.cc>
Signed-off-by: Thomas Faivre <thomas.faivre@6wind.com>

## Contributor Checklist:

* [x] I have updated the unit tests
* [x] I have created a file in the `master/buildbot/newsfragments` directory (and read the `README.txt` in that directory)
* [x] I have updated the appropriate documentation


reporters.GitHubCommentPush is failing with the message: (we are using an enterprise github server).

Failed to update "failure" for <Project> at <commit-sha-id>, context "", issue None.
	Traceback (most recent call last):
	Failure: exceptions.TypeError: sequence item 4: expected string, NoneType found

I am using token to authenticate with github.
Please help

This fixes #5155.

## Contributor Checklist:

* [X] I have updated the unit tests
* [ ] I have created a file in the `master/buildbot/newsfragments` directory (and read the `README.txt` in that directory)
I'm trying the following command line:
```shell
/usr/bin/buildbot-worker create-worker . "[2001\:\:324]:9989" test toto
```
But it gives the following error:
```
Traceback (most recent call last):
  File "/usr/bin/buildbot-worker", line 11, in <module>
    load_entry_point('buildbot-worker==2.0.1.post2', 'console_scripts', 'buildbot-worker')()
  File "/usr/lib/python3/dist-packages/buildbot_worker/scripts/runner.py", line 238, in run
    config.parseOptions()
  File "/usr/lib/python3/dist-packages/twisted/python/usage.py", line 267, in parseOptions
    self.subOptions.parseOptions(rest)
  File "/usr/lib/python3/dist-packages/twisted/python/usage.py", line 273, in parseOptions
    self.parseArgs(*args)
  File "/usr/lib/python3/dist-packages/buildbot_worker/scripts/runner.py", line 183, in parseArgs
    self['host'], self['port'] = self.validateMasterArgument(master)
  File "/usr/lib/python3/dist-packages/buildbot_worker/scripts/runner.py", line 161, in validateMasterArgument
    master, port = master_arg.split(":")
ValueError: too many values to unpack (expected 2)
```

Is Ipv6 address supposed to be supported?

Hi, 

I have found a problem where the build is stopped by signal 13 and no other error occurs. Full log can be found here: https://buildbot.mariadb.org/#/builders/21/builds/2494

The buildbot uses DockerLatentWorkers and there are no errors reported in the logs related to this. Any ideas?

Thanks!
The current login flow uses the "-p" option, which, according to [the perforce documentation](https://www.perforce.com/manuals/v17.1/cmdref/Content/CmdRef/p4_login.html) :

> Display the ticket, rather than storing it in the local ticket file.

This PR simplifies the login flow by using the default perforce login behavior : the ticket is automatically stored in a file. Its location can be changed using the [P4TICKETS environment variable](https://www.perforce.com/manuals/v17.1/cmdref/Content/CmdRef/P4TICKETS.html)). There is no need to parse and store the ticket anymore. This will prevent any issue in the future if the output changes again (as in #4574).

This PR is used in production since October. It fixes the (frequent) random issue I detailed in #5042. Everything is working fine since this patch was applied.

Let me know what you think about it (I can squash the commits once they are reviewed).
Simple patch needed to support Streams depot.

I will update the unit tests and documentation later.
E.g. https://buildbot.buildbot.net/#/builders/58/builds/195

```===============================================================================
[ERROR]
Traceback (most recent call last):
  File "/buildbot/buildbot-job/build/master/buildbot/db/pool.py", line 190, in __thd
    rv = callable(arg, *args, **kwargs)
  File "/buildbot/buildbot-job/build/master/buildbot/db/logs.py", line 215, in thdappendLog
    return self.thdAppendLog(conn, logid, content)
  File "/buildbot/buildbot-job/build/master/buildbot/db/logs.py", line 201, in thdAppendLog
    res = conn.execute(q)
  File "/buildbot/buildbot-job/build/sandbox/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 988, in execute
    return meth(self, multiparams, params)
  File "/buildbot/buildbot-job/build/sandbox/lib/python3.8/site-packages/sqlalchemy/sql/elements.py", line 287, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File "/buildbot/buildbot-job/build/sandbox/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1101, in _execute_clauseelement
    ret = self._execute_context(
  File "/buildbot/buildbot-job/build/sandbox/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1252, in _execute_context
    self._handle_dbapi_exception(
  File "/buildbot/buildbot-job/build/sandbox/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1473, in _handle_dbapi_exception
    util.raise_from_cause(sqlalchemy_exception, exc_info)
  File "/buildbot/buildbot-job/build/sandbox/lib/python3.8/site-packages/sqlalchemy/util/compat.py", line 398, in raise_from_cause
    reraise(type(exception), exception, tb=exc_tb, cause=cause)
  File "/buildbot/buildbot-job/build/sandbox/lib/python3.8/site-packages/sqlalchemy/engine/base.py", line 1248, in _execute_context
    self.dialect.do_execute(
  File "/buildbot/buildbot-job/build/sandbox/lib/python3.8/site-packages/sqlalchemy/engine/default.py", line 580, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) no such table: logs
[SQL: SELECT logs.num_lines 
FROM logs 
WHERE logs.id = ?]
[parameters: (67,)]
(Background on this error at: http://sqlalche.me/e/e3q8)
buildbot.test.unit.test_db_logs.TestRealDB.test_deleteOldLogChunks_basic```


hi 
I need to configure github authorization. so that all team members
quasarappcore could use only 2 of 5 builders (github-worker and github-tester) and could only put on rebuild and build. If the user put the project on the assembly, then he, as the owner, could stop it.

my current configuration :

``` python
        self.masterConf['www']['authz'] = util.Authz(
                allowRules=[
                    util.AnyEndpointMatcher(role="admins"),
                    util.StopBuildEndpointMatcher(builder="*", role="owner"),
                    util.ForceBuildEndpointMatcher(builder="github*",
                                                   role="quasarcore"),
                    util.RebuildBuildEndpointMatcher(builder="github*",
                                                     role="quasarcore")
                ],
                roleMatchers=[
                  util.RolesFromGroups(groupPrefix='QuasarApp/'),
                  util.RolesFromEmails(admins=["EndrIIMail@gmail.com"]),
                  util.RolesFromOwner(role="owner")

                ]
        )

        secret = SecretManager("/home/andrei/buildBotSecret/secret.json")

        self.masterConf['www']['auth'] = util.GitHubAuth(
            secret.getValue("QuasarAppCIID"),
            secret.getValue("QuasarAppCIToken"),
            apiVersion=4, getTeamsMembership=True) 
```

my current builders:

``` python
        self.masterConf['workers'] = [
            worker.Worker("github-worker", "pass"),
            worker.Worker("github-tester", "pass"),
            worker.Worker("qtBuilder", "pass"),
            worker.Worker("NPM", "pass"),
            worker.Worker("assets-builder", "pass")

            ]
```