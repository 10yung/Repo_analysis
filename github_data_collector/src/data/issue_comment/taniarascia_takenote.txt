When trying to login via GitHub account, the existing OAuth list of access requested is way too much, which might be idea.

![image](https://user-images.githubusercontent.com/4899586/72665449-a89d2900-3a2e-11ea-8954-c87af23392cf.png)

Please consider limited access for sign in.
I'd love to use this as a stand-alone app on android mobile.
Upon discovering these two things:

- Auth0 would cost $228/month at 10,000 users
- Auth0 does not grant the ability to get a GitHub token an access repo data

I realized Auth0 is not right for the needs of this project. Instead, I will create an Express server to serve the front end as a SPA and handle all API requests, including getting the GitHub token and everything else we do with GH. This will allow the app to be mainly front end only, without relying on a third-party for GitHub authentication.

Special thanks to @leofrozenyogurt for getting Serverless set up as a potential workaround to the GitHub token issue.
**Describe the bug**
If npm cannot verify certificates it fails. I'd like to see an option to disable certificate checking. Because i can't run Dockerfile on my workplace.
To disable ssl check set it in npm config
```
npm config set strict-ssl false
```

**To Reproduce**
Just set up a proxy or vpn that will inject its own certs or something like that.

**Expected behavior**
...

**Screenshots**
```
npm ERR! code UNABLE_TO_VERIFY_LEAF_SIGNATURE
npm ERR! errno UNABLE_TO_VERIFY_LEAF_SIGNATURE
npm ERR! request to https://registry.npmjs.org/@babel/parser/-/parser-7.7.7.tgz failed, reason: unable to verify the first certificate
```
Created a lambda function that can be deployed with Serverless - https://serverless.com/

As of right now the lambda function lives inside the serverless folder and all the client and secret variables have been set with ENV_ ; this is just placeholder as I have not added .env. 

Also this PR is still a work in progress and was just to make sure the getRepos function could work with this setup
**Describe the bug**
When you make a new note in Safari, a red dot appears. Inspecting the code, it says there's an invalid character. This issue does not happen in Firefox or Chrome.,

**To Reproduce**
Make a new note.

**Screenshots**

<img width="195" alt="Screen Shot 2019-12-31 at 1 02 26 PM" src="https://user-images.githubusercontent.com/11951801/71631398-18598a00-2bce-11ea-952c-3a00d367bc64.png">
<img width="582" alt="Screen Shot 2019-12-31 at 1 03 45 PM" src="https://user-images.githubusercontent.com/11951801/71631399-18598a00-2bce-11ea-8205-117745ae86e4.png">

**To Reproduce**

1. Log out of TakeNote if you're already logged in.

2. Click Log In **or** Sign Up.

3. Note the text under `Welcome`.

**Expected behavior**

I'd get rid of the text altogether and just keep the Welcome and the button underneath. Otherwise, you could say "Log in to continue," but that would be redundant.

If you plan on adding more login options in the future, you could get rid of "Continue with GitHub" and just say "GitHub." That way, you could use "Log in to continue" or some other welcome text.

**Screenshots**

![image](https://user-images.githubusercontent.com/19352442/70366258-05b89300-1864-11ea-91b2-ea04deb0a16b.png)

In addition to the issue open re GitHub storage (#165), would it be possible to integrate a server-side storage solution?  I'd like to be able to host my own personal TakeNote server that I could access from different computers, which seems like a natural extension for a web-based app.

Thanks!
Currently, the system uses github to log in and store data, however that requires a callback URL that fails for local / non-takenote.dev URLs.  This is, obviously, not ideal, especially given that the documentation explains that you can run the site using npm start.

We should consider adding an offline-only mode that doesn't sync data to the cloud, but instead just syncs it locally.  This will allow easier local testing and also give people the ability to deploy the app on their own personal sites.
GitHub authentication is complete. Now you can log in with GitHub, but the functionality doesn't integrate with GitHub yet. Instead of saving to local storage, all notes in the app will live in a single special Gist, and all notes will be a file within that gist.

Will need to think of some methods of saving settings and categories - such as a special Gist containing JSON for all that data. Will need to think of methods to revert to default if someone chooses to edit that file.