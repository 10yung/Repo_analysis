```
[2KDownloading https://repo1.maven.org/maven2/com/typesafe/play/play-functional_2.12/2.6.3/play-functional_2.12-2.6.3.jar
  Error:
https://repo1.maven.org/maven2/com/typesafe/play/play-functional_2.12/2.6.3/play-functional_2.12-2.6.3.jar: DownloadError(Caught java.io.IOException: Server returned HTTP response code: 416 for URL: https://repo1.maven.org/maven2/com/typesafe/play/play-functional_2.12/2.6.3/play-functional_2.12-2.6.3.jar (Server returned HTTP response code: 416 for URL: https://repo1.maven.org/maven2/com/typesafe/play/play-functional_2.12/2.6.3/play-functional_2.12-2.6.3.jar))
[Info  - 5:16:43 PM] Connection to server got closed. Server will restart.
```

I have encounter this weird DownloadError when opening up this scala project for the first time.
Not sure if this is an issue of this plugin though.
is this superseded by Metals now, or are we not to that point yet?
I'm noticing that this extension, when enabled in VSCode, creates two files in the current project folder:

> ensime-langserver.log
> pc.stdout.log

Any way to prevent these files from being generated? (or at least have them be generated in some temp location)?

My environment:
VSCode 1.32.3
Scala Language Server 0.2.3

My Scala project uses sbt 1.2.8 with scala-2.12.8 and sbt-ensime 2.5.1  (i tried 2.6.1 also but same result).  OSX 10.14.3   Java 8
The plugin doesn't seem to work for me.  The hover always says "Loading ..." and no other features seem to work.  So I looked in the log.  I see these frequent errors:

`ERROR org.github.dragos.vscode.EnsimeLanguageServer - Unknown notification CancelRequest(4)
`

and also this one:

```
ERROR org.ensime.core.RichPresentationCompiler - Error during askOption
java.util.concurrent.TimeoutException: Futures timed out after [30 seconds]
	at scala.concurrent.impl.Promise$DefaultPromise.ready(Promise.scala:255)
	at scala.concurrent.impl.Promise$DefaultPromise.result(Promise.scala:259)
	at scala.concurrent.Await$.$anonfun$result$1(package.scala:215)
	at scala.concurrent.BlockContext$DefaultBlockContext$.blockOn(BlockContext.scala:53)
	at scala.concurrent.Await$.result(package.scala:142)
	at org.ensime.indexer.SearchService.findUnique(SearchService.scala:419)
	at org.ensime.model.ModelBuilders._locateSymbolPos(ModelBuilders.scala:43)
	at org.ensime.model.ModelBuilders._locateSymbolPos$(ModelBuilders.scala:28)
	at org.ensime.core.RichPresentationCompiler._locateSymbolPos(RichPresentationCompiler.scala:323)
	at org.ensime.model.ModelBuilders.locateSymbolPos(ModelBuilders.scala:21)
	at org.ensime.model.ModelBuilders.locateSymbolPos$(ModelBuilders.scala:20)
	at org.ensime.core.RichPresentationCompiler.locateSymbolPos(RichPresentationCompiler.scala:323)
	at org.ensime.model.ModelBuilders$TypeInfo$.basicTypeInfo$1(ModelBuilders.scala:159)
	at org.ensime.model.ModelBuilders$TypeInfo$.apply(ModelBuilders.scala:176)
	at org.ensime.core.RichCompilerControl.$anonfun$askTypeInfoAt$2(RichPresentationCompiler.scala:134)
	at scala.Option.map(Option.scala:146)
	at org.ensime.core.RichCompilerControl.$anonfun$askTypeInfoAt$1(RichPresentationCompiler.scala:134)
	at scala.tools.nsc.util.InterruptReq.execute(InterruptReq.scala:26)
	at scala.tools.nsc.interactive.Global.$anonfun$pollForWork$1(Global.scala:444)
	at scala.tools.nsc.interactive.Global.pollForWork(Global.scala:418)
	at scala.tools.nsc.interactive.PresentationCompilerThread.run(PresentationCompilerThread.scala:22)
```

FWIW, my environment is:

```
users-iMac:readtext user$ cat ~/.sbt/1.0/plugins/plugins.sbt 
addSbtPlugin("org.ensime" % "sbt-ensime" % "2.5.1")
users-iMac:readtext user$ sbt version
[info] 0.1.0-SNAPSHOT
users-iMac:readtext user$ java -version
java version "1.8.0_181"
Java(TM) SE Runtime Environment (build 1.8.0_181-b13)
Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)
users-iMac:readtext user$ scala -version
Scala code runner version 2.12.8 -- Copyright 2002-2018, LAMP/EPFL and Lightbend, Inc.
users-iMac:readtext user$ sw_vers -productVersion 
10.14.3
users-iMac:readtext user$ code -version
1.31.1
1b8e8302e405050205e69b59abb3559592bb9e60
x64
/Users/user/.vscode/extensions/dragos.scala-lsp-0.2.3/
```



The settings are not listed in the defaults and when added manually complain about being unrecognized.

I see this was maybe fixed in another issue?

VSCode: 1.30.2
Ext: 0.2.3
First of all, thank you for your vscode extension! 

I'm having auto completion issues (loading ...) when using multi-folder workspace.
FYI, The only way I get it to work is to run `sbt ensimeConfig` at the top folder in the workspace (`core`in my setting below )

Here is my simple workspace settings : 
`{
    "folders": [
        {"path": "core"},
        { "path": "common"},
        { "path": "project-1"}],
    "settings": {}
}
`

This [issue](https://github.com/dragos/dragos-vscode-scala/issues/55) seems to suggest that the total memory required to run a dragos LS is 768MB (by coursier) + ~500MB (dragos) =1.3GB. Is that still the case?

I'd like to use dragos in my project, but our memory is a bit constrained. We can't afford to shell out 1.3GB memory for this feature. The amount of memory we can allocate for a LS is 500MB at the moment.

Do you think it's possible to lower memory consumption for dragos?

Thanks!
Before that change, VS Code would complain about unknown configuration
options if those options were added to `settings.json`.

This is properly recognized by VS Code. 
The CI failure seems unrelated.
Are there plans for this extension to support an 'Outline tree view'
- Would be a very useful feature

Thanks
For some reason, langserver doesn't work on my MBP. I have an encrypted filesystem (APFS), maybe that's the problem? 

From `ensime-langserver.log`:

```
[2018-06-06 11:29:25,198] ERROR org.github.dragos.vscode.ensime.EnsimeActor - Actor crashed:
java.nio.file.FileSystemNotFoundException: Provider "untitled" not installed
	at java.nio.file.Paths.get(Paths.java:147)
	at org.github.dragos.vscode.EnsimeLanguageServer.$anonfun$publishDiagnostics$2(EnsimeLanguageServer.scala:187)
	at scala.collection.immutable.Stream.$anonfun$map$1(Stream.scala:415)
	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1169)
	at scala.collection.immutable.Stream$Cons.tail(Stream.scala:1159)
	at scala.collection.immutable.Stream.foreach(Stream.scala:531)
	at org.github.dragos.vscode.EnsimeLanguageServer.publishDiagnostics(EnsimeLanguageServer.scala:186)
	at org.github.dragos.vscode.ensime.EnsimeProjectServer$$anonfun$receive$1.applyOrElse(EnsimeProjectServer.scala:54)
	at akka.actor.Actor.aroundReceive(Actor.scala:517)
	at akka.actor.Actor.aroundReceive$(Actor.scala:515)
	at org.github.dragos.vscode.ensime.EnsimeProjectServer.aroundReceive(EnsimeProjectServer.scala:22)
	at akka.actor.ActorCell.receiveMessage(ActorCell.scala:590)
	at akka.actor.ActorCell.invoke(ActorCell.scala:559)
	at akka.dispatch.Mailbox.processMailbox(Mailbox.scala:257)
	at akka.dispatch.Mailbox.run(Mailbox.scala:224)
	at akka.dispatch.Mailbox.exec(Mailbox.scala:234)
	at akka.dispatch.forkjoin.ForkJoinTask.doExec(ForkJoinTask.java:260)
	at akka.dispatch.forkjoin.ForkJoinPool$WorkQueue.runTask(ForkJoinPool.java:1339)
	at akka.dispatch.forkjoin.ForkJoinPool.runWorker(ForkJoinPool.java:1979)
	at akka.dispatch.forkjoin.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:107)
```