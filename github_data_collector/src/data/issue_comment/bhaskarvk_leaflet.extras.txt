Hi Bhaskar and gang,
It would be extremely useful to have the [SelectAreaFeature plugin](https://github.com/sandropibia/Leaflet.SelectAreaFeature) working with Leaflet for R. I created a [Stackoverflow question](https://stackoverflow.com/questions/59679872/using-selectareafeature-plugin-with-leaflet-for-r) before I knew leaflet.extras existed. I'd be happy to give an even bigger SO bounty if required.

This feature would be useful for any user looking to select multiple markers or polygons at once by intuitively drawing the region from which you'd like to select. [SelectAreaFeature JS demo here](https://sandropibia.github.io/Leaflet.SelectAreaFeature/examples/index.html) .
By using the `addDrawToolbar` in shiny modules on different tabs, the following Javascript error comes up in the console.

> **TypeError: t is undefined           leaflet.js:5:10033**
 
To trigger the error, start the app, go to Tab "mod2" and back to "mod1" and click on the map. Every interaction with the map will cause another console error.
  
<details>
  <summary>shinyApp</summary>

```
  ## libs & data ###################################
  library(shiny)
  library(sf)
  library(leaflet)
  library(leaflet.extras)
  drawtoolbar = TRUE
  
  sfdata <- sf::st_as_sf(breweries91, coords="coordinates")
  
  ## modules ###################################
  mod1_ui <- function(id, label, value) {
    ns <- NS(id)
    tabPanel(label, value = value, leafletOutput(ns("map"))
    )
  }
  mod1_server <- function(input, output, session, parent_session, navid) {
    output$map <- renderLeaflet({
      req(parent_session$input$navbarid == navid)
      p <- leaflet() %>%
        addTiles()
      
      if (drawtoolbar) {
        p <- p %>% addDrawToolbar(position="topright",
                                  targetGroup = "Sel")
      }
      
      p
    })
  }
  
  ## ui ###################################
  ui <- navbarPage(id = "navbarid", title = 'DEMO', selected = 1,
                   mod1_ui("mod1", "mod1", 1),
                   mod1_ui("mod2", "mod2", 2)
  )
  
  ## server ###################################
  server <- function(input, output, session) {
    callModule(mod1_server, "mod1", parent_session = session, navid = 1)
    callModule(mod1_server, "mod2", parent_session = session, navid = 2)
  }
  
  ## Run App ###################################
  shinyApp(ui, server)
```

</details>


Interestingly, the error disappears when the following line in `renderLeaflet` is removed:
`req(parent_session$input$navbarid == navid)`


Adding the ability to have a layer that gives uses drive times can help with maps where we need to determine the driving time a patient would take to come to various hospital settings. There already is a leaflet js library for it.
https://github.com/traffordDataLab/leaflet.reachability


would love to include a plotly.js within a popup...
I'm trying to work with leaflet.velocity plugin. Does anyone know how to do it? or have a working example?
Hi everyone, is it possible to change the displayed text of the tools of the draw tool bar (leaflet map in a Shiny application)?
![tools](https://user-images.githubusercontent.com/6517365/66298219-8e14c900-e8f1-11e9-9051-a1009abd404f.jpg)
I would like to display 'Finish', 'Delete last point', etc. in another language (i.e., in french).
I saw it can be done with `L.drawLocal` from `Leaflet.draw`, see [here](https://stackoverflow.com/questions/48661724/leaflet-draw-edit-control-custom-text) and [here](https://github.com/Leaflet/Leaflet.draw#customizing-language-and-text-in-leafletdraw) but I don't understand if I can do it in my R code.
Thanks a lot!
It would be wonderful if it was easy to replicate the example from gisminister linked below, but also specify colors to the pie-charts via either a `pal` function, a vector of colors, or a dataframe of key-value stores. 

Leaflet Pie Chart Markers Example: 
http://bl.ocks.org/gisminister/10001728

Likewise, it would be wonderful to also have bar charts, as shown in leaflet.minicharts. Example here : https://cran.r-project.org/web/packages/leaflet.minicharts/vignettes/introduction.html
I'm trying to edit the layer in this map, but it keeps crashing my computer when I select it. All the other toolbar functionalities seem to work fine. What's happening 

```
library(sf)
library(leaflet)
library(leaflet.extras)
library(sp)
library(rmapshaper)
library(dplyr)
library(tigris)
library(rbgm)

nevada <- voting_districts("nevada")
nevada <- rmapshaper::ms_simplify(nevada)

leaflet() %>% addTiles %>%
  addPolygons(data = nevada, group = 'model') %>%
  addDrawToolbar(targetGroup = 'model',
                 editOptions = editToolbarOptions(
                   selectedPathOptions = selectedPathOptions())) %>%
  addLayersControl(overlayGroups = c('model'), options =
                     layersControlOptions(collapsed=FALSE)) %>%
  addStyleEditor()
```
It would be great to be able to change the search marker, which is right now a circle marker, to say, a regular marker or even just a dot. If there's a way for me to do this manually, please let me know!
Hi, 
A while ago I created a forked version of Leaflet to include a plugin that I was interested in. 
plugin: https://github.com/bbecquet/Leaflet.PolylineOffset
forked Leaflet: https://github.com/fermumen/leaflet

I was hoping I could add it to leaflet.extras or perhaps as a different package. The main issue is that as it is right now it modifies de the function addPolyline(). I'd appreciate some pointers on the best way to do this.

Best,
Fernando 
