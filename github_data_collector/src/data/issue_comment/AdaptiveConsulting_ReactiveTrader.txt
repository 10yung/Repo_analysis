Severity	Code	Description	Project	File	Line	Suppression State
Error		The name "DesignTimeSpotTilePricingViewModel" does not exist in the namespace "clr-namespace:Adaptive.ReactiveTrader.Client.UI.SpotTiles.Designer;assembly=Adaptive.ReactiveTrader.Client".	Adaptive.ReactiveTrader.Client.GUI	C:\projects\ReactiveTrader-master\src\Adaptive.ReactiveTrader.Client.GUI\UI\SpotTiles\SpotTilePricingView.xaml	11	

The old Windows Store/WinRT app model has been superceded by the "Universal Windows Platform" (UWP) app model for Windows 10 and Windows Phone 10 (and presumably XBox at some point).

Adapt the Windows Store ReactiveTrader app (for Windows 8/8/1) to be a UWP app for Windows 10.

Or alternatively, if the Windows 8/10 store app is no longer seen as important, lets remove it from the repository.

Running build.bat runs the NUnit unit tests by calling src/packages/NUnit.Runners2.6.3/tools/nunit-console-x86.exe.

If a machine has only .NET 4.0/4.5 installed and not .NET 2.0/3.5 (e.g. on my Windows 8 setup), this fails.

For some reason the following the part of nunit-console-x86.exe.config that should look like this:

```
<startup useLegacyV2RuntimeActivationPolicy="true">
    <!-- Comment out the next line to force use of .NET 4.0 -->
    <supportedRuntime version="v2.0.50727" />
            <supportedRuntime version="v4.0.30319" />
</startup>
```

Looks like this:

```
<startup useLegacyV2RuntimeActivationPolicy="true">
    <!-- Comment out the next line to force use of .NET 4.0 -->
</startup>
```

This is likely a bug in the NUnit.Runners NuGet package. I have already confirmed that adding the above two lines to the config line fixes the issue. Unfortunately we can't control the NuGet package contents, so there's not much we can do about this apart from raising it with the NUnit team.

Proposed solution: Stick nunit-console-x86.exe in the tools folder with the correct config file, and don't use the NUnit.Runners package.

The numeric virtual keypad offered by iOS doesn't have an 'accept' ('return') button, and there's no inherent cancellation mechanism once editing has begun.

We should add some way for a user to accomplish these two things; an explicit button for the cancellation (rather than acting on any tap outside the virtual keypad, which is often the way this is implemented) has the advantage of being immediately clear to users; therefore considering an _input accessory view_ with cancel / accept buttons.

At a pinch we could grey out the accept button while an unacceptable value has been entered.

I've read that these are only used for ad hoc and enterprise builds now (previously they also drove the icon appearance on apps submitted for the iTunes app store, but now that's done explicitly as part of managing the app in the iTunesConnect portal).

Either way, these /probably/ want to be large versions of the regular app icon; at the moment they're something else (cropped images of the loading screen).

General feedback too. Feels like you need a selected state when clicking on a price. No feedback doesn't feel right. If you visually link that to the "trading turned on" with a similar colour some way, it will also make it more obvious that turning that on allows you to trade.

Getting some weird behaviours on RT when I scroll right to the bottom:
1. Menu covers bottom of the last time
2. When holding the scroll at the bottom, the UI gets v jumpy


1. Recycling of cells causes text input to disappear
2. Recycling of cells causes CCY switch button to change between base and counter currencies on a tile to animate strangely

![image](https://cloud.githubusercontent.com/assets/76225/3377809/4af4595c-fbe3-11e3-8b73-ad778c7b5726.png)
