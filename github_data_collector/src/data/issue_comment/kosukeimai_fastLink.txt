Please add **Matthews correlation coefficient** (MCC) as an additional statistic for the confusion table:

```
      TP * TN - FP * FN
MCC = -----------------------------------------------------
      [(TP + FP) * (FN + TN) * (FP + TN) * (TP + FN)]^(1/2)
```

The MCC is useful as an overall measure of the linkage quality. The MCC is better than Accuracy and the F1-score for imbalanced data because it adjusts for the balance ratios of the four confusion table categories (TP, TN, FP, and FN). In practice, I find that most linkage data are imbalanced by having mostly TN.

Wikipedia: https://en.wikipedia.org/wiki/Matthews_correlation_coefficient
Matthew's article (1975): https://doi.org/10.1016/0005-2795(75)90109-9

Matthew, page 445:
```
"A correlation of:
   C =  1 indicates perfect agreement,
   C =  0 is expected for a prediction no better than random, and
   C = -1 indicates total disagreement between prediction and observation".
```   
Mentioned in Tharwat's article (2018): https://doi.org/10.1016/j.aci.2018.08.003 
Recommended by Luque et al (2019): https://doi.org/10.1016/j.patcog.2019.02.023 

Anders
Hey,

I have tried to replicate the examples form the vignette and I got stuck at Blocking part.
I cannot find the "gender" variable in the dfA and dfB datasets provided by the library.

Could you add the variable in the data?

Best regards,
Mateusz Najsztub
Hi developers! Thank you so much for this package it is grreaattt! 

I was wondering if there's a way to match multiple datasets dfA, dfB, dfC etc?
Hey guys,

Thank you for developing this package. I think it will be really useful to me. It seems like the default behavior for `fastLink::fastLink` is to return the indices and posterior probabilities for matching rows only. 

Is there a way to view the posterior probabilities for ALL pairs of rows?

I'm interested in knowing if there were any pairs that were NOT matched, but should be.

Thank you,
Brad
Hi!

I have a question about how you'd suggest implementing links using geocoded records? I've considered doing the latitude and longitude numeric comparisons or perhaps reweighting the posterior probability based on the geodesic distance. Just spit-balling. Thanks!

Stewart
Hi Ted and fastLink developers,

Thank you for creating this amazing package and answering my previous questions.

My team is wondering if you have written - or have plans to write - fastLink in other languages, especially Python, Java, or Scala. Would you shed some light?

Thanks,
Katie
hi, this package seems great and much needed.

i had 2 questions, whose answers could strengthen the documentation / articles / vignettes.

1. It seems like the workflow is designed to separate the 'blocking' step from the later 'estimation' step.
Is this correct?

This would be a point to highlight as a strength.

one pain point in using the other package `RecordLinkage`
https://cran.r-project.org/web/packages/RecordLinkage/index.html
is that the blocking step was tied to the estimation step in a single overarching function
When I was using the record linkage package, i wish it was broken out into two functions

`form_blocks()`
`estimate_params()`

2. Are the performance metrics output by the `summary()` method, 'conditional' or 'unconditional?

In the sense that, do the metrics apply on cases after blocking, or do the metrics apply on cases unconditional on the blocking?

```
"Sensitivity (%)",
 "Specificity (%)",
 "Positive Predicted Value (%)",
 "False Positive Rate (%)",
 "False Negative Rate (%)",
 "Correctly Clasified 
```

This was another pain point of `RecordLinkage`
in that the performance metrics only applied to conditional cases after blocking
- Faster implementation of stringdist
- Precalculate string distances of common first and last names
- Remove as much of duplication between tableCounts and matchesLink as possible: Solved.
- Add a user-friendly warning for #17: Solved.
- Add a user-friendly warning for #18: Solved.
- Add a user-friendly warning for #20: Solved.