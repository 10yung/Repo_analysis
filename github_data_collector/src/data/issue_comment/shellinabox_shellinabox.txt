Hello,

**macOS High Sierra 10.13.6**

**sudo port -vvv selfupdate && sudo port -vvv upgrade outdated**
or
**sudo port -vvv install shellinabox**
give same error

```
:info:build     ^
:info:build shellinabox/launcher.c:819:11: warning: 'ptsname_r' is only available on macOS 10.13.4 or newer [-Wunguarded-availability-new]
:info:build       if (ptsname_r (*pty, path, length)) {
:info:build           ^~~~~~~~~
:info:build /usr/include/stdlib.h:229:5: note: 'ptsname_r' has been explicitly marked partial here
:info:build int ptsname_r(int fildes, char *buffer, size_t buflen) __API_AVAILABLE(macos(10.13.4), ios(11.3), tvos(11.3), watchos(4.3));
:info:build     ^
:info:build shellinabox/launcher.c:819:11: note: enclose 'ptsname_r' in a __builtin_available check to silence this warning
:info:build       if (ptsname_r (*pty, path, length)) {
:info:build           ^~~~~~~~~
:info:build 1 warning and 1 error generated.
:info:build make[1]: *** [shellinabox/launcher.o] Error 1
:info:build make[1]: Leaving directory `/opt/local/var/macports/build/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_net_shellinabox/shellinabox/work/shellinabox-shellinabox-e45d8f2'
:info:build make: *** [all] Error 2
:info:build make: Leaving directory `/opt/local/var/macports/build/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_net_shellinabox/shellinabox/work/shellinabox-shellinabox-e45d8f2'
:info:build Command failed:  cd "/opt/local/var/macports/build/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_net_shellinabox/shellinabox/work/shellinabox-2.20" && /usr/bin/make -j4 -w all 
:info:build Exit code: 2
:error:build Failed to build shellinabox: command execution failed
:debug:build Error code: CHILDSTATUS 2761 2
:debug:build Backtrace: command execution failed
:debug:build     while executing
:debug:build "system {*}$notty {*}$nice $fullcmdstring"
:debug:build     invoked from within
:debug:build "command_exec build"
:debug:build     (procedure "portbuild::build_main" line 8)
:debug:build     invoked from within
:debug:build "$procedure $targetname"
:error:build See /opt/local/var/macports/logs/_opt_local_var_macports_sources_rsync.macports.org_release_tarballs_ports_net_shellinabox/shellinabox/main.log for details.
```
Remove outdated ssh options

Hello,
would it be okay to use the image in the readme for a guide I am writing on how to install shellinabox in a certain environment?
I mean the browser gif.
I have just installed this package on my new Raspberry Pi 4 using Manjaro-ARM-xfce-rpi4-19.08.img.xz.

When I start it with `shellinaboxd --debug --cert=/etc/nginx/ --port=7070` I get:

`[config] Ignoring certificate directory, as SSL support is unavailable`

Tried on notebook with Manjaro 18.1 and get the same problem.

Is there a way to fix this?
I have a bunch of servers running shellinabox and they all seem to have broken in the last 48 hours while using SSL to connect, despite nothing at all changing on the server. I haven't updated any software at all on the servers, so I am confused as to what could be happening, but I wouldn't doubt it could affect others too (perhaps it's some new browser behaviour?)

When I run SIAB and attempt to connect, I get the output below. If I run with the -t flag, everything is fine.

I've gone through the shellinabox code, and the 'client initiated renegotiation' stuff seems to be in the httpd library, but I still haven't really nailed down what is going on. 

Since nothing has changed on the server, I wondered if perhaps my SSL certificate had a problem. It was set to expire in 24 days, so I just went ahead and bought a new one, however that hasn't fixed anything.

The SNI callback part seems to suggest the issue has to do with using wildcard domains, but I can't figure out whether that's actually related to the error or not.

```
root@pinto:/etc/nginx#  shellinaboxd --debug --port=40000 --cert=/etc/nginx/
[server] Version 2.20
[server] Command line: shellinaboxd --debug --port=40000 --cert=/etc/nginx/
[server] Listening on port 40000...
[ssl] Support for PFS enabled...
[ssl] Server context successfully initialized...
[http] Accepted connection from my-isp.net:57212
[http] Accepted connection from my-isp.net:57213
[ssl] Switching to SSL (replaying 0+517 bytes)...
[ssl] Received SNI callback for virtual host "pinto.beanserver.com" from "my-isp.net:40000"...
[ssl] Support for PFS enabled...
[ssl] Server context successfully initialized...
[ssl] Switching to SSL (replaying 0+517 bytes)...
[ssl] Received SNI callback for virtual host "pinto.beanserver.com" from "my-isp.net:40000"...
[ssl] Received SNI callback for virtual host "pinto.beanserver.com" from "my-isp.net:40000"...
[ssl] Received SNI callback for virtual host "pinto.beanserver.com" from "my-isp.net:40000"...
[ssl] Connection shutdown due to client initiated renegotiation!
[http] Closing connection to my-isp.net:57212
[ssl] Freeing SSL handle.
[ssl] Removing stacked write BIO!
[ssl] Connection shutdown due to client initiated renegotiation!
[http] Closing connection to my-isp.net:57213
[ssl] Freeing SSL handle.
[ssl] Removing stacked write BIO!
[http] Accepted connection from my-isp.net:57215
[ssl] Switching to SSL (replaying 0+603 bytes)...
[ssl] Received SNI callback for virtual host "pinto.beanserver.com" from "my-isp.net:40000"...
[ssl] Received SNI callback for virtual host "pinto.beanserver.com" from "my-isp.net:40000"...
[ssl] Connection shutdown due to client initiated renegotiation!
[http] Closing connection to my-isp.net:57215
[ssl] Freeing SSL handle.
[ssl] Removing stacked write BIO!
```


We use shelliabox behind a reverse proxy and tried to rewrite/replace the incoming url by enriching the url call of shellinabox by reverse proxy definitions. This works fine, all incoming calls are replaced to the desired route (imagine incoming ../shell/something will be transformed to /shibpath?otherparams) siabpath-service is invoked and script is executed with the $(URL} param. Unfortunately in the script the URL-Param is the originalURL (/shell/something) not the replaced route. Due lack of possibility to define additional query params, I found no possible way how to transfer additional parameters to the script. 

Any ideas? I can help myself by exposing those parameters to the client request, but that is something I do because I see no other way currently.

Would be nice if there is a possibilty to transfer the route call to the service script as parameter or generally body parameters or header info...

Any Ideas?

Hi, I Merged some Pull Requests together and created a new deb file from my branch. 
For now everything runs fine. maybe this is easier to merge than every single PR.
otherwise just ignore :)

Kind regards
Jonny
There appear to be a significant lack of logging options. The choices seem to be debug (several lines per second for a logged-in user), verbose (still a couple lines per second per user), and quiet (bupkis), with default being quiet. How about something in between? Like logging a line for each new incoming connection?
See: https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=873019

Additionally, the code needs to be updated so it can be compiled with modern versions of openssl, see: 

https://github.com/shellinabox/shellinabox/issues/393