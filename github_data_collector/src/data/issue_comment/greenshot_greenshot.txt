I am honesty not sure if this is a bug or intended. 

If i choose my preferences in this menu --> https://i.imgur.com/fgkGG84.png it does all of them automatically after pressing Prntscrn. I Still want dynamic picker, but without all options. 

Sorry if submiting issue is wrong, i am still pretty new to github :/
hey pros, when I write blogs, I often need to manually adjust the same width of screenshot , so that my blog content will be tidy. I am wondering if you guys can add this function on preferences setting. oceans of thanks.

See title - the mouse cursor is only captured when it's on the left screen (when sending full screen screenshot with CTRL+PrtScr to the Greenshot editor)

Windows 10 1903
**Describe the bug**
Screenshots do not show up in Imgur History when not using "anonymous access".

**To Reproduce**
Steps to reproduce the behavior:
1. Uncheck "Use Anonymous Access" in Imgur Settings
2. Take screenshot
3. Log in to Imgur
4. Check History in Greenshot

**Expected behavior**
See screenshot in history.

**Desktop (please complete the following information):**
 - OS: Windows 10
 - Version: All


**Additional context**
This has been an issue for a very long time now for me persisting through multiple windows updates & complete drive formats + reinstallations.

on your website you write "Only $1.99 to cover our own costs!". my request is not about getting it for free, if you have to pay for an osx sdk or whatever, simply forget this request.

but if the payment is only required to have the comfort to download and install it via the appstore, i ask you to add the osx binary to your github repos release page

(its not about giving you no money, its about not giving data to apple!)
Sorry, this isn't really a bug.

I was attempting to download Greenshot and ended up here: greenshot dot org

Thankfully the Symantec on my laptop prevented all downloads.  The files being downloaded were called "Greenshot_xxxxxxxxxxx.exe", where xxx's are numbers.  Also, the size of the .exe is different vs the size of the .exe on github

https://github.com/greenshot/greenshot/releases



Hi there

I am very interested on a feature like the above to quickly change the colors - perhaps only based on the last used ones. Further details on request.

And I am also willing to donate this feature. Anyone interested?

Thanks in advance, mischl

BTW: is there a nigthly build or some other newer release to test as the last release was two years ago? thx

Currently, when exception happens it offers to report the issue to jira:
![image](https://user-images.githubusercontent.com/10516222/64735097-2634b380-d4e8-11e9-80e8-f58fe06a5fa9.png)

The suggested action requires users to do many manual steps, which can be avoided.

Reporting can be done automatically via telemtry tools, like [Application Insights](https://docs.microsoft.com/en-us/azure/azure-monitor/app/app-insights-overview) which are free to use. Also it's possible to create issues automatically. Exception window can contain only brief text similar to "We got an issue, we already reported and working on it".

As an outcome it should improve user satisfaction and give more information about errors in application.
Please add a CLI command that enables setting any INI setting as a one-liner rather than requiring something like `ReplaceSingleLineInTextFile` (see below). I'm willing to work on a PR if this looks acceptable to you.

Following your current `/exit` and `/reload` conventions, something similar to:

```
greenshot.exe /setconfig Core.ShowTrayNotification=False
```

I would expect this to cause the existing greenshot.exe process to show the updated setting under preferences immediately.

## Current solution

(`/reload` did not seem to have any effect, so I went with `/exit`.)

```ps1
. .\Utils.ps1

$greenshot = Join-Path $env:ProgramFiles 'Greenshot\Greenshot.exe'
& $greenshot /exit
ReplaceSingleLineInTextFile (Join-Path $env:APPDATA 'Greenshot\Greenshot.ini') 'ShowTrayNotification=True' 'ShowTrayNotification=False'
& $greenshot

```

##### Utils.ps1

(I'd like to be able to get rid of this code.)

```ps1
function ReplaceSingleLineInTextFile(
    [Parameter(Mandatory=$true)] [string] $Path,
    [Parameter(Mandatory=$true)] [string] $OldLine,
    [Parameter(Mandatory=$true)] [string] $NewLine) {

    # Operate atomically by keeping file locked while reading and writing
    $stream = [System.IO.FileStream]::new($Path, 'Open', 'ReadWrite', 'None')
    try {
        # Use the overload that enables passing keepOpen=$true so that the file is not closed if $reader is garbage-collected before the writing is done
        $reader = [System.IO.StreamReader]::new($stream, [System.Text.UTF8Encoding]::new($false), $true, 4096, $true)
        $lines = @()
        $didReplace = $false

        while ($null -ne ($line = $reader.ReadLine()))
        {
            if ($line -eq $OldLine) {
                if ($didReplace) { throw 'More than one line matched.' }
                $didReplace = $true
                $line = $NewLine
            }

            $lines += $line
        }
        
        if (-not $didReplace) { throw 'No lines matched.' }

        $stream.Position = 0
        $writer = [System.IO.StreamWriter]::new($stream)

        foreach ($line in $lines) {
            $writer.WriteLine($line)
        }

        # Shorten the file if necessary to prevent padding to the original length with the original contents
        $writer.Flush()
        $stream.SetLength($stream.Position)
    } finally { $stream.Dispose() }
}
```

### Ideal solution

```ps1
& (Join-Path $env:ProgramFiles 'Greenshot\Greenshot.exe') /setconfig Core.ShowTrayNotification=False
```


Over time I have hit a lot of issues with the dotnet core 3.0, or other projects, I will try to track them here so it's more clear why we can't go live or provide previews.