So I do a good deal of networking research and I love cheat.sh. I have a tool that I use that I think could be nicely integrated into cheat.sh

```
RFC_get () 
{ 
    [ $# -lt 1 ] && return 1
    isNum='^[0-9]+$'
    [[ ${1} =~ $isNum ]] || return 1
    curl "https://www.ietf.org/rfc/rfc${1}.txt"
}
```

Perhaps the usage syntax could be:
```
curl cheat.sh/RFC/${NUMBER}
```

And that URL could simply resolve to:
```
https://www.ietf.org/rfc/rfc${NUMBER}.txt
```
I propose to extend the behavior of the program in the following ways:
- Feature 1: The search should also include multiple terms;
- Feature 2: When you search a phrase in the _dotfiles_ using the new context option (example: x), the search should include the comments associated;
- Feature 3: Variable interpolation in the output, if variable is passed to _curl_.
- Feature 4: Shell variable interpolation in the output if the variable is declared and a new option (example: n) is passed to the client _cht.sh_;
- Feature 5: Any entry shoud have an ID (Autoadded during the search phase), so you can execute easily the command from client _cht.sh_ using a new option (example: r).

### Example of dotfiles.
`cat tar`
```bash
# To create an uncompressed archive:
tar -cvf /path/to/foo.tar /path/to/foo/

# To extract an uncompressed archive:
tar -xvf /path/to/foo.tar
```

`cat tar_2`
```bash
# To extract an archive.
# Tag: archive, extract
tar xf ${ARCHIVE_1}

# To extract an archive, verbose output.
# Tag: archive, extract
tar xvf ${ARCHIVE_2}
```

### Example of search command
Calls cheat from curl:
`curl cheat.sh/~tar+~extract/X/ARCHIVE_1='myfile.tar'`

Or call cheat from _cht.sh_:
Set variable for shell variable interpolation.
`ARCHIVE_1='myfile.tar'`
`cht.sh -n -x tar extract`

**Expected output:**
```bash
# To extract an uncompressed archive:
# ID: 143
tar -xvf /path/to/foo.tar

# Extracts an archive.
# Tag: archive, extract
# ID: 151
tar xf myfile.tar

# Extracts an archive, verbose output.
# Tag: archive, extract
# ID: 152
tar xvf ${ARCHIVE_2}
```

Note:
- Dynamic ID appears in the output. The ID doesn't change if the search context (tag and loading path) remains the same;
- Shell variable interpolarion is performed using variable defined previously.

### Example of run command
To recall and execute a cheat:
`cht.sh -r 151`
Hi Igor,

I wonder if one-lin3r database of commands is worth inserting in cht.sh. 

Pro:
- Already organized by OS
- Seems that the concepts covered are not yet addressed in cht.sh, and names don't collide

Con:
- Uses Python class definitions, so migration might be more than simple formatting. But, I've seen worse.

https://github.com/D4Vinci/One-Lin3r/tree/master/one_lin3r/core/liners

Thanks, your weather command is lovely. 
To reproduce issue visit: http://cht.sh/vim/return+outside+function

Error, no results: This is what is shown:

```
$ curl cheat.sh/
vim/return+outside+function
" Unknown cheat sheet.
" Please try to reformulate your query
```

I would expect to see one of these stackoverflow posts:
https://stackoverflow.com/search?tab=votes&q=%5bvim%5d%20return%20outside%20function

What is weird is that if I re-arrange the keywords, it works:

http://cht.sh/vim/function+return+outside

And I get a response as expected.  Why does the first query return nothing but the second query return a result?


Addresses issue #113, seems to be a shell-specific issue (zsh for me when I reproduced it) but escaping `?` with `\?` works for both bash and zsh. Seems like a cleaner solution than adding quotes around all curl commands in the README.md.
Hey there :wave: 
Having the environment variable `$CHTSH_CONF` I can change the location of my configuration. But apparently the location of the history file is fix coded to my `$HOME` directory. I would love to keep my users home folder clean. I could imagine to either add another variable like `$CHTSH_HIST` or (what I would favor) add a configuration option to specify the location.
Is there a way to display the date of an answer right next to other meta data like so/q/# ?
Age of an answer is to me as important as author and pseudo-url.
This project is awesomely useful and productive but it's a shame I often have to copy-paste a SO id into a browser to check the date outside terminal...
thx
Is there a setting for output pagination other than piping to less?
Greetings,
I'm trying to configure self hosting.
The included Dockerfile references share/scripts/get-sheets.sh which doesn't exist which causes the docker build to fail after some minutes with:
sh: can't open 'share/scripts/get-sheets.sh': No such file or directory

Am I missing something?

thanks in advance
iomari
Hi, I really enjoyed your PerlCon talk. I checked out `cheat.sh` and it works great. 

https://www.youtube.com/watch?v=xSm9ZA8IIGM

One thing I noticed is... while your overview page indicates that `cheat.sh` has support for Perl6 "one-liners", when I try to obtain information, I never get any code back. Instead, cheat.sh gives me a summary of some (older?) problems users were having with Readline and/or NativeCall: 

```
mbook:~ homedir$ curl cht.sh/perl6/1line/
mbook:~ homedir$ curl cht.sh/perl6/1line/:list | less -R
```

Could you please add @dnmfarrell David Farrell's repository of "Perl6 one-liners" ??

https://github.com/dnmfarrell/Perl6-One-Liners

Thank you!

