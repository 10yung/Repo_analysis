It seems that hypertext links are not exported properly to powerpoint format?
It seems to be exported as formatted text without any link.
Note: it works with PDF export.
It would be nice to have an ability to include another `PITCHME.yaml` in `PITCHME.yaml`.

## Implementation

Just use simple `include` key with path to another `PITCHME.yaml`. For simplicity and consistency with other features, the path is relative to the repository root: `include: PITCHME.yaml`

## Reasoning

Some settings in `PITCHME.yaml` can be specific for presentations, som other settings can be global.

For example there will be _master_ `PITCHME.yaml` in the root of the repository, where will be specified colors, fonts, code highlighting style, custom CSS etc. In general there would be global design/theme settings.

And there will be another `PITCHME.yaml` next to the presentation itself (next to `PITCHME.md`). In this `yaml` file, we can just include the master `yaml` and add/update other setting. For example:

``` yml
include: PITCHME.yaml # Global settings for all my presentsations.

# Every presentation has its own title.
title: My Super Presentation

# I want different logos for different presentations, or maybe I do not want any logo in some.
logo: https://example.com/path/to/logo.png
```

## Things to consider

- Depth of including. Again for simplicity, I believe that it is enough to support just one level of include (the same as including `PITCHME.md` files). So included `PITCHME.yaml` cannot contain `include` key.
- In general, I think that mostly the `include` will be at the begining of the file. But i should be clear the behavior if the include is somewher _in the middle_. Possibilities:
  - Force the `include` (if present) to be the first key in `.yaml`. Show error if it is not the case.
  - Allow `include` to be anywhere, but always process it first. So local settings will always override global settings, even if they are before the `include`.
  - Allow `include` to be anywhere and process the files from top to bottom. So process settings in local file, then include global file and process that - it may override already set settings. Then process the rest of local file, which will override any previous settings. This is probably the expected behavior.
I've got a custom font in an OTF file that I would really like to use in my `gitpitch` presentation. Normally in a CSS file I would load it like this:

```
@font-face {
  font-family: 'My-Custom-Font';
  src: url('/some/local/path/to/fonts/My-Custom-Font.otf?raw=true');
  font-weight: bold;
}
```
or
```
@font-face {
  font-family: 'My-Custom-Font';  
  src: url('https://some/url/to/fonts/My-Custom-Font.otf?raw=true');
  font-weight: bold;
}
```
for a local file and a file from a url respectively.

Now unfortunately neither of these option is currently possible. For the local option the reason is probably that the gitpitch bundle that is compiled does not look for fonts (but I might be wrong, my under-the-hood-understanding is limited) and the remote option the reason is (1) a cross-origin error and (2) a reliance on remote resources that is undesirable for local presentations. As the latter reason is rather fundamental, the way forward is probably to scan for local files and compile them with the rest.
I wanted to submit a feature request. There was no specific template for it, so I took these sample issue templates from one of my projects. 

What this'll do is to let a user automatically select one of these option after clicking "issue" and it will give a prefilled text. 
Similar to [pro-menus-hidden](https://gitpitch.com/docs/pro-features/bonus/#pro-only-slideshow-menu-control) but for speaker/presenter mode.

From my perspective, after I perform a presentation, I want to publish it for my audience. But I don't want to share my speaker notes because these are more unpolished ad-hoc thoughts.

Currently, there are two ways to handle this:
* create two branches, one witch speak notes and one without
* use [modular markdown](https://gitpitch.com/docs/git/branch-shared-markdown/) and have two separate markdown files with and without speak notes

In both cases, we need to duplicate our slides and remove speak notes in one branch/module. Additionally, if we want to make further changes, we must make them in both places, so maintenance becomes tiresome.

With `speaker-mode-hidden` I could just set it to `true` on my `master` branch and publish it. From my experience, I always use a desktop version to present my decks in case of problems with the internet, so I can just set it to `false` locally. Even if someone wants to use an online version for presenting, he can still set it to `true` on another branch/module without whole duplication.

In practice, `speaker-mode-hidden` property could just block opening speaker window for all users.

When I try to tab through the slide deck online (e.g. https://gitpitch.com/gitpitch/kitchen-sink), it goes into the GitPitch menu even though it's not open.


I have an issue with indentation of a numbered list...
I have this list
```
@ol[](false)
- Item1
  - subitem1
  - subitem2
-item2
@olend 
```

This shows as 
```
1. Item1
    2. subitem2
    3. subitem3
4. item2
```
Tried different numbers of indentations and empty lines, but still the numbering is wrong
I'd like to define and register a [custom `highlight.js` language](http://highlightjs.readthedocs.io/en/latest/language-guide.html).
Hi,

thanks for building gitpitch.  am trying gitpitch out for the second time and especially the outcome I like a lot. At this moment I am a lot of slower still though compared to working with pp etc. But I hope that will change. 

The reason for this post:

Is it possible to automatically create a reference list slide(s) at the end of the presentations using biblatex like e.g. in Rmarkdown/pandoc markdown?


Unrelated to that a question: 
If I write a slide with several bulletpoints I noticed that in case I write too many, the fontsize is not automatically scaled down like it would be in e.g. pp. Is that normal or am I doing something wrong. Generally this is a nice reminder of keeping it simple with only few points per slide but still: What is the easiest way of setting a smaller fontsize for a whole slide? I found `@size[0.6em](example)` in an example slide but I guess this is meant to only use for a small sentence or keywords...

Thanks
Feature request: add TTS capability.

Text to speech would be useful in presentations.

Also, it would be nice for visually impaired people.