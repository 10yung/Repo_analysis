
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.10 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.10...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.10&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/AlexanderZaytsev/react-native-i18n/network/alerts).

</details>
Bumps [ws](https://github.com/websockets/ws) from 1.1.4 to 1.1.5.
<details>
<summary>Release notes</summary>

*Sourced from [ws's releases](https://github.com/websockets/ws/releases).*

> ## 1.1.5
> # Bug fixes
> 
> - Fixed a DoS vulnerability (f8fdcd4).
</details>
<details>
<summary>Commits</summary>

- [`24edef5`](https://github.com/websockets/ws/commit/24edef58a0aab05e8220f76bd2377614dd4eee85) [dist] 1.1.5
- [`f8fdcd4`](https://github.com/websockets/ws/commit/f8fdcd40ac8be7318a6ee41f5ceb7e77c995b407) [security] Fix DoS vulnerability
- [`f7cfc51`](https://github.com/websockets/ws/commit/f7cfc51a9f4364c80d43329e8e604aff00e89e2a) [pkg] Remove .npmignore in favor of `files` package.json field
- See full diff in [compare view](https://github.com/websockets/ws/compare/1.1.4...1.1.5)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ws&package-manager=npm_and_yarn&previous-version=1.1.4&new-version=1.1.5)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/AlexanderZaytsev/react-native-i18n/network/alerts).

</details>
My regards to you, I know that you have already solved the problems in previous projects, but it does not work for me, possibly because I am learning, but I have been stuck here, can someone tell me that I am wrong? I followed a tutorial that made it seem easy but it didn't work for me.

**Here I leave my app
im usyng just expo**

import * as React from "react";
// import I18n from 'i18next';
// import Backend from 'i18next-xhr-backend';
// import LanguageDetector from 'i18next-browser-languagedetector';
// import { initReactI18next } from 'react-i18next';

import {
  StyleSheet,
  View,
  Text,
  TextInput,
  TouchableOpacity
} from "react-native";
import * as Font from "expo-font";
import { Button } from "react-native-elements";

var I18n = require("react-native-i18n");



export default class SignPage extends React.Component {
  constructor(props) {
    super(props);
    this.state = {
      fontLoaded: false
    };
  }

  async componentDidMount() {
    await Font.loadAsync({
      "AristotelicaSmallCaps-Regular": require("./../assets/fonts/AristotelicaSmallCaps-Regular.ttf"),
      "BebasNeue-Regular": require("./../assets/fonts/BebasNeue-Regular.ttf")
    }).then(() => {
      this.setState({ fontLoaded: true });
    });
  }

  render() {
    return this.state.fontLoaded == true ? (
      <View style={styles.container}>
        <TextInput
          style={styles.inputbox}
          underlineColorAndroid='rgba(0,0,0,0)'
          placeholder={I18n.t('Email')}
          placeholderTextColor='#ffffff'
        ></TextInput>
        <Text style={styles.textName}>{I18n.t('SignText')}</Text>

        <TouchableOpacity style={styles.btnstyle1}>
          <Button
            titleStyle={styles.textButtonSign}
            color='#7ec8f7'
            title={I18n.t('Next')}
          ></Button>
        </TouchableOpacity>
      </View>
    ) : (
      <View style={styles.container}></View>
    );
  }
}

const styles = StyleSheet.create({
  container: {
    flex: 1,
    flexDirection: "column",
    backgroundColor: "white",
    alignContent: "flex-end",
    justifyContent: "flex-end",
    alignItems: "center"
  },

  inputbox: {
    backgroundColor: "rgba(30,137,219,0.3)",
    width: 290,
    height: 40,
    color: "black",
    paddingHorizontal: 16,
    textAlign: "center",
    fontSize: 25,
    marginBottom: 10,
    fontFamily: "BebasNeue-Regular",
    textAlignVertical: "center"
  },
  textName: {
    // backgroundColor:'green',
    width: 290,
    height: 40,
    color: "#7ec8f7",
    paddingHorizontal: 16,
    textAlign: "center",
    fontSize: 25,
    marginBottom: 80,
    fontFamily: "BebasNeue-Regular",
    textAlignVertical: "center"
  },
  btnstyle1: {
    flexDirection: "column",
    margin: 30,
    justifyContent: "center",
    height: 15,
    width: 290,
    textAlignVertical: "center"
  },

  textButtonSign: {
    margin: 1,
    fontSize: 21,
    textAlign: "center",
    color: "white",
    fontFamily: "BebasNeue-Regular",
    textAlignVertical: "center"
  },




});

I18n.fallbacks=true,

I18n.translations= {
  en: {
    Email: "Your Email Adress",
    Next: "Next",
    SignText: "We'll send you an email that'll instantly sign you in"
  },
  es: {
    Email: "Tu Correo electrónico",
    Next: "Siguiente",
    SignText:
      "Le enviaremos un correo electrónico que lo registrará instantáneamente"
  }
}



**my package.js**

{
  "main": "node_modules/expo/AppEntry.js",
  "scripts": {
    "start": "expo start",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "web": "expo start --web",
    "eject": "expo eject"
  },
  "dependencies": {
    "expo": "^35.0.0",
    "expo-font": "^7.0.0",
    "react": "16.8.3",
    "react-dom": "16.8.3",
    "react-native": "https://github.com/expo/react-native/archive/sdk-35.0.0.tar.gz",
    "react-native-elements": "^1.2.3",
    "react-native-gesture-handler": "^1.4.1",
    "react-native-i18n": "^2.0.15",
    "react-native-web": "^0.11.7",
    "react-navigation": "^4.0.10",
    "react-navigation-stack": "^1.9.1"
  },
  "devDependencies": {
    "babel-preset-expo": "^7.0.0"
  },
  "private": true
}




⚠️ Important: You'll need to install Android build tools 27.0.3

Does this mean, only version 27.0.3, or version >= 27.03?
Remove property android:minSdkVersion of <uses-sdk /> in AndroidManifest.xml
I would like to *'live'* translate my app... I.e.: after I load static json translations files, I want to update it with possible live updates from a public url. But this does not seem too update translations...  
This is my code:
```
import I18n from 'react-native-i18n';

import en from '../Assets/Locales/en.json';
import it from '../Assets/Locales/it.json';
import fr from '../Assets/Locales/fr.json';

// use static languages, initially
I18n.translations = { en, it, fr };

I18n.fallbacks = true;

// 'live' update
let language = 'it'; // (just update italian language, to make things simple...)
let url = `https://my.public.server/i18n/${language}.json`;
fetch(url)
  .then(response => response.json())
  .then(newTranslations => {
    const mergedContents = Object.assign(I18n.translations[language], newTranslations);
    I18n.translations[language] = mergedContents;
    // add new json language merged with current JSON language to I18n.translations
    /**
     * NOTE: code reaches here, and I18n.translations[language] is updated with live
     *       contents, but new translations are not displayed by the app... :-(
     *       Probably I should call some I18n.translationsRefresh() method, here...
     */
  })
;  

export default I18n;
```

Any clue?
fix problem compile when set MinSDK
update to use new gradle >= 4.10
> After changing language to Arabic all text data are automatically aligned to the Right side of the screen properly. But all other components like Icons are aligning only after re-opening the app.

```
export function langSet(type){
    if(type == "en"){
    I18n.locale = type;
    const currentLocale = I18n.currentLocale();
    }else{
        I18n.locale = type;
        const currentLocale = I18n.currentLocale();
        ReactNative.I18nManager.allowRTL(true);
        ReactNative.I18nManager.forceRTL(true);
    }
}
```