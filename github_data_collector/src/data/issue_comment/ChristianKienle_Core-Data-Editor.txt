This PR is a first attempt at adding support for UUID attributes (issue #56).

* UUID types show up and are editable in the table view for an entity type.
* UUID types show up and are editable in the managed object view (what you see when you click on a to-one association for a record selected in the upper table view).

Note that I bumped the deployment target to macOS 10.13 since that's when the NSUUID type is first available.
After running the Editor for a few dozens of seconds, even without doing anything in particular, two system popups appear indicating that the application wants to have access to the user's Contacts, then another one appears requesting access to the user's Calendar.

No explanation is given as to why this would be needed and this seems like a clear invasion of privacy.

Having basic respect for the user's privacy instead entail to:

- Not attempt to use user's private data (contacts, calendar) until the point they are actually needed.
- Provide a proper written explanation as to why accessing these data is useful to the application's operations.
- Sign the application with GateKeeper so at least, if the application is found to be corrupted by the OS, it can automatically revoke these authorizations.

Absent these requirements, the application should not attempt to obtain users's data.

Cheers,
Laurent



Sorting displayed object by column identifier
Attributes that are NSUUID type are dropped from display because `tableCellViewClassForAttributeType_cde` does not handle them.
I'm new to Core Data Editor. It seems really helpful. However, the tutorial link no longer works: http://thermal-core.com/CoreDataEditor#tutorial.

Any chance to fix that link?
First off, this is a great utility and a life-saver when trying to debug Core Data issues, thank you for making it!

As has been pointed out in #52, column sorting seems broken in the latest release, so I thought I'd open a new issue about another problem with it: Searching by column doesn't seem to work either (it just gives a blank result, maybe it isn't looking at the specified column?)

Specifically, I'm trying to search for a substring in a string column. I select the column name using the "magnifying glass" dropdown and start to type. Whatever I type there are no results. This worked fine with the version I had before updating to the latest release from the "Releases" page. Now I consistently get no results.

Thanks again for a great tool, looking forward to having this functionality restored soon!
File NSManagedObjectModel-CDEAdditions.m, line #128

now it looks like this:
`..metadataForPersistentStoreOfType:NSSQLiteStoreType..`
and it cannot open XML based core data, only the `NSSQLiteStoreType`.
It was `metadataForPersistentStoreOfType:nil` before the commit.
`nil` causes warning but also due to documentation:
> If this value is nil, Core Data determines which store class should be used to get or set the store file's metadata by inspecting the file contents.

Sorting does not work
When i change values in my simulator the core data editor doesn't update the tables. I keep having to go back to the "project browser screen" and refresh the tables. Is there a way to auto refresh on a change made?
Hello. Probably I am doing something wrong but I cannot save changes to my database. Neither edit nor add new objects. I don't have any database validations in place. I am using a master branch build.

I managed to open my database and edit entry values. I cannot find the option to save the changes. After clicking File > Refresh state is reverted to the original one. Clicking File > Save only offers to create a new Core Data editor file. Is there any way to save the manually applied changes so that they will be reflected in my simulator app? Clicking the settings icon left of csv button raises the error mentioned in #45 . Maybe it is some system file access issue?

I will be grateful for any tips.