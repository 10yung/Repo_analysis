### :sparkles: What kind of change does this PR introduce? (Bug fix, feature, docs update...)
Use latest Microsoft `Lottie-Windows` toolkit for Windows renderer #218

### :arrow_heading_down: What is the current behavior?


### :new: What is the new behavior (if this is a feature change)?


### :boom: Does this PR introduce a breaking change?


### :bug: Recommendations for testing


### :memo: Links to relevant issues/docs


### :thinking: Checklist before submitting

- [ ] All projects build
- [ ] Follows style guide lines 
- [ ] Relevant documentation was updated
- [ ] Rebased onto current develop

## üêõ Bug Report

Lottie is visible in Xamarin.Forms.macOS.

Because there is support for Xamarin.macOS I am not sure if its a bug or there is no implementation.

### Expected behavior
`AnimationView` is visible

### Reproduction steps
- Create new Xamarin.Forms.macOS app
- Add `AnimationView` to your XAML page

### Configuration

**Version:** 2.5.10

**Platform:** 
- [ ] :iphone: iOS
- [ ] :robot: Android
- [ ] :checkered_flag: WPF
- [ ] :earth_americas: UWP
- [ ] :apple: MacOS
- [ ] :tv: tvOS
- [x] :monkey: Xamarin.Forms

## üí¨ Questions and Help

I'm building a Xamarin Forms app with Xamarin Lottie. I'm running it on an android device with Android 22.

The animation I am using has merge paths and did not run on my device.

I checked the logs and found the following log:

> [LOTTIE] Animation contains merge paths. Merge paths are only supported on KitKat+ and must be manually enabled by calling enableMergePathsForKitKatAndAbove().

I checked a few articles that say it should be enabled in the android side:
- https://stackoverflow.com/questions/50716019/airbnb-lottie-animation-not-working-on-android-4-4-4-3-and-4-2
- https://arctouch.com/blog/lottie-animations-xamarin/

I wasn't able to find this in the current pacakge (v3.0.3). How can I enable the same?
## üêõ Bug Report

 i have to rollback to 2.7.1 , where the AutoPlay works 

### Expected: Lottie animation should start automatically

### I have to go to another page, then pop back for the animation to start


**Version:** 3.0.3

**Platform:** 

- [x] :robot: Android
- [x] :monkey: Xamarin.Forms

## üêõ Bug Report
When the AnimationView is placed as an element within a CarouselView, the AnimationView will stop animating when swiping to the next (or previous) slide. When coming back to the stopped slide, the animation does not continue. 
It looks like a freeze of the Animation.
This is seen only in Android, iOS is working just fine.

### Expected behavior
Either the same as in iOS where the Animation just finishes or the animation should continue once coming back to the stopped slide (First solution preferred) 

### Reproduction steps
Place a AnimationView within a CarouselView. Giving it a longer animation makes it easier to reproduce. Once the AnimationView starts animating, swipe to the next (or previous) slide. Go back to the slide with the animating view. The animation will be frozen. (Android only)

### Configuration

**Version: 3.0.3

**Platform:** 
- [ ] :iphone: iOS
- [X ] :robot: Android
- [ ] :checkered_flag: WPF
- [ ] :earth_americas: UWP
- [ ] :apple: MacOS
- [ ] :tv: tvOS
- [ ] :monkey: Xamarin.Forms

### Reproduction Repo
I created a super simple project for you which you can just start up on an Android phone. You will see the issue.

[LottieCarousel.zip](https://github.com/Baseflow/LottieXamarin/files/3931089/LottieCarousel.zip)

## üêõ Bug Report

I don't have a reproduction project right now, but I'm having trouble using Lottie in Xamarin.iOS. I added an animation to the `BackgroundView` of a `UICollectionView` when the collection is empty (e.g. no result found view). When the collection receives items, then I pause and dispose the animation, remove it from its superview, and null out the `BackgroundView`. The problem is scrolling becomes jittery when I scroll up and down. This only happens if I have called `Play()` on the animation. To me, it looks like there is a memory leak somewhere.

```
var lotAnimationView = LOTAnimationView.AnimationNamed("animation");
lotAnimationView.LoopAnimation = true;
lotAnimationView.TranslatesAutoresizingMaskIntoConstraints = false;

uiStackView.AddArrangedSubview(lotAnimationView);

lotAnimationView.WidthAnchor.ConstraintEqualTo(150).Active = true;
lotAnimationView.HeightAnchor.ConstraintEqualTo(150).Active = true;

lotAnimationView.Play(); // causes jittery scrolling when `BackgroundView` is disposed
```

### Expected behavior

`LOTAnimationView` needs to be disposed properly so that `UICollectionView` performance is not affected negatively.

**Platform:** 
- [x] :iphone: iOS
- [ ] :robot: Android
- [ ] :checkered_flag: WPF
- [ ] :earth_americas: UWP
- [ ] :apple: MacOS
- [ ] :tv: tvOS
- [ ] :monkey: Xamarin.Forms

## üöÄ Feature Requests

Hey, thanks for this lib üôÇ 

Can you please upgrade Lottie Android to [3.1.0](https://github.com/airbnb/lottie-android/releases/tag/v3.1.0)?

Thanks

### Platforms affected (mark all that apply)
- [ ] :iphone: iOS
- [X] :robot: Android
- [ ] :checkered_flag: WPF
- [ ] :earth_americas: UWP
- [ ] :apple: MacOS
- [ ] :tv: tvOS
- [ ] :monkey: Xamarin.Forms

We have a need to customize some animations in our application, for that to work we either need to generate the json dynamically or load it from an external resource.

Is there any example on how to load the animation from a stream or string? I've only found how to load it from a resource file.
## üöÄ Feature Requests

<!--- Summary description of the feature --->
Remove usage of `LottieUWP` (which has issues) and use latest Lottie controls from Microsoft: [Microsoft.Toolkit.Uwp.UI.Lottie](https://www.nuget.org/packages/Microsoft.Toolkit.Uwp.UI.Lottie/) ([github repositiory](https://github.com/windows-toolkit/Lottie-Windows)) which uses the Composition Layer to render the animation.

### Contextualize the feature
<!--- Where does it fit in the framework and why it's being included there. --->
This would affect the UAP renderer.
### Describe the feature
<!--- Use as much detail as possible here! --->
See Summary.

### Platforms affected (mark all that apply)
- [x] :monkey: Xamarin.Forms
- [x] :checkered_flag: WPF
- [X] :earth_americas: UWP
- [ ] :iphone: iOS
- [ ] :robot: Android
- [ ] :apple: MacOS
- [ ] :tv: tvOS

## üí¨ Questions and Help

Added note - This is specifically for a Xamarin Forms Application.

May be I am not looking in the right place, but is there an example in Android that will allow this code sample. This works in iOS, but Android does not find the File.

I want to be able to dynamically change my LogoView Animation at runtime based on either a download or a request from an Embedded Lottie Resource in my DomainServices Assembly. But my goal is not to have the Animation in an Asset in Android. 

Any example would be great. 

Again, this code runs fine with iOS as it allows me to specify my path in iOS, but in Android it appears to only be looking for Assets.


``` c#
//The Returned Path that I am writing to.
//-/data/user/0/com.aaa.finsmc/files/LogoView.json

//create the repository object
ILottieAnimationRepository repository = new LottieAnimationRepository();

//get the JSON embedded resource
_animationEntity = repository.GetEmbeddedAnimation(_animationName);

//get my Android specific Helper object
IApplication app = SimpleIoc.SimpleIocContainer.Current.Resolve<IApplication>();

//get my save to folder
string saveFolder = app.GetRepositoryStorage();

//build my path
string fileLocation = Path.Combine(saveFolder, "LogoView.json");

//write the file to the path
if (File.Exists(fileLocation))
{
    File.Delete(fileLocation);
}
using (FileStream destinationFile = new FileStream(fileLocation, FileMode.OpenOrCreate, FileAccess.Write))
{
    destinationFile.Write(_animationEntity.AnimationBytes, 0, _animationEntity.AnimationBytes.Length);
}


//set my ViewModel Bound Property
AnimationString = fileLocation;

```



``` c#
{Java.IO.FileNotFoundException: /data/user/0/com.aaa.finsmc/files/LogoView.json
  --- End of managed Java.IO.FileNotFoundException stack trace ---
java.io.FileNotFoundException: /data/user/0/com.aaa.finsmc/files/LogoView.json
	at android.content.res.AssetManager.openAsset(Native Method)
	at android.content.res.AssetManager.open(AssetManager.java:347)
	at android.content.res.AssetManager.open(AssetManager.java:321)
	at com.airbnb.lottie.LottieCompositionFactory.fromAssetSync(LottieCompositionFactory.java:100)
	at com.airbnb.lottie.LottieCompositionFactory$1.call(LottieCompositionFactory.java:81)
	at com.airbnb.lottie.LottieCompositionFactory$1.call(LottieCompositionFactory.java:79)
	at java.util.concurrent.FutureTask.run(FutureTask.java:237)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1133)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:607)
at java.lang.Thread.run(Thread.java:761)

```


