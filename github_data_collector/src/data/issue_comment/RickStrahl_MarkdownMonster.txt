I see the KeyBindings.json file. Let me offer the following. Maybe of interest, maybe not.

1. There are no key bindings for turning selected text to upper or lower case, or for capitalizing it. I realize that MM isn't primarily a text editor, but this would be a useful addition to the list of key bindings.

2. I'd love a keybinding for making text both bold and italic at once. (Ctrl+Shift+B, maybe?) When you select text and then bold with Ctrl+B, you lose the selection and have to select again before using Ctrl+I to italicize. Would be nice to do that all in one go.

3. ZoomEditorUp happens consistently and immediately. ZoomEditorDown needs a few keystrokes each time before it takes. This feels like a bug.

4. ZoomEditorUp increases the width of the right-hand scrollbar, but ZoomEditorDown does not have the opposite effect. Alternating between them therefore results in an _enormous_ scrollbar. This definitely feels like a bug. I'm kinda thinking ZoomEditor shouldn't affect the scrollbar size at all, but if we're going to increase it, there should be some corresponding way to reduce it again.

5. If you ZoomEditorDown enough times, text disappears from the editor window completely, and I found no way to get it back. (ZoomEditorUp just made the scrollbars even more enormous, but didn't bring back the vanished editor text.) This also definitely feels like a bug. Also a suggestion: maybe there's value in a ZoomEditorRestoreDefault?
When updating anything in a markdown document with Math in it, the preview is constantly gittering while refreshing it.

![ezgif-3-caf751b842d0](https://user-images.githubusercontent.com/18314920/71563619-04f5d400-2a93-11ea-9dc3-cff0e31cf1c4.gif)

This is pretty annonying and ruining my attention.
Maybe a virtual dom rendering could help about this.
Do you plan to translate the UI someday? I can provide the German translations.

Happy coding
Tim
I think this is actually a duplicate of the following bug but which I can reproduce -
https://github.com/RickStrahl/MarkdownMonster/issues/215

Create a .md document such as this -

```
# Testing for image upload
![test](file://C:/Users/matth/Documents/test.png)
```

When uploading to Wordpress the uploaded document reads as follows and the image is not uploaded at all.
```
<p id="pragma-line-0"><img src="/Users/matth/Documents/test.png" alt="test"></p>
```
Minor suggestion:

In vscode you can install an extension to do custom syntax highlighting on key words like TODO:

Would be nice to have the same capability in vscode on the editor side, not the rendering of the markdown as that is a whole other bag of worms. 
Consider adding interpolated variables sourced externally to the Markdown file. Here's one way this can work:

1. User opens external variables file (e.g., "variables.yaml", "variables.json", or "variables.toml").
1. MM parses keys and values into in-memory dictionary.
1. User opens Markdown file (e.g., "README.md").
1. MM substitutes all variable names with corresponding interpolated values (e.g., `${variable.name.full}` becomes `Jane Doe` in the preview).
1. User changes and saves value of `variable.name.full`.
1. MM re-interpolates the value and updates the preview.
1. User starts to edit the Markdown document.
1. User types `Ja`.
1. User presses `Ctrl+Space`.
1. MM replaces `Ja` with `${variable.name.full}` into the Markdown document, which is the first match for `Jane Doe` from the interpolated variable map.
1. MM updates the preview to show `Jane Doe`  in the final document.

Note that interpolated variables means that the variables can be recursively defined, such as:

```
variable:
  name:
    first: Jane
    last: Doe
    full: ${variable.name.first} ${variable.name.last}
```

See also:

![screenshot](https://user-images.githubusercontent.com/2131950/45590203-396a6e80-b8e8-11e8-8f9a-3d9f4ad7dae6.png)

Just a suggestion: It would be great if the table editor had some basic sorting and maybe even filtering functionality. I think the way how it works in Excel is "common sense" and seen in other applications (i.e. Confluence Wiki, etc).

![image](https://user-images.githubusercontent.com/6320032/41849544-98a04e3a-7881-11e8-95fe-85c055b72d9d.png)

Bad table handling in markdown is one of the primary reasons why colleagues in my workgroup prefer the Confluence wiki over Markdown docs in github/gitlab. I've been looking for a solution for quite a while. :-)


Per Markus Egger:

It would be nice to support shortcuts for column alignments as supported by Pipe and Grid Tables.

Along the same line it'd be nice to allow sorting by a column in the editor, re-arranging columns in the editor.