Fixes 3 .

Changes proposed in this pull request:
- Free scroll option to allow scroll without moving to the near page after scrolling
- Support to Swift 4.1
- fixed a problem when selectedItemCenter != true wasn't showing the underline item
Reload PageMenu Title using same PagingViewControllers and implement it in PagingMenuControllerDemo2
I am using this pod to show card which are having textfields, i wanted to update only that specified page instead of creating all pages again.

can you help me on how to load some XYZ index instead of recreating all pages to update edited value.

Thanks,
Shabana
 solve this problem  ï¼ƒ376
Add the system's return gesture.
when I use it, it can not to the right slide of the system returns the gesture.

Great lib!
When can support for swift?
Changes proposed in this pull request:
- For improved accessibility the MenuView now has VoiceOver support like an actual tab bar.

I found that by default, cannot use the system at the same time in the open sliding switch the slide of the return, and this function has a lot of user habit, so I try to use this method and I do not know if this is correct:
```Swift
//
//  PagingViewController.swift
//  PagingMenuController
//
//  Created by Yusuke Kita on 6/3/16.
//  Copyright (c) 2016 kitasuke. All rights reserved.
//
...
    open override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(animated)
        contentScrollView.panGestureRecognizer.require(toFail: navigationController?.interactivePopGestureRecognizer ?? UIGestureRecognizer())
        navigationController?.interactivePopGestureRecognizer?.require(toFail: navigationController?.interactivePopGestureRecognizer ?? UIGestureRecognizer())
    }
...
```

This is what i do in the app:

<pre>
private struct PagingMenuControllerOptions: PagingMenuControllerCustomizable {
    var lazyLoadingPage: LazyLoadingPage {
        return .all
    }
    var backgroundColor: UIColor {
        return .clear
    }
    var componentType: ComponentType
}

private struct MenuItem: MenuItemViewCustomizable {
    private var title = "..."
    var horizontalMargin: CGFloat {
        return 15
    }
    var displayMode: MenuItemDisplayMode {
        return .text(title: MenuItemText(text: title,
                                         color: .lightGrey,
                                         selectedColor: .white,
                                         font: .contentTextLarge,
                                         selectedFont: .contentTextLarge))
    }
    init(title: String) {
        self.title = title
    }
}

private struct MenuOptions: MenuViewCustomizable {
    var backgroundColor: UIColor {
        return .clear
    }
    var selectedBackgroundColor: UIColor {
        return .clear
    }
    var height: CGFloat {
        return 27
    }
    var displayMode: MenuDisplayMode {
        return .standard(widthMode: .flexible, centerItem: false, scrollingMode: .scrollEnabledAndBouces)
    }
    var focusMode: MenuFocusMode {
        return .underline(height: 3, color: .white, horizontalPadding: 15, verticalPadding: 0)
    }
    var itemsOptions: [MenuItemViewCustomizable]
}
</pre>
and this is how I implement it:


    func setupPageMenu(with controllers: [UIViewController]) {
        let menuItems = controllers.map { MenuItem(title: $0.title ?? "...") }
        let menuOptions = MenuOptions(itemsOptions: menuItems)
        let options = PagingMenuControllerOptions(componentType: .all(menuOptions: menuOptions, pagingControllers: controllers))
        pageMenu = PagingMenuController(options: options)
        addSubview(pageMenu.view)
        pageMenu.view.snp.makeConstraints { make in
            make.bottom.equalToSuperview()
            make.top.equalTo(navigationBar.snp.bottom).offset(Constants.PageView.top)
            make.leading.equalTo(Constants.PageView.leading)
            make.trailing.equalTo(Constants.PageView.trailing)
        }
    }

What is wrong. Why it moves to the right side?
Can I do it with your library? I really appreciate it. Nice, clean and simple, but all I need yet is to remove and adding controllers dynamically. Number of controllers are strongly related to entities from `NSFetchedResultsController`. There are methods to add, move, delete, update controllers. Is it possible here? Can I ask for such feature?