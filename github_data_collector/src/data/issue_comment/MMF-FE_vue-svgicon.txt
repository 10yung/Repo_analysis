
I am currently working on creating a company npm package built around vue-svgicon to be able to have all our icons in source control to be used across multiple vue projects (Vue CLI, and Nuxt Projects).

The goal is for us to be able to drop in new svg files and generate the components and publish the package to be consumed by our outher projects. In our other projects we would just have the vue-svgicon package installed so we can use the `<svgicon icon="agent"></svgicon>` syntax. 

**The Issue:**

 When I use vue-svg directly in my nuxt project it works as expected but when I use it from my  npm package (using npm link since I don't want it published yet) I encounter errors. The icon is showing up right now but I keep getting `Cannot assign to read only property 'exports' of object` in the console that is connected to `svgicon.common.js` with the error occurring at the `module.exports` part as well as `./node_modules/icon-test/homie-icons/agent.js 11:0-4"export 'default' (imported as 'icon') was not found in 'vue-svgicon'` error

**My Setup**

In my nuxt project I am using the plugin syntax:
 `plugins: [{ src: '~/plugins/vue-svgicon' }],` in my `nuxt.config.js` 

the actual plugin  (`vue-svgicon.js`) looks like this:
```
import Vue from 'vue'
import VueSVGIcon from 'vue-svgicon'

Vue.use(VueSVGIcon)
```

and then in the build section:
```
build: {
    transpile: ['icon-test'],
    extend(config, ctx) {
      config.resolve.symlinks = false
    }
  }
```

the `config.resolve.symlinks = false` line when commented out has no console errors but the icon flashes for a second and then disappears. So this issue could also be related to that. 

Then in my vue component I am referencing the icon like this:
`<svgicon icon="agent" class="h-16 w-16 fill-current stroke-none text-red block relative"></svgicon>`
Note: I am using tailwindcss for styling the icons which is working fine.

and then in the script section I am importing it like this:
`import 'icon-test/homie-icons/agent'` => this is referencing the linked npm package in my node modules. 

In my npm package that is being linked my package.json is like this:
```
{
  "name": "icon-test",
  "version": "1.0.0",
  "description": "",
  "main": "./homie-icons/index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "generate-icons": "vsvg -s ./icon-files -t ./homie-icons --es6"
  },
  "author": "",
  "license": "MIT",
  "dependencies": {
    "vue-svgicon": "^3.2.6"
  }
}
```

Only thing I changed was having the entry point be the `index.js` file that is generated after the svg's have been generated. `icon-files` is the raw svg icons, and the homie-icons is where they are being compiled to. 

Any insights would be greatly appreciated!


First Thanks for module.
I have small issue with  svg reference in my css, for background image so this  
`background-image: url(../../assets/svg/target_icon_white.svg);`
will produce this in browser  el -> backgound-image: [object, object],
 
I am using version 4, and here is my vue.config 

` const path = require('path');
           const svgFilePath = path.join(__dirname, './src/assets/svg');
`
 `module.exports = {
            publicPath:
               process.env.NODE_ENV === 'production' ? '/vue-svgicon/v4/' : '/',
            outputDir: 'dist/v4',
            chainWebpack: config => {
              // config.entry('style').add('../..src/styles/app.scss')
              const svgFontRule = config.module
                 .rule('vue-svgicon')
                 .test(/\.svg$/)
                 .use('svgicon')
                 .loader('@yzfe/vue-svgicon-loader')
                 .options({
                   idSeparator: '_',
                   svgFilePath,
                 });`

      `config.module
           .rule('vue')
           .use('vue-loader')
           .loader('vue-loader')
           .tap(options => {
               options.transformAssetUrls = options.transformAssetUrls || {}
               options.transformAssetUrls['it-icon'] = ['data'];
               return options
           });
        config.module.rule('svg').exclude.add(svgFilePath);
        config.resolve.alias.set('@it-icon', svgFilePath);
        config.resolve.symlinks(true);
    }}`
I have a folder for static svgs - staticSvg, 
anyway i can exclude it from vue-svgicon-loader so i will be able to reference those resources via regular require in js, and regular backgound-image url() in css ?
Thank you for your help
![image](https://user-images.githubusercontent.com/23354177/64586422-cc8c9600-d3ce-11e9-868b-4b5e7eebdbc3.png)

Hi,
I have just started using this library. I have one query regarding css. 
When I passed inline color property , its get applied to the icon.
`<svgicon class="svg-icon" name="copy" slot="activator" @click="createEvent(copyObject.selectType, 'onCopy')" color="red black"></svgicon>` 

This display icon properly.

But when i passed the same color option using css, The icon get filled only with red color. My css class is like 
`.svg-icon {
    width:100px;
    height:100px; 
    color:red black;
}`

Also tried this also. But not working
`.vue-icon path[pid='0'] {
    fill: #42b983;
}
.vue-icon path[pid='1'] {
    fill: #35495e;
}`
Please help.
在跑vue-cli 3.0 的test:unit 时 报了这个错，选的时jest

  [Vue warn]: Unknown custom element: < svg-icon > - did you register the component correctly? For recursive components, make sure to provide the "name" option
![image](https://user-images.githubusercontent.com/37522640/58420785-ce04ad80-80c0-11e9-82b2-6559f127c90b.png)

use 2.1.5 version it's normal

![image](https://user-images.githubusercontent.com/37522640/58420847-f5f41100-80c0-11e9-922f-c33c22e8ca20.png)

This is my Icon;

[mySvg](http://note.youdao.com/noteshare?id=0d46f3b5aedb18ed15ddba4ee379e17c&sub=7D1309D867374F28B6C6544B503BE6DD)

generate Icon

`/* eslint-disable */
var icon = require('vue-svgicon')
icon.register({
  'alarm_manage': {
    width: 48,
    height: 48,
    viewBox: '-10 -9.2 20 18.5',
    data: '<symbol id="svgicon_alarm_manage_a" viewBox="-10 -9.2 20 18.5"><path pid="0" d="M-4.2-.9c0-.2-.2-.3-.4-.2l-.6.1c-.2 0-.3.2-.2.4l.5 1.8c0 .2.2.3.4.2l.5-.1c.2 0 .3-.2.2-.4 0-.2.1-.3.2-.4l.3-.1.2.6c.1.3.4.5.7.5L3.4-.1c.3-.1.5-.4.4-.8l-.6-2.5c-.1-.3-.4-.5-.7-.4l-5.8 1.6c-.3.1-.5.4-.4.8l.2.6-.3.1c-.2 0-.4 0-.4-.2zm1.4-.7l4-1.2c.2 0 .3.1.4.2 0 .2 0 .3-.2.4l-4 1.1c-.2 0-.3 0-.4-.2-.1-.1 0-.3.2-.3zM3.9 3.9V2.8H1.1V2c.4-.2.6-.6.6-1V.7l-2.3.6c0 .3.2.6.5.7v1.8l4 .1z" _fill="#e6eaef"/><path pid="1" d="M0-7.7c3 0 5.8 1.8 7 4.6H5.4L7.7.7 10-3.1H8.7C7-7.9 1.7-10.4-3.1-8.7-6-7.7-8.2-5.3-9-2.3h1.6c1.1-3.2 4-5.4 7.4-5.4zM0 7.7c-2.7 0-5.3-1.5-6.7-3.8h1.3L-7.7 0-10 3.9h1.6c2.1 4.6 7.6 6.7 12.2 4.5 2-.9 3.6-2.5 4.5-4.5H6.7C5.3 6.2 2.7 7.7 0 7.7z" _fill="#e6eaef"/></symbol><g _fill="#e6eaef"><ellipse pid="2" cx="21.1" cy="15.6" rx="2.2" ry="2.3"/><path pid="3" d="M25.5 32.8H3.7L1.8 44.3 1.5 46c0 1.1 7.4 2 18.6 2 6.9 0 12.4-.3 15.6-.9-6-2-10.2-7.7-10.2-14.3zM33.1 19.6c-.6-6.8-1.3-14.4-1.3-14.7 0-2.7-5.2-4.9-11.7-4.9C13.7 0 8.5 2.2 8.5 4.9c0 .5-2.6 25.7-2.6 25.7h19.7c.7-4.7 3.5-8.7 7.5-11zM14 16.3c0-4.3 3-7.7 6.7-7.7s6.7 3.5 6.7 7.7c0 4.3-3 7.7-6.7 7.7S14 20.5 14 16.3z"/><g><path pid="4" d="M46.3 31c-.2.1-.4.1-.6.1-.8 0-1.5-.7-1.5-1.5 0-.6.4-1.2.9-1.4-.6-1-1.5-1.9-2.5-2.5-.2.6-.7.9-1.4.9-.8 0-1.5-.7-1.5-1.5 0-.2 0-.4.1-.6-.5-.1-1-.2-1.6-.2s-1.1.1-1.6.2c.1.2.1.4.1.6 0 .8-.7 1.5-1.5 1.5-.6 0-1.2-.4-1.4-.9-1 .6-1.9 1.5-2.5 2.5.6.2.9.7.9 1.4 0 .8-.7 1.5-1.5 1.5-.2 0-.4 0-.6-.1-.1.5-.2 1-.2 1.6 0 .5.1 1.1.2 1.6.2-.1.4-.1.6-.1.8 0 1.5.7 1.5 1.5 0 .6-.4 1.2-.9 1.4.6 1 1.5 1.9 2.5 2.5.2-.6.7-.9 1.4-.9.8 0 1.5.7 1.5 1.5 0 .2 0 .4-.1.6.5.1 1 .2 1.6.2s1.1-.1 1.6-.2c-.1-.2-.1-.4-.1-.6 0-.8.7-1.5 1.5-1.5.6 0 1.2.4 1.4.9 1-.6 1.9-1.5 2.5-2.5-.6-.2-.9-.7-.9-1.4 0-.8.7-1.5 1.5-1.5.2 0 .4 0 .6.1.1-.5.2-1 .2-1.6 0-.6-.1-1.1-.2-1.6zm-7.9 5.9c-2.4 0-4.4-2-4.4-4.4 0-2.4 2-4.4 4.4-4.4 2.4 0 4.4 2 4.4 4.4 0 2.5-2 4.4-4.4 4.4z"/><circle pid="5" cx="38.4" cy="32.6" r="2.2"/></g></g>'
  }
})`
I dont know why, but one of my svg doesnt generate well. 

all fill attributes are prefixed by "_". So the color fill is ignored : 

my original svg : 

```html
<svg xmlns="http://www.w3.org/2000/svg" width="500" height="500"><circle cx="250" cy="250" r="250" fill="#5479f7"/><path d="M300.62 102.1a125 125 0 1 0-176.78 176.78L250 405v18.87l67.39 66.85v.05a250.35 250.35 0 0 0 178.19-193.71z" fill="#3d5fc1"/><circle cx="211.96" cy="190.22" r="125" fill="#acabb1"/><path d="M212 65.22v250a125 125 0 0 0 0-250z" fill="#898890"/><circle cx="211.96" cy="190.22" r="107.76" fill="#fff"/><path d="M212 82.46V298a107.76 107.76 0 0 0 0-215.52z" fill="#d8d7da"/><path d="M279.08 141.22l-18.29-18.29-54.36 54.36h-50.51v25.86h60.94l62.22-61.93z"/><path fill="#fff" d="M250 217.39h152.17v206.52H250z"/><path fill="#e1e3fa" d="M326.09 217.39h76.09v206.52h-76.09z"/><g fill="#c6c5ca"><path d="M315.22 369.57h65.22v10.87h-65.22z"/><circle cx="288.04" cy="375" r="16.3"/><path d="M315.22 315.22h65.22v10.87h-65.22z"/></g><path d="M282.77 336.96l-14.52-12.85 6.76-7.64 6.62 5.85 14.85-17.97 7.87 6.5-21.58 26.11z"/><path fill="#c6c5ca" d="M315.22 260.87h65.22v10.87h-65.22z"/><path d="M282.77 282.61l-14.52-12.85 6.76-7.64 6.62 5.86L296.48 250l7.87 6.5-21.58 26.11z"/></svg>
```

generated svg : 

``` javascript
 'waitinglist': {
    width: 500,
    height: 500,
    viewBox: '0 0 500 500',
    data: '<circle pid="0" cx="250" cy="250" r="250" _fill="#5479f7"/><path pid="1" d="M300.62 102.1a125 125 0 1 0-176.78 176.78L250 405v18.87l67.39 66.85v.05a250.35 250.35 0 0 0 178.19-193.71z" _fill="#3d5fc1"/><circle pid="2" cx="211.96" cy="190.22" r="125" _fill="#acabb1"/><path pid="3" d="M212 65.22v250a125 125 0 0 0 0-250z" _fill="#898890"/><circle pid="4" cx="211.96" cy="190.22" r="107.76" _fill="#fff"/><path pid="5" d="M212 82.46V298a107.76 107.76 0 0 0 0-215.52z" _fill="#d8d7da"/><path pid="6" d="M279.08 141.22l-18.29-18.29-54.36 54.36h-50.51v25.86h60.94l62.22-61.93z"/><path pid="7" _fill="#fff" d="M250 217.39h152.17v206.52H250z"/><path pid="8" _fill="#e1e3fa" d="M326.09 217.39h76.09v206.52h-76.09z"/><g _fill="#c6c5ca"><path pid="9" d="M315.22 369.57h65.22v10.87h-65.22z"/><circle pid="10" cx="288.04" cy="375" r="16.3"/><path pid="11" d="M315.22 315.22h65.22v10.87h-65.22z"/></g><path pid="12" d="M282.77 336.96l-14.52-12.85 6.76-7.64 6.62 5.85 14.85-17.97 7.87 6.5-21.58 26.11z"/><path pid="13" _fill="#c6c5ca" d="M315.22 260.87h65.22v10.87h-65.22z"/><path pid="14" d="M282.77 282.61l-14.52-12.85 6.76-7.64 6.62 5.86L296.48 250l7.87 6.5-21.58 26.11z"/>'
  }
```

this happened since ive updated the package for latest version.
Hello,
Is somewhere specified the list of different variables, like ${name}, ${width}, ${height}, ${data}, ... that you can use in your custom template for generated icon files ? 

Is it possible to use some custom data-attributes that I want to copy them to generated   [icon content format](https://github.com/MMF-FE/vue-svgicon#custom-icon-content-format) like in documentation and how can i use it or where I need to specify it to be available.
Would potentially be a quick improvement to the package if it would support some basic default a11y settings;

```
<svg role="img" aria-labelledby="icon-title">
  <title id="icon-title">{iconName}</title>
  <path ...>
</svg>
```