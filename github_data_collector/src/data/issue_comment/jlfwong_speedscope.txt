It seems the builds for 12 and latest fail because of different snapshots.
Some profiles can get pretty big, pretty fast, so it'd be convenient if we could upload compressed profiles and have them be decompressed.

something maybe like this? https://www.npmjs.com/package/zstd-codec
There is something strange.

The method "test_ids_from_import_done_exist" appears twice:

![image](https://user-images.githubusercontent.com/414336/70148974-82524280-16a7-11ea-9f2a-290c2e62e1a3.png)

And the second:

![image](https://user-images.githubusercontent.com/414336/70149155-d0674600-16a7-11ea-8543-e7d789f93671.png)

Maybe this happens because once it is the lowest line in the stacktrace, and once there are sub-methods below this method.


Data was created by py-spy.
Feature Request: It would be nice if speedscope would have some kind of filtering.

Either white-listing: only include stacktrace lines which "mycode/mylib" in the path name

Or black-listing: exclude stacktrace lines which contain "framework/standard-library".

I am not able to implement this. But maybe the company I work for could sponsor/finance the implementation.
It would be very nice if speedscope would visualize the memory usage, too.

Of course optional. But if the value (memory usage of process) would be available,
it would be nice to see it.

What do you think?
If WebGL is disabled in the browser the site loads and the browse button works, but nothing happens after selecting a file. Looking in the console there are these messages:

```
Error: Setup failure - speedscope.f741b731.js:93:3612
Error: Cannot find module '109' - demangle-cpp.6caf93ee.js:1:302
Error: Cannot find module '101' - demangle-cpp.6caf93ee.js:1:302
```

I looked up the mangled code and that error does seem to be thrown if `getContext("webgl", ...)` fails, so it seems to check out. I don't know how but some other sites will show a more 'friendly' error if WebGL is disabled but the site requires it.

OS: Windows 7
Browser: firefox 70.0.1 (64-bit) with `webgl.disabled` set to `true` in `about:config`
I tried chrome and it worked fine, I couldn't see how to disable webgl on chrome (there's no setting at least) so I couldn't test if that would cause it to fail on chrome too.
If I look at the "Sandwitch" view, then I can't see the difference between symbol names.

In this case there is "execute_child" twice. I guess one is from the python module subprocess and the next is from the module subprocess32. It would be very nice if you could the details of a symbol name like in the other views.

![image](https://user-images.githubusercontent.com/414336/69539037-f859f980-0f83-11ea-8367-a164b15e2db6.png)



This is related to #240. An easier way to understand that you can set the viewport in the upper part.

Up to now the mouse cursor is like in this screenshot:

![image](https://user-images.githubusercontent.com/414336/69531130-a01afb80-0f73-11ea-9b8b-962019943704.png)

It would be more intuitive if the cursor would look like this: https://www.iconfinder.com/icons/927852/cursor_design_development_drag_pointer_select_icon
Here a small hint, that the UX could be improved.

I needed to think to understand that the upper rectangle marks the viewport for the middle part of the windows.

With other words, I needed some time to understand the pink arrow in this screenshot:

![image](https://user-images.githubusercontent.com/414336/69530401-449c3e00-0f72-11ea-8145-ede0e340f8e9.png)


How could this get improved?

Maybe a different color for the rectangle would help. I hope you care for UX issues like this. And I guess you have a better idea how to fix this, than my idea.

CTF has the nice ability to encode custom counters that then get plotted as bar charts. It would be great if speedscope could do that too, then I could probably replace my usage of chrome://tracing with speedscope already.

See https://github.com/jlfwong/speedscope/issues/235 for an example CTF trace with various counters, you can open it in chrome://tracing to see how it looks like there.

Cheers 