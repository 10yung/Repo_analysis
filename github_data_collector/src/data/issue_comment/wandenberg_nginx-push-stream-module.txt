My nginx is running in a docker swarm. I realized recently that all (or almost all) of subscribers are at the same worker. Why is it so? How are the subscribers distributed among workers?

Output from push_stream_channels_statistics:
`<infos>
<channels>971</channels>
<wildcard_channels>0</wildcard_channels>
<published_messages>17794</published_messages>
<stored_messages>17794</stored_messages>
<messages_in_trash>0</messages_in_trash>
<channels_in_delete>0</channels_in_delete>
<channels_in_trash>0</channels_in_trash>
<subscribers>15</subscribers>
<uptime>2160</uptime>
<by_worker>
<worker>
<pid>6</pid>
<subscribers>1</subscribers>
<uptime>2160</uptime>
</worker>
<worker>
<pid>7</pid>
<subscribers>14</subscribers>
<uptime>2160</uptime>
</worker>
<worker>
<pid>8</pid>
<subscribers>0</subscribers>
<uptime>2160</uptime>
</worker>
<worker>
<pid>9</pid>
<subscribers>0</subscribers>
<uptime>2160</uptime>
</worker>
</by_worker>
</infos>`
I have a problem when sub or pub into the android client, using OkHttp or another library supporting Http in Android.

If possible, there is an android client library used to nginx-push-stream?

Or any suggestion using Library Http for android client library

thank you
Hi. For js client I must use only pushstream.js? Or I can use other?

Is it possible to publish events into channels from other nginx modules?
like mirror, i.e.
```conf
location = /ws {
    push_stream_subscriber websocket;
    push_stream_channels_path $arg_id;
    push_stream_created /created;
    push_stream_destroyed /destroyed;
    push_stream_subscribed /subscribed;
    push_stream_unsubscribed /unsubscribed;
    push_stream_message_template "{\"id\":~id~,\"channel\":\"~channel~\",\"text\":\"~text~\"}";
}
location = /created {
    proxy_pass http://backend;
}
location = /destroyed {
    proxy_pass http://backend;
}
location = /subscribed {
    proxy_pass http://backend;
}
location = /unsubscribed {
    proxy_pass http://backend;
}
```
Hello!

I'm having a problem with large trash queue. It grows slowly.
version of push-stream-module 0.5.4
```
$ nginx -V 2>&1 | sed 's/--/\n--/g'                                                                                                                      
nginx version: nginx/1.10.2
built by gcc 4.6.3 (Ubuntu/Linaro 4.6.3-1ubuntu5) 
built with OpenSSL 1.0.2j  26 Sep 2016
TLS SNI support enabled
configure arguments: 
--prefix=/var/www/nginx 
--sbin-path=/usr/sbin/nginx 
--conf-path=/etc/nginx/nginx.conf 
--lock-path=/var/lock/subsys/nginx 
--with-ipv6 
--with-http_ssl_module 
--with-http_realip_module 
--with-http_stub_status_module 
--with-http_secure_link_module 
--with-cc-opt='-O2 -g -pipe -Wall -Wp,-D_FORTIFY_SOURCE=2 -fexceptions -fstack-protector 
--param=ssp-buffer-size=4 -m64 -mtune=generic' 
--with-ld-opt=-Wl,-E,-rpath,/var/lib/jenkins/workspace/docker_container/nginx_common/lua/image/luajit/lib 
--error-log-path=/var/log/container/nginx/error.log 
--http-log-path=/var/log/container/nginx/access.log 
--pid-path=/var/run/nginx.pid 
--without-http_fastcgi_module 
--without-http_uwsgi_module 
--without-http_scgi_module 
--http-proxy-temp-path=/var/lib/nginx/tmp/proxy 
--http-client-body-temp-path=/var/lib/nginx/tmp/client_body 
--with-http_v2_module 
--add-module=/var/lib/jenkins/workspace/docker_container/nginx_pushstream/nginx_module_devkit 
--add-module=/var/lib/jenkins/workspace/docker_container/nginx_pushstream/out/nginx_module_lua 
--add-module=/var/lib/jenkins/workspace/docker_container/nginx_pushstream/nginx_module_pushstream 
--with-openssl=/var/lib/jenkins/workspace/docker_container/nginx_common/openssl/openssl-1.0.2j

```
these options are default:
```
push_stream_shared_memory_size 
push_stream_channel_deleted_message_text
push_stream_channel_inactivity_time
push_stream_message_ttl
```
in error logs I have nothing corresponding to the problem
[zabbix graph](http://polariton.ad-l.ink/6v4j8l572/image.png)
nginx v1.14.0 + nginx-push-stream-module v0.5.4:
```
#0  ngx_shmtx_lock (mtx=0x6d726f663d656d61) at src/core/ngx_shmtx.c:78
#1  0x00007fcbc9541529 in ngx_http_push_stream_worker_subscriber_cleanup (r=<value optimized out>)
    at modules/nginx_push_stream_module/src/ngx_http_push_stream_module_utils.c:1554
#2  ngx_http_push_stream_cleanup_request_context (r=<value optimized out>)
    at modules/nginx_push_stream_module/src/ngx_http_push_stream_module_utils.c:1528
#3  0x00007fcbc953ee29 in ngx_http_push_stream_run_cleanup_pool_handler (r=0x8cc7050)
    at modules/nginx_push_stream_module/src/ngx_http_push_stream_module_utils.c:863
#4  ngx_http_push_stream_send_response_finalize_for_longpolling_by_timeout (r=0x8cc7050)
    at modules/nginx_push_stream_module/src/ngx_http_push_stream_module_utils.c:900
#5  0x0000000000432c72 in ngx_event_expire_timers () at src/event/ngx_event_timer.c:94
#6  0x0000000000432501 in ngx_process_events_and_timers (cycle=0x269c000) at src/event/ngx_event.c:256
#7  0x0000000000439d48 in ngx_worker_process_cycle (cycle=0x269c000, data=<value optimized out>)
    at src/os/unix/ngx_process_cycle.c:750
#8  0x000000000043813a in ngx_spawn_process (cycle=0x269c000, proc=0x439d10 <ngx_worker_process_cycle>, data=0x17,
    name=0x4d39f6 "worker process", respawn=-4) at src/os/unix/ngx_process.c:199
#9  0x000000000043953c in ngx_start_worker_processes (cycle=0x269c000, n=24, type=-4) at src/os/unix/ngx_process_cycle.c:359
#10 0x000000000043a5bc in ngx_master_process_cycle (cycle=0x269c000) at src/os/unix/ngx_process_cycle.c:244
#11 0x00000000004144bc in main (argc=<value optimized out>, argv=<value optimized out>) at src/core/nginx.c:382
```

I hope this helps you find the error !
HI,
How can I connect push stream long poling in auto scaling servers? just like cross domain
Thanks

hi, wandenberg
first of all, thank you very much for your open source project.  I am very lucky to encounter it
Now, I have some problems. I hope you can help me. Thank you.

version: 0.5.1

### 1st problem: memory leak
function ngx_http_push_stream_output_filter, 
if ngx_http_output_filter return not NGX_OK, the parameter in will not call ngx_chain_update_chains, memory leak or not?

### 2st problem: dead lock
struct ngx_http_push_stream_shm_data_s, channels_mutex, only 10, all the channel share them, If a running channel use the same lock as the channel to be deleted, There will be a deadlock
first lock--->channel->mutex
second lock---->data->channels_trash_mutex
Look at the following two process GDB stacks

(gdb) bt
#0  0x0000003a3060d720 in sem_wait () from /lib64/libpthread.so.0
#1  0x0000000000427975 in ngx_shmtx_lock (mtx=0x2b22d33292e0) at src/core/ngx_shmtx.c:110
#2  0x00000000004d7849 in nxg_http_push_stream_free_channel_memory (data=0x2b22d3319000, force=0) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_utils.c:1248
#3  ngx_http_push_stream_free_memory_of_expired_channels (data=0x2b22d3319000, force=0) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_utils.c:1229
#4  ngx_http_push_stream_free_memory_of_expired_messages_and_channels_data (data=0x2b22d3319000, force=0) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_utils.c:1338
#5  0x00000000004dc1eb in ngx_http_push_stream_memory_cleanup (ev=<value optimized out>) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_utils.c:1274
#6  ngx_http_push_stream_memory_cleanup_timer_wake_handler (ev=<value optimized out>) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_utils.c:1479
#7  0x000000000043452b in ngx_event_expire_timers () at src/event/ngx_event_timer.c:94
#8  0x000000000043434d in ngx_process_events_and_timers (cycle=0x21e4870) at src/event/ngx_event.c:262
#9  0x000000000043b5e5 in ngx_worker_process_cycle (cycle=0x21e4870, data=<value optimized out>) at src/os/unix/ngx_process_cycle.c:824
#10 0x0000000000439c9c in ngx_spawn_process (cycle=0x21e4870, proc=0x43b4ea <ngx_worker_process_cycle>, data=0x4, name=0x51e4d3 "worker process", respawn=-3) at src/os/unix/ngx_process.c:198
#11 0x000000000043a9bb in ngx_start_worker_processes (cycle=0x21e4870, n=14, type=-3) at src/os/unix/ngx_process_cycle.c:368
#12 0x000000000043bc76 in ngx_master_process_cycle (cycle=0x21e4870) at src/os/unix/ngx_process_cycle.c:140
#13 0x000000000041d42b in main (argc=<value optimized out>, argv=<value optimized out>) at src/core/nginx.c:408
=========================================
(gdb) bt
#0  0x0000003a3060d720 in sem_wait () from /lib64/libpthread.so.0
#1  0x0000000000427975 in ngx_shmtx_lock (mtx=0x2b22d3319110) at src/core/ngx_shmtx.c:110
#2  0x00000000004d407e in ngx_http_push_stream_throw_the_message_away (msg=0x2b23a73a3900, data=0x2b22d3319000) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_utils.c:1391
#3  0x00000000004d4220 in ngx_http_push_stream_ensure_qtd_of_messages (data=0x2b22d3319000, channel=0x2b233b083900, max_messages=6, expired=0)
    at ../nginx-push-stream-module/src/ngx_http_push_stream_module_utils.c:84
#4  0x00000000004d92a8 in ngx_http_push_stream_add_msg_to_channel (mcf=0x21e7aa0, log=0x2306bb0, channel=0x2b233b083900, text=<value optimized out>, len=476, event_id=<value optimized out>, event_type=0x0, 
    store_messages=1, temp_pool=0x239eaa0) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_utils.c:440
#5  0x00000000004decb5 in ngx_http_push_stream_publisher_body_handler (r=0x239eaf0) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_publisher.c:271
#6  0x000000000045a429 in ngx_http_read_client_request_body (r=0x239eaf0, post_handler=0x4deb1e <ngx_http_push_stream_publisher_body_handler>) at src/http/ngx_http_request_body.c:176
#7  0x00000000004d59a1 in ngx_http_push_stream_publisher_handle_after_read_body (r=<value optimized out>, post_handler=<value optimized out>)
    at ../nginx-push-stream-module/src/ngx_http_push_stream_module_publisher.c:147
#8  0x00000000004df0ed in ngx_http_push_stream_publisher_handler (r=0x239eaf0) at ../nginx-push-stream-module/src/ngx_http_push_stream_module_publisher.c:122
#9  0x000000000044c7fe in ngx_http_core_content_phase (r=0x239eaf0, ph=0x22708a0) at src/http/ngx_http_core_module.c:1407
#10 0x0000000000447113 in ngx_http_core_run_phases (r=0x239eaf0) at src/http/ngx_http_core_module.c:888
#11 0x0000000000447226 in ngx_http_handler (r=<value optimized out>) at src/http/ngx_http_core_module.c:871
#12 0x000000000044fe09 in ngx_http_process_request (r=0x239eaf0) at src/http/ngx_http_request.c:1902
#13 0x00000000004525c4 in ngx_http_process_request_headers (rev=<value optimized out>) at src/http/ngx_http_request.c:1333
#14 0x0000000000452b63 in ngx_http_process_request_line (rev=0x2b2542139280) at src/http/ngx_http_request.c:1013
#15 0x0000000000452e6e in ngx_http_keepalive_handler (rev=0x2b2542139280) at src/http/ngx_http_request.c:3183
#16 0x000000000043cd97 in ngx_epoll_process_events (cycle=0x21e4870, timer=<value optimized out>, flags=<value optimized out>) at src/event/modules/ngx_epoll_module.c:685
#17 0x00000000004342f3 in ngx_process_events_and_timers (cycle=0x21e4870) at src/event/ngx_event.c:248
#18 0x000000000043b5e5 in ngx_worker_process_cycle (cycle=0x21e4870, data=<value optimized out>) at src/os/unix/ngx_process_cycle.c:824
#19 0x0000000000439c9c in ngx_spawn_process (cycle=0x21e4870, proc=0x43b4ea <ngx_worker_process_cycle>, data=0x1, name=0x51e4d3 "worker process", respawn=-3) at src/os/unix/ngx_process.c:198
#20 0x000000000043a9bb in ngx_start_worker_processes (cycle=0x21e4870, n=14, type=-3) at src/os/unix/ngx_process_cycle.c:368
#21 0x000000000043bc76 in ngx_master_process_cycle (cycle=0x21e4870) at src/os/unix/ngx_process_cycle.c:140
#22 0x000000000041d42b in main (argc=<value optimized out>, argv=<value optimized out>) at src/core/nginx.c:408

thanks, best regard








