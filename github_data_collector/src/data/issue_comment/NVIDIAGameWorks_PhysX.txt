I use PxBinaryConverter to convert a PxCollection that holding about 2 million PxActors from Win64 format to Linux64 format.
It tooks me 9 hours.
Profiling shows that 99.5% of CPU time is consumed by PointerRemap::getObjectRef.
This patch reduced the conversion time from 9 hours to 120 seconds.
Tested with GCC 9.2.0
I have a big issue with the physX Plugin. I have a Character created and the shape is little more detailed. I have tried to make a custom mesh for the kinemetric option and the cloth still goes through the character. Am I missing something, is the cloth plugin not working, why does the plugin have a custom mesh but doesn't work for clothing, I don't know. But I really need to get things going with my game.
![apexcloth](https://user-images.githubusercontent.com/59774847/72208991-4d10ef80-34b2-11ea-9bcf-79e672022fd8.jpg)

Hi there,

I'm using PhysX4.1 library and the following Assert occurs frequently.
```
PhysXFoundation_64.dll!`anonymous namespace'::DefaultAssertHandler::operator()(const char * expr, const char * file, int line, bool & ignore) Line 65	C++
PhysX_64.dll!physx::Sq::IncrementalAABBPrunerCore::removeObject(const unsigned int poolIndex, const unsigned int poolRelocatedLastIndex, unsigned int & timeStamp) Line 148	C++
PhysX_64.dll!physx::Sq::ExtendedBucketPruner::removeObject(const physx::Sq::PrunerPayload & object, unsigned int objectIndex, const physx::Sq::PrunerPayload & swapObject, unsigned int swapObjectIndex, unsigned int & timeStamp) Line 378	C++
PhysX_64.dll!physx::Sq::AABBPruner::removeObjects(const unsigned int * handles, unsigned int count) Line 235	C++
PhysX_64.dll!physx::Sq::SceneQueryManager::removePrunerShape(unsigned int compoundId, unsigned __int64 data) Line 375	C++
PhysX_64.dll!physx::NpShapeManager::teardownAllSceneQuery(physx::Sq::SceneQueryManager & sqManager, const physx::PxRigidActor & actor) Line 303	C++
PhysX_64.dll!removeActorT<physx::NpRigidDynamic,physx::Scb::Body>(physx::NpRigidDynamic & actor, physx::Scb::Body & scbActor, physx::NpScene * scene, bool wakeOnLostTouch, bool removeFromAggregate) Line 786	C++
PhysX_64.dll!physx::NpScene::removeRigidDynamic(physx::NpRigidDynamic & body, bool wakeOnLostTouch, bool removeFromAggregate) Line 801	C++
PhysX_64.dll!physx::NpScene::removeActorInternal(physx::PxActor & actor, bool wakeOnLostTouch, bool removeFromAggregate) Line 685	C++
PhysX_64.dll!physx::NpScene::removeActor(physx::PxActor & actor, bool wakeOnLostTouch) Line 667	C++
```

Assertion fails on "PX_ASSERT(foundEntry);" and mAABBTree[0].tree, mAABBTree[1].tree are pointing to Null.
```
bool IncrementalAABBPrunerCore::removeObject(const PoolIndex poolIndex, const PoolIndex poolRelocatedLastIndex, PxU32& timeStamp)
{
	// erase the entry and get the data
	IncrementalPrunerMap::Entry entry;
	bool foundEntry = true;
	const PxU32 treeIndex = mAABBTree[mLastTree].mapping.erase(poolIndex, entry) ? mLastTree : mCurrentTree;
	// if it was not found in the last tree look at the current tree
	if(treeIndex == mCurrentTree)
		foundEntry = mAABBTree[mCurrentTree].mapping.erase(poolIndex, entry);	// exit somethings is wrong here, entry was not found here
	PX_ASSERT(foundEntry);
	if(!foundEntry)
		return false;	// tree must exist
	PX_ASSERT(mAABBTree[treeIndex].tree);
	CoreTree& tree = mAABBTree[treeIndex];
	timeStamp = tree.timeStamp;
```

Can anyone help me solve this problem?

Thanks.
* Created new 'emscripten' platform, using the linux build  as a template
* emscripten build does not support snippets/samples(although this
support should be possible to add)
* after configuring emscripten in the local environment, running a standard generate_projects.sh, selecting emscripten, and
`make` in a build configuration directory builds a wasm/js file for
loading in the browser.
* a new module has been added PhysxWebBindings which only exists in the
emscripten platform. This includes(for now) a single cpp file describing
th embind bindings.
* This build has only been tested on mac and WSL. This is not expected
to work in windows.

The bindings include what is used today by Amazon Sumerian, it is expected that other consumers will  pull this down and augment the bindings as desired, although I suppose it would be possible to bind everything.
when use PxGeometryQuery::sweep sweep box with convexmesh at some direction，it return wrong position in the convexmesh。what cause it？
I've installed cuda 10.1 for GeForce RTX 2080. But when I finished installing, I try to use nbody to test. There is an error presented by cudaErrorOperatingSystem:

**CUDA error at bodysystemcuda_impl.h:183 code=304(cudaErrorOperatingSystem) "cudaGraphicsGLRegisterBuffer(&m_pGRes[i], m_pbo[i], cudaGraphicsMapFlagsNone)"** 

Can anyone help me solve this problem? Thank you!
mHullDataHullVertices is allocated with the incorrect size in ConvexHullBuilder::init() and ConvexPolygonsBuilder::computeHullPolygons(). Currently, it's:

mHullDataHullVertices			= reinterpret_cast<PxVec3*>(PX_ALLOC(sizeof(PxVec3) * mHull->mNbHullVertices + 1, "PxVec3"));

But should be:

mHullDataHullVertices			= reinterpret_cast<PxVec3*>(PX_ALLOC(sizeof(PxVec3) * (mHull->mNbHullVertices + 1), "PxVec3"));


Changing the Base SDK to tvOS in the Build Settings of the cmake generated iOS Xcode project allows the successful compilation of tvOS libraries that link and work as expected. tvOS is essentially identical to iOS for this kind of library.

Can we add support for generating tvOS projects as part of the generate_projects.sh script ?
How can I compile physx4 in Linux？Have a tutorial?Thank you！