PHP 7.4 compatibility
https://github.com/scssphp/scssphp
I'm using master branch.

Whatever I do I have this kind of source map (here's a minimal example):
``{"version":3,"file":"cms.css","sourceRoot":"/","sources":["(stdin)"],"names":[],"mappings":"AAAA"}``

Instead of the name of _"cms.scss"_ (in my case) there is _"(stdin)"_

This is the simple cms.css:
``h1 {
  color: blue;
}
/*# sourceMappingURL=cms.css.map */``


The compiler works fine even in complex situations with importing Bootstrap framework. The generated css is well. 

Having a short look into the code I have seen that the word _(stdin)_ comes from the constructor of the parser class which is called by the compile function.

Don't know what I have to change or if it's a bug.
Do you or anyone here know of a PHP based autoprefixer, like https://github.com/postcss/autoprefixer.

We use scssphp in Tiki 19 now (for which many thanks!) and it seems we need our prefixes fixing, and it seems like it might be a good option to include in here. The data as to what needs prefixing all seems to be in https://github.com/Fyrd/caniuse - wondering how hard it can be? :)

TIA

I mean will in the next Version / Patch can add Set_cache option ? for rename Cache Folder into something like Public, etc and True/False to Encrypt Cache file name ? this will be useful for develop website in PHP Framework when in ENVIROMENT Dev / Prod.

Example : 
```
if(ENVIRONMENT == 'production')
{
       replace this look like 
       echo link_tag('assets/my_lib/css/stylesheet/scss_cache/3c47a77b13479ae1af0dc793e5a0ae30.css');

       into this
       echo link_tag('assets/my_lib/css/stylesheet/public/my_style.css');
}
else
{
       echo link_tag('assets/my_lib/css/scss.php/my_style.scss');
}
```
No need to 

- overload server and play with .htaccess

- copy the finally update to css

Benefit

 just loadding file cache instead in Prod mode it done.
I am looking to add annotations to the parse tree.

The `@import` rule in SASS can be used in two ways:
1. As a css import rule resolving in `@import: url(url)` when compiled.
2. As a rule which actually imports/includes another sass or css file inside the currently compiled on.This particularly useful when your assets are managed by bower and you want to compile and minify everything into a single css file.

Here is a [link](http://stackoverflow.com/a/30279590/393805) explaining what I'm talking about. Some important links from there:
1. The [logic](https://github.com/sass/libsass/blob/3.3.2/src/file.cpp#L298) behind how the `@import` rule works.
2. The [PR](https://github.com/sass/libsass/pull/754) when this was implemented.

In the current version of `scssphp` the `@import` rule will result in the following compiled css:

```
@import '../other/subdir/import_me'
```

instead of actually importing the content of the `import_me` file.

After digging through the source code of `scssphp` I found out the solution is quite simple. One should only append `$url.'.css'` to the [Compiler.php#L3218](https://github.com/leafo/scssphp/blob/v0.6.3/src/Compiler.php#L3218). Afterwards everything should work as expected in both scenarios when using `@import`.

The website http://leafo.net/scssphp is outdated, but it is still shown first in Google.
It would be a shame for such a great library when people are disappointed because of the old version.

It would be great when the website is updated or forwarded to new github.io page.

A simple to use PHPStorm integration for Leafo/scssphp
