Hello

This is an issue to follow the release of rspec-rails 4.

As mentioned in https://github.com/rspec/rspec-rails/pull/2242#issuecomment-574546068 we have pending PR/issue that needs review or work. 

I think we should tag them with [v4.0](https://github.com/rspec/rspec-rails/pulls?utf8=%E2%9C%93&q=is%3Aopen+sort%3Aupdated-desc+label%3Av4.0+) or set a milestone to help us to work on.

At the moment I don't know where I could help.

Thanks üåù
Disable monkey patching and fix specs related to this.
<!--

Below are a few steps it'd be super if you could follow.
If you can't do all of these, don't worry, but if you can it'll help us
resolve your bug faster!

-->

## What Ruby, Rails and RSpec versions are you using?

**Ruby version:** 2.6.5
**Rails version:** 6.0.2.1
**RSpec version:** 3.9

<details>

```
ruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-darwin19]
Rails 6.0.2.1
RSpec 3.9
  - rspec-core 3.9.1
  - rspec-expectations 3.9.0
  - rspec-mocks 3.9.1
  - rspec-rails 3.9.0
  - rspec-support 3.9.2
```

</details>

<!--

You can run

```
bundle exec ruby --version
bundle exec rails --version
bundle exec rspec --version
```

-->

## Observed behaviour

<!--
please provide a concise description of the behaviour you are observing with
RSpec and Rails
-->

Test helpers provided by Rails should be useable out of the box. Specifically, their Minitest lifecycle hooks should be honoured automatically, by default.

## Expected behaviour

<!--
Please provide a description of what you expect to be happening, and how that
differs from the current behaviour.
-->

Some test helpers do not work out of the box, as their lifecycle hooks are not called.

Specifically, `ActiveSupport::Testing::TimeHelpers` can be included, and `freeze_time` will work, but `TimeHelpers#after_teardown` is not called, meaning it doesn't clean up after itself as it is supposed to.

To get it to work requires including `RSpec::Rails::MinitestLifecycleAdapter`, which is not obvious, and error prone.

See in-depth discussion and motivation in rubocop-hq/rubocop-rails#38.

## Can you provide an example app?

<!--
This step is probably the most important in allowing us to quickly debug
your issue, and we typically ask that you follow these steps:

1. `rails new` an app at the specific version of ruby and rails that you are
   using
2. commit that app, so that we have the rails skeleton in a separate commit
3. Make all the changes necessary (adding RSpec, models, specs, controllers,
   etc) to reproduce the issue. There should be a failing test or tests that you
   expect to pass. We'll run `bundle exec rspec`, but if you can provide a
   readme with more detailed instructions that'd be amazing :)
4. Commit
5. Provide a link to a github repo, a description of the app and what you're expecting here
-->

I have constructed an example usage of `ActiveSupport::Testing::TimeHelpers#freeze_time` in [this repository](https://github.com/sambostock/rspec_rails_minitest_compatibility).

**The test does not "fail", due to the difficulty of testing test hooks. However, it `puts` messages which indicate if it is working or not.**

### TL;DR

```ruby
describe 'TimeHelpers#freeze_time' do
  it 'works' { freeze_time }
end
```

The test above doesn't work unless the following is added to `spec/rails_helper.rb`

```ruby
  config.include ActiveSupport::Testing::TimeHelpers
```

This is unfortunate, but acceptable. However, the `TimeHelpers#after_teardown` hook **fails to run** unless we also add

```ruby
config.include RSpec::Rails::MinitestLifecycleAdapter
```

This means time is left frozen after the test, and violates the contract of `freeze_time`, which is supposed to always cleanup.
Closes #2230

Ouf, this is quite some work... üòÅ 

## TODO

- [ ] Make the generated specs actually work
- [ ] Implement differences for `--api` flag
- [ ] Fix the problem from #2046 ?
- [ ] Integration test?
- [ ] Fix the [double request spec problem](https://github.com/rspec/rspec-rails/issues/2230#issuecomment-573320813)
- [ ] Add appendix with example results into PR body
- [ ] Consistent generation of paths/urls?
As I try to get up to speed to potentially make a PR to rspec-rails... I unfortunately don't seem to have green tests even off of un-edited master. But I see master is green on travis. So I may be missing a setup step or something? The relevant docs at https://github.com/rspec/rspec-rails/blob/master/BUILD_DETAIL.md don't seem to mention anything special. 

I can get further by first running `bundle exec rake` on a fresh checkout, instead of just doing `bundle exec cucumber`. The stuff in default rake task seems to do some necessary setup -- I get further running tests this way. 

But even despite that, still some cucumber failures:

```
/Users/jrochkind/.rubies/ruby-2.5.3/bin/ruby -S bundle exec cucumber --tag ~@rails_post_5 --tag ~@system_test --tag ~@rails_post_6
/Users/jrochkind/.gem/ruby/2.5.3/gems/gherkin-2.12.2/lib/gherkin/formatter/filter_formatter.rb:105: warning: constant ::Fixnum is deprecated
/Users/jrochkind/.gem/ruby/2.5.3/gems/gherkin-2.12.2/lib/gherkin/formatter/filter_formatter.rb:105: warning: constant ::Fixnum is deprecated
Using the default profile...
..........................................................................................................................................................................F...F...F......................................................F...F..............................................................................................................................................................

(::) failed steps (::)

expected that command "bin/rspec spec" has exit status of "0", but has "1". (RSpec::Expectations::ExpectationNotMetError)
features/mailer_specs/mailer_spec.feature:53:in `Then the examples should all pass'

expected that command "bin/rspec spec" has exit status of "0", but has "1". (RSpec::Expectations::ExpectationNotMetError)
features/mailer_specs/url_helpers.feature:62:in `Then the examples should all pass'

expected that command "bin/rspec spec" has exit status of "0", but has "1". (RSpec::Expectations::ExpectationNotMetError)
features/mailer_specs/url_helpers.feature:82:in `Then the examples should all pass'

expected that command "bin/rspec spec/mailers/user_mailer_spec.rb" has exit status of "0", but has "1". (RSpec::Expectations::ExpectationNotMetError)
features/matchers/have_enqueued_mail_matcher.feature:60:in `Then the examples should all pass'

expected that command "bin/rspec spec/mailers/user_mailer_spec.rb" has exit status of "0", but has "1". (RSpec::Expectations::ExpectationNotMetError)
features/matchers/have_enqueued_mail_matcher.feature:78:in `Then the examples should all pass'

Failing Scenarios:
cucumber features/mailer_specs/mailer_spec.feature:29 # Scenario: using URL helpers without default options
cucumber features/mailer_specs/url_helpers.feature:46 # Scenario: using URL helpers with default options
cucumber features/mailer_specs/url_helpers.feature:65 # Scenario: using URL helpers without default options
cucumber features/matchers/have_enqueued_mail_matcher.feature:45 # Scenario: Checking mailer class and method name
cucumber features/matchers/have_enqueued_mail_matcher.feature:63 # Scenario: Checking mailer enqueued time

113 scenarios (5 failed, 108 passed)
390 steps (5 failed, 385 passed)
8m15.903s
```

Any ideas, or tips for how to run tests and get them green on a developer checkout?  Anything that should be added to the developer docs? I am not very familiar with cucumber. 



Up for discussion obviously

**Is your feature request related to a problem? Please describe.**

I'm always frustrated when the files from a generator are generated do result in linting tools (mostly `rubocop`) screaming at me.

I know obviously that completely adhering to one style is obviously a bit pointless. But the first one rubocop offense top of the file. String literals are not frozen. And a rspec test file completely full of string literals. This is **not a Style issue**, it is a technical issue.

I think it would help developer UX when that would not be necessary to change after the generator execution.

**Describe the solution you'd like**

Template files start with the now very common `frozen_string_literal: true` pragma.

**Describe alternatives you've considered**

- Excluding the cop check from `spec` directory. Uncool
- Freeze strings by default when executing the ruby interpreter? yeah, not happening. To cumbersome, too brittle.

**Additional context**

It was even decided that string literals will not be frozen by default with Ruby 3. So the problem will not go away automatically when the rails projects are getting updated to ruby 3

See: https://bugs.ruby-lang.org/issues/11473#note-53
Similar problem like in #2056. Upon using `rails generate scaffold` it would be good if controller tests would not get generated and instead request specs are generated.
# Context

Rails offer the possibility to create our own set of generators [[1]](https://guides.rubyonrails.org/generators.html#customizing-your-workflow). While executing the following command 

```
bin/rails generate generator my_awesome_generator
```

the test framework is called

See [hook_for :test_framework](https://github.com/rails/rails/blob/v6.0.1/railties/lib/rails/generators/rails/generator/generator_generator.rb#L15)

RSpec must give the expected generator

# Problem 

The given command get this error 

```
bin/rails generate generator foo
      create  lib/generators/foo
      create  lib/generators/foo/foo_generator.rb
      create  lib/generators/foo/USAGE
      create  lib/generators/foo/templates
       error  rspec [not found]
``` 

# History

@yhirano55 provided an implementation https://github.com/rspec/rspec-rails/pull/1847 Jul 19, 2017, which I don't know why it wasn't integrated in the first place, @penelopezone?

@tragiclifestories opened an issue about it https://github.com/rspec/rspec-rails/issues/2084 on  Feb 26, 2019.

@ConSou implemented a version https://github.com/rspec/rspec-rails/pull/2085 the same day and it was merged a couple of days after by @JonRowe on Mar 1, 2019.

However, as @kdiogenes commented a couple of days ago here https://github.com/rspec/rspec-rails/pull/2085#discussion_r348795229 this doesn't work. 

# Environment

* Rails 6.0.1
* Rspec Rails (3.9.0)

- [1] https://guides.rubyonrails.org/generators.html#customizing-your-workflow

This PR fix the issue.

```
bin/rails generate generator --help
Running via Spring preloader in process 26116
Usage:
  rails generate generator NAME [options]

Options:
      [--skip-namespace], [--no-skip-namespace]  # Skip namespace (affects only isolated applications)
      [--namespace], [--no-namespace]            # Namespace generator under lib/generators/name
                                                 # Default: true
  -t, [--test-framework=NAME]                    # Test framework to be invoked
                                                 # Default: rspec

Rspec options:
  [--generator-specs], [--no-generator-specs]  # Generate generator specs

Runtime options:
  -f, [--force]                    # Overwrite files that already exist
  -p, [--pretend], [--no-pretend]  # Run but do not make any changes
  -q, [--quiet], [--no-quiet]      # Suppress status output
  -s, [--skip], [--no-skip]        # Skip files that already exist

Description:
    Stubs out a new generator at lib/generators. Pass the generator name as an argument,
    either CamelCased or snake_cased.

Example:
    `rails generate generator Awesome`

    creates a standard awesome generator:
        lib/generators/awesome/
        lib/generators/awesome/awesome_generator.rb
        lib/generators/awesome/USAGE
        lib/generators/awesome/templates/
        test/lib/generators/awesome_generator_test.rb
```

```
Rspec options:
  [--generator-specs], [--no-generator-specs]  # Generate generator specs
```

```
bin/rails generate generator awesome
Running via Spring preloader in process 25980
       exist  lib/generators/awesome
      create  lib/generators/awesome/awesome_generator.rb
      create  lib/generators/awesome/USAGE
       exist  lib/generators/awesome/templates
      invoke  rspec
      create    spec/generator/awesomes_generator_spec.rb
```

## What Ruby, Rails and RSpec versions are you using?

Ruby version: 2.6.5
Rails version: 6.0.0
RSpec versions:
    rspec-rails 4.0.0.pre
    rspec-core 3.10.0.pre
    rspec-expectations 3.10.0.pre
    rspec-mocks 3.10.0.pre
    rspec-support 3.10.0.pre

(I wouldn't normally use non-stable releases, but I had the same issues as the user on [this thread](https://github.com/rspec/rspec-rails/issues/2177), and solved them per the suggestion there)

## Observed behaviour

In an Rspec test in Rails >6.0.0 and (eg) a Devise confirmable user, run the following command:

     expect { nil }.not_to change { user.confirmation_sent_at }

(where `nil` can be any operation, and `#confirmation_sent_at` is a standard ActiveRecord attribute method, returning an instance of ActiveSupport::TimeWithZone)

This fails with a message like expected 'user.confirmation_sent_at' not to have changed, but did change from 2019-11-20 12:43:29.805732000 +0000 to 2019-11-20 12:43:29.805732000 +0000 - where the two times are identical.

## Expected behaviour

The test should pass

## Can you provide an example app?

I set up a Rails app without Devise, and with the same versions of the relevant testing gems, and unfortunately it didn't recreate the issue. I don't have time to plug in Devise/check the other libraries until it triggers the edge case, and in the meantime I can work around the bug easily enough by just storying the values of confirmation_sent_at, so I'll paste our Gemfile.lock below in the hope that this is helpful to you:

```
GIT
  remote: https://github.com/rspec/rspec-core
  revision: b7067c5da4fde57cbbff739b168008482e61db44
  specs:
    rspec-core (3.10.0.pre)
      rspec-support (= 3.10.0.pre)

GIT
  remote: https://github.com/rspec/rspec-expectations
  revision: 99f9bcaff2a6f3d82f4e350e829eca6ab015694f
  specs:
    rspec-expectations (3.10.0.pre)
      diff-lcs (>= 1.2.0, < 2.0)
      rspec-support (= 3.10.0.pre)

GIT
  remote: https://github.com/rspec/rspec-mocks
  revision: 5b897e8f74f3059aef43f1ed5f91719f2267a04e
  specs:
    rspec-mocks (3.10.0.pre)
      diff-lcs (>= 1.2.0, < 2.0)
      rspec-support (= 3.10.0.pre)

GIT
  remote: https://github.com/rspec/rspec-rails
  revision: 9805caec345784d69e20c585f4ddd926254deef0
  branch: master
  specs:
    rspec-rails (4.0.0.pre)
      actionpack (>= 4.2)
      activesupport (>= 4.2)
      railties (>= 4.2)
      rspec-core (= 3.10.0.pre)
      rspec-expectations (= 3.10.0.pre)
      rspec-mocks (= 3.10.0.pre)
      rspec-support (= 3.10.0.pre)

GIT
  remote: https://github.com/rspec/rspec-support
  revision: 673133cdd13b17077b3d88ece8d7380821f8d7dc
  specs:
    rspec-support (3.10.0.pre)

GEM
  remote: https://rubygems.org/
  specs:
    CFPropertyList (2.3.6)
    actioncable (6.0.0)
      actionpack (= 6.0.0)
      nio4r (~> 2.0)
      websocket-driver (>= 0.6.1)
    actionmailbox (6.0.0)
      actionpack (= 6.0.0)
      activejob (= 6.0.0)
      activerecord (= 6.0.0)
      activestorage (= 6.0.0)
      activesupport (= 6.0.0)
      mail (>= 2.7.1)
    actionmailer (6.0.0)
      actionpack (= 6.0.0)
      actionview (= 6.0.0)
      activejob (= 6.0.0)
      mail (~> 2.5, >= 2.5.4)
      rails-dom-testing (~> 2.0)
    actionpack (6.0.0)
      actionview (= 6.0.0)
      activesupport (= 6.0.0)
      rack (~> 2.0)
      rack-test (>= 0.6.3)
      rails-dom-testing (~> 2.0)
      rails-html-sanitizer (~> 1.0, >= 1.2.0)
    actiontext (6.0.0)
      actionpack (= 6.0.0)
      activerecord (= 6.0.0)
      activestorage (= 6.0.0)
      activesupport (= 6.0.0)
      nokogiri (>= 1.8.5)
    actionview (6.0.0)
      activesupport (= 6.0.0)
      builder (~> 3.1)
      erubi (~> 1.4)
      rails-dom-testing (~> 2.0)
      rails-html-sanitizer (~> 1.1, >= 1.2.0)
    activejob (6.0.0)
      activesupport (= 6.0.0)
      globalid (>= 0.3.6)
    activemodel (6.0.0)
      activesupport (= 6.0.0)
    activerecord (6.0.0)
      activemodel (= 6.0.0)
      activesupport (= 6.0.0)
    activestorage (6.0.0)
      actionpack (= 6.0.0)
      activejob (= 6.0.0)
      activerecord (= 6.0.0)
      marcel (~> 0.3.1)
    activesupport (6.0.0)
      concurrent-ruby (~> 1.0, >= 1.0.2)
      i18n (>= 0.7, < 2)
      minitest (~> 5.1)
      tzinfo (~> 1.1)
      zeitwerk (~> 2.1, >= 2.1.8)
    addressable (2.7.0)
      public_suffix (>= 2.0.2, < 5.0)
    administrate (0.12.0)
      actionpack (>= 4.2)
      actionview (>= 4.2)
      activerecord (>= 4.2)
      autoprefixer-rails (>= 6.0)
      datetime_picker_rails (~> 0.0.7)
      jquery-rails (>= 4.0)
      kaminari (>= 1.0)
      momentjs-rails (~> 2.8)
      sassc-rails (~> 2.1)
      selectize-rails (~> 0.6)
    autoprefixer-rails (9.7.2)
      execjs
    awesome_print (1.8.0)
    aws-eventstream (1.0.3)
    aws-partitions (1.240.0)
    aws-sdk-core (3.78.0)
      aws-eventstream (~> 1.0, >= 1.0.2)
      aws-partitions (~> 1, >= 1.239.0)
      aws-sigv4 (~> 1.1)
      jmespath (~> 1.0)
    aws-sdk-kms (1.25.0)
      aws-sdk-core (~> 3, >= 3.71.0)
      aws-sigv4 (~> 1.1)
    aws-sdk-rails (3.0.5)
      aws-sdk-ses (~> 1)
      railties (>= 5.2.0)
    aws-sdk-s3 (1.55.0)
      aws-sdk-core (~> 3, >= 3.77.0)
      aws-sdk-kms (~> 1)
      aws-sigv4 (~> 1.1)
    aws-sdk-ses (1.27.0)
      aws-sdk-core (~> 3, >= 3.71.0)
      aws-sigv4 (~> 1.1)
    aws-sigv4 (1.1.0)
      aws-eventstream (~> 1.0, >= 1.0.2)
    backports (3.15.0)
    bcrypt (3.1.13)
    bindex (0.8.1)
    builder (3.2.3)
    capybara (3.23.0)
      addressable
      mini_mime (>= 0.1.3)
      nokogiri (~> 1.8)
      rack (>= 1.6.0)
      rack-test (>= 0.6.3)
      regexp_parser (~> 1.5)
      xpath (~> 3.2)
    capybara-email (3.0.1)
      capybara (>= 2.4, < 4.0)
      mail
    carrierwave (2.0.2)
      activemodel (>= 5.0.0)
      activesupport (>= 5.0.0)
      addressable (~> 2.6)
      image_processing (~> 1.1)
      mimemagic (>= 0.3.0)
      mini_mime (>= 0.1.3)
    carrierwave-aws (1.4.0)
      aws-sdk-s3 (~> 1.0)
      carrierwave (>= 0.7, < 2.1)
    childprocess (3.0.0)
    codeclimate-test-reporter (1.0.9)
      simplecov (<= 0.13)
    coderay (1.1.2)
    coffee-rails (5.0.0)
      coffee-script (>= 2.2.0)
      railties (>= 5.2.0)
    coffee-script (2.4.1)
      coffee-script-source
      execjs
    coffee-script-source (1.12.2)
    colored (1.2)
    concurrent-ruby (1.1.5)
    connection_pool (2.2.2)
    contentful (2.15.0)
      http (> 0.8, < 5.0)
      multi_json (~> 1)
    contentful-management (2.11.0)
      http (> 1.0, < 5.0)
      json (>= 1.8, < 3.0)
      multi_json (~> 1)
    contentful_model (1.2.0)
      activesupport
      contentful (~> 2.7)
      contentful-management (~> 2.0)
      redcarpet
    countries (3.0.0)
      i18n_data (~> 0.8.0)
      sixarm_ruby_unaccent (~> 1.1)
      unicode_utils (~> 1.4)
    country_select (4.0.0)
      countries (~> 3.0)
      sort_alphabetical (~> 1.0)
    crack (0.4.3)
      safe_yaml (~> 1.0.0)
    crass (1.0.5)
    cucumber (3.1.2)
      builder (>= 2.1.2)
      cucumber-core (~> 3.2.0)
      cucumber-expressions (~> 6.0.1)
      cucumber-wire (~> 0.0.1)
      diff-lcs (~> 1.3)
      gherkin (~> 5.1.0)
      multi_json (>= 1.7.5, < 2.0)
      multi_test (>= 0.1.2)
    cucumber-core (3.2.1)
      backports (>= 3.8.0)
      cucumber-tag_expressions (~> 1.1.0)
      gherkin (~> 5.0)
    cucumber-expressions (6.0.1)
    cucumber-rails (1.8.0)
      capybara (>= 2.12, < 4)
      cucumber (>= 3.0.2, < 4)
      mime-types (>= 2.0, < 4)
      nokogiri (~> 1.8)
      railties (>= 4.2, < 7)
    cucumber-tag_expressions (1.1.1)
    cucumber-wire (0.0.1)
    database_cleaner (1.7.0)
    datetime_picker_rails (0.0.7)
      momentjs-rails (>= 2.8.1)
    devise (4.7.1)
      bcrypt (~> 3.0)
      orm_adapter (~> 0.1)
      railties (>= 4.1.0)
      responders
      warden (~> 1.2.3)
    diff-lcs (1.3)
    doc_ripper (0.0.9)
      CFPropertyList (~> 2.3)
      colored (~> 1.2)
    docile (1.1.5)
    domain_name (0.5.20190701)
      unf (>= 0.0.5, < 1.0.0)
    dotenv (2.7.5)
    dotenv-rails (2.7.5)
      dotenv (= 2.7.5)
      railties (>= 3.2, < 6.1)
    email_spec (2.2.0)
      htmlentities (~> 4.3.3)
      launchy (~> 2.1)
      mail (~> 2.7)
    erubi (1.9.0)
    execjs (2.7.0)
    factory_bot (5.1.1)
      activesupport (>= 4.2.0)
    factory_bot_rails (5.1.1)
      factory_bot (~> 5.1.0)
      railties (>= 4.2.0)
    faraday (0.17.0)
      multipart-post (>= 1.2, < 3)
    faraday_middleware (0.13.1)
      faraday (>= 0.7.4, < 1.0)
    ffi (1.11.2)
    ffi-compiler (1.0.1)
      ffi (>= 1.0.0)
      rake
    gherkin (5.1.0)
    globalid (0.4.2)
      activesupport (>= 4.2.0)
    hashdiff (1.0.0)
    hashie (3.6.0)
    hellosign-ruby-sdk (3.7.7)
      faraday
      mime-types
      multi_json
    htmlentities (4.3.4)
    http (4.2.0)
      addressable (~> 2.3)
      http-cookie (~> 1.0)
      http-form_data (~> 2.0)
      http-parser (~> 1.2.0)
    http-cookie (1.0.3)
      domain_name (~> 0.5)
    http-form_data (2.1.1)
    http-parser (1.2.1)
      ffi-compiler (>= 1.0, < 2.0)
    i18n (1.7.0)
      concurrent-ruby (~> 1.0)
    i18n_data (0.8.0)
    image_processing (1.7.1)
      mini_magick (~> 4.0)
      ruby-vips (>= 2.0.13, < 3)
    jmespath (1.4.0)
    jquery-rails (4.3.5)
      rails-dom-testing (>= 1, < 3)
      railties (>= 4.2.0)
      thor (>= 0.14, < 2.0)
    json (2.2.0)
    jwt (1.5.6)
    kaminari (1.1.1)
      activesupport (>= 4.1.0)
      kaminari-actionview (= 1.1.1)
      kaminari-activerecord (= 1.1.1)
      kaminari-core (= 1.1.1)
    kaminari-actionview (1.1.1)
      actionview
      kaminari-core (= 1.1.1)
    kaminari-activerecord (1.1.1)
      activerecord
      kaminari-core (= 1.1.1)
    kaminari-core (1.1.1)
    launchy (2.4.3)
      addressable (~> 2.3)
    letter_opener (1.7.0)
      launchy (~> 2.2)
    loofah (2.3.1)
      crass (~> 1.0.2)
      nokogiri (>= 1.5.9)
    mail (2.7.1)
      mini_mime (>= 0.1.1)
    marcel (0.3.3)
      mimemagic (~> 0.3.2)
    method_source (0.9.2)
    mime-types (3.3)
      mime-types-data (~> 3.2015)
    mime-types-data (3.2019.1009)
    mimemagic (0.3.3)
    mini_magick (4.9.5)
    mini_mime (1.0.2)
    mini_portile2 (2.4.0)
    minidown (2.1.1)
    minitest (5.13.0)
    momentjs-rails (2.20.1)
      railties (>= 3.1)
    multi_json (1.14.1)
    multi_test (0.1.2)
    multi_xml (0.6.0)
    multipart-post (2.1.1)
    mustermann (1.0.3)
    nio4r (2.5.2)
    nokogiri (1.10.5)
      mini_portile2 (~> 2.4.0)
    oauth2 (1.4.2)
      faraday (>= 0.8, < 2.0)
      jwt (>= 1.0, < 3.0)
      multi_json (~> 1.3)
      multi_xml (~> 0.5)
      rack (>= 1.2, < 3)
    omniauth (1.9.0)
      hashie (>= 3.4.6, < 3.7.0)
      rack (>= 1.6.2, < 3)
    omniauth-google-oauth2 (0.5.2)
      jwt (~> 1.5)
      multi_json (~> 1.3)
      omniauth (>= 1.1.1)
      omniauth-oauth2 (>= 1.3.1)
    omniauth-linkedin-oauth2 (1.0.0)
      omniauth-oauth2
    omniauth-oauth2 (1.6.0)
      oauth2 (~> 1.1)
      omniauth (~> 1.9)
    orm_adapter (0.5.0)
    pg (1.1.4)
    pry (0.12.2)
      coderay (~> 1.1.0)
      method_source (~> 0.9.0)
    pry-rails (0.3.9)
      pry (>= 0.10.4)
    pry-remote (0.1.8)
      pry (~> 0.9)
      slop (~> 3.0)
    public_suffix (4.0.1)
    puma (4.3.0)
      nio4r (~> 2.0)
    rack (2.0.7)
    rack-protection (2.0.7)
      rack
    rack-proxy (0.6.5)
      rack
    rack-test (1.1.0)
      rack (>= 1.0, < 3)
    rails (6.0.0)
      actioncable (= 6.0.0)
      actionmailbox (= 6.0.0)
      actionmailer (= 6.0.0)
      actionpack (= 6.0.0)
      actiontext (= 6.0.0)
      actionview (= 6.0.0)
      activejob (= 6.0.0)
      activemodel (= 6.0.0)
      activerecord (= 6.0.0)
      activestorage (= 6.0.0)
      activesupport (= 6.0.0)
      bundler (>= 1.3.0)
      railties (= 6.0.0)
      sprockets-rails (>= 2.0.0)
    rails-controller-testing (1.0.4)
      actionpack (>= 5.0.1.x)
      actionview (>= 5.0.1.x)
      activesupport (>= 5.0.1.x)
    rails-dom-testing (2.0.3)
      activesupport (>= 4.2.0)
      nokogiri (>= 1.6)
    rails-html-sanitizer (1.3.0)
      loofah (~> 2.3)
    rails-i18n (6.0.0)
      i18n (>= 0.7, < 2)
      railties (>= 6.0.0, < 7)
    rails_12factor (0.0.3)
      rails_serve_static_assets
      rails_stdout_logging
    rails_serve_static_assets (0.0.5)
    rails_stdout_logging (0.0.5)
    railties (6.0.0)
      actionpack (= 6.0.0)
      activesupport (= 6.0.0)
      method_source
      rake (>= 0.8.7)
      thor (>= 0.20.3, < 2.0)
    rake (13.0.1)
    rb-fsevent (0.10.3)
    rb-inotify (0.10.0)
      ffi (~> 1.0)
    redcarpet (3.5.0)
    redis (4.1.3)
    redis-actionpack (5.1.0)
      actionpack (>= 4.0, < 7)
      redis-rack (>= 1, < 3)
      redis-store (>= 1.1.0, < 2)
    redis-activesupport (5.2.0)
      activesupport (>= 3, < 7)
      redis-store (>= 1.3, < 2)
    redis-rack (2.0.6)
      rack (>= 1.5, < 3)
      redis-store (>= 1.2, < 2)
    redis-rails (5.0.2)
      redis-actionpack (>= 5.0, < 6)
      redis-activesupport (>= 5.0, < 6)
      redis-store (>= 1.2, < 2)
    redis-store (1.6.0)
      redis (>= 2.2, < 5)
    regexp_parser (1.6.0)
    responders (3.0.0)
      actionpack (>= 5.0)
      railties (>= 5.0)
    restforce (4.2.0)
      faraday (>= 0.9.0, <= 1.0)
      faraday_middleware (>= 0.8.8, <= 1.0)
      hashie (>= 1.2.0, < 4.0)
      json (>= 1.7.5)
      jwt (>= 1.5.6)
    rspec_junit_formatter (0.4.1)
      rspec-core (>= 2, < 4, != 2.12.0)
    ruby-vips (2.0.16)
      ffi (~> 1.9)
    rubyzip (2.0.0)
    sablon (0.3.2)
      nokogiri (>= 1.8.5)
      rubyzip (>= 1.1.1)
    safe_yaml (1.0.5)
    sass (3.7.4)
      sass-listen (~> 4.0.0)
    sass-listen (4.0.0)
      rb-fsevent (~> 0.9, >= 0.9.4)
      rb-inotify (~> 0.9, >= 0.9.7)
    sass-rails (5.1.0)
      railties (>= 5.2.0)
      sass (~> 3.1)
      sprockets (>= 2.8, < 4.0)
      sprockets-rails (>= 2.0, < 4.0)
      tilt (>= 1.1, < 3)
    sassc (2.2.1)
      ffi (~> 1.9)
    sassc-rails (2.1.2)
      railties (>= 4.0.0)
      sassc (>= 2.0)
      sprockets (> 3.0)
      sprockets-rails
      tilt
    selectize-rails (0.12.6)
    selenium-webdriver (3.142.6)
      childprocess (>= 0.5, < 4.0)
      rubyzip (>= 1.2.2)
    sentry-raven (2.12.3)
      faraday (>= 0.7.6, < 1.0)
    shoulda-matchers (4.1.2)
      activesupport (>= 4.2.0)
    sidekiq (6.0.3)
      connection_pool (>= 2.2.2)
      rack (>= 2.0.0)
      rack-protection (>= 2.0.0)
      redis (>= 4.1.0)
    simplecov (0.13.0)
      docile (~> 1.1.0)
      json (>= 1.8, < 3)
      simplecov-html (~> 0.10.0)
    simplecov-html (0.10.2)
    sinatra (2.0.7)
      mustermann (~> 1.0)
      rack (~> 2.0)
      rack-protection (= 2.0.7)
      tilt (~> 2.0)
    sixarm_ruby_unaccent (1.2.0)
    slop (3.6.0)
    sort_alphabetical (1.1.0)
      unicode_utils (>= 1.2.2)
    spring (2.1.0)
    sprockets (3.7.2)
      concurrent-ruby (~> 1.0)
      rack (> 1, < 3)
    sprockets-rails (3.2.1)
      actionpack (>= 4.0)
      activesupport (>= 4.0)
      sprockets (>= 3.0.0)
    stripe (5.10.0)
    thor (0.20.3)
    thread_safe (0.3.6)
    tilt (2.0.10)
    timecop (0.9.1)
    tzinfo (1.2.5)
      thread_safe (~> 0.1)
    uglifier (4.2.0)
      execjs (>= 0.3.0, < 3)
    unf (0.1.4)
      unf_ext
    unf_ext (0.0.7.6)
    unicode_utils (1.4.0)
    vcr (5.0.0)
    warden (1.2.8)
      rack (>= 2.0.6)
    web-console (4.0.1)
      actionview (>= 6.0.0)
      activemodel (>= 6.0.0)
      bindex (>= 0.4.0)
      railties (>= 6.0.0)
    webdrivers (4.1.3)
      nokogiri (~> 1.6)
      rubyzip (>= 1.3.0)
      selenium-webdriver (>= 3.0, < 4.0)
    webmock (3.7.6)
      addressable (>= 2.3.6)
      crack (>= 0.3.2)
      hashdiff (>= 0.4.0, < 2.0.0)
    webpacker (4.2.0)
      activesupport (>= 4.2)
      rack-proxy (>= 0.6.1)
      railties (>= 4.2)
    websocket-driver (0.7.1)
      websocket-extensions (>= 0.1.0)
    websocket-extensions (0.1.4)
    xpath (3.2.0)
      nokogiri (~> 1.8)
    zeitwerk (2.2.1)

PLATFORMS
  ruby

DEPENDENCIES
  administrate (~> 0.12.0)
  awesome_print (~> 1.8.0)
  aws-sdk-rails (~> 3.0.5)
  capybara (~> 3.23.0)
  capybara-email (~> 3.0.1)
  carrierwave (~> 2.0.2)
  carrierwave-aws (~> 1.4.0)
  codeclimate-test-reporter (~> 1.0.9)
  coffee-rails (~> 5.0.0)
  contentful_model (~> 1.2.0)
  country_select (~> 4.0.0)
  cucumber-rails (~> 1.8.0)
  database_cleaner (~> 1.7.0)
  devise (~> 4.7.0)
  doc_ripper (~> 0.0.9)
  dotenv-rails (~> 2.7.5)
  email_spec (~> 2.2.0)
  factory_bot_rails (~> 5.1.1)
  hellosign-ruby-sdk (~> 3.7.7)
  jquery-rails (~> 4.3.5)
  kaminari (~> 1.1.1)
  launchy (~> 2.4.3)
  letter_opener (~> 1.7.0)
  mini_magick (~> 4.9.5)
  minidown (~> 2.1.1)
  omniauth-google-oauth2 (~> 0.5.2)
  omniauth-linkedin-oauth2 (~> 1.0.0)
  omniauth-oauth2 (~> 1.6.0)
  pg (~> 1.1.4)
  pry-rails (~> 0.3.9)
  pry-remote (~> 0.1.8)
  puma (~> 4.3.0)
  rails (= 6.0.0)
  rails-controller-testing (~> 1.0.4)
  rails-i18n (~> 6.0.0)
  rails_12factor (~> 0.0.3)
  redis-rails (~> 5.0.0)
  restforce (~> 4.2.0)
  rspec-core!
  rspec-expectations!
  rspec-mocks!
  rspec-rails!
  rspec-support!
  rspec_junit_formatter (~> 0.4.1)
  sablon (~> 0.3.2)
  sass-rails (~> 5.0)
  selenium-webdriver (~> 3.142.4)
  sentry-raven (~> 2.12.3)
  shoulda-matchers (~> 4.1.2)
  sidekiq (~> 6.0.3)
  sinatra (~> 2.0.7)
  spring (~> 2.1.0)
  stripe (~> 5.10.0)
  timecop (~> 0.9.1)
  uglifier (~> 4.2.0)
  vcr (~> 5.0.0)
  web-console (~> 4.0.1)
  webdrivers (~> 4.1.3)
  webmock (~> 3.7.6)
  webpacker (~> 4.2.0)

RUBY VERSION
   ruby 2.6.5p114

BUNDLED WITH
   1.17.3
```
<!--

Below are a few steps it'd be super if you could follow.
If you can't do all of these, don't worry, but if you can it'll help us
resolve your bug faster!

-->

## What Ruby, Rails and RSpec versions are you using?

Ruby version: 2.5.1
Rails version: 6.0.0
RSpec version: branch 4-0-dev

<!--

You can run

```
bundle exec ruby --version
bundle exec rails --version
bundle exec rspec --version
```

-->

## Observed behaviour

<!--
please provide a concise description of the behaviour you are observing with
RSpec and Rails
-->
Given an email enqueued with:
```
SomeMailer.with(object: foo, option: { amended: true }).some_method.deliver_later
```

I would expect the following to pass:

```
expect { some_action_which_enqueues_mail }.to have_enqueued_mail(SomeMailer, :some_method).with(object: foo, option: { amended: true })
```
It doesn't pass when setting the default delivery job to `ActionMailer::MailDeliveryJob` but does when using the legacy `ActionMailer::Parameterized::DeliveryJob` (ie. `config.load_defaults 5.2` and `Rails.application.config.action_mailer.delivery_job = 'ActionMailer::MailDeliveryJob'` commented out in `config/initializers/new_framework_defaults_6_0.rb`

The listed enqueued mails shows the mail has been enqueued, but I cannot seem to access it with my test criteria.
