$where=[
    1=>\Medoo\Medoo::raw('MOD(<id>,2)')
]
Version: 1.7.8
line: 643
code:
is_int($key) && 

**is_int($key) &&  !is_object($value) &&**
myquery

`$findpoi = $db->select("website","*",[
    "vl_id"=>$_POST['vlid']
]);
echo $db->last();
`

this show wrong point semicolon
SELECT * FROM `website` WHERE `vl_id` = '1;'
Good evening,

I have a problem with the following query, I only want to change data sets that are not today.

This works (dateLastSubstract[<]):

> // execute action
>           $updatePharmacyCapacityCronjob = $db->update('pharmacy', [
>                                                                     "capacity[-]" => $getPharmacyDataCapacityCronjob['dosageTotal'],
>                                                                     "dateLastSubstract" => date("Y-m-d H:i:S")
>                                                                    ], [
>                                                                      "dateLastSubstract[<]" => Medoo::raw("DATE(CURDATE())")
>                                                                    ]);

That doesn't work (dateLastSubstract[!]:

> // execute action
>           $updatePharmacyCapacityCronjob = $db->update('pharmacy', [
>                                                                     "capacity[-]" => $getPharmacyDataCapacityCronjob['dosageTotal'],
>                                                                     "dateLastSubstract" => date("Y-m-d H:i:S")
>                                                                    ], [
>                                                                      "dateLastSubstract[!]" => Medoo::raw("DATE(CURDATE())")
>                                                                    ]);

Maybe you can give me some advice how I could solve this better or if there might even be a bug in the library:

Thanks in advance.
https://github.com/catfan/Medoo/issues/858

Explicit handling for boolean WHERE clauses
im trying to get the prefix name from the object, but the object are protected, so i cannot do it.
i need it to run custom query, i need something like that:

$db -> query('TRUNCATE '.$db -> prefix.'sessions');
any solution?

medoo version: 1.7.6
database: mysql
system: windows

**Detail Code**
$table="a";
$join=array("b" => array($db->raw("substr(id_agent,0,4)") => "id"));
$columns="*";
$where=array();
$db->select($table, $join, $columns, $where);

**output**
select * from a 
left join b
on

**Expected output**
select * from a 
left join b
on substr(a.id_agent,0,4) = b.id

sorry my english was not to good.
but i try to explain with (i hope) clear code.

I have seen that Medoo have create and drop table ( https://medoo.in/api/ )  
Is there any management API that can renaming table?

I mean something like: 
`$database->rename("account", "accounts");`

instead something like 

```
$database->query("ALTER TABLE table_name (
RENAME TO new_table_name)
;");
```

Regards

We often have to check whether the record already exists or not. 
If there is spesific record, then we call method **->update**,
and if it does not exist we call the method **->insert**.

So, I added a method **->upsert** (abbreviation from: update or insert) that automatically detects whether a record exists or not.

**Before:**
```
$user = array('username'=>'john', 'dept' => 'Sales');

if ($database->has('user', ['user'=>'john'])) 
{
    $database->update('user', $user, ['user'=>'john']);

} else {

    $database->insert('user', $user);
}
```
**After:**
```
$user = array('username'=>'john', 'dept' => 'Sales');
$database->upsert('user', $a, ['username' => 'unyil']);

// If username='john' is exist, record will be updated with data in var $user
// If username='john' is not exist, a new record will be inserted 
```

Thanks!

_Btw: English isnâ€™t my first language, so please excuse any mistakes._
When containing hyphens (`-`), sometimes table names cannot be properly quoted by the `tableQuote($table)` method because they (table names) are not even being matched by the previous `preg_match()`.

**Information**
- Version of Medoo: 1.72 (But I've looked at the code and looks like 1.73 still have this issue)
- Type of Database: MySQL
- System: Linux

**Detail Code**
The following code
```
$qqs = $database->select('nss-avatars', [
    '[<]nss-players' => 'qq'
], [
    'qq',
], [
    'ORDER' => [
        'nss-avatars.lastUpdate' => 'ASC'
    ],
    'LIMIT' => $count
]);
```
Produces
```
SELECT `qq` FROM "nss-avatars" 
RIGHT JOIN `nss` USING (`qq`) 
ORDER BY "nss-avatars".`lastUpdate` ASC 
LIMIT 2
```

**Expected output**
```
SELECT `qq` FROM "nss-avatars" 
RIGHT JOIN `nss-players` USING (`qq`) 
ORDER BY "nss-avatars".`lastUpdate` ASC 
LIMIT 2
```

At [line 1062 of Medoo.php](https://github.com/catfan/Medoo/blob/113519d8032044a1d7b0852740e8f8d210b4dee2/src/Medoo.php#L1062), I see there is a `preg_match()` matching table name with `[a-zA-Z0-9_]+`.
By adding a hyphen there (`[a-zA-Z0-9_-]+`), it will output a correct table name in the join statement.
But I'm not sure how many else places need to be updated, and I'm also unsure if this would bring any side effects. Otherwise I could already make a pull request.