
As title.

When I reviewed the code, I found a defect and fixed it. thx

![image](https://user-images.githubusercontent.com/59197347/72665167-8b715600-3a40-11ea-8ddc-96e2e0072853.png)

1) Supports multiple character sets. By default, each character set supports collation in binary mode.
2) The default character set is utf8, and in nebula, utf8 is an alias of utf8mb4, so the default collation is utf8_bin
3) You can specify the character set and collation when creating a space. If it is not specified, the default character set and collation are used.

The following three create space statements are equivalent:

```
create space my_space (partition_num = 10, replica_factor = 1, charset = utf8, collate = utf8_bin);
create space my_space (partition_num = 10, replica_factor = 1, charset = utf8);
create space my_space (partition_num = 10, replica_factor = 1);
```
By disabling strict aliasing via `-fno-strict-aliasing`, it might have some negligible impacts on performance while avoiding relevant bugs which is hard to hunt, which is worthy for us.
same as gremlin v.s. ngql, this is cypher v.s. ngql
 * Fixed two failures found by UBSan
 * Tweaks to make UBSan more usable
If hive table column names are inconsistent with sparke-writer configure names, this tool does not check the meta-consistency and just go on. But no data has been written.
For mapping conf, if the mapped fields are different from the column of Hive, give the user a hint would be helpful. üòÅüòÅ

![1](https://user-images.githubusercontent.com/51590253/72593807-e3c12e80-3940-11ea-829a-ea9699326a38.jpg)


