Sections don’t have the `draft` variable, so setting `draft = true` still builds them and includes them in the output.
Would it be a desirable feature to be able to save sections as drafts?
I prefer to push my own built site, not to use any CI. Also I am hosting on
GitHub. I currently use Hugo, and all I have to do is change my `config.toml`:

~~~toml
publishDir = "docs"
~~~

https://gohugo.io/hosting-and-deployment/hosting-on-github#deployment-of-project-pages-from-docs-folder-on-master-branch

I am trying to mimic this with Zola, but I dont know what option to set, if any
even exists. I saw this:

~~~toml
[build]
base    = "docs"
publish = "docs/public"
~~~

https://getzola.org/documentation/deployment/netlify

but I dont think its right as `zola build` just goes ahead and dumps the output
to `public` still. Help?

# Bug Report

Markdown ~~striketrough~~ does not work.

Maybe an update of pulldown-cmark from 0.6 to 0.6.1 fixes the issue.

See https://github.com/raphlinus/pulldown-cmark/commit/b24ac87ea7d1e92d3cc2f4d34d0ca4660b710bb7

## Environment
MacOS

Zola version: 0.9

## Expected Behavior

HTML should render text als strikedthroug.

## Current Behavior


## Step to reproduce
Add ~~this text should be striked through~~ to a Markdown document. If you see the tilde character instead of a characters striked through, you look at the bug.

# Bug Report

## Environment

Zola version: 0.9.0

I've added to `config.toml` :
``` toml
default_language = "fr"
languages = [
    {code = "fr", rss = true, search = false},
]
```
I've also renamed all files in `content/` from `.md` to `.fr.md` and updated links accordingly.

## Expected Behavior
In template files, `page.ancestors` should have `…/_index.fr.md` as section indexes.

## Current Behavior

In template files, `page.ancestors` ignores the language and has `…/_index.md` as section indexes instead of `…/_index.fr.md`.

## Step to reproduce
To test, in `templates/page.html`:
```
  {% if page.ancestors %}
    {% for ancestor_path in page.ancestors %}
      {% set ancestor = get_section(path=ancestor_path) %}
      <p>{{ancestor.relative_path}}</p>
    {% endfor %}
  {%endif%}
```
or in `templates/section.html`:
```
  {% if section.ancestors %}
    {% for ancestor_path in page.ancestors %}
      {% set ancestor = get_section(path=ancestor_path) %}
      <p>{{ancestor.relative_path}}</p>
    {% endfor %}
  {%endif%}
```

Todo

[] Wait for syntect release (incl. fix for rust-onig)
[] Documentation -> @uwearzt 
[] Example -> @uwearzt 
[] Check interface (especially config.toml) @Keats 




# Bug Report

## Environment

Zola version: 0.9.0

## Expected Behavior
`get_image_metadata("foo.jpg")` successfully loads metadata of `static/foo.jpg` if there are no `content/foo.jpg`.

## Current Behavior
`get_image_metadata("foo.jpg")` complains "Reason: `get_image_meta`: Cannot find path: foo.jpg" even if there is `static/foo.jpg`.

## Step to reproduce
1. Put an image to `static` folder, e.g. `static/foo.jpg`.
    + There should be no files with the same path, e.g. `content/foo.jpg`.
2. Run `get_image_metadata(path="foo.jpg")` in a template.
    + Both local templates or theme templates are ok.
3. Run `zola build` or `zola serve`.
    + It fails with `` `get_image_meta`: Cannot find path: foo.jpg `` error.

## Additional info

I think the lines below should be changed in some way.

https://github.com/getzola/zola/blob/e194294664f651a16f66d2cc07c8c2a3638642f8/components/site/src/lib.rs#L529-L532

https://github.com/getzola/zola/blob/e194294664f651a16f66d2cc07c8c2a3638642f8/components/templates/src/global_fns/mod.rs#L167-L170
https://github.com/getzola/zola/issues/768#issuecomment-570557713 is the discussion and source of what I’ve done in this commit.

The work included in here:

- Stop stripping any characters from paths or anchors: none of the restrictions are fundamentally valid, and they prevent realistic uses.

- Split slugify_paths into slugify_paths and slugify_anchors, and change anchors to using slugify_anchors.

- Turn slugify_paths off by default, and ensure that all the documentation is consistent about this (it wasn’t).

One potentially controversial part of this is ceasing turning spaces into underscores in anchors with slugify_anchors off. I consider that a legitimate slugification scheme, and contrary to the declared intent of `slugify_anchors = false`. I think it’s best left to the future where we can specify `slugify_anchors = "Spaces_to_underscores"` or similar. (Because there are further variants of it.)

Fixes #768.
It would be nice to bring org-mode support to Zola. And actually I'm already started working on it (by using orgize, a org-mode parser I wrote).

But Zola not only converts raw markdown into simple html string but also applies some features like deep linking and table of content. So I think we should first discuss about how to address such features on org-mode before we can finally implements it in Zola.

# Feature Request

## Environment

Zola version: 0.9.0

## Feature Proposal

As I've initially described this in #840, it is currently impossible (AFAICT) to manually emulate the `generate-rss` feature by using an appropriate template, as Zola assumes all pages to render to HTML output. There are two aspects to this:

- Zola does not handle templates with an extension different to `.html`. For an RSS feed template, it would make sense to have a non-HTML extension for the template, such as `.xml` or `.rss`. As such non-HTML templates are currently not supported, it should be possible to enable special behavior when adding support for such templates; see below.
- For non-HTML output, the "beautiful URL" scheme employed, i.e., generating "foo/index.html" instead of "foo.html", doesn't make sense, as webservers typically just serve `index.html` when a request that maps to a directory name comes in.

Thus, I'd like to discuss the following potential change to Zola:

> When a template is specified with a path that does not end in `.html`, use the extension from the template to form the resulting path, and don't do the `index.html` transformation. For example, a `foo.md` page specifying `template = "feed.xml"` in its frontmatter will be rendered to `section/foo.xml` instead of `section/foo/index.html`. When a `path` is specified for such a page, the given path would be used verbatim.

With this change, I think one would get pretty close to being able to implement the `generate-rss` feature in "user-space", so to speak, which would be nice from an elegance and versatility perspective, besides allowing for my specific use-case.

## Drawbacks

Implementing the proposed change will still treat templates with the `.html` extension specially, as it does the `index.html` transformation. However, if that were to be made configurable, as proposed in #840, `.html` and other templates would be treated exactly the same, which mitigates that concern, I think.

# Bug Report

## Environment

Zola version: 0.9.0

## Expected Behavior
Delete a section should not crash zola.

## Current Behavior
Delete a section crashes zola with a Panic.

Backtrace: 
https://gist.github.com/eigan/c763aa134671e60b64df380b496bdf0d
_Note: I deleted the `/content/txt/teknisk/data` directory._

## Step to reproduce
_(Note: These are not the same steps as in backtrace)_
Constant reproduce by doing the following:
1. Create directory
2. Create _index.md with content:
```
+++
+++
```
3. Delete the directory