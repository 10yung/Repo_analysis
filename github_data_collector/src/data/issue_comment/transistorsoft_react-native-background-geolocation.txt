<!--
*****************************************************************
* WARNING:  If you ignore this template, so too will your issue
*****************************************************************
-->

<!--
  Provide a general summary of the issue in the Title above
-->
## Your Environment
* Plugin version: 3.4.2
* Platform: Android
* OS version: 8
* Device manufacturer / model: HUAWEI Y6 Prime 2018
* React Native version (`react-native -v`): 0.59.9
* Plugin config
```javascript <!-- Syntax-highlighting:  paste your code below -->
{
    desiredAccuracy: BackgroundGeolocation.DESIRED_ACCURACY_HIGH, // Use GPS, WiFi and Cellular for geolocation
    distanceFilter: 10, // meters to move before update event fires
    fastestLocationUpdateInterval: 1000, // if another app is using location, accept updates every N ms
    locationUpdateInterval: 10000, // actively request location every N ms
    heartbeatInterval: 60, // Send 'heartbeat' events every 60 seconds
    debug: false, // for debug sounds
    logLevel: BackgroundGeolocation.LOG_LEVEL_DEBUG,
    stopOnTerminate:false, // Stop plugin when app is closed and tracking is OFF (e.g. when logged out)
    startOnBoot: true, // Start on Android boot if tracking is ON
    foregroundService: true, // show in notification bar, keep service alive as much as possible
    notificationTitle: 'Яндекс.Курьер',
    notificationText: 'Использует GPS',
    maxDaysToPersist: 3,
    url,
    autoSync: true,
    batchSync: true,
    maxBatchSize: 100, // Max locations size in request
    httpRootProperty: 'positions',
    locationTemplate:
      '{ "accuracy": <%= accuracy %>, "latitude":<%= latitude %>, "longitude":<%= longitude %>, "time": "<%= timestamp %>" }',
    enableHeadless: true
  }
```

## Expected Behavior
App will be running
## Actual Behavior
App crushes

## Steps to Reproduce
1. Launch app, geolocation on
2. Close app
3. Go to geolocation settings
4. Fast change geolocation to wifi and mobile network and launch app

##Debug logs
[189020231397890.txt](https://github.com/transistorsoft/react-native-background-geolocation/files/4077243/189020231397890.txt)



<details><summary>Logs</summary>

![image](https://user-images.githubusercontent.com/31548789/72620321-1fafc000-3950-11ea-9bbb-e40399e8f016.png)

</details>

<!--
*****************************************************************
* WARNING:  If you ignore this template, so too will your issue
*****************************************************************
-->

<!--
  Provide a general summary of the issue in the Title above
-->
## Your Environment
* Plugin version: ^3.3.2
* Platform: Android
* OS version: 9
* Device manufacturer / model: Huawei P10
* React Native version (`react-native -v`): 0.60
* Plugin config
```javascript <!-- Syntax-highlighting:  paste your code below -->
BackgroundGeolocation.ready(
    {
      desiredAccuracy: BackgroundGeolocation.DESIRED_ACCURACY_HIGH,
      distanceFilter: 100,
      disableElasticity: true,
      // Activity Recognition
      stopTimeout: 1,
      // Application config
      debug: false, 
      logLevel: BackgroundGeolocation.LOG_LEVEL_VERBOSE,
      stopOnTerminate: false, 
      startOnBoot: true, 
      url: 'my_url',
      batchSync: true, 
      autoSync: true,
      headers: {
        // <-- Optional HTTP headers
      },
      extras: {
        trip_id: tripId,
      },
      notificationsEnabled: false,
    },
    (state) => {
      console.log('- BackgroundGeolocation is configured and ready: ', state.enabled)

      if (!state.enabled) {
        // Start tracking
        BackgroundGeolocation.start(function() {
          console.log('- Start success')
        })
      }
    }
  )
```

## Expected Behavior
<!--- Tell us what should happen -->
Sending locations while driving from one point to another.
It works on iOS: 
![iOS](https://user-images.githubusercontent.com/56969846/72220123-cdd0f980-354d-11ea-8b83-7b4aaa5f5496.jpg)


## Actual Behavior
<!--- Tell us what happens instead -->
Android didn't send location of few last miles but it sent the last one when i opened the app at the final destination.
![ANDROID](https://user-images.githubusercontent.com/56969846/72220128-d45f7100-354d-11ea-93fb-d63591cae51a.png)



## Context
<!--- What were you trying to do? -->

## Debug logs
<!-- include iOS / Android logs
- ios XCode logs,
- use #getLog #emailLog methods (@see docs)
- Android: $ adb logcat -s TSLocationManager
-->
<details><summary>Logs</summary>

``` <!-- Syntax highlighting:  DO NOT REMOVE -->
PASTE_YOUR_LOGS_HERE
```

</details>

<!--
*****************************************************************
* WARNING:  If you ignore this template, so too will your issue
*****************************************************************
-->
Sometimes geofence events are not triggered. In logs I found out, that exitregion is called but return this message instead of usual 'identifier'

<!--
  Provide a general summary of the issue in the Title above
-->
## Your Environment
* Plugin version: 3.4.2
* Platform: iOS
* OS version: 13.2.3
* Device manufacturer / model: 
* React Native version (`react-native -v`): 0.61.5
* Plugin config
```javascript <!-- Syntax-highlighting:  paste your code below -->
{
    activityRecognitionInterval = 10000;
    activityType = 1;
    authorization =     {
    };
    autoSync = 1;
    autoSyncThreshold = 0;
    batchSync = 0;
    debug = 0;
    desiredAccuracy = "-1";
    desiredOdometerAccuracy = 100;
    didLaunchInBackground = 0;
    disableAutoSyncOnCellular = 0;
    disableElasticity = 0;
    disableLocationAuthorizationAlert = 0;
    disableMotionActivityUpdates = 0;
    disableStopDetection = 0;
    distanceFilter = 100;
    elasticityMultiplier = "0.1";
    enableTimestampMeta = 0;
    enabled = 0;
    encrypt = 0;
    extras =     {
    };
    geofenceInitialTriggerEntry = 1;
    geofenceProximityRadius = 1000;
    geofenceTemplate = "";
    headers =     {
        Authorization = "Bearer eyJraWQiOiJjb1VLZVwvZndyY3dmTDgwRVZvVTFxaHFuYmlURVMrZm1qelB3MHFuZkZyYz0iLCJhbGciOiJSUzI1NiJ9.eyJzdWIiOiI0MmRjMGRhNS0xNTEzLTRmMzctYmQ3YS00YjQzNzAxNGUzZTIiLCJlbWFpbF92ZXJpZmllZCI6ZmFsc2UsImlzcyI6Imh0dHBzOlwvXC9jb2duaXRvLWlkcC51cy1lYXN0LTEuYW1hem9uYXdzLmNvbVwvdXMtZWFzdC0xX01ZTERQTjQ2biIsInBob25lX251bWJlcl92ZXJpZmllZCI6dHJ1ZSwiY3VzdG9tOmFjY291bnRpZCI6IjEyOTIiLCJjb2duaXRvOnVzZXJuYW1lIjoiNDJkYzBkYTUtMTUxMy00ZjM3LWJkN2EtNGI0MzcwMTRlM2UyIiwiZ2l2ZW5fbmFtZSI6IlRlc3QiLCJhdWQiOiI1bnJzYnJrNWJsMjU3djhzbGkwaDlqbnFzNCIsImV2ZW50X2lkIjoiMjY1M2JhN2ItN2NlOC00MWY4LTkxMmUtYjEzYTA2NDg3NTJkIiwiY3VzdG9tOmRyaXZlcmlkIjoiMjEzOCIsInRva2VuX3VzZSI6ImlkIiwiYXV0aF90aW1lIjoxNTc4NTk1NjA0LCJjdXN0b206aW50ZXJuYWxJZCI6IjIxMzgiLCJwaG9uZV9udW1iZXIiOiIrMTYwNDg2MTI0MDgiLCJleHAiOjE1Nzg1OTkyMDUsImN1c3RvbTp1c2VyX3R5cGUiOiJkcml2ZXIiLCJpYXQiOjE1Nzg1OTU2MDUsImZhbWlseV9uYW1lIjoiZHJpdmVyOCJ9.RVpc-zXnWmCrimzjr5tPsw3TbdgT84oEEU_abhQ1xczzXITT2ql9p2lfEtZmU_UeE50A3-mmK-offP6kHr1zofimIo2Fw1KSiL8omohWGEs-BTJmLTqCrjBLX9htGgKdnXdDnf8DNyfJjDBlH2ajgrSeEl5jkJMHialeeqVyKw0GPT8ieOX3cL7VsQKA4-Lx5ZdugZhY8kyZRc2aYynxYhcjppenZFj_937YTjOqc2sXPV4-XwIaD4Z0kXrYxvE5s4I-tK2bOmXvR4Ub6XcrsfW2T93_WS-pTaL3kjRc5OLKhyKfFiswq45gjGLstYjHmTR465SD-iRQZcUMwmAFbw";
        "X-1SHIFT-DEVICE-INFO" = "Ryans iPhone-13.2.3";
        "X-1SHIFT-MOB-V" = "1.1911.1-105";
        "X-Amzn-Trace-Id" = "Root=1-8d212814-8be8-4d43-8a23-5f5c9d90e23e";
    };
    heartbeatInterval = 60;
    httpRootProperty = location;
    httpTimeout = 60000;
    iOSHasWarnedLocationServicesOff = 0;
    isFirstBoot = 0;
    isMoving = 0;
    lastLocationAuthorizationStatus = 3;
    locationAuthorizationAlert =     {
        cancelButton = Cancel;
        instructions = "To use background location, you must enable '{locationAuthorizationRequest}' in the Location Services settings";
        settingsButton = Settings;
        titleWhenNotEnabled = "Background location is not enabled";
        titleWhenOff = "Location services are off";
    };
    locationAuthorizationRequest = Always;
    locationTemplate = "";
    locationTimeout = 60;
    locationsOrderDirection = ASC;
    logLevel = 5;
    logMaxDays = 3;
    maxBatchSize = "-1";
    maxDaysToPersist = 1;
    maxRecordsToPersist = "-1";
    method = POST;
    minimumActivityRecognitionConfidence = 70;
    odometer = 0;
    params =     {
    };
    pausesLocationUpdatesAutomatically = 0;
    persistMode = 2;
    preventSuspend = 1;
    schedule =     (
    );
    schedulerEnabled = 0;
    startOnBoot = 1;
    stationaryRadius = 25;
    stopAfterElapsedMinutes = "-1";
    stopDetectionDelay = 0;
    stopOnStationary = 0;
    stopOnTerminate = 0;
    stopTimeout = 5;
    trackingMode = 1;
    url = "";
    useSignificantChangesOnly = 0;
}
```

## Expected Behavior
Triggering geofence exit event

## Actual Behavior
`ℹ️-[TSLocationManager locationManager:didExitRegion:] Exit provisional authorization inducer`

## Steps to Reproduce
<!--- reproduce this issue; include code to reproduce, if relevant -->
1. install geofence
2. track in real time
3. enter geofence zone (event is happen)
4. exit geofence zone (event is not triggered)

## Context
Trying to track whole path of user and do some logic when user comes and exits geofence zone

## Debug logs
<!-- include iOS / Android logs
- ios XCode logs,
- use #getLog #emailLog methods (@see docs)
- Android: $ adb logcat -s TSLocationManager
-->
<details><summary>Logs</summary>
Logs is too long, I put it on [drive](https://drive.google.com/open?id=1BwInqMOLDIupQUVaghcVdhTWC0jp_7Nz)

</details>

<!--
*****************************************************************
* WARNING:  If you ignore this template, so too will your issue
*****************************************************************
-->

<!--
  Provide a general summary of the issue in the Title above
-->
## Your Environment
* Plugin version: 2.0.2
* Platform: iOS
* OS version: 13+
* Device manufacturer / model: Iphone
* React Native version (`react-native -v`): 0.61.2
* Plugin config
```javascript <!-- Syntax-highlighting:  paste your code below -->
BackgroundGeolocation.ready({
      // Geolocation Config
      desiredAccuracy: BackgroundGeolocation.DESIRED_ACCURACY_HIGH,
      distanceFilter: 10,
      // Activity Recognition
      stopTimeout: 1,
      // Application config
      debug: false, // <-- enable this hear sounds for background-geolocation life-cycle.
      disableLocationAuthorizationAlert: true,
      disableMotionActivityUpdates: true,
      disableStopDetection: true,
      locationAuthorizationRequest: 'Always',
      locationAuthorizationAlert: {
        titleWhenNotEnabled: 'title not enabled',
        titleWhenOff: 'title off',
        instructions: 'Opendoor requires background location permission',
        cancelButton: 'cancel',
        settingsButton: 'settings',
      },
      stopOnTerminate: false,
      startOnBoot: true,
      autoSync: false,
    });

    BackgroundGeolocation.onGeofence(onGeofence);
    BackgroundGeolocation.onProviderChange(onProviderChange);
    BackgroundGeolocation.startGeofences();

```

## Expected Behavior
According to the [ios documentation](https://developer.apple.com/documentation/corelocation/monitoring_the_user_s_proximity_to_geographic_regions), `Whenever the user crosses the boundary of one of your app's registered regions, the system notifies your app.`. 
In this [plugin's documentation](https://transistorsoft.github.io/react-native-background-geolocation/classes/_react_native_background_geolocation_.backgroundgeolocation.html#startgeofences), it says `In this mode, no active location-tracking will occur — only geofences will be monitored.`.

With these two points of data, I expect that the ios `<App> has used your location <x> times in the background.` prompt should only appear if we've created and used geofences and should only show locations that the user has interacted with the geofences.

## Actual Behavior
The `<App> has used your location <x> times in the background.` prompt appears wether we have created or used geofences and suggests that our app is using the background location far more than we actually are.

## Steps to Reproduce
1. Set up the plugin like above. 
2. Escalate your app permission to non-provisional `always allow`.
2. DO NOT create geofences or create geofences that you will never overlap with.
3. Change location multiple times, but never into a geofence
4. Wait ??? amount of time for the ios system prompt

## Context
There is no good documentation about this specific prompt from Apple, nothing to tell the actual expected behavior. Too, I'm not certain if this plugin works like I expect it to or if I've configured it in a way that it won't work like I expect it to.

when app terminated ,  i set stopOnTerminate: false. how to get location on 15 minutes ?????  help me , please
Currently i am doing my tests with two devices

1 - OS Version Android 8.1
2 - OS Version Android 9

on the 8.1 device, everything works well, the backbround Task is working corectly and it rigers the in_vehicule activity.

but on the Android 9 device, i receive only one location and then it goes blind, when i start the plugin. 

any idea about this.

best
## Your Environment

* Plugin version: 3.3.0 and 3.3.2
* Platform: Both iOS and Android
* OS version: iOS 13, android 9
* Device manufacturer / model: various
* React Native version: 0.61.5
* Plugin config: Will include in debug log later

## Description

One of our testers is in a rural location and often enters cellular cells where there is poor reception. A few times a day, the phone's cellular data connection will have trouble and this plugin (ie. 'RNBGL') will be unable to post location data to our server.

We have variously seen these types of error messages in the debug log:

⚠️  server.example.com is not responding.  Will try again after 10 records.
⚠️  Response: 0, Unable to resolve host "server.example.com": No address associated with hostname
⚠️  Response: 0, Failed to connect to server.example.com/n.n.n.n:443

These are legitimate errors and we accept that they will occur. Up to this point, it's all fine and good.

However, after one of these errors occurs, and the phone enters an area with good reception (or wifi), we expect the plugin to detect this and start uploading data again. However, this is not the case. We often have to restart/open/foreground our app and then the plugin will start emitting again.

So a sequence like this happens:

1. Tester's phone has network connectivity issues. Plugin stops uploading location.
2. Error messages are seen in the log.
3. Tester goes to a new area with good reception. Alternatively, tester goes home and connects to home wifi.
4. A variable amount of time elapses.
5. Tester opens the app. Plugin resumes uploading location again.

Expected: Soon after step 3 occurs, the plugin should resume uploading. In other words, step 4 only lasts for a short amount of time.

Observed: Step 4 lasts until the tester opens the app. Sometimes this can be 10-20 minutes or more. In one instance, it lasted for about 90 minutes.

## Expected Behavior

See above

## Actual Behavior

See above

## Discussion

Most of the time, the plugin works as expected. So if this issue doesn't occur, then all is good.

However, when one of the above-mentioned error messages occurs, the plugin stops uploading.

Also, when this happens, I can see in the log that the plugin is still acquiring locations and saving them in the offline database for uploading later. So the plugin is still operating and 'doing stuff', just that, for some reason, it doesn't upload to the server.

When connectivity resumes, the plugin successfully uploads all the 'offline' data points (we have `maxRecordsToPersist` of 20).

## Debug logs

Will email separately if needed later.

I'm going to test out a debug version of our app with some extra connectivity-related debugging. Hopefully that will produce a more useful debug log.


<!--
*****************************************************************
* WARNING:  If you ignore this template, so too will your issue
*****************************************************************
-->

<!--
  Provide a general summary of the issue in the Title above
-->
## Your Environment
* Plugin version: 3.4.2
* Platform: iOS
* OS version: 13.3
* Device manufacturer / model: I Phone 11
* React Native version (`react-native -v`): 0.61.5
* Plugin config
```javascript <!-- Syntax-highlighting:  paste your code below -->
BackgroundGeolocation.ready({
            // Geolocation Config
            desiredAccuracy: BackgroundGeolocation.DESIRED_ACCURACY_HIGH,
            distanceFilter: 10,
            geofenceModeHighAccuracy: true,
            // Activity Recognition
            stopTimeout: 1,
            enableHeadless: true,
            // Application config
            debug: true, // <-- enable this hear sounds for background-geolocation life-cycle.
            logLevel: BackgroundGeolocation.LOG_LEVEL_VERBOSE,
            stopOnTerminate: false,   // <-- Allow the background-service to continue tracking when user closes the app.
            startOnBoot: true
        }, (state) => {
            console.log("- BackgroundGeolocation is configured and ready: ", state.enabled);
      
            if (!state.enabled) {

                
                
                BackgroundGeolocation.startGeofences()
            }
        });
```

## Expected Behavior
<!--- Tell us what should happen -->
`BackgroundGeolocation.onGeofence` is supposed to be called and i should get a notification about the geofence i entered
## Actual Behavior
<!--- Tell us what happens instead -->
When i close the app and remove it from the recent apps the `BackgroundGeolocation.onGeofence` event doesn't get called 
## Steps to Reproduce
<!--- reproduce this issue; include code to reproduce, if relevant -->
1. Configure the plugin with the above config code
2. Add a geofence 
```javascript
BackgroundGeolocation.addGeofence({
            identifier: "Home",
            radius: 200,
            latitude: 45.51921926,
            longitude: -73.61678581,
             notifyOnEntry: true,
            notifyOnExit: true,
             extras: {
              route_id: 1234
        }
        }).then((success) => {
        console.log("[addGeofence] success==========");
        }).catch((error) => {
        console.log("[addGeofence] FAILURE: ========", error);
        });

        BackgroundGeolocation.onGeofence(geofence => {
            console.log("[geofence] ", geofence.identifier, geofence.action);

            PushNotification.localNotification({
                title:"Hello",
                message: "You entered a geofence"
            })
            
        });
```
3. run the app
4.in the IOS simulator got to debug and change the custom location to lat:45.51921926 and long:-73.61678581

## Context
<!--- What were you trying to do? -->
i am trying to get a notification when a user enters a certain geofence. i am using `react-native-push-notification` for handling notifications
the notification pops if the app is in the background (not removed from the recent apps).

i can see the app starting in the background when app is dead and geofence is entered but non of my code inside the `BackgroundGeolocation.onGeofence` is getting executed 

i tried turning on `degub:true` in the config and i get the default debug notification `ENTER Geofence: geofence_id` even when the app is dead.

<img width="293" alt="Screen Shot 2020-01-01 at 11 02 50 AM" src="https://user-images.githubusercontent.com/11531221/71639375-9d07df00-2c86-11ea-9201-a3a7efdbabe2.png">

but my custom notification is not getting fired.

i also have Headless task registered for Android and everything works fine on Android


<!--
*****************************************************************
* WARNING:  If you ignore this template, so too will your issue
*****************************************************************
-->

<!--
  Provide a general summary of the issue in the Title above
-->
## Your Environment
* Plugin version: 3.0.7
* Platform: Android
* OS version: 8.0
* Device manufacturer / model: Samsung devices
* React Native version (`react-native -v`): 0.59.10
* Plugin config
```javascript <!-- Syntax-highlighting:  paste your code below -->
java.lang.IllegalArgumentException: Receiver not registered: com.transistorsoft.locationmanager.device.a$a@30ad369
1
at com.swoopmobile.MainApplication.a ([unknown]:4)
2
at com.swoopmobile.MainApplication$2.uncaughtException ([unknown]:2)
3
at com.pushwoosh.internal.crash.g.uncaughtException ([unknown]:107)
4
at com.transistorsoft.locationmanager.adapter.BackgroundGeolocation$e.uncaughtException ([unknown]:108)
5
at java.lang.ThreadGroup.uncaughtException (ThreadGroup.java:1073)
6
at java.lang.ThreadGroup.uncaughtException (ThreadGroup.java:1068)
7
at java.lang.Thread.dispatchUncaughtException (Thread.java:2187)


config settings: {
  desiredAccuracy: Platform.OS === 'ios' ? BackgroundGeolocation.DESIRED_ACCURACY_NAVIGATION : BackgroundGeolocation.DESIRED_ACCURACY_HIGH,
  // Android only
  distanceFilter: 150,
  fastestLocationUpdateInterval: 15000,
  foregroundService: true,
  notificationTitle: 'Swoop',
  notificationText: 'Tracking your location',
  allowIdenticalLocations: true,

  // This will keep location services always on (this used to be true)
  disableStopDetection: false,
  // Stop on app terminate (this used to be false)
  stopOnTerminate: true,
  // Restart tracking on phone restart (this used to be true)
  startOnBoot: false,
  maxRecordsToPersist: 1,

  // Ios only
  // This is the motion permission which will help battery life (used to be true)
  disableMotionActivityUpdates: false,

  /*
   * Without reset: true, the plugin will cache settings and ignore changes to them
   */
  reset: true,

  locationAuthorizationRequest: 'Always',
  // Activity Recognition
  stopTimeout: 1,
  // Application config, beeps when location succeess or fails
  // debug: false,  // __DEV__ && Config.GEOLOCATION_DEBUG === 'true',
  // debug: true,
  logLevel:
    __DEV__ && Config.GEOLOCATION_DEBUG === 'true' ?
      BackgroundGeolocation.LOG_LEVEL_VERBOSE :
      BackgroundGeolocation.OFF,

  // Set true to sync multiple stored locations to server in a single HTTP request.
  batchSync: false,
  //  Set true to sync each location to server as it arrives.
  autoSync: true,
  // Don't send server side updates inside the geolocation component
  url: null,
}
```

## Expected Behavior
error not to happen

## Actual Behavior
Our bug tracker; Rollbar, is reporting lots of these errors from our users.

## Steps to Reproduce
Cannot repo in person but can see it in Rollbar bug tracker

## Context
<!--- What were you trying to do? -->
Is this caused by stopOnTerminate: true? how can we make this work with that setting enabled?

## Debug logs
<!-- include iOS / Android logs
- ios XCode logs,
- use #getLog #emailLog methods (@see docs)
- Android: $ adb logcat -s TSLocationManager
-->
<details><summary>Logs</summary>

``` <!-- Syntax highlighting:  DO NOT REMOVE -->
PASTE_YOUR_LOGS_HERE
```

</details>

<!--
*****************************************************************
* WARNING:  If you ignore this template, so too will your issue
*****************************************************************
-->

<!--
  Provide a general summary of the issue in the Title above
-->
## Your Environment
* Plugin version: 3.3.2
* Platform: Android
* OS version: Android 9.0
* Device manufacturer / model: Redmi note 7 pro
* React Native version (`react-native -v`):  0.59.0
* Plugin config
```javascript <!-- Syntax-highlighting:  paste your code below -->



        BackgroundGeolocation.onActivityChange(this.onActivityChange.bind(this));
        BackgroundGeolocation.onLocation(this.onLocation.bind(this), this.onError.bind(this));
        BackgroundGeolocation.ready({
          locationAuthorizationRequest: 'Any',
          desiredAccuracy: BackgroundGeolocation.DESIRED_ACCURACY_HIGH,
          distanceFilter:  10,
          stopTimeout: 1,
          debug: false, // <-- enable this hear sounds for background-geolocation life-cycle.
          stopOnTerminate: true,   // <-- Allow the background-service to continue tracking when user closes the app.
          startOnBoot: false,        // <-- Auto start tracking when device is powered-up.
          preventSuspend: true,     //iOS Only location-services have been switched off while running in the background.
          persistMode: BackgroundGeolocation.PERSIST_MODE_NONE,  // Persist nothing (neither geofence nor location events)
        }, (state) => {
          console.log("- BackgroundGeolocation is configured and ready: ", state.enabled);
          LogEvent("Background Geo",state)
    
          if (!state.enabled) {
            
            BackgroundGeolocation.start();
          }
        });


```

## Expected Behavior
onActivityChange should get the listener trigger on the activity change with correct activity. Ex. If I am walking then I should get walking, and if I am driving I should get on_vehicle.

onLocation should get the location updates with the correct activity.

## Actual Behavior

But I am not getting the callbacks on a regular basis and even I got it sometimes it gives me wrong activity in response.
Also seen some time, two devices with the same activity at the same time did not give the same output.
I am getting an activity `Walking` on one device and the other giving me `on_vehicle`. 

onLocation listener is also sending location object with wrong activity.

There is no consistency of result sometimes it works perfectly and sometimes it is giving you the wrong response. When it sending you wrong output it continues to do so for a long time.

## Steps to Reproduce
1. Integrate the code and get the response on listeners


## Context
I have to identify switch on / off on_vehicle mode of the app.
