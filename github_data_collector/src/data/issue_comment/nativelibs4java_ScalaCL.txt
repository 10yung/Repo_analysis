Great Project. I have JavaCL and Scala2.11.7. I am looking to create a sparse matrix library that uses arrays quickly with optimized code. Any chance I will see a 2.11.7 or 2.12+ version?

java.lang.AssertionError: assertion failed: Case not handled in tuples and blocks flattening : scala.this.Predef.intWrapper(0).until(a.columns).map[Float, scala.collection.immutable.IndexedSeq[Float]](%28%28k: Int%29 => a.data.apply%28i.*%28a.columns%29.+%28k%29.toLong%29.*%28b.data.apply%28k.*%28b.columns%29.+%28item$val$macro$18%29.toLong%29%29%29)(immutable.this.IndexedSeq.canBuildFrom[Float]).sum[Float]: scala.reflect.internal.Trees$TypeApply

Hi @ochafik !
I have some spare time going forward and was thinking it would be cool to work a bit on opencl. As a scala dev I want to do this in Scala. However, the copyright on ScalaCL doesn't really promote contributions to ScalaCL because of the copyright you have on it.
If it was a pure Apache V2 license and other contributors were referenced would be more interesting to for me to contribute. Not trying to force you here, just thought it would be better to raise an issue than to create a new project that aims to use scala macros to define opencl kernels.
Note: I am still not sure whether opencl for scala is what I am interesting in spending my time on even if the license changes - just saying I am guaranteed to not work on ScalaCL until the license changes.

The issue is pretty self-explanatory: I write a simple job based on demo code, I verify my GPU is recognized, and the context is properly initted-- but when I execute the code, the computatin fails with a segfault... I have an intuition that the issue is coming around compilation time for the kernel, but I don't really know.

Any hints to further debug this issue?

```
object Woah extends App {

  import scalacl._

  implicit val context = Context.best

  println(context.context)
  println("stage 0")
  val a = CLArray[Int](1, 2, 3)
  val v = 10
  println("stage 1")
  val clFunction: CLFunction[Int, Float] = (x: Int) => {
    x * 2.0f * v
  }
  println("stage 2-- expect FAIL")
  val clResul = a.map(clFunction).toArray
  println(" we will probably not get to stage 3 : (")
}



CLContext(platform = NVIDIA CUDA; devices = Quadro K1100M)
stage 0
stage 1
stage 2-- expect FAIL
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f62df464aea, pid=2059, tid=140062637090560
#
# JRE version: OpenJDK Runtime Environment (7.0_79-b14) (build 1.7.0_79-b14)
# Java VM: OpenJDK 64-Bit Server VM (24.79-b02 mixed mode linux-amd64 compressed oops)
# Derivative: IcedTea 2.5.6
# Distribution: Ubuntu 14.04 LTS, package 7u79-2.5.6-0ubuntu1.14.04.1
# Problematic frame:
# C  [libc.so.6+0x88aea]  strlen+0x2a
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# An error report file with more information is saved as:
REDACTED
#
# If you would like to submit a bug report, please include
# instructions on how to reproduce the bug and visit:
#   http://icedtea.classpath.org/bugzilla
# The crash happened outside the Java Virtual Machine in native code.
# See problematic frame for where to report the bug.
#

Process finished with exit code 134
```

### nativelibs4java/ScalaCL now has a Chat Room on Gitter

@ochafik has just created a chat room. You can visit it here: [https://gitter.im/nativelibs4java/ScalaCL](https://gitter.im/nativelibs4java/ScalaCL?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).

This pull-request adds this badge to your README.md:

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/nativelibs4java/ScalaCL?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)

If my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).

Happy chatting.

PS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.

_From @mmozum on August 20, 2014 17:55_

I am trying to run ScalaCL along with scala2.9.3. I put the  scalacl-compiler-plugin-0.3-SNAPSHOT.jar in the $SCALA_HOME/misc/scala-devel/plugins/ folder and try to run the following Test.scala

~/repos/scala-2.9.3/test$ cat Test.scala 
import scalacl._
import scala.math._

object Test {
  def main(args: Array[String]): Unit = {
    val a = (100 until 100000).toArray
    val sum = a.map(_ \* 2).zipWithIndex.map(p => p._1 / (p._2 + 1)).sum
    println("sum = " + sum)
  }
}

~/repos/scala-2.9.3/test$ scalac Test.scala 
error: java.lang.reflect.InvocationTargetException
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
...

Caused by: java.lang.NoClassDefFoundError: scala/tools/nsc/MissingRequirementError
    at scalacl.plugin.ScalaCLPlugin.<init>(ScalaCLPlugin.scala:89)
    ... 33 more
Caused by: java.lang.ClassNotFoundException: scala.tools.nsc.MissingRequirementError
    at java.net.URLClassLoader$1.run(URLClassLoader.java:372)
....
...

```
... 34 more
```

Exception in thread "main" java.lang.reflect.InvocationTargetException
    at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
    at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
    at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
    at java.lang.reflect.Constructor.newInstance(Constructor.java:408)
...
...
...

Caused by: java.lang.NoClassDefFoundError: scala/tools/nsc/MissingRequirementError
    at scalacl.plugin.ScalaCLPlugin.<init>(ScalaCLPlugin.scala:89)
    ... 33 more
Caused by: java.lang.ClassNotFoundException: scala.tools.nsc.MissingRequirementError
    at java.net.URLClassLoader$1.run(URLClassLoader.java:372)

_Copied from original issue: ochafik/nativelibs4java#523_

_From @ekasitk on March 18, 2014 5:49_

By these two lines:

val input = Array(1,2,3,4,5).cl
val output = input.map( (i:Int) => 1).toArray

the compiler plugin generates the following error in the 2nd line.  I use scalacl-0.2 with javacl-1.0.0-RC2.

[scalacl] Test.scala:36 transformed Array[Int].foreach into equivalent while loop.
[scalacl] Converted <<<
    1

> > > to <<<
> > >     (1)
> > > 
> > > scala.tools.nsc.symtab.Types$TypeError: type mismatch;
> > >  found   : Int => Int
> > >  required: Int => Int(1)
> > >     at scala.tools.nsc.typechecker.Contexts$Context.error(Contexts.scala:298)
> > >     at scala.tools.nsc.typechecker.Infer$Inferencer.error(Infer.scala:207)
> > >     at scala.tools.nsc.typechecker.Infer$Inferencer.typeError(Infer.scala:21
> > > 7)  at scala.tools.nsc.typechecker.Infer$Inferencer.typeErrorTree(Infer.scal
> > > a:232)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.adapt(Typers.scala:936)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:4283)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typedArg(Typers.scala:2191)
> > >     at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedArgs$3.apply(T
> > > ypers.scala:2204)
> > >     at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedArgs$3.apply(T
> > > ypers.scala:2203)
> > >     at scala.Tuple3$Zipped$$anonfun$map$1.apply(Tuple3.scala:66)
> > >     at scala.Tuple3$Zipped$$anonfun$map$1.apply(Tuple3.scala:64)
> > >     at scala.collection.LinearSeqOptimized$class.foreach(LinearSeqOptimized.
> > > scala:59)
> > >     at scala.collection.immutable.List.foreach(List.scala:76)
> > >     at scala.Tuple3$Zipped.map(Tuple3.scala:64)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typedArgs(Typers.scala:2203)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.doTypedApply(Typers.scala:24
> > > 23)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:33
> > > 74)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4107)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:4274)
> > >     at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedApply$1$1.appl
> > > y(Typers.scala:3356)
> > >     at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedApply$1$1.appl
> > > y(Typers.scala:3356)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.silent(Typers.scala:624)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:33
> > > 56)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:4107)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:4274)
> > >     at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:4334)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.scalacl$plu
> > > gin$ScalaCLFunctionsTransformComponent$$anon$$convertFunctionToCLFunction(ScalaC
> > > LFunctionsTransformComponent.scala:283)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$tr
> > > ansform$2.apply(ScalaCLFunctionsTransformComponent.scala:325)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$tr
> > > ansform$2.apply(ScalaCLFunctionsTransformComponent.scala:324)
> > >     at scalacl.plugin.TreeBuilders$class.msg(TreeBuilders.scala:61)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent.msg(ScalaCLFunction
> > > sTransformComponent.scala:52)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(S
> > > calaCLFunctionsTransformComponent.scala:324)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:845)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transf
> > > orm(TypingTransformers.scala:53)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(S
> > > calaCLFunctionsTransformComponent.scala:355)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$4.apply(Tree
> > > s.scala:777)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$4.apply(Tree
> > > s.scala:776)
> > >     at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:38)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:31)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:775)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transf
> > > orm(TypingTransformers.scala:53)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(S
> > > calaCLFunctionsTransformComponent.scala:355)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply
> > > (Trees.scala:891)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply
> > > (Trees.scala:889)
> > >     at scala.collection.immutable.List.loop$1(List.scala:148)
> > >     at scala.collection.immutable.List.mapConserve(List.scala:164)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:799)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transf
> > > orm(TypingTransformers.scala:53)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(S
> > > calaCLFunctionsTransformComponent.scala:355)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$5.apply(Tree
> > > s.scala:783)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$5.apply(Tree
> > > s.scala:781)
> > >     at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:38)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:31)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:780)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transf
> > > orm(TypingTransformers.scala:53)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(S
> > > calaCLFunctionsTransformComponent.scala:355)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply
> > > (Trees.scala:891)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply
> > > (Trees.scala:889)
> > >     at scala.collection.immutable.List.loop$1(List.scala:148)
> > >     at scala.collection.immutable.List.mapConserve(List.scala:164)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:797)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.scala$
> > > tools$nsc$transform$TypingTransformers$TypingTransformer$$super$transform(Typing
> > > Transformers.scala:49)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonf
> > > un$transform$1.apply(TypingTransformers.scala:49)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonf
> > > un$transform$1.apply(TypingTransformers.scala:49)
> > >     at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:38)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:31)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transf
> > > orm(TypingTransformers.scala:49)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(S
> > > calaCLFunctionsTransformComponent.scala:355)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:8
> > > 75)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$3.apply(Tree
> > > s.scala:772)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$3.apply(Tree
> > > s.scala:771)
> > >     at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:38)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:31)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:770)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transf
> > > orm(TypingTransformers.scala:53)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(S
> > > calaCLFunctionsTransformComponent.scala:355)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply
> > > (Trees.scala:891)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply
> > > (Trees.scala:889)
> > >     at scala.collection.immutable.List.loop$1(List.scala:148)
> > >     at scala.collection.immutable.List.mapConserve(List.scala:164)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$1.apply(Tree
> > > s.scala:761)
> > >     at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$1.apply(Tree
> > > s.scala:761)
> > >     at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:38)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:31)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:760)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.scala$
> > > tools$nsc$transform$TypingTransformers$TypingTransformer$$super$transform(Typing
> > > Transformers.scala:49)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonf
> > > un$transform$2.apply(TypingTransformers.scala:51)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonf
> > > un$transform$2.apply(TypingTransformers.scala:51)
> > >     at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:38)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwne
> > > r(TypingTransformers.scala:31)
> > >     at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transf
> > > orm(TypingTransformers.scala:51)
> > >     at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(S
> > > calaCLFunctionsTransformComponent.scala:355)
> > >     at scala.tools.nsc.ast.Trees$Transformer.transformUnit(Trees.scala:892)
> > >     at scala.tools.nsc.transform.Transform$Phase.apply(Transform.scala:30)
> > >     at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:329)
> > >     at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:
> > > 297)
> > >     at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:
> > > 297)
> > >     at scala.collection.Iterator$class.foreach(Iterator.scala:772)
> > >     at scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:
> > > 318)
> > >     at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:297)
> > >     at scala.tools.nsc.Global$Run.compileSources(Global.scala:953)
> > >     at scala.tools.nsc.Global$Run.compile(Global.scala:1041)
> > >     at scala.tools.nsc.Main$.process(Main.scala:106)
> > >     at scala.tools.nsc.Main$.main(Main.scala:123)
> > >     at scala.tools.nsc.Main.main(Main.scala)
> > > warning: [scalacl] Test.scala:35 An unexpected error occurred while attempting an optimization

_Copied from original issue: ochafik/nativelibs4java#486_

_From @dbarowy on April 27, 2012 13:54_

I get this error when compiling the sample code with 'scalac Test.scala'.  Running this in the scala REPL reveals that calling 'map(p => p._1 \* p._2)' on 'scalacl.CLIndexedSeq'.

Am I missing something here or is this a bug?  I am not familiar enough with scalac passes to diagnose myself.

colTpe = scalacl.CLIndexedSeq[(Int, Int)]
colTpe.typeSymbol.typeConstructor = scalacl.CLIndexedSeq
colTpe.typeSymbol.typeConstructor == CLArray = false
OpenCL colTpe ; op = map
ScalaCLFunctionsTransform: Exception getting CLDataIO for tuple.  e=scala.Predef$.assert(Predef.scala:89)
scalacl.impl.CLTupleDataIO.<init>(CLDataIO.scala:120)
scalacl.plugin.ScalaCLFunctionsTransformComponent.getDataIOByTupleInfo(ScalaCLFunctionsTransformComponent.scala:92)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anonfun$getDataIOByTupleInfo$1.apply(ScalaCLFunctionsTransformComponent.scala:92)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anonfun$getDataIOByTupleInfo$1.apply(ScalaCLFunctionsTransformComponent.scala:92)
scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
scala.collection.mutable.ArrayOps.map(ArrayOps.scala:38)
scalacl.plugin.ScalaCLFunctionsTransformComponent.getDataIOByTupleInfo(ScalaCLFunctionsTransformComponent.scala:92)
scalacl.plugin.ScalaCLFunctionsTransformComponent.getDataIO(ScalaCLFunctionsTransformComponent.scala:108)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.scalacl$plugin$ScalaCLFunctionsTransformComponent$$anon$$getDataIOImplicit(ScalaCLFunctionsTransformComponent.scala:215)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$20.apply(ScalaCLFunctionsTransformComponent.scala:397)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$20.apply(ScalaCLFunctionsTransformComponent.scala:397)
scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
scala.collection.mutable.ArrayOps.map(ArrayOps.scala:38)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.scalacl$plugin$ScalaCLFunctionsTransformComponent$$anon$$convertFunctionToCLFunction(ScalaCLFunctionsTransformComponent.scala:397)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$transform$2.apply(ScalaCLFunctionsTransformComponent.scala:542)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$transform$2.apply(ScalaCLFunctionsTransformComponent.scala:541)
com.nativelibs4java.scalaxy.common.TreeBuilders$class.msg(TreeBuilders.scala:62)
scalacl.plugin.ScalaCLFunctionsTransformComponent.msg(ScalaCLFunctionsTransformComponent.scala:59)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:541)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:845)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:835)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:837)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$4.apply(Trees.scala:777)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$4.apply(Trees.scala:776)
scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:775)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:891)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:889)
scala.collection.immutable.List.loop$1(List.scala:117)
scala.collection.immutable.List.mapConserve(List.scala:133)
scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:799)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$5.apply(Trees.scala:783)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$5.apply(Trees.scala:781)
scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:780)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:891)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:889)
scala.collection.immutable.List.loop$1(List.scala:117)
scala.collection.immutable.List.mapConserve(List.scala:133)
scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:797)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.scala$tools$nsc$transform$TypingTransformers$TypingTransformer$$super$transform(TypingTransformers.scala:49)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonfun$transform$1.apply(TypingTransformers.scala:49)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonfun$transform$1.apply(TypingTransformers.scala:49)
scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:49)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:875)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$3.apply(Trees.scala:772)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$3.apply(Trees.scala:771)
scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:770)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:891)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:889)
scala.collection.immutable.List.loop$1(List.scala:117)
scala.collection.immutable.List.mapConserve(List.scala:133)
scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$1.apply(Trees.scala:761)
scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$1.apply(Trees.scala:761)
scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:760)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.scala$tools$nsc$transform$TypingTransformers$TypingTransformer$$super$transform(TypingTransformers.scala:49)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonfun$transform$2.apply(TypingTransformers.scala:51)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonfun$transform$2.apply(TypingTransformers.scala:51)
scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:51)
scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
scala.tools.nsc.ast.Trees$Transformer.transformUnit(Trees.scala:892)
scala.tools.nsc.transform.Transform$Phase.apply(Transform.scala:30)
scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:329)
scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:297)
scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:297)
scala.collection.Iterator$class.foreach(Iterator.scala:660)
scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:316)
scala.tools.nsc.Global$GlobalPhase.run(Global.scala:297)
scala.tools.nsc.Global$Run.compileSources(Global.scala:953)
scala.tools.nsc.Global$Run.compile(Global.scala:1038)
scala.tools.nsc.Main$.process(Main.scala:106)
scala.tools.nsc.Main$.main(Main.scala:123)
scala.tools.nsc.Main.main(Main.scala)

warning: [scalacl] Test.scala:9 An unexpected error occurred while attempting an optimization
[scalacl] Test.scala:9   Attempted optimization : 'associated equivalent OpenCL source to scalacl.CLIndexedSeq[(Int, Int)].map's function argument.'
[scalacl] Test.scala:9   You can skip this line with the following environment variable :
[scalacl] Test.scala:9     SCALACL_SKIP=Test.scala:9
[scalacl] Test.scala:9   To display the error and help debug the ScalaCL compiler plugin, please set the following environment variable :
[scalacl] Test.scala:9     SCALACL_TRACE=1
[scalacl] Test.scala:9   You can help by filing bugs here (with [ScalaCLPlugin] in the title) :
[scalacl] Test.scala:9     http://code.google.com/p/nativelibs4java/issues/entry
[scalacl] Test.scala:9 An unexpected error occurred while attempting an optimization
[scalacl] Test.scala:9   Attempted optimization : 'associated equivalent OpenCL source to scalacl.CLIndexedSeq[(Int, Int)].map's function argument.'
[scalacl] Test.scala:9   You can skip this line with the following environment variable :
[scalacl] Test.scala:9     SCALACL_SKIP=Test.scala:9
[scalacl] Test.scala:9   To display the error and help debug the ScalaCL compiler plugin, please set the following environment variable :
[scalacl] Test.scala:9     SCALACL_TRACE=1
[scalacl] Test.scala:9   You can help by filing bugs here (with [ScalaCLPlugin] in the title) :
[scalacl] Test.scala:9     http://code.google.com/p/nativelibs4java/issues/entry
java.lang.AssertionError: assertion failed
    at scala.Predef$.assert(Predef.scala:89)
    at scalacl.impl.CLTupleDataIO.<init>(CLDataIO.scala:120)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent.getDataIOByTupleInfo(ScalaCLFunctionsTransformComponent.scala:92)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anonfun$getDataIOByTupleInfo$1.apply(ScalaCLFunctionsTransformComponent.scala:92)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anonfun$getDataIOByTupleInfo$1.apply(ScalaCLFunctionsTransformComponent.scala:92)
    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
    at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
    at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
    at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
    at scala.collection.mutable.ArrayOps.map(ArrayOps.scala:38)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent.getDataIOByTupleInfo(ScalaCLFunctionsTransformComponent.scala:92)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent.getDataIO(ScalaCLFunctionsTransformComponent.scala:108)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.scalacl$plugin$ScalaCLFunctionsTransformComponent$$anon$$getDataIOImplicit(ScalaCLFunctionsTransformComponent.scala:215)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$20.apply(ScalaCLFunctionsTransformComponent.scala:397)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$20.apply(ScalaCLFunctionsTransformComponent.scala:397)
    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
    at scala.collection.TraversableLike$$anonfun$map$1.apply(TraversableLike.scala:194)
    at scala.collection.IndexedSeqOptimized$class.foreach(IndexedSeqOptimized.scala:34)
    at scala.collection.mutable.ArrayOps.foreach(ArrayOps.scala:38)
    at scala.collection.TraversableLike$class.map(TraversableLike.scala:194)
    at scala.collection.mutable.ArrayOps.map(ArrayOps.scala:38)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.scalacl$plugin$ScalaCLFunctionsTransformComponent$$anon$$convertFunctionToCLFunction(ScalaCLFunctionsTransformComponent.scala:397)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$transform$2.apply(ScalaCLFunctionsTransformComponent.scala:542)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1$$anonfun$transform$2.apply(ScalaCLFunctionsTransformComponent.scala:541)
    at com.nativelibs4java.scalaxy.common.TreeBuilders$class.msg(TreeBuilders.scala:62)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent.msg(ScalaCLFunctionsTransformComponent.scala:59)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:541)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:845)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:835)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:837)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$4.apply(Trees.scala:777)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$4.apply(Trees.scala:776)
    at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:775)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:891)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:889)
    at scala.collection.immutable.List.loop$1(List.scala:117)
    at scala.collection.immutable.List.mapConserve(List.scala:133)
    at scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:799)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$5.apply(Trees.scala:783)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$5.apply(Trees.scala:781)
    at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:780)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:891)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:889)
    at scala.collection.immutable.List.loop$1(List.scala:117)
    at scala.collection.immutable.List.mapConserve(List.scala:133)
    at scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:797)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.scala$tools$nsc$transform$TypingTransformers$TypingTransformer$$super$transform(TypingTransformers.scala:49)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonfun$transform$1.apply(TypingTransformers.scala:49)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonfun$transform$1.apply(TypingTransformers.scala:49)
    at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:49)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer.transformTemplate(Trees.scala:875)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$3.apply(Trees.scala:772)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$3.apply(Trees.scala:771)
    at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:770)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:53)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:891)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transformStats$1.apply(Trees.scala:889)
    at scala.collection.immutable.List.loop$1(List.scala:117)
    at scala.collection.immutable.List.mapConserve(List.scala:133)
    at scala.tools.nsc.ast.Trees$Transformer.transformStats(Trees.scala:889)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$1.apply(Trees.scala:761)
    at scala.tools.nsc.ast.Trees$Transformer$$anonfun$transform$1.apply(Trees.scala:761)
    at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
    at scala.tools.nsc.ast.Trees$Transformer.transform(Trees.scala:760)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.scala$tools$nsc$transform$TypingTransformers$TypingTransformer$$super$transform(TypingTransformers.scala:49)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonfun$transform$2.apply(TypingTransformers.scala:51)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer$$anonfun$transform$2.apply(TypingTransformers.scala:51)
    at scala.tools.nsc.ast.Trees$Transformer.atOwner(Trees.scala:899)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:38)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.atOwner(TypingTransformers.scala:31)
    at scala.tools.nsc.transform.TypingTransformers$TypingTransformer.transform(TypingTransformers.scala:51)
    at scalacl.plugin.ScalaCLFunctionsTransformComponent$$anon$1.transform(ScalaCLFunctionsTransformComponent.scala:574)
    at scala.tools.nsc.ast.Trees$Transformer.transformUnit(Trees.scala:892)
    at scala.tools.nsc.transform.Transform$Phase.apply(Transform.scala:30)
    at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:329)
    at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:297)
    at scala.tools.nsc.Global$GlobalPhase$$anonfun$run$1.apply(Global.scala:297)
    at scala.collection.Iterator$class.foreach(Iterator.scala:660)
    at scala.collection.mutable.ListBuffer$$anon$1.foreach(ListBuffer.scala:316)
    at scala.tools.nsc.Global$GlobalPhase.run(Global.scala:297)
    at scala.tools.nsc.Global$Run.compileSources(Global.scala:953)
    at scala.tools.nsc.Global$Run.compile(Global.scala:1038)
    at scala.tools.nsc.Main$.process(Main.scala:106)
    at scala.tools.nsc.Main$.main(Main.scala:123)
    at scala.tools.nsc.Main.main(Main.scala)
colTpe = scalacl.CLRange
colTpe.typeSymbol.typeConstructor = scalacl.CLRange
colTpe.typeSymbol.typeConstructor == CLArray = false
OpenCL colTpe ; op = map
one warning found

_Copied from original issue: ochafik/nativelibs4java#310_

_From @lostmsu on April 27, 2012 7:5_

``` scala
import scalacl._

object OpenCLTest {
  def main(args: Array[String]): Unit ={
    implicit val context = Context.best
    val rng = (100 until 100000).cl
    for(i <- 1 to 1000){
      val sum = rng.map(_ * 2).zipWithIndex.map(p => p._1 * p._2).sum
      print(i + ": ")
      println("sum = " + sum)
    }
  }
}
```

_Copied from original issue: ochafik/nativelibs4java#309_

_From @mslinn on January 10, 2012 21:27_

Here is my build.sbt:

```
name := "ScalaClTest"

version := "0.1"

scalaVersion := "2.9.1"

autoCompilerPlugins := true

scalacOptions ++= Seq("-deprecation")

addCompilerPlugin("com.nativelibs4java" % "scalacl-compiler-plugin" % "0.2")

resolvers ++= Seq(
  "Sonatype OSS Snapshots" at "http://oss.sonatype.org/content/groups/public/",
  "NativeLibs4Java"        at "http://nativelibs4java.sourceforge.net/maven/",
  "Typesafe Snapshots"     at "http://repo.typesafe.com/typesafe/snapshots",
  "Typesafe Releases"      at "http://repo.typesafe.com/typesafe/releases",
  "Scala-Tools Snapshots"  at "http://scala-tools.org/repo-snapshots",
  "Scala Tools Releases"   at "http://scala-tools.org/repo-releases",
  "Sonatype"               at "http://nexus.scala-tools.org/content/repositories/public"
)

libraryDependencies ++= Seq(
  "com.nativelibs4java" %  "scalacl"   % "latest.integration" % "compile" withSources(),
  "org.scalatest"       %% "scalatest" % "latest.integration" % "test"    withSources()
)
```

I get two errors when compiling the [GettingStarted sample code](http://code.google.com/p/scalacl/wiki/GettingStarted):

```
[error] E:\work\experiments\scala\scalaclTest\src\main\scala\Test.scala:6: value best is not a member of object scalacl.Context
[error]  Note: implicit value context is not applicable here because it comes after the application point and it lacks an explicit result type
[error]     implicit val context = Context.best // prefer CPUs ? use Context.best(CPU)
[error]                                    ^
[error] E:\work\experiments\scala\scalaclTest\src\main\scala\Test.scala:7: value cl is not a member of scala.collection.immutable.Range
[error]     val rng = (100 until 100000).cl // transform the Range into a CLIntRange
```

_Copied from original issue: ochafik/nativelibs4java#229_
