Hey,
When I set the flocking 3D to fly with no gravity, StayGrounded is false, the flocking objects clump together confused, especially at the center of unity space (0,0,0). It's like a gravity well. Let me know how to fix it.

It seems like they lose direction velocity when they're on top of each other.

Thanks.

Hello,

I have a voxel terrain generator (minecraft like) and your script works well on telling the AI to move to a certain point but the problem is that it doesn't climb/jump the 1 meter height blocks. I saw that there is a jump function but I guess its not implemented? Thinking how I should tell the character to jump or walk over 1 height blocks while ignoring more than 1 height blocks.

It is a really well made script for such procedural terrains, because making a dynamic navmesh is a huge pain in the a**.
It would be great to post some TODOs here. I would love to help with this project and that would make it way easier. 

Thanks

Great library! I've adapted it to a 3d project with movement along the x and z axes and it's working beautifully--but there's a major oversight when it comes to rigidbodies that have been destroyed after being added to the NearSensor's hashset.

I tried implementing a solution within the NearSensor script to first check if the rigidbody exists and is enabled before adding to the hashset--but that didn't address the case in which rigidbodies are destroyed _after_ being added (such as when an enemy is killed). Cohesion, Separation, VelocityMatch and CollisionAvoidance were still trying to access the destroyed rigidbody, throwing null exceptions every frame.

I would suggest, in NearSensor-dependent scripts, at the beginning of the foreach loop iterating over members of the rigidbody hashset, to make it first check if the rigidbody at this index is null before accessing it. When I added this check, there were no more errors.

(P.S. I'd be happy to submit a pull request if you'd like to see the various tweaks I made to add this library to my project!)

When 3 or more flocking units come together, it starts rapidly printing out this error message in the console: 
![image](https://cloud.githubusercontent.com/assets/22227746/18570485/5ea9b02a-7b78-11e6-8710-c3847b1c6a34.png)
D:

Hey Anton!

I'd really love to use your library in a Space game I'm currently developing. I therefor need to control spaceships in 3D space. How is your progress on 3D steering? Can I use the dev branch of this library already? Or could you give me a quick advice on what's missing, then I'll implement myself.

Kindest regards
â€“Chris

MissingComponentException: There is no 'Rigidbody' attached to the "ScreenBoundary" game object, but a script is trying to access it.
You probably need to add a Rigidbody to the game object "ScreenBoundary". Or your script needs to check if the component is attached before using it.
UnityEngine.Rigidbody.get_position () (at C:/buildslave/unity/build/artifacts/generated/common/modules/Physics/DynamicsBindings.gen.cs:1536)
Cohesion.getSteering (ICollection`1 targets) (at Assets/unity-movement-ai/Scripts/Movement/Cohesion.cs:28)
FlockingUnit.Update () (at Assets/unity-movement-ai/Scripts/FlockingUnit.cs:35)

No such issue exists for other Example scenes. I am using unity 5.3.4
