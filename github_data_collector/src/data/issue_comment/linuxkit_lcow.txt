Running Linux Containers on Windows has moved towards using WSL. LCOW support is still experimental in docker itself and it's hard to track. For this reason this project has been more or less dormant and I propose to archive it.

@justincormack @deitch @dave-tucker please chime in.
fixes #47 by using the last working kernel 4.19.28
**Docker info:**

```
Client:
 Debug Mode: false
 Plugins:
  app: Docker Application (Docker Inc., v0.8.0)
  buildx: Build with BuildKit (Docker Inc., v0.3.1-tp-docker)

Server:
 Containers: 6
  Running: 6
  Paused: 0
  Stopped: 0
 Images: 14
 Server Version: 19.03.5
 Storage Driver: windowsfilter (windows) lcow (linux)
  Windows:
  LCOW:
 Logging Driver: json-file
 Plugins:
  Volume: local
  Network: ics internal l2bridge l2tunnel nat null overlay private transparent
  Log: awslogs etwlogs fluentd gcplogs gelf json-file local logentries splunk syslog
 Swarm: inactive
 Default Isolation: hyperv
 Kernel Version: 10.0 18362 (18362.1.amd64fre.19h1_release.190318-1202)
 Operating System: Windows 10 Pro Version 1903 (OS Build 18362.476)
 OSType: windows
 Architecture: x86_64
 CPUs: 8
 Total Memory: 31.92GiB
 Name: DESKTOP-PAVE4Q1
 ID: H32P:DKDW:VCUR:3ART:FT7Q:KP5K:BGCK:IB4B:NGZO:3RUT:PVYE:RGWC
 Docker Root Dir: C:\ProgramData\Docker
 Debug Mode: true
  File Descriptors: -1
  Goroutines: 104
  System Time: 2019-11-22T13:10:53.1405642Z
  EventsListeners: 2
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: true
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false
 Product License: Community Engine
```

**Dockerfile:**

```
api:
    cap_add:
        - SYS_ADMIN
    devices:
        - "/dev/fuse:/dev/fuse"
```

**Running a mount command after installing fuse, sshfs and ssh:**

`sshfs -o allow_other,StrictHostKeyChecking=no,password_stdin user@hostname.fully.qualified:/home/data /mnt/api/6cfe000c-f450-4786-8e4d-dbc9fe417972`

> fuse: device not found, try 'modprobe fuse' first

**whereis modprobe and whereis fuse checks:**

```
root@d5aa5c9b976f:/var/api# whereis modprobe
modprobe:
root@d5aa5c9b976f:/var/api# whereis fuse
fuse: /etc/fuse.conf
```

**Run `modprobe fuse`:**

> bash: modprobe: command not found

**Install modprobe `apt-get install module-init-tools` (This installs kmod as required etc...)**

**Re-run the command `modprobe fuse`:**

```
modprobe: ERROR: ../libkmod/libkmod.c:586 kmod_search_moddep() could not open moddep file '/lib/modules/4.19.27-linuxkit/modules.dep.bin'
modprobe: FATAL: Module fuse not found in directory /lib/modules/4.19.27-linuxkit
```

Is this a limitation of linuxkit/lcow?
I think I opened the original issue in the wrong place: https://github.com/moby/moby/issues/39622#issue-474059608

Should I duplicate the entire text here or is the link sufficient?
I can't seem to get this working on Windows Server 2016 (version 1607),  OS BUILD 14393.3025.

I have build

I get the output:
```
PS C:\Users\Together> docker -H "npipe:////./pipe//docker_lcow" version
Client: Docker Engine - Enterprise
 Version:           18.09.7
 API version:       1.39
 Go version:        go1.10.8
 Git commit:        b81f47481d
 Built:             06/27/2019 17:58:58
 OS/Arch:           windows/amd64
 Experimental:      false

Server:
 Engine:
  Version:          master-dockerproject-2019-07-01
  API version:      1.41 (minimum version 1.24)
  Go version:       go1.12.6
  Git commit:       e105a74
  Built:            Tue Jul  2 00:16:45 2019
  OS/Arch:          windows/amd64
  Experimental:     true
```
I get the following error when trying to run the docker image:
```
PS C:\Users\Together> docker -H "npipe:////./pipe//docker_lcow" run -ti busybox sh
Unable to find image 'busybox:latest' locally
latest: Pulling from library/busybox
C:\Program Files\Docker\docker.exe: no matching manifest for windows/amd64 10.0.14393 in the manifest list entries.
See 'C:\Program Files\Docker\docker.exe run --help'.
```

What does this mean and how does one fix this? Plenty of peeps have had this issue over at the comments section at: https://blog.docker.com/2017/09/preview-linux-containers-on-windows/
After building the following `Dockerfile`, the container cannot use `sudo` due to PAM issue: 

```Dockerfile
FROM opensuse/leap:42.3

RUN zypper --non-interactive install \
    sudo

#fix bug: https://github.com/openSUSE/docker-containers/issues/82
RUN sed -i 's/.*root.*-.*nproc.*unlimited.*$//g' /etc/security/limits.conf

CMD sudo ls
```

```
docker build . -t leap-pam-issue
docker run --rm leap-pam-issue
```
```
sudo: pam_open_session: Permission denied
sudo: policy plugin failed session initialization
```
This was on OpenSUSE, might also affect Centos/rhel related images.

Original:
https://github.com/openSUSE/docker-containers/issues/82#issuecomment-494416167


I'm not sure if the latest merged PR #45 was intended to be consumed publicly, but the kernel image resulting from building at that SHA will not launch containers in my environment.

I left some comments already at https://github.com/linuxkit/lcow/pull/45#issuecomment-487787635 with more specifics of my environment / build process / etc.

I bring this up because of the problems I'm seeing with DNS resolution in LCOW + Alpine that I raised in - https://github.com/Microsoft/opengcs/issues/303

Maybe this is an issue that's been addressed already in the dependency bumps, but I can't use it at the moment.

To recap the linked comments, this is what my Docker environment looks like:

```
Client:
 Debug Mode: false
 Plugins:
  app: Docker Application (Docker Inc., v0.8.0-beta2)
  buildx: Build with BuildKit (Docker Inc., v0.2.0-6-g509c4b6-tp)

Server:
 Containers: 3
  Running: 0
  Paused: 0
  Stopped: 3
 Images: 59
 Server Version: master-dockerproject-2019-04-28
 Storage Driver: windowsfilter (windows) lcow (linux)
  Windows:
  LCOW:
 Logging Driver: json-file
 Plugins:
  Volume: local
  Network: ics l2bridge l2tunnel nat null overlay transparent
  Log: awslogs etwlogs fluentd gcplogs gelf json-file local logentries splunk syslog
 Swarm: inactive
 Default Isolation: hyperv
 Kernel Version: 10.0 17763 (17763.1.amd64fre.rs5_release.180914-1434)
 Operating System: Windows 10 Enterprise Version 1809 (OS Build 17763.437)
 OSType: windows
 Architecture: x86_64
 CPUs: 2
 Total Memory: 16GiB
 Name: ci-lcow-prod-1
 ID: 0ac02c9d-aaba-42f4-8749-5a64af3068d8
 Docker Root Dir: C:\ProgramData\docker
 Debug Mode: false
 Registry: https://index.docker.io/v1/
 Labels:
 Experimental: true
 Insecure Registries:
  127.0.0.0/8
 Live Restore Enabled: false
```


Thanks!
 - #41 bumped the kernel to 4.19.27, and #37 already noted that the
   performance concerns over kernel version (and slow pulls) were no
   longer relevant.

   Therefore, remove the note.
Looks like 1.0.2 is coming to end of support. Should (if not already) consider upgrading to the 1.1.1 series.

https://www.openssl.org/source/

Note: The latest stable version is the 1.1.1 series. This is also our Long Term Support (LTS) version, supported until 11th September 2023. Our previous LTS version (1.0.2 series) will continue to be supported until 31st December 2019 (security fixes only during the last year of support)

Hi! I'm using Windows Server 2019 (1809, build 17763), with "Containers" feature enabled. Performed all the steps from README.md. When trying to execute 

`docker run --platform linux --rm -ti busybox sh`

I get following error message:

`Error response from daemon: failed to start service utility VM (createreadwrite): CreateComputeSystem 123aa681adc9fe7814322a95068e28911b4f42d887cd734fe3b3a02dc3b90203_svm: The request is not supported.
(extra info: {"SystemType":"container", "Name":"123aa681adc9fe7814322a95068e28911b4f42d887cd734fe3b3a02dc3b90203_svm",  "Layers":null, "HvPartition":true, "HvRuntime":{"ImagePath":"C:\\Program Files\\Linux Containers", "LinuxInitrdFile":"initrd.img", "LinuxKernelFile":"kernel"}, "ContainerType":"linux", "TerminateOnLastHandleClosed":true}).`

**docker version**
Client:
 Version:           18.09.2
 API version:       1.39
 Go version:        go1.10.6
 Git commit:        1ac774dfdd
 Built:             unknown-buildtime
 OS/Arch:           windows/amd64
 Experimental:      false

Server:
 Engine:
  Version:          18.09.2
  API version:      1.39 (minimum version 1.24)
  Go version:       go1.10.6
  Git commit:       1ac774dfdd
  Built:            02/10/2019 04:13:25
  OS/Arch:          windows/amd64
  Experimental:     true

**docker info**
Containers: 0
 Running: 0
 Paused: 0
 Stopped: 0
Images: 6
Server Version: 18.09.2
Storage Driver: windowsfilter (windows) lcow (linux)
 Windows:
 LCOW:
Logging Driver: json-file
Plugins:
 Volume: local
 Network: ics l2bridge l2tunnel nat null overlay transparent
Swarm: inactive
Default Isolation: process
Kernel Version: 10.0 17763 (17763.1.amd64fre.rs5_release.180914-1434)
Operating System: Windows Server 2019 Datacenter Version 1809 (OS Build 17763.316)
OSType: windows
Architecture: x86_64
CPUs: 2
Total Memory: 15.71GiB
Docker Root Dir: C:\ProgramData\docker
Debug Mode (client): false
Debug Mode (server): false
Registry: https://index.docker.io/v1/
Labels:
Experimental: true
Insecure Registries:
 127.0.0.0/8
Live Restore Enabled: false

Might be not related to LCOW, but still not sure, where shall I ask for help with this issue. Will appreciate any suggestions regarding possible root causes