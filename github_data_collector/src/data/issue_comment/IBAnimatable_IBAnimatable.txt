I've created a new project and just add IBAnimatable from swift package 6.0
nothing more nothing less and i have 52 compilation errors.

<img width="263" alt="Image" src="https://user-images.githubusercontent.com/1871777/71854640-11a3a900-30df-11ea-99e7-923d906e6d60.png">

It is targeted for iOS 9.3.5 but same for iOS13.

Any ideas?

Thanks.
For example I have a button (say, width of 100, height of 16). The parameters change by type of device. So for wR, hR, it's say 200 by 32. Now, I can use corner radius and compute it based on the height and set it in viewDidLayoutSubviews, but I was wondering if there's already a way to do this and I'm missing it ...?
Just asking the question that many of us may have - any tips/hints/projections of whether this library can be usable in SwiftUI in any way? For example, SwiftUI leverages UIViewRepresentable, custom ViewModifiers and other constructs that might provide a path to integration. Just curious to know...
Segues set using storyboards, such as `PresentSlideSegue`, seem to failed to present

I see that iOS 13 add new navigation stack and `automatic` modal presentation style
Before `fullscreen`(=0) was the default one (If I debug)

I am wondering If IBAnimatable must force to fullscreen the modal presentation style like I do in my PR when the segue is used (to make it work)

or document and say you must select Presentation: Full Screen  (or current context if previous was also full screen etc...) 
![Screenshot 2019-08-23 at 10 32 14](https://user-images.githubusercontent.com/8875768/63579747-a58f3100-c593-11e9-92dd-ab1525d53975.png)
(xcode 11 screenshot, must not be available in xcode 10)


Hello guys, 

I want to ask a question here. 

So I have ViewController A, and I am presenting a half-size of an AnimatableModalViewController on top of the ViewController A. By default, it will block the userInteraction of the viewController A.

Is there any way to show the AnimatableModalViewController with userInteraction enabled for ViewController A? In my case, ViewController A is a scrollView. So, I still want to let the user able to scroll through the ViewController A, while the AnimatableModalViewController is being presented. 

Thank you, and many thanks for this great library! 
Is it possible to remove the NaN default values from the classes. Each time I import the library I have to reset them to valid values so that when initializing it, it does not crash.
![image](https://user-images.githubusercontent.com/33960459/53891175-d8bc2300-403a-11e9-8cbf-1716020d172d.png)

May be i made something wrong, but inserting ".then"-line changes nothing

I need to hide the view after moving smoothly
When I update the constraints on a view programmatically, the shadowLayer of the old frame is still there.
Every time, the view is updated to a different frame, a new CALayer is added.

Steps to reproduce:

- Create a view with autolayout constraints
- Set a shadow via IB
- Update a constraint (i.e. height of the view to make it smaller)
- You will have the shadow correctly applied but the layer from the old frame visible as well

I did some debugging, the layer is not removed when this is done :
https://github.com/IBAnimatable/IBAnimatable/blob/997eb2fa2e2d0087869bd8879c199eb1c5cb70b9/Sources/Protocols/Designable/ShadowDesignable.swift#L108-L110
```
// Remove any previous shadow layer
    view.layer.superlayer?.sublayers?.filter { $0.name == "shadowLayer-\(Unmanaged.passUnretained(self))" }
      .forEach { $0.removeFromSuperlayer() }
```
The reason being that the actual name of the layer in my case was :  
`shadowLayer-Unmanaged<AnimatableView>(_value: <IBAnimatable.AnimatableView: 0x7fb35c86a800; frame = (0 -30; 375 202); autoresize = RM+BM; layer = <CALayer: 0x60000217cae0>>)`

but the updated one had the following name : 
`shadowLayer-Unmanaged<AnimatableView>(_value: <IBAnimatable.AnimatableView: 0x7fb35c86a800; frame = (0 -30; 375 166); autoresize = RM+BM; layer = <CALayer: 0x60000217cae0>>)`

The name contains the frame, so if you update the frame it will not find the layer and thus not remove it.

Any suggestion on how this could be fixed?

Just want to discuss about a potential feature.

Unfortunately I think we cannot do "Trait Variation" for "User Defined Runtime Attributes"
So when we define something, it is for all ipads and iphones

I make a little PoC using `NSDataAsset`, that can be variated

A data asset named mask
<img width="926" alt="screenshot 2018-10-04 at 11 05 14" src="https://user-images.githubusercontent.com/8875768/46463911-63b39b80-c7c5-11e8-8aff-649c55ff66d9.png">

Inside I put just some text file with the wanted value of a maskType

- iphone file contains: circle
- ipad file contains: ellipse

Then in `MaskType` I add a code to parse NSDataAsset
```swift
public extension MaskType {
  init(string: String?) {
....
case "dataAsset":
      if let name = params[safe: 0],
        let dataAsset = NSDataAsset(name: name),
        let value = String(data: dataAsset.data, encoding: .utf8) {
        self.init(string: value)
      } else {
        self = .none
      }
```

And finally I use it on my view in storyboard like this
`dataAsset(mask)`

on iphone a circle
<img width="422" alt="screenshot 2018-10-04 at 11 11 41" src="https://user-images.githubusercontent.com/8875768/46464293-4b904c00-c7c6-11e8-9d63-f52e5bac2e4a.png">

on ipad an ellipse
<img width="793" alt="screenshot 2018-10-04 at 10 54 20" src="https://user-images.githubusercontent.com/8875768/46464260-361b2200-c7c6-11e8-910e-617833f8ca2a.png">

Setting a `leftView` of an `AnimatableTextField` or trying to specify insets otherwise is broken and does not produce the desired leading/trailing padding.
