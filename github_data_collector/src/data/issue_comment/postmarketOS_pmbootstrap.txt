In https://github.com/postmarketOS/pmbootstrap/pull/1027#issuecomment-401226345 @adrianparvino wrote:
> I have a Samsung Galaxy Tab 2 7.0, how should I port this? Is there any non-trivial differences aside from the screen?

Try this:
* Copy the `aports/device/device-samsung-espresso10` to `aports/device/device-samsung-espresso7`
* Adjust the name in the APKBUILD and deviceinfo
* Adjust the screen resolution in the deviceinfo
* Make sure it still depends on `linux-samsung-espresso10` by *not* changing the `depends=...` line in the APKBUILD
* Run `pmbootstrap init` and select `samsung-espresso7` as device
* Follow the installation instructions from the Samsung Espresso 10 in the wiki (see its device page)
* If it does not work, you might need to change the bootloader offsets by analyzing a known working boot.img file: `pmbootstrap bootimg_analyze path/to/known/working/boot.img`
  * modify your `deviceinfo` file (in the aport) with the offsets that command prints
  * `pmbootstrap checksum device-samsung-espresso7`
  * try again

Kernel compiles, flash seems to work but phone does not respond in any way

[wiki](https://wiki.postmarketos.org/wiki/Huawei_Ascend_G510_(huawei-g510))

---
[x] Merge on GitHub (see https://postmarketos.org/merge)
Xperia M - sony-nicki

Initial bringup of postmarketOS for Sony Xperia M. That includes everything that has been documented on [wiki](https://wiki.postmarketos.org/wiki/Sony_Xperia_M_(sony-nicki))

---
[x] Merge on GitHub (see <https://postmarketos.org/merge>)

We have a few packages in `aports/main`, that were forked from Alpine's aports. How about we move all of them to `aports/temp`?

In my opinion, this gives us the following benefits:
* easier to see which packages are forked from Alpine
* easy to get a total package count
* motivation to get the folder as empty as possible (by upstreaming as much as 
  possible back to Alpine)

What do you think, folks?
Modernize the APKBUILD of the Huawei Ascend Y530

Tested with weston and everything still works, other UI have problems starting Xorg, I didn't investigated the reason.

also added the missing devicepkg reference to the Samsung Galaxy S5 APKBUILD

Ref: #1577

---
[x] Merge on GitHub (see <https://postmarketos.org/merge>)

It's [failing since yesterday](https://travis-ci.org/postmarketOS/pmbootstrap/builds/397560673#L5290), with lots of these messages:
> ssh: connect to host localhost port 2222: Address not available

I've tried to make it work by replacing "localhost" with "127.0.0.1", but it did not help it:
https://travis-ci.org/postmarketOS/pmbootstrap/builds/397847907#L840

Since we did not change anything related in the commits where this starts to fail, it looks like the Travis CI infrastructure has changed. We are [moving to gitlab](https://postmarketos.org/blog/2018/06/27/moving-to-gitlab/) in two days, and then we won't use Travis CI anymore (#1539). As I can't find a fix right away, I won't look into this anymore because it's not worth the effort from my perspective.
So I don't have a device to test it on, but it runs in Qemu. Before merging this I'd like someone with a device with working Plasma Mobile and wifi to test it out.

KDE Connect, mainly famous for it's Android app, has been working on making a mobile app for Plasma Mobile. Of course we want that too! The CMake line `-DEXPERIMENTALAPP_ENABLED=true` enables this app, and as the line itself says, it's still experimental. Things will be broken and we'll have to continuously update it, but that's part of the fun isn't it? Found bugs can be reported on (preferably) bugs.kde.org or on [Telegram](https://t.me/joinchat/AOS6gA37orb2dZCLhqbZjg).

It didn't compile at first due to a musl issue, but I [committed a fix](https://github.com/KDE/kdeconnect-kde/commit/0e90fe0bd06e687b2028d269db560a2bde7e79c8) for that.

---

[x] Merge on GitHub (see https://postmarketos.org/merge)
@montvid wrote in https://github.com/postmarketOS/pmbootstrap/issues/1547#issuecomment-399603252:
> I have a badly working wifi in asus flo too. Either it is the drivers fault or it is a bad wpa supplicant config. udhcpd does not get an ip as dhcpcd starts with networkmanager....
>
> > PING 8.8.8.8 (8.8.8.8): 56 data bytes
64 bytes from 8.8.8.8: seq=2 ttl=42 time=1021.732 ms
64 bytes from 8.8.8.8: seq=3 ttl=42 time=635.403 ms
64 bytes from 8.8.8.8: seq=4 ttl=42 time=249.332 ms
64 bytes from 8.8.8.8: seq=5 ttl=42 time=1092.097 ms
64 bytes from 8.8.8.8: seq=6 ttl=42 time=704.731 ms
64 bytes from 8.8.8.8: seq=7 ttl=42 time=318.946 ms
64 bytes from 8.8.8.8: seq=8 ttl=42 time=751.767 ms
64 bytes from 8.8.8.8: seq=9 ttl=42 time=365.776 ms
64 bytes from 8.8.8.8: seq=10 ttl=42 time=1208.758 ms
64 bytes from 8.8.8.8: seq=11 ttl=42 time=208.455 ms
^C
--- 8.8.8.8 ping statistics ---
12 packets transmitted, 10 packets received, 16% packet loss
round-trip min/avg/max = 208.455/655.699/1208.758 ms


and in https://github.com/postmarketOS/pmbootstrap/issues/1547#issuecomment-399779235:
> Cmon' guys are still fixing a wcn36xx driver bug for 2 years 2016-2018 :) Oh I will wait :)
> i see this a lot https://bugs.96boards.org/show_bug.cgi?id=319
> https://patchwork.kernel.org/patch/10338447/

@montvid: if you're interested and have the time, you could try to apply the patch to the `asus-flo` kernel and try it out - and if it works, you could confirm that to the patch author :+1: 
Currently the testsuite requires that the chroots don't exist yet, or that they were zapped.

CC: @craftyguy
When running `pmbootstrap install`, we create a big empty file and mount it as loopback device, in order to copy the rootfs into it. To do that, we require the `loop` kernel module, which may not be loaded by default.

In that case we load it with `modprobe` and expect the loopdevices to directly appear afterwards:

https://github.com/postmarketOS/pmbootstrap/blob/17cdc48329714e86514a04d51ca75b3ec3353c79/pmb/install/losetup.py#L29-L35


But that is not the case, sometimes it will fail at this point:
```
$ sudo rmmod loop
$ lsmod | grep loop # this should be empty when it's unloaded
$ pmbootstrap install
```

with:
```
losetup: /home/pmos/rootfs/qemu-amd64.img: failed to set up loop device: No such file or directory
```


To fix this, we can add a short loop that waits 100ms until the loop devices are available.

It did not fail on my PC as I've tested it, but it fails on @craftyguy's shared gitlab CI runner every time.

Related: https://github.com/postmarketOS/pmbootstrap/pull/1539#issuecomment-396425973