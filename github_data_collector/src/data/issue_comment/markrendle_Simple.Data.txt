**URL:** http://simplefx.org/simpledata/docs/

**Screenshot:**
<img width="1007" alt="image" src="https://user-images.githubusercontent.com/3349710/54759743-b68adf00-4bbc-11e9-8d3a-56890070fb5f.png">

Can we take this to mean that the project is no longer being maintained?
I have an asp.net mvc project which uses 3 different database types depending on which one the user select (MSSQL, MySQL & Oracle). The project follows an Adapter/Repository pattern for it's code. You can see the source code here if it helps:

https://sourceforge.net/p/digioznetportal/codenew/ci/master/tree/Source/3.0.0.0/digioz.Portal/

The problem is in order for me to use both MSSQL and MySQL I have added a reference to both those nugets. But now when trying to get data, the Database.OpenConnection method throws this exception: 

> Multiple ADO Providers found; specify provider name or remove unwanted assemblies

How can I specify a specific ADO Provider at runtime? I didn't find any methods or constructors on the Database Object itself. 

The code in question: 

`
public class MySQLData : IDataContext
	{
		private string connectionString;
		private Database Database;

		public MySQLData(string connectionString)
		{
			this.connectionString = connectionString;
			this.Database = Database.OpenConnection(connectionString);
		}

		IMenuRepo IDataContext.Menu()
		{
			var menuRepo = new MenuRepo();

			return menuRepo;
		}
	}
`

Thanks,
Pete


I am unable to use NOLOCK on the table using Simple.data, this is required as the table is getting constantly getting inserted/updated or read. Any help is appreciated. I am using FindAll to select the rows.
Hello,

I have just started to use Simple.Data but i can't make it works.

When I do a connection to my db and then :

var db =  Database.OpenConnection("...");
User obj = new User();
var result = db.User.Insert(obj);

result is a type of InserAwaitable and not User type. Also there is no new row in my DB.

Did i forget to do something? what should i do with this InsertAwaitable?
When we have database with 2 tables like: ProcesAndOperation.Processes, dbo.Processes and we want take records from ProcesAndOperation.Processes, with order by ProcesAndOperation.Processes.Id desc, we will catch error. It will be caused by the sql query "select ProcesAndOperation.Processes.Id, ProcesAndOperation.Processes.Comments from ProcesAndOperation.Processes order by dbo.Processes.Id desc". Problem is in method GetName() - it takes only table name Processes without database schema. This fix is working for me.
The code on the repository is labeled 0.18.3 on the main branch, 0.18.3.1 in the v1 branch, but 0.19 for the Nuget package.

We have found a bug that exists on the Nuget package but are unable to track it down in the code because the versions are mismatched.

Thanks
I love Simple. Data and I hope it doesn't die.  

I am curious about something. I am playing with dynamic objects and not using models. 

If I update  a table like this:
     
    db.Mytable.UpdateById(formRow);

Sometimes there are items in the data object (formRow) that are missing from the table. Only a couple at the most. I can remove these like this:

    formRow.Remove(KeyName);

But is there any point?  Simple.Data seems to be able to handle the mismatches. 

Is it good practice to remove them? I would assume that I should only ever include cols that are being updated. But is it really necessary? 
Needed to be able to change the timeout on SQL Bulk Copies.
This is a correction to issue Issue #393 Bulk Insert does not respect identity insert option which I generated. I am little confused since the Nuget version of this code is 0.19.0.0 and this one is 0.18.3.1 but here it is.
The best way to explain this is with code. The following works I can insert a value into an identity column

      using (var scope = new TransactionScope(TransactionScopeOption.Required, TimeSpan.FromSeconds(5 * 60)))
                            {
                                
                                foreach(var item in results)
                                {
                                    Simple.Data.Database.
                                    OpenConnection(destionationDBConnectionString).
                                    WithOptions(new Simple.Data.Ado.AdoOptions(commandTimeout: (5 * 60), identityInsert: true))
                                    [this.destinationTableName].Insert(item);
                                }
                                scope.Complete();
                            }

This does not. The table puts in the identity value:

         using (var scope = new TransactionScope(TransactionScopeOption.Required, TimeSpan.FromSeconds(5 * 60)))
                            

                                Simple.Data.Database.
                                OpenConnection(destionationDBConnectionString).
                                WithOptions(new Simple.Data.Ado.AdoOptions(commandTimeout: (5 * 60),identityInsert: true))
                                [this.destinationTableName].Insert(results);
                                scope.Complete();
                            }

I will try and examine the code and see if it can be fixed easily. 
