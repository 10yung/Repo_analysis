There are no NA values in the dataset, however this is plotting an N/A year.

``` r
require(ggTimeSeries)
#> Loading required package: ggTimeSeries
#> Loading required package: ggplot2
require(tidyverse)
#> Loading required package: tidyverse

x <- structure(list(year = c(2017, 2017, 2017, 2017, 2017, 2018, 2018, 
                             2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 2018, 
                             2018, 2018, 2018, 2018), 
                    date = structure(c(17479, 17480, 17483, 
                                       17505, 17528, 17534, 17569, 17581, 17591, 17611, 17639, 17640, 
                                       17644, 17655, 17694, 17701, 17702, 17704, 17709, 17714, 17715, 
                                       17735), class = "Date"), 
                    n = c(23L, 22L, 24L, 5L, 19L, 2L, 5L, 
                          10L, 5L, 6L, 13L, 2L, 1L, 6L, 2L, 13L, 1L, 32L, 17L, 1L, 3L, 
                          14L)), 
               class = c("tbl_df", "tbl", "data.frame"), 
               row.names = c(NA, -22L))
x
#> # A tibble: 22 x 3
#>     year date           n
#>    <dbl> <date>     <int>
#>  1  2017 2017-11-09    23
#>  2  2017 2017-11-10    22
#>  3  2017 2017-11-13    24
#>  4  2017 2017-12-05     5
#>  5  2017 2017-12-28    19
#>  6  2018 2018-01-03     2
#>  7  2018 2018-02-07     5
#>  8  2018 2018-02-19    10
#>  9  2018 2018-03-01     5
#> 10  2018 2018-03-21     6
#> # ... with 12 more rows

x %>% 
  ggTimeSeries::ggplot_calendar_heatmap(cDateColumnName = "date", cValueColumnName = "n") + 
  facet_grid(year ~ .)
```

![](https://i.imgur.com/o5lxI7w.png)

Created on 2018-08-13 by the [reprex
package](http://reprex.tidyverse.org) (v0.2.0).
If date column is formatted as `POSIXct`, `seq()` function produces dates with daylight saving applied. This results in a sequence of days with hour components `23:00:00`. When merge happens here 
```
  dtDateValue = merge(dtDateValue, setnames(dtDateValue[ ,list(DateCol = seq(min(get(cDateColumnName)), max(get(cDateColumnName)),"days")), vcGroupingColumnNames], "DateCol", cDateColumnName),  c(vcGroupingColumnNames, cDateColumnName),  all = T)
```
`dtDateValue` is updated with `NA` values for days that have the daylight savings are applied. 
![2018-01-19 15_38_19- _gitlab_bike auckland - master - rstudio](https://user-images.githubusercontent.com/29471498/35132213-e8ff7302-fd2e-11e7-8356-f8e12dc384cd.png)
Adding `na.value = "white"` to` scale_fill_continuous()` reveals those `NA` values like below. 
![rplot04](https://user-images.githubusercontent.com/29471498/35132268-3c665a92-fd2f-11e7-8679-b5d06044a3b4.png)
One solutions is that user formats the dates with `as.Date()` before plotting. Or, you might consider using `as.POSIXct()` with `tz` set to `UTC` in `seq()` and then merge.