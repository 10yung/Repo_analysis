
Use `carthage update --no-use-binaries --configuration Debug RxSwift` to install RxSwift in tracing resources mode.
Run tests and see `4` resources are not being deallocated.

This raw iOS code with `SCNView`  is also failing. It looks like SCNView doesn't free added gestures:
```swift
var wasDeallocated = false
class MyGestureRecognizer: UIGestureRecognizer {
    deinit { wasDeallocated = true }
}

class Foo {
    let scnView = SCNView() // test passes if change to `UIView()`

    init() {
        scnView.addGestureRecognizer(MyGestureRecognizer(target: self, action: #selector(test)))
    }

    @objc func test() { }
}

final class Test: XCTestCase {
    func testMemoryLeak() {
        autoreleasepool {
            _ = Foo()
        }
        XCTAssertTrue(wasDeallocated)
    }
}
```

However, it can be fixed with adding these lines to `Foo`:
```swift
deinit {
  scnView.gestureRecognizers = nil
}
```

Sadly, fix doesn't work with Rx wrapper. I will try to investigate, however, any help will be appreciated.
I created Radar, but you know... Radars :)  https://openradar.appspot.com/radar?id=4931428085137408

Hello, thanks for this library.

I'm trying to recognise multiple swipe gestures on the same view and create an observable of the latest recognised swipe's direction.

I can do it with an Observable.merge but it is pretty verbose and I was hopping to be able to do something like:

`let observableDirection = self.view.rx.swipeGesture([.left, .right, .up, .down]).when(.recognized).map { $0.direction }
`

but that doesn't seem to work: up and down events are not emitted and left and right return a direction with rawValue of 15

Not sure if this is a bug or if I missed something ?
Add a UI test suite to run though the example app and validate that all gestures work
