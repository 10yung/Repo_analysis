after modification it works well upto page 3 but I had another bug on prediction/forecasts due to depreciation of ix and I modified .ix to .loc but the plot still looks no lower and upper bound.

Third bug happened when I tried Metropolis-Hastings-ARIMA (1,1) and for some reason I had problem with installation with pymc nonetheless of my successful records on installation with pip.

However, Gibbs codes run well. 

My last bug was found at the last box  titled "Construct the predictions / forecasts"    This is same as my second bug and I had no lower and upper bound line on my plot and followings are error message for your information.

Happy New Year and thanks for your excellent implementation on MCMC and TSA.



 KeyError                                  Traceback (most recent call last)
C:\Anaconda3\lib\site-packages\pandas\core\indexes\base.py in get_loc(self, key, method, tolerance)
   3062             try:
-> 3063                 return self._engine.get_loc(key)
   3064             except KeyError:

pandas\_libs\index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas\_libs\index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas\_libs\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

pandas\_libs\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

KeyError: 'lower CPIAUCNS'

During handling of the above exception, another exception occurred:

KeyError                                  Traceback (most recent call last)
<ipython-input-25-a0766961f137> in <module>()
     15                 alpha=0.15)
     16 lines, = ax.plot(forecast.index, forecast)
---> 17 ax.fill_between(forecast.index, ci['lower CPIAUCNS'], ci['upper CPIAUCNS'],
     18                 alpha=0.2)
     19 

C:\Anaconda3\lib\site-packages\pandas\core\frame.py in __getitem__(self, key)
   2683             return self._getitem_multilevel(key)
   2684         else:
-> 2685             return self._getitem_column(key)
   2686 
   2687     def _getitem_column(self, key):

C:\Anaconda3\lib\site-packages\pandas\core\frame.py in _getitem_column(self, key)
   2690         # get column
   2691         if self.columns.is_unique:
-> 2692             return self._get_item_cache(key)
   2693 
   2694         # duplicate columns & possible reduce dimensionality

C:\Anaconda3\lib\site-packages\pandas\core\generic.py in _get_item_cache(self, item)
   2484         res = cache.get(item)
   2485         if res is None:
-> 2486             values = self._data.get(item)
   2487             res = self._box_item_values(item, values)
   2488             cache[item] = res

C:\Anaconda3\lib\site-packages\pandas\core\internals.py in get(self, item, fastpath)
   4113 
   4114             if not isna(item):
-> 4115                 loc = self.items.get_loc(item)
   4116             else:
   4117                 indexer = np.arange(len(self.items))[isna(self.items)]

C:\Anaconda3\lib\site-packages\pandas\core\indexes\base.py in get_loc(self, key, method, tolerance)
   3063                 return self._engine.get_loc(key)
   3064             except KeyError:
-> 3065                 return self._engine.get_loc(self._maybe_cast_indexer(key))
   3066 
   3067         indexer = self.get_indexer([key], method=method, tolerance=tolerance)

pandas\_libs\index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas\_libs\index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas\_libs\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

pandas\_libs\hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

KeyError: 'lower CPIAUCNS'
    
Dear Chad
Thank you for the excellent tutorials and as a novice on python I am learning Python with MCMC now. On your script titled "Implementing and estimating an ARMA(1, 1) state space model", I found some bugs and first one is yahoo data feed and I fixed the one with st. louis's own api, using my persoanl api key given by the Fed.

from fredapi import Fred
fred = Fred(api_key='...')
cpi = fred.get_series('CPIAUCNS',"1971-01","2016-12")
cpi.tail()

It works well now and let me send you other bugs one by one with separate letter 