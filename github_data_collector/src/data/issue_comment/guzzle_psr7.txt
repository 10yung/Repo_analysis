I noticed this function was added recently (ish), but was never documented, like the other functions.
Left all the functions in, like for my Guzzle 7 PR, but just made sure that the "core code" doesn't actually use tem.
Reported on https://github.com/guzzle/guzzle/issues/1870

It checks whether the field name contains space in the beginning or end and throws an exception when found. There is no need to check the value as the class already normalizes it.
| Q            | A
| ------------ | ---
| Bug?         | yes
| New Feature? | no
| Version      | 6.3.3

Steps to reproduce:

1. Create a new `Request` object with a relative URL: `$request = new Request('get', '/users')`
1. Convert the object into its string representation: `$rep = str($request)`
1. Convert the string back to the object using `parse_request`: `$restored = parse_request($rep)`

#### Actual Behavior

An "Invalid request string" error thrown, apparently because of the `preg_match` check in `parse_request()`:

```php
    if (!preg_match('/^[\S]+\s+([a-zA-Z]+:\/\/|\/).*/', $data['start-line'], $matches)) {
        throw new \InvalidArgumentException('Invalid request string');
    }
```


#### Expected Behavior

The `parse_request` parses and returns the request object successfully.
Hi all

The PSR7-specification (see PR https://github.com/php-fig/fig-standards/pull/1194) as well as the RFC 2616 define a comma, not comma with white-space, as separator.

We should probably update the following method:
https://github.com/guzzle/psr7/blob/152fab1581e564743e14a85adb33c01e8773b254/src/MessageTrait.php#L65-L68
Fixes #298

TODO: Test-Coverage
Headers that cannot carry multiple values need to be output as separate lines, most annoying example is `Set-Cookie` so if the Response carries multiple values for it `str` will incorrectly add them comma separated to one `Set-Cookie` header.

Solution would be to check for such (known "bad") headers and output them as separate lines.
Reopening #269 to the right branch
A proposal to use `league\uri` package instead of the current Uri implementation. My main goal for this is to get rid of PHP's `parse_url()` issues with internationalized domain names (see #269 and guzzle/guzzle#2286).

It's a BC break, but has not been released yet, so IMO it's good chance for a change like this.
