Resolves #3910 
<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.
-->

## I'm submitting a…
<!-- Please check one of the following options with "x" -->
<pre>
[x] Bug
[ ] Feature Request
[ ] Documentation Request
[ ] Other (Please describe in detail)
</pre>

## Current Behavior
`180-fd-leaks.t` fails when running on Fedora

## Expected Behavior
`180-fd-leaks.t` passes

## Reproduction Instructions
Download i3 repository and install dependencies, below is what I explicitly installed today:
<pre>
$ sudo dnf install autoconf automake cairo-devel gcc libXinerama-devel libXrandr-devel libev-devel libxcb-devel libxkbcommon-devel libxkbcommon-x11-devel pango-devel pcre-devel perl-App-cpanminus startup-notification-devel xcb-proto xcb-util-cursor-devel xcb-util-devel xcb-util-keysyms-devel xcb-util-wm-devel xcb-util-xrm-devel xorg-x11-server-Xephyr xorg-x11-server-Xvfb yajl-devel
</pre>

Run the below commands:
<pre>
$ cd ~/dev/i3/testcases
$ sudo dnf install perl-App-cpanminus
$ sudo cpanm .
$ sudo make clean
$ cd ~/dev/i3/AnyEvent-I3
$ sudo cpanm Module::Install
$ sudo cpanm .
$ sudo make clean
$ cd ~/dev/i3
$ autoreconf -fi && mkdir build && cd build && ../configure
$ make check
</pre>

## Environment
Output of `i3 --moreversion 2>&-`:
<pre>
i3 version:  4.17.1
commit: fc01ece3657e334d9067c40c0e7274ee955345e5
</pre>

Output of `make check`:
<pre>
=================================
   i3 4.17.1: ./test-suite.log
=================================

# TOTAL: 1
# PASS:  0
# SKIP:  0
# XFAIL: 0
# FAIL:  1
# XPASS: 0
# ERROR: 0

.. contents:: :depth: 2

FAIL: testcases/complete-run.pl
===============================

Running tests under Xvfb display :99
Starting 32 Xephyr instances, starting at :1025...

Rough time estimate for this run: 5.78 seconds

Writing logfile to 'testsuite-2020-01-18-21-30-39-4.17-246-gfc01ece3/complete-run.log'...


#   Failed test 'No file descriptors leaked'
#   at /home/eganjs/dev/i3/build/../../i3/testcases/t/180-fd-leaks.t line 63.
#          got: '2'
#     expected: '0'


Test Summary Report
-------------------
Use of uninitialized value in subtraction (-) at /usr/share/perl5/vendor_perl/TAP/Formatter/Base.pm line 386.
Negative repeat count does nothing at /usr/share/perl5/vendor_perl/TAP/Formatter/Base.pm line 386.
/home/eganjs/dev/i3/build/../../i3/testcases/t/180-fd-leaks.t (Wstat: 0 Tests: 1 Failed: 1)
  Failed test:  1
Files=249, Tests=3588,  3 wallclock secs ( 0.50 usr +  0.05 sys =  0.55 CPU)
Result: FAIL

The slowest tests are:
	/home/eganjs/dev/i3/build/../../i3/testcases/t/308-focus_wrapping.t with 2.43 seconds
	/home/eganjs/dev/i3/build/../../i3/testcases/t/298-ipc-misbehaving-connection.t with 2.33 seconds
	/home/eganjs/dev/i3/build/../../i3/testcases/t/201-config-parser.t with 1.71 seconds
	/home/eganjs/dev/i3/build/../../i3/testcases/t/167-workspace_layout.t with 1.66 seconds
	/home/eganjs/dev/i3/build/../../i3/testcases/t/200-urgency-timer.t with 1.41 seconds
FAIL testcases/complete-run.pl (exit status: 1)
</pre>

<pre>
- Linux Distribution & Version: Fedora release 31 (Thirty One) 5.4.10-200.fc31.x86_64
- Are you using a compositor (e.g., xcompmgr or compton): no
</pre>

Output of `ll /proc/self/fd`:
<pre>
total 0
lrwx------. 1 eganjs eganjs 64 Jan 18 22:14 0 -> /dev/pts/4
lrwx------. 1 eganjs eganjs 64 Jan 18 22:14 1 -> /dev/pts/4
lrwx------. 1 eganjs eganjs 64 Jan 18 22:14 2 -> /dev/pts/4
lr-x------. 1 eganjs eganjs 64 Jan 18 22:14 3 -> /var/lib/sss/mc/passwd
lr-x------. 1 eganjs eganjs 64 Jan 18 22:14 4 -> /var/lib/sss/mc/group
lr-x------. 1 eganjs eganjs 64 Jan 18 22:14 5 -> /proc/125239/fd
</pre>

`/var/lib/sss/mc/passwd` `/var/lib/sss/mc/group` appear to be the extra file descriptors

This issue mentions that these file descriptors became part of the default configuration for Fedora at one point https://bugzilla.redhat.com/show_bug.cgi?id=1493038

In conculsion the above seems to indicate that the presence of `/var/lib/sss/mc/passwd` and `/var/lib/sss/mc/group` is breaking the test, and while I'm sure there is a way to disable them, I think it's far more usable and dev friendly to adjust the test to account for this.
Update `doc/ipc` get_tree reply docs to include: `sticky` and `floating`.
<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.
-->

## I'm submitting a…
<!-- Please check one of the following options with "x" -->
<pre>
[x] Bug
[ ] Feature Request
[ ] Documentation Request
[ ] Other (Please describe in detail)
</pre>

## Current Behavior
In a dual-monitor setting, whenever I launch a floating window which has its position set, it opens in my external monitor.

## Expected Behavior
I expect the floating window to open in the current workspace.

## Reproduction Instructions
I have 2 situations in which the position of a floating window is set and the problem occurs in both of them (while I have no problem with floating windows which are free to open in the default center position).

1st situation: floating window position set by i3:

```
for_window [title="qalc"] floating enable, move position 1125 878, resize set 800 200
```
If I don't set the position (`for_window [title="qalc"] floating enable, resize set 800 200`), the "qalc" window opens in the correct workspace.

2nd situation: floating window position set through yad (`--geometry` flag):
(I created this clumsy and ugly hack to get info on my backlight level when I adjust it)

```
bindsym XF86MonBrightnessUp exec --no-startup-id "xbacklight -inc 10 && xbacklight -get | xargs printf \\"%.*f\n\\" 0 | yad --text-info --sticky --no-buttons --undecorated --timeout 1 --geometry 10x10-10+3"
```

Same behaviour in both cases: when I am in a workspace on the external monitor, things work as expected. But when I am in a workspace on my primary monitor (laptop screen), the floating window still opens in the visible workspace of the external monitor (and the focus is thus now on that workspace).

## Environment
<!--
Please include your exact i3 version.
Note that we only support the latest major release and the current development version. If you are using an older version of i3, please first update to the current release version and reproduce the issue there.
-->
Output of `i3 --moreversion 2>&-`:
<pre>
i3 version: 4.17.1O
</pre>

<!--
Please include your (complete) i3 config with which the issue occurs. You can either paste the file directly or provide a link to a service such as pastebin.

If you would like to help debugging the issue, please try to reduce the config such that it is as close to the default config as possible while still reproducing the issue. This can help us bisect the root cause.
-->

<!--
Providing a logfile can help us trace the root cause of an issue much quicker. You can learn how to generate the logfile here:
https://i3wm.org/docs/debugging.html

Providing the logfile is optional.
-->

<!--
Please also answer the questions below to help us process your issue faster. If you have any other information to share, please add it here as well.
-->
<pre>
- Linux Distribution & Version: Arch Linux (5.4.10-arch1-1)
- Are you using a compositor (e.g., xcompmgr or compton): no
</pre>

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.
-->

## I'm submitting a…
<!-- Please check one of the following options with "x" -->
<pre>
[x] Bug
[ ] Feature Request
[ ] Documentation Request
[ ] Other (Please describe in detail)
</pre>

## Current Behavior
<!--
Describe the current behavior,
e.g., »When pressing Alt+j (focus left), the window above the current window is focused.«
-->
i3 crashes completely, sending the user back to the login screen, when a layout placeholder window is clicked and `floating` on that window is set to `user_on` or `auto_on`.

The placeholder window also does not float when `floating` is on those settings.

## Expected Behavior
<!--
Describe the desired behavior you expect after mitigation of the issue,
e.g., »The window left next to the current window should be focused.«
-->
i3 should not crash, and the placeholder window probably should float? I'm unsure if this is how you are supposed to make floating placeholder windows.

## Reproduction Instructions
<!--
Please provide detailed instructions on how the bug can be reproduced.
E.g., »Open three windows in a V[A H[B C]] layout on a new workspace«
-->
1. append the following layout to the current workspace:
```
// vim:ts=4:sw=4:et
{
    "border": "pixel",
    "current_border_width": 1,
    "floating": "auto_on", // crashes: user_on, auto_on, no crash: user_off, auto_off
    "geometry": {
       "height": 400,
       "width": 300,
       "x": 820,
       "y": 350
    },
    "name": "Click me to crash",
    "percent": 0.5, // still crashes if this field is absent
    "swallows": [
       {
       "class": "^this doesn't matter as long as it doesn't match a new window$"
       }
    ],
    "type": "con"
}
```
2. Click on the placeholder window
3. Observe crash to login screen

## Environment
<!--
Please include your exact i3 version.
Note that we only support the latest major release and the current development version. If you are using an older version of i3, please first update to the current release version and reproduce the issue there.
-->
Output of `i3 --moreversion 2>&-`:
<pre>
Binary i3 version:  4.17.1-2-g840208c2 (2019-08-30, branch "gaps") © 2009 Michael Stapelberg and contributors
Running i3 version: 4.17.1-2-g840208c2 (2019-08-30, branch "gaps") (pid 21858)
Loaded i3 config: /home/carson/.config/i3/config (Last modified: Sat 11 Jan 2020 02:19:49 PM EST, 621 seconds ago)

The i3 binary you just called: /usr/local/bin/i3
The i3 binary you are running: i3
</pre>

<!--
Please include your (complete) i3 config with which the issue occurs. You can either paste the file directly or provide a link to a service such as pastebin.

If you would like to help debugging the issue, please try to reduce the config such that it is as close to the default config as possible while still reproducing the issue. This can help us bisect the root cause.
-->
My config:
https://pastebin.com/cpNdDvXP

<!--
Providing a logfile can help us trace the root cause of an issue much quicker. You can learn how to generate the logfile here:
https://i3wm.org/docs/debugging.html

Providing the logfile is optional.
-->
<pre>
Logfile URL: Unable to obtain
</pre>

<!--
Please also answer the questions below to help us process your issue faster. If you have any other information to share, please add it here as well.
-->
<pre>
- Linux Distribution & Version: Ubuntu 18.04
- Are you using a compositor (e.g., xcompmgr or compton): compton
</pre>

<pre>
[ ] Bug
[x] Feature Request
[ ] Documentation Request
[ ] Other (Please describe in detail)
</pre>

## Current Behavior
Currently when I `workspace next` to the end workspace, and then I `workspace next` again it wraps back to the first workspace.

## Desired Behavior
. I do not want workspaces wrapping back to the start since it's extremely disorientating if done at either edge - focus-wrapping was added for moving focus between windows within a workspace, I am asking for similar but for the workspaces themselves.

## Environment
<pre>
Binary i3 version:  4.17.1 (2019-08-30) © 2009 Michael Stapelberg and contributors
Running i3 version: 4.17.1 (2019-08-30) (pid 3529)abort…)
</pre>

<pre>
- Linux Distribution & Version: Arch Linux, 5.4.10-arch1-1
- Are you using a compositor (e.g., xcompmgr or compton): no
</pre>

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.
-->

## I'm submitting a…
<!-- Please check one of the following options with "x" -->
<pre>
[ ] Bug
[x] Feature Request
[ ] Documentation Request
[ ] Other (Please describe in detail)
</pre>

## Current Behavior
<!--
Describe the current behavior,
e.g., »When pressing Alt+j (focus left), the window above the current window is focused.«
-->
as expected and designed moves windows to not overlay them.

## Desired Behavior
<!--
Describe the desired behavior you expect after mitigation of the issue,
e.g., »The window left next to the current window should be focused.«
-->
overlay windows and cause them to change bounds.
I prefer toggling the status bar with a keyboard binding to take a peek when I want to, and I would prefer also if it overlayed the windows and didn't cause them to change bounds and relayout/+repaint.

dmenu/dmenurun overlaying:
![dmenu](https://user-images.githubusercontent.com/9993663/72002092-73832080-324f-11ea-9822-c093d3ff54dc.gif)

![statusbar](https://user-images.githubusercontent.com/9993663/72002106-78e06b00-324f-11ea-8577-71e465081889.gif)


## Environment
<!--
Please include your exact i3 version.
Note that we only support the latest major release and the current development version. If you are using an older version of i3, please first update to the current release version and reproduce the issue there.
-->
Output of `i3 --moreversion 2>&-`:
<pre>
Binary i3 version:  4.17.1 (2019-08-30) © 2009 Michael Stapelberg and contributors
(Getting version from running i3, press ctrl-c to abort…)
Running i3 version: 4.17.1 (2019-08-30) (pid 698)
Loaded i3 config: /home/x/.config/i3/config (Last modified: Wed 08 Jan 2020 07:34:56 PM IST, 918 seconds ago)

The i3 binary you just called: /usr/bin/i3
The i3 binary you are running: i3
</pre>

<!--
Please also answer the questions below to help us process your issue faster. If you have any other information to share, please add it here as well.
-->
<pre>
- Linux Distribution & Version: Linux archiver 5.4.8-arch1-1 #1 SMP PREEMPT Sat, 04 Jan 2020 23:46:18 +0000 x86_64 GNU/Linux
- Are you using a compositor (e.g., xcompmgr or compton): xcompmgr
</pre>

## I'm submitting a…
<!-- Please check one of the following options with "x" -->
<pre>
[ ] Bug
[x] Feature Request
[ ] Documentation Request
[ ] Other (Please describe in detail)
</pre>

## Current Behavior
There is no generic way of running commands for a window opened through `exec` unless you have a-priori knowledge of the specific application (class, instance, …).

This is a very frequent request on our support reddit, so I think we can think about solutions to improve this in core i3.

## Desired Behavior
We already support startup notifications, so we could do something like

```
exec --trace-startup "foo" "/pathh/to/foo"
```

In combination with some new command criterion users could have something like

```
for_window [startup_trace=foo] floating enable
```

in their config and this would now be independent of the actual application. Note that this only works for applications implementing startup notifications and thus we should also throw an error if the flag is used in combination with `--no-startup-id` (of course this still does not guarantee that it will work, so we need to clearly document the expectation here).

CC @stapelberg @orestisfl What do you think?

Output of `i3 --moreversion 2>&-`:
<pre>
i3 version: 4.17
</pre>
## I'm submitting a…
<!-- Please check one of the following options with "x" -->
<pre>
[x] Bug
[ ] Feature Request
[ ] Documentation Request
[ ] Other (Please describe in detail)
</pre>

## Current Behavior
Moving container from current workspace to some other workspace(both existing and non-existing) triggers i3 to send WORKSPACE(change = focus) event, but focus from the user's perspective stays unchanged.

## Expected Behavior
i3 doesn't send misleading WORKSPACE(change = focus) events when focus from the user's perspective stays unchanged.

## Reproduction Instructions
Easily observable by using `i3-msg`.
1) Open two terminals in same workspace.
2) In one terminal, subscribe to WORKSPACE events:
<pre>i3-msg -m -t subscribe '[ "workspace" ]'</pre>
3) In second terminal send the `move` command:
<pre>i3-msg move container to workspace some_name</pre>
4) Observe the output from the only terminal that stayed on the current workspace.

If workspace `some_name` already existed, there will be 1 WORKSPACE event - focus event indicating that the focus has changed from current workspace to `some_name` workspace, but it hasn't.
If workspace `some_name` didn't exist, there will be 2 WORKSPACE events, one claiming that workspace `some_name` is being created(which it is) and again, a focus event claiming that focus has changed from current workspace to newly created `some_name` workspace, but it hasn't.

## Environment
Output of `i3 --moreversion 2>&-`:
<pre>
i3 version: 4.17.1 (2019-08-30)
</pre>
## I'm submitting a…
<pre>
[ ] Bug
[x] Feature Request
[ ] Documentation Request
[ ] Other (Please describe in detail)
</pre>

## Current Behavior
At the moment, there is no way to get current binding mode from i3.
This is an issue for initialization of a status bar.
Yes, it can be workaround by subscribing to MODE event and waiting for mode change(or forcing MODE event by sending the request to change binding mode) but this is not a proper solution.

## Desired Behavior
There are two clean ways to resolve the issue.
1)  Add support for new IPC request, for example GET_CURRENT_BINDING_MODE.
2)  Expend GET_BINDING_MODES to also provides info about current binding mode, either as a string or an index for the already provided list of all available binding modes.

## Environment
Output of `i3 --moreversion 2>&-`:
<pre>
i3 version: 4.17.1 (2019-08-30)
</pre>