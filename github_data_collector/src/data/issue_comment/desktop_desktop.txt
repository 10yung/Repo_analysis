### Cannot type into characters
![2020-01-18 222836](https://user-images.githubusercontent.com/52070155/72665301-f3746c00-3a41-11ea-9ce4-3f9307cdd7a5.jpg)


I can not type in any characters but the first one of my password. I cannot figure out the issue.  I would really appreciated if you can help me with that!



## Description

- This fixes what was probably a copy/paste error in the Windows setup docs.

## Release notes

Notes: no-notes

## Description

- This adds a different icon for removing co-authors. Currently, the same icon is used for both adding and removing co-authors. I think this is counterintuitive so I made this change to toggle what icon is shown.

### Screenshots

Add co-authors (unchanged):  
![Add co-authors](https://user-images.githubusercontent.com/20296116/72664057-b4bac380-39f9-11ea-947e-1fe41de05d56.png)

Remove co-authors before:  
![Remove co-authors before](https://user-images.githubusercontent.com/20296116/72664020-5097ff80-39f9-11ea-9bb8-966f9e937e5d.png)

Remove co-authors after:  
![Remove co-authors after](https://user-images.githubusercontent.com/20296116/72664021-555cb380-39f9-11ea-8e5c-7dafdcce1eed.png)

As you can see in the screenshots, the little blue icon has been changed from a plus to a minus.

## Release notes

Notes: Add a remove co-authors icon.

follow up to #8910 and #8340 

## Description

- touches SAML auth dialog and workflow rejection auth dialog
- changes "ok" button text from `Grant` to `Continue in browser`

## Screenshot

<img width="619" alt="Screen Shot 2020-01-17 at 10 52 01 AM" src="https://user-images.githubusercontent.com/964912/72638066-7d73e600-3917-11ea-9e1c-568dcdf79e1e.png">

cc/ @ampinsk 
:cactus: :cactus: **Review #8889 first please!** :cactus: :cactus:

_this will be re-directed to merge into **development** after #8889 is merged_

Closes #8938

## Description

- update copy and add create fork link

### Screenshots

<img width="253" alt="Screen Shot 2020-01-17 at 10 27 55 AM" src="https://user-images.githubusercontent.com/964912/72651395-1581c780-3938-11ea-926e-55ce3113e066.png">

The problem initially laid out in #8548 is minimally solved by #8889, but there is more to be done. This also builds on #8668 which added

<img width="244" alt="Screen Shot 2020-01-17 at 9 58 23 AM" src="https://user-images.githubusercontent.com/964912/72634696-e8212380-390f-11ea-946e-8a8e1d6d19f9.png">

Let's add a link to this commit warning so the user can enter the create a fork flow in #8889.

Text should read:

> You don't have write access to {RepoName}. Want to _make a fork_?


/cc @ampinsk @billygriffin 
<!--
What GitHub Desktop issue does this PR address? (for example, #1234)
-->

Closes #8936

## Description

- add feature flag for showing upstream PRs (since we plan to revisit this post-2.3 release)
- use flag in existing pr list filtering
- use flag and hide PR badge if PR is based on upstream repo

### Screenshots

<img width="498" alt="Screen Shot 2020-01-17 at 9 43 48 AM" src="https://user-images.githubusercontent.com/964912/72634426-7052f900-390f-11ea-8044-3ab2e8a426bb.png">

Ref https://github.com/desktop/desktop/pull/8929#issuecomment-575293477

While we're in a state where we're not displaying upstream pull requests in the PR list, we should hide the `#XX` badge to avoid confusion.

cc @outofambit 
## Description

Improving some wording (origin: 4fa52c2d607273a119ec18b74a17fdefac5a4bbc) I find to be awkward in the UI copy: "work done in this branch" I think would normally be said/written as "work done _on_ this branch" instead. Very minor detail.

## Release notes

<!--
You can leave this blank if you're not sure.
If you don't believe this PR needs to be mentioned in the release notes, write "Notes: no-notes".
-->

Notes: no-notes
### Describe the bug

The GitHub desktop app seems to be automatically fetching and fast-forwarding the current branch, even if there are local changes. This results in git reporting many "diffs" that would undo the remote changes, since the unchanged working directory doesn't match the branch tip.

This seems to be a regression of #8155.

### Version & OS

Version 2.2.4
macOS 10.15.2

### Steps to reproduce the behavior

1. Clone a repo on machine A from some remote
2. Push changes to the remote from machine B
3. Focus the GitHub desktop client and wait for the auto-fetch to run.

### Expected behavior

Changes are fetched in the background but the current branch isn't affected.

### Actual behavior

Changes are fetched and the current branch is fast-forwarded (if possible). This results in git reporting many "diffs" that would undo the remote changes, since the unchanged working directory doesn't match the branch tip.
