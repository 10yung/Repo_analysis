## Read and complete the full issue template

**Do you want to request a *feature* or report a *bug*?**
- [x] Bug
- [ ] Feature

**Version of ClosedXML**

0.94.2

**What is the current behavior?**

When I open an existing Excel file with an image in the header, then add another image to the workbook before saving, the saved Excel file will be corrupted and won't open in Excel anymore.

**What is the expected behavior or new feature?**

The produced Excel file should not be corrupt.

**Did this work in previous versions of our tool?  Which versions?**

I have not used previous versions.

## Reproducibility

**Code to reproduce problem:**
```c#
public void Main()
{
            var wb = new XLWorkbook("a.xlsx");
            wb.Worksheet(1).AddPicture("Clipboard02.png");
            wb.SaveAs("b.xlsx");
            Process.Start("b.xlsx");
}
```

Both `a.xlsx` and `Clipboard02.png` are attached.

- [x] I attached a sample spreadsheet.  (You can drag files on to this issue)

[a.xlsx](https://github.com/ClosedXML/ClosedXML/files/4080533/a.xlsx)
![Clipboard02](https://user-images.githubusercontent.com/7085801/72663177-b5e6f300-39ef-11ea-9f95-2d558c8b2883.png)

## Read and complete the full issue template

**Do you want to request a *feature* or report a *bug*?**
- [x] Bug
- [ ] Feature

If you are logging a possible bug or feature request, please test with [the latest development build](https://ci.appveyor.com/project/ClosedXML/ClosedXML/branch/develop/artifacts) first.

**Version of ClosedXML**

Starting from 0.93

**What is the current behavior?**

When pre created pivot table sources, the file becomes corrupt and excel removes the pivot tables completely. This still works in v0.92.1. When opening the file, there is an error üëç 

Removed Feature: PivotTable report from /xl/pivotCache/pivotCacheDefinition1.xml part (PivotTable cache) 

## Reproducibility
**This is an important section. Read it carefully. Failure to do so will cause a 'RTFM' comment.**

**Code to reproduce problem:**

I am using an  excel sheet with pivot tables referencing sheets with tables, using ClosedXML I want to populate the source tables with data and update the pivot. The code is very simple

```csharp
using (var workbook = new XLWorkbook(fileTemplate, XLEventTracking.Enabled))
{
    var metricsSheet = workbook.Worksheet("Metrics");
    var metricTable = metricsSheet.Tables.First();
    //metricTable.ReplaceData(metricsArray);
    metricTable.AppendData(metricsArray);
    metricsSheet.Columns().AdjustToContents();
    var metricsRange = metricTable.AsRange();

    //var outputsSheet = workbook.Worksheet("Output");
    //var outputTable = outputsSheet.Tables.First();
    //outputTable.AppendData(assignments);
    //outputsSheet.Columns().AdjustToContents();

    //foreach (var ws in workbook.Worksheets)
    //{
    //    if (ws.PivotTables == null || !ws.PivotTables.Any()) continue;

    //    var pivot = ws.PivotTables.First();
    //    pivot.SourceRange = metricsRange;
    //}

    Stream fs = new MemoryStream();
    workbook.SaveAs(fs);
    fs.Position = 0;
    return await Task.FromResult(fs);
}
```

[auto_pivot_pre_open.xlsx](https://github.com/ClosedXML/ClosedXML/files/4079975/auto_pivot_pre_open.xlsx)


- [x] I attached a sample spreadsheet.  (You can drag files on to this issue)

## Read and complete the full issue template

**Do you want to request a *feature* or report a *bug*?**
- [x] Bug

If you are logging a possible bug or feature request, please test with [the latest development build](https://ci.appveyor.com/project/ClosedXML/ClosedXML/branch/develop/artifacts) first.

**Version of ClosedXML**

 0.94.2

**What is the current behavior?**

Working but excel is generating for less than 400 records

**What is the expected behavior or new feature?**

Excel should create for more than 400 records which are in data table

**Did this work in previous versions of our tool?  Which versions?**

No. It seems in all version it's not working.

## Reproducibility
**This is an important section. Read it carefully. Failure to do so will cause a 'RTFM' comment.**

Without a code sample, it is unlikely that your issue will get attention. Don't be lazy. Do the effort and assist the developers to reproduce your problem. Code samples should be [minimal complete and verifiable](https://stackoverflow.com/help/mcve). Sample spreadsheets should be attached whenever applicable. Remove sensitive information.

**Code to reproduce problem:**
Vb.net
Protected Overrides Sub OnCreate()
  Protected workbook As Object
      Protected ws As Object
    Dim iCurrRow As Integer = 1000
Dim iCurrRow As Integer =5
 Protected sTEMPLATEFILE As String = "C:/tpl_TSR.xlsx"
 Dim dtTests As New Data.DataTable

  If sFormat.Equals("xlsx") Then
            Using fs = New FileStream(pPage.Server.MapPath(sTEMPLATEFILE), FileMode.Open, FileAccess.Read)
                fs.CopyTo(MS)
            End Using
            MS.Seek(0, SeekOrigin.Begin)

            Using dSpreadsheet = SpreadsheetDocument.Open(MS, True)
                For Each wsPars As Object In dSpreadsheet.WorkbookPart.WorksheetParts
                    For Each VmlDrawingPart In wsPars.VmlDrawingParts
                        Dim Text As String
                        Using tr = New StreamReader(VmlDrawingPart.GetStream(FileMode.Open))
                            Text = tr.ReadToEnd()
                        End Using

                        Using tw = New StreamWriter(VmlDrawingPart.GetStream())
                            tw.Write(Text.Replace("<br>", "    ").Replace("<br />", "    "))
                        End Using
                    Next
                Next
            End Using

            MS.Seek(0, SeekOrigin.Begin)
            workbook = New XLWorkbook(MS, XLEventTracking.Disabled)
  If sTEMPLATEFILE.Equals("tpl_TSR.xlsm") Then
                ws = workbook.Worksheet("Test Status")
            End If

' Count of dtTests.Rows > 500
    For Each row As Data.DataRow In dtTests.Rows 
 iCurrRow += 1
            ws.Row(iCurrRow).InsertRowsBelow(iCurrRow + 1)
    End If

 End If
End Sub
```
- [ ] I attached 
[tpl_TSR.xlsx](https://github.com/ClosedXML/ClosedXML/files/4075158/tpl_TSR.xlsx)

a sample spreadsheet.  (You can drag files on to this issue)

**Do you want to request a *feature* or report a *bug*?**
- [x] Bug
- [ ] Feature

**Version of ClosedXML**

0.94.2

**What is the current behavior?**

If a worksheet has a print area and the sheet name contains certain symbols, Excel complains to the file saved by ClosedXML.

**What is the expected behavior or new feature?**

Create a file that Excel won't complain.


**Did this work in previous versions of our tool?  Which versions?**

Yes / 0.91.1

## Reproducibility

1. Start Excel and create new workbook.
2. Set print area and rename the sheet "sheet@".
   * This problem occurs when the sheet name contains the following symbols: ~!@#$%(){}.
3. Save the workbook. (test.xlsx)
4. Open and save the file by ClosedXML.
5. Open the file by Excel.
   Excel will say
   "We found a problem with some content in 'test.xlsx'..."
   if select "Yes"
    "Removed Records: Named range from /xl/workbook.xml part (Workbook)"

**Code to reproduce problem:**
```c#
public void Main()
{
            var workbook = new XLWorkbook(@".\.xlsx");
            workbook.Save();
}
```
[test.xlsx](https://github.com/ClosedXML/ClosedXML/files/4045237/test.xlsx)

**Do you want to request a *feature* or report a *bug*?**
- [x] Bug
- [ ] Feature

**Version of ClosedXML**
Tested both 0.94.2 and 0.95.0-beta2

**What is the current behavior?**

I have an XLSX file (attached as [test.xlsx](https://github.com/ClosedXML/ClosedXML/files/4019408/test.xlsx)) that has a cell with mixed font inside it (cell A1). As you can see, the cell has some words in different font styles/colors:
![image](https://user-images.githubusercontent.com/10919460/71728395-4264b380-2e3d-11ea-8a4f-17fd758d9b1a.png)

If I open and save this file using ClosedXML (even without doing anything else), the mixed formatting is lost:
![image](https://user-images.githubusercontent.com/10919460/71728446-5e685500-2e3d-11ea-8714-ca010c9014a2.png)

As you can see, weirdly, the entire cell seems to acquire the style of the first piece of text (bold font in this case)

**What is the expected behavior or new feature?**

Cell styles should not be modified (especially since I didn't even do any modifications to the document, just opened and closed it)

## Reproducibility
I just opened and then saved the document with ClosedXML, like this:

```c#
static void Main(string[] args)
        {
            using (var ms = new MemoryStream(File.ReadAllBytes("test.xlsx")))
            {
                using (var workbook = new XLWorkbook(ms))
                {
                    workbook.SaveAs("test_out.xlsx");
                }

            }
        }
```

## Further info
By having a look manually at the files inside the XLSX archive before and after saving it with ClosedXML, it seems it is "merging" various `<r>` elements, each one with its own style, into a single element without the style, as shown here:

![image](https://user-images.githubusercontent.com/10919460/71729449-0d0d9500-2e40-11ea-8828-268980f3bcd7.png)


- [x] I attached a [sample spreadsheet](https://github.com/ClosedXML/ClosedXML/files/4019408/test.xlsx)
## Read and complete the full issue template

**Do you want to request a *feature* or report a *bug*?**
- [x] Bug
- [ ] Feature

If you are logging a possible bug or feature request, please test with [the latest development build](https://ci.appveyor.com/project/ClosedXML/ClosedXML/branch/develop/artifacts) first.

**Version of ClosedXML**

e.g. 0.95.0-beta2

**What is the current behavior?**

```worksheet.Cells(range.Name)``` fails with 'Sequence contains no elements' when sheetname contains comma char.

**What is the expected behavior or new feature?**

No fail.

**Did this work in previous versions of our tool?  Which versions?**

Not sure.

## Reproducibility
**This is an important section. Read it carefully. Failure to do so will cause a 'RTFM' comment.**

Without a code sample, it is unlikely that your issue will get attention. Don't be lazy. Do the effort and assist the developers to reproduce your problem. Code samples should be [minimal complete and verifiable](https://stackoverflow.com/help/mcve). Sample spreadsheets should be attached whenever applicable. Remove sensitive information.

**Code to reproduce problem:**
```c#

		/// <summary>
		/// Scans the compare data.
		/// </summary>
		/// <param name="fileName">Name of the file.</param>
		/// <returns></returns>
		private Dictionary<string, RangesData> ScanCompareData(string fileName)
		{
			Dictionary<string, RangesData> res = new Dictionary<string, RangesData>();
			using Stream fs = new FileStream(fileName, FileMode.Open);
			XLWorkbook b = new XLWorkbook(fs);
			foreach (IXLWorksheet worksheet in b.Worksheets)
			{
				RangesData data = new RangesData();
				res.Add(worksheet.Name, data);
				foreach (IXLNamedRange range in worksheet.NamedRanges)
				{
					try
					{
						var cells = worksheet.Cells(range.Name);
						data.Add(range.Name, new RangeData { Cells = cells, RefersTo = range.RefersTo });
					}
					catch (Exception e)
					{
						Logger.LogMessage($"{worksheet}: {range.Name} - {e.Message}",true);
					}
				}
			}
			return res;
		}
```
- [ ] I attached a sample spreadsheet.  (You can drag files on to this issue)

## Read and complete the full issue template

**Do you want to request a *feature* or report a *bug*?**
- [] Bug
- [x] Feature

If you are logging a possible bug or feature request, please test with [the latest development build](https://ci.appveyor.com/project/ClosedXML/ClosedXML/branch/develop/artifacts) first.

**Version of ClosedXML**

v0.94.2

**What is the current behavior?**

If an Excel workbook uses custom VBA functions, ClosedXML will fail to parse the formulas because it cannot interpret the custom function

**What is the expected behavior or new feature?**

I was wondering if you guys ever considered supporting custom functions. At very high level, it could be achieved by making certain classes public or creating new interfaces (CalcEngine, CalcEngineFunction, Expression, etc), with added validations and logic.

I want to discuss this before spending time developing it.
Added check in PopulateAutoFilter to avoid invalid range and throwing ArgumentOutOfRangeException
## Read and complete the full issue template

**Do you want to request a *feature* or report a *bug*?**
- [x] Bug
- [ ] Feature

If you are logging a possible bug or feature request, please test with [the latest development build](https://ci.appveyor.com/project/ClosedXML/ClosedXML/branch/develop/artifacts) first.

**Version of ClosedXML**

v0.94.2

**What is the current behavior?**

When saving an Excel file with sorted AutoFilter columns, a System.ArgumentOutOfRangeException is thrown

I have tracked down the bug to ClosedXML\Excel\XLWorkbook_Save.cs:6214:

```
var sortState = new SortState
{
    Reference =
        filterRange.Range(filterRange.FirstCell().CellBelow(), filterRange.LastCell()).RangeAddress.
            ToString()
};
```

This fails if filterRange only contains one row because CellBelow() will place you outside of the range.

**What is the expected behavior or new feature?**

The document should be saved without throwing an exception

**Did this work in previous versions of our tool?  Which versions?**

Unknown

## Reproducibility
**This is an important section. Read it carefully. Failure to do so will cause a 'RTFM' comment.**

Without a code sample, it is unlikely that your issue will get attention. Don't be lazy. Do the effort and assist the developers to reproduce your problem. Code samples should be [minimal complete and verifiable](https://stackoverflow.com/help/mcve). Sample spreadsheets should be attached whenever applicable. Remove sensitive information.

**Code to reproduce problem:**

```
static void Main(string[] args)
        {
            using (var wb = new XLWorkbook(@"C:\temp\FilterTest.xlsx"))
            {
                wb.Save();
            }
        }
```

- [x] I attached a sample spreadsheet.  (You can drag files on to this issue)
[FilterTest.xlsx](https://github.com/ClosedXML/ClosedXML/files/3976700/FilterTest.xlsx)

- [x] Bug
- [ ] Feature

Version of ClosedXML: 0.94.2.0

A formula like "=A1*A2%" in an Excel cell results in an exception: "ClosedXML.Excel.CalcEngine.ExpressionParseException: Identifier expected. at ClosedXML.Excel.CalcEngine.CalcEngine.Throw(String msg)".

I'm using a code similar to the following, where rawData is of type byte[] containing the Excel file:

```C#
using (var s = new MemoryStream(rawData))
{
    XLWorkbook wb = new XLWorkbook(s);
    var sheet = wb.Worksheet(sheetName);
    var table = sheet.RangeUsed(XLCellsUsedOptions.AllContents).AsTable();
    var dt = table.AsNativeDataTable();

    foreach (DataRow row in dt.Rows)
        Console.WriteLine($"{string.Join(", ", row.ItemArray)}");
}
```

As far as I understand the percentage character (%) can be used in normal cells, so it should also work within formulars, shouldn't it?

Attached file can be used to reproduce the behaviour.

[formular_percent_crash.xlsx](https://github.com/ClosedXML/ClosedXML/files/3972930/formular_percent_crash.xlsx)

