I've just had the index creation step fail on import because Postgesql run out of disk space. When rerunning the indexing I noticed that the failing index was not created again. Reading up on concurrent indexes, it turns out that they are not deleted but are just marked as invalid on a failure.

Two things we should do to mitigate this odd behaviour:
1. The create index step should delete all invalid indexes first before attempting to create new ones.
2. Our fancy new check script should check for invalid indexes and report those (together with the recommendation to run indexing again).

Invalid indexes can be found like this:
```
SELECT * FROM pg_class, pg_index WHERE pg_index.indisvalid = false AND pg_index.indexrelid = pg_class.oid;
```
Submitting the name of the city in Russia Уфа (Ufa) service returns results "UEFA, 46, Route de Genève, Village des Pêcheurs, Nyon, 1260, Switzerland" which is not Ufa nor even Russia
in my city, a large amout of  places are being associated with a small "hamlet" that is located tens of kilometers away, outside of the city (and thus completely irrelevant).
i'm wondering if this is a bug or a mapping error.

some of thousands of examples:
https://nominatim.openstreetmap.org/details.php?place_id=134431770
https://nominatim.openstreetmap.org/details.php?place_id=198861432

these are being associated, at level 16, with https://www.openstreetmap.org/node/4982471205 ,
which is tens of kilometers away
https://nominatim.openstreetmap.org/reverse.php?format=html&lat=13.862500&lon=5.558333&zoom=

returns "` Integer number expected for parameter 'zoom' `".

I think it makes sense that empty value should be ignored since the parameter is optional. The query works when the parameter is not present
https://nominatim.openstreetmap.org/reverse.php?format=html&lat=13.862500&lon=5.558333
There is an issue that Khimki is stated as an adminstrative part of Moscow, whereas in fact, it is administrative unit of Moscow Region. 
Thank you!
Hi,

I would like to know if there is a way to get multiple results in reverse queries response.
I have an application that allow users to get their current location address, but sometimes the returned address is incorrect and I would like to allow My users to pick the correct address from a list of nearby addresses.

We do get a lot of reports of impatient people who try queries on an incomplete import. How about adding en extended status `/status.php?db=yes` or similar, which checks that all tables and indexes (or one selected table/index for each import step) are there as expected and reports if the import obviously failed. Then we could add this to the import instructions as the final step and tell people to not report anything before that doesn't work.
Follow up on 
https://github.com/openstreetmap/Nominatim/pull/1555#issuecomment-550515487
While creating index, it just uses 1 core (when there are 15 more available) and takes 24 hours more to the usual import process. 

While checking on `pg_stat_activity`, I found the below SQL to be active for ~ 15 to 20 hours
`CREATE INDEX CONCURRENTLY idx_search_name_nameaddress_vector ON search_name USING GIN (nameaddress_vector) WITH (fastupdate = off) ;`
When in the Netherlands, Searching for "Geleen" will only return the boundary relation as a city (which is correct)
There is also a place-node added as a label for the boundary relation, this node is not returned as a seperate search result. (which is again, correct)
[Search result can be found here](https://www.openstreetmap.org/search?query=geleen#map=13/50.9829/5.8137)

But when I search for "Limbricht", which is also a boundary-relation with a place-node added as the label, I get 2 search results (1 for the relation, 1 for the place-node) which in my oppinion.. is not correct. 
[Search result can be found here](https://www.openstreetmap.org/search?query=limbricht#map=14/51.0188/5.8359)

Is there anything wrong in the tagging?
