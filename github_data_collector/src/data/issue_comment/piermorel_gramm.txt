Hi,
I'm looking for a way to add greek/special characters in the axis - I'm using the option .set_names, and characters like /mu doesn't interpret to greek letters on the figure.

any ideas?
<img width="54" alt="MATLAB_2019-12-26_11-28-30" src="https://user-images.githubusercontent.com/5610394/71482881-e06bd480-27d2-11ea-8e59-eb3f96eaa66f.png">
thanks!
I ran into an error when plotting a boxplot with multiple conditions to plot.

> Error using plot
>Vectors must be the same length.
>
>Error in gramm/stat_boxplot>my_boxplot (line 140)
>obj.results.stat_boxplot{obj.result_ind,1}.outliers_handle=plot(boxmid(outliersx),outliersy,'o','MarkerEdgeColor','none','MarkerFaceColor',draw_data.color);
>
>Error in gramm/stat_boxplot>@(dobj,dd)my_boxplot(dobj,dd,p.Results) (line 24)
>obj.geom=vertcat(obj.geom,{@(dobj,dd)my_boxplot(dobj,dd,p.Results)});
>
>Error in gramm/draw (line 548)
>                                        obj.geom{geom_ind}(obj,draw_data);
>
>Error in CLOC_DA_gramm_plotting (line 79)
>g.draw()

The error arises because the 'outliersx' and 'outliersy' are not defined properly - namely, 'outliersy' becomes a matrix instead of a vector when there are outliers in multiple conditions.

This is easily solved by changing stat_boxplot.m, like 81, to:

`outliersy=[outliersy; ysel(sel_outlier)'];`

Hope that's helpful!
Hi Pierre,

I wonder if it's possible to change to color of a line plotted with geom_line() independently of the color map used from a plotted densitity heat map. For example my dummy code looks like this,
g=gramm('x',x,'y',y)
g.stat_bin2d('geom','image')
annot_x=[0 1.5];
annot_y=[0 1.5];
annot_cat_column=[1 1];
g.update('x',annot_x,'y',annot_y,'color',annot_cat_column)
g.geom_line()
g.set_color_options('chroma',0,'lightness',0)
g.draw()

At the moment it does not change the color of the line to black as I thought it would using the set_color_options. I can only change the line to a color of the heatmap  by changing annot_cat_column to having different values (1,2,3). 

cheers,

Nigel
Hi,

I'd like to brush and link data points between different plots.
However if I use for example  gplot.geom_point() I'm not able to brush data as the data points don't change their color.


I very much hope this is the last time I bother you on here, Pierre. If I may, just a couple more questions:

1) I have several data points at each of several quantised levels, and I'd like to plot these as a dot plot (before adding other layers on top). The MatlabExchange script I was using previously (Univarscatter) was plotting points situated at the same level equidistantly about a central x value, regardless of the jitter width:
![29-01-2019 16 10 49](https://user-images.githubusercontent.com/15835348/51918489-f534c200-23e1-11e9-97c7-35e250a003a9.jpg)

Since I've now migrated all my plotting to gramm, I was hoping to obtain more or less the same with geom_jitter, but I get randomly non-equidistant points:
![29-01-2019 16 24 01](https://user-images.githubusercontent.com/15835348/51918713-4fce1e00-23e2-11e9-9d20-eb5e86d28485.jpg)

Reducing the width doesn't help. Is there a way to make the jitter more systematic/symmetrical?


2) On this scatter plot, I'd like to highlight certain data points by making the marker larger or of a different shape, as in the UnivarScatter plot above. Can this be done, either with gramm or in parallel to it?

3) Similarly, I'd like to highlight the median on my violin plots. Adding stat_boxplot would be overkill - I'd like to just add a horizontal line (again, as in the plot above). Using Matlab commands ( line() ) prior to g.draw() seems to make a mess. 

Thank you so much!
I've been having a few problems setting the 'alpha' parameter in geom_point.

When I run this code, the points in the resulting figure become transparent for less than a second, but quickly reverts to opaque as the figure is created
```
load example_data;
figure
g=gramm('x',cars.Horsepower,'y',cars.MPG,'subset',cars.Cylinders~=3 & cars.Cylinders~=5);
g.geom_point('alpha', 0.2);
g.draw
```

I did manage to find a solution, but I'm not sure why it works and there's probably a much better way to implement it. 

If I add ```pause(0.5)``` to line 407 in draw.m where the subplot is created, the code runs perfectly and the points remain transparent. 

I'd guess that creating the axis or making an axes current takes some time and doesn't block the code, but I don't know the specifics it.

I'm perfectly willing to wait half a second per axis, but I thought you should know about this if you didn't.

Thanks,
Russell

Hi Pierre,

I was wondering whether you foresee any method which would make me able to automatically group observations into "individuals", in order to have correct errorbars when plotting for eg SEMs.

Imagine that I have 3 repeated observation per individual, per condition. The default input method of gramm doesn't allow me to automatically average these 3 repeated observations, does it?

Cheers,

Romain
I almost feel embarrassed to add such a tiny change. I simply added an if statement checking for log scales, as lines do not display properly if any values plotted are negative. This fixes this such that any negative values become 1. I know this doesn't really follow your guidelines, but it's really a minor, minor QoL fix.
Two parameters were added to `set_point_options`: border_width and border_color. These options allow addition of a border to be drawn around each point. An example of a plot drawn with and without point borders is shown below.

The default is no border.
If border_width is set to a value greater than 0, a black border is drawn around each point.
If border_color is set but border_width is not, then no border will be drawn.
Acceptable values for border_color are an 1x3 RGB matrix, or the Matlab color shorthand (such as 'g' or 'green').

![figure_1_a_noborder](https://user-images.githubusercontent.com/15925882/37569995-7dbd3420-2ac0-11e8-867d-4cee3807238a.png)

With borders:
![figure_1_a](https://user-images.githubusercontent.com/15925882/37570005-9d65f744-2ac0-11e8-9329-b67152fb6798.png)

Hello,

This is my first issue here so sorry if I am messing things up or saying something that is not accurate. I really like a function called chart.Correlation(), it is available in a package called PerformanceAnalytics. 

It would be great to have something similar on Matlab, however the native function plotmatrix() is far less efficient. Would this be something interesting to include in gramm? I thought about developing it myself but never managed to do so.

The function mentioned is available on the link: https://www.rdocumentation.org/packages/PerformanceAnalytics/versions/1.4.3541/topics/chart.Correlation