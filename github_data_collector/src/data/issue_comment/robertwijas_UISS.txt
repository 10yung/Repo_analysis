- New preprocessor macro added. Check if it is defined, in order to run the blocks of code which are unavailable in app extensions (see sharedApplication)
- Podspec file modified. New subspec about app extensions added, in which the preprocessor macro is defined
There are references to [UIApplication sharedApplication] and UIAlertView in the UISS iOS library, which is forbidden in (Today)App Extension context .It would be great if UISS can be used for app extensions. Can you please fix this by using a preprocessor macro?
This change reduces the footprint of this method in our profiling traces from 500-600 ms to ~80 ms on iPhone 6+/iOS 10.1.
Hi, 
are there any plans to support UITraitCollection, i.e. appearanceForTraitCollection: and  appearanceForTraitCollection:whenContainedInInstancesOfClasses: ?

Best regards,
Thomas
i get the error 5704 "Unknown appearance class" on one of my viewControllers.
i have no clue why this happens... any hints?


Hi Robert, 

I’m building an app that let the users share photos with football live scores over it, we have multiple score designs right now, i’m styling using interfacebuilder .xib files, my current problem is that i have some sports teams that want to join with oficial skins packs, and we have to update the app everytime we want to add a new skins pack.

What we do right now is, we create an image 1080x1080 with the non dynamic items of each skin and then we position the dynamic elements in place using interfacebuilder.

I know that UISS can be used to style app UI/UX elements, my skin pack are 8 skins per pack, my specific question is :

Can i use UISS to create multiple UISS/Json to style (font-family,font-size, background-image, images-fields, position etc) each skin even from the server ?

Note: Dynamic items i get from a live scores api and are always the same , home_team , away_team, home_score, away_score, so i create a skin model with this items and just replicate

Thank you for your help

Well, I think the question is clear enough :), just in case I'm looking for something like.

``` js
// some themeing
"UITableViewHeaderFooterView": {
        "tintColor": "$someTintColor",
        "UILabel": {
            "textColor": "$TextSubtitleColor",
            "font": UIFontTextStyleCaption1
        }
    },
// some additional themeing
```

It would be nice if you can insert simple NSStrings to UIAppeareance.

Something like:

{
    "ExampleView":{  
        "fontName"    :"Optima-Italic",
     }
}

For the following class:

@interface ExampleView : UIView
@property(nonatomic) UI_APPEARANCE_SELECTOR NSString *fontName;
@end

When using swift the custom classes couldn't be found  by "NSClassFromString".
I created a small method with convert a class string name into a valid Swift class name and then try to retrieve the Class object again.

No big deal, but now works with Swift :)
