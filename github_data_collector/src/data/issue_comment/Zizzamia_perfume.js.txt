I run the sample with React but no luck. Perfume only track navigation timing and show some error with entryType
![image](https://user-images.githubusercontent.com/49668846/71661216-1b947780-2d80-11ea-9139-0f533246f83a.png)

Scenario:
- Create a new application with `ng new my-app`
- Install library and follow the guidelines
- Add `@PerfumeAfterViewInit('AppComponent')` decorator
- Run application

I got the error below
```
Class constructor AppComponent cannot be invoked without 'new'
    at new childConstuctor (perfume.js-angular.js:95)
    at new newCtor (perfume.js-angular.js:98)
    at createClass (core.js:31984)
```

After some search I found out that the problem is tsconfig's target: by default it is **es2015**, but for make perfume.js works I have to change in **es5**.

This change works for me but I don't know if it's the right way to avoid the problem, if it's the correct way I could make a PR with updated README.md file
Based article https://web.dev/layout-instability-api
Keep an eye on https://bugs.chromium.org/p/chromium/issues/detail?id=581518&q=firstInput&colspec=ID%20Pri%20M%20Stars%20ReleaseBlock%20Component%20Status%20Owner%20Summary%20OS%20Modified
Hi @Zizzamia! 

Can I use perfume in an Angular app with lazy loaded modules?

I know I can use `PerfumeModule.forRoot(perfumeConfig)` in the root but I'm not sure how to configure it in lazy loaded modules. 

If I try `PerfumeModule.forChild` I get this error in VSCode: 
`Property 'forChild' does not exist on type 'typeof PerfumeModule'.`

If I use `PerfumeModule.forRoot` in both modules, I get this error in the console:
```js
TypeError: Cannot read property 'pushTask' of undefined
    at perfume.es5.min.js:1
    at first-input-delay.js:68
```

which seems to be coming from the function below. Can you help? 🙏
````js
/**
   * Reports the first input delay and event (if they're recorded and valid)
   * by running the array of callback functions.
   */
  function reportFirstInputDelayIfRecordedAndValid() {
    // In some cases the recorded delay is clearly wrong, e.g. it's negative
    // or it's larger than the time between now and when the page was loaded.
    // - https://github.com/GoogleChromeLabs/first-input-delay/issues/4
    // - https://github.com/GoogleChromeLabs/first-input-delay/issues/6
    // - https://github.com/GoogleChromeLabs/first-input-delay/issues/7
    if (firstInputDelay >= 0 &&
        firstInputDelay < firstInputTimeStamp - startTimeStamp) {
      callbacks.forEach(function(callback) {
        callback(firstInputDelay, firstInputEvent);
      });
      callbacks = [];
    }
  }
As we have `maxMeasureTime` have also `minMeasureTime` with a default value of 10.
Changing slightly the behavior with anything that is below a specific number to not be reported.