Hi!
I've been playing around with some 17.x.y docker version previously which seemed to work just find. As I found out, a new release was on the fly and pulled the current docker version and started from scratch.
Externally, there's Nginx:

>         location /nextcloud/ {
>                proxy_set_header        X-Real-IP       $remote_addr;
>                proxy_set_header        X-Forwarded-For $remote_addr;
>                proxy_set_header        Host            $host;
>                proxy_pass              http://localhost:8081/;
>                client_max_body_size    10000M;
>        }

Nextcloud is started like this:
>exec docker run                                                                 \\
>        --volume  `pwd`/nextcloud_data:/var/www/html                            \\
>        --env     "POSTGRES_DB=${POSTGRES_DB}"                                  \\
>        --env     "POSTGRES_USER=${POSTGRES_USER}"                              \\
>        --env     "POSTGRES_PASSWORD=${POSTGRES_PASSWORD}"                      \\
>        --env     "POSTGRES_HOST=${POSTGRES_HOST}"                              \\
>        --env     "NEXTCLOUD_ADMIN_USER=${NEXTCLOUD_ADMIN_USER}"                \\
>        --env     "NEXTCLOUD_ADMIN_PASSWORD=${NEXTCLOUD_ADMIN_PASSWORD}"        \\
>        --publish 8081:80                                                       \\
>        nextcloud:apache

config.php was changed at two places:

1. Add '*' as a trusted domain (needed for Nginx reverse proxy, I failed to get it working using $NEXTCLOUD_TRUSTED_DOMAINS, probably due to quoting issues.
1. I added "'overwritewebroot' => '/nextcloud/'" for the reverse proxy as well.

With the current 18.0.0 version (Docker: nextcloud/apache, ef0f07bbd853), I'm getting an error pop-up telling "This directory is unavailable, please check the logs or contact the administrator", and after login, my URL looks like https://jbglaw-octopus.dyn.lug-owl.de/nextcloud//apps/files/ . I guess that apps/files might be an issue, whereever it is coming from.

Looking through settings/admin/overview, there are a number of issues that seem to be new (compared to 17.x.y):

- Your web server is not yet properly set up to allow file synchronization, because the WebDAV interface seems to be broken.
- Missing index "calendarobject_calid_index" in table "oc_calendarobjects_props".
- Missing index "schedulobj_principuri_index" in table "oc_schedulingobjects".
- Missing bigint conversion: mounts.storage_id, mounts.root_id, mounts.mount_id

I dropped the PostgreSQL database beforehand and wiped the supplied /var/www/html directory, so this is a completely new installation. I would have expected that for a fresh installation, the column types and indices were readily created?

Most probably, each of the issues is only a small thing to fix, please let me know if/how I can assist. The previous Docker worked quite well for testing, I quite like that setup, would be perfect to get that up'n'running for the 18.0.0 release as well. (And maybe fix the issues with trusted domain and overwritewebroot as mentioned before, so no further manual config file editing would be needed.)

Thanks a lot!
Jan-Benedict
Just using the default docker-compose from the readme only changes are the mysql passwords.

```
ERROR: for d5e7c893a344_nextcloud_web_1  a bytes-like object is required, not 'str'

ERROR: for web  a bytes-like object is required, not 'str'
Traceback (most recent call last):
  File "site-packages/docker/api/client.py", line 261, in _raise_for_status
  File "site-packages/requests/models.py", line 940, in raise_for_status
requests.exceptions.HTTPError: 400 Client Error: Bad Request for url: http+docker://localhost/v1.22/containers/5c78171f05009d51ec5da431ac4c670a6d0d19774998fab1343c13954c8bfb6f/start

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "compose/service.py", line 625, in start_container
  File "compose/container.py", line 241, in start
  File "site-packages/docker/utils/decorators.py", line 19, in wrapped
  File "site-packages/docker/api/container.py", line 1095, in start
  File "site-packages/docker/api/client.py", line 263, in _raise_for_status
  File "site-packages/docker/errors.py", line 31, in create_api_error_from_http_exception
docker.errors.APIError: 400 Client Error: Bad Request ("b'OCI runtime create failed: container_linux.go:346: starting container process caused "process_linux.go:449: container init caused \\"rootfs_linux.go:58: mounting \\\\\\"/root/nextcloud/nginx.conf\\\\\\" to rootfs \\\\\\"/var/lib/docker/overlay2/ce692825e1b08e259ee2451210d9fa0e5f5cd3a47780dc1923047d840940711f/merged\\\\\\" at \\\\\\"/var/lib/docker/overlay2/ce692825e1b08e259ee2451210d9fa0e5f5cd3a47780dc1923047d840940711f/merged/etc/nginx/nginx.conf\\\\\\" caused \\\\\\"not a directory\\\\\\"\\"": unknown: Are you trying to mount a directory onto a file (or vice-versa)? Check if the specified host path exists and is the expected type'")

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "bin/docker-compose", line 6, in <module>
  File "compose/cli/main.py", line 72, in main
  File "compose/cli/main.py", line 128, in perform_command
  File "compose/cli/main.py", line 1107, in up
  File "compose/cli/main.py", line 1103, in up
  File "compose/project.py", line 570, in up
  File "compose/parallel.py", line 112, in parallel_execute
  File "compose/parallel.py", line 210, in producer
  File "compose/project.py", line 556, in do
  File "compose/service.py", line 563, in execute_convergence_plan
  File "compose/service.py", line 490, in _execute_convergence_recreate
  File "compose/parallel.py", line 112, in parallel_execute
  File "compose/parallel.py", line 210, in producer
  File "compose/service.py", line 483, in recreate
  File "compose/service.py", line 602, in recreate_container
  File "compose/service.py", line 627, in start_container
TypeError: a bytes-like object is required, not 'str'
[80897] Failed to execute script docker-compose
```
People are deploying Nextcloud more and more on kubernetes (this is our case), the VOLUME directive and the fact that it is not stateless is on the way.

This PR is to make the image on the road for stateless (there is still the redis part, that I solved on my fork in a different fashion, but I'd like to keep this PR, reasonably small).

The env var with the 10, is because, in my fork I have 20 to override them, and I prefer that the `database.config.php` is called `10.` to be sure it is loaded before `config.php` so that it overwrite it.

closes #588 #489 

I build indiepaas/nextcloud:16.0.7-fpm-alpine to test it out, you can do the same if needed.

From: https://github.com/nextcloud/docker/blob/master/.examples/dockerfiles/full/fpm-alpine/Dockerfile today.

Tail end of Dockerfile is:

```
COPY supervisord.conf /

ENV NEXTCLOUD_UPDATE=1

CMD ["/usr/bin/supervisord", "-c", "/supervisord.conf"]
```

Build reports:

>   COPY failed: stat /var/lib/docker/tmp/docker-builder167487155/supervisord.conf: no such file or directory, logs: 

I have installed the docker version of nextcloud:latest and am trying to get it running. I have specified volumes to mount as such:
```
  --volume `pwd`/Images/nextcloud/html:/var/www/html \
  --volume `pwd`/Images/nextcloud/config1:/var/www/html/config \
  --volume `pwd`/Images/nextcloud/data1:/var/www/html/data \
  --volume `pwd`/Images/nextcloud/custom_apps:/var/www/html/custom_apps \
```
When I hit the webpage, I get:
```
    Cannot write into "config" directory

    This can usually be fixed by giving the webserver write access to the config directory. See https://docs.nextcloud.com/server/17/go.php?to=admin-dir_permissions. Or, if you prefer to keep config.php file read only, set the option "config_is_read_only" to true in it. See https://docs.nextcloud.com/server/17/go.php?to=admin-config

    Cannot write into "apps" directory

    This can usually be fixed by giving the webserver write access to the apps directory or disabling the appstore in the config file. See https://docs.nextcloud.com/server/17/go.php?to=admin-dir_permissions
```

I have verified that the www-data user in the container has write access to those directories however, so I'm not sure what the problem is:
[ this is after manual stuffing around with the container, if you are wondering how I am logged in as www-data ]
```
# su - www-data
www-data@nextcloud:~$ pwd
/var/www
www-data@nextcloud:~$ cd html
www-data@nextcloud:~/html$ ls
3rdparty  COPYING  config       core      custom_apps  index.html  lib  ocm-provider  ocs-provider  remote.php  robots.txt  status.php  version.php
AUTHORS   apps     console.php  cron.php  data         index.php   occ  ocs           public.php    resources   settings    themes
www-data@nextcloud:~/html$ touch foo
www-data@nextcloud:~/html$ rm foo
www-data@nextcloud:~/html$ cd config
www-data@nextcloud:~/html/config$ touch foo
www-data@nextcloud:~/html/config$ ls -l foo
-rw-r--r-- 1 www-data www-data 0 Jan 15 02:06 foo
www-data@nextcloud:~/html/apps$ cd ../custom_apps
www-data@nextcloud:~/html/custom_apps$ touch foo
www-data@nextcloud:~/html/custom_apps$ ls -l foo
-rw-r--r-- 1 www-data www-data 0 Jan 15 02:11 foo
www-data@nextcloud:~/html/custom_apps$ rm foo
www-data@nextcloud:~/html/custom_apps$
```

Where do I look next please?
After updating my docker-compose to nextcloud 17 I started getting a lot of 412 errors and the message "Problem loading page, reloading in 5 seconds" in the frontend. After reading this issue: https://github.com/nextcloud/server/issues/5274 I figured it would be a session problem. After disabling redis in my docker-compose everything worked again.

I'm currently running nextcloud:17.0.2-fpm-alpine and redis:5.0.7-alpine3.11

Here my docker-compose.yml file, note that I use traefik as a reverse proxy for ssl termination:
```
version: '2.3'
services:
  nextcloud:
    image: nextcloud:17.0.2-fpm-alpine
    restart: always
    environment:
      - MYSQL_HOST=db
      - NEXTCLOUD_ADMIN_USER=admin
      - NEXTCLOUD_ADMIN_PASSWORD=<censored>
      - NEXTCLOUD_TRUSTED_DOMAINS=<censored>
      # - REDIS_HOST=redis
    env_file:
      - db.env
    volumes:
      - ./volumes/nextcloud/var_www_html:/var/www/html
  db:
    image: mariadb:10.4.11
    restart: always
    volumes:
      - ./volumes/db:/var/lib/mysql
      - ./volumes/db_backup:/backup
    environment:
      - MYSQL_ROOT_PASSWORD=<censored>
    env_file:
      - db.env
  collabora:
    image: collabora/code:4.2.0.3
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:<censored>"
      - "traefik.frontend.passHostHeader=true"
      - "traefik.protocol=http"
      - "traefik.port=9980"
      - "traefik.docker.network=network_web"
      - "traefik.frontend.headers.STSSeconds=315360000"
    environment:
      - domain=<censored>
      - server_name=<censored>
      - username=admin
      - password=<censored>
      - "extra_params=--o:ssl.enable=false --o:ssl.termination=true"
      - DONT_GEN_SSL_CERT=true
    cap_add:
      - MKNOD
    tty: true
    networks:
      - network_web
      - default
  redis:
    image: redis:5.0.7-alpine3.11
    restart: always
  cron:
    image: nextcloud:17.0.2-fpm-alpine
    restart: always
    volumes_from:
      -  nextcloud
    entrypoint: /cron.sh

  nginx:
    image: nginx:1.17.7-alpine
    restart: always
    labels:
      - "traefik.enable=true"
      - "traefik.frontend.rule=Host:<censored>"
      - "traefik.protocol=http"
      - "traefik.port=80"
      - "traefik.docker.network=network_web"
      - "traefik.frontend.redirect.permanent='true'"
      - "traefik.frontend.redirect.regex=https://(.*)/.well-known/(card|cal)dav"
      - "traefik.frontend.redirect.replacement=https://$$1/remote.php/dav/"
      - "traefik.frontend.headers.STSSeconds=315360000"
      - "traefik.frontend.headers.customFrameOptionsValue=sameorigin"
      - "traefik.frontend.passHostHeader=true"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    volumes_from:
      - nextcloud
    networks:
      - network_web
      - default

networks:
  network_web:
    name: network_web
  default:
    name: network_default
```

hello,

do you have a solution for local "external" storage and uid/gid?
i made this dockerfile to change the uid and gid of www-data but a cleaner solution would be appreciated.
[Dockerfile.txt](https://github.com/nextcloud/docker/files/4051629/Dockerfile.txt)


Hi,

I would like to add multiple *.config.php in the config folder.
This folder (in fact, its parent) is a volume as detailed [here](https://github.com/nextcloud/docker/blob/master/.examples/docker-compose/with-nginx-proxy/mariadb-cron-redis/fpm/docker-compose.yml) ).


```
services:
  nc-fpm:
    image: nextcloud:fpm
    restart: always
    networks:
      - nc
    depends_on:
      - nc-db
      - nc-redis
    env_file:
      - env/prod/nc/nc-db.env
      - env/prod/nc/nc-fpm.env
    volumes:
      - nc-app:/var/www/html:rw
      - ./sources/nc/fpm/mimetypemapping.json:/var/www/html/config/mimetypemapping.json:ro
```

If I start the container from scratch, I get :

> Cannot write into "config" directory.


But if I comment the line, start the container, uncomment the line and docke-compose up, I get the config in the right place.


Do you have any idea how to solve this ?

By advance, thank you.
Hello,

I cannot connect to my server with nextcloud running on port 8080 or 80.
![image](https://user-images.githubusercontent.com/35365361/71740440-7dc2aa80-2e5c-11ea-9a3a-f365dd6c0f74.png)
Firewall Settings:
![image](https://user-images.githubusercontent.com/35365361/71740553-d1cd8f00-2e5c-11ea-9eab-77a19c7e3368.png)


When I log in, it says that it cannot find the database. I'm using the exact code from the Github and I've set the database password.

The Postgress version works great, so I assume the issue is with the MariaDB docker image. It probably got changed in a recent update.

I'm just going to stick to Postgress, but I though you should know that the example is broken. 