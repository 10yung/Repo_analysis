I am using redux form for form related task. I am using react-dropzone for uploading files and redux form is used along with it. I could submit file to server but could not show that submitted file as initialValues for upload field.

here is how i have done

```javascript
const Form = ({ item }) => {
    return (
        <>
            <form onSubmit={handleSubmit(val => handleItemSubmit(val, mutation))}>
                <Field name="photo" component={UploadField} />
            </form>
        </>
    )
}

export default compose(
  connect((state, props) => {
    const { items } = props;
    return {
      initialValues: {
        ...items,
        photo:
          items && items.photoPath
            ? { name: items.photoName, size: 12345 }
            : null,
        languages:
          items &&
          items.languages &&
          get(items, "languages", "")
            .split(",")
            .map(lang => ({
              label: lang,
              value: lang
            }))
      }
    };
  }),
  reduxForm({
    form: "item_form",
    enableReinitialize: true,
    fields: { ...requiredFields },
    validate
  })
)(Form);



import React from "react";
import styled from "styled-components";
import { useDropzone } from "react-dropzone";

export const UploadField = props => {
  const {
    input: { onChange },
    disabled
  } = props;

  const { getRootProps, getInputProps } = useDropzone({
    onDrop: files => onChange(files)
  });

  const files = props.input.value;

  if (disabled) {
    return null;
  }

  return (
    <>
      <DropzoneContainer {...getRootProps()}>
        <input {...getInputProps()} />
        Upload files here!
      </DropzoneContainer>
      <br />
      <div>
        {Object.keys(files).map((key, index) => {
          console.log("FILES ---", files);
          return (
            <ThumbsContainer>
              <p>{files[key].name}</p>
            </ThumbsContainer>
          );
        })}
      </div>
    </>
  );
};

export default UploadField;

const DropzoneContainer = styled.div`
    flex: 1;
    display: flex;
    flex-direction: column;
    align-items: center;
    padding: 20px;
    border-width: 2px;
    border-radius: 2px;
    border-color: ${props => getColor(props)};
    border-style: dashed;
    background-color: #fafafa;
    color: #bdbdbd;
    outline: none;
    transition: border 0.24s ease-in-out;
  `,
  ThumbsContainer = styled.aside`
    display: flex;
    flex-direction: row;
    flex-wrap: wrap;
    margin-top: 16px;
  `,
  Thumb = styled.div`
    display: inline-flex;
    border-radius: 2px;
    border: solid 1px #eaeaea;
    margin-bottom: 8px;
    width: 100;
    height: 100;
    padding: 4px;
    box-sizing: border-box;
  `,
  ThumbInner = styled.div`
    display: flex;
    min-width: 0;
    overflow: hidden;
  `,
  Image = styled.img`
    display: block;
    max-width: 100%;
    width: 180px;
    height: 180px;
  `;

const getColor = props => {
  if (props.isDragAccept) {
    return "#00e676";
  }
  if (props.isDragReject) {
    return "#ff1744";
  }
  if (props.isDragActive) {
    return "#2196f3";
  }
  return "#eeeeee";
};
```
I get these two fields back from server when uploading images.

![Image of upload result](https://i.stack.imgur.com/lTCAs.png)




<!-- Before creating an issue please make sure you are using the latest version of react-dropzone. -->

**Do you want to request a *feature* or report a *bug*?**
<!-- Please ask questions on StackOverflow. Questions will be closed. -->

- [x] I found a bug
- [ ] I want to propose a feature

**What is the current behavior?**

**If the current behavior is a bug, please provide the steps to reproduce.**
<!-- You can use https://codesandbox.io/embed/stupefied-kepler-btkpt to get started and illustrate the issue you're experiencing. -->

1. Use bulmas upload html structure: https://bulma.io/documentation/form/file/
1. Use `<label>` as root Element eg.   `<label {...getRootProps({ className: "dropzone" })}>`
1. Safari: Upload per click, rerender will not trigger either the onDrop function is not called. (Drag & Drop works correct)
1. Chrome: Upload per click: opens dialog, select File => opens dialog again => select file than it works like expected.

**What is the expected behavior?**

On Safari: rerender to access updated acceptedFiles

On Chrome: only one file select dialog should appear

On Firefox: works normal

**Workaround**

rename `<label>` to `<div>`. It semes that a label element is not working as root.

The Documentation tells: 

> The root properties can be applied to whatever element you want

Simplified example to test: https://codesandbox.io/s/friendly-goldstine-9zczm

**Please mention other relevant information such as the browser version, Operating System and react-dropzone version.**

* OS: MacOS
* React & ReactDom: 16.12.0
* React Dropzone: 10.2.1
* Safari: 13.0.3 
* Chrome: 78.0.3904.108


<!-- Before creating an issue please make sure you are using the latest version of react-dropzone. -->

**Do you want to request a *feature* or report a *bug*?**
<!-- Please ask questions on StackOverflow. Questions will be closed. -->

- [x] I found a bug
- [ ] I want to propose a feature

**What is the current behavior?**
isDragActive returns false when dragging over text. This bug is reproducible on Firefox but seems to be working properly on Chrome.

**If the current behavior is a bug, please provide the steps to reproduce.**
<!-- You can use https://codesandbox.io/embed/stupefied-kepler-btkpt to get started and illustrate the issue you're experiencing. -->

The codesandbox [example](https://codesandbox.io/embed/stupefied-kepler-btkpt) displays this behaviour. Simply drag a file over the text in the example and the border will turn white (instead of green) in some places, especially right above the words.

**What is the expected behavior?**
isDragActive should be true when dragging over any children.

**If this is a feature request, what is motivation or use case for changing the behavior?**

**Please mention other relevant information such as the browser version, Operating System and react-dropzone version.**

<!-- Before creating an issue please make sure you are using the latest version of react-dropzone. -->

**Do you want to request a *feature* or report a *bug*?**
<!-- Please ask questions on StackOverflow. Questions will be closed. -->

- [ ] I found a bug
- [X] I want to propose a feature

I'd like to get a reason for rejection in the `onDropRejected` callback
currently I only get the file that was rejected.
There was a request opened up previously #735, but it was closed. I am not sure why because the request was valid one and the response didn't really help the reporter.

From what I can see there can be 3 reasons:

- you dragged multiple files to `multiple={false}` dropzone
- bad mime type
- file too big

Sure I can have a series of if statements in my callback to recognize what was the reason for rejection, but why do this work again when react-dropzone already done it?

Also it would be nice to have default error messages for those 3 scenarios, I'd propose:

- `File ${file.name} is not supported`
- `Only accepts a single file`
- `File ${file.name} is ${bytes(file.size)}, the upper limit for file size is ${bytes(maxFileSize)}`
- [x] I want to propose a feature

**What is the current behavior?**
Does not specify which browsers are fully/partially supported. 

**If this is a feature request, what is motivation or use case for changing the behavior?**
Before integrating users would like to know if their desired browser support is available. Would also help to build support if we know which browsers need it.


I've been maintaining this repository for quite some time already and I'd like to slowly step down as the main maintainer. I could remain on board for discussions and code reviews, though.

The reason for that is that I try to spend more time with my üë®‚Äçüë¶ and OSS work takes quite some time of it. OpenCollective campaign doesn't show any interest in this project from people who use this software so I decided to give up on this project and concentrate on other projects like üö´üí© lint-staged.

If you're interested in helping out, please step out and let me know.


**UPDATE**
This issue/message is by no means reason for concern, the lib is still being maintained. The issue/message is here to encourage more ppl. to contribute and help with arising issues.

There is no need to add more comments to this topic, instead, if you feel like something needs to be fixed or changed, feel free to make a PR.