**Describe the bug**
Only numbers are shown for the branches, I guess they are suppose to represent when the last commit was created? Only numbers tells me nothing, since it can be weeks, seconds or hours.

**To Reproduce**
Steps to reproduce the behavior:
1. Install latest version `brew install jesseduffield/lazygit/lazygit`
2. Open up a repo
3. Check the numbers

**Expected behavior**
I would very much like to have explanations for what the numbers represent

**Screenshots**
![image](https://user-images.githubusercontent.com/4033930/72502681-2ea44e80-383a-11ea-8331-03e55eb2d377.png)


**Desktop (please complete the following information):**
 - OS:  macOS Catalina 10.15.1
 - Lazygit Version [e.g. v0.13]
- iTerm2 Build 3.3.7

**Additional context**
Now when I'm typing this I have small bell ringing that this issue is known on macOS?

Also, thanks for putting time into this! :) 

**Describe the bug**
I use [hub](https://github.com/github/hub) to checkout PRs for review. By issuing `hub checkout <url>` it will checkout from a fork without adding the fork as a remote. This can be handy when managing local mess when checking contributions from tens/hundreds of different contributors.

lazygit doesn't seem to recognise these [branch] configuration entries, prompting for a remote URL when hitting `p` to pull. It would be great if it could understand they are there!

**To Reproduce**
Steps to reproduce the behavior:
1. Use `hub` to checkout a pull request, or alternative manually add a branch configuration to `.git/confg` for a project:

```
[branch "dropdown_keyboard_support"]
        remote = https://github.com/UselessToucan/osu-framework.git
        merge = refs/heads/dropdown_keyboard_support
```
2. Checkout branch
3. Try to pull within lazygit
4. See prompt for remote URL, even though it should already be known

**Expected behavior**
Expect the pull to run without prompting. This is also applicable to push operations, for what it's worth.

**Screenshots**

![image](https://user-images.githubusercontent.com/191335/72493326-eef25c80-3863-11ea-849b-75db9155cd12.png)

**Desktop (please complete the following information):**
 - OS: macOS
 - Lazygit Version `commit=d647a96ed55e134f1464878be8d0be3a464d996f, build date=2020-01-10T04:55:07Z, build source=binaryRelease, version=0.13, os=darwin, arch=amd64`
**Describe the bug**

While trying to install lazygit with the 
```
go get github.com.jesseduffield/lazygit
```
an error message appears :
```
/kekbait/scripts/go/src/github.com/jesseduffield/lazygit/pkg/tasks/tasks.go:62:23: cmd.ProcessState.ExitCode undefined (type *os.ProcessState has no field or method ExitCode)
```

**To Reproduce**
Steps to reproduce the behavior:
1. Run ```go get github.com.jesseduffield/lazygit```
2. See error

**Expected behavior**
Lazygit should install itself

**Desktop (please complete the following information):**
 - OS: Alpine Linux
 - Lazygit Version : latest ?

I've used this method for more than a year now to install or update lazygit, and the message appeared today.
Thanks a lot for your awesome work btw !
This PR as it stands almost does what I want it to. The only issue is that the confirmation box receives a view to return the focus to after you've done the thing but in this case the view to return focus to depends on what happens after the action so I've hit a roadblock. I'm starting to think I need to do some serious rearchitecting to allow for async actions and more callbacks and stuff
This is a very very minor quibble, but I keep finding myself stumped when I'm staging changes line-wise and want to commit --- intuitively, I would just want to press `c` from the staging view, but instead I have to go back to the file menu with `Esc` and *then* press `c`. A bit unnecessary in my opinion, especially since `c` is not mapped to anything else in the staging view.

So if at all possible, it would be great to have `c` do the same thing in the staging view as it does in the file view.

Not that this will stop me from using lg, thanks very much for this!
**Topic**
There's a library called [`lib2git`](https://github.com/libgit2/libgit2) that has a library made to integrate with `git` without having to run command line options in sub shell like (I believe) y'all are currently doing.

Said project has `go` bindings as well at [`git2go`](https://github.com/libgit2/git2go).

**Your thoughts**
This is mostly just an "FYI, this thing exists which might be better/useful". I haven't looked into it much, but I feel like it might solve some of the issues I've been dealing with related to interacting with different versions of `git`, which seem to mostly be changing of flag names. (see #557, #553, #548 (already fixed, but possibly avoided doing it this way). 

**Is your feature request related to a problem? Please describe.**
I'd like to set up lazygit to follow the changes to my terminal theme based on my mac's light/dark mode. My iterm2 client is configured to do this, I'd like to define an environment variable that stores the status of light/dark theme and use that to determine which config to load when opening lazygit. 

**Describe the solution you'd like**
The ability to have sections of the config load conditionally based on an environment variable. e.g. have a light-theme: true section with colors and a light-theme: false section with its own colors and only load the applicable config section based on `LAZYGIT_THEME` or something.

**Describe alternatives you've considered**
When loading lazygit, it searches for an environment variable such as `LAZYGIT_SELECTED_CONFIG` and will load the config with that name. This would also require the ability to save/edit multiple configs. 

... until there's either undo functionality in the system or something else

**Topic**
The "reset selection" (<kbd>d</kbd>) key on the "Unstaged Changes" panel. 

**Your thoughts**
This is a very dangerous key. It'll delete things without any warning and without anyway of getting the contents back. It should either be 
A) removed entirely (maybe not the best)
B) be change to modifier + <kbd>d</kbd>
C) have a dialog alerting the user that they are permanently deleting information.

**Describe the bug**

Lazy git segfaults on rare occasions  

```
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x8 pc=0x9ed7bb]
goroutine 1 [running]:

github.com/jesseduffield/lazygit/pkg/gui.(*Gui).handleMouseDown(0xc4201f9b80, 0xc4202c0f20, 0xc420314500, 0x5a710c, 0xb957ae)
        github.com/jesseduffield/lazygit/pkg/gui/line_by_line_panel.go:183 +0x9b
github.com/jesseduffield/lazygit/pkg/gui.(*Gui).(github.com/jesseduffield/lazygit/pkg/gui.handleMouseDown)-fm(0xc4202c0f20, 0xc420314500, 0x2, 0xc4200c03b0)
        github.com/jesseduffield/lazygit/pkg/gui/keybindings.go:937 +0x3e
github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui.(*Gui).execKeybinding(0xc4202c0f20, 0xc420314500, 0xc4203800c0, 0xc4200ec0c0, 0xc4200ec120, 0xc4200ec0c0)
        github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui/gui.go:832 +0x3e
github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui.(*Gui).execKeybindings(0xc4202c0f20, 0xc420314500, 0xc4206f9b28, 0xc420314500, 0x0, 0x0)
        github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui/gui.go:812 +0x19b
github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui.(*Gui).onKey(0xc4202c0f20, 0xc4206f9b28, 0xc42030e0c0, 0xc4200c01f0)
        github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui/gui.go:790 +0x1fc
github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui.(*Gui).handleEvent(0xc4202c0f20, 0xc4206f9b28, 0xc4206f9b20, 0x0)
        github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui/gui.go:483 +0x40
github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui.(*Gui).MainLoop(0xc4202c0f20, 0xc420121cc0, 0x1)
        github.com/jesseduffield/lazygit/vendor/github.com/jesseduffield/gocui/gui.go:443 +0x2f5
github.com/jesseduffield/lazygit/pkg/gui.(*Gui).Run(0xc4201f9b80, 0x0, 0x0)
        github.com/jesseduffield/lazygit/pkg/gui/gui.go:822 +0x503
github.com/jesseduffield/lazygit/pkg/gui.(*Gui).RunWithSubprocesses(0xc4201f9b80, 0xc420236cb0, 0xc420236c40)
        github.com/jesseduffield/lazygit/pkg/gui/gui.go:831 +0x2f
github.com/jesseduffield/lazygit/pkg/app.(*App).Run(0xc420236b60, 0xc4201e8880, 0xc420236b60)
        github.com/jesseduffield/lazygit/pkg/app/app.go:166 +0x74
main.main()
        github.com/jesseduffield/lazygit/main.go:73 +0x6f3
```

**Expected behavior**

It does not Segfault

**Desktop (please complete the following information):**
 - OS: Ubuntu 19.04
 - Lazygit Version `commit=dab78c8, build date=2019-12-08, build source=debian, version=, os=linux, arch=amd64`

**Is your feature request related to a problem? Please describe.**
I am trying to change some of default lazygit behavior, e.g. have a --oneline graph in commits view. I could not find any info about configuring lazygit. The only glimpse of this I had was at [11:20 in the 15 lazygit features youtube video](https://youtu.be/CPLdltN7wgE?t=680).

**Describe the solution you'd like**
I would expect a section describing all the config.yml options in the readme file. 

**Describe alternatives you've considered**
Maybe there could be a defaultconfig.yml with all the defaults, so we could pick and modify some to include in our actual config.yml file. 

**Additional context**
I find it strange that any other issue seems to be related to this documentation, so maybe I am missing something. If it's the case I'm sorry !
