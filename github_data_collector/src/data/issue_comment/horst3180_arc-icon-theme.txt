some applications (e.g. pcmanfm, transmission) use gnome's ugly icon instead of the pretty gear (used in thunar), it was used regardless of elementary and faba icon themes installed
`/usr/share/icons/gnome/16x16/categories/preferences-desktop.png`


Similar to the [Arc-Theme](https://github.com/horst3180/arc-theme/issues/840) we also want to continue supporting the Arc-Icon theme. Any new or existing bug fix can be posted on the new fork:
https://github.com/NicoHood/arc-icon-theme

@fossfreedom will help me co-maintain this project.
SO I installed it like it's described and my taskbar does not look like the ones in the screenshots
![screenshot from 2018-03-23 10-36-10](https://user-images.githubusercontent.com/37692473/37826191-c2065d52-2e92-11e8-9862-40beff8a5231.png)

So I installed everything according to noobslab. But after selecting the Arc Icon Theme
my Docker looks like this
![screenshot from 2018-03-23 10-36-10](https://user-images.githubusercontent.com/37692473/37822216-2934460e-2e86-11e8-9d83-82e8d3025dae.png)

Is there a fix out there? Maybe even a beginner friendly one.

Edit: forgot to mention here. My problem is the "files" icon which shouldn't look like that I believe.
After running the installation script the icons for the Terminal and Gedit are missing for all themes.
The battery indicator looks incredibly misleading with this theme for me.
Example:
![screenshot from 2017-09-14 15-11-21](https://user-images.githubusercontent.com/7085361/30446409-748c6b48-995f-11e7-98b5-0550eac39d5b.png)
Looks like I have 50% but in reality I have sub 20%.

If I change the icon theme to Paper instead it looks about right:
![screenshot from 2017-09-14 15-11-47](https://user-images.githubusercontent.com/7085361/30446447-908c146a-995f-11e7-85b2-c3f70387b1a4.png)

Is that intended or a bug?
And if it's intended: Why?
I really like the Arc theme and use it on my personal computer, however e.g. a lot of MIME types are missing. I've created a few myself, mostly related to java, however the rendering script is really slow and makes it hard to test the icons out. This pull-request mostly includes my changes to render_icons.sh and should make the rendering script run faster. On my machine rendering out the entire icon set from scratch takes about 6 times less time than it would have previously.

| |Minutes|Seconds|
| -----------|-----------:|--------:|
| Original | 20 | 30 |
| Current | 3  | 20 |

My machine:
Ubuntu 16.04
Intel Core i5-4670K CPU @ 3.40GHz Ã— 4
8 GB of RAM.

It also now skips any svg-files that haven't changed since the last render finished. That's what the _timestamp files are for, they keep track of when the svg was render out last so we have something to compare time with.

---

Another neat feature for speeding things up a bit is the ability to filter out which icons should be rendered. Just pass the render script a regular expression and only objects with matching IDs will get rendered out. E.g. the example below only takes about 3 seconds to finish rendering. Combine this with something like `sudo cp -ruv ../Arc /usr/share/icons/` and it allows for deploying an icon change in 5 seconds, though not all apps will register the changes necessarily and changing icon theme back and forth might be required. 

```
$ ./render_icons.sh cpp
Rendering objects with IDs matching regex
Match: text-x-cpp_16
Match: text-x-cpp_22
Match: text-x-cpp_24
Match: text-x-cpp_32
Match: text-x-cpp_48
Match: text-x-cpp_64
Match: text-x-cpp_96
Match: text-x-cpp_128
```
One caveat though is that search only looks for object-IDs in the cached object-ID files. So if new icons are created with new object-IDs, you need to delete the cache file and  then a new cache file will be created instead, like `rm .actions.cache`. Another option is just to run the render script with no arguments and it should automatically detect that the corresponding svg-file has changed and render it out as well as create a new cache file.

The cache files are also great for searching which icons you currently have. Example.
```
$ grep generic .*.cache | sed -r 's/\_[0-9]+//' | sort | uniq
.mimetypes.cache:audio-x-generic
.mimetypes.cache:font-x-generic
.mimetypes.cache:image-x-generic
.mimetypes.cache:package-x-generic
.mimetypes.cache:text-x-generic
.mimetypes.cache:video-x-generic
```
---

I know there hasn't been any commits recently to this repository, however I hope you will keep working on the Arc theme and this should hopefully make you more productive or at least help anyone else wanting to continue working on this icon theme.

PS: I removed optipng as I had no idea what it was doing in the original script, so you might want to add it back.
is there any easy way to change all the folders color to #0F9D58 from the original blue color ??
There is also an extra diff: the change of the file COPYING to LICENSE. But this can be ignored at will.
When connecting to a VPN service via cable, the network icon shows no indication of this as nm-device-wired-secure.png is missing.