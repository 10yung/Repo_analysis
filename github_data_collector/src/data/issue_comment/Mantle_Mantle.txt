
API developer often changes Models.
So NSNumber parser works well when JSON comes as **"value" = 123** but fails when **"value" = "123"**.
I can add special fields to handle such mistakes.
But how can I parse it in more general way?

Hi,

I have a model as below:

![Screen Shot 2019-05-13 at 12 58 09 pm](https://user-images.githubusercontent.com/13017830/57593455-d2887c80-757e-11e9-9cfb-a4d921ada6e5.png)


While parsing JSON I am getting:

**Error Domain=MTLTransformerErrorHandlingErrorDomain Code=1 "Value did not match expected type" UserInfo={MTLTransformerErrorHandlingInputValueErrorKey=144.960302320699, NSLocalizedDescription=Value did not match expected type, NSLocalizedFailureReason=Expected 144.960302320699 to be of class NSValue but got __NSCFString}**

Earlier I was using Mantle version 1.5 it was working fine. But recently I have updated POD and getting this error:

![Screen Shot 2019-05-13 at 12 55 25 pm](https://user-images.githubusercontent.com/13017830/57593362-6d348b80-757e-11e9-90aa-8b1e52ff57a1.png)

My question is why is Mantle changed type difference in both versions. How to solve this issue and is there any JSONTransfomer need to write for CLLocationDegrees?

 
Hi,

I am using Mantle version 1.5 and getting error 
**"No known class method for selector 'arrayTransformerWithModelClass:'"**

My JSONTransformer code is 

![Screen Shot 2019-05-13 at 12 44 49 pm](https://user-images.githubusercontent.com/13017830/57593022-ef23b500-757c-11e9-970f-cc16cfe3e03a.png)

I can see arrayTransformerWithModelClass method in version 2.1 but I am searching alternate method in OLD Mantle version. Any help please?

Xcode 10.2 deprecates Swift 3, requiring a minimum of Swift 4, so I am updating the project's Swift version to 4.2, and also updating Quick and Nimble to versions that support 4.2.
#832 
I use Xcode's Analyze to find out a memory leak in this method
`mtl_propertyAttributes *mtl_copyPropertyAttributes (objc_property_t property)`
**Problem Description**

As noted in the README, Cocoapods has been unofficially supported via spec submissions from community members.  However as Cocoapods has moved towards the [Trunk service](http://blog.cocoapods.org/CocoaPods-Trunk/) where there is a list of owners who are the only ones with access control to push new spec updates, it seems like this unofficial support has pretty much been unable to continue as the only folks who are able to update the specs are:

```
    - Owners:
      - Robert BÃ¶hnke <REDACTED>
      - Jan Gorman <REDACTED>
      - David Caunt <REDACTED>
```

The last Cocoapods spec that was submitted was tied to Mantle 2.1.0 & so several changes that have been pushed since to fix warnings & such since Oct 2016 have not been made available to folks using the unofficial Cocoapods support.  With many other third-party library documentation pushing folks toward Cocoapods (like Google's [Firebase](https://firebase.google.com/docs/ios/setup)), it doesn't seem unlikely folks may be utilizing this out-of-sync Cocoapods spec.

**Path Forward?**

Given the way Cocoapods' Trunk service works with ownership, unofficial support without the intervention of at least one of the listed owners in the Cocoapods Trunk service is no longer possible.  It seems like the only way the unofficial support could continue would be if the podspec gets added into repository & some individual is designated in the Cocoapods' Trunk ACL who'll push the podspecs that get accepted from community-submitted pull requests (maybe adding something into the README stating that Cocoapods support is only updated by <designee> based off of submitted & accepted pull requests, marking that designee as the code owner for the podspec file, etc.).

I'm more than happy to submit a pull request adding a podspec that works with the latest changes, but it seems like given the challenges of Cocoapods' Trunk service's ACL requirements that a policy decision needs to be made by the maintainers on what they're comfortable doing.
With the final release of Xcode 10 and watchOS 5, Apple is rejecting submission of watchOS applications with a WATCHOS_DEPLOYMENT_TARGET below 3.0 but it is set to 2.0
The error detail: 
`ibMobileGestalt MobileGestalt.c:890: MGIsDeviceOneOfType is not supported on this platform.`

Please help for me.