**Is your feature request related to a problem? Please describe.**
I would love it if I could just point revive to a specific configuration file, and have it automatically pick up the `include` and `exclude` directories from that configuration file. I have some directories that are used for test helpers (multiple directories) with 50+ files and it is annoying to have to pass in the `--exclude` flag just to have it ignore them. 

**Describe the solution you'd like**
I would like a top level `exclude` and `include` variables that work just like the CLI `--exclude` and `--include` flags.

**Describe alternatives you've considered**
I currently use the CLI flags, but again, they get pretty long and having to use a bash variable to hold each one is annoying. On top of this, everyone on my team knows to look for the toml config file, and completely forget about the extra arguments on the CLI in some random CI/CD file.

**Additional context**


**Is your feature request related to a problem? Please describe.**
When I define my own revive.toml, it seems to disable all the rules. It'd be great if I could just tell it to use the rules from default.toml (with perhaps ability to turn off specific rules) so I don't have to change my config when revive adds new rules, but still have options like what error codes to return with.
In order to lint all files, the linter needs to be able to use build tags. It will actually fail to run if all the files in a directory have build tags.
**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]
a rule, rule.var-naming have two effect, packakge name lint and variable name lint, I want to set them in two rule.
**Describe the solution you'd like**
A clear and concise description of what you want to happen.
add [rule.package-naming] setting to lint 
https://github.com/mgechev/revive/blob/50f3790f328935116bf41b757869719dbd4635d7/rule/var-naming.go#L44

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.
no

**Additional context**
Add any other context or screenshots about the feature request here.
