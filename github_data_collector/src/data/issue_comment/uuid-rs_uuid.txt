<!--
    If this PR is a breaking change, ensure that you are opening it against 
    the `breaking` branch.  If the pull request is incomplete, prepend the Title with WIP: 
-->

**I'm submitting a(n)** other

# Description

Use `getrandom` crate directly instead of `rand` for generating UUIDs using v4.

# Motivation

Reduce the number of dependencies used by the crate.

Running the example in the README: 
- Before (10): c2-chacha, cfg-if, getrandom, libc, ppv-lite86, rand, rand_chacha, rand_core, rand_hc, wasi  
- After (4): cfg-if, getrandom, libc, wasi

# Tests
<!-- How are these changes tested? -->
`cargo test` locally and test usage in a simple program.

# Related Issue(s)

# Other

Wasn't sure whether I should bump the version here or not.

**Describe the bug**
`Uuid::from_guid` return type is [declared](https://github.com/uuid-rs/uuid/blob/257b0e57faf6fa3eb248052055c66c703c6d9cd8/src/winapi_support.rs#L9) as `Result<Uuid, Error>`. But this function returns errors only if `Uuid::from_fields_le()` failed. And that function only returns error [if](https://github.com/uuid-rs/uuid/blob/257b0e57faf6fa3eb248052055c66c703c6d9cd8/src/builder/mod.rs#L127) `d4` is not 8 bytes long. However in `from_guid` it is always 8 bytes long. In fact this function is always successful.  

**Expected behavior**
This function should return `Uuid`.

**Specifications**
- Version: 0.8.1, git master
Here's the **Weekly Digest** for [*uuid-rs/uuid*](https://github.com/uuid-rs/uuid):

 - - - 
# ISSUES
Last week, no issues were created.

 - - - 
# PULL REQUESTS
Last week, no pull requests were created, updated or merged.

 - - - 
# COMMITS
Last week there were no commits.

 - - - 
# CONTRIBUTORS
Last week there were no contributors.

 - - - 
# STARGAZERS
Last week there was 1 stargazer.
:star: [TheFox](https://github.com/TheFox)
You are the star! :star2:

 - - - 
# RELEASES
Last week there were no releases.

 - - - 

That's all for last week, please <kbd>:eyes: **Watch**</kbd> and <kbd>:star: **Star**</kbd> the repository [*uuid-rs/uuid*](https://github.com/uuid-rs/uuid) to receive next weekly updates. :smiley:

*You can also [view all Weekly Digests by clicking here](https://github.com/uuid-rs/uuid/issues?q=is:open+is:issue+label:weekly-digest).* 

> Your [**Weekly Digest**](https://github.com/apps/weekly-digest) bot. :calendar:

Here's the **Weekly Digest** for [*uuid-rs/uuid*](https://github.com/uuid-rs/uuid):

 - - - 
# ISSUES
Last week, no issues were created.

 - - - 
# PULL REQUESTS
Last week, no pull requests were created, updated or merged.

 - - - 
# COMMITS
Last week there were no commits.

 - - - 
# CONTRIBUTORS
Last week there were no contributors.

 - - - 
# STARGAZERS
Last week there were 2 stagazers.
:star: [Antonito](https://github.com/Antonito)
:star: [h4nyu](https://github.com/h4nyu)
You all are the stars! :star2:

 - - - 
# RELEASES
Last week there were no releases.

 - - - 

That's all for last week, please <kbd>:eyes: **Watch**</kbd> and <kbd>:star: **Star**</kbd> the repository [*uuid-rs/uuid*](https://github.com/uuid-rs/uuid) to receive next weekly updates. :smiley:

*You can also [view all Weekly Digests by clicking here](https://github.com/uuid-rs/uuid/issues?q=is:open+is:issue+label:weekly-digest).* 

> Your [**Weekly Digest**](https://github.com/apps/weekly-digest) bot. :calendar:

**I'm submitting a(n)** other

# Description
Move the `Builder` 

# Motivation
We `pub use` the builder already. But since the `Builder itself is important, it seems logical to bring it out

# Tests
Tests should pass as is.

**I'm submitting a(n)** other

# Description
This PR will remove all macOS/Linux/Windows builds from travis and appveyor
Here's the **Weekly Digest** for [*uuid-rs/uuid*](https://github.com/uuid-rs/uuid):

 - - - 
# ISSUES
Last week 6 issues were created.
Of these, 4 issues have been closed and 2 issues are still open.
## OPEN ISSUES
:green_heart: #436 [Introduce github actions to build](https://github.com/uuid-rs/uuid/pull/436), by [kinggoesgaming](https://github.com/kinggoesgaming)
:green_heart: #432 [ClockSequence Trait Approach](https://github.com/uuid-rs/uuid/issues/432), by [Dylan-DPC](https://github.com/Dylan-DPC)
## CLOSED ISSUES
:heart: #435 [Prepare for 0.8.1 release](https://github.com/uuid-rs/uuid/pull/435), by [KodrAus](https://github.com/KodrAus)
:heart: #434 [Tidy up some docs](https://github.com/uuid-rs/uuid/pull/434), by [KodrAus](https://github.com/KodrAus)
:heart: #433 [Prepare for 0.8.0 release](https://github.com/uuid-rs/uuid/pull/433), by [KodrAus](https://github.com/KodrAus)
:heart: #431 [Release a new version](https://github.com/uuid-rs/uuid/issues/431), by [nox](https://github.com/nox)
## LIKED ISSUE
:+1: #431 [Release a new version](https://github.com/uuid-rs/uuid/issues/431), by [nox](https://github.com/nox)
It received :+1: x2, :smile: x0, :tada: x0 and :heart: x0.
## NOISY ISSUE
:speaker: #431 [Release a new version](https://github.com/uuid-rs/uuid/issues/431), by [nox](https://github.com/nox)
It received 15 comments.

 - - - 
# PULL REQUESTS
Last week, 3 pull requests were created, updated or merged.
## MERGED PULL REQUEST
Last week, 3 pull requests were merged.
:purple_heart: #435 [Prepare for 0.8.1 release](https://github.com/uuid-rs/uuid/pull/435), by [KodrAus](https://github.com/KodrAus)
:purple_heart: #434 [Tidy up some docs](https://github.com/uuid-rs/uuid/pull/434), by [KodrAus](https://github.com/KodrAus)
:purple_heart: #433 [Prepare for 0.8.0 release](https://github.com/uuid-rs/uuid/pull/433), by [KodrAus](https://github.com/KodrAus)

 - - - 
# COMMITS
Last week there were 7 commits.
:hammer_and_wrench: [Merge #435  435: Prepare for 0.8.1 release r=kinggoesgaming a=KodrAus  Includes #434   There aren't any code changes in this release, it just includes some additional documentation.  Co-authored-by: Ashley Mannix <ashleymannix@live.com.au>](https://github.com/uuid-rs/uuid/commit/fb62500eef27e068fa0f86b1e99513f2b959b867) by [bors[bot]](https://github.com/apps/bors)
:hammer_and_wrench: [prepare for 0.8.1 release](https://github.com/uuid-rs/uuid/commit/5b12da498321a6d90a28e1083488e0ad0d404a25) by [KodrAus](https://github.com/KodrAus)
:hammer_and_wrench: [Merge #434  434: Tidy up some docs r=Dylan-DPC a=KodrAus  Just tidying up some docs after our `0.8.0` release.  Co-authored-by: Ashley Mannix <ashleymannix@live.com.au>](https://github.com/uuid-rs/uuid/commit/db2fe00bcaaa9f895e411ed2cd54ee9c3938fb12) by [bors[bot]](https://github.com/apps/bors)
:hammer_and_wrench: [tidy up some docs](https://github.com/uuid-rs/uuid/commit/1c370519f61f86ee4952653fa4ba7a7844c9ca5f) by [KodrAus](https://github.com/KodrAus)
:hammer_and_wrench: [Merge #433  433: Prepare for 0.8.0 release r=Dylan-DPC a=KodrAus  Closes #431   [Changeset since the last release](https://github.com/uuid-rs/uuid/compare/0.7.4...master)  Includes:  - #427  - #419  - #424  - #418  - #413  - #407  - #404  - #400  - #399  - #398  - #397  - #396  - #394  - #393  - #390 - #389  - #388   I've also added some docs to the 128bit integer methods to clarify how they're different than `to_fields` (for consistency with other uuid libs in the wild).  Co-authored-by: Ashley Mannix <ashleymannix@live.com.au>](https://github.com/uuid-rs/uuid/commit/aa6d78ff0b2e0c66ab7fc2b3a8f6fdf41f22dd17) by [bors[bot]](https://github.com/apps/bors)
:hammer_and_wrench: [use simpler version bound in readme](https://github.com/uuid-rs/uuid/commit/b03c09891d1db1bcce34bac793f955997f487f58) by [KodrAus](https://github.com/KodrAus)
:hammer_and_wrench: [prepare for 0.8.0 release](https://github.com/uuid-rs/uuid/commit/2799026a3b93c766d9a79016f75e01a17eb23a88) by [KodrAus](https://github.com/KodrAus)

 - - - 
# CONTRIBUTORS
Last week there were 2 contributors.
:bust_in_silhouette: [bors[bot]](https://github.com/apps/bors)
:bust_in_silhouette: [KodrAus](https://github.com/KodrAus)

 - - - 
# STARGAZERS
Last week there were 3 stagazers.
:star: [mrzmmr](https://github.com/mrzmmr)
:star: [vulcangz](https://github.com/vulcangz)
:star: [sukawasatoru](https://github.com/sukawasatoru)
You all are the stars! :star2:

 - - - 
# RELEASES
Last week there were 2 releases.
:rocket: [0.8.1 uuid 0.8.1: Docs](https://github.com/uuid-rs/uuid/releases/tag/0.8.1)
:rocket: [0.8.0 uuid 0.8.0: API polish and consolidation](https://github.com/uuid-rs/uuid/releases/tag/0.8.0)

 - - - 

That's all for last week, please <kbd>:eyes: **Watch**</kbd> and <kbd>:star: **Star**</kbd> the repository [*uuid-rs/uuid*](https://github.com/uuid-rs/uuid) to receive next weekly updates. :smiley:

*You can also [view all Weekly Digests by clicking here](https://github.com/uuid-rs/uuid/issues?q=is:open+is:issue+label:weekly-digest).* 

> Your [**Weekly Digest**](https://github.com/apps/weekly-digest) bot. :calendar:

**I'm submitting a(n)** other

# Description
This PR is just an experiment to see how Github Actions will work out for us
I know this has already been closed but I think offering a trait to "solve" this problem is the wrong approach.  The default use of ClockSequence here is just plain wrong and should be corrected to follow spec.

_Originally posted by @PrismaPhonic in https://github.com/uuid-rs/uuid/issues/106#issuecomment-542522289_
UUIDv1s bytes are organized so that in a left-to-right comparison, when comparing byte-by-byte (or nibble-by-nibble, when comparing string encoded uuids) the bytes that change will be compared first. e.g. if I have:
```
058a119a-dd83-11e9-8a34-2a2ae2dbcce4 
084be782-dd83-11e9-8a34-2a2ae2dbcce4
```
To compare, it'll determine there's not a match by the second char or first byte, rather than compare those 12 shared bytes first. This is often what we want, but if we're building a large set of uuids, that first group of bytes can be ordered by creation time. We can optimize certain cases by sorting so entries with UUIDs closer together in creation time are grouped together.

mysql8 solves this with its "time-part swapping" feature, which deserializes a string uuid into one where the first 4 bytes come last: https://dev.mysql.com/doc/refman/8.0/en/miscellaneous-functions.html#function_uuid-to-bin

Alternatively, I suppose rather than decode the Bytes differently, we could use special compare functions so you could sort of build a `BTreeMap` where order is determined by the first 4 bytes.

Not blocking.
