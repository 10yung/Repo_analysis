Functional Torque Controller, Led guidance, and MPC GUI
## Motivation
* to extend the gokart infrastructure to a wider audience
* to create a baseline solution in "AIDO style" (docker and so on) for the gokart. This will be the first stepping stone for an AIDO competition with gokarts in 2/3 years.
* to create an infrastructure also for research in the area of compositionality of learning and similar.

You will need to work a bit with everyone (mainly Alessandro for the zauron, Enrico and Giole for MPC related control, @datahaki for everything), so good team spirit and use of git are a must

## Milestone 1
Write a client process that translates a joystick configuration into actuator commands and sends them to the gokart via a defined protocol (yet to be defined). Show that you can control the gokart by joystick.

## Milestone 2
Extend the client process to listen to IMU and wheel odometry messages and create a position estimate of the moving gokart in real-time.

## Background
The original clothoid appoximation scheme by [2019 Reif] performs all computations in the complex plane. The resulting clothoids are invariant under addition of multiples of 2π to the angles of the control points. For example, the clothoid between the two points (x = 0, y = 0, α = 0) and (1, 0, 0) is identical to the clothoid generated between (0, 0, 0) and (1, 0, 2 π).

## Task Description
The original scheme involves approximating integrals of complex-valued functions. We have generalized the computations to polar coordinates, to track winding numbers. Our current implementation handles one additional winding compared to the original scheme. Extend the scheme by tracking the winding number in the n-point Gauss Legendre quadrature numeric integration.

## Illustration
![clothoid_comparison](https://user-images.githubusercontent.com/4012178/65841045-b021b080-e31f-11e9-9823-3d4ece4d538e.png)

## References
* [video 1](https://www.youtube.com/watch?v=JZx8_HFGRH4)
* [video 2](https://www.youtube.com/watch?v=s34OrC0N1PE)
* [Approx. Clothoids with Extended Winding Numbers](https://github.com/idsc-frazzoli/retina/files/3568308/20190903_appox_clothoids_with_ext_windings.pdf)
* [Master Thesis JG](https://github.com/idsc-frazzoli/retina/files/3638364/20190916_subdivision-based_clothoids_autonomous_driving.pdf)

## Motivation
Apart from racing purposes, the go-kart is usually considered a ludic device that can be driven by all kind of possible users (children, young people, adults, old people), that are generally characterized by different driving styles and different perception of risks. In this thesis, we want to implement human-based constraints about path/accelerations/collision speed in the pre-existing MPCC strategy, aiming both at ensuring safe trajectories, both at improving driving comfort and fun. As an example, strong accelerations should be penalized when a child is driving; on the contrary, an adult might be more excited by high accelerations and strong braking.

## Tasks
* Definition and implementation of human-constraints in the preexisting MPCC in terms of path/speed/accelerations.
* Definition of suitable cost functions with different aims (driving comfort, safety).
* Introducing the possibility of low-speed collisions with obstacles on the track.
* Providing the user with the authority of controlling the pedals, in a cooperative driving framework.

## Expected outcome
Appropriate documentation of all the experiments showing the ability to turn good theoretical models into working code. Modular and reusable implementation of the tasks.

## References
[Marc Heim Thesis](https://polybox.ethz.ch/index.php/s/cs2QXrVWPLyk8up)
## Motivation
The goal of this semester project is to define and implement a model of the steering column of the go-kart that takes as input the necessary torque to steer the vehicle in the track. In the past, we have not assumed any model but used a simple PID controller to steer. The new model helps to determine the steering torque directly, and is therefore much more suitable for future extensions than the current position controller.

## Tasks
* Literature review of the state of the art for the modeling of the entire steering system: motor, truss-system, front tire.
* Main goal: come up with a model of the steering column;
* Understand the existing implementation: MPC produces steering angle and steering rate as input for the steering column; the PID controller then uses these numbers to command the steering;
* System identification: conceive and carry out experiments for data collection; find parameters for the chosen model;
* Modify the existing MPC implementation to use the new steering model and provide a proof of concept through simulation.
* Slow driving experiments on real hardware; tests that establish robustness.
* Extra: Investigate change in racing lap performance, steering characteristics.

## Expected outcome
* Modular and reusable implementation of the tasks.
* Leave a trail of good documentation behind.

## References
[Marc Heim Thesis](https://polybox.ethz.ch/index.php/s/cs2QXrVWPLyk8up)
[Borrelli’s paper](https://www.tandfonline.com/doi/full/10.1080/00423114.2017.1337915) - steering column
[Antonia Mosberger Thesis](https://github.com/idsc-frazzoli/retina/files/3568527/20190828_advanced_driver_assistance_systems_on_a_go-kart.pdf) - power steering
## Background

The brake on the autonomous go-kart consist of the built-in hydraulic braking system behind a pedal that can be actuated by the human driver or alternatively, by a software controlled linear motor. One shortcoming of the braking system is that the brake cannot be actuated on the left and right rear wheel tire individually.

Prior investigations of the braking system have established response time, and braking deceleration at locked tires. Prior control strategies were a simple anti-lock logic.

## Task Description

* carry out experiments that investigate
    * the braking effect under different track conditions
    * temperature rise of linmot
* enhance the existing anti-lock braking by incorporating the rear-wheel motors (and wheel odometry)
* develop a model for the brake and braking effect of the go-kart for use in a MPC
* develop and test MPC-based deceleration with performance guarantees that does not violate constraints on operating temperature and anti-lock characteristics

## References

* [Emergency Braking](https://github.com/idsc-frazzoli/retina/files/1801717/20180217_emergency_braking.pdf)
* [Anti-lock Braking](https://github.com/idsc-frazzoli/retina/files/3568527/20190828_advanced_driver_assistance_systems_on_a_go-kart.pdf)
## Background

While the go-kart is manually driven around a track, the `TrackReconModule` classifies the space into _free_ or _occupied_. After one loop around the track has been completed, the module automatically extracts the lane boundaries. When the software is closed, the information about the track is discarded.

## Task Description

* store the coordinates of the track waypoints
* allow to reset the track waypoints in the GUI

#### Visualization of Track
![image](https://user-images.githubusercontent.com/4012178/64968725-f0eee380-d8a2-11e9-88bb-fab4fbefe255.png)

## Background

Post-processing has shown that while the state estimation is reliable, the mapping of the lidar points is not straightforward. In rapid turns there is an angular deviation that likely stems from a twist of the lidar mount.

## Task Description

* write an offline pipeline to determine the actual lidar pose with respect to the gokart coordinate system
* quantify the amplitude of the mismatch of pose and lidar position
* introduce a live-estimation of the lidar position with respect to the gokart coordinate system
* make use of the new functionality to enhance the obstacle mapping

#### Visualization of Twist:
![image](https://user-images.githubusercontent.com/4012178/64967853-7f626580-d8a1-11e9-8b28-1b9a200fcc5e.png)

## References
* [video](https://www.youtube.com/watch?v=TZH3MWjp6PE)