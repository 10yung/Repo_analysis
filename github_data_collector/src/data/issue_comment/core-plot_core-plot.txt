I use cathage update core-plot
Checking out core-plot at `47e0af94b4416ed93a6f5b9a58a718e12471502a`

have 1 error 
`framework/Source/CPTLayer.m:344:34: error: no visible @interface for 'UITraitCollection' declares the selector 'performAsCurrentTraitCollection:'
                [traitCollection performAsCurrentTraitCollection: ^{
                 ~~~~~~~~~~~~~~~ ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~`
1 error generated.

---
I can update core-plot release 2.3 with commit `a47d8e1feaffb92585ccdd7c93447b5498105b59`

Any help would be appreciated.

Thanks in Advance.


Why is that we need to create multiple instances of the CPTBarplot to have multiple bars at the same location? 

It would be great to have support for the multidimensional array as a data source to the barPlot.

Along with this, there must be a provision to toggle between `stacked` and `grouped` flags to maintain the grouping of the bar plots and works as below:

stacked: plots will be stacked upon each other at each bar location
grouped: plots will be rendered adjacent to each other center aligned to the bar location.

I get the following when trying to build the framework with the latest commit (ba05b045) from the master branch:

/Users/Andy/Dropbox/Developer/core_plot/framework/Source/CPTTradingRangePlot.m:1226:33: error: implicit conversion from nullable pointer 'NSNumber * _Nullable' to non-nullable pointer type 'ObjectType _Nonnull' (aka 'id') [-Werror,-Wnullable-to-nonnull-conversion]
    CPTNumberArray *yValues = @[[self cachedNumberForField:CPTTradingRangePlotFieldOpen recordIndex:idx],
                                ^
/Users/Andy/Dropbox/Developer/core_plot/framework/Source/CPTTradingRangePlot.m:1227:33: error: implicit conversion from nullable pointer 'NSNumber * _Nullable' to non-nullable pointer type 'ObjectType _Nonnull' (aka 'id') [-Werror,-Wnullable-to-nonnull-conversion]
                                [self cachedNumberForField:CPTTradingRangePlotFieldClose recordIndex:idx],
                                ^
/Users/Andy/Dropbox/Developer/core_plot/framework/Source/CPTTradingRangePlot.m:1228:33: error: implicit conversion from nullable pointer 'NSNumber * _Nullable' to non-nullable pointer type 'ObjectType _Nonnull' (aka 'id') [-Werror,-Wnullable-to-nonnull-conversion]
                                [self cachedNumberForField:CPTTradingRangePlotFieldHigh recordIndex:idx],
                                ^
/Users/Andy/Dropbox/Developer/core_plot/framework/Source/CPTTradingRangePlot.m:1229:33: error: implicit conversion from nullable pointer 'NSNumber * _Nullable' to non-nullable pointer type 'ObjectType _Nonnull' (aka 'id') [-Werror,-Wnullable-to-nonnull-conversion]
                                [self cachedNumberForField:CPTTradingRangePlotFieldLow recordIndex:idx]];
                                ^

I am using CorePlot on macOS, and I implemented graph printing. For that, I need to access the `printRect` property of `CPTGraphHostingView`. It compiles and works fine, but Xcode always shows me the error `Property 'printRect' not found on object of type 'CPTGraphHostingView *'` when it is not compiling. It flags the error on the line
      `self.myCPTView.printRect = thePrintRect;`
Xcode even finds `printRect` when I select "Jump To Definition", but still complains.

I added a similar line to `PlotGalleryController.m` in the Plot Gallery example project where `CPTGraphHostingView` is used and Xcode shows the same error.

Is there a way to silence this?
使用coreplot如何让图跳到某一个index  是哪个方法还是属性可以设置么 help
Hi,

I am using[ Google Speech api](https://github.com/GoogleCloudPlatform/ios-docs-samples/tree/master/speech/Swift/Speech-gRPC-Streaming) in Swift project and with core-plot it results in cyclic dependency. 

<img width="345" alt="screenshot at dec 27 20-38-51" src="https://user-images.githubusercontent.com/31757357/34401810-9f09042e-ebc3-11e7-9e76-297755e075c5.png">

@eskroch Could you please help me with this? It can be easily reproduced by installing Google speech and Core-plot via Cocoapods.

compile issues in xcode 9
Hi all,

I have found differences in behaviour between High Sierra and earlier versions. I am able to place and view the legend on a scatter plot in macOS Sierra or earlier but when in macOS High Sierra I cannot see the legend. 

Is this a known issue? Am I doing something wrong?

Let me know if you need something to check this.

Thanks
For example, I has chart data:

```objective-c
self.chartData = @[@{@"x": @0, @"y": @3},
                   @{@"x": @1, @"y": @3},
                   @{@"x": @2, @"y": @2},
                   @{@"x": @3, @"y": @8},
                   @{@"x": @4, @"y": @6},
                   @{@"x": @5, @"y": @9}];
```

and set the xRange:
```objective-c
[plotSpace setXRange:[CPTPlotRange plotRangeWithLocation:[NSNumber numberWithInt:0] length:[NSNumber numberWithInt:5]]];
```

The first and the last plot symbol will be cut off.

There are any way to set padding from axises to have more space to draw symbols. Or any way to prevent plot symbol to be cut off.

I don't want to set xRange to [-1 : 6]
```
CPTXYGraph *newGraph = [[CPTXYGraph alloc] initWithFrame:CGRectZero];

CPTTheme *theme      = [CPTTheme themeNamed:kCPTDarkGradientTheme];
[newGraph applyTheme:theme];
self.graph = newGraph;
self.hostView.hostedGraph = newGraph;

newGraph.plotAreaFrame.paddingTop   = 10.0;
newGraph.plotAreaFrame.paddingBottom   = 30.0;
newGraph.plotAreaFrame.paddingLeft   = 40.0;
newGraph.plotAreaFrame.paddingRight  = 10.0;

CPTXYPlotSpace *plotSpace = (CPTXYPlotSpace *)newGraph.defaultPlotSpace;
    plotSpace.xRange = [CPTPlotRange plotRangeWithLocation:@(1.0) length:[NSNumber numberWithUnsignedInteger:[dataArray count]-1]];
    plotSpace.yRange = [CPTPlotRange plotRangeWithLocation:@0.0 length:@102.0];
    plotSpace.allowsUserInteraction = YES;

CPTXYAxisSet *axisSet = (CPTXYAxisSet *)newGraph.axisSet;
    CPTXYAxis *x          = axisSet.xAxis;
    //x.majorIntervalLength   = @1;
    x.majorIntervalLength   = [NSNumber numberWithInt:numberOfIntervalsX];
    x.orthogonalPosition    = @(0);
    x.minorTicksPerInterval = 0;
    x.labelOffset  = 0;

    CPTXYAxis *y = axisSet.yAxis;
    y.majorIntervalLength   = @5;
    y.minorTicksPerInterval = 0;
    y.orthogonalPosition    = @(1.0);
    y.labelOffset  = 0.0;

CPTScatterPlot *dataSourceLinePlot = [[CPTScatterPlot alloc] init];
    CPTMutableLineStyle *lineStyle = [dataSourceLinePlot.dataLineStyle mutableCopy];
    lineStyle.lineWidth              = 2.;
    lineStyle.lineColor              = [CPTColor greenColor];
    dataSourceLinePlot.dataLineStyle = lineStyle;


    dataSourceLinePlot.dataSource = self;
    [newGraph addPlot:dataSourceLinePlot];
```
I was expecting that the hover/ click to see values would be a default behavior but looks it is not. I have tried searching the forums but no luck. I am assuming it would be really straight forward. Not sure if I am missing something