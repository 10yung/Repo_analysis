
# Problem description

Dotjs stopped working with Chrome 58. Chrome will no longer accept a certificate without `subjectAltName` and will display this error instead:

> Attackers might be trying to steal your information from **localhost** (for example, passwords, messages or credit cards). NET::ERR_CERT_COMMON_NAME_INVALID
>
> This server could not prove that it is **localhost**; its security certificate is from **[missing_subjectAltName]**. This may be caused by a misconfiguration or an attacker intercepting your connection.

For the announcement, see https://groups.google.com/a/chromium.org/forum/#!msg/security-dev/IGT2fLJrAeo/csf_1Rh1AwAJ

# How the valid self-signed certificate was generated

For future reference, the openssl command used to generate the certificate was based on [this StackOverflow post](http://stackoverflow.com/questions/10175812/how-to-create-a-self-signed-certificate-with-openssl/27931596#27931596):

```
openssl req -config localhost.conf -new -x509 -sha256 -newkey rsa:2048 -nodes \
    -keyout localhost.key.pem -days 36500 -out localhost.cert.pem
```

```
# localhost.conf

[ req ]
default_bits        = 2048
default_keyfile     = server-key.pem
distinguished_name  = subject
req_extensions      = req_ext
x509_extensions     = x509_ext
string_mask         = utf8only

[ subject ]
countryName         = Country Name (2 letter code)
countryName_default     = US
stateOrProvinceName     = State or Province Name (full name)
stateOrProvinceName_default = NY
localityName            = Locality Name (eg, city)
localityName_default        = Localhost
organizationName         = Organization Name (eg, company)
organizationName_default    = Localhost
commonName          = Common Name (e.g. server FQDN or YOUR name)
commonName_default      = Localhost
emailAddress            = Email Address
emailAddress_default        = localhost@example.com

[ x509_ext ]

subjectKeyIdentifier        = hash
authorityKeyIdentifier  = keyid,issuer
basicConstraints        = CA:FALSE
keyUsage            = digitalSignature, keyEncipherment
subjectAltName          = @alternate_names
nsComment           = "OpenSSL Generated Certificate"

[ req_ext ]
subjectKeyIdentifier        = hash
basicConstraints        = CA:FALSE
keyUsage            = digitalSignature, keyEncipherment
subjectAltName          = @alternate_names
nsComment           = "OpenSSL Generated Certificate"

[ alternate_names ]
DNS.1 = localhost
DNS.2 = 127.0.0.1
DNS.3 = ::1
```
I have installed. but http://localhost:3131/ is not working 

This site canâ€™t be reached

localhost refused to connect.
Try:
Reloading the page
Checking the connection
Checking the proxy and the firewall




I like to keep my connections v6 only and I don't see any downside in this so I changed the bind address of the web server from 127.0.0.1 to localhost.

Is there any way to serve other files from the server? Like 3rd party libs or default css files?

```
10/21/14 6:12:54.420 PM com.apple.xpc.launchd[1]: (com.github.dotjs) This service is defined to be constantly running and is inherently inefficient.
```

When `~/.js` is a symlink:

```
Internal Server Error

No such file or directory - getcwd
WEBrick/1.3.1 (Ruby/2.0.0/2014-05-08) OpenSSL/0.9.8za at localhost:3131

```
