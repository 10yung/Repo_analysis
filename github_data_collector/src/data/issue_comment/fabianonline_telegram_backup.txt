I'm getting a lot of 0 bytes *.jpg.downloading files when running TBJAVA lately, plus a FLOOD_5 error everytime I download a single piece of media.
Did they change something server-side?
TYIA
P. D... SPPP.P.PException in thread "RxComputationThreadPool-3" java.lang.IllegalStateException: Exception thrown on Scheduler.Worker thread. Add `onError` handling.
        at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:60)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: rx.exceptions.OnErrorNotImplementedException: An existing connection was forcibly closed by the remote host
        at rx.Observable$26.onError(Observable.java:7881)
        at rx.observers.SafeSubscriber._onError(SafeSubscriber.java:159)
        at rx.observers.SafeSubscriber.onError(SafeSubscriber.java:120)
        at rx.internal.operators.OperatorDoOnEach$1.onError(OperatorDoOnEach.java:71)
        at rx.internal.operators.OperatorDoOnEach$1.onError(OperatorDoOnEach.java:71)
        at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.pollQueue(OperatorObserveOn.java:191)
        at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$2.call(OperatorObserveOn.java:162)
        at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
        ... 7 more
Caused by: java.io.IOException: An existing connection was forcibly closed by the remote host
        at sun.nio.ch.SocketDispatcher.read0(Native Method)
        at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
        at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
        at sun.nio.ch.IOUtil.read(IOUtil.java:197)
        at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
        at com.github.badoualy.telegram.mtproto.transport.MTProtoTcpConnection.readBytes(MTProtoTcpConnection.kt:141)
        at com.github.badoualy.telegram.mtproto.transport.MTProtoTcpConnection.readBytes$default(MTProtoTcpConnection.kt:134)
        at com.github.badoualy.telegram.mtproto.transport.MTProtoTcpConnection.readMessage(MTProtoTcpConnection.kt:65)
        at com.github.badoualy.telegram.mtproto.MTProtoWatchdog.readMessage(MTProtoWatchdog.kt:94)
        at com.github.badoualy.telegram.mtproto.MTProtoWatchdog.access$readMessage(MTProtoWatchdog.kt:18)
        at com.github.badoualy.telegram.mtproto.MTProtoWatchdog$run$2$1$1.run(MTProtoWatchdog.kt:56)
        ... 3 more
Exception in thread "RxComputationThreadPool-2" java.lang.IllegalStateException: Exception thrown on Scheduler.Worker thread. Add `onError` handling.
        at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:60)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: rx.exceptions.OnErrorNotImplementedException: An existing connection was forcibly closed by the remote host
        at rx.Observable$26.onError(Observable.java:7881)
        at rx.observers.SafeSubscriber._onError(SafeSubscriber.java:159)
        at rx.observers.SafeSubscriber.onError(SafeSubscriber.java:120)
        at rx.internal.operators.OperatorDoOnEach$1.onError(OperatorDoOnEach.java:71)
        at rx.internal.operators.OperatorDoOnEach$1.onError(OperatorDoOnEach.java:71)
        at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber.pollQueue(OperatorObserveOn.java:191)
        at rx.internal.operators.OperatorObserveOn$ObserveOnSubscriber$2.call(OperatorObserveOn.java:162)
        at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
        ... 7 more
Caused by: java.io.IOException: An existing connection was forcibly closed by the remote host
        at sun.nio.ch.SocketDispatcher.read0(Native Method)
        at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
        at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
        at sun.nio.ch.IOUtil.read(IOUtil.java:197)
        at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
        at com.github.badoualy.telegram.mtproto.transport.MTProtoTcpConnection.readBytes(MTProtoTcpConnection.kt:141)
        at com.github.badoualy.telegram.mtproto.transport.MTProtoTcpConnection.readBytes$default(MTProtoTcpConnection.kt:134)
        at com.github.badoualy.telegram.mtproto.transport.MTProtoTcpConnection.readMessage(MTProtoTcpConnection.kt:65)
        at com.github.badoualy.telegram.mtproto.MTProtoWatchdog.readMessage(MTProtoWatchdog.kt:94)
        at com.github.badoualy.telegram.mtproto.MTProtoWatchdog.access$readMessage(MTProtoWatchdog.kt:18)
        at com.github.badoualy.telegram.mtproto.MTProtoWatchdog$run$2$1$1.run(MTProtoWatchdog.kt:56)
        ... 3 more
These filters are probably too ad-hoc for including to upstream, but anyway, you may consider it.
When you link a picture you can see directly from the chat without opening it. As of my understanding they are stored within the chat because even after the picture is deleted I can still see it.
Is there a way to download them with the tool?
The idea is to add a --filter  parameter that allows you to choose whether a Filetype is going to be backuped or ignored.

So that you can download only Documents type, Images type, Video Type or a combination of those but ignore the rest. 

The program detects the filetypes as long as I have seen in the debug logs. Is that really possible nowadays ? (I have started using it very recently and perhaps have missed it) 

Thanks for your job, really useful and necessary. 
Because now it's a [Kotlin](https://en.wikipedia.org/wiki/Kotlin_(programming_language)) app :v
video is not downloaded 
and there should be an option to download any specific chat
It would be great if telegram_backup could have an option to use the real file name (e.g. greatFile.mp3) instead of being named after the ID of the message.
just works
time to update
While downloading the media the tool crashed with this error.
It crashed because it tried to create a file with a character in it that's banned from being used in filenames on windows. See here [https://stackoverflow.com/questions/1976007/what-characters-are-forbidden-in-windows-and-linux-directory-names](https://stackoverflow.com/questions/1976007/what-characters-are-forbidden-in-windows-and-linux-directory-names) for more info.

```
An error occured!
java.io.FileNotFoundException: \<REDACTED>\files\<REDACTED>?something.downloading (The syntax of the file, volume, or directory is not correct.)
        at java.io.FileOutputStream.open0(Native Method)
        at java.io.FileOutputStream.open(FileOutputStream.java:270)
        at java.io.FileOutputStream.<init>(FileOutputStream.java:213)
        at java.io.FileOutputStream.<init>(FileOutputStream.java:133)
        at de.fabianonline.telegram_backup.DownloadManager$Companion.downloadFileFromDc(DownloadManager.kt:425)
        at de.fabianonline.telegram_backup.DownloadManager$Companion.downloadFile(DownloadManager.kt:403)
        at de.fabianonline.telegram_backup.mediafilemanager.DocumentFileManager.download(DocumentFileManager.kt:102)
        at de.fabianonline.telegram_backup.DownloadManager._downloadMedia(DownloadManager.kt:367)
        at de.fabianonline.telegram_backup.DownloadManager.downloadMedia(DownloadManager.kt:317)
        at de.fabianonline.telegram_backup.CommandLineController.<init>(CommandLineController.kt:139)
        at de.fabianonline.telegram_backup.CommandLineRunnerKt.main(CommandLineRunner.kt:41)

----- EXIT -----
```
Let me know if you need etra information or help with this. :)