choosealicence.com (note the second "c" in "licence") that redirects to choosealicense.com has the certificate for github.com, which brings up a warning screen
First, I really love this page: [https://choosealicense.com/appendix](https://choosealicense.com/appendix)

One way it can be improved is to include some "yes/no/undefined" check-boxes along the top of the table.
When you eg: check the box above: "Same License" it brings all "same licenses" to the top & grays out all other licenses.
* If you check several boxes, only those licenses with ALL checked conditions are highlighted.
* Below those (partially grayed out, or something) are licenses that partially match the check-boxes (in decreasing number of matches).
* And below that too is the remaining licenses, totally grayed out.

That would make this page awesome to use.
Thanks & hope this helps.
please mention requirements before running bootstrap... on my Fedora 31 i had to install

> sudo dnf install zlib ruby-devel zlib-devel


thanks
Add Free Art License 1.3

Related Issue: #314 
In order to make your data more reusable, please generate the file shown in the title.

"FSF License Metadata API" is defined in the following site.
It is a convenient data format that can be reused.
https://wking.github.io/fsf-api/licenses-full.json

That data format can associate the license identifiers with the catalog name and "tags".
For example,
```
 {"licenses":{
    "apsl2": { /* fileName of choosealicense.com/_licenses/apsl2.txt  */
       "name": "Apple Public Source License",
         "identifiers": {
                "spdx": ["APSL-2.0"],
                "OSI" : ["Apple Public Source License"],
                "FSF" : ["FSF/apsl"]
                ]
            },
        "tags": [
		"libre"  /* FSF information*/,
                "patent-use" /* choosealicense information */
        ]
   }
 }
```
Please have a look at the data I made for a trial.
https://github.com/reversi-fun/license_doc_similality1/blob/master/config/choosealicense-attrs.json

From this json data and the similarity of the license text, you can deduce the characteristics of the unknown license.

For example, SPDX / ODC-by-1.0 is not included in choosealicense, but it can be inferred that it has characteristics similar to SPDX / ODbl-1.0.

Please look at the attached figure.
https://github.com/reversi-fun/license_doc_similality1/blob/master/data/lic_graph.sfdp.svg
![license-odc-by-ODbl](https://user-images.githubusercontent.com/2231549/59867630-ad7ef900-93c9-11e9-8848-0c3a33fbce9f.png)

Hello! Thank you for making this website. It is such a great resource! The only thing that I feel is missing is some information on the compliance requirements. It is really, really difficult to find information on what is required of you when using or modifying a particular open source project. For example, what is required of you if you choose to use some code from a project which uses GPLv2? I recently learned that you MUST offer to mail a physical CD of the source code to anyone who requests it. It is only in GPLv3 that you can offer the source code over the internet. I also wonder about what the compliance requirements are of more permissive licenses like MIT. Is it enough to include a copy of the license in the source code, or do you need to mention somewhere publicly that you are using these projects in order to give public attribution? It would be really helpful to know this information for each of the different licenses that are available.
As a new user of the site, it would be very helpful if there was a way to limit the list of licenses in the appendix based on license attributes (permissions/conditions/limitations), so that it's easier to compare all of the licenses that fit a user's criteria.

For example, if I wanted to see only licenses that had both the "disclose-source" condition AND NOT the "trademark-use" limitation, it would be great if there was a way to check a couple boxes and view only the licenses that fit that search.

I can see that this site is meant to simplify the process of choosing a license by keeping things very streamlined (which I really have appreciated). I also am not familiar enough with the framework for this site to know whether this feature is feasible (otherwise I would go ahead and start working on it).
We should have a test that each license text in `_licenses` is the same as the plain text license in the SPDX collection to automate the requirement described at https://github.com/github/choosealicense.com/blob/gh-pages/CONTRIBUTING.md#adding-a-license

> The text of the license should match the corresponding text found in [spdx/license-list-data](https://github.com/spdx/license-list-data/blob/master/text/). If there are errors there, please fix them in [spdx/license-list-XML](https://github.com/spdx/license-list-XML) (from which the plain text version is generated) so as to minimize license text variation and make it easier for choosealicense.com to eventually consume license texts directly from SPDX.

The test could clone spdx/license-list-data and compare each license we have cataloged in this project. Many existing licenses would probably have to be marked as expected failures due to bugs in SPDX output and discrepancies in how this project has cataloged some licenses. But we should address upfront for any new license cataloged here, and continue to chip away at the existing inconsistencies.
I would totally use this license for all of my projects if it was recognized by GitHub. It is OSI approved and provides a patent grant similar (equivilent?) to the Apache-2.0 license. It is the best of what the MIT and Apache-2.0 licenses have to offer.

This license should not be confused with the whole Facebookâ€“React license debacle (https://github.com/facebook/react/commit/dcf415c2b91ce52fd5d4dd02b70875ba9d33290f). In that case, Facebook licensed React under the classic BSD 2-Clause license but included a patent grant in a seperate PATENTS file which had a termination clause written in a rather problematic manner.

A [Github code search](https://github.com/search?q=BSD+%2B+Patent+filename%3ALICENSE&type=Code) reveals a lot of hits, but I'm sceptical that they are all for this license. I would also be interested to see how many projects use the BSD 2-Clause license in addition to a seperate patent grant in a PATENTS file, as these are the projects that would benefit the most from this license.
choosealicense.org has HSTS due to #483.

It would be great to go all the way and preload HSTS: https://hstspreload.org/?domain=choosealicense.org

Steps would be:

- [x] Serve an HSTS header with a value of `Strict-Transport-Security: max-age=63072000; includeSubDomains; preload`
- [ ] Make sure `choosealicense.org` can be accessed from curl/golang? (this times out from HQ).
- [ ] Submit to https://hstspreload.org/?domain=choosealicense.org

@parkr: could you help me find where the HSTS header served by choosealicense.org is configured?