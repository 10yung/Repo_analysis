**EDITED**

I have found [PinView](https://github.com/davemorrissey/subsampling-scale-image-view/blob/master/sample/src/main/java/com/davemorrissey/labs/subscaleview/test/extension/views/PinView.java), and its works perfectly.
Hi, I'm just wondering if you could implement caching in this library and 125% zoom level.
Thanks for your time.
Last commit was over 1+ year ago and there are a lot of open issues and PRs. Asking for visibility from the community
*Please provide as much of the following information as possible. Please do not raise issues to ask for help developing your app.*

### Expected behaviour

### Actual behaviour

### Steps to reproduce

(Include your setup code, and where relevant, your layout XML)

### Affected devices

(Specific devices, screen densities, SDK versions)

### Affected images

(Attach images you have problems with)

*Please provide as much of the following information as possible. Please do not raise issues to ask for help developing your app.*

### Expected behaviour

### Actual behaviour

### Steps to reproduce

(Include your setup code, and where relevant, your layout XML)

### Affected devices

(Specific devices, screen densities, SDK versions)

### Affected images

(Attach images you have problems with)


Fixes #489

Makes SkiaImageRegionDecoder throw an Exception from Java when it receives a null InputStream from the contentResolver.

A null InputStream passed into the BitmapRegionDecoder causes it to crash in android's native code which brings down the entire app. Throwing an Exception in java land is the safer option.
### Expected behaviour
Not crashing in native code, my least favourite type of crash.

### Actual behaviour
Crashing and killing the app. Here's a blob of native stack.

```
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531] JNI DETECTED ERROR IN APPLICATION: can't call int java.io.InputStream.read(byte[], int, int) on null object
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]     in call to CallIntMethodV
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]     from android.graphics.BitmapRegionDecoder android.graphics.BitmapRegionDecoder.nativeNewInstance(java.io.InputStream, byte[], boolean)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531] "AsyncTask #2" prio=5 tid=29 Runnable
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   | group="main" sCount=0 dsCount=0 flags=0 obj=0x131a64f0 self=0x85aaf400
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   | sysTid=20997 nice=10 cgrp=default sched=0/0 handle=0x85a7f970
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   | state=R schedstat=( 4970616 12676385 10 ) utm=0 stm=0 core=0 HZ=100
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   | stack=0x8597d000-0x8597f000 stackSize=1038KB
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   | held mutexes= "mutator lock"(shared held)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #00 pc 002e8097  /system/lib/libart.so (art::DumpNativeStack(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, int, BacktraceMap*, char const*, art::ArtMethod*, void*)+130)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #01 pc 00378ec1  /system/lib/libart.so (art::Thread::DumpStack(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, bool, BacktraceMap*, bool) const+204)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #02 pc 003755f7  /system/lib/libart.so (art::Thread::Dump(std::__1::basic_ostream<char, std::__1::char_traits<char>>&, bool, BacktraceMap*, bool) const+34)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #03 pc 0024d50d  /system/lib/libart.so (art::JavaVMExt::JniAbort(char const*, char const*)+720)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #04 pc 0024d87b  /system/lib/libart.so (art::JavaVMExt::JniAbortV(char const*, char const*, std::__va_list)+58)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #05 pc 000d5bd3  /system/lib/libart.so (art::ScopedCheck::AbortF(char const*, ...)+42)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #06 pc 000d8985  /system/lib/libart.so (art::ScopedCheck::CheckMethodAndSig(art::ScopedObjectAccess&, _jobject*, _jclass*, _jmethodID*, art::Primitive::Type, art::InvokeType)+1124)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #07 pc 000d7779  /system/lib/libart.so (art::CheckJNI::CallMethodV(char const*, _JNIEnv*, _jobject*, _jclass*, _jmethodID*, std::__va_list, art::Primitive::Type, art::InvokeType)+508)
11-26 23:09:28.972 20941 20997 F zygote  : runtime.cc:531]   native: #08 pc 000c91df  /system/lib/libart.so (art::CheckJNI::CallIntMethodV(_JNIEnv*, _jobject*, _jmethodID*, std::__va_list)+42)
11-26 23:09:28.973 20941 20997 F zygote  : runtime.cc:531]   native: #09 pc 000b2fa3  /system/lib/libandroid_runtime.so (???)
11-26 23:09:28.973 20941 20997 F zygote  : runtime.cc:531]   native: #10 pc 000c8fd1  /system/lib/libandroid_runtime.so (???)
11-26 23:09:28.973 20941 20997 F zygote  : runtime.cc:531]   native: #11 pc 000c8d15  /system/lib/libandroid_runtime.so (CopyJavaInputStream(_JNIEnv*, _jobject*, _jbyteArray*)+104)
11-26 23:09:28.973 20941 20997 F zygote  : runtime.cc:531]   native: #12 pc 00100a6b  /system/lib/libandroid_runtime.so (???)
11-26 23:09:28.973 20941 20997 F zygote  : runtime.cc:531]   native: #13 pc 001ae9b7  /system/framework/arm/boot-framework.oat (Java_android_graphics_BitmapRegionDecoder_nativeNewInstance__Ljava_io_InputStream_2_3BZ+142)
11-26 23:09:28.979 20941 20997 F zygote  : runtime.cc:531]   at android.graphics.BitmapRegionDecoder.nativeNewInstance(Native method)
11-26 23:09:28.981 20941 20997 F zygote  : runtime.cc:531]   at android.graphics.BitmapRegionDecoder.newInstance(BitmapRegionDecoder.java:124)
11-26 23:09:28.981 20941 20997 F zygote  : runtime.cc:531]   at com.davemorrissey.labs.subscaleview.decoder.SkiaImageRegionDecoder.init(SkiaImageRegionDecoder.java:102)
11-26 23:09:28.981 20941 20997 F zygote  : runtime.cc:531]   at com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView$TilesInitTask.doInBackground(SubsamplingScaleImageView.java:1559)
11-26 23:09:28.981 20941 20997 F zygote  : runtime.cc:531]   at com.davemorrissey.labs.subscaleview.SubsamplingScaleImageView$TilesInitTask.doInBackground(SubsamplingScaleImageView.java:1534)
11-26 23:09:28.982 20941 20997 F zygote  : runtime.cc:531]   at android.os.AsyncTask$2.call(AsyncTask.java:333)
11-26 23:09:28.983 20941 20997 F zygote  : runtime.cc:531]   at java.util.concurrent.FutureTask.run(FutureTask.java:266)
11-26 23:09:28.983 20941 20997 F zygote  : runtime.cc:531]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
11-26 23:09:28.984 20941 20997 F zygote  : runtime.cc:531]   at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
11-26 23:09:28.985 20941 20997 F zygote  : runtime.cc:531]   at java.lang.Thread.run(Thread.java:764)

```

### Steps to reproduce
You need a ContentProvider that will cause ContentResolver.openInputStream(uri) to return null. Possibly just ContentProvider.openFile(Uri uri, String mode) returning null might do it.

In SkiaImageRegionDecoder.java, checking the input stream before
`
    decoder = BitmapRegionDecoder.newInstance(inputStream, false);
`
eg. 
`
    if (inputStream == null) {
        throw new NullPointerException("some useful message");
    }
    decoder = BitmapRegionDecoder.newInstance(inputStream, false);
`
sorts it.

I'll send a pull request.

up grade gradle plugin version,modify AndroidManifest.xml to AS style.
Expected behaviour
Correct image with correct orientation

Actual behaviour
Showing image with the wrong orientation.
Some rotated to 360 degrees while some rotated to 90 degrees.

Affected devices
All of it

Affected images
some rotated images from the camera.
The image resides in a folder.

tried the following code but no use
`
imageView.orientation = SubsamplingScaleImageView.ORIENTATION_USE_EXIF		imageView.setImage(ImageSource.uri(FileProvider.getUriForFile (this.context!!, "com.app.appname.FileProvider", File(path))))
`
learning