In cases when Facebook MySQL Server is compiled from a source tree that was not
retrieved from git (or just does not have the '.git' directory) MYSQL_GITHASH and
MYSQL_GITDATE CMake options can be defined to skip some calls to git
executable that identifies current revision.
This used to work fine until RocksDB storage engine code was merged. Now git
executable is unconditionally executed to determine revision of the rocksdb
submodule.
Fixed by passing "--rocksdb_githash=${ROCKSDB_GITHASH}" and
"--rocksdb_gitdate=${ROCKSDB_GITDATE})" to "githash.pl" script as in 5.6.35.

Reference patch: facebook/mysql-5.6@38c5ced
Summary:
The COM_RESET_CONNECTION command is not currently respecting
the CLIENT_INTERACTIVE flag. The CLIENT_INTERACTIVE flag is tied to the
connection, rather than the session. When COM_RESET_CONNECTION resets
session state, it's expected that wait_timeout will be set to interactive_timeout when CLIENT_INTERACTIVE is set.

Reference Patch: facebook/mysql-5.6@5de8b68

Originally Reviewed By: jkedgar

8.0 porting notes:
* The `init ()` call in the `THD` constructor is delayed until client capabilities are set
Summary:
mrr_iter must be initialized before using in skip_record scenario. otherwise, mysqld will crash during [bka_range_seq_skip_record](https://github.com/facebook/mysql-5.6/blob/42a5444d52f264682c7805bf8117dd884095c476/sql/sql_join_buffer.cc#L2278)(rseq point to a null)
```
call stack:
#0 bka_range_seq_skip_record
#1 myrocks::ha_rocksdb::multi_range_read_next(https://github.com/facebook/mysql-5.6/blob/fb-mysql-5.6.35/storage/rocksdb/ha_rocksdb.cc#L15675)
#2 JOIN_CACHE_BKA::join_matching_records
#3 JOIN_CACHE::join_records 
```
Test Plan:
MTR

Reviewers:

Subscribers:

Tasks:

Tags:
Summary:
Fix 1:
If the following sequence of events happen, then binlog trimming will leave some
extraneous gtid in the binlog
1. Binlog file is rotated
2. A few transactions successfully flushes to binlog file, but not yet commited
to engine
3. mysqld crashes

On crash recovery, engine will point to the position in the old binlog file.
Which means extraneous trxs in the current binlog file will not be trimmed and
gtid_executed will contain these trxs. This is not an ideal scenario.

The diff fixes it by taking into account the file name stored in engine and the
current binlog file name being recovered.
1. If both file names are the same, then trimming is based solely on the
position.
2. If file names are different and the file stored in engine is older (as
noticed by the index of the file name), then we trim the current binlog file to
the begining position of the first gtid event i.e all transactions in the
current binlog file are trimmed.

Note that this does not handle the case of file names wrapping around and this
can be a rare scenario which can be fixed by instance replacements.

Fix 2:
Binlog rotation is considered a sync point for existing transactions to flush.
This is achieved by making binlog rotation block until all prepared
transactions are committed. However, the trxs that do not generate XID are not
considered 'prepared' and hence binlog rotation is not blocked by such
transactions.This could cause some extraneous GTID to be present in a
previously rotated binlog file which never got committed. This diff fixes the
problem by making binlog rotation to block on transactions without xid.

Reference Patch: https://github.com/facebook/mysql-5.6/commit/ec039b1a46a

Originally Reviewed By: abhinav04sharma

fbshipit-source-id: c4d98f06025
https://github.com/facebook/mysql-5.6/commit/e9f1b50940b introduced changes that require newer versions of liblz4 (1.8.0) and libzstd (1.4.0).
This causes compilation errors with older libs e.g. for Ubuntu Bionic which has liblz4-dev 1.7.1 and libzstd-dev 1.3.3.
More information at https://jira.percona.com/browse/FB8-242

This patch solves the issues with the following changes:
1. Check minimal required version of liblz4 (1.8.0) and libzstd (1.4.0)
2. Update bundled liblz4 to 1.8.0
3. Add bundled libzstd 1.4.0
Summary:
The time information from 'show processlist' and in information_schema.processlist is at the granularity of a second
This diff provides an override (system variable) to display the time at the granularity of a micro-second (e.g, 0.001234)
The variable is session settable

Reference patch: https://github.com/facebook/mysql-5.6/commit/b840ad76249

fbshipit-source-id: 7d58e50e076

**TO DO: Please re-record `mysql-test/t/all_persisted_variables.test` with
`let $total_persistent_vars=XXX + 1;` (a new variable).**
Summary: Change the buffer size to 10M so it can show the full stats.

fbshipit-source-id: d9133dca6b5
Summary:
The innodb_stats_on_metadata is not correct for partitioned tables.

For partitioned tables, the `info(HA_STATUS_CONST)` call is only done on the largest partition while for most other flags including `HA_STATUS_VARIABLE`, the call is done for all partitions in a loop.

The issue is that `innodb_stats_on_metadata` implicitly converts `info(HA_STATUS_VARIABLE)` calls into `info(HA_STATUS_VARIABLE | HA_STATUS_CONST)` calls. Since this is done in a loop, it means that we're calculating index stats for just the last partition, giving inaccurate statistics.

There's no good way to fix it, because we either need InnoDB to understand partitions, or ther other way around. The latter approach was chosen, so `innodb_stats_on_metadata` is made a server session variable, and ha_partition will do the correct thing if it detects the variable is on, and InnoDB tables are used.

Because MySQL 8 has native partitions, this is a not an issue there, as the native partition code has access to both the innodb_stats_on_metadata variable, and the algorithm for processing info for partitioned tables.

Originally Reviewed By: luqun

fbshipit-source-id: cfdeefcf9ae

8.0 porting notes:
As said earlier in the original description, InnoDB in 8.0 has native
partitions. As only the largest partition is used for the rec_per_key
calculation, the issue is already resolved in the 8.0 branch.
Summary: Since it may take some time for smc for propagate new master info, people use read_only_msg_extra to get new master info from old master. However we still have a check for active master info in mysqld. And update active master info may take a few seconds. This might cause a downtime even a new master is kind of ready. Current promote_master command can specifically set new master info during the promotion. It's actually fine to skip the active master info check. For compatibility, let's add a new sys var to pass the active master info check now

Reference Patch: https://github.com/facebook/mysql-5.6/commit/80239b6c7b0

Originally Reviewed By: yoshinorim

fbshipit-source-id: 52b8364284e

**TO DO: Please re-record `mysql-test/t/all_persisted_variables.test` with
`let $total_persistent_vars=XXX + 1;` (a new variable).**
Summary:
If opt_trim_binlog is set, then mysqld could trim the latest binlog file to
match the engine-commited position. This diff makes mysqld copy the binlog file
to tmpdir (as set in sysvar `tmpdir`) for debugging and safety purpose.

Reference Patch: https://github.com/facebook/mysql-5.6/commit/182d59c4ecc

Originally Reviewed By: yoshinorim

fbshipit-source-id: 1c8d7601174