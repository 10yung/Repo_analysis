hello thanks for excellent lib 
i use your lib in my application and i want hide status bar .(when click on option button shown status bar )
what do i do ?
thanks a lot
i try to use with webview 

but not open


```

import android.annotation.SuppressLint;
import android.graphics.Bitmap;
import android.graphics.BitmapFactory;
import android.graphics.drawable.BitmapDrawable;
import android.os.Bundle;
import android.support.v4.app.FragmentManager;
import android.support.v4.widget.SwipeRefreshLayout;
import android.support.v7.app.AppCompatActivity;
import android.support.v7.widget.Toolbar;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.webkit.ValueCallback;
import android.widget.FrameLayout;
import android.widget.ProgressBar;
import android.widget.TextView;
import android.widget.Toast;

import com.yalantis.contextmenu.lib.ContextMenuDialogFragment;
import com.yalantis.contextmenu.lib.MenuObject;
import com.yalantis.contextmenu.lib.MenuParams;
import com.yalantis.contextmenu.lib.interfaces.OnMenuItemClickListener;
import com.yalantis.contextmenu.lib.interfaces.OnMenuItemLongClickListener;

import org.xwalk.core.XWalkPreferences;
import org.xwalk.core.XWalkResourceClient;
import org.xwalk.core.XWalkUIClient;
import org.xwalk.core.XWalkView;

import java.util.ArrayList;
import java.util.List;

import static com.github.crazyorr.embeddedcrosswalk.R.string.url;
public class MainActivity extends AppCompatActivity implements OnMenuItemClickListener, OnMenuItemLongClickListener {

    private XWalkView mXWalkView;
    private SwipeRefreshLayout swipe;
    private ProgressBar progressBar;
    private ContextMenuDialogFragment mMenuDialogFragment;
    private FragmentManager fragmentManager;



    @SuppressLint("SetJavaScriptEnabled")
    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
        initToolbar();
        initMenuFragment();
        progressBar = (ProgressBar) findViewById(R.id.ProgressBar);
        swipe= (SwipeRefreshLayout) findViewById(R.id.swipe);
        swipe.setColorSchemeResources(R.color.orange, R.color.green, R.color.blue, R.color.purple);
        swipe.setOnRefreshListener(new SwipeRefreshLayout.OnRefreshListener() {

            @Override
            public void onRefresh()
            {mXWalkView.reload(url);}
        });

        loadweb();
    }


    public void loadweb(){

        mXWalkView = (XWalkView) findViewById(R.id.webview);
        mXWalkView.setResourceClient(new ResourceClient(mXWalkView));
        mXWalkView.setUIClient(new XWalkUIClient(mXWalkView) {
            @Override
            public void onPageLoadStarted(XWalkView view, String url) {
                progressBar.setVisibility(ProgressBar.VISIBLE);
            }

            @Override
            public void onPageLoadStopped(XWalkView view, String url, XWalkUIClient.LoadStatus status) {
                progressBar.setVisibility(view.GONE);
                swipe.setRefreshing(false);
            }
        });
        XWalkPreferences.setValue(XWalkPreferences.REMOTE_DEBUGGING, true);
        mXWalkView.getSettings().setJavaScriptEnabled(true);
        mXWalkView.loadUrl("http:google.com");
    }

    private void initToolbar() {
        Toolbar mToolbar = (Toolbar) findViewById(R.id.my_toolbar);
        setSupportActionBar(mToolbar);
        if (getSupportActionBar() != null) {
            getSupportActionBar().setHomeButtonEnabled(true);
            getSupportActionBar().setDisplayHomeAsUpEnabled(true);
            getSupportActionBar().setDisplayShowTitleEnabled(false);
        }
        mToolbar.setNavigationIcon(R.drawable.btn_back);
        mToolbar.setNavigationOnClickListener(new View.OnClickListener() {
            @Override
            public void onClick(View v) {
                onBackPressed();

            }
        });
    }


    private void initMenuFragment() {
        MenuParams menuParams = new MenuParams();
        menuParams.setActionBarSize((int) getResources().getDimension(R.dimen.tool_bar_height));
        menuParams.setMenuObjects(getMenuObjects());
        menuParams.setClosableOutside(false);
        mMenuDialogFragment = ContextMenuDialogFragment.newInstance(menuParams);
        mMenuDialogFragment.setItemClickListener(this);
        mMenuDialogFragment.setItemLongClickListener(this);
    }

    private List<MenuObject> getMenuObjects() {

        List<MenuObject> menuObjects = new ArrayList<>();
        MenuObject close = new MenuObject();
        close.setResource(R.drawable.icn_close);
        MenuObject send = new MenuObject("Send message");
        send.setResource(R.drawable.icn_1);
        MenuObject like = new MenuObject("Like profile");
        Bitmap b = BitmapFactory.decodeResource(getResources(), R.drawable.icn_2);
        like.setBitmap(b);
        MenuObject addFr = new MenuObject("Add to friends");
        BitmapDrawable bd = new BitmapDrawable(getResources(),
                BitmapFactory.decodeResource(getResources(), R.drawable.icn_3));
        addFr.setDrawable(bd);
        MenuObject addFav = new MenuObject("Add to favorites");
        addFav.setResource(R.drawable.icn_4);
        MenuObject block = new MenuObject("Block user");
        block.setResource(R.drawable.icn_5);

        menuObjects.add(close);
        menuObjects.add(send);
        menuObjects.add(like);
        menuObjects.add(addFr);
        menuObjects.add(addFav);
        menuObjects.add(block);
        return menuObjects;
    }



    class ResourceClient extends XWalkResourceClient {

        public ResourceClient(XWalkView xwalkView) {
            super(xwalkView);
        }

        public void onProgressChanged(XWalkView view, int progressInPercent){

            progressBar.setProgress(progressInPercent);


            if (progressInPercent == 100){
            }
            super.onProgressChanged(view, progressInPercent);



        }


    }





    @Override
    public boolean onCreateOptionsMenu(Menu menu) {
        getMenuInflater().inflate(R.menu.main, menu);
        return super.onCreateOptionsMenu(menu);
    }


    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
        switch (item.getItemId()) {
            case R.id.context_menu:
                if (fragmentManager.findFragmentByTag(ContextMenuDialogFragment.TAG) == null) {
                    mMenuDialogFragment.show(fragmentManager, ContextMenuDialogFragment.TAG);
                }
                break;
        }
        return super.onOptionsItemSelected(item);
    }


    @Override
    public void onMenuItemClick(View clickedView, int position) {
        Toast.makeText(this, "Clicked on position: " + position, Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onMenuItemLongClick(View clickedView, int position) {
        Toast.makeText(this, "Long clicked on position: " + position, Toast.LENGTH_SHORT).show();
    }

    @Override
    public void onBackPressed() {
        mXWalkView.evaluateJavascript("onBackPressed()", new ValueCallback<String>() {
            @Override
            public void onReceiveValue(final String value) {
                if (!Boolean.valueOf(value)) {
                    MainActivity.super.onBackPressed();
                }

            }
        });
    }
}
```
Hi,

I have applied this menu to list items and based on the type of list item the options varies  ... so option 4 for list item1 may not be same for list item2

What is the best way to deal with this ? 
Can I disable some menu options (so user cannot click them .... like they are not applicable for that case) Thanks in advance :)
Hi, I have this crash report :

**Exception java.lang.IncompatibleClassChangeError: Class 'java.lang.String' does not implement interface 'java.util.List' in call to 'java.lang.Object java.util.List.get(int)' (declaration of 'com.yalantis.contextmenu.lib.MenuAdapter' appears in /data/app/com.pomfy-1/split_lib_dependencies_apk.apk)**

com.yalantis.contextmenu.lib.MenuAdapter.setViews (MenuAdapter.java:72)
com.yalantis.contextmenu.lib.MenuAdapter.<init> (MenuAdapter.java:49)
com.yalantis.contextmenu.lib.ContextMenuDialogFragment.initDropDownMenuAdapter (ContextMenuDialogFragment.java:130)
com.yalantis.contextmenu.lib.ContextMenuDialogFragment.onCreateView (ContextMenuDialogFragment.java:102)
android.support.v4.app.Fragment.performCreateView (Fragment.java:2192)
android.support.v4.app.FragmentManagerImpl.moveToState (FragmentManager.java:1299)
android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState (FragmentManager.java:1528)
android.support.v4.app.FragmentManagerImpl.moveToState (FragmentManager.java:1595)
android.support.v4.app.BackStackRecord.executeOps (BackStackRecord.java:758)
android.support.v4.app.FragmentManagerImpl.executeOps (FragmentManager.java:2363)
android.support.v4.app.FragmentManagerImpl.executeOpsTogether (FragmentManager.java:2149)
android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps (FragmentManager.java:2103)
android.support.v4.app.FragmentManagerImpl.execPendingActions (FragmentManager.java:2013)
android.support.v4.app.FragmentManagerImpl$1.run (FragmentManager.java:710)
android.os.Handler.handleCallback (Handler.java:751)
android.os.Handler.dispatchMessage (Handler.java:95)
android.os.Looper.loop (Looper.java:154)
android.app.ActivityThread.main (ActivityThread.java:6290)
java.lang.reflect.Method.invoke (Method.java)
com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:886)
com.android.internal.os.ZygoteInit.main (ZygoteInit.java:776)
After click long press when user do finger out then context menu will be dismiss with animation starting. actually i want to know how to dismiss animation context menu with 3 second delay. 
Hi!

I used your library 5 months ago and some users get the following error:
java.lang.RuntimeException: Unable to start activity ComponentInfo{hu.nextent.ni.cetli/hu.nextent.ni.cetli.MainActivity}: java.lang.NullPointerException: Attempt to invoke interface method 'int java.util.List.size()' on a null object reference

I have no idea why it's happening. Please, if you can help me. Thanks, I'm sending the stacktrace:

Fatal Exception: java.lang.RuntimeException: Unable to start activity ComponentInfo{hu.nextent.ni.cetli/hu.nextent.ni.cetli.MainActivity}: java.lang.NullPointerException: Attempt to invoke interface method 'int java.util.List.size()' on a null object reference
       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2572)
       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2654)
       at android.app.ActivityThread.access$900(ActivityThread.java:175)
       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1488)
       at android.os.Handler.dispatchMessage(Handler.java:111)
       at android.os.Looper.loop(Looper.java:207)
       at android.app.ActivityThread.main(ActivityThread.java:5728)
       at java.lang.reflect.Method.invoke(Method.java)
       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:789)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:679)
Caused by java.lang.NullPointerException: Attempt to invoke interface method 'int java.util.List.size()' on a null object reference
       at android.os.Parcel.readTypedList(Parcel.java:2008)
       at com.yalantis.contextmenu.lib.MenuParams.<init>(MenuParams.java:109)
       at com.yalantis.contextmenu.lib.MenuParams.<init>(MenuParams.java:11)
       at com.yalantis.contextmenu.lib.MenuParams$1.createFromParcel(MenuParams.java:119)
       at com.yalantis.contextmenu.lib.MenuParams$1.createFromParcel(MenuParams.java:117)
       at android.os.Parcel.readParcelable(Parcel.java:2346)
       at android.os.Parcel.readValue(Parcel.java:2243)
       at android.os.Parcel.readArrayMapInternal(Parcel.java:2592)
       at android.os.BaseBundle.unparcel(BaseBundle.java:221)
       at android.os.Bundle.getParcelable(Bundle.java:786)
       at com.yalantis.contextmenu.lib.ContextMenuDialogFragment.onCreate(ContextMenuDialogFragment.java:89)
       at android.support.v4.app.Fragment.performCreate(Fragment.java:2062)
       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1051)
       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1286)
       at android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1268)
       at android.support.v4.app.FragmentManagerImpl.dispatchCreate(FragmentManager.java:2138)
       at android.support.v4.app.FragmentController.dispatchCreate(FragmentController.java:190)
       at android.support.v4.app.FragmentActivity.onCreate(FragmentActivity.java:349)
       at android.support.v7.app.AppCompatActivity.onCreate(AppCompatActivity.java:85)
       at hu.nextent.ni.cetli.MainActivity.onCreate(MainActivity.java:61)
       at android.app.Activity.performCreate(Activity.java:6309)
       at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1113)
       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2519)
       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2654)
       at android.app.ActivityThread.access$900(ActivityThread.java:175)
       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1488)
       at android.os.Handler.dispatchMessage(Handler.java:111)
       at android.os.Looper.loop(Looper.java:207)
       at android.app.ActivityThread.main(ActivityThread.java:5728)
       at java.lang.reflect.Method.invoke(Method.java)
       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:789)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:679)