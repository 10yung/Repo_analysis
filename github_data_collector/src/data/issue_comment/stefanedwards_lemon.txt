Just a little typo in the documentation, one of the options for linejoin is `mintre` instead of `mitre`. 

Thanks for the great package! ðŸ˜„
Not quite sure how to make a reprex for this problem I'm having and have checked previous issues to see if it's been run into before but I'm attempting to use `reposition_legend()` along with `facet_rep_grid()`. 

When I do this it appears to be placing the legend behind the grid effect. Is there a way so that the legend will be placed on top? I have tried changing the fill of the legend.box just in case if it was making the box transparent but it does not look to be the case. Here is a pic to show what I mean:

![image](https://user-images.githubusercontent.com/15963026/49978070-0135f480-ff06-11e8-8060-6d7072d5c9b7.png)

Terribly sorry to not have a reprex to show you but here is my code just incase:

```
library(tidyverse)
library(lubridate)
library(lemon)

wmt <- read_csv("https://byuistats.github.io/M335/data/Walmart_store_openings.csv")

sts <- tibble(state.abb, state.region)

wmt_count <- wmt %>% 
  mutate(OPENDATE = mdy(OPENDATE),
         year = year(OPENDATE)) %>% 
  count(year, STRSTATE) %>% 
  left_join(sts, by = c("STRSTATE" = "state.abb")) %>% 
  mutate(state.region = fct_relevel(state.region, c("South", 
                                                    "North Central", 
                                                    "West", 
                                                    "Northeast")),
         STRSTATE = fct_reorder(STRSTATE, year, min, .desc = T))

p <- ggplot(wmt_count, aes(x = year, y = n, fill = state.region)) + 
  geom_bar(stat = "identity") + 
  facet_rep_grid(STRSTATE ~ .) +
  scale_x_continuous(labels = c(1962,1970,1980,1990,2000,2006),
                     breaks = c(1962,1970,1980,1990,2000,2006),
                     expand = c(0,0)) + 
  scale_y_sqrt() + 
  scale_fill_manual(values = c("#dd6d16", "#33b24e", "#fac20e", "#37aef0")) + 
  labs(title = "The Growth of Walmart: Store Openings by Year and State") + 
  theme_minimal() + 
  theme(axis.title = element_blank(),
        axis.text.y = element_blank(),
        axis.line = element_line(),
        axis.line.y = element_blank(),
        axis.line.x = element_line(linetype = "dashed",
                                   color = "lightgrey"),
        legend.title = element_blank(),
        strip.text.y = element_text(angle = 0, hjust = 0, color = "grey50", 
                                    size = 7),
        panel.grid = element_blank(),
        text = element_text(color = "grey50"), 
        legend.background = element_rect(fill = "white", color = "white"))

reposition_legend(p, "top left", panel = "panel-1-1")
```
If legend is _not_ given and the plot object is _not_ ggplot, `reposition_legend` fails. 

We should at least attempt to extract the guidebox from the gtable object, remove the guidebox grob from the gtable object.

Problem: Replacing the guidebox grob with e.g. a zeroGrob will leave an empty space - should we... ? Set the width/height of that cell to 0 (depending on it being left/right or top/bottom)? Add another bloody argument to control that behaviour?
The issue first appears when rendering the plots. It does not appear to be a rounding error as changing the distance argument to other units affects the outcome.

```
library(ggplot2)
library(lemon)

data(sunspot.year)
sunspots <- data.frame(count=as.numeric(sunspot.year), year=seq.int(start(sunspot.year)[1], end(sunspot.year)[1]))
sunspots <- subset(sunspots, year > 1900)

ggplot(sunspots, aes(x=year, y=count)) + geom_pointline(distance=unit(3, 'pt')) + labs(main='geom_pointline')
pointline
```

![small](https://user-images.githubusercontent.com/3592346/36606185-dd1b5d2e-18ba-11e8-89de-995d39a1e46b.png)
![big](https://user-images.githubusercontent.com/3592346/36606186-dd37cb26-18ba-11e8-8eed-d76bc86f19af.png)

It can as best be described that if the offset 'connector point' of a point extends past the corresponding 'connector point' in the connecting point, in either horisontal or vertical distance, this appears.
But determining whether this is the case is difficult because comparisons of `unit` cannot be done.
To find a strip (any?) grob with a particular label. Question is, what to return? It is essentially a tree-path to the grob.