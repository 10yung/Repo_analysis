$data不传进去，会返回一个空的模型实例。

https://www.kancloud.cn/manual/thinkphp6_0/1037615
我按照文档。
在我的admin应用下的某个控制器中写
abort(404, '页面异常');

app.php设置

'http_exception_template'    =>  [
    // 定义404错误的模板文件地址
    404 =>  \think\facade\App::getAppPath() . '404.html',
    // 还可以定义其它的HTTP status
    401 =>  \think\facade\App::getAppPath() . '401.html',
]

模板文件的路径是：网站/app/404.html，不是应该是:view/admin/404.html么？
在`src\think\route\Rule.php`的`dispatch`方法中有如下定义：
```php
$result = new ViewDispatch($request, $this, $route, is_array($option['view']) ? $option['view'] : $this->vars);
```
通过测试，`$option['view']`无论是否在路由定义中指定额外变量都为数组。
```
Route::view('index/:id', 'index/index', ['test' => 'value']);
var_dump($option['view']);
//array(1) { ["test"]=> string(5) "value" }

Route::view('index/:id', 'index/index');
var_dump($option['view']);
//array(0) { }
```
而路由变量存储于`$this->vars`，上述判断会导致任何情况下路由变量都会丢失，因此去除`is_array`判断，并执行`array_merge`操作合并两者。
声明以下路由定义
```
Route::group('admin', function () {
    Route::resource('user', 'user')->except(['create', 'edit']);
})->prefix('api.admin.');
```

实际上 ./think route:list 生成的预览定义
```
+----------------------+-------------+--------+-------------+
| Rule                 | Route       | Method | Name        |
+----------------------+-------------+--------+-------------+
| admin/user           | user/index  | get    | user/index  |
| admin/user           | user/save   | post   | user/save   |
| admin/user/create    | user/create | get    | user/create |
| admin/user/<id>/edit | user/edit   | get    | user/edit   |
| admin/user/<id>      | user/read   | get    | user/read   |
| admin/user/<id>      | user/update | put    | user/update |
| admin/user/<id>      | user/delete | delete | user/delete |
+----------------------+-------------+--------+-------------+
```

正确路由定义
```
+----------------------+-----------------------+--------+-----------------------+
| Rule                 | Route                 | Method | Name                  |
+----------------------+-----------------------+--------+-----------------------+
| admin/user           | api.admin.user/index  | get    | api.admin.user/index  |
| admin/user           | api.admin.user/save   | post   | api.admin.user/save   |
| admin/user/<id>      | api.admin.user/read   | get    | api.admin.user/read   |
| admin/user/<id>      | api.admin.user/update | put    | api.admin.user/update |
| admin/user/<id>      | api.admin.user/delete | delete | api.admin.user/delete |
+----------------------+-----------------------+--------+-----------------------+
```


https://github.com/top-think/framework/blob/e61b34ceca2fb46f2d1319d5b1a956ef6907e8f3/library/think/Validate.php#L141
[可以使用下面代码来校验身份证号码，相比正则而言，更加准确](//www.4ui.cn)
`<?php
function checkIdCard($idcard){
    // 只能是18位
    if(strlen($idcard)!=18){
        return false;
    }

    // 取出本体码
    $idcard_base = substr($idcard, 0, 17);

    // 取出校验码
    $verify_code = substr($idcard, 17, 1);

    // 加权因子
    $factor = array(7, 9, 10, 5, 8, 4, 2, 1, 6, 3, 7, 9, 10, 5, 8, 4, 2);

    // 校验码对应值
    $verify_code_list = array('1', '0', 'X', '9', '8', '7', '6', '5', '4', '3', '2');

    // 根据前17位计算校验码
    $total = 0;

    for($i=0; $i<17; $i++){
        $total += substr($idcard_base, $i, 1)*$factor[$i];
    }

    // 取模
    $mod = $total % 11;
    // 比较校验码
    if($verify_code == $verify_code_list[$mod]){
        return true;
    }else{
        return false;
    }
}`
`Model::where(['shop_id'=>$this->user->uid])->group();`
group方法在whereQuery这个trait中没有
报错：Type is not supported
报错内容不正确。
实际上出错的地方是：league/filesystem/src/Adapter/Local.php中的setVisibility函数。
在当前环境下函数中的：$success = chmod($location, $this->permissionMap[$type][$visibility]);异常。
真实报错应该是：chmod(): Operation not permitted
由PR #2164 而来。
让think-swoole的subscribe对应的类支持$eventPrefix 