I'm using git-deploy with Rails 6 and while I have workarounds for everything there are a few things left to be desired, and it's not fully automatic like it should be.

* asset:precompile task is now wrong, because rails has done away with app/assets

* For some reason, I have to regenerate my secret_key_base every time I deploy. I think this is my fault and I've taken steps to remove the credentials.yml.enc file from my repository, so we'll see if this goes away

Thanks @mislav !!! I use this stuff on everything!
Hi, I have a private repo on bitbucket with multiple production servers, what's the easiest way to one time push and automatically deploy to all of them?
Alexander:src alexander$ git deploy setup -r "production"

/Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:67:in `initialize': Object#timeout is deprecated, use Timeout.timeout instead.
/Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:78:in `initialize': Object#timeout is deprecated, use Timeout.timeout instead.
/Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/cipher_factory.rb:98: warning: constant OpenSSL::Cipher::Cipher is deprecated
/Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/kex/diffie_hellman_group1_sha1.rb:118:in `generate_key': undefined method `p=' for #<OpenSSL::PKey::DH:0x007f880f172020> (NoMethodError)
Did you mean?  p
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/kex/diffie_hellman_group1_sha1.rb:51:in `initialize'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/algorithms.rb:348:in `new'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/algorithms.rb:348:in `exchange_keys'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/algorithms.rb:196:in `proceed!'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/algorithms.rb:187:in `send_kexinit'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/algorithms.rb:142:in `accept_kexinit'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:189:in `block in poll_message'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:167:in `loop'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:167:in `poll_message'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:204:in `block in wait'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:202:in `loop'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:202:in `wait'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh/transport/session.rb:81:in `initialize'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh.rb:192:in `new'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/net-ssh-2.6.8/lib/net/ssh.rb:192:in `start'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/git-deploy-0.6.1/lib/git_deploy/ssh_methods.rb:96:in `ssh_connection'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/git-deploy-0.6.1/lib/git_deploy/ssh_methods.rb:43:in `ssh_exec'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/git-deploy-0.6.1/lib/git_deploy/ssh_methods.rb:35:in `run_test'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/git-deploy-0.6.1/lib/git_deploy.rb:28:in `setup'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/gems/git-deploy-0.6.1/bin/git-deploy:3:in `<top (required)>'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/bin/git-deploy:23:in `load'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/bin/git-deploy:23:in `<main>'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/bin/ruby_executable_hooks:15:in `eval'
	from /Users/alexander/.rvm/gems/ruby-2.4.0/bin/ruby_executable_hooks:15:in `<main>'

Who know, What is the problem ?
One of the options is 

```
git deploy upload <files> - Copy local files to the remote app
```

Is there a reverse? I have files that are being uploaded to my web server and I want to be able to periodically add them to the repository.

Hello.
I get the following error on running `git deploy setup -r "production"`

```
/home/mahendhar/.rvm/gems/ruby-2.2.2/gems/net-ssh-2.6.6/lib/net/ssh.rb:201:in `start': root (Net::SSH::AuthenticationFailed)
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/git-deploy-0.6.1/lib/git_deploy/ssh_methods.rb:96:in `ssh_connection'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/git-deploy-0.6.1/lib/git_deploy/ssh_methods.rb:43:in `ssh_exec'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/git-deploy-0.6.1/lib/git_deploy/ssh_methods.rb:35:in `run_test'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/git-deploy-0.6.1/lib/git_deploy.rb:28:in `setup'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/thor-0.14.6/lib/thor/task.rb:22:in `run'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/thor-0.14.6/lib/thor/invocation.rb:118:in `invoke_task'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/thor-0.14.6/lib/thor.rb:263:in `dispatch'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/thor-0.14.6/lib/thor/base.rb:389:in `start'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/gems/git-deploy-0.6.1/bin/git-deploy:3:in `<top (required)>'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/bin/git-deploy:23:in `load'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/bin/git-deploy:23:in `<main>'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/bin/ruby_executable_hooks:15:in `eval'
    from /home/mahendhar/.rvm/gems/ruby-2.2.2/bin/ruby_executable_hooks:15:in `<main>'
```

I even updated the net-ssh gem version, but the problem persists. Can anyone kindly help?

I'm having trouble using this gem on Windows because of the net-ssh version required. The net-ssh version installed along gi-deploy is `2.6.8`, and throws an error. If I use a Gemfile with gem `"net-ssh", "3.0.2"` it does work, but I end up with git-deploy 0.5.4.

Is it possible to update the gem requirements ?

Error thrown :

```
C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in`require': cannot load such file -- dl/import (LoadError)
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        from C:/Ruby22/lib/ruby/gems/2.2.0/gems/net-ssh-2.6.8/lib/net/ssh/authentication/pageant.rb:1:in`<top (required)>'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in`require'
        from C:/Ruby22/lib/ruby/gems/2.2.0/gems/net-ssh-2.6.8/lib/net/ssh/authentication/agent/socket.rb:5:in `<top (required)>'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in`require'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        from C:/Ruby22/lib/ruby/gems/2.2.0/gems/net-ssh-2.6.8/lib/net/ssh/authentication/agent.rb:22:in`<top (required)>'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in`require'
        from C:/Ruby22/lib/ruby/gems/2.2.0/gems/net-ssh-2.6.8/lib/net/ssh/authentication/key_manager.rb:4:in `<top (required)>'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in`require'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        from C:/Ruby22/lib/ruby/gems/2.2.0/gems/net-ssh-2.6.8/lib/net/ssh/authentication/session.rb:4:in`<top (required)>'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in`require'
        from C:/Ruby22/lib/ruby/gems/2.2.0/gems/net-ssh-2.6.8/lib/net/ssh.rb:11:in `<top (required)>'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in`require'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        from C:/Ruby22/lib/ruby/gems/2.2.0/gems/git-deploy-0.6.1/lib/git_deploy.rb:2:in`<top (required)>'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        from C:/Ruby22/lib/ruby/2.2.0/rubygems/core_ext/kernel_require.rb:54:in`require'
        from C:/Ruby22/lib/ruby/gems/2.2.0/gems/git-deploy-0.6.1/bin/git-deploy:2:in `<top (required)>'
        from C:/Ruby22/bin/git-deploy:23:in`load'
        from C:/Ruby22/bin/git-deploy:23:in `<main>'
```

Running `git deploy setup` without the `-r` and branch name clobbered existing post-receive hooks and also changed many permissions and deleted the master branch.

It should probably warn against this.

Instead of them existing at `/deploy`, it would be good if you could specify a different directory instead (currently you have to edit the git hooks with the new path)

Where is difference between git-deploy/git-deploy  and mislav/git-deploy
 project?

Is it possible to use git-deploy for different Rails environments on the same server?  I am currently using git-deploy to deploy to my server in a production environment. I would also like to create a staging environment on the same server but have no idea how to use/setup git-deploy to also deploy to the staging environment in parallel.
