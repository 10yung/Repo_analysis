This seems to have stopped working in the newest version of Slack. I am running the Slack Desktop app on Ubuntu 18.04. 

This was working for me previously. I am constantly running Slack in "developer mode" and after each restart I have to copy-paste the content of `index.js` from `slack-disable-wysiwyg-bookmarklet` into the console in Slack. This was working as expected until very recently. I am noticing today that is no longer works to disable the WYSIWYG editor. I still have format-as-you-type functionality enabled in Slack. Additionally, I have discovered a new "feature" that is when I paste content with markdown in it:
```
`bar` should not be formatted until I submit
```
...I am seeing a little popup message that says "Apply Formatting?". If I do not apply formatting, this message doesn't get formatted at all. I was able to submit a message with Markdown and have it work as expected (that is display as formatted text in the chat history). This seems to have changed within the last few days.

```
> slackDebug.versionInfo
{
  versionHash: "0756f06a6f0457de4e355149a4321a9abb8befa5", 
  versionTs: "1576605650", 
  minVersionDataTs: 1573504200
}
```
Hi @kfahy , thanks a lot for putting this together.

As of now, the readme of the project says:

> The contents of this repository and the remainder of this README are left intact for reference, but should not be used going forward.

However, turns out, it's not quite the case at least for me personally: even though Slack has implemented a preference to turn off wysiwyg, which is cool, but, they broke copypasting with markup preserved!

E.g. I select a text with markup, I copy it, I paste it to the Slack's input, and all the markup is gone. It used to be preserved, and I personally use it a lot.

But the good news is, your bookmarklet does save the day again. With this bookmarklet applied, I select a text with markup, I copy it, I paste it to the Slack's input, and the markup is preserved!

So, just wanted to say that it's probably worth mentioning in the readme.

Thanks again!
I just wanted to say Thank You for putting this together, and I didn't know of any other way to get a message to you other than to create an issue. Feel free to just close this.

Thanks so much for figuring this out and sharing it with us all. I'm sure you experienced the pain of the wsywig as much as everyone else did. But thanks for wrapping it up so nicely and creating such easy to follow instructions, putting it out for free, and allowing us all to leach off your work. You made the last two weeks of using Slack bearable for me and I just wanted to thank you for you that.

Cheers,
Chase


I am using this with nativifier: https://github.com/jiahaog/nativefier/blob/master/docs/api.md#inject but it runs "too" early and `slackDebug` is not yet ready. The app is created with:

```
nativefier "https://app.slack.com" -m --name slack --disable-context-menu --disable-dev-tools  --internal-urls '(.*\.slack\.com)|(slack\.com)|(confluent\.okta\.com)' --inject /tmp/no_wysiwyg.js  
```

to solve it, I added a timeout to call the function later after 10s. Not elegant but works. I don't know too much about js to make it better.

It looks like this

```js
(() => {
    setTimeout( function(){
        const workspaceIds = slackDebug.clientStore.workspaces.getAllWorkspaces();
        for (const workspaceId of workspaceIds) {
            const { redux } = slackDebug[workspaceId];
            const {
                wysiwyg_composer,
                wysiwyg_composer_ios,
                wysiwyg_composer_webapp,
                ...payload
            } = redux.getState().experiments;
            redux.dispatch({
                type: '[19] Bulk add experiment assignments to redux',
                payload
            });
        }
    }, 10000);
})();
```
For all I know, it may be possible to run slack in developer mode from
the app store, but I didn't see an obvious way to do it, and
uninstalling then reinstalling is quick and easy to do.

This is just a documentation PR.
Hi,

I worked for an hour to try to make it work in a userscript, but I can't make it work (in GreaseMonkey on Firefox), the `redux.dispatch` function call doesn't return and I can't find an error anywhere.

Here is my code if someone finds how to make it work:
```javascript
// ==UserScript==
// @name     disable WYSIWYG editor
// @version  1
// @grant    none
// @include  https://app.slack.com/client/*
// @run-at   document-idle
// ==/UserScript==

(() => {
  const interval = setInterval(() => {
    if (unsafeWindow.slackDebug !== undefined) {
      clearInterval(interval)
      const slackDebug = unsafeWindow.slackDebug
      const redux = slackDebug[slackDebug.activeTeamId].redux
      const {wysiwyg_composer, wysiwyg_composer_ios, wysiwyg_composer_webapp, ...payload} = redux.getState().experiments
      console.error({slackDebug, redux, payload})
      const result = redux.dispatch({type: '[19] Bulk add experiment assignments to redux', payload})
      console.error({result}) // not firing
    }
  }, 300)
})()
```

I'd be happy to make a PR in that case.
On macOS, you can use `launchctl setenv` to set global environment variables for application bundles. No need to start it from the Terminal.

```sh
launchctl setenv SLACK_DEVELOPER_MENU "true"
# then restart slack
```
I don't use slack, but I thought it might be helpful to share this technique:

Create a file: `/path/to/file.js`
Set your `NODE_OPTIONS` to `-r /path/to/file.js`

Put some protections at the start, because this will now run every time any node.js starts on your computer.

```js
(() => {
  if (typeof window === 'undefined') {
    return;
  }

  if (!window.location.href.includes('slack.com')) {
    return;
  }

  const redux = slackDebug[slackDebug.activeTeamId].redux;
  const {wysiwyg_composer, wysiwyg_composer_ios, wysiwyg_composer_webapp, ...payload} = redux.getState().experiments;
  redux.dispatch({ type: '[19] Bulk add experiment assignments to redux', payload });
})();
```
For example:

```
* test
```
Will turn into

* test

And when editing, it won't revert to raw markdown.