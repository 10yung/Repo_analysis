Hey, just wanted to say TinyConsole is a great project!

If you're using Cocoapods and TinyConsole with the Xcode's new build system, there's a configuration problem with how the podspec specifies input sources causing this error:

```
Multiple commands produce '/DerivedData/Build/Products/Debug-iphoneos/TinyConsole/TinyConsole.framework/Info.plist':
1) Target 'TinyConsole' (project 'Pods') has copy command from '/Pods/TinyConsole/TinyConsole/Supporting Files/Info.plist' to '/DerivedData/Build/Products/Debug-iphoneos/TinyConsole/TinyConsole.framework/Info.plist'
2) Target 'TinyConsole' (project 'Pods') has process command with output '/DerivedData/Build/Products/Debug-iphoneos/TinyConsole/TinyConsole.framework/Info.plist'
```

ðŸ“Ž https://github.com/CocoaPods/CocoaPods/issues/8125

```ruby
  s.source_files = "TinyConsole/**/*"
  s.exclude_files = "TinyConsole/**/*.plist"
```

If the podspec declaration for `s.source_files` paths only specifies *.h and *.swift, it should fix the problem. Otherwise the Info.plist is processed as source (as opposed to a resource) and causes this error.
- #import <TinyConsole/TinyConsole-Swift.h> in objective c file

- self.window.rootViewController = [TinyConsole createViewControllerWithRootViewController:rootViewController withDefaultGestureConfiguration:YES];
can't work either device or simulator, ios 10.0.3 or 11.0.0 doesn't work normal,can't show the console window
Do i want to use this in my objective-c project?
Is it possible to use TinyConsole with storyboards?

Whenever I try to set `UIWindow` (which wasn't set before) whenever code that comes from a storyboard outlet gets run, it crashes: `Thread 1: EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)` and the Xcode console says: 
```
fatal error: unexpectedly found nil while unwrapping an Optional value
(lldb) 
```

My guess is I can't use this with storyboards, but if that is possible please explain how.
Hello!
View controller-based status bar appearance does not work if I use TinyConsoleController.
I think that TinyConsoleController should take view controller-based values from rootViewController