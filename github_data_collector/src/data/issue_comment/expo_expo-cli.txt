Expo DevTools is running at http://localhost:19002
Opening DevTools in the browser... (press shift-d to disable)
Error: spawn cmd ENOENT
at Process.ChildProcess._handle.onexit (internal/child_process.js:264:19)
at onErrorNT (internal/child_process.js:456:16)
at processTicksAndRejections (internal/process/task_queues.js:80:21)

everything was working okay untill i press shift-d and then this happened. i already updated the expo to the latest version
Expo CLI 3.11.7
npm: 6.10.3
unable to find anything related to this devtool issue on github/expo forum
how to disable devtool the metro bundler /lan/tunnel is not starting up.
Metro bundler will allow TypeScript in projects without a `tsconfig.json` so we should disable how other bundlers handle TS to account for this.
##  Description

Uploading to AppStore failed on first Mac and on Github action, but succeeded on second Mac. What's the catch?)

## Expected Behavior

Successful uploading

## Observed Behavior

Upload fails

```
Resolving the ITC team ID...
Failed to upload the standalone app to the app store.
undefined method `[]' for nil:NilClass
Error: undefined method `[]' for nil:NilClass
    at runFastlaneAsync (/expo-cli@3.11.7/src/commands/upload/utils.ts:79:11)
    at process._tickCallback (internal/process/next_tick.js:68:7)
```

## Environment

### Mac on which failed
```
Expo CLI 3.11.7 environment info:
    System:
      OS: macOS 10.15.2
      Shell: 3.2.57 - /bin/bash
    Binaries:
      Node: 10.16.3 - ~/.nvm/versions/node/v10.16.3/bin/node
      Yarn: 1.21.1 - ~/.nvm/versions/node/v12.10.0/bin/yarn
      npm: 6.9.0 - ~/.nvm/versions/node/v10.16.3/bin/npm
    IDEs:
      Android Studio: 3.5 AI-191.8026.42.35.6010548
      Xcode: 11.3/11C29 - /usr/bin/xcodebuild
    npmPackages:
      @types/react: ^16.9.17 => 16.9.17 
      @types/react-native: ^0.57.65 => 0.57.65 
      expo: ^36.0.0 => 36.0.0 
      react: 16.9.0 => 16.9.0 
      react-native: https://github.com/expo/react-native/archive/sdk-36.0.0.tar.gz => 0.61.4 
      react-navigation: ^4.0.10 => 4.0.10
```

### Mac on which succeeded
```
Expo CLI 3.11.7 environment info:
    System:
      OS: macOS 10.15.1
      Shell: 3.2.57 - /bin/bash
    Binaries:
      Node: 10.16.3 - ~/.nvm/versions/node/v10.16.3/bin/node
      Yarn: 1.3.2 - /usr/local/bin/yarn
      npm: 6.9.0 - ~/.nvm/versions/node/v10.16.3/bin/npm
      Watchman: 4.9.0 - /usr/local/bin/watchman
    IDEs:
      Android Studio: 3.5 AI-191.8026.42.35.6010548
      Xcode: 11.3/11C29 - /usr/bin/xcodebuild
    npmPackages:
      @types/react: ^16.9.17 => 16.9.17
      @types/react-native: ^0.57.65 => 0.57.65
      expo: ^36.0.0 => 36.0.0
      react: 16.9.0 => 16.9.0
      react-native: https://github.com/expo/react-native/archive/sdk-36.0.0.tar.gz => 0.61.4
      react-navigation: ^4.0.10 => 4.0.10
    npmGlobalPackages:
      expo-cli: 3.11.7
```

## Reproducible Demo

`EXPO_APPLE_ID=*** EXPO_APPLE_ID_PASSWORD=*** EXPO_DEBUG=true expo upload:ios --path ./app.ipa`

Currently, no service worker is registered at all in development which makes it difficult to test service worker related functionality. This PR will always register the `expo-service-worker` but will still avoid Workbox in development.
## Description

When running `expo build:android -t app-bundle --release-channel X --non-interactive --no-publish` expo will use a lower version code than in `app.json`. In `app.json` the versionCode is set to 792 but when expo builds the app bundle it gives it versionCode 790

## Expected Behavior

When running `expo build:android` it should use the *exact* `android.versionCode` in `app.json`.

## Observed Behavior

`expo build:android` used a lower `versionCode`(790) than in `app.json` (792).

## Environment

Expo CLI 3.11.7 environment info:
    System:
      OS: macOS 10.15.1
      Shell: 5.7.1 - /bin/zsh
    Binaries:
      Node: 12.6.0 - ~/.nvm/versions/node/v12.6.0/bin/node
      Yarn: 1.19.0 - /usr/local/bin/yarn
      npm: 6.13.4 - ~/.nvm/versions/node/v12.6.0/bin/npm
      Watchman: 4.9.0 - /usr/local/bin/watchman
    IDEs:
      Android Studio: 3.2 AI-181.5540.7.32.5056338
      Xcode: 11.3.1/11C504 - /usr/bin/xcodebuild
    npmPackages:
      expo: ^36.0.0 => 35.0.0 
      react: 16.9.0 => 16.8.3 
      react-native: https://github.com/expo/react-native/archive/sdk-36.0.1.tar.gz => 0.59.8 
      react-navigation: ^4.0.6 => 4.0.10 
    npmGlobalPackages:
      expo-cli: 3.11.7

Expo build service.

## Description

When running `expo upgrade` to ugrade my expo project to the newest version, the command failes installing packages via yarn.

## Expected Behavior

I expected `expo upgrade` to work properly with yarn.

## Observed Behavior

`expo upgrade` fails with the following error message:

```
Installing the expo package...

> yarn add expo@^36.0.0
spawn yarnpkg ENOENT
Set EXPO_DEBUG=true in your env to view the stack trace.
```

## Environment

```
% expo diagnostics

  Expo CLI 3.11.7 environment info:
    System:
      OS: macOS 10.15.2
      Shell: 5.7.1 - /bin/zsh
    Binaries:
      Node: 12.13.1 - /opt/local/bin/node
      Yarn: 1.19.2 - /opt/local/bin/yarn
      npm: 6.13.4 - /opt/local/bin/npm
    IDEs:
      Xcode: 11.3/11C29 - /usr/bin/xcodebuild
    npmPackages:
      @types/expo: ^32.0.0 => 32.0.7 
      @types/react: ^16.8.23 => 16.9.5 
      @types/react-native: ^0.57.65 => 0.57.65 
      @types/react-navigation: ^3.0.1 => 3.0.5 
      expo: ^35.0.0 => 35.0.0 
      react: 16.8.3 => 16.8.3 
      react-native: https://github.com/expo/react-native/archive/sdk-35.0.0.tar.gz => 0.59.8 
      react-navigation: ^3.11.1 => 3.11.1 
```

## Reproducible Demo

Run `expo upgrade` on a Mac with yarn installed via MacPorts.

The issue is, that Package-Manager tries to spawn yarn via the `yarnpkg` executable name. I have yarn installed via MacPorts and it does not have a `yarnpkg` executable, but only `yarn` without `pkg`.


Currently, all environment variables containing EXPO are exposed. However, if you are using a CI you might have some secrets and passwords defined that shouldn't be part of the build. This PR removes these environment variables explicitly.
I'm trying to retrieve the mobile token.
on android I could recover it but on ios I couldn't. Despite it was working fine.
`   const { status: existingStatus } = await Permissions.getAsync(Permissions.NOTIFICATIONS);`
  ` let finalStatus = existingStatus;`
   `if (existingStatus !== 'granted') {`
    `  // Android remote notification permissions are granted during the app`
      `// install, so this will only ask on iOS`
     ` const { status } = await Permissions.askAsync(Permissions.NOTIFICATIONS);`
     ` finalStatus = status;`
  ` }`
   `// Stop here if the user did not grant permissions`
   `if (finalStatus !== 'granted') {`
     ` return;`
   `}`
  `// Get the token that uniquely identifies this device`
  `let tokenOfMobile = await Notifications.getExpoPushTokenAsync();`
thank you.
I've followed the [documentation guide](https://docs.expo.io/versions/latest/guides/using-electron/) to setup expo-electron project. 

My environment is Windows 10 (1909) with NodeJS v12.14.1 (npm v6.13.4, yarn v1.19.2).
I'm using NPM for all the installations and setup, not yarn.

However, I'm receiving the following output when trying to run app using `yarn expo-electron start`: 

```
yarn run v1.19.2
$ C:\Users\ronam\Downloads\test\prjelec\node_modules\.bin\expo-electron start
┏ Main -----------------------

  Hash: ea452a987b1974f03aa1
  Version: webpack 4.39.0
  Time: 610ms
  Built at: 01/16/2020 09:33:34
    Asset      Size  Chunks             Chunk Names
  main.js  46.6 KiB    main  [emitted]  main
  Entrypoint main = main.js
  [0] multi ./node_modules/electron-webpack/out/electron-main-hmr/main-hmr ./electron/main/index.js 40 bytes {main} [built]
  [./electron/main/index.js] 1.12 KiB {main} [built]
  [./node_modules/@babel/runtime/helpers/interopRequireWildcard.js] 1.15 KiB {main} [built]
  [./node_modules/@babel/runtime/helpers/typeof.js] 449 bytes {main} [built]
  [./node_modules/electron-webpack/out/electron-main-hmr/main-hmr.js] 582 bytes {main} [built]
  [electron] external "electron" 42 bytes {main} [built]
  [electron-webpack/out/electron-main-hmr/HmrClient] external "electron-webpack/out/electron-main-hmr/HmrClient" 42 bytes {main} [built]
  [path] external "path" 42 bytes {main} [built]
  [source-map-support/source-map-support.js] external "source-map-support/source-map-support.js" 42 bytes {main} [built]  [url] external "url" 42 bytes {main} [built]

┗ ----------------------------
┏ Renderer -------------------

  TypeError: this.htmlWebpackPlugin.getHooks is not a function
      at C:\Users\ronam\Downloads\test\prjelec\node_modules\react-dev-utils\InterpolateHtmlPlugin.js:28:10
      at SyncHook.eval (eval at create (C:\Users\ronam\Downloads\test\prjelec\node_modules\tapable\lib\HookCodeFactory.js:19:10), <anonymous>:9:1)
      at SyncHook.lazyCompileHook (C:\Users\ronam\Downloads\test\prjelec\node_modules\tapable\lib\Hook.js:154:20)             at Compiler.newCompilation (C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Compiler.js:621:26)          at C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Compiler.js:657:29
      at AsyncSeriesHook.eval [as callAsync] (eval at create (C:\Users\ronam\Downloads\test\prjelec\node_modules\tapable\lib\HookCodeFactory.js:33:10), <anonymous>:6:1)
      at AsyncSeriesHook.lazyCompileHook (C:\Users\ronam\Downloads\test\prjelec\node_modules\tapable\lib\Hook.js:154:20)      at Compiler.compile (C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Compiler.js:652:28)
      at C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Watching.js:77:18
      at AsyncSeriesHook.eval [as callAsync] (eval at create (C:\Users\ronam\Downloads\test\prjelec\node_modules\tapable\lib\HookCodeFactory.js:33:10), <anonymous>:24:1)
      at AsyncSeriesHook.lazyCompileHook (C:\Users\ronam\Downloads\test\prjelec\node_modules\tapable\lib\Hook.js:154:20)      at Watching._go (C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Watching.js:41:32)
      at C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Watching.js:33:9
      at Compiler.readRecords (C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Compiler.js:519:11)             at new Watching (C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Watching.js:30:17)
      at Compiler.watch (C:\Users\ronam\Downloads\test\prjelec\node_modules\webpack\lib\Compiler.js:244:10)

┗ ----------------------------
Renderer WDS exited with code 1
Error: Renderer WDS exited with code 1
    at ChildProcess.<anonymous> (C:\Users\ronam\Downloads\test\prjelec\node_modules\electron-webpack\src\dev\ChildProcessManager.ts:62:32)
    at ChildProcess.emit (events.js:223:5)
    at maybeClose (internal/child_process.js:1021:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:283:5)

```

I have ejected using yarn expo-electron customize in order to check the behavior of htmlWebpackPlugin among the electron setup, but didn't manage to understand how it works out there. 

Maybe you have an idea of possible fix?
## I'm creating expo build:android
✖ Build failed.
Standalone build failed!



## Expected Behavior
It will export apk project

## Observed Behavior

## Error Logs

```
> Task :app:processReleaseGoogleServices FAILED
Parsing json file: /app/turtle/workingdir/android/sdk33/android-shell-app/app/google-services.json
[stderr] FAILURE: Build failed with an exception.
[stderr] * What went wrong:
[stderr] Execution failed for task ':app:processReleaseGoogleServices'.
[stderr] > No matching client found for package name 'com.xtendly.staging'
[stderr] * Try:
[stderr] Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.
[stderr] * Get more help at https://help.gradle.org
[stderr] BUILD FAILED in 30s
9 actionable tasks: 9 executed
Error: ./gradlew exited with non-zero code: 1
    at ChildProcess.completionListener (/app/turtle/node_modules/@expo/xdl/node_modules/@expo/spawn-async/build/spawnAsync.js:52:23)
    at Object.onceWrapper (events.js:317:30)
    at emitTwo (events.js:126:13)
    at ChildProcess.emit (events.js:214:7)
    at maybeClose (internal/child_process.js:915:16)
    at Process.ChildProcess._handle.onexit (internal/child_process.js:209:5)
    ...
    at spawnAsync (/app/turtle/node_modules/@expo/xdl/node_modules/@expo/spawn-async/build/spawnAsync.js:17:21)
    at spawnAsyncThrowError (/app/turtle/node_modules/@expo/xdl/build/detach/ExponentTools.js:235:45)
    at buildShellAppAsync (/app/turtle/node_modules/@expo/xdl/build/detach/AndroidShellApp.js:881:11)
    at <anonymous>
```

## Environment

  Expo CLI 3.8.0 environment info:
    System:
      OS: macOS 10.14.6
      Shell: 5.3 - /bin/zsh
    Binaries:
      Node: 8.11.3 - ~/.nvm/versions/node/v8.11.3/bin/node
      Yarn: 1.12.3 - /usr/local/bin/yarn
      npm: 5.6.0 - ~/.nvm/versions/node/v8.11.3/bin/npm
    IDEs:
      Android Studio: 3.2 AI-181.5540.7.32.5014246
      Xcode: 10.3/10G8 - /usr/bin/xcodebuild
    npmPackages:
      expo: ^33.0.4 => 33.0.4
      react: 16.8.3 => 16.8.3
      react-native: https://github.com/expo/react-native/archive/sdk-33.0.0.tar.gz => 0.59.8
      react-navigation: ^2.18.3 => 2.18.3


