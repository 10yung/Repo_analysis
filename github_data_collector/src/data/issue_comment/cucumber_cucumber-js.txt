
Could you please list the breaking changes in the formatter which are mentioned in CHANGELOG?

> Custom formatters: Formatter helpers and EventDataCollector had breaking changes to support retry

Currently, it is really hard to figure out what changed and what must be changed to support Cucumber 6 if we create a custom formatter. E.g. `getTestCaseData` has been removed and it is not clear, how [getTestCaseAttempt](https://github.com/cucumber/cucumber-js/blob/master/src/formatter/helpers/event_data_collector.ts#L47) would replace it, or what other function does.

At the same time the link to `EventDataCollector` in the [documentation](https://github.com/cucumber/cucumber-js/blob/master/docs/custom_formatters.md) is not valid.

After the move to Gherkin 9 and cucumber-messages, we can execute specs that include Rule/Example syntax, but still need to update the formatter helpers and built-in formatters to handle the results.
Now that we have converted to Typescript have a few post merge tasks that would be nice:

- [ ] tsconfig - set noImplicitAny to true
- [ ] tsconfig - set noImplicitThis to true
- [ ] tsconfig - set noImplicitReturns to true
- [ ] checkout using https://api-extractor.com/
- [ ] remove external typings in DefinitelyTyped after release

Please comment if you think there are other tasks we should complete and I can add them to the list. Also comment if you start working on a task
The currently closed issue [Adding property to Array.prototype in page object file causes error](https://github.com/cucumber/cucumber-js/issues/1111) still exists.

This error coerces us to put cucumber in an isolated environment (desired anyway) where we have to give up our handy array extensions (not desired).

Sadly, I have no patch ready yet.

Nevertheless, thank you for the great effort you put into cucumber-js so far.
I have been playing around with the parallel feature and spent some time trying to understand how to pass arguments to the slaves (beside using world-parameters). It took me to read the source code to realize that the master env was [cloned into each slave env](https://github.com/cucumber/cucumber-js/blob/master/src/runtime/parallel/master.js#L60-L64).

It might be helpful to make it explicit in the [documentation](https://github.com/cucumber/cucumber-js/blob/master/docs/cli.md#parallel-experimental), for example with:

> Each slave is run in a separate node process and receives the following env variables **in addition to the master env**

(emphasis mine) instead of

> Each slave is run in a separate node process and receives the following env variables

Or this information could be added as a note:
> * To pass custom variables from the master to the slaves, you can use env variables which will be propagated.

For information, my use case was to pass `process.argv` to the slave to be able to have some custom logic based on the arguments.

Thanks!
## Description
I've runned 2 features in parallel mode with tag --parallel 2

**Session info from 1 branch**

DuckDuckGo[{"id":"05a769b805cfd397b431454227553cbd","capabilities":{"acceptInsecureCerts":false,"acceptSslCerts":false,"applicationCacheEnabled":false,"browserConnectionEnabled":false,"browserName":"chrome","chrome":{"chromedriverVersion":"78.0.3904.70 (edb9c9f3de0247
fd912a77b7f6cae7447f6d3ad5-refs/branch-heads/3904@{#800})","userDataDir":"C:\\Users\\\AppData\\Local\\Temp\\scoped_dir24112_806264369"},"cssSelectorsEnabled":true,"databaseEnabled":false,"goog:chromeOptions":{"debuggerAddress":"localhost:54309"},"handlesAlert
s":true,"hasTouchScreen":false,"javascriptEnabled":true,"locationContextEnabled":true,"mobileEmulationEnabled":false,"nativeEvents":true,"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platform":"Windows NT","proxy":{},"rotatable":false,"setWindowRect":t
rue,"strictFileInteractability":false,"takesHeapSnapshot":true,"takesScreenshot":true,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unexpectedAlertBehaviour":"ignore","version":"78.0.3904.108","webStorageEnabled":true}},{"id":"564600231a0f742fdd0c185237d
8d1e8","capabilities":{"acceptInsecureCerts":false,"acceptSslCerts":false,"applicationCacheEnabled":false,"browserConnectionEnabled":false,"browserName":"chrome","chrome":{"chromedriverVersion":"78.0.3904.70 (edb9c9f3de0247fd912a77b7f6cae7447f6d3ad5-refs/branch-heads/
3904@{#800})","userDataDir":"C:\\Users\\\AppData\\Local\\Temp\\scoped_dir21940_1192021783"},"cssSelectorsEnabled":true,"databaseEnabled":false,"goog:chromeOptions":{"debuggerAddress":"localhost:54307"},"handlesAlerts":true,"hasTouchScreen":false,"javascriptEn
abled":true,"locationContextEnabled":true,"mobileEmulationEnabled":false,"nativeEvents":true,"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platform":"Windows NT","proxy":{},"rotatable":false,"setWindowRect":true,"strictFileInteractability":false,"takes
HeapSnapshot":true,"takesScreenshot":true,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unexpectedAlertBehaviour":"ignore","version":"78.0.3904.108","webStorageEnabled":true}}]
    Then the title is "DuckDuckGo — Privacy, simplified.dsdsd"
DuckDuckGo[{"id":"05a769b805cfd397b431454227553cbd","capabilities":{"acceptInsecureCerts":false,"acceptSslCerts":false,"applicationCacheEnabled":false,"browserConnectionEnabled":false,"browserName":"chrome","chrome":{"chromedriverVersion":"78.0.3904.70 (edb9c9f3de0247
fd912a77b7f6cae7447f6d3ad5-refs/branch-heads/3904@{#800})","userDataDir":"C:\\Users\\\AppData\\Local\\Temp\\scoped_dir24112_806264369"},"cssSelectorsEnabled":true,"databaseEnabled":false,"goog:chromeOptions":{"debuggerAddress":"localhost:54309"},"handlesAlert
s":true,"hasTouchScreen":false,"javascriptEnabled":true,"locationContextEnabled":true,"mobileEmulationEnabled":false,"nativeEvents":true,"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platform":"Windows NT","proxy":{},"rotatable":false,"setWindowRect":t
rue,"strictFileInteractability":false,"takesHeapSnapshot":true,"takesScreenshot":true,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unexpectedAlertBehaviour":"ignore","version":"78.0.3904.108","webStorageEnabled":true}},{"id":"564600231a0f742fdd0c185237d
8d1e8","capabilities":{"acceptInsecureCerts":false,"acceptSslCerts":false,"applicationCacheEnabled":false,"browserConnectionEnabled":false,"browserName":"chrome","chrome":{"chromedriverVersion":"78.0.3904.70 (edb9c9f3de0247fd912a77b7f6cae7447f6d3ad5-refs/branch-heads/
3904@{#800})","userDataDir":"C:\\Users\\\AppData\\Local\\Temp\\scoped_dir21940_1192021783"},"cssSelectorsEnabled":true,"databaseEnabled":false,"goog:chromeOptions":{"debuggerAddress":"localhost:54307"},"handlesAlerts":true,"hasTouchScreen":false,"javascriptEn
abled":true,"locationContextEnabled":true,"mobileEmulationEnabled":false,"nativeEvents":true,"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platform":"Windows NT","proxy":{},"rotatable":false,"setWindowRect":true,"strictFileInteractability":false,"takes
HeapSnapshot":true,"takesScreenshot":true,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unexpectedAlertBehaviour":"ignore","version":"78.0.3904.108","webStorageEnabled":true}}]

**Session info from 2 branch**

Google[{"id":"05a769b805cfd397b431454227553cbd","capabilities":{"acceptInsecureCerts":false,"acceptSslCerts":false,"applicationCacheEnabled":false,"browserConnectionEnabled":false,"browserName":"chrome","chrome":{"chromedriverVersion":"78.0.3904.70 (edb9c9f3de0247fd91
2a77b7f6cae7447f6d3ad5-refs/branch-heads/3904@{#800})","userDataDir":"C:\\Users\\\AppData\\Local\\Temp\\scoped_dir24112_806264369"},"cssSelectorsEnabled":true,"databaseEnabled":false,"goog:chromeOptions":{"debuggerAddress":"localhost:54309"},"handlesAlerts":t
rue,"hasTouchScreen":false,"javascriptEnabled":true,"locationContextEnabled":true,"mobileEmulationEnabled":false,"nativeEvents":true,"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platform":"Windows NT","proxy":{},"rotatable":false,"setWindowRect":true,
"strictFileInteractability":false,"takesHeapSnapshot":true,"takesScreenshot":true,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unexpectedAlertBehaviour":"ignore","version":"78.0.3904.108","webStorageEnabled":true}},{"id":"564600231a0f742fdd0c185237d8d1e
8","capabilities":{"acceptInsecureCerts":false,"acceptSslCerts":false,"applicationCacheEnabled":false,"browserConnectionEnabled":false,"browserName":"chrome","chrome":{"chromedriverVersion":"78.0.3904.70 (edb9c9f3de0247fd912a77b7f6cae7447f6d3ad5-refs/branch-heads/3904
@{#800})","userDataDir":"C:\\Users\\\AppData\\Local\\Temp\\scoped_dir21940_1192021783"},"cssSelectorsEnabled":true,"databaseEnabled":false,"goog:chromeOptions":{"debuggerAddress":"localhost:54307"},"handlesAlerts":true,"hasTouchScreen":false,"javascriptEnable
d":true,"locationContextEnabled":true,"mobileEmulationEnabled":false,"nativeEvents":true,"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platform":"Windows NT","proxy":{},"rotatable":false,"setWindowRect":true,"strictFileInteractability":false,"takesHeap
Snapshot":true,"takesScreenshot":true,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unexpectedAlertBehaviour":"ignore","version":"78.0.3904.108","webStorageEnabled":true}}]
    Then the title is "Google"
√ Testing if the page title equals 'Google' (9ms)
    And the Google search form exists
√ Testing if element <input[name="q"]> is visible (27ms)

  @google @google.second
  Scenario: Searching Google again
    Given I open Google`s search page
Google[{"id":"05a769b805cfd397b431454227553cbd","capabilities":{"acceptInsecureCerts":false,"acceptSslCerts":false,"applicationCacheEnabled":false,"browserConnectionEnabled":false,"browserName":"chrome","chrome":{"chromedriverVersion":"78.0.3904.70 (edb9c9f3de0247fd91
2a77b7f6cae7447f6d3ad5-refs/branch-heads/3904@{#800})","userDataDir":"C:\\Users\\\AppData\\Local\\Temp\\scoped_dir24112_806264369"},"cssSelectorsEnabled":true,"databaseEnabled":false,"goog:chromeOptions":{"debuggerAddress":"localhost:54309"},"handlesAlerts":t
rue,"hasTouchScreen":false,"javascriptEnabled":true,"locationContextEnabled":true,"mobileEmulationEnabled":false,"nativeEvents":true,"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platform":"Windows NT","proxy":{},"rotatable":false,"setWindowRect":true,
"strictFileInteractability":false,"takesHeapSnapshot":true,"takesScreenshot":true,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unexpectedAlertBehaviour":"ignore","version":"78.0.3904.108","webStorageEnabled":true}},{"id":"564600231a0f742fdd0c185237d8d1e
8","capabilities":{"acceptInsecureCerts":false,"acceptSslCerts":false,"applicationCacheEnabled":false,"browserConnectionEnabled":false,"browserName":"chrome","chrome":{"chromedriverVersion":"78.0.3904.70 (edb9c9f3de0247fd912a77b7f6cae7447f6d3ad5-refs/branch-heads/3904
@{#800})","userDataDir":"C:\\Users\\\AppData\\Local\\Temp\\scoped_dir21940_1192021783"},"cssSelectorsEnabled":true,"databaseEnabled":false,"goog:chromeOptions":{"debuggerAddress":"localhost:54307"},"handlesAlerts":true,"hasTouchScreen":false,"javascriptEnable
d":true,"locationContextEnabled":true,"mobileEmulationEnabled":false,"nativeEvents":true,"networkConnectionEnabled":false,"pageLoadStrategy":"normal","platform":"Windows NT","proxy":{},"rotatable":false,"setWindowRect":true,"strictFileInteractability":false,"takesHeap
Snapshot":true,"takesScreenshot":true,"timeouts":{"implicit":0,"pageLoad":300000,"script":30000},"unexpectedAlertBehaviour":"ignore","version":"78.0.3904.108","webStorageEnabled":true}}]

**As you can see, cucumber use the same session for their branches**

## Expected Behavior

Need to paralyze feature files
**Different sessions for branches**

## Current Behavior

Scenarios paralyzing but not feature files
**Same session for branches**

## Steps to Reproduce (for bugs)

    "test": "mkdirp report && cucumber-js features/**/*.feature --require cucumber.conf.js --require-module @babel/register --require step-definitions --parallel 2 --format node_modules/cucumber-pretty --format json:report/cucumber_report.json",

## Your Environment
cucumber 6.0.5
nightwatch 1.3.1
"@babel/core": "^7.7.2",
"@babel/preset-env": "^7.7.1",
"@babel/register": "^7.7.0",

Window 10
Linux 16.04
node v12.13.0
# Context
* Cucumber version: 6.0.5
* Node version: 13.1.0,
* Operating system: macOS 10.13.3 / same on circleci image node 13.1.0

# Notice
This may be an issue on cucumber-expression, but I'm not sure.

# Description
With cucumber-js version 5.1.0, the regexp ```([^"]*)``` was detected as an empty string if in the feature file it was empty.
As of version 6, it's ```null```.

# Example
1. Let's define the step:
```
const {When} = require('cucumber');

When(/^The value equals "([^"]*)"$/, async function(value) {
  console.log(value);
});
```
2. Let's call the step:
```The value equals ""```
3. The console output is:
```null```
whereas it should just log an empty string.
### Problem
I have a setup with cucumber and webdriverio and I use a BeforeAll hook to connect to the webdriver server.
I also have a command that runs cucumber in dry-run mode just to print out snippets for the missing step definitions. But when I run that command, the BeforeAll hook still executes and it tries to connect to the webdriver server, which of course fails if I'm not running the server and I never get to see my snippets.

### Replicate
First create these two files
**package.json**
```json
{
  "scripts": {
    "start": "cucumber-js --dry-run --require hooks.js"
  },
  "devDependencies": {
    "cucumber": "^6.0.5"
  }
}
```
**hooks.js**
```js
const BeforeAll = require('cucumber').BeforeAll;
BeforeAll(function() {
  console.log('BeforeAll executes');
});
```
Then run these two commands
```
$ npm install
...
$ npm start -s
BeforeAll executes


0 scenarios
0 steps
0m00.000s
```
I would expect the BeforeAll hook to never execute

### Environment
|Software|Version|
|-|-|
| Ubuntu | 18.04.2|
|npm|6.12.0|
|cucumber-js|6.0.5|

I get the same result with `yarn 1.19.1`

### Workaround
In this case connecting to the webdriver server in the world constructor does not work (or not very well at least) since the world constructor is strictly synchronous and I want to run webdriverio in async mode.
My best workaround is setting an environment variable in the script command and check if this is set in the hook and just return if it is.

Cucumber version: 6.0.3

Is there a way to retry a scenario when a specified expection is thrown? Perhaps grabbing the exception from the testCase in after hooks and then triggering a retry. If so how can the exception be grabbed and subsequently how can the retry be triggered?