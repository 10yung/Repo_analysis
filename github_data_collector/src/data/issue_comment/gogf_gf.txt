是否模板添加for支持
需要泛解析的http,https支持,项目需要判断域名\二级域名情况后提供服务.但是不知道会有多少,有哪些域名.DNS解析的也是泛解析。
https://github.com/gogf/gf/blob/bc53f265af35efd1c70f27cc6ef233f92dd06447/util/gconv/gconv.go#L382

```
	str = "-0xFF"
	fmt.Println(gconv.Int(str))    //  打印是0 期望是-255
	fmt.Println(int64(-0xFF))    //  打印是-255
```


目前`MySQL/MariaDB`有着非常完美的单元测试用例，期望增加对`mssql`, `pgsql`, `sqlite`的单元测试方案。
<!-- Please answer these questions before submitting your issue. Thanks! -->

### 1. What version of `Go` and system type/arch are you using?
go1.13.5 darwin/amd64
<!-- 
Please paste the output of command `go version` from your terminal.
What expect to see is like: `go 1.12, linux/amd64`
-->


### 2. What version of `GoFrame` are you using?
v1.11.2 
<!-- You can find the GF version from your `go.mod`, or from the `version.go` in `GF` -->


### 3. Can this issue be reproduced with the latest release?



### 4. What did you do?
代码操作数据库
<!--
If possible, provide a copy of shortest codes for reproducing the error.
A complete runnable program is best.
-->



### 5. What did you expect to see?



### 6. What did you see instead?




环境: 
CentOS, MySQL 5.7, Go 1.13.5

Gogf 版本:
1.11.2

问题: 
通过 .All() 查询不出来 time 类型的数据。

代码段:
```go
package main

import (
	"fmt"
	"github.com/gogf/gf/frame/g"
)

func main()  {
	db := g.DB()
	ref, err := db.Table("tb_timer").Limit(1).All()
	fmt.Printf("ref: %+v, err: %+v\n", ref, err)
}
```

MySQL 数据结构:
```
-- MySQL dump 10.13  Distrib 5.7.27, for Linux (x86_64)
--
-- Host: localhost    Database: phc
-- ------------------------------------------------------
-- Server version	5.7.27-log

/*!40101 SET @OLD_CHARACTER_SET_CLIENT=@@CHARACTER_SET_CLIENT */;
/*!40101 SET @OLD_CHARACTER_SET_RESULTS=@@CHARACTER_SET_RESULTS */;
/*!40101 SET @OLD_COLLATION_CONNECTION=@@COLLATION_CONNECTION */;
/*!40101 SET NAMES utf8 */;
/*!40103 SET @OLD_TIME_ZONE=@@TIME_ZONE */;
/*!40103 SET TIME_ZONE='+00:00' */;
/*!40014 SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0 */;
/*!40014 SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0 */;
/*!40101 SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='NO_AUTO_VALUE_ON_ZERO' */;
/*!40111 SET @OLD_SQL_NOTES=@@SQL_NOTES, SQL_NOTES=0 */;

--
-- Table structure for table `tb_timer`
--

DROP TABLE IF EXISTS `tb_timer`;
/*!40101 SET @saved_cs_client     = @@character_set_client */;
/*!40101 SET character_set_client = utf8 */;
CREATE TABLE `tb_timer` (
  `id` int(11) NOT NULL AUTO_INCREMENT COMMENT 'ID',
  `uid` int(11) NOT NULL COMMENT 'ID',
  `time_start` time NOT NULL,
  `time_end` time NOT NULL,
  `updated_at` int(11) NOT NULL,
  PRIMARY KEY (`id`)
) ENGINE=InnoDB AUTO_INCREMENT=27 DEFAULT CHARSET=utf8mb4;
/*!40101 SET character_set_client = @saved_cs_client */;

--
-- Dumping data for table `tb_timer`
--

LOCK TABLES `tb_timer` WRITE;
/*!40000 ALTER TABLE `tb_timer` DISABLE KEYS */;
INSERT INTO `tb_timer` VALUES (9,4,'00:00:00','23:59:59',1575512626),(10,3,'11:15:00','12:15:00',1575515710),(13,3,'10:41:14','11:14:59',1575517306),(14,5,'00:00:24','23:59:24',1576204866),(23,9,'00:00:00','23:59:59',1578981492),(26,8,'14:08:30','15:08:30',1578982112);
/*!40000 ALTER TABLE `tb_timer` ENABLE KEYS */;
UNLOCK TABLES;
/*!40103 SET TIME_ZONE=@OLD_TIME_ZONE */;

/*!40101 SET SQL_MODE=@OLD_SQL_MODE */;
/*!40014 SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS */;
/*!40014 SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS */;
/*!40101 SET CHARACTER_SET_CLIENT=@OLD_CHARACTER_SET_CLIENT */;
/*!40101 SET CHARACTER_SET_RESULTS=@OLD_CHARACTER_SET_RESULTS */;
/*!40101 SET COLLATION_CONNECTION=@OLD_COLLATION_CONNECTION */;
/*!40111 SET SQL_NOTES=@OLD_SQL_NOTES */;

-- Dump completed on 2020-01-14 14:37:56
```

查询结果:
```
2020-01-14 14:31:26.912 [DEBU] [198 ms] SELECT * FROM `tb_timer` LIMIT 1
ref: [map[id:9 time_end: time_start: uid:4 updated_at:1575512626]], err: <nil>
```
![image](https://user-images.githubusercontent.com/14868140/72200305-db6d7d00-3482-11ea-951d-b94d5a70bf72.png)

1.config.toml中能够支持session驱动配置
`SessionStorage = xxx `