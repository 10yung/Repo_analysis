- Add php 7.4 to matrix 
- Using actions/cache for caching composer dependencies
requires mongodb version V4.0 or more and deployment replica sets or sharded clusters
transaction support create/insert,update,delete,etc operation
Supports infinite-level nested transactions, but outside transaction rollbacks do not affect the commit of inside transactions
```
DB::beginTransaction();
DB::collection('users')->where('name', 'klinson')->update(['age' => 18]);
DB::transaction(function () {
    DB::collection('users')->where('name', 'mongodb')->update(['age' => 30]);
});
DB::rollBack();
```
Hi,
I am a MongoDB rookie and need your help. 
I have 2 simple models:

Model merchant
<img width="414" alt="Bildschirmfoto 2020-01-05 um 21 03 27" src="https://user-images.githubusercontent.com/3251780/71785352-dc278e80-2ffe-11ea-8e2a-3796c19aeec8.png">


Controller
<img width="444" alt="Bildschirmfoto 2020-01-05 um 21 04 47" src="https://user-images.githubusercontent.com/3251780/71785369-04af8880-2fff-11ea-9b67-cf119996aa51.png">



collection merchants
<img width="693" alt="Bildschirmfoto 2020-01-05 um 20 58 36" src="https://user-images.githubusercontent.com/3251780/71785302-3411c580-2ffe-11ea-83f7-c46a1790cd8a.png">

collection comments
<img width="606" alt="Bildschirmfoto 2020-01-05 um 20 58 44" src="https://user-images.githubusercontent.com/3251780/71785304-37a54c80-2ffe-11ea-897d-2afa708bf310.png">


If I only want to query the merchant, I don't have any problems, but if I want to use hasMany (relation to comments) it will not work

**Illuminate\Database\Eloquent\Collection {#371 ▼
  #items: []
}**

Hope you can help me - many thanks



i'm trying to run this query but it doesn't work when element not exist and its message is :

Query: 
             $result = $this->where('_id', $param['brandId'])->where('projects._id', $param['_id'])->update(["projects.$.thumb" => $param['thumb'] ], ['upsert' => true]);

Or
$result = $this->raw(function($collection) use($param){
                return $collection->updateOne(['_id' => $param['brandId'] , "projects" => ['$elemMatch'=>["_id"=>$param['_id']] ] ],
                ['$set' => ["projects.$.thumb" => $param['thumb'] ]],[ 'upsert' => true ,"new" => true ]);

Message:

{message: "The positional operator did not find the match needed from the query.",…}
message: "The positional operator did not find the match needed from the query."
exception: "MongoDB\Driver\Exception\BulkWriteException"
file: "C:\host\iBBi-Website4.1\vendor\mongodb\mongodb\src\Operation\Update.php"
line: 179
trace: [{file: "C:\host\iBBi-Website4.1\vendor\mongodb\mongodb\src\Operation\Update.php", line: 179,…},…]



How i can achieve sort data by given array using orderBy here ?
$prd_ids = [5,3,4]; 
$product_data = Product::where('status',1)->orderBy('avg_rev',$prd_ids);

assume I load a model with only id and name field. Is there any way to load another field (that was not a relation.)
"laravel/lumen-framework": "5.5.*",
"jenssegers/mongodb": "^3.2",

###Lumen

BadMethodCallExceptionCall to undefined method Jenssegers\Mongodb\Query\Builder::getCategoriesAttribute()
--
in Builder.php line 2483
at Builder->__call('getCategoriesAttribute', array(null))in Builder.php line 1150
at Builder->__call('getCategoriesAttribute', array(null))in Builder.php line 1286
at Builder->__call('getCategoriesAttribute', array(null))in Model.php line 1477
at Model->__call('getCategoriesAttribute', array(null))in Model.php line 433
at Model->__call('getCategoriesAttribute', array(null))in HasAttributes.php line 438
at Model->mutateAttribute('categories', null)in HasAttributes.php line 450
at Model->mutateAttributeForArray('categories', null)in HasAttributes.php line 109
at Model->attributesToArray()in Model.php line 189
at Model->attributesToArray()in Model.php line 977
at Model->toArray()in Model.php line 1006
at Model->jsonSerialize()in Model.php line 990
at Model->toJson()in Response.php line 74
at Response->morphToJson(object(User))in Response.php line 35
at Response->setContent(object(User))in Response.php line 206
at Response->__construct(object(User))in RoutesRequests.php line 431
at Application->prepareResponse(object(User))in RoutesRequests.php line 373
at Application->callControllerCallable(array(object(AccountController), 'loginUser'), array())in RoutesRequests.php line 339
at Application->callLumenController(object(AccountController), 'loginUser', array(true, array('uses' => 'App\\Http\\Controllers\\AccountController@loginUser'), array()))in RoutesRequests.php line 313
at Application->callControllerAction(array(true, array('uses' => 'App\\Http\\Controllers\\AccountController@loginUser'), array()))in RoutesRequests.php line 275
at Application->callActionOnArrayBasedRoute(array(true, array('uses' => 'App\\Http\\Controllers\\AccountController@loginUser'), array()))in RoutesRequests.php line 260
at Application->handleFoundRoute(array(true, array('uses' => 'App\\Http\\Controllers\\AccountController@loginUser'), array()))in RoutesRequests.php line 160
at Application->Laravel\Lumen\Concerns\{closure}(object(Request))
at call_user_func(object(Closure), object(Request))in Pipeline.php line 52
at Pipeline->Laravel\Lumen\Routing\{closure}(object(Request))in LogRequest.php line 24
at LogRequest->handle(object(Request), object(Closure))in Pipeline.php line 149
at Pipeline->Illuminate\Pipeline\{closure}(object(Request))
at call_user_func(object(Closure), object(Request))in Pipeline.php line 32
at Pipeline->Laravel\Lumen\Routing\{closure}(object(Request))in Request.php line 29
at Request->handle(object(Request), object(Closure))in Pipeline.php line 149
at Pipeline->Illuminate\Pipeline\{closure}(object(Request))
at call_user_func(object(Closure), object(Request))in Pipeline.php line 32
at Pipeline->Laravel\Lumen\Routing\{closure}(object(Request))in Pipeline.php line 102
at Pipeline->then(object(Closure))in RoutesRequests.php line 410
at Application->sendThroughPipeline(array('App\\Http\\Middleware\\Request', 'App\\Http\\Middleware\\LogRequest'), object(Closure))in RoutesRequests.php line 166
at Application->dispatch(null)in RoutesRequests.php line 107
at Application->run()


PR with implementation - https://github.com/jenssegers/laravel-mongodb/pull/1859
Github Actions is released in november 2019 and now is faster and flexible than travis ci
I propose to use Github Actions and Travis CI both and leave only Github Actions in future
@jenssegers, library has pending PR's waiting review one month and more, old docs, broken ci in travis, many issues without answers for community. I propose to find new maintainers from community, if you don't have enough time to maintance this library. Any can fork and improve separately but I think that community can improve this library if maintainers will have enough time for maintance.

With regards, Smolevich

Hi there!  
I know this is probably isn't a related question but since we using this package we can't really take advantage of sqlite for testing so my question is that is there any possible way to have or implement an in-memory database testing for mongodb?