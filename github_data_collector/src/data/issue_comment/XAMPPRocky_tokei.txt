Tokei isn't counting files (with no extension) as shell whose shebang is `#!/bin/bash`. It's indeed not accounted for in [`get_filetype_from_shebang`](https://github.com/XAMPPRocky/tokei/blob/2c41fdb182b7ba1bcc7c9d1cfc0de569538e7f0d/src/language/language_type.hbs.rs#L458).

Fwiw, the best reference I know of for "find all shell [and other] files" is `ack`, [whose heuristic is](https://beyondgrep.com/documentation/):

Has extensions: .sh .bash .csh .tcsh .ksh .zsh .fish, or first line matches `/^#!.*\b(?:ba|t?c|k|z|fi)?sh\b/`.
Is it possible to install Tokei with `yum`? Our CI machines only can use `yum` and not `dnf`. 
Currently we have `--files` which allows for outputting line counts per files but I'd like it per top level directory. Imagine `tokei --directories *` which would output summaries for lines for each provided directory.
Adds support for the Apache FreeMarker template language with `.ftl`, `.ftlh`, and `.ftlx` as associated file extensions.
The file extension 'y' is now associated to Yacc's source files and no
longer to Happy which I have no idea what language it is.

Signed-off-by: Li Peng <lipeng31@gmail.com>
This would be purely enhancement, but I would like a little color or extra formatting in the terminal output. I find it helps with looking quickly through an output personally. I'm not too sure exactly how I would color it. Possibly coloring the lines between the words and the lines different colors. Additionally, bolding the columns headers and languages.
As a followup to #290 it would be preferable if instead of text there was a display tokei running on a directory. This was previously done with asciiema but I no longer want to use this service, and would prefer an alternative.

Initially I thought of making a gif however making a gif that is high quality of tokei running would take up a relatively tremendous amount of space and I would want to avoid that both for when people clone the repo as well as when they download to view it on the GitHub README.

Video file formats would be small however they do not display inline on GitHub and to my knowledge there isn't a well supported gif like format that works across all browsers.
This is valid c code which effectively define a struct (example.c):

```c
/*\
 / comment
\*/
struct Point {
    int x;
    int y;
    int z;
};
```

tokei -vvv example.c

```
TRACE tokei::language::syntax] Start "/*"
TRACE tokei::language::language_type] /*\
TRACE tokei::language::language_type] Comment No.1
TRACE tokei::language::language_type] Was the Comment stack empty?: true
TRACE tokei::language::language_type] / comment
TRACE tokei::language::language_type] Comment No.2
TRACE tokei::language::language_type] Was the Comment stack empty?: false
TRACE tokei::language::language_type] \*/
TRACE tokei::language::language_type] Comment No.3
TRACE tokei::language::language_type] Was the Comment stack empty?: false
TRACE tokei::language::language_type] struct Point {
TRACE tokei::language::language_type] Comment No.4
TRACE tokei::language::language_type] Was the Comment stack empty?: false
TRACE tokei::language::language_type] int x;
TRACE tokei::language::language_type] Comment No.5
TRACE tokei::language::language_type] Was the Comment stack empty?: false
TRACE tokei::language::language_type] int y;
TRACE tokei::language::language_type] Comment No.6
TRACE tokei::language::language_type] Was the Comment stack empty?: false
TRACE tokei::language::language_type] int z;
TRACE tokei::language::language_type] Comment No.7
TRACE tokei::language::language_type] Was the Comment stack empty?: false
TRACE tokei::language::language_type] };
TRACE tokei::language::language_type] Comment No.8
TRACE tokei::language::language_type] Was the Comment stack empty?: false
-------------------------------------------------------------------------------
 Language            Files        Lines         Code     Comments       Blanks
-------------------------------------------------------------------------------
 C                       1            8            0            8            0
-------------------------------------------------------------------------------
 Total                   1            8            0            8            0
-------------------------------------------------------------------------------
```

So tokei seems to mistakenly think that the backslash `\` escapes the asterisk `*` and then the block comment is still open.

Similar issues for css, php, lua and maybe many others:

```css
/*\
 / cool
 / comment
\*/
* {
  color: red;
}
```

```php
<?php
/*\
 / cool
 / comment
\*/
echo "hello\n"
?>
```

```lua
--[[\ \cool\ \comment\ \]]
print("hello")
```

(all valid effective code)

It would be nice if tokei could parse .gitattributes and respect linguist-documentation rules.

E.g: tokei believes that the project [ANESE](https://github.com/daniel5151/ANESE) is written primarily in assembly, when it's actually written entirely in C++:

![DeepinScreenshot_select-area_20191016184732](https://user-images.githubusercontent.com/13710835/66949113-7225cb80-f045-11e9-82d0-65c4619cca7f.png)
_Onefetch is a tool that relies on tokei for language detection_

the part in particular:
```markdown
# Tests
A test file is required with language additions. The file should
contain every variant comments and quotes, as well as a comment
at the top of the file containing the manually verified lines,
code, comments, blanks e.g.
`// 39 lines 32 code 2 comments 5 blanks`. The comment should use
the syntax of the language you're testing. A good example of a
test file is [`tests/data/rust.rs`].
```
Currently for tests to successfully run, the top comment needs to have a specific format:
`X lines X code X comments X blanks`
Which to md file does not mention. I propose adding to the md file to specifically mention the required format of the top comment.