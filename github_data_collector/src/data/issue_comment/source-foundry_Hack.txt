Will get this merged this week and we should push a patch to npm so that this change is reflected in our web font CDN CSS.  Sorry for the delay!

_Originally posted by @chrissimpkins in https://github.com/source-foundry/Hack/pull/468#issuecomment-460354152_
I was attempting to patch Hack using `alt-hack`, however before I did so I wanted to make sure that a default `git clone` of this repo + a `make ttf` would work. Doesn't seem to be doing the trick. I checked out the `dev` branch and it seems to install fine from there, so not exactly sure what the issue is in the `master` branch that is causing it.

Here's the full output from a clean `git clone`/`make ttf` of the `master` branch:

```
./build-ttf.sh
Confirming that build dependencies are installed...

/usr/local/bin/fontmake
fontTools Python library identified
Starting build...

INFO:fontmake.font_project:Building TTF for Hack-Regular
INFO:ufo2ft:Pre-processing glyphs
INFO:ufo2ft.filters:Running DecomposeComponentsFilter on Hack-Regular
INFO:ufo2ft.filters:Running RemoveOverlapsFilter on Hack-Regular
INFO:ufo2ft.filters:Running CubicToQuadraticFilter on Hack-Regular
INFO:ufo2ft.filters.cubicToQuadratic:New spline lengths: 1: 4796, 2: 4109, 3: 519, 4: 85, 5: 15
INFO:ufo2ft:Building OpenType tables
INFO:fontmake.font_project:Saving master_ttf/Hack-Regular.ttf
INFO:fontmake.font_project:Building TTF for Hack-Bold
INFO:ufo2ft:Pre-processing glyphs
INFO:ufo2ft.filters:Running DecomposeComponentsFilter on Hack-Bold
INFO:ufo2ft.filters:Running RemoveOverlapsFilter on Hack-Bold
INFO:ufo2ft.filters:Running CubicToQuadraticFilter on Hack-Bold
INFO:ufo2ft.filters.cubicToQuadratic:New spline lengths: 1: 4605, 2: 4531, 3: 458, 4: 72, 5: 17, 6: 4, 7: 3
INFO:ufo2ft:Building OpenType tables
INFO:fontmake.font_project:Saving master_ttf/Hack-Bold.ttf
INFO:fontmake.font_project:Building TTF for Hack-Italic
INFO:ufo2ft:Pre-processing glyphs
INFO:ufo2ft.filters:Running DecomposeComponentsFilter on Hack-Italic
INFO:ufo2ft.filters:Running RemoveOverlapsFilter on Hack-Italic
INFO:ufo2ft.filters:Running CubicToQuadraticFilter on Hack-Italic
INFO:ufo2ft.filters.cubicToQuadratic:New spline lengths: 1: 5062, 2: 5211, 3: 531, 4: 94, 5: 13, 6: 1
INFO:ufo2ft:Building OpenType tables
INFO:fontmake.font_project:Saving master_ttf/Hack-Italic.ttf
INFO:fontmake.font_project:Building TTF for Hack-BoldItalic
INFO:ufo2ft:Pre-processing glyphs
INFO:ufo2ft.filters:Running DecomposeComponentsFilter on Hack-BoldItalic
INFO:ufo2ft.filters:Running RemoveOverlapsFilter on Hack-BoldItalic
INFO:ufo2ft.filters:Running CubicToQuadraticFilter on Hack-BoldItalic
INFO:ufo2ft.filters.cubicToQuadratic:New spline lengths: 1: 4902, 2: 5329, 3: 466, 4: 97, 5: 11, 6: 1
INFO:ufo2ft:Building OpenType tables
INFO:fontmake.font_project:Saving master_ttf/Hack-BoldItalic.ttf

Attempting DSIG table fixes with fontbakery...

master_ttf/Hack-Bold.ttf - successful DSIG table fix
master_ttf/Hack-BoldItalic.ttf - successful DSIG table fix
master_ttf/Hack-Italic.ttf - successful DSIG table fix
master_ttf/Hack-Regular.ttf - successful DSIG table fix

Attempting fstype fixes with fontbakery...

master_ttf/Hack-Bold.ttf - successful fstype fix
master_ttf/Hack-BoldItalic.ttf - successful fstype fix
master_ttf/Hack-Italic.ttf - successful fstype fix
master_ttf/Hack-Regular.ttf - successful fstype fix

Attempting ttfautohint hinting...

postbuild_processing/tt-hinting/Hack-Regular-TA.txt:3:1: invalid glyph name (0x204)
  uni0023 touch 0,1,2,3,18,19,20,21,22,23,24,25,26,27,28,31 x 0.25  @ 13
  ^
Unable to execute ttfautohint on the Hack-Regular variant set.  Build canceled.
make: *** [ttf] Error 1
```

Please let me know if you need anything else. I'm still running macOS 10.14.6.
### Problem

- Uppercase: the character for U+021A (Latin capital letter T with comma below) looks at the moment like U+0162 (Latin capital letter T with cedilla);
- Lowercase: the character for U+021B (Latin small letter t with comma below) looks at the moment like U+0163 (Latin small letter t with cedilla).

### Details

- Found on the Font Playground (https://sourcefoundry.org/hack/playground.html) on 2019-09-09, viewed with 'Chromium Version 76.0.3809.100 (Official Build) Built on Ubuntu' and 'Firefox Quantum 69.0 (64-bit)', running on Ubuntu 19.04 (64-bit);
- Relation to the Design Targets: non-ASCII, not subjective, multiple (all?) font-sizes, cross-platform.
- Evidence:

![image](https://user-images.githubusercontent.com/888491/64528233-3f7f0980-d308-11e9-8db0-f4e3e1a70fdb.png)

### Proposed Solution

I propose to have the "comma below" implemented like it has already been done for the related characters U+0218 (Latin capital letter S with comma below) and U+0219 (Latin small letter s with comma below).

### Context

The "with cedilla" version started to be used instead of the "with comma" by necessity, in the times before the "with comma" version was included into fonts and into Unicode.

This change would help align the 'Hack' font with Unicode by using glyphs which correspond to the descriptions of the character codes.

### References

See the References and External links from https://en.wikipedia.org/wiki/T-comma.
![paren](https://user-images.githubusercontent.com/46282492/63660802-18e2ae00-c7f3-11e9-9d02-d62ba6c4b2ce.PNG)

Windows 10, Visual Studio, 12pt, 90%

Parentheses are misaligned slightly when they are colorized.
In the above picture, it looks like the red parentheses popped up a little more.
I tried to build customized Hack (`dev` branch) with MinGW-w64 environment(I used **Git Bash** shell) but problem was same, and faced following errors:
```
In file included from hb-ft.cc:32:
hb-ft.h:34:10: fatal error: ft2build.h: No such file or directory
   34 | #include <ft2build.h>
      |          ^~~~~~~~~~~~

woff2sfnt.c: In function 'main':
woff2sfnt.c:189:33: error: 'O_BINARY' undeclared (first use in this function)
  189 |         setmode(fileno(stdout), O_BINARY);
      |                                 ^~~~~~~~
```
These errors don't stop building, but it seems that there are some compatible issues with mingw.

```
Attempting ttfautohint hinting...
Warning: Option `-w G' is deprecated!  Use option `-a qsq' instead
This font is not a valid font in SFNT format with TrueType outlines.
In particular, CFF outlines are not supported.
Unable to execute ttfautohint on the Hack-Regular variant subset.  Build canceled.
```
This error stops building and occurs while attempting hinting to **subset** fonts.

![pic1](https://user-images.githubusercontent.com/46282492/62445841-37c5c580-b79c-11e9-9114-dde04f7ee44e.PNG)

![11](https://user-images.githubusercontent.com/46282492/62446428-a7888000-b79d-11e9-8315-4c915a453fdc.PNG)

In IntelliJ IDEA, left bracket (`[`) is thicker than right bracket in 14pt. (`]`) I don't have so much knowledge about font rendering, but I'm guessing the cause is area `2` is darker than area `1`.

![bracket](https://user-images.githubusercontent.com/46282492/62455522-86ca2580-b7b1-11e9-9b0c-6c513e9fe246.PNG)
![bckt](https://user-images.githubusercontent.com/46282492/62455526-8893e900-b7b1-11e9-8105-5a93353f5a90.PNG)

I've tested in VS code and result was same in there.

**Environment:**
- Windows 10 1903
- 1920 * 1080 screen
In many monospaced fonts, the shape of the curly single quotes (U+2018, U+2019) and curly double quotes (U+201c, U+201d) is the same as the shape for the comma.  It's the case for DejaVu Sans Mono (upon which Hack is based), Source Code Pro, inconsolata, and others.

In Hack, however, the comma (and the semi-colon) are very roundish, but the curly quotes keep the squareness of DejaVu Sans Mono.

Examples:

![quotes-dejavu-sans-mono](https://user-images.githubusercontent.com/39868/62337459-bb349d80-b4a2-11e9-8cd6-e89d0d238fa6.png)

![quotes-inconsolata](https://user-images.githubusercontent.com/39868/62337462-be2f8e00-b4a2-11e9-8e4d-996de272edbc.png)

![quotes-source-code-pro](https://user-images.githubusercontent.com/39868/62337465-c12a7e80-b4a2-11e9-8eb2-6d0e8a6f5ed8.png)

![quotes-hack](https://user-images.githubusercontent.com/39868/62337471-c4256f00-b4a2-11e9-8ce5-e2498b65f3a4.png)

U+260A: ☊
U+260B:  ☋
These symbols are used to denote the ascending and descending nodes in orbital mechanics, and I would love to have them in hack.
I'd like to have a memory icon, however the one from [Font Awesome](https://fontawesome.com/icons/memory?style=solid) (\uf538) results in different glyph. Adding this icon would be appreciated :)
This is a useful character for representing a space in a visible way.  I'd love to have it in Hack.