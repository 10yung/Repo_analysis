


I am trying to figure out how to use `RetransmitMult` configuration field in `TransmitLimitedQueue` struct.
 I have three nodes and send broadcast message from one of them. As I see when `RetransmitMult` is equal to 1, only one node receive the message. 
Is this a valid behavior? How to send broadcast message to all nodes in cluster?
I don't find a way to set handler on user message. Checked the document and source code, don't see a suitable public method I can call.

I can send user message via `SentTo`, `SendToUDP`, `SendToTCP`, `SendBestEffort`, and `SendReliable` but I don't find a way to set handler for them, expecting something like `SetUserMessageHandler`

[github.com/hashicorp/go-msgpack](https://github.com/hashicorp/go-msgpack) is an unnecessary fork of actively maintained [github.com/ugorji/go](https://github.com/ugorji/go).  
I recommend to use the latter.

_memberlist_ successfully builds and passes all tests with imports replaced from "github.com/hashicorp/go-msgpack" to "github.com/ugorji/go".

Please consider switching to "github.com/ugorji/go".
~~~~
--- FAIL: TestShuffleNodes (0.00s)
    util_test.go:140: should not match
~~~~

See full build log here: https://buildd.debian.org/status/fetch.php?pkg=golang-github-hashicorp-memberlist&arch=all&ver=0.1.5-1&stamp=1569520738&raw=0
Consul uses an outdated version of this dependency. Latest versions have deliberately broken the public API by removing `dns.ErrTruncated`. See https://github.com/miekg/dns/issues/814.

This PR is part of a batch of PRs to update this module in the dependencies of hashicorp/consul, so it can be updated cleanly there.
If no explicit advertiseAddr is specified and we're bound
to a wildcard address, we don't want to advertise the wildcard
address if it's '::'.

Instead of checking for 0.0.0.0 use the Go stdlib to select
for all possible wild card addresses