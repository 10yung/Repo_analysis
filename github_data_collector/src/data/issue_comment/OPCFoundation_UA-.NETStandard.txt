I observed that I get the **BadCertificateTimeInvalid** error when I have at LDS side the US date format M/d/yyyy and at OPC UA server side I have UK date format dd/MM/yyyy.
Both certificate were generated automatically, I was not using any tool to generate certificates.
Most likely it is not a real issue.
PS: Both LDS (https://github.com/OPCFoundation/UA-LDS) and OPC UA Server (https://github.com/OPCFoundation/UA-.NETStandard) are from OPC Foundation git.
BR Rudo
fix #761 
-remove build option for netstandard1.3
-unify csproj settings
-switch unit test server init to silent mode, or old certs make tests hang
I download the UA-.NETStandard and build the opc ua server,

I want to create two account user,One is admin(read/write), another is user(only read) .

if two user login admin and user in same time.

one will show all nodeid level read/write, another will show nodeid level read only.

how to do that like siemens opc ua server?
Hi, 

Is there a way to know how many sessions exist already ? if so, can I close those sessions ? 
occasionally i will receive a BadToManySessions exception when trying to create a new session. 

`var endpointConfiguration = EndpointConfiguration.Create(config);
                var endpoint = new ConfiguredEndpoint(null, (EndpointDescription)selectedEndpoint, endpointConfiguration);

 session = await Session.Create(config, endpoint, false, "c#Client", 6000, new UserIdentity(new AnonymousIdentityToken()), null);`

Thanks in advance. 


I am encountering an issue with DataAccessClient sample. After connection with at least one monitored item, when reconnecting and try monitoring any items i get the following exception:

![image](https://user-images.githubusercontent.com/40956128/71641032-69808100-2c95-11ea-8769-31aa18d79ae1.png)

Is this known issue? How do you clean up the monitored data so when connecting again you can add the items or when reconnecting for monitored data to remain there and continue to be monitored?
Hi,

I would like to know how to find out all the node ids available on a server as fast as possible.

I've tried the Sample Console clients and have a few questions:

1. Why does the BrowseAllVariables() for the NetCoreComplexClient take so long to find the nodes for some servers (e.g. opc.tcp://opcuaserver.com:48484), but is quick for a sample server running on my local host?
https://github.com/OPCFoundation/UA-.NETStandard/blob/master/SampleApplications/Samples/NetCoreComplexClient/Program.cs

2. What is this code doing?

```
 ReferenceDescriptionCollection references;

            Byte[] continuationPoint;



            references = session.FetchReferences(ObjectIds.ObjectsFolder);



            session.Browse(

                null,

                null,

                ObjectIds.ObjectsFolder,

                0u,

                BrowseDirection.Forward,

                ReferenceTypeIds.HierarchicalReferences,

                true,

                (uint)NodeClass.Variable | (uint)NodeClass.Object | (uint)NodeClass.Method,

                out continuationPoint,

                out references);



            Console.WriteLine(" DisplayName, BrowseName, NodeClass");

            foreach (var rd in references)

            {

                Console.WriteLine(" {0}, {1}, {2}", rd.DisplayName, rd.BrowseName, rd.NodeClass);

                ReferenceDescriptionCollection nextRefs;

                byte[] nextCp;

                session.Browse(

                    null,

                    null,

                    ExpandedNodeId.ToNodeId(rd.NodeId, session.NamespaceUris),

                    0u,

                    BrowseDirection.Forward,

                    ReferenceTypeIds.HierarchicalReferences,

                    true,

                    (uint)NodeClass.Variable | (uint)NodeClass.Object | (uint)NodeClass.Method,

                    out nextCp,

                    out nextRefs);



                foreach (var nextRd in nextRefs)

                {

                    Console.WriteLine("   + {0}, {1}, {2}", nextRd.DisplayName, nextRd.BrowseName, nextRd.NodeClass);

                }

            }
```

Is it getting all the nodes then iterating through the child nodes?

3. I am using Session.ReadValue(), but I am getting this error:
"BadAttributeIdInvalid"

here's my code:

```
        public List<DataValue> ReadValue(IList<INode> nodes)
        {
            var result = new List<DataValue>();
            var nodeIds = nodes.Select(x => ExpandedNodeId.ToNodeId(x.NodeId, _session.NamespaceUris)).ToList();
            ReadValueId itemToRead = new ReadValueId();
            foreach (var item in nodeIds)
            {
                result.Add(_session.ReadValue(item));
            }
            return result;
        }
```

Sorry for all the questions and thank you for your help!
We've been doing research for a OPC UA PubSub PoC at my company. During the research, we found that this repository contains a stale branch called `prototyping-pubsub`, containing an implementation of the specification. While I've not been able to verify how complete this implementation is exactly, it does contain working (albeit slightly buggy) samples for showing off the PubSub functionality.

Considering that there are currently no open PRs on this branch, I've been wondering if there are any plans of merging this functionality into master, and whether there is any place where we can actually track that effort? It seems to me like a lot of work has gone into the current state of the implementation of that branch, and it would seem like a shame to see it go to waste.

Does anybody have any info on this?
see Part6, 5.4.2.10 NodeId
Currently the JSON encoding of the NodeId is not quite right:
```
{
  "NodeId": {
    "Id": "i=2345",
    "Uri": "http://www.opcfoundation.org/DemoServer/"
  }
}
{
  "NodeId": {
    "Id": "s=theNode",
    "Uri": "http://www.opcfoundation.org/DemoServer/"
  }
}
```
However, it should be encoded as:
```
{
  "NodeId": {
    "Id": 2345,
    "Namespace": "http://www.opcfoundation.org/DemoServer/"
  }
}
{
  "NodeId": {
    "IdType": 1,
    "Id": "theNode",
    "Namespace": "http://www.opcfoundation.org/DemoServer/"
  }
}
```
> 




Hi,
I am trying to read some historical data from a WinCC opc ua Server. 
Every read works fine (read real time values) but when i try to do a HistoryRead the results.HistoryData is always null with an statuscode of BadNoValues. i don't understand. 
when i do the same exercice with UAExpert read history values, i can retrieve data as good.  

ResponseHeader responseHeader = HistoryRead(
                rh,
                detailsO,
                TimestampsToReturn.Both,
                false,
                valuesToRead,
                out results,
                out diagnosticInfos);

            // verify that the server returned the correct number of results.
            
            ClientBase.ValidateResponse(results, valuesToRead);
            ClientBase.ValidateDiagnosticInfos(diagnosticInfos, valuesToRead);
I have an application in production. I receive unhandled exceptions coming out of library.

Description: The process was terminated due to an unhandled exception.
Exception Info: System.AccessViolationException
   at System.Reflection.Metadata.Ecma335.DocumentTableReader.GetName(System.Reflection.Metadata.DocumentHandle)
   at System.Diagnostics.StackTraceSymbols.GetSourceLineInfoWithoutCasAssert(System.String, IntPtr, Int32, IntPtr, Int32, Int32, Int32, System.String ByRef, Int32 ByRef, Int32 ByRef)
   at System.Diagnostics.StackFrameHelper.InitializeSourceInfo(Int32, Boolean, System.Exception)
   at System.Diagnostics.StackTrace.CaptureStackTrace(Int32, Boolean, System.Threading.Thread, System.Exception)
   at System.Diagnostics.StackTrace..ctor(System.Exception, Boolean)
   at System.Environment.GetStackTrace(System.Exception, Boolean)
   at System.Exception.GetStackTrace(Boolean)
   at Opc.Ua.ServiceResult.BuildExceptionTrace(System.Exception)
   at Opc.Ua.ServiceResult..ctor(System.Exception, UInt32, System.String, System.String, Opc.Ua.LocalizedText)
   at Opc.Ua.ServiceResult..ctor(System.Exception)
   at Opc.Ua.Client.Session.OnPublishComplete(System.IAsyncResult)
   at Opc.Ua.Bindings.ChannelAsyncOperation`1[[System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089]].<InternalComplete>b__23_0()
   at System.Threading.Tasks.Task.Execute()
   at System.Threading.ExecutionContext.RunInternal(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)
   at System.Threading.ExecutionContext.Run(System.Threading.ExecutionContext, System.Threading.ContextCallback, System.Object, Boolean)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(System.Threading.Tasks.Task ByRef)
   at System.Threading.Tasks.Task.ExecuteEntry(Boolean)
   at System.Threading.ThreadPoolWorkQueue.Dispatch()