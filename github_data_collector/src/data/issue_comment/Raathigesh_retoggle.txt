Thank you for this project, I absolutely love the simplicity of hook-based knobs! I would like to be able to use this to debug different components simultaneously. I tried first by naively attaching a non-portal `Inspector` to each component I want to inspect but then found that hooks begin to mix between them. 

Is this usage supported, in the roadmap or intended at all?
```
create-react-app test-project
cd test-project
yarn add retoggle
```
then import retoggle somewhere in the app
```
yarn build
serve -s build
```

it return an error:
```
Uncaught TypeError: Super expression must either be null or a function, not undefined
    at index.js:6135
    at index.js:6134
    at Object.<anonymous> (index.js:6124)
    at t (index.js:5602)
    at Object.<anonymous> (index.js:8467)
    at t (index.js:5602)
    at Object.<anonymous> (index.js:7206)
    at t (index.js:5602)
    at Object.<anonymous> (index.js:6821)
    at t (index.js:5602)
```

these are the two lines i added to a new CRA2 template:
```
import React from "react";
import { Inspector } from "retoggle";
//...
return (...
<Inspector usePortal={true} />
)
//...
```

It's quite hard to work with when you need to collapse and uncollapse this thing all the time if you have some UI on the right side that you want to interact with.

Also, make its `z-index 999999999999` or something like that so it overlaps all possible UI in any scenario :)
# Tests

Does anybody know if there are testings under development in this repo?
Love the project so I'm sad to find out this does not work for me because it fails for me when building with `gatsby build`
> WebpackError: ReferenceError: window is not defined

but you can easily test it yourself with:

```js
// fail-retoggle.js
require('retoggle')
```
```ssh
node fail-retoggle.js
```

And get
> ReferenceError: window is not defined

I tried searching for references to `window` in this project but could not find any which confuses me. Anyone else bumping into this problem?
Are there any plans to be able to generate code? Would be cool to visually tweak a component and then grab and use that code in some way.