Hello all,

I've been loving SwiftyGif so far. When we implemented it, we noticed gif animations are playing at different speeds on iPad vs iPhone. Here's a few videos to showcase what I mean:

iPad:
https://trello-attachments.s3.amazonaws.com/5d8d55c6edf1901a536c38c8/5dc185b8b25a342a77c24f2e/4e2fd05eb07a1254ec5ed1179648e0b1/ipad-gifplayback.mp4

iPhone:
https://trello-attachments.s3.amazonaws.com/5d8d55c6edf1901a536c38c8/5dc185b8b25a342a77c24f2e/029961d6a5990c416ee0b79830e511a3/iPhone_gif_playback.mp4

Any ideas about how to fix this?
Trying to load a gif file to start and stop animating it but every time showing invalidFileName error but my file name was similar to the gif file. I tried renaming the file couple of time but it is not accepting anything even though the name matches the ".gif file". Please help.
I found a simple to reproduce logic bug in version 5.2.0

gifImage = try! UIImage(gifName: "animated.gif")
imageView.setGifImage(gifImage, loopCount: 0)
let index = isSelected ? gifImage.framesCount() - 2 : 0
imageView.showFrameAtIndex(index)

expected behavior: see last frame of image without animation
actual behavior: The displayed gif is animated continuously

I have to show a gif in iOS app launch. This is my piece of code, it is working fine in iOS 12, but app is crashing on launch in ios13.

let logoGifImageView: UIImageView = {
        guard let gifImage = try? UIImage(gifName: "abc.gif") else {
            return UIImageView()
        }
        return UIImageView(gifImage: gifImage, loopCount: 1)
    }()

In pod file, I have added SwiftGif like this:  pod 'SwiftyGif'
Can we get time of animation for gif?
I am using this library and need time.
if any one know tell me :D <3 
For the life of me I can't get the GIF to display. Is there something I'm missing here?

              `var outgoingMessageView: UIImageView!

            outgoingMessageView = UIImageView(frame:
                CGRect(x: llamaView.frame.maxX - 50,
                       y: llamaView.frame.minY + 75,
                       width: bubbleImageSize.width,
                       height: bubbleImageSize.height))
            outgoingMessageView.delegate = self

            if textIsValidURL == true {
                print("URL is valid")
                outgoingMessageView.image = bubbleImage
                let maskView = UIImageView(image: bubbleImage)
                maskView.frame = outgoingMessageView.bounds
                outgoingMessageView.mask = maskView
                outgoingMessageView.frame.origin.y = llamaView.frame.minY - 25
                let url = URL(string: text)
                outgoingMessageView.setGifFromURL(url, manager: .defaultManager, loopCount: -1, showLoader: true)
            } else {
                outgoingMessageView.image = bubbleImage
            }            
            // Set the animations
            label.animation = "zoomIn"
            //outgoingMessageView.animation = "zoomIn"
            
            // Add the Subviews
            view.addSubview(outgoingMessageView)
            print("outgoingMessageView added")`

The delegate lets me know it runs successfully via:

gifDidStart
gifURLDidFinish

Checking outgoingMessageView.isAnimatingGif() tells me it's still running.
Checking outgoingMessageView.isDisplayedInScreen(outgoingMessageView) tells me it's not being displayed

It "finishes" almost immediately, but it's the same in your example project, yet the gif still loops and displays in your project. I've changed loop counts, imageviews, not running via a mask as I intended and instead just a UIImageView, changed the GIF urls, all to no avail. Help!

Using the latest SwiftyGIF version
Hi @kirualex 

Could you check with branch. I tried to refactor to make a single CADisplayLink. It still required some work, but for now it works weird. Gifs animated too fast and it takes a lot of CPU usage.
Could check why it's happening?
### Steps to reproduce

1. create `UIImage` with `UIImage(gifName:)` from a local GIF file bundled in project
1. create `UIImageView` and set GIF with `imageView.setGifImage(gifImage, manager: SwiftyGifManager.defaultManager, loopCount: 1)`
1. play GIF animation once with `imageView.startAnimatingGif()`
1. wait until animation completes
1. force playing GIF animation once again with:

```
imageView.showFrameAtIndex(0)
imageView.startAnimatingGif()
```

### Expected result

* GIF starts playing back again from first frame

### Actual result

* GIF moves back to first frame, but stays stopped

We also tried adding an `updateCurrentImage()` call, with no luck.

What are we doing wrong?

### Environment

* SwiftyGif version: 4.2.0
* Xcode: 10.1 (10B61)
