
Any chance of porting it to Swift ?
We see a crash in production inside `transformationsForSlices:edge:startPosition:totalSize:firstBezier:secondBezier:finalRectDepth:` using version 1.1 of this library via CocoaPods. This crash account for about 4% of our app's total crashes. The crash is `SIGABRT` on `UIView+Genie.m:357`:

``` objc
assert(sign*(startPosition - rectPartStart) <= 0.0);
```

Here is a sample full stack trace:

```
Thread 0 Crashed:
0   libsystem_kernel.dylib               0x3787bc84 __pthread_kill + 8
1   libsystem_pthread.dylib              0x3791bb47 pthread_kill + 60
2   libsystem_c.dylib                    0x37813f41 abort + 106
3   libsystem_c.dylib                    0x377f36cf __assert_rtn + 300
4   appname                           0x00211e77 -[UIView(Genie) transformationsForSlices:edge:startPosition:totalSize:firstBezier:secondBezier:finalRectDepth:] (UIView+Genie.m:357)
5   appname                           0x00210ef5 -[UIView(Genie) genieTransitionWithDuration:edge:destinationRect:reverse:completion:] (UIView+Genie.m:226)
6   appname                           0x002103d7 -[UIView(Genie) genieOutTransitionWithDuration:startRect:startEdge:completion:] (UIView+Genie.m:128)
7   appname                           0x0010e2f3 -[EAStoreViewController transitionInWithCompletion:] (EAStoreViewController.m:165)
8   appname                           0x000f6291 __63-[EAFamilyViewController _popChildAnimated:options:completion:]_block_invoke (EAFamilyViewController.m:418)
9   UIKit                                0x29b0ca55 -[UIViewAnimationBlockDelegate _didEndBlockAnimation:finished:context:] + 538
10  UIKit                                0x29b0c531 -[UIViewAnimationState sendDelegateAnimationDidStop:finished:] + 202
11  UIKit                                0x29b0c42b -[UIViewAnimationState animationDidStop:finished:] + 76
12  QuartzCore                           0x2939c5cf CA::Layer::run_animation_callbacks(void*) + 252
13  libdispatch.dylib                    0x37783e1b _dispatch_client_callout + 20
14  libdispatch.dylib                    0x377886c9 _dispatch_main_queue_callback_4CF + 1530
15  CoreFoundation                       0x25960535 __CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 6
16  CoreFoundation                       0x2595ea2f __CFRunLoopRun + 1588
17  CoreFoundation                       0x258b10d9 CFRunLoopRunSpecific + 514
18  CoreFoundation                       0x258b0ecd CFRunLoopRunInMode + 106
19  GraphicsServices                     0x2ec26af9 GSEventRunModal + 158
20  UIKit                                0x29b3a2dd UIApplicationMain + 142
21  appname                           0x0007b02f main (main.m:16)
22  libdyld.dylib                        0x377ac873 start + 0
```

...view. Block for alongside animations is added. Example is updated to make animated view semi-transparent during the genie animation.

This lib is really awesome, I love it, but unfortunately it doesn't works with vertical scrollView on 1+ pages. It's fine just on first page. On other pages there is no animation. I tried to find the problem, but you have much more experience, and I didn't really understood you code. Is there any solution for this issue? I can send you an example project, to demonstrate my problem.

The section headers of the super TableView floats above the view dismissed with the genie effect. So far, I've been unsuccessful in fixing it. Any tips or suggestions?
