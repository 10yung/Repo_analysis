Hey guys,

Love this plugin - been using it for years.

I've stumbled across a problem with `_wp_handle_upload()` where it's taking way too long to handle the uploaded file. I discovered this when trying to import attachments programmatically with `media_handle_sideload()`.

I've wrote a small script on a fresh WP install to test this out with an 12KB image.

```php
$starttime_upload = microtime(true);
_wp_handle_upload($file, ['test_form' => false, 'test_size' => false], current_time('mysql'), 'wp_handle_sideload');
$endtime_upload = microtime(true) - $starttime_upload;

echo "took {$endtime_upload}s to handle upload";
```

Which outputs:
```
took 2.6300148963928s to handle upload
```

If I disable S3-Uploads plugin I get:
```
took 0.029120206832886s to handle upload
```

Just to check I ran `wp s3-uploads verify` and it verified in around 2-300ms.

Not sure if this is expected or not - would appreciate any input you guys might have on this.
Hello, could you attach manual-install.zip for 2.2.1, please?
Fixes 7.4 PHP incompatibilities

Fixes #369 
The current bundled version of getid3 is not fully compatible with PHP 7.4 . [Latests versions 1.9.18 and 1.9.19](https://github.com/JamesHeinrich/getID3/releases) contain the necessary fixes.

Warning output:
```
PHP message: PHP Deprecated:  Array and string offset access syntax with curly braces is deprecated in ../s3-uploads/lib/getid3/getid3.php on line 554
PHP message: PHP Deprecated:  Array and string offset access syntax with curly braces is deprecated in ../s3-uploads/lib/getid3/getid3.php on line 555
```
I tried to install the plugin by doing

```
composer require humanmade/s3-uploads
```

at the root of my WordPress installation. Then I enabled it with WP CLI (that I also installed with Composer):

```
vendor/wp-cli/wp-cli/bin/wp plugin activate s3-uploads
```

But I was getting the following error because the dependencies could not be loaded:

```
Warning: require_once(/var/www/wp-content/plugins/s3-uploads/vendor/autoload.php): failed to open stream: No such file or directory in /var/www/wp-content/plugins/s3-uploads/s3-uploads.php on line 21
```

I had to composer install within the plugin directory whereas I thought it would retrieve the dependencies from the root of my WP installation? or am I missing something?

Thanks

Edit: looks like a duplicate of https://github.com/humanmade/S3-Uploads/issues/313

It throws an unknown error "There has been a critcial error on your website" when I tried to 'activate' the plugin from wordpress backend (wp-admin) interface. And website stops loading (frontend or backend).

Are we to only activate it thru CLI?
If so, is there only 1 line of command to be given in the terminal window? Can we give that command at root prompt or in some other particular directory/path?
The common use-case for this plugin is to host the Media Library on S3, but as a number of open tickets suggest, there are unintended consequences of the implementation (the entire uploads folder vs just the media library). I think it would be helpful to add this to the documentation, so that developers can be aware of and address any potential conflicts this creates. 

For instance, database plugins such as Migrate DB can store exported/backed up databases in the uploads folder (in their own subdirectory), but these will then be hosted in the S3 bucket, potentially unbeknownst to the dev / site owner. The S3 bucket may have different permissions then if the uploads folder was hosted locally, and this can present a potentially large security risk. 

As a feature request, it would be very helpful to have both a known plugin issue list, as well as the ability to easily add subfolders inside 'uploads' to a blacklist via a setting (passing an array of folder names for instance)
If you using Google Sit Kit Plugin, Yoast or another Third Parts with CSS, Images or JS Files you get Error. 
The Plugins try to read the cdn, but the S3 Uploads sync only images.
We already had a couple of thousand files on our server when we installed the S3-uploads plugin. We uploaded all the files to our S3 bucket and activated the plugin. Most of the image URLs have been changed to our bucket URL, but we have the following issues:

1. We see some images still served from our server (e.g. logo and favicon). How can we make sure all images load from S3?
2. Is there a way to safely remove all the media images from our server so that we save some space? We don't want to keep the images on our server when all of it has been uploaded to S3.
3. The --sync option doesn't work in the command line. It doesn't recognize the parameter.

Thanks in advance.
The plugin version shows `2.1.0-RC2` after updating the plugin, it should be updated in the [s3-uploads.php](https://github.com/humanmade/S3-Uploads/blob/master/s3-uploads.php) file, line  [7](https://github.com/humanmade/S3-Uploads/blob/bc1df42517c1ccbfbfc61fe4802008d22948a9b8/s3-uploads.php#L7).