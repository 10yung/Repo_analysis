Upon completion of the steps in composing a starter app today (as I've done many times), I discovered that it did not update any of the files and basically just created a new rails app without any of the composer juice that normally happens when using this excellent app. I have not had this trouble in the past and just started today. So what has changed you ask? Nothing that I can think of...I did update to Mac OS Catalina, but have composed apps with the same process between then and now without issue, so I feel like it's not that.  I did recently update Xcode through app store so that is a potential cause.  But I have agreed to the new terms etc etc.  I also allowed full disk access to terminal and Xcode in the privacy settings list in the system preferences. I am using RVM and have updated it. Any help to point me in the right direction would be greatly appreciated! Would love to get back into my workflow as soon as possible.

Here is some output of the first bit of the composition:
`$ rails new . -m https://raw.github.com/RailsApps/rails-composer/master/composer.rb
       exist  
      create  README.md
      create  Rakefile
    conflict  .ruby-version
Overwrite /Users/aaron/code/rails/mapletest/.ruby-version? (enter "h" for help) [Ynaqdhm] n
        skip  .ruby-version
      create  config.ru
      create  .gitignore
      create  Gemfile
         run  git init from "."
Initialized empty Git repository in /Users/aaron/code/rails/mapletest/.git/
      create  package.json
      create  app
      create  app/assets/config/manifest.js
      create  app/assets/javascripts/application.js
      create  app/assets/javascripts/cable.js
      create  app/assets/stylesheets/application.css
      create  app/channels/application_cable/channel.rb
      create  app/channels/application_cable/connection.rb
      create  app/controllers/application_controller.rb
      create  app/helpers/application_helper.rb
      create  app/jobs/application_job.rb
      create  app/mailers/application_mailer.rb
      create  app/models/application_record.rb
      create  app/views/layouts/application.html.erb
      create  app/views/layouts/mailer.html.erb
      create  app/views/layouts/mailer.text.erb
      create  app/assets/images/.keep
      create  app/assets/javascripts/channels
      create  app/assets/javascripts/channels/.keep
      create  app/controllers/concerns/.keep
      create  app/models/concerns/.keep
      create  bin
      create  bin/bundle
      create  bin/rails
      create  bin/rake
      create  bin/setup
      create  bin/update
      create  bin/yarn
      create  config
      create  config/routes.rb
      create  config/application.rb
      create  config/environment.rb
      create  config/cable.yml
      create  config/puma.rb
      create  config/spring.rb
      create  config/storage.yml
      create  config/environments
      create  config/environments/development.rb
      create  config/environments/production.rb
      create  config/environments/test.rb
      create  config/initializers
      create  config/initializers/application_controller_renderer.rb
      create  config/initializers/assets.rb
      create  config/initializers/backtrace_silencers.rb
      create  config/initializers/content_security_policy.rb
      create  config/initializers/cookies_serializer.rb
      create  config/initializers/cors.rb
      create  config/initializers/filter_parameter_logging.rb
      create  config/initializers/inflections.rb
      create  config/initializers/mime_types.rb
      create  config/initializers/new_framework_defaults_5_2.rb
      create  config/initializers/wrap_parameters.rb
      create  config/locales
      create  config/locales/en.yml
      create  config/master.key
      append  .gitignore
      create  config/boot.rb
      create  config/database.yml
      create  db
      create  db/seeds.rb
      create  lib
      create  lib/tasks
      create  lib/tasks/.keep
      create  lib/assets
      create  lib/assets/.keep
      create  log
      create  log/.keep
      create  public
      create  public/404.html
      create  public/422.html
      create  public/500.html
      create  public/apple-touch-icon-precomposed.png
      create  public/apple-touch-icon.png
      create  public/favicon.ico
      create  public/robots.txt
      create  tmp
      create  tmp/.keep
      create  tmp/cache
      create  tmp/cache/assets
      create  vendor
      create  vendor/.keep
      create  test/fixtures
      create  test/fixtures/.keep
      create  test/fixtures/files
      create  test/fixtures/files/.keep
      create  test/controllers
      create  test/controllers/.keep
      create  test/mailers
      create  test/mailers/.keep
      create  test/models
      create  test/models/.keep
      create  test/helpers
      create  test/helpers/.keep
      create  test/integration
      create  test/integration/.keep
      create  test/test_helper.rb
      create  test/system
      create  test/system/.keep
      create  test/application_system_test_case.rb
      create  storage
      create  storage/.keep
      create  tmp/storage
      create  tmp/storage/.keep
      remove  config/initializers/cors.rb
      remove  config/initializers/new_framework_defaults_5_2.rb
       apply  https://raw.github.com/RailsApps/rails-composer/master/composer.rb
    composer  
    composer   _____       _ _
    composer  |  __ \     (_) |       /\
    composer  | |__) |__ _ _| |___   /  \   _ __  _ __  ___
    composer  |  _  // _` | | / __| / /\ \ | '_ | '_ \/ __|
    composer  | | \ \ (_| | | \__ \/ ____ \| |_) | |_) \__ \
    composer  |_|  \_\__,_|_|_|___/_/    \_\ .__/| .__/|___/
    composer                               | |   | |
    composer                               | |   | |
    composer  
    composer  Need help? Ask on Stack Overflow with the tag 'railsapps.'
    composer  Your new application will contain diagnostics in its README file.
    composer  You are using Rails version 5.2.3. Please report any issues.
**File unchanged! The supplied flag value not found!**    config/application.rb
      recipe  Running core recipe...
        core  selected all core recipes
      recipe  Running git recipe...
         git  initialize git
      remove    .gitignore
      create    .gitignore
         run    git init from "."
Reinitialized existing Git repository in /Users/aaron/code/rails/mapletest/.git/
         run    git add -A from "."
         run    git commit -qm "rails_apps_composer: initial commit" from "."
      recipe  Running railsapps recipe...
      option  Build a starter application?
          1)  Build a RailsApps example application
          2)  Contributed applications
          3)  Custom application (experimental)
      choose  Enter your selection: `

Composer will allow you to continue through the setup but at one other occasion it throws the same error and does not run any migrations, or add any devise files or migrations to the db folder.  Actually it appears to be an even less comprehensive folder structure than just running rails new.
Trying to use composer with Rails 6.0.0 complains with the misleading error message:
```
https://raw.github.com/RailsApps/rails-composer/master/composer.rb:279:in `apply': Rails 6.0.0 is not supported. Use Rails 4.1 or newer. (StandardError)
```


To be aesthetically pleasing, the margin at the top here should be equal  to the margin at the bottom.
![screen shot 2019-01-16 at 11 49 39 am](https://user-images.githubusercontent.com/10361390/51274930-55107f00-1985-11e9-9200-09e7bb294484.png)


Today I generated a rails app with bootstrap 4.
But github says I'm vulnerable to XSS attacks.


-------

1 bootstrap vulnerability found in Gemfile.lock 3 minutes ago
Remediation
Upgrade bootstrap to version 4.1.2 or later. For example:

gem "bootstrap", ">= 4.1.2"
Always verify the validity and compatibility of suggestions with your codebase.

Details
CVE-2018-14042 More information
moderate severity
Vulnerable versions: < 4.1.2
Patched version: 4.1.2
In Bootstrap before 4.1.2, XSS is possible in the data-container property of tooltip. This is similar to CVE-2018-14041.
Hello,

Ubuntu server 16.04 - Running Rbenv ruby 2.5.1 - with multiple apps up and running - rails 5.2.0

A recent attempt with current version yields this:

running --> rails new myapp -m https://raw.github.com/RailsApps/rails-composer/master/composer.rb

1. Build a railsapps starter example application
6. rails-devise
no email
1. puma
same as development
3. MySql
1. ERB
1. none
3. Bootstrap 3.3
1. add jquery-rails gem
2. gmail
1. Devise with default modules
1. none
6. bare
1. none
1. no
disable turbolinks yes
set robots.txt yes
github no
add therubyracer yes

Adding install log and my gems local list
[gem_list_fail_composer.txt](https://github.com/RailsApps/rails-composer/files/2124587/gem_list_fail_composer.txt)
[install_log_mysql_fail_composer.txt](https://github.com/RailsApps/rails-composer/files/2124588/install_log_mysql_fail_composer.txt)

I've done the same with SQlite3, no problems.

I already have an app up and running on latest with the latest.

Suggestion:

Composer when detected multiple mysql gems give you an option to select, or give the option to select multiple versions to deploy.

Thanks!


Just tried a new tool (https://github.com/BurntSushi/ripgrep) and found:

(1)$ rg foobar
./.gitignore: line 26: error parsing glob '**.war': invalid use of **; must be one path component
./.gitignore: line 64: error parsing glob '**.orig': invalid use of **; must be one path component
./.gitignore: line 79: error parsing glob '**.swp': invalid use of **; must be one path component


From the gitignore man-page:
```
Two consecutive asterisks ("**") in patterns matched against full pathname may have special meaning:

A leading "**" followed by a slash means match in all directories. For example, "**/foo" matches file or directory "foo" anywhere, the same as pattern "foo". "**/foo/bar" matches file or directory "bar" anywhere that is directly under directory "foo".

A trailing "/**" matches everything inside. For example, "abc/**" matches all files inside directory "abc", relative to the location of the .gitignore file, with infinite depth.

A slash followed by two consecutive asterisks then a slash matches zero or more directories. For example, "a/**/b" matches "a/b", "a/x/b", "a/x/y/b" and so on.

Other consecutive asterisks are considered invalid.
```

So I think these entries in .gitignore should be changed  to

```diff
(1)$ git diff .gitignore
diff --git a/.gitignore b/.gitignore
index b11c4dbd..b545f7c9 100644
--- a/.gitignore
+++ b/.gitignore
@@ -23,7 +23,7 @@ db/*.sqlite3
 /tmp/*

 # various artifacts
-**.war
+*.war
 *.rbc
 *.sassc
 .rspec
@@ -61,7 +61,7 @@ pickle-email-*.html
 # Here are some files you may want to ignore globally:

 # scm revert files
-**.orig
+*.orig

 # Mac finder artifacts
 .DS_Store
@@ -76,7 +76,7 @@ pickle-email-*.html
 /*.tmproj

 # vim artifacts
-**.swp
+*.swp

 # Sublime project files
 *.sublime-*
```
On using rails-composer, with the rails-devise-pundit option, I had the following error
```
Sass::SyntaxError - ".authform form" failed to @extend ".bg-faded".
The selector ".bg-faded" was not found.
Use "@extend .bg-faded !optional" if the extend should be able to fail.
```
This was fixed using this [SO answer](https://stackoverflow.com/a/46144501/1299362).  However, I do not understand why it happened in the first place.

Chris


payola-payments using an old version and the migraiton don't work. to get around this i installed the maser version like this. gem 'payola-payments', git: 'https://github.com/payolapayments/payola.git'

Hi,

I did search and went thru lots of links , but none were solving the issue, so creating a ticket here.

Error:
 Errno::EACCES (Permission denied @ dir_s_mkdir - /home/ec2-user/index_files):

The ruby rails code is executing and generating the above error.

I did check the permissions for the folder and sub-folders, it has all the necessary permissions:
`drwxrwxrwx 5 webapp   webapp        4096 Mar  7 16:53 index_files`

Am not clear how to proceed further.
Ruby version : 64bit Amazon Linux 2015.09 v2.0.4 running Ruby 2.2 (Passenger Standalone)

The code was working before, but suddenly am seeing this new error coming into picture!

Regards
Sridhar


In my template to get minitest working I'm just doing these 2 steps.

Add this to my gemfile:

```ruby
gem_group :development, :test do
  gem 'minitest'
  gem 'minitest-rails'
end
```
Add this to my application.rb to turn on specs and disable helper tests being created by scaffolding.
```ruby
application %Q(
  config.generators do |g|
    g.test_framework :minitest, spec: true, fixture: true
    g.helper false
    g.view_specs false
  end
)
```