The original ruby warrior from 2012 had sound effects so it made everything more enjoyable and interactive. https://www.bloc.io/ruby-warrior

That server is dead but the client is still online. What's our plan to add sounds in warriorJS?
I used `some` to check if after any effect the unit.isAlive() would return false.
In case the unit is not alive after any effect, it will skip the next iterations and return true to `diedAfterEffects`.

Then, I added another check (`!diedAfterEffects`) before starting to perform the unit actions.

Let me know if you think this can be improved in any way.
yarn lint was failing as it was unable to match packages/**/src this pattern
Hello, WarriorJS!

When the Warrior have being attacked from 'backward' he has recieved normal damage.
But I think, that it is logical true, when the warrior have receive damage from 'backward', ***he must be more vulnerable***. But it's about of the balance of the game, and so I can't offer right pull request with my novice programming skills, but i with much pleasure learn, how it's can be perform.

If you agree with this one, and if you'll having commit with this feature, please inform me.
The `warrior` object isn't actually documented outside of the auto-generated README, so the auto-generated README could stand to be a bit more specific than it currently is.

Abilities now document arguments, and contain some other relevant information previously only found in tips.
By issue #242 @warriorjs/tower-tick-tick-boom warrior haven't got the "pivot" ability and bashing 'backward' forcedly
https://github.com/olistic/warriorjs/issues/242
Hey! WarriorJS, 

When my JS Warrior attacking in 'backward' direction he takes only 3 points damage, while if he will be able pivot to the enemy face to face he will cuts 5 points for each attack. And this is not cheat, because it's normal, when you want to bash or slash the enemy's skull, you have to pivot yourself to face him))

and i was really puzzled when my Warrior was surrounded by the enemies on third level of the tower and my EAST - faced Warrior bashing 'backward' the Sludge, and he couldn't turn to face him with his "pivot" ability.
`
        warriorjs/packages/warriorjs-tower-tick-tick-boom/src/index.js
      `
<pre>import {
  attack,
  bind,
  detonate,
  directionOf,
  directionOfStairs,
  distanceOf,
  feel,
  health,
  listen,
  look,
  maxHealth,
  pivot, //  add "pivot" ability 
  rescue,
  rest,
  think,
  walk,
} from '@warriorjs/abilities';
</pre>

<pre>warrior: { // warrior of the third level
          ...Warrior,
          position: {
            x: 1,
            y: 1,
            facing: EAST,
          },
          abilities: {
            bind: bind(),
            pivot: pivot(), // i think it should be like this), but i assume that "pivot" must have on first level
            rescue: rescue(),
          },
        },
</pre>
The proposal is to be able to sync your code with the online version of WarriorJS (https://warriorjs.com) so that you can play from the terminal with your own IDE, but also be part of the global leaderboard (https://warriorjs.com/leaderboard). The user will need to authenticate via the CLI, and then, after succeeding in each level, the code would be sent to the WarriorJS API (GraphQL API running at https://api.warriorjs.com/graphql) for validation and inclusion in the leaderboard.

Let me know if you're interested in working on this!
More of a question than an issue.

I assume I can't just for warriorjs, add my tower to it, and submit a pull request. I scoured npmjs.com for warriorjs modules, but I only found the official ones. If I were to create my own tower module, should I publish it on npm as a standalone package, or should I add it to this repo in a pull request after a review process? Will warriorjs find my module automatically on npm, or will people have to download it manually and paste it?

