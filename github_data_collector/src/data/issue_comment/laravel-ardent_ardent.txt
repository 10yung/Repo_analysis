@lloricode, could you please use version `dev-fix-autodiscovery` and check if it all works fine now?
Make sure you try to instantiate an Ardent model and run a query on it. Unfortunately, I don't have a working project to test this right now.
Similar to https://github.com/laravel-ardent/ardent/issues/296
I am experiencing problems with Ardent's save function.

It works for me when I do this, but surely there is a better way: (Maybe call Arduent's save something else?)

src/Ardent/Ardent.php:657
```
//    public function save(array $rules = array(),
//        array $customMessages = array(),
//        array $options = array(),
//        Closure $beforeSave = null,
//        Closure $afterSave = null
//    ) {
//        return $this->internalSave($rules, $customMessages, $options, $beforeSave, $afterSave, false);
//    }

    public function save(Array $arg1 = null)
    {
        if ($arg1 == null) {
           return $this->internalSave([], [], [], null, null, false);
        } else {
           return parent::save($arg1);
        }
    }
```

Eloquent has two different saves:
Database/Eloquent/Model.php:    public function save(array $options = [])
Database/Eloquent/Relations/HasOneOrMany.php:    public function save(Model $model)
(also MorphOneOrMany and BelongsToMany)

I encountered this error when following the Laravel seeder documentation here: https://laravel.com/docs/5.5/seeding#writing-seeders
I'm using soft-delete with my `currency` model and would like to enforce foreign key integrity by checking that `regions` hasMany relationship is empty before any currency is allowed to be deleted.  Will validation be performed on `$currency->delete()` call? If not, is there a way to enforce this behaviour on the model level (to avoid replicating same logic in multiple places)?
at Ardent.php

line 17:
use Illuminate\Validation\Factory as ValidationFactory;

line 19:
use Symfony\Component\Translation\Translator;

line 512:
        $translator = new Translator();

line 519:
        self::$validationFactory = new ValidationFactory($translator);

the Illuminate\Validation\Factory needs a Illuminate\Contracts\Translation\Translator Object, but gives Symfony\Component\Translation\Translator
Hi people,

Is there any way to access $this->id in afterCreate() hook? I need to get the ID of the currently created row.

Thanks in advance!
I am upgrading my application from Laravel 4.2 to Laravel 5.0. But "laravelbook/ardent": "3.*" is throwing errors while running composer update command. I was using "laravelbook/ardent": "2.*" in Laravel 4.2.
![error](https://cloud.githubusercontent.com/assets/1852898/20711092/e777076a-b663-11e6-9f1b-4c546122faa2.png)
Seems to be breaking after updating Laravel 5.3. Update soon?

I am using the Ardent 3 on Laravel 5.1.42 framework, and i get error ReflectionException in Container.php line 741 in controller with namespace.. e.g : app/Http/Controllers/Admin/PostController., But if i user default controller in app/Http/Controllers/PostController this is work..
What wrong ?

As it stands, the example provided in the README (`'email' => 'required|email|unique',`) doesn't work because `buildUniqueExclusionRules` is searching specifically for `unique:`, ending with a colon.

Presumably this isn't intentional, based on the later `count(explode(':', $params[0]))` check which currently would be impossible to trigger, so the string match has been adjusted.

That said, is there any concern of matching custom rules starting with 'unique'? The string check could be made more complicated to avoid this, but I personally think of it as a low priority concern.

I am using the latest Ardent version with entrust 5.2.x-dev on Laravel 5.2 framework

Entrust with Laravel Ardent is having a conflict and the following error message is displayed:

Declaration of Zizaco\Entrust\Traits\EntrustUserTrait::save() should be compatible with LaravelArdent\Ardent\Ardent::save(array $rules = Array, array $customMessages = Array, array $options = Array, Closure $beforeSave = NULL, Closure $afterSave = NULL)

Kindly provide a fix for this issue.
