if this framework support @objc , great!
I've got a [performance tool](https://github.com/kconner/KMCGeigerCounter) that similarly uses CADisplayLink to try and measure the framerate / dropped frames. But in my tests back during iOS 7 and 8, CADisplayLink's callback timing was only affected when a frame drop happened due to slowness in-process, for example if there's a lot of auto layout work. My understanding of UIKit's drawing is that after the layers are all prepared, they are composited out-of-process in iOS's equivalent of the WindowServer, as OpenGL / Metal rectangles. So if compositing is too slow, say because you have a bunch of expensive layers with blurring and rounded corners, the display link callback will still happen right on time. You'll see a slow frame rate, but the meter will show 60.

I did an ugly hack to solve this that worked in iOS 7 and 8, but [doesn't work anymore in iOS 9 and 10](https://github.com/kconner/KMCGeigerCounter/issues/15#issuecomment-158680355). Did you have a way to address this? If we can figure it out, we can improve both our projects. If not, you may want to write some kind of disclaimer in your readme. :)

If you want to test this out, the repo I linked to has an example project, and you can add your meter to it. You'd want to use the `ios9` branch.