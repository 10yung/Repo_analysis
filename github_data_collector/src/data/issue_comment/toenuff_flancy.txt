Is it possible to set content-type on response?

I tried

$Response.ContentType = "application/json"
or
$Response.Headers["content-type"] = "application/json"

thanks
This may not be possible but it would be nice if variables could be passed in the -WebSchema parameter of New-Flancy:

``` PowerShell
$thing = "SomeText"
New-Flancy -WebSchema {
    Get "/" {
        $thing
    }
}
```

The only reason I did this was because things like $PSScriptRoot don't seem to exist in the scope of those cmd blocks.

this is super annoying everytime I try to use New-Flancy

```
The process cannot access the file because it is being used by another process
At C:\Users\dotps1\Documents\WindowsPowerShell\Modules\flancy\flancy.psm1:450 char:9
+         $flancy.start()
+         ~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], HttpListenerException
    + FullyQualifiedErrorId : HttpListenerException
```

I did only a quick search for examples of setting up NancyFx to achieve something like `python simplehttpserver`. Also, can flancy execute a ps1 on disk? I probably missed it in the code.

Thanks
Doug

Below wouldn't be too difficult to include
https://github.com/SimpleAuthentication/SimpleAuthentication/wiki/NancyFX-Manual-Setup

I'm tempted to dig through the above and see if we can just do it on the powershell side, but why reinvent?

Perhaps ContentPath ContentDir?

I sort of like Path because it feels more PowerShell.  However, if people feel strongly about this change, I don't mind either way.

Submitted by @beatcracker in #32 

Repro script:

```
Start-Job -Name 'Flancy' -ScriptBlock {
    Import-Module -Name 'Flancy' -ErrorAction Stop
    New-Flancy -WebSchema @{
        Method = 'Get'
        Path= '/'
        Script = {'Hello, world!'}
    }
}

Wait-Job -Name 'Flancy' | Receive-Job
```

Output:

```
PS > .\Flancy-AsJob.ps1

Id     Name            PSJobTypeName   State         HasMoreData     Location             Command
--     ----            -------------   -----         -----------     --------             -------
2      Flancy          BackgroundJob   Running       True            localhost            ...

Exception calling ".ctor" with "1" argument(s): "Unable to resolve type: Nancy.ViewEngines.ViewEngineApplicationStartup"

    + CategoryInfo          : InvalidOperation: (:) [New-Object], MethodInvocationException
    + FullyQualifiedErrorId : ConstructorInvokedThrowException,Microsoft.PowerShell.Commands.NewObjectCommand
    + PSComputerName        : localhost

You cannot call a method on a null-valued expression.

At .\flancy\flancy.psm1:395 char:9
+         $flancy.start()
+         ~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull
```

PowerShell version:

```
Name             : Windows PowerShell ISE Host
Version          : 5.0.10018.0
InstanceId       : 03eac871-dcbd-4e6a-8c7c-b5c018dbcda8
UI               : System.Management.Automation.Internal.Host.InternalHostUserInterface
CurrentCulture   : ru-RU
CurrentUICulture : en-US
PrivateData      : Microsoft.PowerShell.Host.ISE.ISEOptions
DebuggerEnabled  : True
IsRunspacePushed : False
Runspace         : System.Management.Automation.Runspaces.LocalRunspace
```

This doesn't happen with [this version](https://github.com/toenuff/flancy/tree/672bf3f44e440a0ec43a9c284c83bea06109531d) of Flancy.

This is done.  Leaving the issue open until it is documented.  

With CTP 3, I was able to get a container started with a flancy server serving pages publicly.  However, a couple of things to note
1) when you use netsh in a container to set http urlacl, you see the results in the parent, not the container.  However, it does work.  It also works fine if your admin and just use the -public switch.
2) There are no errors given in the container.  Hopefully this is fixed with ctp 4.  It makes troubleshooting impossible
3) Need to include or think about routing recipe.  The internal ips need to be reachable from outside of the host.  Perhaps the vswitch should be a passthrough and then I can just give it a unique IP.  Either way, this has to be included in the recipe/documentation

Need to figure the way to get a script to launch at container launch.  Right now I am entering a pssession and launching manually.

Would be nice to just tack on an -AsJob parameter so that we can out-of-proc the Nancy host to make it easier to run subsequent New-Flancy calls. 

It would be super awesome to support OData filtering\sorting\paging. There is a Nancy extension to do it but it creates LINQ queries which might not be one-to-one to PowerShell but we might be able to use the OData query parsing capabilities as a starting point.

https://github.com/adamhathcock/Nancy.OData
https://bitbucket.org/jjrdk/linq2rest

The endpoint would just be:

```
@{
Path='/process'
Method='Get';
Script={
Get-Process
}
}
```

Then we could do cool stuff like: 

```
Invoke-WebRequest http://localhost:8000/process?$filter=Name -eq 'PowerShell'
```

It would automatically do something like:

```
Get-Process | Where Name -eq 'PowerShell' 
```
