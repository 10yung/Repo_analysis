Invitation for confirmation of findings. Available via build and test only at this time.

For Christmas I replaced a perfectly good pair of computer speakers with a more perfectly good pair except for an irritating (but hifi) booming bass tone. Went in search of a simple equalizer app and found:

Audio Hijack - Pro level, $$, more than I was looking for.

Boom 3D - Bought it. Worked great but was concerned (wrongly it seems) about need to access the mic at full volume and unfortunately necessary copy protection.

eqMac2 - Free, open source - Saw this and since I had been wanting to learn about Xcode and Objective C, and Git, and GitHub, decided to clone and build it.

[ Several hours pass ]

Got it built and it worked fine, for a while. After a few minutes the output would start to degrade and after about 30 minutes output would cease. Found that release v2.2 also failed and this was a reported issue. Decided to try and narrow down where the failure was happening.

Under Xcode it is possible to set breakpoints but this would crash the program in a kind of “Heisenbug” effect. Even setting a breakpoint in code not being executed would disrupt the output with 4 or 5 clicks producing the same effect as letting it run for 30+ minutes. I added numerous “printf” statements (which appear on the Xcode console) to instrument the program.

I couldn’t tell exactly what was wrong let alone how to fix it but it seemed to be a buffering problem with the ring buffer (https://en.wikipedia.org/wiki/Circular_buffer).

In my searches I had noticed a project from 9 (nine!) years ago related to CAPlayThrough on which eqMac2 is based (https://github.com/liscio/CAPlayThrough) which states:
Look! A version of CAPlayThrough that works...
...for the most part. Standard disclaimers apply, etc.
I've cobbled together improvements to CARingBuffer.cpp and CARingBuffer.h that were based on an older version of CARingBuffer that I found in an older version of the CoreAudio SDK (Thanks, Pacifist!)
There were many bugs in that class which caused havoc in the CAPlayThrough sample, especially when mixing devices that have varying sample rates (and drifting clocks.)
Please: if you find bugs, try and fix them yourself, and contribute back to this repo for the benefit of others. I don't have time to respond to bug reports.


On a hunch I replaced these two modules in eqMac2 with the liscio versions and this seems to have fixed all the static/sync issues. Wake from sleep issues may also be fixed.



In addition I looked at the install problems reported under Catalina and made changes to install_driver.sh and uninstall_driver.sh to copy the driver to /Library/Extensions/ instead of /System/Library/Extensions/. I don’t have Catalina to test but reading the comments seem to point to this, or not. It seems LE is preferred over SLE in general. This will also work for older macOSs.

These simple shell scripts can be run from the command line. This will also reveal any error messages. Examine and modify as needed:
    -   > cd to dir containing scripts in eqMac2.app
    -   > sudo ./install_driver.sh # calls uninstall_driver.sh then installs driver
    -   > sudo ./uninstall_driver.sh # uninstalls all eqMac drivers



Building:
    -   Xcode is available from the App Store as a free (multi GB) download
    -   Install CocoaPods (see README.md)
    -   Make a directory to store the project using the command line and cd there
    -   > git clone https://github.com/ekarlo/eqMac2 into this directory
    -   > cd eqMac2
    -   > pod install
    -   Start Xcode: Finder: Double click eqMac2.xcworkspace, other ways exist
    -   Xcode: Click on project in Project Navigator - set “Signing & Capabilities” and “Build Settings” (below)
    -   Xcode: ⌘R (see “Product” menu)
    -   App will start

OK, on “Signing & Capabilities & Build Settings” can be a world of hurt.
You can set up “Personal Team” using your Apple ID under Xcode->Preferences->Accounts to allow install on a local machine.

Under “Signing & Capabilities” I used:
    -   Automatically manage signing: Checked
    -   Team: your name here (Personal Team)
    -   Signing Certificate: Development

Under “Build Settings” - Signing section
    -   Code Signing Identity: Mac Developer
    -   Code Signing Style: Automatic
    -   Development Team: your name here (Personal Team)
    -   Provisioning Profile: Automatic

Also, permission to use the “eqMac2 Microphone” needs to be given.
Also, make sure the mic and output volumes are not zeroed or muted. Do this often.
Also, various macOS permissions may be involved.
Also, these settings can interact with each other.

Bottom line - eqMac2 2.3 has been up and running for days without apparent problems and am totally satisfied with this solution. Anyone with a Mac should be able to build a working version.

All credit to the great work of Romans Kisils and Christopher Liscio.
Hello :) Before you create an issue please read the following message:

My name is Roman and I'm the only developer of this app.

I will NOT contribute any more code to this repository ever again. 

This repository is mostly for sharing the knowledge I gained during development.

At the moment I dedicate all my time to a startup and working on a new and very modern update to eqMac.

This new update will be completely rewritten from scratch and have many more new features and will be massively more stable (at least that't the plan).

I plan to release the new version in Q3 of 2018. 

Thank you for your patience and giving eqMac a go :)

If you need help with eqMac please join our Slack Group:

https://join.slack.com/t/eqmac/shared_invite/enQtMjk4NDkwNzEzOTA4LTg4OWFlYWFjNGQzZTJiM2RmMDI4MTUzMjk5ZTk1ZTkwYzk5NTk1ZDMwNTc1ZmU2MDdmNzRhNjc4ZTBhOWM2MzA

That's your best bet at getting some help from me or the community. 
GitHub is only for source-code related issues.

Still would like to report a bug or suggest a feature I can implement in the next version? 

Please make sure you search through the Open and Closed Issues people have already submitted:

https://github.com/nodeful/eqMac2/issues?utf8=%E2%9C%93&q=is%3Aissue+

This eliviates the posibility of people creating duplicate issues.
Hi, anyone could explain the detailed workflow of this app? The description says it uses CAPlayThrough and soundFlower driver. As far as I can imagine, eqMac does below things:

(1) it gets the system audio output stream from the soundFlower driver output
(2) the output from soundflower is then captured as an input stream in CAPlayThrough
(3) the CAPlaythrough sends the stream to a selected output device.

Is this workflow currently implemented in eqMac?
I have tried multiple solutions and none have worked, I've allowed anything, I'm running macOS Catalina 10.15.2 (beta). Please help with this, I've tried multiple things, manual kext installation, brew cask install eqmac. I get a popup when I open EQMac2 saying it needs a driver update. I do as follows but have to quit it.
As soon as I change from internal speakers to headphones on eqMac, volume raises to 100%. Very inconvenient. Got dead ears.
@nodeful 
>If you need help with eqMac please join our Slack Group:

*Per issue submission guidelines*
# Inactive Link
### https://join.slack.com/t/eqmac/shared_invite/enQtMjk4NDkwNzEzOTA4LTg4OWFlYWFjNGQzZTJiM2RmMDI4MTUzMjk5ZTk1ZTkwYzk5NTk1ZDMwNTc1ZmU2MDdmNzRhNjc4ZTBhOWM2MzA

That's your best bet at getting some help from me or the community. 
GitHub is only for source-code related issues.
#152 
#164
#36 
Cracking issues are (in many cases) a non issue IMHO.  They are a user settings / user guide / documentation issue!

However, there is a real issue in that the format selection for eqMac2 (within the Audio MIDI Setup utility) only has frequency (ie: 44,100 / 48,000 Hz) selection. This is fine if your output device (like the macbook pro speakers) matches the bit depth (ie: 32-bit) and type (ie: Integer).

If you use an external audio device that doesn't match the frequency and depth, viola ... cracking. My output device only has 16 or 24 bit (not 32) so this is a problem.  Maybe there's a way to add bit-depths like 16 and 24 for compatibilities sake. Also not sure if type (Integer/Float) would make a difference, but worth checking out.

![image (11)](https://user-images.githubusercontent.com/47954098/67508845-cb9e8380-f65f-11e9-84e6-44af3e95136e.png)

![image (12)](https://user-images.githubusercontent.com/47954098/67508882-df49ea00-f65f-11e9-860d-c97d1616ef37.png)

![image (13)](https://user-images.githubusercontent.com/47954098/67508889-e3760780-f65f-11e9-93ab-8c1e4fd69397.png)

I'm not an audio/driver developer, but I am a full-stack developer (professionally) and producer/audio engineer (in my spare time) so this is an interesting intersection of domains for me. If anyone gets any ideas or leads on this please tag me or reach out.
Umlauts aren't fully supported in eqmac 2. See screenshot:

![screenshot](https://user-images.githubusercontent.com/13562297/65505732-2e1e2b80-deca-11e9-8132-56c2d0645300.png)

Driver installation Fails on Catalina. Any News on this?
Hi, is it possible to only activate eq settings when external speakers or headphones are connected and chosen as audio output? Also disabling after returning to built-in mac speakers.
(automatically)