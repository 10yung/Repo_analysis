Added a check to your Jamf_Pro_Detect_Self_Service_Policies_Without_Icons.sh script to check if the Policy ID List download was blank and if so try again without validating the SSL cert and notify the script user as such.
This:
disable_apple_icloud_data_privacy_diagnostic_touch_id_siri_activation_lock_and_screentime_pop_ups
seems to no longer work with latest Mojave update, only profile route seems to work now:
https://github.com/rtrouton/profiles/tree/master/SkipiCloudSetup
It appears not all items that are supposed to be deleted from the Users ddcl record are.

I run this is on 10.12 Macs before upgrading to 10.14.

PrimaryNTDomain
AppleMetaRecordName

are both still present in the Record after the script finishes.  No errors.

Running /usr/bin/dscl . -delete manually reports not errors but also does not remove the items.
When I run the script it tried to rename the home director to username.old at this point the script comes back and gives error operation not permitted.
The home directory is still there, but the account gets deleted.
I would like to be able to use this script as I have a client who has over 50 macs to domain.

Thank you.
First off, thanks for sharing this script! I hit a minor issue and found a simple fix. TL;DR system_profiler could use a "-timeout 0" parameter specified or else it can time-out after 180 seconds.

When I ran this script, I received this error:

2019-04-29 15:26:36.642 system_profiler[43509:22585681] Terminating '/usr/sbin/system_profiler -nospawn -xml SPApplicationsDataType -detailLevel full' because it did not respond.
2019-04-29 15:26:36.724 system_profiler[43509:22585679] Non-zero termination status from '/usr/sbin/system_profiler -nospawn -xml SPApplicationsDataType -detailLevel full', termination status: 15

I added "-timeout 0" to the variable defined on Line 22 so that system_profiler does not hit its default 180 second timeout parameter (hooray for man pages), and it runs without issue for my old Mac Pro. Thanks again for sharing.
Was just testing the https://github.com/rtrouton/rtrouton_scripts/blob/master/rtrouton_scripts/Casper_Scripts/Jamf_Pro_Computer_Policy_Download/Jamf_Pro_Computer_Policy_Download.sh script and it appears that this will download **all** policies, including those created by Jamf Remote.

Is it possible to update the script such that it only includes those policies listed in the Computer Policies area?

Looking at the output XML, I can't tell any unique information other than the title containing a colon `:` but this results in `(colon)` in the actual output .xml filename.

The root problem here appears that despite these policies being triggered by Jamf Remote, the policy is listed as enabled: `<enabled>true</enabled>`

Not sure what the best solution is here to address this
- added APFS support for `filevault_2_encryption_check_extension_attribute` (runs file system personality check to determine which encryption status checks to run)
- wrapped all existing CoreStorage checks in `elif` (when the filesystem is not APFS)
- removed extraneous checks for `$osvers_major` (since the script will never run on the various CoreStorage checks if it's not macOS 10)
- set all encryption reports to a shared variable `$fvCheck` which is `echo`'d as a single `<result>` at the end of the script
- consolidated the various standalone if statements into shared `if`-`elif`-`else` blocks (to prevent the script from checking values more often than necessary)
- moved all CoreStorage resource files to a shared `$workingDir` path (simplifies path creation and deletion)
- converted README to Markdown

This change would avoid the need to maintain a separate `check_apfs_encryption_extension_attribute` (but I've left it in place in this PR pending approval of the merge).
Added Support of Wi-Fi interface and easy way to add it to Jamf Pro using Script parameters.

Feel free to modify or close the PR I won't be disappointed üëç 

Thank you for your work provided these scripts ü•á 
Previously you were checking only for `csrutil status`. However it is possible now that SIP has been reset (re-enabled) using the `csrutil clear` command, but that the computer has not been restarted. In that situation, the status will still show SIP as disabled, but if you check NVRAM you will see that there is no entry for "csr-active-config". This would indicate that SIP is set to be enabled after a restart. This is relatively new with 10.12.2.

https://onemoreadmin.wordpress.com/2016/12/13/system-integrity-protection-sip-changes-in-macos-sierra-10-12-2/