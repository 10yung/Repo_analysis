Hi guys,

maybe you can help me to resolve my issue. 

I'm using Fuzi in my framework for at least a year, it works great. I even did one PR previously.

Now I struggle with the following thing. Using cocoapods I integrate my framework compiled with Xcode **11.0** Swift **5.1** with the enabled flag 'Build Libraries for Distribution' to project written in Xcode **11.2** Swift **5.1.2**. I expect that it should work because we have an ABI stability released. However, I have an error:


> Showing All Messages
> /Applications/Xcode.app/Contents/Developer/Platforms/AppleTVSimulator.platform/Developer/SDKs/AppleTVSimulator13.2.sdk/usr/include/libxml2/libxml/HTMLparser.h:15:10: 'libxml/xmlversion.h' file not found
> 
> Could not build Objective-C module 'libxml2'

My Framework compiled in Xcode 11.2 with Swift 5.1.2 doesn't produce errors.
Part of my podspec:

>   s.xcconfig = { 'HEADER_SEARCH_PATHS' => '$(SDKROOT)/usr/include/libxml2' }
> 	
>   s.dependency "Starscream" , '~> 3.0.6'
>   s.dependency "SwiftyXML", '~> 1.7.0'
>   s.dependency 'Fuzi', '~> 3.1.1'
>   s.dependency 'Sentry', '~> 4.2.1'
>   s.dependency 'ReachabilitySwift', '= 4.3.0'
>   s.dependency 'CryptoSwift', '~> 0.14.0'

The testing project has:
Other linker flags: _-l"xml2"_
Header Search Path: _$(SDKROOT)/usr/include/libxml2_

I can't understand the issue. Why it works for one version and doesn't work with another. Previously it was complaining that module was built with another Swift version, but 'Build Libraries for Distribution' flag looks like resolve it.

I also tried to find any hint in thread opened by @thebluepotato here: https://forums.swift.org/t/referring-to-libxml2-in-swift-package-description/28880 but failed.

I will appreciate any help. Thanks in advance!

Best regards, 
Alex.

### Environment
* Package Manager:
	- [ ] CocoaPods, version: 1.8.3


* Fuzi version: 3.1.1
* Xcode version: 11.2


### Description:
* Expected behaviour:
XPath look from node not root.

* Actual behaviour:
XPath look from root not node.

For example, I looked for 20 nodes with a certain class. After, I iterate result for look inside for one item with selected class (I know there is one object with this class). I checked count, it returned 20 not 1.

### Environment
* Package Manager:
	- [ ] Carthage, version:
	- [ ] CocoaPods, version:
	- [*] Manually

* Fuzi version: 1.0.1
* Xcode version: 11.2

### How to reproduce:
```
let nodes = root.xpath(searchForNodes)
print(nodes.count) // return 20, expected 20
nodes.forEach({
    let subNodes = $0.xpath(searchForOneSubNode)
    print(subNodes.count) // return 20, expected 1. repeated for all node
})
```
See #101 
````
/Applications/Xcode-beta.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator13.0.sdk/usr/include/libxml2/libxml/HTMLparser.h:15:10: 'libxml/xmlversion.h' file not found
````
Reading up on PackageDescription, the `.headerSearchPath` has to be relative and not absolute, but it wasn't really enforced before Xcode 11 beta 4, which allowed us to use `$(SDKROOT)/usr/include/libxml2` to point to the correct `libxml2` headers. Another issue seems to be that I can't get Xcode to read the `.unsafeFlags` which would allow to at least build the Package (but not distribute it). I'll open an issue in SPM as well.

That could be useful in some cases.
Hope you feel these functions are useful as well
I needs update attribute value on XMLElement,
If you don't mind, Please check it
Thank you
README is kind of out of date as some description still in Swift 3.
- [ ] English
- [ ] Chinese
- [ ] Japanese

### Description:
* Expected behaviour:

XML namespaces can be bound to a prefix at any element in a document. They can be bound within an element that uses that namespace prefix. XPath expressions should be able to use the same prefixes. E.g given the document:

```
<root>
    <u:BrowseResponse xmlns:u="urn:foo.bar" />
</root>
```
the XPath expression `/root/u:BrowseResponse` should resolve to a nodelist of 1 element. 

* Actual behaviour:

The XPath expression `/root/u:BrowseResponse` resolve to a nodelist of 0 elements and the following is printed

```
XPath error : Undefined namespace prefix
XPath error : Invalid expression
```

If the document is amended such that the prefix `u:`  is bound at the root element the xpath expression evaluates correctly.

### Environment
* Package Manager:
	- [X] CocoaPods, version: 1.2.2
* Fuzi version: 1.0.1
* Xcode version: 8.3.3

### How to reproduce:

The following test fails, demonstrating the issue.

```
    func testNestedNamespacePrefixWithXPath() {
        let docStr = "<?xml version=\"1.0\" encoding=\"UTF-8\"?><root><u:BrowseResponse xmlns:u=\"urn:foo.bar\"/></root>"

        do {
            let document = try Fuzi.XMLDocument(string: docStr)
            let nodes = document.xpath("/root/u:BrowseResponse")
            XCTAssertFalse(nodes.isEmpty)
        } catch let error {
            print(error)
            XCTFail(String(describing:error))
        }
    }
```
### Description:
* Expected behaviour:
Reading a broken XML throws an error.
* Actual behaviour:
Fuzi recovers and parses the XML partially (up to the error).

### Environment
* Package Manager: CocoaPods
* Fuzi version: 1.0.1
* Xcode version: 8.3.2

### How to reproduce:
While unit testing our library, we want to catch that our parser fails on invalid documents. Instead, the broken file gets partially parsed, because Fuzi sets the option to ignore errors (XML_PARSE_NOERROR): https://github.com/cezheng/Fuzi/blob/master/Sources/Document.swift#L112

As the initializers are failable, as a user we'd expect it to fail for invalid documents. Now, I can understand that not all users might want this, but could it be made available as an option? For example, modify the initialisers to accept an extra `options` parameter, by default set to
```swift
Int32(XML_PARSE_NOWARNING.rawValue | XML_PARSE_NOERROR.rawValue | XML_PARSE_RECOVER.rawValue)
```

Even better would be to provide a swift OptionSet that maps to the libxml values.

Example faulty XML:
```xml
<?xml version="1.0" encoding="utf-8"?>
<resources>
  <>
  <color name="ArticleTitle">#33fe66</color>
</resources>
```
Hi, 
How add Fuzi to swift project on Ubuntu Linux?