### Best Practice Checklist
Check these items before submitting a PR... See the Contribution Guide for the full detail: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md 

1. uri's compatible with all clouds (Stack, China, Government)
1. Staged artifacts use _artifactsLocation & _artifactsLocationSasToken
1. Use a parameter for resource locations with the defaultValue set to resourceGroup().location
1. Folder names for artifacts (nestedtemplates, scripts, DSC)
1. Use literal values for apiVersion (no variables)
1. Parameter files (GEN-UNIQUE for value generation and no "changemeplease" values)
1. $schema and other uris use https
1. Use uniqueString() whenever possible to generate names for resources.  While this is not required, it's one of the most common failure points in a deployment. 
1. Update the metadata.json with the current date

For details: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md

- [ ] - Please check this box once you've submitted the PR if you've read through the Contribution Guide and best practices checklist.

### Changelog

* fix BPs and deployment failures
*
*


[SAS Viya Quickstart Template for Azure](https://portal.azure.com/#create/Microsoft.Template/uri/https%3a%2f%2fraw.githubusercontent.com%2fAzure%2fazure-quickstart-templates%2fmaster%2fsas-viya%2fazuredeploy.json)

###I am looking for a similar template but for a single machine (SMP) instead for 3 separate machines, for ansible, controller, and services.


I don't have any issue with a specific template, but rather a problem with one resource type in general. Not sure where to report this, hope this is the correct repository.

Im trying to deploy a hostingplan, website and keyvault. The website has a 'system assigned identity', and the keyvault has an access policy, that allows the 'system assigned identity' to read secrets:

```json

{
  "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "skuName": {
      "type": "string",
      "defaultValue": "F1",
      "allowedValues": [
        "F1",
        "S1"
      ]
    },
    "hostingPlanName": {
      "type": "string",
      "defaultValue": "[concat('hosting-plan-', uniqueString(resourceGroup().id))]"
    },
    "appName": {
      "type": "string",
      "defaultValue": "app23451"
    },
    "skuCapacity": {
      "type": "int",
      "defaultValue": 1,
      "minValue": 1
    },
    "location":{
      "type":"string",
      "defaultValue":"[resourceGroup().location]"
    }
  },
  "variables": {
    "keyvaultName": "[concat('vlt-', uniqueString(parameters('appName')))]"
  },
  "resources": [
    {
      "apiVersion": "2018-02-01",
      "name": "[parameters('hostingPlanName')]",
      "type": "Microsoft.Web/serverfarms",
      "location": "[parameters('location')]",
      "tags": {
        "displayName": "HostingPlan"
      },
      "sku": {
        "name": "[parameters('skuName')]",
        "capacity": "[parameters('skuCapacity')]"
      },
      "properties": {
        "name": "[parameters('hostingPlanName')]"
      }
    },
    {
      "apiVersion": "2018-11-01",
      "identity":{
        "type": "SystemAssigned"
      },
      "name": "[parameters('appName')]",
      "type": "Microsoft.Web/sites",
      "location": "[parameters('location')]",
      "dependsOn": [
        "[parameters('hostingPlanName')]"
      ],
      "tags": {
        "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName')))]": "empty",
        "displayName": "Website"
      },
      "properties": {
        "name": "[parameters('appName')]",
        "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('hostingPlanName'))]"
      }
    },
    {
      "name": "[variables('keyvaultName')]",
      "type": "Microsoft.KeyVault/vaults",
      "apiVersion": "2016-10-01",
      "location": "[parameters('location')]",
      "dependsOn":[
        "[resourceId('Microsoft.Web/sites', parameters('appName'))]"
      ],
      "properties": {
        "tenantId": "[reference(concat('Microsoft.Web/sites/',  parameters('appName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').tenantId]",
        "sku": {
          "family": "A",
          "name": "standard"
        },
        "accessPolicies": [{
              "tenantId": "[reference(concat('Microsoft.Web/sites/',  parameters('appName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').tenantId]",
              "objectId": "[reference(concat('Microsoft.Web/sites/',  parameters('appName'), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]",
          "permissions":{
            "secrets": [ "get" ]
          }
        }],
        "enabledForDeployment": false,
        "enabledForDiskEncryption": false,
        "enabledForTemplateDeployment": false
      },
      "resources": []
    }
  ],
  "outputs": {
    "appServicePrincipalId": {
      "type": "string",
      "value": "[reference(concat(resourceId('Microsoft.Web/sites', parameters('appName')), '/providers/Microsoft.ManagedIdentity/Identities/default'), '2015-08-31-PREVIEW').principalId]"
    },
    "siteUri": {
      "type": "string",
      "value": "[reference(concat('Microsoft.Web/sites/', parameters('appName'))).hostnames[0]]"
    }
  }
}

```

I would expect the deployment to work on the first run, however the access policy produces the following error:
![image](https://user-images.githubusercontent.com/5894881/72662883-82ef3000-39ec-11ea-8222-377a729d202f.png)

Deploying the template a second time works, as by the the identity is found. It seems the access policy is validated before any other resource is created.

### Best Practice Checklist
Check these items before submitting a PR... See the Contribution Guide for the full detail: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md 

1. uri's compatible with all clouds (Stack, China, Government)
1. Staged artifacts use _artifactsLocation & _artifactsLocationSasToken
1. Use a parameter for resource locations with the defaultValue set to resourceGroup().location
1. Folder names for artifacts (nestedtemplates, scripts, DSC)
1. Use literal values for apiVersion (no variables)
1. Parameter files (GEN-UNIQUE for value generation and no "changemeplease" values)
1. $schema and other uris use https
1. Use uniqueString() whenever possible to generate names for resources.  While this is not required, it's one of the most common failure points in a deployment. 
1. Update the metadata.json with the current date

For details: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md

- [x] - Please check this box once you've submitted the PR if you've read through the Contribution Guide and best practices checklist.

### Changelog

* Template to deploy Hyper-V Host in Azure
* 
*

[301-servicebus-namespace-vnet](https://github.com/Azure/azure-quickstart-templates/tree/master/301-servicebus-namespace-vnet)

### Issue Details
Readme points to docs at https://docs.microsoft.com/en-us/azure/service-bus-messaging/service-bus-service-endpoints, which show how to create firewall rules by creating a "Microsoft.ServiceBus/namespaces/networkruleset" resource. However the template creates a "Microsoft.ServiceBus/namespaces/VirtualNetworkRules" resource instead for the same purpose. This is confusing - what's the right approach?
### Best Practice Checklist
Check these items before submitting a PR... See the Contribution Guide for the full detail: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md 

1. uri's compatible with all clouds (Stack, China, Government)
1. Staged artifacts use _artifactsLocation & _artifactsLocationSasToken
1. Use a parameter for resource locations with the defaultValue set to resourceGroup().location
1. Folder names for artifacts (nestedtemplates, scripts, DSC)
1. Use literal values for apiVersion (no variables)
1. Parameter files (GEN-UNIQUE for value generation and no "changemeplease" values)
1. $schema and other uris use https
1. Use uniqueString() whenever possible to generate names for resources.  While this is not required, it's one of the most common failure points in a deployment. 
1. Update the metadata.json with the current date

For details: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md

- [ ] - Please check this box once you've submitted the PR if you've read through the Contribution Guide and best practices checklist.

### Changelog

*
*
*


### Best Practice Checklist
Check these items before submitting a PR... See the Contribution Guide for the full detail: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md 

1. uri's compatible with all clouds (Stack, China, Government)
1. Staged artifacts use _artifactsLocation & _artifactsLocationSasToken
1. Use a parameter for resource locations with the defaultValue set to resourceGroup().location
1. Folder names for artifacts (nestedtemplates, scripts, DSC)
1. Use literal values for apiVersion (no variables)
1. Parameter files (GEN-UNIQUE for value generation and no "changemeplease" values)
1. $schema and other uris use https
1. Use uniqueString() whenever possible to generate names for resources.  While this is not required, it's one of the most common failure points in a deployment. 
1. Update the metadata.json with the current date

For details: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md

- [x] - Please check this box once you've submitted the PR if you've read through the Contribution Guide and best practices checklist.

### Changelog

* Initial Version
* Deploy an Internal APIM, with WAF v2 and SSL endpoints
* Prerequisites : DNS zone and the associated certificate in a Keyvault
* APIM is bound to a App Insights
* APIM and WAF logs are sent to a Log Analytics
* NSG rules are defined for both subnets


[Create Budget to Track Cost or Usage](https://github.com/Azure/azure-quickstart-templates/tree/master/create-budget)

### Issue Details

The template works the first time you deploy it. However, it's not apparent how to redeploy it as part of a larger template in a CI pipeline. A static start date cannot be used, as start date must be within the current timegrain period, but a dynamic start date results in error 400: "Budget start date cannot be updated"

### Repro steps (*if necessary, delete otherwise*)
1. Run the template
2. Wait for timegrain period to roll over
3. Re-run the template. There is no possible successful value for start date.
--------------------MESSAGE FROM ADMIN, DELETE BEFORE SUBMITTING----------------------

Sorry to hear you had a bad experience with one of the templates :worried: But, in case you're just asking a question, we're happy to help. You can also check if the question might already have been asked here https://github.com/Azure/azure-quickstart-templates/issues?utf8=%E2%9C%93&q=is%3Aissue

We've created an outline of recommended sections to fill out that will help make this Pull Request awesome!

--------------------MESSAGE FROM ADMIN, DELETE BEFORE SUBMITTING----------------------

[Template Name goes here](Template link goes here)

### Issue Details

### Repro steps (*if necessary, delete otherwise*)
1.
2.
3.
4.
5.
### Best Practice Checklist
Check these items before submitting a PR... See the Contribution Guide for the full detail: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/README.md 

1. uri's compatible with all clouds (Stack, China, Government)
1. Staged artifacts use _artifactsLocation & _artifactsLocationSasToken
1. Use a parameter for resource locations with the defaultValue set to resourceGroup().location
1. Folder names for artifacts (nestedtemplates, scripts, DSC)
1. Use literal values for apiVersion (no variables)
1. Parameter files (GEN-UNIQUE for value generation and no "changemeplease" values)
1. $schema and other uris use https
1. Use uniqueString() whenever possible to generate names for resources.  While this is not required, it's one of the most common failure points in a deployment. 
1. Update the metadata.json with the current date

For details: https://github.com/Azure/azure-quickstart-templates/blob/master/1-CONTRIBUTION-GUIDE/best-practices.md

- [ ] - Please check this box once you've submitted the PR if you've read through the Contribution Guide and best practices checklist.

### Changelog

*
*
*

