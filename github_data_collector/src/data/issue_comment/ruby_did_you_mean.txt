I'm thinking of adding suggestion when class name is written in lower case.
```ruby
current_time = time.now
# NameError (undefined local variable or method `time' for main:Object)
# Did you mean?  Time
```

I want to add suggestion on wrong number of arguments.
I added experimental class with refering experimental/ivar_name_correction.

```ruby
require 'did_you_mean/experimental'

Dir.glob('*', 0, 1, 2)
# test.rb:n:in `glob': wrong number of arguments (given 4, expected 1..2) (ArgumentError)
# Did you mean?
#                  Dir.glob( pattern, [flags], [base: path] )
#                  Dir.glob( pattern, [flags], [base: path] ) { |filename| block }

Array.new(3, "foo", "bar")
# test.rb:n:in `initialize': wrong number of arguments (given 3, expected 0..2) (ArgumentError)
# Did you mean?
#                  Array.new(size=0, default=nil)
#                  Array.new(array)
#                  Array.new(size) {|index| block }

a = [1,2,3]
p a.slice(1, 2, 3)
# test.rb:n:in `slice': wrong number of arguments (given 3, expected 1..2) (ArgumentError)
# Did you mean?
#                  ary.slice(index)
#                  ary.slice(start, length)
#                  ary.slice(range)
```
Iâ€™m seeing exponential growth in time when generating `message`. Reproduction and timings here:

https://gist.github.com/zenspider/4fbf1a5d237095c52184a57c86cdb5eb

Hi, @yuki24.
I'm thinking of adding global variables to suggestions.

Previously:
```ruby
STIN
# NameError: uninitialized constant STIN
# Did you mean?  STDIN
# Nice correction. But, this one
stin
# NameError: undefined local variable or method `stin' for main:Object
# Did you mean?  String
```

After this commit:
```ruby
stin
# NameError: undefined local variable or method `stin' for main:Object
# Did you mean?  $stdin
```

I also cleaned up the list of global variables so that it doesn't start with special characters or numbers that will never trigger NameError in the first place.