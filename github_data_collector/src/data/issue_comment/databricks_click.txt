Hello!

Just stumbled upon this really amazing tool, but it's impossible for me to use it in my daily job routines because of lack of the OIDC authn. Is there any possibility for this authn strategy to appear in Click in the foreseeable future?

```
[some-context] [some-ns] [none] > nodes
No update command specified, can't update
Couldn't get an authentication token. You can try exiting Click and running a kubectl command against the cluster to refresh it. Also please report this error on the Click github page.
Server Error: nodes is forbidden: User "system:anonymous" cannot list resource "nodes" in API group "" at the cluster scope
```

User configuration from my kubeconfig file (values were edited):
```
- name: mrcat
  user:
    auth-provider:
      config:
        client-id: blah
        client-secret: wow
        id-token: blah
        idp-certificate-authority-data: wow
        idp-issuer-url: https://blah
        refresh-token: wow
      name: oidc
```
Full build log:
```
Preparing...
Cloning click build files...
Checking click dependencies...

Building click...
==> Making package: click 0.4.0-1 (Wed 11 Sep 2019 17:22:04 BST)
==> Checking runtime dependencies...
==> Checking buildtime dependencies...
==> Retrieving sources...
  -> Found v0.4.0.tar.gz
==> Validating source files with sha256sums...
    v0.4.0.tar.gz ... Passed
==> Removing existing $srcdir/ directory...
==> Extracting sources...
  -> Extracting v0.4.0.tar.gz with bsdtar
==> Removing existing $pkgdir/ directory...
==> Starting build()...
   Compiling libc v0.2.46
   Compiling cc v1.0.28
   Compiling proc-macro2 v0.4.24
   Compiling nix v0.11.0
   Compiling winapi v0.3.6
   Compiling cfg-if v0.1.6
   Compiling matches v0.1.8
   Compiling version_check v0.1.5
   Compiling num-traits v0.2.6
   Compiling void v1.0.2
   Compiling unicode-xid v0.1.0
   Compiling unicode-normalization v0.1.7
   Compiling httparse v1.3.3
   Compiling untrusted v0.6.2
   Compiling lazy_static v1.2.0
   Compiling bitflags v1.0.4
   Compiling safemem v0.3.0
   Compiling serde v1.0.84
   Compiling ryu v0.2.7
   Compiling percent-encoding v1.0.1
   Compiling byteorder v1.2.7
   Compiling num-integer v0.1.39
   Compiling unicode-width v0.1.5
   Compiling bitflags v0.7.0
   Compiling lazycell v1.2.1
   Compiling rustc-serialize v0.3.24
   Compiling traitobject v0.1.0
   Compiling linked-hash-map v0.5.1
   Compiling typeable v0.1.2
   Compiling remove_dir_all v0.5.1
   Compiling regex v0.2.11
   Compiling language-tags v0.2.2
   Compiling ucd-util v0.1.3
   Compiling quick-error v1.2.2
   Compiling term v0.4.6
   Compiling utf8parse v0.1.1
   Compiling encode_unicode v0.3.5
   Compiling strsim v0.7.0
   Compiling dtoa v0.4.3
   Compiling ansi_term v0.11.0
   Compiling unicode-segmentation v1.2.1
   Compiling nom v2.2.1
   Compiling utf8-ranges v1.0.2
   Compiling lazy_static v0.2.11
   Compiling vec_map v0.8.1
   Compiling itoa v0.4.3
   Compiling ansi_term v0.9.0
   Compiling unicode-bidi v0.3.4
   Compiling log v0.4.6
   Compiling thread_local v0.3.6
   Compiling memchr v2.1.2
   Compiling unicase v1.4.2
   Compiling textwrap v0.10.0
   Compiling base64 v0.9.3
   Compiling base64 v0.5.2
   Compiling yaml-rust v0.4.2
   Compiling humantime v1.2.0
   Compiling regex-syntax v0.5.6
   Compiling ring v0.13.5
   Compiling log v0.3.9
   Compiling idna v0.1.5
   Compiling memchr v1.0.2
   Compiling time v0.1.42
   Compiling num_cpus v1.9.0
   Compiling rand v0.4.5
   Compiling dirs v1.0.4
   Compiling nix v0.8.1
   Compiling atty v0.2.11
   Compiling mime v0.2.6
   Compiling shared_child v0.3.3
   Compiling nom v3.2.1
   Compiling csv v0.15.0
   Compiling quote v0.6.10
   Compiling aho-corasick v0.6.9
   Compiling clap v2.32.0
   Compiling url v1.7.2
   Compiling tempdir v0.3.7
   Compiling syn v0.15.24
   Compiling prettytable-rs v0.6.7
   Compiling os_pipe v0.5.1
   Compiling rusticata-macros v0.3.3
   Compiling der-parser v0.3.5
   Compiling hyper v0.10.15
   Compiling os_pipe v0.7.0
   Compiling ctrlc v3.1.1
   Compiling rustyline v3.0.0
   Compiling atomicwrites v0.2.2
error[E0283]: type annotations required: cannot resolve `std::string::String: std::convert::AsRef<_>`
   --> /home/johan/.cargo/registry/src/github.com-1ecc6299db9ec823/rustyline-3.0.0/src/lib.rs:655:43
    |
655 |             editor.add_history_entry(line.as_ref());
    |                                           ^^^^^^

   Compiling duct v0.11.1
error: aborting due to previous error

For more information about this error, try `rustc --explain E0283`.
error: Could not compile `rustyline`.
warning: build failed, waiting for other jobs to finish...
error: build failed
==> ERROR: A failure occurred in build().
    Aborting...
```
Otherwise, set it to None
The ux is a bit confusing to select the pod context, and I didn't see anything in the help menu that described it.

Would you take a PR to change the ux to allow:

```
[context][namespace][] > pod mypod
[context][namespace][mypod] > pod mypod
```


Synced the PR from https://github.com/databricks/click/pull/78 with the latest master branch and added some caching for the token.

At the moment haven't reused much from `AuthProvider` since it does seem a bit different to me.
If you have any remarks (my rust experience is 0), please let me know @nicklan 
```
[dev-telecom] [none] [none] > pods
No update command specified, can't update
Couldn't get an authentication token. You can try exiting Click and running a kubectl command against the cluster to refresh it. Also please report this error on the Click github page.
Hyper error: invalid certificate: UnknownIssuer
```

```
kubectl get pods --context dev-telecom
NAME                                                              READY   STATUS             RESTARTS   AGE
alertmanager-55448f5d7-85s2s                                      2/2     Running            0          2d1h
...
```

Kube config

```

- cluster:
    certificate-authority: PATH_TO_CA.PEM
    server: https://SERVER
  name: dev
- context:
    cluster: dev
    namespace: telecom
    user: USER
  name: dev-telecom

```

Since you can set your $EDITOR of choice, would it be a nice feature to have a edit command to directly edit yaml of an object? like kubectl edit does.

Thanks for the software! Great idea, implementation and documentation. 

Have a look at this issue I raised for kubectl. You can also implement it at click layer for better developer UX: https://github.com/kubernetes/kubectl/issues/524