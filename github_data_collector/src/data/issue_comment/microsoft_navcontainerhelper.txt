I was getting an error that [NT AUTHORITY\NETWORK SERVICE] user does not exist in the server when I use Export-NAVApplication inside a container. I'm using the databases created by navcontainerhelper.

Looking at the database with SQL Management Studio I can see that the [NT AUTHORITY\NETWORK SERVICE] user is created in tenant/default database but not in CRONUS. And it in fact not one the server users. 
At the same time [NT AUTHORITY\SYSTEM] exists in all databases.

If I add the NetworkService to the users before exporting the application, then there is no problem.

Is that the intended behavior? 

(onprem:14.5.35970.0-w1 + nch 0.6.4.25
Please add -IncludePC PC stand here prerequisite components. It should allow to install perquisite components on host side. 

Use case: Report development.

Actually, this feature has currently known workaround, but this works only to BC14 because -clickonce is part of the windows client. As we know -clickonce put beautiful and simple webpage inside container. This webpage contain possibility to install prerequisite components as well. Good enough to make dockerized process available for developers. 

Hi, what could be a reason of failure during creating the container? 
I have locally host OS version 1903 and this script runs fine.
My colleague has host OS version 1909 and the same script fails at his PC....

```
NavContainerHelper is version 0.6.4.24
NavContainerHelper is running as administrator
Host is Microsoft Windows 10 Enterprise - 1909
Docker Client Version is 19.03.5
Docker Server Version is 19.03.5
Using image mcr.microsoft.com/businesscentral/onprem:15.0.36560.0-ltsc2019
Removing C:\ProgramData\NavContainerHelper\Extensions\knkbc15
Creating Container knkbc15
Version: 15.0.36560.0-W1
Style: onprem
Platform: 15.0.36510.0
Generic Tag: 0.0.9.95
Container OS Version: 10.0.17763.737 (ltsc2019)
Host OS Version: 10.0.18363.535 (1909)
A better Generic Container OS exists for your host (1909)
Using generic image mcr.microsoft.com/dynamicsnav:generic-1909
Generic Container OS Version: 10.0.18363.535 (1909)
Generic Tag of better generic: 0.0.9.97
Using locale en-US
Using process isolation
Disabling the standard eventlog dump to container log every 2 seconds (use -dumpEventLog to enable)
Using license file D:\Docker\xxx v15.flf
Files in C:\ProgramData\NavContainerHelper\Extensions\knkbc15\my:
- AdditionalOutput.ps1
- database.bak
- license.flf
- MainLoop.ps1
- SetupWebClient.ps1
Creating container knkbc15 from image mcr.microsoft.com/dynamicsnav:generic-1909
3166d001a55cda363ed985eaaa304d926122554665921536d285b96ca8948b75
DockerDo : docker.exe: Error response from daemon: hcsshim::CreateComputeSystem 3166d001a55cda363ed985eaaa304d926122554665921536d285b96ca8948b75: Falscher Parameter.
(extra info: {"SystemType":"Container","Name":"3166d001a55cda363ed985eaaa304d926122554665921536d285b96ca8948b75","Owner":"docker","VolumePath":"\\\\?\\Volume{22c95182-7d5f-4102-865b-1e0
0879f2d5d}","IgnoreFlushesDuringBoot":true,"LayerFolderPath":"C:\\ProgramData\\Docker\\windowsfilter\\3166d001a55cda363ed985eaaa304d926122554665921536d285b96ca8948b75","Layers":[{"ID":"
0f99125d-ef95-5395-afb5-0a8648fc4fc9","Path":"C:\\ProgramData\\Docker\\windowsfilter\\6edd979a0f23c4964d8aa5b0453d79227cc5613de61afae0f49cc7bae9124b38"},{"ID":"ccb6c497-e6ac-561a-8c4f-b
dd63ffd5b93","Path":"C:\\ProgramData\\Docker\\windowsfilter\\93593e04a11898624a4a1505cc3425641f51e5befb71defd6e5de4c4533a7f7a"},{"ID":"b24173e8-a1a1-5230-a5d9-b6c031506e75","Path":"C:\\
ProgramData\\Docker\\windowsfilter\\e3aa7c3005a3e0491c7623b964773942e233e4bf8ba89536ea4f72635bdc463a"},{"ID":"69f131f0-18af-58dd-ba1c-af16c0fcd449","Path":"C:\\ProgramData\\Docker\\wind
owsfilter\\4116af208862e929d305bcad13b8a5aa3832920d757aed648f64161445c1750b"},{"ID":"daf19e2b-5f77-53a4-9035-ecb463fdeabb","Path":"C:\\ProgramData\\Docker\\windowsfilter\\fba89380db0724
db272fcf8c8a801bcbe1ebdd7acb37c58c38520176d789a884"},{"ID":"9a241988-67b1-5905-98ab-0190171b834f","Path":"C:\\ProgramData\\Docker\\windowsfilter\\199fa376eb59160ebeb9de8e21201c724127521
5d70dfd8cfecd389a9bfb6408"},{"ID":"3e2fee8b-e287-51f6-843d-e030159892fa","Path":"C:\\ProgramData\\Docker\\windowsfilter\\4fd8cfdfae1e5e61e1894be00e53096566c5c0e5063d02c9404480f8d02c29c8
"},{"ID":"23310c11-1a37-573d-9c6a-d1f1b9e02149","Path":"C:\\ProgramData\\Docker\\windowsfilter\\5c9cb0bdbebf9f737c1074906d4dcda103a407987ec709257208b26aa7389f00"},{"ID":"866484d2-b99d-5
896-92ca-4c3467d1ec5d","Path":"C:\\ProgramData\\Docker\\windowsfilter\\0b55cfe483edced55304b2a3d2d39506f6b965024c65d7fbc01007b983cdb0b2"},{"ID":"d293b260-e446-5dbc-b6b8-35334b1258aa","P
ath":"C:\\ProgramData\\Docker\\windowsfilter\\a2965d8767698045ef88782cf3cdc2f037648ea52d3bbb4351b73d09f4b812ba"},{"ID":"72184cd3-9344-552a-8a27-4ad096a7b993","Path":"C:\\ProgramData\\Do
cker\\windowsfilter\\1361552ce2602f1cd4dbe460f01711f02176927b4594d6f31b9cc6a8359f7863"},{"ID":"54361e4f-f35e-5731-bc20-53b940cb59d5","Path":"C:\\ProgramData\\Docker\\windowsfilter\\e2bd
47b4ff2a5e7cb0a4b607778cf2270c3a8a5840fed7c55f8e5ef584e7b506"},{"ID":"ca328be1-508a-5773-bc1e-e917c449ab4b","Path":"C:\\ProgramData\\Docker\\windowsfilter\\aa7d12259844441789796d02617c3
5f14a6b494b5ab5794b9ab33611bcf9a44c"},{"ID":"a0d19276-c71e-58b5-8429-67b555e28a0c","Path":"C:\\ProgramData\\Docker\\windowsfilter\\20e981ea9442e8c730c3e95cc8194f4b8a1332629eeb60f5196a7e
dd93bc489d"},{"ID":"0cbe058b-84c9-5f46-b889-714c6d40de11","Path":"C:\\ProgramData\\Docker\\windowsfilter\\ff66c8dd68e584bce6acef4ac106994d04658d25008077b50b5a825f15eb2a8a"}],"HostName":
"knkbc15","MappedDirectories":[{"HostPath":"c:\\programdata\\navcontainerhelper\\15.0.36560.0-w1-files","ContainerPath":"c:\\navdvd","ReadOnly":false,"BandwidthMaximum":0,"IOPSMaximum":
0,"CreateInUtilityVM":false},{"HostPath":"d:\\docker","ContainerPath":"d:\\docker","ReadOnly":false,"BandwidthMaximum":0,"IOPSMaximum":0,"CreateInUtilityVM":false},{"HostPath":"c:\\prog
ramdata\\navcontainerhelper","ContainerPath":"c:\\programdata\\navcontainerhelper","ReadOnly":false,"BandwidthMaximum":0,"IOPSMaximum":0,"CreateInUtilityVM":false},{"HostPath":"c:\\prog
ramdata\\navcontainerhelper\\extensions\\knkbc15\\my","ContainerPath":"c:\\run\\my","ReadOnly":false,"BandwidthMaximum":0,"IOPSMaximum":0,"CreateInUtilityVM":false}],"HvPartition":false
,"EndpointList":["1481BB32-97D3-4098-BF25-F97044E31AE7"],"AllowUnqualifiedDNSQuery":true}).
ExitCode: 125
Commandline: docker run --label nav= --label version=15.0.36560.0 --label country=W1 --label cu=rtm --label platform=15.0.36510.0 --env licenseFile="c:\run\my\license.flf" --name 
knkbc15 --hostname knkbc15 --env auth=Windows --env username="xxx" --env ExitOnError=N --env locale=en-US --env databaseServer="" --env databaseInstance="" --volume 
"C:\ProgramData\NavContainerHelper:C:\ProgramData\NavContainerHelper" --volume "C:\ProgramData\NavContainerHelper\Extensions\knkbc15\my:C:\Run\my" --isolation process --restart 
unless-stopped --env enableApiServices=Y --env useSSL=N --volume "C:\ProgramData\NavContainerHelper\15.0.36560.0-W1-Files:c:\NAVDVD" --env securePassword=76492d1116743f0423413b16050a534
5MgB8AHgAYwBvAEwARABwAFkAawArAG0AYQA0AEEAVwBpAEMASABIAGkANQB0AHcAPQA9AHwAYQBlADcAOABmAGUAMAAyADYAZABiAGUANAAzAGYANwA0AGIAMwAzADMAYQBmADEAMgAxAGUAYgA1ADAAYgAzAGQAMwAxADgANABhADQAYgBjADIA
NQA5AGIAOQA1AGMAZAA5ADMAYwBkAGQAMwA5AGQAMwA4AGQAOAAzADUAMQA= --env passwordKeyFile="c:\run\my\aes.key" --env removePasswordKeyFile=Y --volume D:\Docker:D:\Docker --env 
bakfile="D:\Docker\database.bak" --env accept_eula=Y --env accept_outdated=Y --detach mcr.microsoft.com/dynamicsnav:generic-1909
In C:\Program Files\WindowsPowerShell\Modules\navcontainerhelper\0.6.4.24\ContainerHandling\New-NavContainer.ps1:1264 Zeichen:19
+ ...       if (!(DockerDo -accept_eula -accept_outdated:$accept_outdated - ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,DockerDo 

```
When using cmdlet "Compile-AppInNavConatiner" for building the BaseApp, you end up with 800+ warnings. These warning are related to std. NAV objects in which we don't have any footprint.
Having all those warnings make the compiler output less useful. We still want to see our warnings.
 As an improvement for the cmdlet a regex (or collection of regex) must be added as a parameter. This regex can be used to exclude specific lines of the compiler output. For example:
- Ignore all warnings in sources of folder ./original/**

This way can eliminate all the warnings which we can't and won't fix. And still see warnings we introduced.
 
I'm trying to create a container and run tests in it. It is triggered from DevOps.

It is essentially calling a vanilla `New-NavContainer` call with the `-includeTestToolkit` specified.
The test apps start loading, but at the "Publishing C:\Applications\BaseApp\Test\Microsoft_Tests-SCM.app" it fails, presumably it times out.
This could be because that app is too large?

```
docker pull mcr.microsoft.com/businesscentral/sandbox;
$ContainerName = "RunTestsOInSandbox";
New-NavContainer -containerName $ContainerName -imageName `
    mcr.microsoft.com/businesscentral/sandbox -licenseFile 'C:\somelicenseFile.flf' -auth Windows -accept_eula `
    -includeTestToolkit -accept_outdated
```


```
...
2020-01-02T19:02:41.1910651Z Publishing C:\Applications\BaseApp\Test\Microsoft_Tests-Reverse.app
2020-01-02T19:02:41.2099581Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T19:02:44.3662368Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T19:02:44.7746900Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T19:02:46.1021815Z Publishing C:\Applications\BaseApp\Test\Microsoft_Tests-SCM.app
2020-01-02T19:02:46.1805197Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T19:04:28.0652759Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T19:04:34.0904704Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T19:06:07.5768512Z The socket connection was aborted. This could be caused by an error processing your message or a receive timeout being exceeded by the remote host, or an underlying network resource issue. Local socket timeout was '10675199.02:48:05.4775807'.
2020-01-02T19:06:07.5801754Z at <ScriptBlock>, <No file>: line 58
2020-01-02T19:06:07.5803259Z at <ScriptBlock>, <No file>: line 18
2020-01-02T19:06:07.8037536Z The socket connection was aborted. This could be caused by an error processing your message or a receive timeout being 
2020-01-02T19:06:07.8037874Z exceeded by the remote host, or an underlying network resource issue. Local socket timeout was 
2020-01-02T19:06:07.8038091Z '10675199.02:48:05.4775807'.
2020-01-02T19:06:07.8038503Z At C:\Program 
2020-01-02T19:06:07.8038796Z Files\WindowsPowerShell\Modules\navcontainerhelper\0.6.4.1\ContainerHandling\Invoke-ScriptInNavContainer.ps1:37 char:13
2020-01-02T19:06:07.8039624Z +             Invoke-Command -Session $session -ScriptBlock $scriptbloc ...
2020-01-02T19:06:07.8040042Z +             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
2020-01-02T19:06:07.8040235Z     + CategoryInfo          : InvalidOperation: (Microsoft.Dynam...pRuntimePackage:GetNavAppRuntimePackage) [Get-NavAp 
2020-01-02T19:06:07.8040774Z    pRuntimePackage], CommunicationException
2020-01-02T19:06:07.8041369Z     + FullyQualifiedErrorId : Microsoft.Dynamics.Nav.Apps.Management.Cmdlets.GetNavAppRuntimePackage
2020-01-02T19:06:07.8041942Z     + PSComputerName        : 3fd5b4f486bed1546030537957d715fb1b32b58c755527964dd96ab718b9a9c2
2020-01-02T19:06:07.8042134Z  
2020-01-02T19:06:08.1583876Z ##[error]PowerShell exited with code '1'.
```

reran it to make sure I'm not wasting your time. It was a different error but still failed in the same spot. The job had been running/stuck on this task for about an hour.
```
...
2020-01-02T20:23:51.8957405Z Publishing C:\ProgramData\NavContainerHelper\Extensions\onprem-Applications-15.2.39040.39399-w1\Microsoft_Tests-Reverse.runtime.app
2020-01-02T20:23:51.9215539Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T20:23:54.8078337Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T20:23:55.1877054Z Publishing C:\Applications\BaseApp\Test\Microsoft_Tests-SCM.app
2020-01-02T20:23:55.2662327Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T20:26:31.0508578Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T20:26:37.1248665Z WARNING: This license is not compatible with this version of Business Central.
2020-01-02T21:05:17.9015879Z ##[error]The operation was canceled.
```
currently we have our product on the app source where we dont show our source code. When user download our app, report an issue, we ask them to copy the PROD into sandbox and give us access to it so that we can replicate the issue, find the root cause of the issue and fix it.

Now during this process, we might have to connect our VS code to the sandbox and debug the code to find the root cause of this issue. We have few doubts and issues dong that

We get the same version of code thats on the app source and then change the app.json to point to cloud sandbox. 
Please note showmycode in app.json is false.
now we click CTRL+SHIFT+F5 in VS code to publish the code without source code.
Now when we keep the break point, we see that it doesnt hit the break point.

can you please help!!
We used this script to setup the Treafik container: https://github.com/tfenster/TraefikForBC
Thanks to Tobias!

```
Import-Module C:\TraefikforBC\TraefikForBC.psd1 -force
Initialize-TraefikForBC -email own@mailaddress.nl -externaldns own.dns.com
Start-Traefik

```
And we use this to create a container:
Thanks to Freddy!
```
New-BcContainer `
        -accept_eula `
        -alwaysPull `
        -accept_outdated `
        -containerName $ContainerName `
        -imageName $ImageName `
        -licenseFile $container.LicenseFile `
        -assignPremiumPlan `
        -Credential $Credentials `
        -auth NavUserPassword `
        -updateHosts `
        -isolation process `
        -additionalParameters $AdditionalParameters `
        -shortcuts None `
        -doNotCheckHealth `
        -includeAL `
        -memoryLimit $MemoryLimit `
        -useTraefik `
        -PublicDnsName 'own.dns.com'
```

Container is succesfully created:
![image](https://user-images.githubusercontent.com/28626283/71158014-66bc6f80-2243-11ea-99ea-cafdcd4b1c84.png)

Traefik is running:
![image](https://user-images.githubusercontent.com/28626283/71158521-65d80d80-2244-11ea-8d52-72571546c0b9.png)

Using the url:
`https://own.dns.com/latest-w1`

But the links are not working:
![image](https://user-images.githubusercontent.com/28626283/71158147-b438dc80-2243-11ea-9ead-07963af55ba6.png)

Container IP is also unreachable:
![image](https://user-images.githubusercontent.com/28626283/71158910-0d554000-2245-11ea-8be0-24a4057be1b6.png)

What are we doing wrong?
Please can anyone help us with this?




Hi,

it would be helpful to have the ability to create a code coverage report while running the tests with _Run-TestsInNavContainer_. The easiest way would be to add a option to the _Run-TestsInNavContainer_ commandlet (_-codeCoverage_ for example) that automatically generates the code coverage report alongside the XUnit test result file. 

Having the code coverage for our tests would be really helpful for our build pipelines, because it would enable us to check for the code coverage in pull requests and thus automatically refuse bad pull requests that do not meet our quality expectations and still need to be worked on. 

Azure DevOps supports code coverage files in [Cobertura](https://cobertura.github.io/cobertura/) and [JaCoCo](https://www.eclemma.org/jacoco/) format out of the box (Source [[1]](https://docs.microsoft.com/en-us/azure/devops/pipelines/test/review-code-coverage-results?view=azure-devops#tasks) [[2]](https://docs.microsoft.com/en-us/azure/devops/pipelines/tasks/test/publish-code-coverage-results?view=azure-devops)), so those file formats would be preferred. 
```
##[error]The Extension cannot be unpublished because it is required by the following apps: Default App Name
```

The reason is that the most depended upon app ("Default Base App Name" in this example) has to be published first, but can only be unpublished last. You have to loop twice through the apps, once in reversed direction to unpublish and a second time normally to publish them:

```
$sortedFolders = Sort-AppFoldersByDependencies -appFolders $appFolders.Split(',') -baseFolder $artifactsFolder -WarningAction SilentlyContinue 

[array]::Reverse($sortedFolders)
$sortedFolders | ForEach-Object {
    $appFolder = $_
    $appJsonFile = (Get-Item (Join-Path $artifactsFolder "$appFolder\app.json")).FullName
    $appJson = Get-Content $appJsonFile | ConvertFrom-Json
    
    $ErrorActionPreference = "Stop"
    
    $apps = Get-BCContainerAppInfo $containerName -tenantSpecificProperties | Sort-Object -Property Name
    Write-Host "Extensions:"
    $apps | ForEach-Object {
        Write-Host " - $($_.Name) v$($_.version) installed=$($_.isInstalled)"
        if ($_.publisher -eq $appJson.publisher -and $_.name -eq $appjson.name -and $_.appid -eq $appjson.id) {
            UnPublish-BCContainerApp -containerName $containerName -appName $_.name -publisher $_.publisher -version $_.Version -unInstall -force
        }
    }
}

[array]::Reverse($sortedFolders)
$sortedFolders | ForEach-Object {

    $appFolder = $_
    $appFile = (Get-Item (Join-Path $artifactsFolder "$appFolder\*.app")).FullName
    Write-Host "Appfile: $appFile"
    $appJsonFile = (Get-Item (Join-Path $artifactsFolder "$appFolder\app.json")).FullName
    $appJson = Get-Content $appJsonFile | ConvertFrom-Json
    
    $ErrorActionPreference = "Stop"
    
    Publish-BCContainerApp -containerName $containerName -appFile $appFile -skipVerification -sync -scope Tenant
    try { Start-BCContainerAppDataUpgrade -containerName $containerName -appName $appJson.name -appVersion $appJson.version } catch { }
    Install-BCContainerApp -containerName $containerName -appName $appJson.name -appVersion $appJson.version
}
```

I'm not entirely sure if simply reversing the order of the apps is always sufficient to unpublish them without errors?

Also, notice I surrounded `Start-BCContainerAppDataUpgrade` with a try/catch. That was solved in a different way previously.
When trying to create a new insider container on a Windows10 Host, I'm getting the above error.
It works when I add "-isolation 'HyperV'".. .  Current images (like "mcr.microsoft.com/businesscentral/onprem:be") work fine.  Only insider images have this problem.

Full output - I added the "***" message to see what the actual docker command was ...:
```
NavContainerHelper is version 0.6.4.20
NavContainerHelper is not running as administrator
Host is Microsoft Windows 10 Pro - ltsc2019
Docker Client Version is 18.09.1
Docker Server Version is 18.09.1
VERBOSE: Perform operation 'Enumerate CimInstances' with following parameters, ''namespaceName' = root\cimv2,'className' = Win32_OperatingSystem'.
VERBOSE: Operation 'Enumerate CimInstances' complete.
Pulling image bcinsider.azurecr.io/bcsandbox-master:be-ltsc2019
*** Docker run: pull  bcinsider.azurecr.io/bcsandbox-master:be-ltsc2019
be-ltsc2019: Pulling from bcsandbox-master
Using image bcinsider.azurecr.io/bcsandbox-master:be-ltsc2019
Removing container bcdaily
Removing bcdaily from host hosts file
Removing C:\ProgramData\NavContainerHelper\Extensions\bcdaily
Creating Container bcdaily
Version: 16.0.10541.0-be
Style: sandbox
Platform: 15.0.38209.0
Generic Tag: 0.0.9.96
Container OS Version: 10.0.17763.805 (ltsc2019)
Host OS Version: 10.0.17763.864 (ltsc2019)
WARNING: The container operating system matches the host operating system, but the revision is different.
If you encounter issues, you might want to specify -isolation hyperv
Using locale nl-BE
Using process isolation
Disabling the standard eventlog dump to container log every 2 seconds (use -dumpEventLog to enable)
Files in C:\ProgramData\NavContainerHelper\Extensions\bcdaily\my:
- AdditionalOutput.ps1
- MainLoop.ps1
- SetupVariables.ps1
- SetupWebClient.ps1
- updatehosts.ps1
Creating container bcdaily from image bcinsider.azurecr.io/bcsandbox-master:be-ltsc2019
*** Docker run: run --env licenseFile="" --name bcdaily --hostname bcdaily --env auth=NavUserPassword --env username="waldo" --env ExitOnError=N --env locale=nl-BE --env databaseServer="" --env databaseInstance="" --volume "C:\ProgramData\NavContainerHelper:C:\ProgramData\NavContainerHelper" --volume "C:\ProgramData\NavContainerHelper\Extensions\bcdaily\my:C:\Run\my" --isolation process --restart unless-stopped --memory 8G --env enableApiServices=Y --env useSSL=N --volume "c:\windows\system32\drivers\etc:C:\driversetc" --env securePassword=76492d1116743f0423413b16050a5345MgB8AFkAeABVAGQAdgBaADIARQA2AG0AbQBDAEEATABaAHUAaQBMADEATwB6AGcAPQA9AHwAMQAyADMANwBjAGEAMQA1ADkAMQAzADYAMgA0ADQANwA0ADkAMgAwAGIAOQBjADkAZQAwAGQAZgA3ADgANABlAGUAMgA2ADkAYQBjADgAYQA2AGMAOAAyADcAMgA5ADUAYQAxADkANwBkADkAMAAyAGIAYgA2ADEANgA0ADgANAA= --env passwordKeyFile="c:\run\my\aes.key" --env removePasswordKeyFile=Y --cpu-count 8 --dns=8.8.8.8 --env accept_eula=Y --env accept_outdated=Y --detach bcinsider.azurecr.io/bcsandbox-master:be-ltsc2019
d676734d4b30ce874c8353fa4b152ef4a930760c3be6d8f387fdfea1ca5e7720
Waiting for container bcdaily to be ready
Initializing...
Setting host.docker.internal to  in container hosts file (copy from host hosts file)
Setting gateway.docker.internal to  in container hosts file (copy from host hosts file)
Setting host.containerhelper.internal to 172.26.80.1 in container hosts file
Starting Container
Hostname is
PublicDnsName is bcdaily
Using NavUserPassword Authentication
Starting Local SQL Server
Starting Internet Information Server
Creating Self Signed Certificate
Self Signed Certificate Thumbprint 09E4F1C023552E77D81612C8312453CEBFAE3361
Modifying Service Tier Config File with Instance Specific Settings
Starting Service Tier
Service 'Dynamics 365 Business Central Server [BC] (MicrosoftDynamicsNavServer$BC)' cannot be started due to the following error: Cannot start service MicrosoftDynamicsNavServer$BC on computer '.'.
at <ScriptBlock>, C:\Run\navstart.ps1: line 142
at <ScriptBlock>, C:\Run\start.ps1: line 121
at <ScriptBlock>, <No file>: line 1Error
Initializing...
Setting host.docker.internal to  in container hosts file (copy from host hosts file)
Setting gateway.docker.internal to  in container hosts file (copy from host hosts file)
Setting host.containerhelper.internal to 172.26.80.1 in container hosts file
Starting Container
Hostname is
PublicDnsName is bcdaily
Using NavUserPassword Authentication
Starting Local SQL Server
Starting Internet Information Server
Creating Self Signed Certificate
Self Signed Certificate Thumbprint 09E4F1C023552E77D81612C8312453CEBFAE3361
Modifying Service Tier Config File with Instance Specific Settings
Starting Service Tier
Service 'Dynamics 365 Business Central Server [BC] (MicrosoftDynamicsNavServer$BC)' cannot be started due to the following error: Cannot start service MicrosoftDynamicsNavServer$BC on computer '.'.
at <ScriptBlock>, C:\Run\navstart.ps1: line 142
at <ScriptBlock>, C:\Run\start.ps1: line 121
at <ScriptBlock>, <No file>: line 1
Initialization of container bcdaily failed
At C:\Users\ericw\Documents\WindowsPowerShell\Modules\navcontainerhelper\0.6.4.20\ContainerHandling\Wait-NavContainerReady.ps1:44 char:17
+ ...             throw "Initialization of container $containerName failed" ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : OperationStopped: (Initialization ... bcdaily failed:String) [], RuntimeException
    + FullyQualifiedErrorId : Initialization of container bcdaily failed
```

This is the script I'm running:

```powershell
New-NavContainer
-containerName 'bcdaily'
-imageName 'bcinsider.azurecr.io/bcsandbox-master:be'
-accept_eula
-additionalParameters '--cpu-count 8 --dns=8.8.8.8'
-alwaysPull:True
-Credential $MyCredential
-updateHosts
-auth NavUserPassword
-enableSymbolLoading:False
-assignPremiumPlan:False
-useBestContainerOS
-includeTestToolkit:False
-includeTestLibrariesOnly:False
-Verbose
-memoryLimit 8G
-accept_outdated
-includeAL
```

These are the logs:
```
PS > docker logs bcdaily
Initializing...
Setting host.docker.internal to  in container hosts file (copy from host hosts file)
Setting gateway.docker.internal to  in container hosts file (copy from host hosts file)
Setting host.containerhelper.internal to 172.26.80.1 in container hosts file
Starting Container
Hostname is
PublicDnsName is bcdaily
Using NavUserPassword Authentication
Starting Local SQL Server
Starting Internet Information Server
Creating Self Signed Certificate
Self Signed Certificate Thumbprint 09E4F1C023552E77D81612C8312453CEBFAE3361
Modifying Service Tier Config File with Instance Specific Settings
Starting Service Tier
Service 'Dynamics 365 Business Central Server [BC] (MicrosoftDynamicsNavServer$BC)' cannot be started due to the following error: Cannot start service MicrosoftDynamicsNavServer$BC on computer '.'.
at <ScriptBlock>, C:\Run\navstart.ps1: line 142
at <ScriptBlock>, C:\Run\start.ps1: line 121
at <ScriptBlock>, <No file>: line 1
```

and the docker inspect:
```
PS > docker inspect bcdaily
[
    {
        "Id": "d676734d4b30ce874c8353fa4b152ef4a930760c3be6d8f387fdfea1ca5e7720",
        "Created": "2019-12-02T08:08:22.4055229Z",
        "Path": "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; .\\Run\\start.ps1",
        "Args": [],
        "State": {
            "Status": "running",
            "Running": true,
            "Paused": false,
            "Restarting": false,
            "OOMKilled": false,
            "Dead": false,
            "Pid": 9352,
            "ExitCode": 0,
            "Error": "",
            "StartedAt": "2019-12-02T08:08:23.890526Z",
            "FinishedAt": "0001-01-01T00:00:00Z",
            "Health": {
                "Status": "unhealthy",
                "FailingStreak": 9,
                "Log": [
                    {
                        "Start": "2019-12-02T09:10:55.8391547+01:00",
                        "End": "2019-12-02T09:10:56.1861434+01:00",
                        "ExitCode": 1,
                        "Output": ""
                    },
                    {
                        "Start": "2019-12-02T09:11:26.2008018+01:00",
                        "End": "2019-12-02T09:11:26.6028216+01:00",
                        "ExitCode": 1,
                        "Output": ""
                    },
                    {
                        "Start": "2019-12-02T09:11:56.6150951+01:00",
                        "End": "2019-12-02T09:11:56.9736955+01:00",
                        "ExitCode": 1,
                        "Output": ""
                    },
                    {
                        "Start": "2019-12-02T09:12:26.9923214+01:00",
                        "End": "2019-12-02T09:12:27.3472679+01:00",
                        "ExitCode": 1,
                        "Output": ""
                    },
                    {
                        "Start": "2019-12-02T09:12:57.3601246+01:00",
                        "End": "2019-12-02T09:12:57.7246739+01:00",
                        "ExitCode": 1,
                        "Output": ""
                    }
                ]
            }
        },
        "Image": "sha256:67bfd1bf57e45f38f55d2800782893e219e25a01a0b46df52f177c4e804c06b7",
        "ResolvConfPath": "",
        "HostnamePath": "",
        "HostsPath": "",
        "LogPath": "C:\\ProgramData\\Docker\\containers\\d676734d4b30ce874c8353fa4b152ef4a930760c3be6d8f387fdfea1ca5e7720\\d676734d4b30ce874c8353fa4b152ef4a930760c3be6d8f387fdfea1ca5e7720-json.log",
        "Name": "/bcdaily",
        "RestartCount": 0,
        "Driver": "windowsfilter",
        "Platform": "windows",
        "MountLabel": "",
        "ProcessLabel": "",
        "AppArmorProfile": "",
        "ExecIDs": null,
        "HostConfig": {
            "Binds": [
                "C:\\ProgramData\\NavContainerHelper:C:\\ProgramData\\NavContainerHelper",
                "C:\\ProgramData\\NavContainerHelper\\Extensions\\bcdaily\\my:C:\\Run\\my",
                "c:\\windows\\system32\\drivers\\etc:C:\\driversetc"
            ],
            "ContainerIDFile": "",
            "LogConfig": {
                "Type": "json-file",
                "Config": {}
            },
            "NetworkMode": "default",
            "PortBindings": {},
            "RestartPolicy": {
                "Name": "unless-stopped",
                "MaximumRetryCount": 0
            },
            "AutoRemove": false,
            "VolumeDriver": "",
            "VolumesFrom": null,
            "CapAdd": null,
            "CapDrop": null,
            "Dns": [
                "8.8.8.8"
            ],
            "DnsOptions": [],
            "DnsSearch": [],
            "ExtraHosts": null,
            "GroupAdd": null,
            "IpcMode": "",
            "Cgroup": "",
            "Links": null,
            "OomScoreAdj": 0,
            "PidMode": "",
            "Privileged": false,
            "PublishAllPorts": false,
            "ReadonlyRootfs": false,
            "SecurityOpt": null,
            "UTSMode": "",
            "UsernsMode": "",
            "ShmSize": 0,
            "ConsoleSize": [
                0,
                0
            ],
            "Isolation": "process",
            "CpuShares": 0,
            "Memory": 8589934592,
            "NanoCpus": 0,
            "CgroupParent": "",
            "BlkioWeight": 0,
            "BlkioWeightDevice": [],
            "BlkioDeviceReadBps": null,
            "BlkioDeviceWriteBps": null,
            "BlkioDeviceReadIOps": null,
            "BlkioDeviceWriteIOps": null,
            "CpuPeriod": 0,
            "CpuQuota": 0,
            "CpuRealtimePeriod": 0,
            "CpuRealtimeRuntime": 0,
            "CpusetCpus": "",
            "CpusetMems": "",
            "Devices": [],
            "DeviceCgroupRules": null,
            "DiskQuota": 0,
            "KernelMemory": 0,
            "MemoryReservation": 0,
            "MemorySwap": 0,
            "MemorySwappiness": null,
            "OomKillDisable": false,
            "PidsLimit": 0,
            "Ulimits": null,
            "CpuCount": 8,
            "CpuPercent": 0,
            "IOMaximumIOps": 0,
            "IOMaximumBandwidth": 0,
            "MaskedPaths": null,
            "ReadonlyPaths": null
        },
        "GraphDriver": {
            "Data": {
                "dir": "C:\\ProgramData\\Docker\\windowsfilter\\d676734d4b30ce874c8353fa4b152ef4a930760c3be6d8f387fdfea1ca5e7720"
            },
            "Name": "windowsfilter"
        },
        "Mounts": [
            {
                "Type": "bind",
                "Source": "c:\\programdata\\navcontainerhelper",
                "Destination": "c:\\programdata\\navcontainerhelper",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            },
            {
                "Type": "bind",
                "Source": "c:\\programdata\\navcontainerhelper\\extensions\\bcdaily\\my",
                "Destination": "c:\\run\\my",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            },
            {
                "Type": "bind",
                "Source": "c:\\windows\\system32\\drivers\\etc",
                "Destination": "c:\\driversetc",
                "Mode": "",
                "RW": true,
                "Propagation": ""
            }
        ],
        "Config": {
            "Hostname": "bcdaily",
            "Domainname": "",
            "User": "",
            "AttachStdin": false,
            "AttachStdout": false,
            "AttachStderr": false,
            "ExposedPorts": {
                "1433/tcp": {},
                "443/tcp": {},
                "7045/tcp": {},
                "7046/tcp": {},
                "7047/tcp": {},
                "7048/tcp": {},
                "7049/tcp": {},
                "80/tcp": {},
                "8080/tcp": {}
            },
            "Tty": false,
            "OpenStdin": false,
            "StdinOnce": false,
            "Env": [
                "removePasswordKeyFile=Y",
                "auth=NavUserPassword",
                "locale=nl-BE",
                "enableApiServices=Y",
                "licenseFile=",
                "databaseInstance=",
                "accept_outdated=Y",
                "username=waldo",
                "useSSL=N",
                "securePassword=76492d1116743f0423413b16050a5345MgB8AFkAeABVAGQAdgBaADIARQA2AG0AbQBDAEEATABaAHUAaQBMADEATwB6AGcAPQA9AHwAMQAyADMANwBjAGEAMQA1ADkAMQAzADYAMgA0ADQANwA0ADkAMgAwAGIAOQBjADkAZQAwAGQAZgA3ADgANABlAGUAMgA2ADkAYQBjADgAYQA2AGMAOAAyADcAMgA5ADUAYQAxADkANwBkADkAMAAyAGIAYgA2ADEANgA0ADgANAA=",
                "accept_eula=Y",
                "ExitOnError=N",
                "databaseServer=",
                "passwordKeyFile=c:\\run\\my\\aes.key",
                "COMPLUS_NGenProtectedProcess_FeatureEnabled=0",
                "DatabaseName=Financialsbe",
                "NAVDVDURL=https://dockerbuildqueue.blob.core.windows.net/dvd/879afb46-0354-4c97-a6b2-53bd29f098d1",
                "VSIXURL=https://dockerbuildqueue.blob.core.windows.net/dvd/al-5.0.200795.vsix",
                "IsBcSandbox=Y",
                "CountryCode=be",
                "DEVPREVIEWURL=https://dockerbuildqueue.blob.core.windows.net/dvd/6f67af23-e0a4-4591-a638-727ed6e3fa92"
            ],
            "Cmd": [
                "powershell -Command $ErrorActionPreference = 'Stop'; $ProgressPreference = 'SilentlyContinue'; .\\Run\\start.ps1"
            ],
            "Healthcheck": {
                "Test": [
                    "CMD",
                    "powershell",
                    ".\\Run\\HealthCheck.ps1"
                ],
                "Interval": 30000000000,
                "Timeout": 10000000000
            },
            "ArgsEscaped": true,
            "Image": "bcinsider.azurecr.io/bcsandbox-master:be-ltsc2019",
            "Volumes": null,
            "WorkingDir": "",
            "Entrypoint": null,
            "OnBuild": null,
            "Labels": {
                "country": "be",
                "created": "201911260722",
                "cu": "",
                "eula": "https://go.microsoft.com/fwlink/?linkid=861843",
                "legal": "http://go.microsoft.com/fwlink/?LinkId=837447",
                "maintainer": "Dynamics SMB",
                "nav": "",
                "osversion": "10.0.17763.805",
                "platform": "15.0.38209.0",
                "tag": "0.0.9.96",
                "version": "16.0.10541.0"
            }
        },
        "NetworkSettings": {
            "Bridge": "",
            "SandboxID": "d676734d4b30ce874c8353fa4b152ef4a930760c3be6d8f387fdfea1ca5e7720",
            "HairpinMode": false,
            "LinkLocalIPv6Address": "",
            "LinkLocalIPv6PrefixLen": 0,
            "Ports": {
                "1433/tcp": null,
                "443/tcp": null,
                "7045/tcp": null,
                "7046/tcp": null,
                "7047/tcp": null,
                "7048/tcp": null,
                "7049/tcp": null,
                "80/tcp": null,
                "8080/tcp": null
            },
            "SandboxKey": "d676734d4b30ce874c8353fa4b152ef4a930760c3be6d8f387fdfea1ca5e7720",
            "SecondaryIPAddresses": null,
            "SecondaryIPv6Addresses": null,
            "EndpointID": "",
            "Gateway": "",
            "GlobalIPv6Address": "",
            "GlobalIPv6PrefixLen": 0,
            "IPAddress": "",
            "IPPrefixLen": 0,
            "IPv6Gateway": "",
            "MacAddress": "",
            "Networks": {
                "nat": {
                    "IPAMConfig": null,
                    "Links": null,
                    "Aliases": null,
                    "NetworkID": "d8f0eec6271ff5ea95b69b2ac0fe7bad2c80031e29469dc003cbcb5d18196781",
                    "EndpointID": "915cc8d3fcb6f9bf8412a4952f81fda8348ed53854e155b4faa2c75fc1616d45",
                    "Gateway": "172.26.80.1",
                    "IPAddress": "172.26.82.96",
                    "IPPrefixLen": 16,
                    "IPv6Gateway": "",
                    "GlobalIPv6Address": "",
                    "GlobalIPv6PrefixLen": 0,
                    "MacAddress": "00:15:5d:ea:f7:13",
                    "DriverOpts": null
                }
            }
        }
    }
]
```

My host version:
![image](https://user-images.githubusercontent.com/12088142/69941438-27242280-14e4-11ea-9832-d639279990b2.png)
