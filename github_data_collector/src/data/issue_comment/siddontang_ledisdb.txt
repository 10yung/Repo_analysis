add go mod support

```
http://ledisdb.com/
NOTICE: This domain name expired on 7/15/2019 and is pending renewal or deletion.
```
While doing some evaluation with `ledis` and `redis-failover` I played around with curl and the http-client. 
For commands that return arrays or nested arrays the corresponding strings weren't correctly interpreted. It looked like this:
```
$ curl localhost:11181/role
{"role":["bWFzdGVy",0,[]]}
```
Because I want to use `jq` for json processing in the shell I had to fix it. I studied your implementation in `respClient` and did the corresponding changes in `httpClient` accordingly.
LedisDB的wiki被劫持，点击后跳转到不明网站
https://github.com/siddontang/ledisdb/wiki
Introduction-PPT 此链接点击后会跳转到不明网站
https://github.com/siddontang/ledisdb/issues/140
I've added some documentation for the `LTRIM` command.

Also, I included some changes made by `doctotoc`. This fixes several links in the HTML rendering produced by GitHub.
Hello!

I was wondering if ledisdb has a keyspace notifications feature as Redis does [1] or any other mechanism that I am able to use to simulate a callback when a specific event occurs. In my use-case for example, most of the keys expire after 24h and I'd like to run a callback function when this happens (I'd like to subscribe somehow to these events).

I tried [this](https://medium.com/@micah1powell/using-redis-keyspace-notifications-for-a-reminder-service-with-node-c05047befec3) code (which is for Redis, I know) but I am getting a lot of errors like:

```
(node:20210) UnhandledPromiseRejectionWarning: ReplyError: command not found
    at parseError (/home/adrianpop/karma-agents/karma-redis-notification-lib/node_modules/redis-parser/lib/parser.js:179:12)
    at parseType (/home/adrianpop/karma-agents/karma-redis-notification-lib/node_modules/redis-parser/lib/parser.js:302:14)
(node:20210) UnhandledPromiseRejectionWarning: Unhandled promise rejection. This error originated either by throwing inside of an async function without a catch block, or by rejecting a promise which was not handled with .catch(). (rejection id: 1)
(node:20210) [DEP0018] DeprecationWarning: Unhandled promise rejections are deprecated. In the future, promise rejections that are not handled will terminate the Node.js process with a non-zero exit code.

```

So, does ledisdb support this? If not, is it something that will be implemented in the future?
Thanks!

[1] https://redis.io/topics/notifications
I start a build-in package ledis server(on windows,default configuration),
then try to connect with ledis-cli ,failed message: "No connection could be made because the target machine actively refused it.".

So can ledis-cli connect to a ledis-server in package mode ?
I'm trying to use the goleveldb "memory" `DBName` with unit tests. But it seems the process of opening any configured DB store always makes directories and files (LOCK, ...). Is this required with the in-memory store option? Is there an example of using the in-memory store without the filesystem being accessed?

```
cfg := config.NewConfigDefault()
cfg.DBName = "memory"
conn, err := ledis.Open(cfg)
// err: source temporarily unavailable
db, _ := conn.Select(0)
```