I'm not sure if this is actually useful for anyone, but in my app it was useful to be able to have a drag and drop interface where some elements could not be dragged below a certain point. I changed Swappable to return a boolean which says if the swap actually happened. If it doesn't, it prevents the animation from playing. This prevents the animations from freaking out when you drag over something that you can't drag to.

Removed  android:allowBackup="true" because it forces the Android Project I'm working on to also use it otherwise it will throw a Manifest Merger conflict.

Hi all,

I use listviewanimations in my app, and sometime app force close when i drag and drop item in listview

java.lang.NullPointerException: Attempt to invoke virtual method 'void android.view.View.setVisibility(int)' on a null object reference
            at com.nhaarman.listviewanimations.itemmanipulation.dragdrop.DragAndDropHandler$LSwitchViewAnimator$AnimateSwitchViewOnPreDrawListener.onPreDraw(DragAndDropHandler.java:588)
            at android.view.ViewTreeObserver.dispatchOnPreDraw(ViewTreeObserver.java:921)
            at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2214)
            at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1230)
            at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6748)
            at android.view.Choreographer$CallbackRecord.run(Choreographer.java:777)
            at android.view.Choreographer.doCallbacks(Choreographer.java:590)
            at android.view.Choreographer.doFrame(Choreographer.java:560)
            at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:763)
            at android.os.Handler.handleCallback(Handler.java:739)
            at android.os.Handler.dispatchMessage(Handler.java:95)
            at android.os.Looper.loop(Looper.java:145)
            at android.app.ActivityThread.main(ActivityThread.java:6117)
            at java.lang.reflect.Method.invoke(Native Method)
            at java.lang.reflect.Method.invoke(Method.java:372)
            at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1399)
            at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1194)

I don't understand why althought at line 588 in DragAndDropHandler.java really check not null before

for uses where u need to remove more than one object at a time prior to notifying data set changes

i have a gridview with AbsListView.MultiChoiceModeListener implemented so a user can check multiple objects and click delete - with a loop and remove() once at a time, many notify were called, messing up view hierarchy a bit/glitchy


I use the library for tree data structure. Before I start dragging item in tree-view, I must collapse selected view if it has some children. 
Then I have to expand it again after dropping.

Example:

``` java

listView.setOnItemLongClickListener(
        new AdapterView.OnItemLongClickListener() {
            @Override
            public boolean onItemLongClick(final AdapterView<?> parent, final View view,
                                           final int position, final long id) {
                myAdapter.setCollapsed(position);
                new Handler().postDelayed(new Runnable() {
                    @Override
                    public void run() {
                        listView.startDragging(position);
                    }
                }, 50);
                return true;
            }
        }
);

listView.setOnItemMovedListener(new OnItemMovedListener() {
    @Override
    public void onItemMoved(int to, int from) {
        myAdapter.setExpanded(from);
    }

});

listView.setOnItemMovingCanceledListener(new OnItemMovingCanceledListener() {
    @Override
    public void onItemMovingCanceled(int originalPosition) {
        myAdapter.setExpanded(originalPosition);
    }
});


```

Switch to grandle plugin 1.0.0  
Fixed: The undo view modifies the primary view height

https://github.com/nhaarman/ListViewAnimations/issues/307
