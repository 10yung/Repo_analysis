in clion 
/home/lzw/learn_slam/slambook2-master/ch3/cmake-build-debug/examples/plotTrajectory
/home/lzw/learn_slam/slambook2-master/ch3/cmake-build-debug/examples/plotTrajectory: error while loading shared libraries: libOpenNI.so.0: cannot open shared object file: No such file or directory

Process finished with exit code 127
but I  do have libopenNI.so in  usr/lib
I've been struggling to install OpenNI on my MacBook Pro (El Capitan).....I need it for Osceleton. I've been spending hours trying to install Xcode and all the other various installs in the instructions which are really complicated. Can anyone give me some guidance. Thanks
[error.txt](https://github.com/OpenNI/OpenNI/files/2881204/error.txt)

I've been trying to get OpenNI running for the past week because I want to use my kinect for skeletal tracking in Processing3. I've followed all the installation steps provided for Linux installation but I keep getting a build failure and various other errors during the ./RedistMaker process.
I've read every relevant thread on here and spent hours sifting through other suggestions with no success. Can anyone provide some help with this issue?
On Ubuntu 18.04, build fails because of this symbol conflict with name "equivalent". 
The solution is to rename it with something else.
I get a ton of warnings and errors. These are the ones near the end: 

In file included from /usr/include/c++/7/string:52:0,
                 from /usr/include/c++/7/bits/locale_classes.h:40,
                 from /usr/include/c++/7/bits/ios_base.h:41,
                 from /usr/include/c++/7/ios:42,
                 from /usr/include/c++/7/ostream:38,
                 from /usr/include/c++/7/iostream:39,
                 from ../../../../../Samples/NiViewer/glh/glh_convenience.h:52,
                 from ../../../../../Samples/NiViewer/glh/glh_glut2.h:61,
                 from ../../../../../Samples/NiViewer/NiViewer.cpp:63:
/usr/include/c++/7/bits/basic_string.h:6148:5: note: candidate: template<class _CharT, class _Traits, class _Alloc> bool std::operator>(const _CharT*, const std::__cxx11::basic_string<_CharT, _Traits, _Alloc>&)
     operator>(const _CharT* __lhs,
     ^~~~~~~~
/usr/include/c++/7/bits/basic_string.h:6148:5: note:   template argument deduction/substitution failed:
In file included from ../../../../../Samples/NiViewer/glh/glh_obs.h:62:0,
                 from ../../../../../Samples/NiViewer/NiViewer.cpp:62:
../../../../../Samples/NiViewer/glh/glh_linear.h:77:47: note:   mismatched types ‘const _CharT*’ and ‘std::error_code’
 #define     GLH_EPSILON         GLH_REAL(10e-6)
                                               ^
make[1]: *** [x64-Release/NiViewer.o] Error 1
make: *** [Samples/NiViewer] Error 2
make: *** Waiting for unfinished jobs....
../../../../../Samples/NiUserSelection/SceneDrawer.cpp: In member function ‘void SceneDrawer::DrawDepthMapTexture()’:
../../../../../Samples/NiUserSelection/SceneDrawer.cpp:154:73: warning: narrowing conversion of ‘g_nXRes’ from ‘XnUInt16 {aka short unsigned int}’ to ‘GLfloat {aka float}’ inside { } [-Wnarrowing]
     GLfloat verts[8] = { g_nXRes, g_nYRes, g_nXRes, 0, 0, 0, 0, g_nYRes };
                                                                         ^
../../../../../Samples/NiUserSelection/SceneDrawer.cpp:154:73: warning: narrowing conversion of ‘g_nYRes’ from ‘XnUInt16 {aka short unsigned int}’ to ‘GLfloat {aka float}’ inside { } [-Wnarrowing]
../../../../../Samples/NiUserSelection/SceneDrawer.cpp:154:73: warning: narrowing conversion of ‘g_nXRes’ from ‘XnUInt16 {aka short unsigned int}’ to ‘GLfloat {aka float}’ inside { } [-Wnarrowing]
../../../../../Samples/NiUserSelection/SceneDrawer.cpp:154:73: warning: narrowing conversion of ‘g_nYRes’ from ‘XnUInt16 {aka short unsigned int}’ to ‘GLfloat {aka float}’ inside { } [-Wnarrowing]
failed to execute: make  -j2 -C /home/athultr/Downloads/OpenNI-master/Platform/Linux/CreateRedist/../Build > /home/athultr/Downloads/OpenNI-master/Platform/Linux/CreateRedist/Output/BuildOpenNI.txt
Building Failed!

Please help me to fix the problem. I have followed all the instructions carefully.
Apologies for making this an issue - possibly it's not the best place to do this but I couldn't find anywhere else to do it. Many tutorials for using OpenNI with the Kinect 1 mention needing the branch `Unstable-1.5.4.0` in order to work with the KinectSensor module. This branch no longer seems to exist - does anybody know where I can get a copy of this version of OpenNI?
Could anyone help to understand the reason of the build failure?
I'm trying to build android samples from the orbbec-dev branch using the following versions:

jdk1.6.0_32
apache-ant-1.8.2
Python27
android-ndk-r8d
Using latest Build Tools: 23.0.3
Project Target: Android 4.0
API level: 14

They seem to be correct as I get it from the README file.
But I still get the following error which might be related to version mismatch:

-dex:
      [dex] input: D:\projects\OpenNI2\Samples\SimpleRead.Android\bin\classes
      [dex] input: D:\projects\OpenNI2\Wrappers\java\bin\classes.jar
      [dex] input: C:\Users\viach\AppData\Local\Android\sdk\tools\support\annotations.jar
      [dex] Using Pre-Dexed classes-d4406fd1183af0252c874a9589c3948f.jar <- D:\projects\OpenNI2\Wrappers\java\bin\classes.jar
      [dex] Pre-Dexing C:\Users\viach\AppData\Local\Android\sdk\tools\support\annotations.jar -> annotations-c175f3ccca158cb8f3e65ac7142c50fd.jar
       [dx]
       [dx] UNEXPECTED TOP-LEVEL EXCEPTION:
       [dx] java.lang.RuntimeException: Exception parsing classes
       [dx]     at com.android.dx.command.dexer.Main.processClass(Main.java:752)
       [dx]     at com.android.dx.command.dexer.Main.processFileBytes(Main.java:718)
       [dx]     at com.android.dx.command.dexer.Main.access$1200(Main.java:85)
       [dx]     at com.android.dx.command.dexer.Main$FileBytesConsumer.processFileBytes(Main.java:1645)
       [dx]     at com.android.dx.cf.direct.ClassPathOpener.processArchive(ClassPathOpener.java:284)
       [dx]     at com.android.dx.cf.direct.ClassPathOpener.processOne(ClassPathOpener.java:166)
       [dx]     at com.android.dx.cf.direct.ClassPathOpener.process(ClassPathOpener.java:144)
       [dx]     at com.android.dx.command.dexer.Main.processOne(Main.java:672)
       [dx]     at com.android.dx.command.dexer.Main.processAllFiles(Main.java:574)
       [dx]     at com.android.dx.command.dexer.Main.runMonoDex(Main.java:311)
       [dx]     at com.android.dx.command.dexer.Main.run(Main.java:277)
       [dx]     at com.android.dx.command.dexer.Main.main(Main.java:245)
       [dx]     at com.android.dx.command.Main.main(Main.java:106)
       [dx] Caused by: com.android.dx.cf.iface.ParseException: bad class file magic (cafebabe) or version (0034.0000)
       [dx]     at com.android.dx.cf.direct.DirectClassFile.parse0(DirectClassFile.java:472)
       [dx]     at com.android.dx.cf.direct.DirectClassFile.parse(DirectClassFile.java:406)
       [dx]     at com.android.dx.cf.direct.DirectClassFile.parseToInterfacesIfNecessary(DirectClassFile.java:388)
       [dx]     at com.android.dx.cf.direct.DirectClassFile.getMagic(DirectClassFile.java:251)
       [dx]     at com.android.dx.command.dexer.Main.parseClass(Main.java:764)
       [dx]     at com.android.dx.command.dexer.Main.access$1500(Main.java:85)
       [dx]     at com.android.dx.command.dexer.Main$ClassParserTask.call(Main.java:1684)
       [dx]     at com.an
       [dx] droid.dx.command.dexer.Main.processClass(Main.java:749)
       [dx]     ... 12 more
       [dx] 1 error; aborting
Hi Team

Im trying to work on ORK project from object detection in ROS Kinetic , im stuck like a hell on my kinect 1414 i tried to install it via Freenect OpenNi followed all tutorials but still no device connected message 
i also cant see it in lsusb , my kinect is working ( Green Led when its plugged ) can anyone give me a fixed and updated tutorial or any issue please.

Thanks for help 

 
Error acquiring depth from kinect 1473 due to the different device arrangement presented in this version than that of 1414 version.
Since C++11, there has existed `std::error_category::equivalent`.  OpenNI defines a macro `equivalent`.  During header inclusion, a GCC header calls the function `equivalent` but that symbol is hidden by the name clash with the macro `equivalent` leading to:

```
In file included from ../../../../../Samples/NiViewer/glh/glh_obs.h:62:0,
                 from ../../../../../Samples/NiViewer/NiViewer.cpp:62:
/usr/lib/gcc/x86_64-pc-linux-gnu/6.2.0/include/g++-v6/system_error:107:5: error: expected unqualified-id before ‘int’
     equivalent(int __i, const error_condition& __cond) const noexcept;
     ^
```
This is easily remedied by changing all instances of macro `equivalent` to `is_equivalent`.