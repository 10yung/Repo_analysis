Changed code in swift codable so that if any key value pair is not found / has different type, in json, it will  make the property nil. instead of failing to create an object. also. its will print which object has not been found in json object, on console.
struct for swift (ObjectMapper)
<img width="1058" alt="WX20191203-180715@2x" src="https://user-images.githubusercontent.com/10040900/70041282-d56cbc80-15f7-11ea-9065-133bad45703f.png">
and NSString default property use copy
能不能生成一个.h啊，我有个很复杂的json，生成了12个文件，有点多啊
<img width="1406" alt="屏幕快照 2019-04-26 上午11 43 32" src="https://user-images.githubusercontent.com/16274794/56782211-c67b8b80-6818-11e9-9d57-7f3e370a900f.png">


fix bug  click close button , then click docker  ,app can't reopen
Nested Json Package Below
## The issue is that it's converting json dictionary objects into strings, and not it's proper value.
<img width="573" alt="screen shot 2019-03-08 at 12 20 24 am" src="https://user-images.githubusercontent.com/9138420/54011400-020ea900-4138-11e9-9208-186c9efe67a4.png">

```  {
        "id": 16,
        "user_id": 6,
        "name": 4,
        "med_gastro": "{'left': {'mvc': 0, 'effeciency_score': 0, 'exhaustion': [0, 0, 0]}, 'right': {'mvc': 0, 'effeciency_score': 0, 'exhaustion': [0, 0, 0]}}",
        "lat_gastro": "{'left': {'mvc': 0, 'effeciency_score': 0, 'exhaustion': [0, 0, 0]}, 'right': {'mvc': 0, 'effeciency_score': 0, 'exhaustion': [0, 0, 0]}}",
        "tib_anterior": "{'left': {'mvc': '13816.0', 'effeciency_score': 20.804231942965192, 'exhaustion': {'maxEffeciency': 10.16597510373444, 'subMaxEffeciency': 3.2009484291641965, 'minEffeciency': 86.63307646710136}, 'effeciency': 20.804231942965192}, 'right': {'mvc': '13816.0', 'effeciency_score': 0, 'exhaustion': [0, 0, 0]}}",
        "peroneals": "{'left': {'mvc': 0, 'effeciency_score': 0, 'exhaustion': [0, 0, 0]}, 'right': {'mvc': 0, 'effeciency_score': 0, 'exhaustion': [0, 0, 0]}}"
    }
```



Coded Oject
``` 
import Foundation 
import ObjectMapper


class PlayerProfile : NSObject, NSCoding, Mappable{

	var id : Int?
	var latGastro : String?
	var medGastro : String?
	var name : Int?
	var peroneals : String?
	var tibAnterior : String?
	var userId : Int?


	class func newInstance(map: Map) -> Mappable?{
		return PlayerProfile()
	}
	required init?(map: Map){}
	private override init(){}

	func mapping(map: Map)
	{
		id <- map["id"]
		latGastro <- map["lat_gastro"]
		medGastro <- map["med_gastro"]
		name <- map["name"]
		peroneals <- map["peroneals"]
		tibAnterior <- map["tib_anterior"]
		userId <- map["user_id"]
		
	}

    /**
    * NSCoding required initializer.
    * Fills the data from the passed decoder
    */
    @objc required init(coder aDecoder: NSCoder)
	{
         id = aDecoder.decodeObject(forKey: "id") as? Int
         latGastro = aDecoder.decodeObject(forKey: "lat_gastro") as? String
         medGastro = aDecoder.decodeObject(forKey: "med_gastro") as? String
         name = aDecoder.decodeObject(forKey: "name") as? Int
         peroneals = aDecoder.decodeObject(forKey: "peroneals") as? String
         tibAnterior = aDecoder.decodeObject(forKey: "tib_anterior") as? String
         userId = aDecoder.decodeObject(forKey: "user_id") as? Int

	}

    /**
    * NSCoding required method.
    * Encodes mode properties into the decoder
    */
    @objc func encode(with aCoder: NSCoder)
	{
		if id != nil{
			aCoder.encode(id, forKey: "id")
		}
		if latGastro != nil{
			aCoder.encode(latGastro, forKey: "lat_gastro")
		}
		if medGastro != nil{
			aCoder.encode(medGastro, forKey: "med_gastro")
		}
		if name != nil{
			aCoder.encode(name, forKey: "name")
		}
		if peroneals != nil{
			aCoder.encode(peroneals, forKey: "peroneals")
		}
		if tibAnterior != nil{
			aCoder.encode(tibAnterior, forKey: "tib_anterior")
		}
		if userId != nil{
			aCoder.encode(userId, forKey: "user_id")
		}

	}

}
```

https://github.com/alibaba/HandyJSON  
I unarchived the zip file of release 1.1.0 that has in Xcode version: 1.0.8 build 1
Once I paste this JSON:
`[
  {
    "id": 3,
    "name": "kid 1k",
    "birthDate": "2018-01-25",
    "emergencyNumber": {
      "countryCode": "+1",
      "number": "555xxxxxx"
    },
    "healthStatuses": [],
    "gender": {
      "id": 1,
      "name": {
        "ar": "ذكر",
        "en": "Male"
      }
    },
    "relation": {
      "id": 1,
      "name": {
        "ar": "أم",
        "en": "Mother"
      }
    },
    "age": 1
  },
  {
    "id": 36,
    "name": "my kid x",
    "birthDate": "2019-01-15",
    "emergencyNumber": {
      "countryCode": "+1",
      "number": "55555555"
    },
    "healthStatuses": [],
    "gender": {
      "id": 1,
      "name": {
        "ar": "ذكر",
        "en": "Male"
      }
    },
    "relation": {
      "id": 2,
      "name": {
        "ar": "أب",
        "en": "Father"
      }
    },
    "age": 0
  }
]`

I get crash in line 484 in class "FileRepresenter" in the function of fetchArrayFromJsonSyntaxForProperty(). Above that line there is this comment "// if needs cast"

<img width="1279" alt="screen shot 2019-03-05 at 11 09 54 am" src="https://user-images.githubusercontent.com/4060024/53790138-4d0d9e00-3f37-11e9-9fbd-8275f4b302e6.png">

The values of the variables:
propertyStr = propertyStr	String	"\t\t<!VarName!> = <!VarType!>()\n\t\tlet <!VarName!>Array = json[\"<!JsonKeyName!>\"].arrayValue\n\t\tfor <!VarName!>Json in <!VarName!>Array{\n\t\t\t<!VarName!>.append(<!VarName!>Json.stringValue)\n\t\t}\n"	
index = 6
lang.basicTypesWithSpecialFetchingNeedsTypeCast = nil
