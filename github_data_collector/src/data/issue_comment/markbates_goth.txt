This pull request adds a `GetContextWithProvider` method to `gothic/gothic.go` to reduce the boilerplate required to set a `provider` in the http context.

I have included a test but I am not sure it is useful.

https://github.com/markbates/goth/pull/301#pullrequestreview-342869518
Using Echo framework

```go
func main() {
	goth.UseProviders(google.New(ClientKey, Secret, "http://127.0.0.5:3005/google/callback"))
	
	app := echo.New()
	
	app.Renderer = echoview.New(goview.Config{
		Root:         "views",
		Extension:    ".html",
		DisableCache: false,
	})
	
	app.GET("/auth/:provider/callback", func(c echo.Context) error {
		user, err := gothic.CompleteUserAuth(c.Response(), c.Request())
		if err != nil {
			return err
		}
		
		fmt.Println(user)
		
		return nil
	})
	
	app.GET("/logout", func(c echo.Context) error {
		gothic.Logout(c.Response(), c.Request())
		return c.Redirect(301, "/")
	})
	
	app.GET("/auth/:provider", func(c echo.Context) error {
		ctx := context.WithValue(c.Request().Context(), "provider", "google")
		gothUser, err := gothic.CompleteUserAuth(c.Response(), c.Request().WithContext(ctx))
		if err != nil {
			gothic.BeginAuthHandler(c.Response(), c.Request())
		} else {
			fmt.Println(gothUser)
		}
		
		return nil
	})
	
	app.GET("/", func(c echo.Context) error {
		return c.Render(200, "index.html", nil)
	})
	
	app.StdLogger.Fatal(app.Start(":3005"))
}
```

[IndieAuth](https://indieauth.spec.indieweb.org/) is a flexible way to sign in to sites and services on the Web using your own personal Website. I'd like to gauge interest in contributing a patch for said support so I can use it in something like [Gitea](https://gitea.io) and other projects that are self-hosting friendly.
My company has need of the new "Sign in with Apple" functionality.

https://developer.apple.com/sign-in-with-apple/

I'll give it a stab and submit a PR at some point soon.
Azureadv2 provider does not mapping email info correctly, and the email  field will be nil.
The email info should mapping from RawData["userPrincipalName"]
I am attempting to use the twitch oauth for multiple accounts. The way to do this is via a parameter in the request. 
Unfortunately, there is no way as it stands to add said parameter. Would it be possible to set the config as public or add a method that allows for this? 
Is it possible to link multiple providers to one user account (with a password for example)?
In the OpenID Connect provider, it's not possible to change the http Client used to fetch the discovery url.

```go
	openidConnect, _ := openidConnect.New(os.Getenv("OPENID_CONNECT_KEY"), os.Getenv("OPENID_CONNECT_SECRET"), "http://localhost:3000/auth/openid-connect/callback", os.Getenv("OPENID_CONNECT_DISCOVERY_URL"))
	if openidConnect != nil {
		goth.UseProviders(openidConnect)
	}
```
Setting `openidConnect. HTTPClient` after new will not work as the call to the Discovery endpoint is done within the new function by calling `openIDConfig, err := getOpenIDConfig(p, openIDAutoDiscoveryURL)`

Happy to work on a PR, but i am not sure how to approach that, i could create a new New with a parameter for the http client, but that would break the pattern and stand out from the other provider. Any suggestion on how to allow to change the HTTPClient there?a  package variable in the openid connect provider could work as well, and modification of the Client function
I am trying to connect my Gitea instance with Mattermost, but it seems like Mattermost does not implement the auto discovery via .well-known

See also: https://docs.mattermost.com/developer/oauth-2-0-applications.html

Is there a way to easily manually specify the endpoints or maybe add Mattermost support to this library?

Thanks!