These changes allowed me to successfully build ardour using the most recent waf (2.0.19).
Some of them might be weird and will probably need refactoring now or later.

The [misc.py](https://gitlab.com/ita1024/waf/raw/waf-1.6.11/waflib/extras/misc.py) script is the only fragment from the currently used waf (1.6.11), that is *required* because of includes to build ardour (and when/if updating the compiled version of waf in this repo, it *has to be added*). However, its use should be refactored and removed after this pull request is merged.

All of this should still work with the current waf setup!
Note: On Arch Linux I'm using a [system-wide waf](https://www.archlinux.org/packages/community/any/waf/), but this workflow should work with the upstream waf just the same (after all, I'm only telling it where its components are through packaging).

Now, to how I made this build (after applying the changes in this pull request):

```
  # making sure, that subdirectories can be picked up with local includes
  touch __init__.py
  # making ancient 'misc' include available to system installed waf                        
  sed -e "s/('misc')/('misc', tooldir='tools')/" \                       
      -i {tools/luadevel,gtk2_ardour,session_utils,libs/fst,headless}/wscript             
  # make custom 'autowaf' include compatible with system installed waf
  find . -type f \                                      
         -iname "*wscript*" \                            
         -exec sed -e 's/from waflib.extras import autowaf/from tools import autowaf/g' \  
                   -e 's/import waflib.extras.autowaf/from tools import autowaf/g' \
                   -i {} \;
```

These should be all required changes to test this with a system installed waf and incorporating the old `misc.py`. The `autowaf.py` in use is still in place below `tools/`.
Aftwards the usual `waf configure`, `waf build` and `waf install` (+ parameters) applies.
Thank you

Fixed a couple of typos in the Spanish documentation
Keep Paul Davis original design. Having the velocity bar inset from note causes distracting space at beginning of note when viewing a MIDI note that is zoomed out.
![cubasish_correction_150718](https://user-images.githubusercontent.com/19673308/42760032-4728136a-8909-11e8-9cb5-b94166703481.png)
This commit changes all the default midi colors (0-5) to the specific design of the theme.

The 'midi color5' was not used by ardour, because there was a supernumerary string (285), which enforces ardour to use the wrong color ('meter color 3') - so the string285 was deleted.

 Also the default dark color of the selected midi note outline is changing to the white color (more visible and matchs to design).

![clear_gray_correction_150718](https://user-images.githubusercontent.com/19673308/42759122-247b3d4a-8906-11e8-9516-0b9f0fe02aeb.png)
This commit changes all the default midi colors (0-5) to the specific design of the theme. Also the default dark color of the selected midi note outline is changing to the red color (more visible and matchs to design).
![caineville_correction_150718](https://user-images.githubusercontent.com/19673308/42758472-f2962f80-8903-11e8-97f1-ed4a86adb472.png)
This commit changes all the default midi colors (0-5) to the specific design of the theme. Also the default dark color of the selected midi note outline is changing to the white color (more visible and matchs to design).
![blueberry_milk_correction_150718](https://user-images.githubusercontent.com/19673308/42737883-61c2a1d4-887a-11e8-8148-67c412ba878c.png)
Hello Paul & people! Good day to everybody:)
I've got three questions:
1.This is my attempt to change a theme file as an example. If this my example PR is correct and good from your vision, may I make the same to others (cainville, clear-gray & cubasish - illustrations are already prepared :))?
2. Are you planning to add an item 'midi note selected fill', because only the outline of the selected notes are not so visible as it was in ardour 5.x (at my view)? Or may be the outline could be more thick?
3. Is it the right place to edit the ardour6's theme files (I mean the thread or folder or how it's correctly called here in 'github')?

_Specifically to Blueberry-milk:_
This commit changes all the default midi colors (0-5) to the specific design of the theme. Also the default dark color of the selected midi note outline is changing to the bright green color (more visible and matchs to design).

Big thanks!


http://tracker.ardour.org/view.php?id=7581

Implementation details:
Plugins sorted alphabetically to keep integrity with Recent-Session view. 
New Configuration variable max-recent-plugins.

No additional handling like sorting out Favorites like requested. 



