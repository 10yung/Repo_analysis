I'm setting up some header with background video.
It requires three formats : .mp4 .ogv and .webm that is missing
Good day,

I've come across the [`super_admin` boolean attribute](https://github.com/locomotivecms/engine/blob/5a575e266ba2c70b6206ddc19377af19623f4eeb/app/models/locomotive/account.rb#L28) for an account in the code, and see that it is meant to allow the super admin to see all sites and not simply the ones to which they have a membership. This is outlined in the `SitePolicy` on [line 7](https://github.com/locomotivecms/engine/blob/aa705349fc28e6fb8ba5af49310476657fd1e298/app/policies/locomotive/site_policy.rb#L7) where the policy directs the app to return all sites if the account is a super admin.

However, I've found that the sites controller does not use the `SitePolicy`, nor is it used elsewhere, so this capability of a super admin is never actually exposed. The `SitesController` (which I presume is used to return the list of sites available to the user on the landing page) [uses the `SiteService.list` method](https://github.com/locomotivecms/engine/blob/master/app/controllers/locomotive/sites_controller.rb#L10) to return the list of sites for the account, but it goes through the defined account relationship and not the `SitePolicy` ([line 20](https://github.com/locomotivecms/engine/blob/master/app/services/locomotive/site_service.rb#L20)).

I suspect that to resolve this inconsistency and enable the super admin flag to be used, it would require that we replace the current `account.sites.order_by(:name.asc).to_a.sort(&sorter)` with something like `Locomotive::SitePolicy.new(account, Locomotive::Site).resolve.order_by(:name.asc).to_a.sort(&sorter)` or similar.

What do you think?

Additionally, there doesn't seem to be any way to make a an account a super admin through the UI. Is this known? What is the current status of the super admin feature?
This PR allows super admin users to configure maximum file size for each site. 

This can be done from the `Advanced` tab in the site settings page. This limit is enforced in the assets uploading zone, and in the image picker widget too. Also, this limit is checked also in the server side, to increment consistency and avoid security issues.

![imagen](https://user-images.githubusercontent.com/453545/71517816-1337ca80-28b0-11ea-8cd6-2ceba3f83165.png)

Finally, this PR also tries to improve the assets dropzone usability, fixing a missing `cloud-upload` icon and including the configured file size limit in the description.

![imagen](https://user-images.githubusercontent.com/453545/71517859-48dcb380-28b0-11ea-9eab-b0123f396ee4.png)

Hi. I need create a select field with a list of fields. There any way to archive this with wagon? Thankx
When accessing the locomotive admin area for a site (ie via /locomotive or /admin) if the user accidentally uses http instead of https, and the site is set to have an https redirect, no redirect occurs. Subsequently editing a page is done via http, but the iframe for the preview goes to https (due to the https redirect being set to true), and cross-origin errors start to pop up (ie the section editor doesn't initialize).

The 'preview' button at the top correctly goes to https, it's just the edit interface that doesn't. should the whole Admin section for a loco site be redirected to https if https redirect is set to true? I believe this would fix the problem. Otherwise would need to specifically fix the edit interface to use the correct protocol.

![image](https://user-images.githubusercontent.com/1403611/66913730-c3fa3180-f004-11e9-953a-21a9d0a022df.png)

Since it is possible to crop and resize images within the assets editor it should also be possible to rename the asset file.
Fixes bug - https://github.com/locomotivecms/engine/issues/1352

content_type label customized with 'entry_template' should now render the correct link to the entry
My understanding is that content_type.entry_template is a mechanism for customising the label of an entry, using liquid etc to interpolate values into a label for the back-end content_type index.

I noticed when I used it that as soon as it was defined, the label successfully reflected the liquid values, but there was no link to the content_type form.

All tested in v4.
It would be nice to have a multi-file upload field type. Ex. for a blog post that contains multiple images. I realize you can use has_many/belongs_to for this but it seems extremely heavy handed for the use case.

This would have the following options:

- Min/Max number of files
- File type(s) restriction
Currently when placing a `global_section` within the `<head>` tag it ends up rendering it at the top of the body instead. Please allow sections to be rendered within the head.