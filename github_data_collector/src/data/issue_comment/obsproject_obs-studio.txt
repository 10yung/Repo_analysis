### Description
Add obs_group_from_source and obs_enum_scenes to the documentation

### Motivation and Context
It is missing from the documentation.

### How Has This Been Tested?


### Types of changes
<!--- What types of changes does your PR introduce? Uncomment all that apply -->
<!--- - Bug fix (non-breaking change which fixes an issue) -->
<!--- - New feature (non-breaking change which adds functionality) -->
<!--- - Performance enhancement (non-breaking change which improves efficiency) -->
<!--- - Code cleanup (non-breaking change which makes code smaller or more readable) -->
<!--- - Breaking change (fix or feature that would cause existing functionality to change) -->
- Documentation (a change to documentation pages)

### Checklist:
- [x] My code has been run through [clang-format](https://github.com/obsproject/obs-studio/blob/master/.clang-format).
- [x] I have read the [**contributing** document](https://github.com/obsproject/obs-studio/blob/master/CONTRIBUTING.rst).
- [x] My code is not on the master branch.
- [x] The code has been tested.
- [x] All commit messages are properly formatted and commits squashed where appropriate.

### Description
This fixes a crash where the default audio monitoring device would be returned as null. This happens when I build OBS in portable mode on Linux, where the pulse server for some reason can't be connected to. This has only happens to me on Ubuntu 19.10. Audio monitoring still doesn't work here, but at least it doesn't crash anymore.

### Motivation and Context
Fix annoying crash.

### How Has This Been Tested?
Created audio monitoring with default device.

### Types of changes
- Bug fix (non-breaking change which fixes an issue)

### Checklist:
- [x] My code has been run through [clang-format](https://github.com/obsproject/obs-studio/blob/master/.clang-format).
- [x] I have read the [**contributing** document](https://github.com/obsproject/obs-studio/blob/master/CONTRIBUTING.rst).
- [x] My code is not on the master branch.
- [x] The code has been tested.
- [x] All commit messages are properly formatted and commits squashed where appropriate.

### Description
Add VIDEO_CS_SRGB enum value in preparation for sYCC support. Can't PR all at once because of the AMF submodule.

WIP AMF changes: https://github.com/jpark37/obs-amd-encoder/commits/srgb-support
WIP sYCC changes: https://github.com/jpark37/obs-studio/commits/sycc-color-space

### Motivation and Context
Most video applications handle 709 incorrectly and sYCC correctly. We also don't perform color transformation from sRGB to 709, so sRGB is a more accurate TRC to label our videos with.

See RFC for compatibility matrix: https://github.com/obsproject/rfcs/pull/7

### How Has This Been Tested?
OBS compiles and runs without crashing. At this point, it's just an unused enum value.

### Types of changes
- New feature (non-breaking change which adds functionality)

### Checklist:
- [x] My code has been run through [clang-format](https://github.com/obsproject/obs-studio/blob/master/.clang-format).
- [x] I have read the [**contributing** document](https://github.com/obsproject/obs-studio/blob/master/CONTRIBUTING.rst).
- [x] My code is not on the master branch.
- [x] The code has been tested.
- [x] All commit messages are properly formatted and commits squashed where appropriate.
<!--- The OBS Studio GitHub issue tracker is **ONLY** to be used for reporting bugs that have replication steps. New features should be discussed on our Discord (https://obsproject.com/discord/) or Ideas page (https://ideas.obsproject.com/). For support issues, use the Discord or forums (https://obsproject.com/forum/) -->

<!--- Provide a general summary of the issue in the Title above -->
OBS Detects background and system processes

## Expected Behavior
<!--- Tell us what should happen -->
It should only show foreground processes
## Current Behavior
<!--- Tell us what happens instead of the expected behavior. -->
<!--- Please include a log file here if possible. -->
It shows system, background, and apps that cannot be open

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant. Pictures -->
<!--- and video are encouraged if applicable. -->
1. Make A Game Capture Source
2. Click on the mode dropdown


## Additional information
<!--- Not obligatory, but provide any additional details or information -->
<!--- that you feel might be relevant to the issue -->
<!--- Provide a general summary of the issue in the Title above -->
OS: WIN10 64bit
OBS: 24.0.3-338 64bit
Reproduce Rate:100%

Gennerally, source's updating should be done immediately after selecting window/game/monitor.
But currently in OBS it will be delayed for about 1s~3s.

## Expected Behavior
source's updating should be done immediately after choosing object in combox.

## Current Behavior
window/game/monitor are not be updated immediately 

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant. Pictures -->
<!--- and video are encouraged if applicable. -->
1. jump to property window of window/game/monitor
2. switch window/game/monitor and check preview window
3. preview window is often updated after 1~3 seconds

## Additional information
Window/game/monitor are applied new settings in video_tick, there are variables to make sure the interval time. such as:
_struct window_capture::check_window_timer
struct duplicator_capture::reset_timeout
struct game_capture::retry_time_
It will be better to reset these variables with max interval time in obs_source_info::update to make sure new settings will be applied as soon as possible.

<!--- Provide a general summary of the issue in the Title above -->
OS: WIN10 64bit
OBS: 24.0.3-338 64bit
Reproduce Rate:100%

Maybe video of an invalid window source whose params are empty should not stay on incorrect frame.

## Expected Behavior
In that situation, source should not be drawn in preview canvas.

## Current Behavior
video of source will stay on last frame

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant. Pictures -->
<!--- and video are encouraged if applicable. -->
1. click button and menu to add a window source.
2. after jumping to property window, first window in combox will be selected and it will be captured and displayed on preview window.
3. click "cancel" to jump to main dialog.
4. now params (title, class, executable) of the created window source have been empty but video still stay on last frame.

## Additional information
I find that in wc_tick(...) of window source, when title and class are empty, just return function.
Maybe "dc_capture_free(&wc->capture)" should be runned before returning.

<!--- The OBS Studio GitHub issue tracker is **ONLY** to be used for reporting bugs that have replication steps. New features should be discussed on our Discord (https://obsproject.com/discord/) or Ideas page (https://ideas.obsproject.com/). For support issues, use the Discord or forums (https://obsproject.com/forum/) -->
I turn on the broadcast, while the sound is output in the speakers (the default device), they are selected as the sound source and everything is fine. Now I connect bluetooth headphones, windows changes the default device to them and the sound starts to be output in them, while the default device is selected in obs, but obs loses sound. Moreover, if you go into the properties of the playback device, the default device is selected there and if you just click ok, then the sound starts to pick up correctly again.
<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
Obs must correctly detect the default device change.
<!--- Tell us what should happen -->


I am on macOS 10.14.6 (18G103) and OBS Studio 24.0.6 (64 bit). 

[Airwindows](https://www.airwindows.com/) makes free and excellent cross-platform VSTs. They have a huge collection, especially of audio effects, which would be an extremely positive addition to OBS Studio for plenty of users. OBS Studio recognizes Airwindows plugins (as in, they populate in the list), but won't load the UI and then crashes for the handful of plugins I tried on my computer.

I did not have a problem with the free Melda Production VSTs listed on the wiki: https://github.com/obsproject/obs-studio/wiki/Filters-Guide#vst-plugin.

As Airwindows is also freeware, I figured it might be up your alley to investigate if possible. Since it's not clear where the problem lies, I also opened up [an issue on Airwaves' GitHub](https://github.com/airwindows/airwindows/issues/9).

Steps to repro:
1. Download the full VST collection via the link on the sidebar of https://www.airwindows.com/
1. Install/simlink the VSTs to `/Library/Audio/Plug-Ins/VST/`
1. Create an audio filter, add a VST 2.x effect, and then select an Airwindows VST (for repro, lets say `Console4Channel`)
1. Select Open Plug-in Interface
1. No window opens for me, the button just changes to Close Plug-in Interface
1. Now change the VST (for repro, say to `Highpass2`)
1. OBS Studio crashes

The general pattern here works for me regardless of what plugins I select---the first won't open the VST UI, and then whenever switching to another VST, OBS crashes.

If this becomes resolved (or, if it generally works on other systems), Airwaves' products would be a great addition to the wiki for filters.

Thanks for taking a look!

When running OBS in studio mode, where you have both the program and preview monitor open at the same time, locks the frame rate at 30 fps, even though I have my settings set to 60 fps. Disabling 'studio mode', running just with the program monitor visible, unlocks the FPS and allows me to record with 60 fps, conforming to the settings I set. 


## Expected Behavior
I expect OBS to let me record and stream at 60 fps in both 'studio mode' and 'non-studio mode'

## Current Behavior
OBS caps my frame rate to 30 fps in 'studio mode', logfile here https://pastebin.com/3tdJ1ei1


## Steps to Reproduce
Video: https://gofile.io/?c=iub4o1
1. open OBS (macOS version 24.0.6)
2. click 'studio mode'
3. observe FPS in the lower right corner, unable to get higher than 30 fps
4. click 'studio mode' again and observe FPS again

## Additional information
I've verified the lower-right-fps-indicator by making separate video's and they show the same: recording in 'studio-mode' caps the fps to 30, without 'studio-mode' get me a solid 60 fps.

I'm running a Hackintosh, as you can see by my logfile, using a Blackmagic Intensity Pro HDMI capture card. However, I believe that this machine being a Hackintosh shouldn't affect this issue.

<!--- The OBS Studio GitHub issue tracker is **ONLY** to be used for reporting bugs that have replication steps. New features should be discussed on our Discord (https://obsproject.com/discord/) or Ideas page (https://ideas.obsproject.com/). For support issues, use the Discord or forums (https://obsproject.com/forum/) -->

<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
Sources should not be set to 0x0

## Current Behavior
When playing back a media source, if you are editing the size or scale of it when playback ends, the size of the source is set to 0x0, meaning that it is no longer visible in the preview.

## Steps to Reproduce
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant. Pictures -->
<!--- and video are encouraged if applicable. -->
1. Add a media source
2. While the source is playing, click and drag the bounding box and hold left mouse
3. Wait for playback to end
4. Bounding box will disappear, and source will be set to 0x0

Video: https://pub.rachni.com/vid/2020-01-10_14-47-43.webm

## Additional information
Repro'd 100% of the time on Windows 10 x64, OBS v24.0.3. Oddly, appears that simply moving a source does not trigger this, but changing the size does. I have not tested other platforms.
