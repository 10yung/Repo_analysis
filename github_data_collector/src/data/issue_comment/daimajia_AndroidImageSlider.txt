Is it possible to intercept a user's swipe?
I have tried with "addOnPageChangeListener" but with it I can't reach my purpose.
- Video slider view
   - description
   - AutoPlay 
   - Looping option
   - Play button icon

- Base slide view changes
   - Change name of method image to load because of accommodate the functionality of video
   - New bindEventAndShow method to load video view and play button

- Android Api version bump to 28

I was having this issue with an older version of Picasso 2.5.2. Solved it by upgrading to the newer version

implementation 'com.squareup.picasso:picasso:2.71828'
Don't forget that all calls to Picasso must now be updated from:

old syntax

Picasso.with(context)
    .load(url)
    .into(imageView)
to new syntax

Picasso.get()
    .load(url)
    .into(imageView)

please fix it
dependency


    implementation 'com.squareup.retrofit2:retrofit:2.5.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.5.0'

    implementation 'com.squareup.okhttp3:logging-interceptor:3.9.1'

    implementation 'com.squareup.picasso:picasso:2.71828'
    implementation 'com.nineoldandroids:library:2.4.0'
    implementation 'com.daimajia.slider:library:1.1.5@aar'

code

                        for(String name : image_slider.keySet()){
                            Log.d(TAG, "onResponse: name "+ name+ " url "+ image_slider.get(name));

                            TextSliderView textSliderView = new TextSliderView(LoginActivity.this);
                            // initialize a SliderLayout
                            textSliderView
                                    .description(name)
                                    .image(image_slider.get(name))
                                    .setScaleType(BaseSliderView.ScaleType.Fit);


                            //add your extra information
                            textSliderView.bundle(new Bundle());
                            textSliderView.getBundle().putString("extra",name);
                            textSliderView.setPicasso(Picasso.get());

                            slider.addSlider(textSliderView);

                        }
                        slider.setPresetTransformer(SliderLayout.Transformer.Accordion);
                        slider.setPresetIndicator(SliderLayout.PresetIndicators.Center_Bottom);
                        slider.setDuration(4000);


log error
Process: com.winagagne.wag, PID: 17756
    java.lang.AbstractMethodError: abstract method "void com.squareup.picasso.Callback.onError(java.lang.Exception)"
        at com.squareup.picasso.ImageViewAction.error(ImageViewAction.java:72)
        at com.squareup.picasso.Picasso.deliverAction(Picasso.java:581)
        at com.squareup.picasso.Picasso.complete(Picasso.java:528)
        at com.squareup.picasso.Picasso$1.handleMessage(Picasso.java:122)
        at android.os.Handler.dispatchMessage(Handler.java:106)
        at android.os.Looper.loop(Looper.java:176)
        at android.app.ActivityThread.main(ActivityThread.java:6651)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:547)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:824)


Shows blank screen when implemented in fragment.

mDemoSlider = view.findViewById(R.id.slider);

        HashMap<String, Integer> imagesWithTitle = new HashMap<>();
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);
        imagesWithTitle.put("xxxx", R.drawable.xxxx);

        for (String name : imagesWithTitle.keySet()) {
            TextSliderView textSliderView = new TextSliderView(getContext());
            // initialize a SliderLayout
            textSliderView
                    .description(name)
                    .image(imagesWithTitle.get(name))
                    .setScaleType(BaseSliderView.ScaleType.Fit);
            //.setOnSliderClickListener(HomeFragment.this);

            //add your extra information
            textSliderView.bundle(new Bundle());
            textSliderView.getBundle()
                    .putString("extra", name);

            mDemoSlider.addSlider(textSliderView);
        }

        mDemoSlider.setPresetTransformer(SliderLayout.Transformer.Accordion);
        mDemoSlider.setPresetIndicator(SliderLayout.PresetIndicators.Center_Bottom);
        mDemoSlider.setCustomAnimation(new DescriptionAnimation());
        mDemoSlider.setDuration(4000);
On the first one ,among all the slider used in one fragment/activity a word "Default" is shown. why it is showing and how to change/remove it?

![Screenshot_20190725-123740__01](https://user-images.githubusercontent.com/7520190/61852638-a6bc3800-aed9-11e9-934d-d3d481b0f0db.jpg)

Why OnClicklistener not working inside CollapsingToolbarLayout?
My Layout:
```
`<xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:fitsSystemWindows="true"
    tools:context="com.mkurbanov.lebap_kwartira.ScrollingActivity">
    <android.support.design.widget.AppBarLayout
        android:id="@+id/app_bar"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:fitsSystemWindows="true"
        android:theme="@style/AppTheme.AppBarOverlay">

        <android.support.design.widget.CollapsingToolbarLayout
            android:id="@+id/toolbar_layout"
            android:layout_width="match_parent"
            android:layout_height="256dp"
            android:fitsSystemWindows="true"
            app:contentScrim="?attr/colorPrimary"
            app:layout_collapseMode="parallax"
            app:layout_scrollFlags="scroll|exitUntilCollapsed"
            app:titleEnabled="false">

            <com.daimajia.slider.library.SliderLayout
                android:id="@+id/header_slider"
                android:layout_width="match_parent"
                android:layout_height="wrap_content"
                android:autofillHints="true"
                android:background="@color/colorPrimary"
                android:fitsSystemWindows="true"
                app:layout_collapseMode="parallax" />

            <android.support.v7.widget.Toolbar
                android:id="@+id/toolbar"
                android:layout_width="match_parent"
                android:layout_height="?attr/actionBarSize"
                app:layout_collapseMode="pin"
                app:popupTheme="@style/AppTheme.PopupOverlay" />

        </android.support.design.widget.CollapsingToolbarLayout>
    </android.support.design.widget.AppBarLayout>


    <include layout="@layout/content_dug" />

    <android.support.design.widget.FloatingActionButton
        android:id="@+id/fab"
        android:layout_width="wrap_content"
        android:layout_height="wrap_content"
        android:layout_margin="@dimen/fab_margin"
        android:src="@drawable/ic_share_black_48dp"
        android:tint="@color/colorPrimary"
        app:backgroundTint="@color/white"
        app:layout_anchor="@id/app_bar"
        app:layout_anchorGravity="bottom|end"
        app:rippleColor="@color/colorPrimary" />

    <Button
        android:id="@+id/button_call"
        android:layout_width="match_parent"
        android:layout_height="35dp"
        android:layout_alignParentBottom="true"
        android:layout_gravity="bottom|center"
        android:layout_margin="10dp"
        android:background="@drawable/btn_empty_solid"
        android:foreground="?attr/selectableItemBackground"
        android:paddingLeft="10dp"
        android:paddingRight="10dp"
        android:text="@string/call"
        android:textAppearance="?android:attr/textAppearanceSmall"
        android:textColor="@color/white"
        android:textSize="@dimen/text_size" />

</android.support.design.widget.CoordinatorLayout>`
```
I have made a custom sliderLayout in order to get the wanted aspect ratio, but unfortunately, the image will disappear completely.

my code:- 


public class CustomSliderLayout extends SliderLayout {

    public CustomSliderLayout(Context context) {
        super(context);
    }
    public CustomSliderLayout(Context context, AttributeSet attrs) {
        super(context, attrs);
    }

    public CustomSliderLayout(Context context, AttributeSet attrs, int defStyle) {
        super(context, attrs, defStyle);
    }

    @Override
    protected void onMeasure(int widthMeasureSpec, int heightMeasureSpec) {
        super.onMeasure(widthMeasureSpec, heightMeasureSpec);
        int width = getDefaultSize(getSuggestedMinimumWidth(), widthMeasureSpec);
        int height = (int) (width / 1.65);
        setMeasuredDimension(width, height);
    }
}




![2019-04-04_145740](https://user-images.githubusercontent.com/23667945/55553862-081d8880-56ea-11e9-8293-d542f60f29c7.png)

Greetings!

I've tried to move a button on 1 slide with it in my Slider with 3 slides and got some strange values of position in function OnPageScrolled. Everything works pretty nice except one thing - instead of slide position value like 0, 1, 2, 0, 1... int **position** gives 120, 121, 122, 123, 124... etc, on other device - 720, 721, 722, 723... etc.

Here's the code:
```
        slider.addOnPageChangeListener(new ViewPagerEx.OnPageChangeListener() {

            //movement of button
            @Override
            public void onPageScrolled(int position, float positionOffset, int positionOffsetPixels) {
                Log.d("TAG","Position "+position);
                DisplayMetrics metr = new DisplayMetrics();
                getWindowManager().getDefaultDisplay().getMetrics(metr);
                int width = metr.widthPixels;
                if (position % file_maps.size() == (position+slider.getCurrentPosition())% file_maps.size() && positionOffset < 0.75f) {
                    tv_app.setVisibility(View.VISIBLE);
                    tv_app.setTranslationX(-positionOffsetPixels);
                } else if (position % file_maps.size() == 0 && positionOffset >= 0.6f) {
                    tv_app.setVisibility(View.INVISIBLE);
                }
                if (position % file_maps.size() == file_maps.size()-1 && positionOffset>0.5f) {
                    tv_app.setTranslationX(width - positionOffsetPixels);
                    tv_app.setVisibility(View.VISIBLE);
                } else if (position % file_maps.size()-1 == file_maps.size()-1 && positionOffset <= 0.4f) {
                    tv_app.setVisibility(View.INVISIBLE);
                }
            }
```
And here's log's fragment:
```
2019-02-28 09:57:33.618 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.360 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.385 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.401 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.427 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.444 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.460 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.477 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.494 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.510 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.527 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.544 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.561 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.577 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.594 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.611 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.627 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.644 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.661 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.678 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.694 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.711 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.728 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.744 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.761 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.778 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.794 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.811 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.828 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:44.844 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.061 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.078 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.095 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.111 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.128 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.145 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.162 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.178 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.195 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.212 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.228 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.245 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.262 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.278 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.295 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.312 16773-16773/test.sliderapp D/TAG: Position 120
2019-02-28 09:57:45.329 16773-16773/test.sliderapp D/TAG: Position 121

```
It.s pretty strange behavior, because even with division by whole I can't be sure that slider's position is correct. I've looked over github and stackoverflow yet I haven't seen anything about it. 
Workspace: Android Studio 3.3.1, gradle implementation - com.daimajia.slider:library:1.1.5@aar, tried on API 25.
How can I disable the first animation when the view is first shown?