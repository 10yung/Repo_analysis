![image](https://user-images.githubusercontent.com/10692992/69870987-b0c9c980-1305-11ea-85f7-d87248544eda.png)
whatâ€˜s the meaning of the third to fifth rows?
the repo does not contain the training code with `VggVox` architecture.
In the paper, the dimension of the final embedding is mentioned as 512, and in the code, the final computed embedding dimension is 128, but in the provided code 2048 dimensional embedding is used for computing distance.
Hi,

I am curious about the proportion in the verification dataset.

How many the positive (same speaker) pair in the dataset compared to the negative (different speaker) pair????

Thanks,
Hi,

I want to compute Equal Error Rate as a measurement error, but i couldn't find it in your code. Could you tell me how to compute this measurement?


Hello

I am curious as to which license enables you to use Youtube videos for creating a dataset. Motivated by your work, I am also interested in data from Youtube for research purpose.

Can you please guide me to the relevant tutorial or laws through I can read more on this subject.

The paper doesn't mention removal of DC component.
However, you seem to be doing it during preprocessing in the code?
Is the removal of DC component necessary?
Hi,

From 'mfccspec.m', it seems that you compute the Fourier transform (with Matlab's fft function) of 25ms-long windows, and keep the entire spectrum (which is Hermitian symmetric) to compute the features that are then fed to the network. 

Usually, we only keep the Fourier coefficients corresponding to the "positive frequencies", as other coefficients are redundant due to Hermitian symmetry. 

Can you confirm that it is indeed the procedure you follow?

Thanks a lot by advance for your answer.

Best,

Simon
demo_vggvox_verif
Downloading the VGGVox model for Verification ... this may take a while
Warning: Directory already exists. 
> In demo_vggvox_verif (line 27) 

Undefined function or variable 'dagnn.ContrastiveLoss'.

Error in dagnn.DagNN.loadobj (line 26)
    block = constr() ;
Error in demo_vggvox_verif (line 33)
load(opts.modelPath); net = dagnn.DagNN.loadobj(netStruct);