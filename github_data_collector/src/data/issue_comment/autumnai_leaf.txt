
Proper stewardship requires actually updating the project README, 
when a project has been orphaned. #108 #122 
Hi All,
I am new here. I have cuda and cuda nn installed with paths setup. I cannot run the example files for some reason.
Am I missing something?
System is Ubuntu 16.04
`akhileshsk@akhileshsk-home:~$ cd rust_leaf_tutorials/leaf
akhileshsk@akhileshsk-home:~/rust_leaf_tutorials/leaf$ cargo run --release --no-default-features --features cuda --example benchmarks alexnet
   Compiling linear-map v0.0.4
   Compiling num-traits v0.1.37
   Compiling pkg-config v0.3.9
   Compiling winapi v0.2.8
   Compiling byteorder v0.4.2
   Compiling lazy_static v0.1.16
   Compiling rustc-serialize v0.3.24
   Compiling utf8-ranges v0.1.3
   Compiling libc v0.2.23

   Compiling log v0.3.7
   Compiling rblas v0.0.11
   Compiling capnp v0.6.2
   Compiling winapi-build v0.1.1
   Compiling regex-syntax v0.3.9
   Compiling bitflags v0.3.3
   Compiling num-integer v0.1.34
   Compiling enum_primitive v0.1.1
   Compiling rand v0.3.15
   Compiling kernel32-sys v0.2.2
   Compiling time v0.1.37
   Compiling memchr v0.1.11
   Compiling num-iter v0.1.33
   Compiling cublas-sys v0.1.0
   Compiling cudnn-sys v0.0.3
   Compiling thread-id v2.0.0
   Compiling thread_local v0.2.7
   Compiling aho-corasick v0.5.3
   Compiling cudnn v1.3.1
   Compiling cublas v0.2.0
   Compiling timeit v0.1.2
   Compiling capnpc v0.6.2
   Compiling num-bigint v0.1.37
   Compiling num-complex v0.1.37
   Compiling regex v0.1.80
   Compiling num-rational v0.1.36
   Compiling num v0.1.37
   Compiling collenchyma v0.0.8
   Compiling collenchyma-blas v0.2.0
   Compiling collenchyma-nn v0.3.4
   Compiling leaf v0.2.1 (file:///home/akhileshsk/rust_leaf_tutorials/leaf)
   Compiling leaf v0.2.1
error[E0004]: non-exhaustive patterns: `&mut Cuda(_)` not covered
  --> /home/akhileshsk/.cargo/registry/src/github.com-1ecc6299db9ec823/leaf-0.2.1/src/util.rs:28:11
   |
28 |     match mem {
   |           ^^^ pattern `&mut Cuda(_)` not covered

error[E0004]: non-exhaustive patterns: `&Cuda(_)` not covered
  --> /home/akhileshsk/.cargo/registry/src/github.com-1ecc6299db9ec823/leaf-0.2.1/src/solvers/mod.rs:77:24
   |
77 |                 match  result.get(native.device()).unwrap() {
   |                        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ pattern `&Cuda(_)` not covered

error: aborting due to 2 previous errors

error: Could not compile `leaf`.
Build failed, waiting for other jobs to finish...
error: build failed
akhileshsk@akhileshsk-home:~/rust_leaf_tutorials/leaf$ 
akhileshsk@akhileshsk-home:~/rust_leaf_tutorials/leaf$ ^C
akhileshsk@akhileshsk-home:~/rust_leaf_tutorials/leaf$ `
It would be great to provide the docker image and Dockerfile for newbie developers.

We can also use that container to run `leaf` in the cloud much more easily.
I have got build error with rustc 1.12 on debian stretch.

```
$ RUST_BACKTRACE=1 cargo build
   Compiling leaf v0.2.1 (file:///home/<user>/work/leaf)
   Compiling num-rational v0.1.35
Build failed, waiting for other jobs to finish...
error: failed to run custom build command for `leaf v0.2.1 (file:///home/<user>/work/leaf)`
Process didn't exit successfully: `/home/<user>/work/leaf/target/debug/build/leaf-87f43ad88e5c8bb2/build-script-build` (exit code: 101)
--- stderr
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: Error { kind: Failed, description: "Error while trying to execute `capnp compile`: Failed: No such file or directory (os error 2).  Please verify that version 0.5.2 or higher of the capnp executable is installed on your system. See https://capnproto.org/install.html" }', src/libcore/result.rs:788
stack backtrace:
   1:     0x55e338350a6b - std::sys::backtrace::tracing::imp::write::h00e948915d1e4c72
   2:     0x55e338355ebf - std::panicking::default_hook::_{{closure}}::h7b8a142818383fb8
   3:     0x55e33835511d - std::panicking::default_hook::h41cf296f654245d7
   4:     0x55e3383557d5 - std::panicking::rust_panic_with_hook::h4cbd7ca63ce1aee9
   5:     0x55e338355622 - std::panicking::begin_panic::h93672d0313d5e8e9
   6:     0x55e338355591 - std::panicking::begin_panic_fmt::hd0daa02942245d81
   7:     0x55e338355511 - rust_begin_unwind
   8:     0x55e33838c97f - core::panicking::panic_fmt::hbfc935564d134c1b
   9:     0x55e3382950c2 - core::result::unwrap_failed::h14ae321fa6665b8d
                        at /build/rustc-1.12.0+dfsg1/src/libcore/result.rs:29
  10:     0x55e338294251 - _<core..result..Result<T, E>>::unwrap::hbe110bf6bea72ca6
                        at /build/rustc-1.12.0+dfsg1/src/libcore/result.rs:726
  11:     0x55e338297306 - build_script_build::main::he5071e1b00fcfe0e
                        at /home/<user>/work/leaf/build.rs:4
  12:     0x55e33835d896 - __rust_maybe_catch_panic
  13:     0x55e33835480d - std::rt::lang_start::h53bf99b0829cc03c
  14:     0x55e3382974e3 - main
  15:     0x7fa0f6ae52b0 - __libc_start_main
  16:     0x55e3382935e9 - _start
  17:                0x0 - <unknown>
```

What should I see to make this work?
From [this post](https://medium.com/@mjhirn/tensorflow-wins-89b78b29aafb#.h9zapqe9d):

> Which is why Max and I will suspend the development of Leaf and focus on new ventures.

Is this accurate? If so, should the README mention so?

Autumn is also still listed on http://rust-lang.org/friends.html, is Autumn still a thing? If so, will the company continue to use Rust?

Hi, all
I try to compile and run leaf example with the following command,
`cargo run --release --no-default-features --features cuda --example benchmarks alexnet 
`
but got errors like this

```
In function `convolution_descriptor::ConvolutionDescriptor::new::hbe3406e228523108khb':
cudnn.0.rs:(.text._ZN22convolution_descriptor21ConvolutionDescriptor3new20hbe3406e228523108khbE+0x29c): undefined reference to `cudnnSetConvolutionNdDescriptor_v3'
cudnn.0.rs:(.text._ZN22convolution_descriptor21ConvolutionDescriptor3new20hbe3406e228523108khbE+0x346): undefined reference to `cudnnSetConvolutionNdDescriptor_v3'
cudnn.0.rs:(.text._ZN22convolution_descriptor21ConvolutionDescriptor3new20hbe3406e228523108khbE+0x3a2): undefined reference to `cudnnSetConvolutionNdDescriptor_v3'
```

I am using rustc 1.8.0 with cargo 0.10.0.

please give me some hints.

thanks

When naively trying to build an example project, one gets this:

```
thread '<main>' panicked at 'called `Result::unwrap()` on an `Err` value: Error { kind: Failed, description: "Error while trying to execute `capnp compile`: Failed: No such file or directory (os error 2).  Please verify that version 0.5.2 or higher of the capnp executable is installed on your system. See https://capnproto.org/install.html" }', src/libcore/result.rs:746
note: Run with `RUST_BACKTRACE=1` for a backtrace.

```

You should mention that you require capnproto to be installed in the system beforehand.

This is follow-up to autumnai/collenchyma#37 autumnai/collenchyma#62.

What do you think about removing ArcLocks from Leaf codebase? There is a lot of `.read().unwrap()`, `Arc::new(RwLock::new(..))` and then `let inputs_locked: Vec<_> = inputs.iter().map(|b| b.read().unwrap()).collect()` that make code harder to read. Users of Leaf also have to wrap inputs in ArcLocks.

I think when autumnai/collenchyma#37 is implemented, there would be less problems with borrowing, and ArcLocks can be removed (but I'm not completely sure yet).

Or are there plans to introduce multithreading that require all inputs/outputs/weights to be wrapped in this way?
