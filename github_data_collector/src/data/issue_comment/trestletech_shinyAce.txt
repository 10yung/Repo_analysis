We have noticed a change in behaviour when using shinyAce in a module and would like to know if this is a bug or a change in behaviour that we can rely on in future versions.

This code:

```r
mod_ui <- function(id) {
  ns <- shiny::NS(id)
  shinyAce::aceEditor(ns("editor"), mode = "r", readOnly = TRUE)
}

mod_server <- function(input, output, session) {
  code <- "a <- 1\nb <- 2"
  shinyAce::updateAceEditor(session, session$ns("editor"), code) # <= 0.4.0
}

ui <- function() {
  shiny::shinyUI(mod_ui("my"))  
}

server <- function(input, output, session) {
  mod <- callModule(mod_server, "my")
}

shiny::shinyApp(ui, server)
```

in versions 0.4.0 and below will display 2 lines of code. In 0.4.1 it displays nothing (no call to updateAceEditor in this fashion works).

If that line is changed to 

```
shinyAce::updateAceEditor(session, "editor", code)
```

(i.e., dropping the ns) then the code is displayed in versions 0.4.1 and not in 0.4.0

This is with shiny 1.4.0 and R 3.6.1


Is there a possibility to include custom made modes within the package? 

I noticed that '/inst/www/ace' includes all the available modes for the different languages. I can imagine that if I place my custom mode in here and built the package, it would be accessible by aceEditor(). 

I am not sure if it would be this simple? If it is, it is still not preferable because it would require to make the package myself. It would be easier to use the CRAN version and for instance reference the mode file in the function. 

Could you please advise what possibilities there are?
I'm currently working on a rmarkdown editor with instant preview using shinyAce (code at [swarm-lab/editR](https://github.com/swarm-lab/editR)). It works great and it is very easy to set up. Thank you for this. 

My problem is that if I use aceEditor in markdown mode, R code chunks don't get syntax highlighting or automated indentation like RStudio does for instance. Do you plan on creating a rmarkdown (or knitr) mode for shinyAce (or for Ace more generally)? 

I just noticed the link below. Looks awesome. Just though I would mention it :)

https://github.com/swenson/ace_spell_check_js
