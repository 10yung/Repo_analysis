<!--PLEASE READ THIS CAREFULLY: You *MUST* read and complete the checklist below, by placing an x into each [ ] (so that it shows '[x]', NOT '[ x]' or '[x ]'), BEFORE clicking on 'Submit new issue'. Failure to perform these steps, WHICH ARE ONLY THERE TO HELP *YOU*, will result in the issue being dismissed without warning.-->

Checklist
---------
- [x] I looked at https://github.com/pbatard/rufus/wiki/FAQ to see if my question has already been answered.
- [x] I performed a search in the issue tracker for similar issues using keywords relevant to my problem, such as the error message I got from the log.
- [-] I clicked the 'Log' button or pressed <kbd>Ctrl</kbd>-<kbd>L</kbd> in Rufus, and copy/pasted the log into the line that says `<FULL LOG>` below.
- [-] The log I am copying is the FULL log, starting with the line `Rufus version: x.y.z` - I have NOT removed any part of it.

Additionally (if applicable):
- [ ] I ran a bad blocks check, by clicking _Show advanced format options_ then _Check device for bad blocks_, and confirmed that my USB is not defective.
- [ ] I also tried one or more of the following:
  - [ ] Using a different USB drive.
  - [X] Plugging the USB into a different port.
  - [-] Running Rufus on a different computer.
- [x] If using an image, I clicked on the `(✓)` button to compute the MD5, SHA1 and SHA256 checksums, which are therefore present in the log I copied. I confirmed, by performing an internet search, that these values match the ones from the official image.

Issue description
-----------------

After successful booting my USB Device via RUFUS, it made the USB not visible everywhere, I can not see it in device manager, through disk part in windows, nowhere. 
I have no idea what happened, this USB was used for years without any problems till booting with Rufus. 
Do you have any ideas how can I restore my USB to make it work again?

I was not able to checkbox all of the above because immediately closed Rufus.

Hi,
I just installed Windows 10 1909 and tried to do VHD with installer from rufus.
Enabled EFI+BIOS dual usb, checked fixes, rufus MBR, quick format and unchecked extended label.
I'm trying to do win10 1909 (19H2) bootable VHD image from rufus-downloaded ISO.
When old BIOSes fixes are checked rufus is unable to create bootable image.
When I uncheck it, It works just good. It's probably related with using new windows build to run rufus.

There's a log:
```
Format operation started
Requesting disk access...
Will use 'F:' as volume mountpoint
Deleting partitions...
Deleting ALL partition(s) from disk '\\?\PhysicalDrive1':
● Partition 1 (offset: 1048576, size: 6.0 GB)
● Partition 2 (offset: 6441378304, size: 512 KB)
Opened \\.\PhysicalDrive1 for exclusive write access
Could not get Disk Extents: [0x000001B1] A device which does not exist was specified.
Could not get Disk Extents: [0x000001B1] A device which does not exist was specified.
No logical drive found (unpartitioned?)
Drive does not appear to be partitioned
Analyzing existing boot records...
Drive has a Rufus Master Boot Record
Clearing MBR/PBR/GPT structures...
Erasing 128 sectors
Deleting partitions...
Partitioning (MBR)...
● Creating Main Data Partition (offset: 32256, size: 6.0 GB)
● Creating UEFI:NTFS Partition (offset: 6441361920, size: 512 KB)
Writing UEFI:NTFS data...
Waiting for logical drive to reappear...
Closed Windows format prompt
Formatting (NTFS)...
Using cluster size: 4096 bytes
Quick format was selected
FormatExCallback: Received unhandled command 0x0225 - aborting
[0x00000001] Incorrect function. - Retrying...
[0x00000001] Incorrect function. - Retrying...
[0x00000001] Incorrect function. - Retrying...
[0x00000001] Incorrect function. - Retrying...
Format error: An unsupported command was received.
\\?\Volume{00a0be15-0000-0000-007e-000000000000}\ is already mounted as F:
Re-mounted volume as F: after error

Found non-USB removable device 'QEMU QEMU HARDDISK SCSI Disk Device' => Eliminated
Found VHD device 'Microsoft Virtual Disk'
1 device found
No volume information for drive 0x81
Disk type: FIXED, Disk size: 6.4GB, Sector size: 512 bytes
Cylinders: 783, Tracks per cylinder: 255, Sectors per track: 63
Partition type: MBR, NB Partitions: 2
Disk ID: 0x00A0BE15
Drive has a Zeroed Master Boot Record
Partition 1:
  Type: NTFS/exFAT/UDF (0x07)
  Size: 6.0 GB (6441329664 bytes)
  Start Sector: 63, Boot: Yes
Partition 2 (UEFI:NTFS):
  Type: EFI FAT (0xef)
  Size: 512 KB (524288 bytes)
  Start Sector: 12580785, Boot: No
```
﻿<!--PLEASE READ THIS CAREFULLY: You *MUST* read and complete the checklist below, by placing an x into each [ ] (so that it shows '[x]', NOT '[ x]' or '[x ]'), BEFORE clicking on 'Submit new issue'. Failure to perform these steps, WHICH ARE ONLY THERE TO HELP *YOU*, will result in the issue being dismissed without warning.-->

Checklist
---------
- [x] I looked at https://github.com/pbatard/rufus/wiki/FAQ to see if my question has already been answered.
- [x] I performed a search in the issue tracker for similar issues using keywords relevant to my problem, such as the error message I got from the log.
- [x] I clicked the 'Log' button or pressed <kbd>Ctrl</kbd>-<kbd>L</kbd> in Rufus, and copy/pasted the log into the line that says `<FULL LOG>` below.
- [x] The log I am copying is the FULL log, starting with the line `Rufus version: x.y.z` - I have NOT removed any part of it.

Additionally (if applicable):
- [x] I ran a bad blocks check, by clicking _Show advanced format options_ then _Check device for bad blocks_, and confirmed that my USB is not defective.

        $ sudo badblocks -sv /dev/sdc 
        Kontrollerar block 0 till 58615703
        Letar efter dåliga block (skrivskyddad test): klar                                                 
        Pass avslutat, 0 dåliga block hittade. (0/0/0 fel)

- [x] I also tried one or more of the following:
  - [x] Using a different USB drive.
  - [x] Plugging the USB into a different port.
  - [x] Running Rufus on a different computer.
- [x] If using an image, I clicked on the `(✓)` button to compute the MD5, SHA1 and SHA256 checksums, which are therefore present in the log I copied. I confirmed, by performing an internet search, that these values match the ones from the official image.
*I tested the checksum of the iso file separately at/after downloading*

        $ md5sum lubuntu-19.10-desktop-amd64.iso 
        8b8b03366298e7489df6bc34760f89aa  lubuntu-19.10-desktop-amd64.iso

    Actually a got it via zsync, which has a built-in checksum test.

Issue description
-----------------
When creating persistent a live drive Rufus makes an ext3 file system in the partition for persistence. This file system has errors. It is still possible to use the file system for example with
Lubuntu 19.10, but

1. Part of the drive space in the file system is lost, wasted, compared to a healthy file system, when Lubuntu or other flavours of Ubuntu is booted. This might not be seen when connected to an operating system that is already running. The size of the lost drive space is small in a 4 GB pendrive, significantly bigger in a 16 GB pendrive, and huge ina 60 GB SSD. I used an SSD in several test runs because the loss is so big, that it very easy to see, and also because it is a high speed device, so that I could do several tests within a rather short time.

2. The errors in the file system may not create any corruption of files in the beginning, but I am afraid, that it may cause severe problems later on. When booting live-only I noticed that a log directory was mounted (and some of the errors are that some inodes have 2 links).

I tested various things in three different computers and another user tested it in a fourth computer. I ran standard Windows 10 fully up to date in two computers and a 'Windows Insider' version 10 fully up to date in the third computer. After some repetitions things started to look good, but when I specified the starting conditions in a strict way I could reproduce similar (not exactly the same) size of lost drive space.

1. Original drive a standard storage device with FAT32
2. Oriignal drive zeroised (completely overwritten with zero bytes)

In these cases between 20 GiB and 40 GiB were lost, already marked as used by df -h when booting into the persistent live system for the first time. A single test starting from exFAT showed 12 GiB lost drive space.

Thinking aloud
---
It seems to me that the tool to create the file system is buggy, or is using some buggy or not compatible system software (dll-file?).Or maybe you could fix it by compiling with some flags for more strict, less optimized for speed operation. Or you could test if there is a version for ext2 or ext4, that is more robust. I think that ext4 gets much more attention than ext3 nowadays.

Repair
---
I tested that it was possible to repair the file system with e2fsck -f and then there was no lost drive space, only the normal amount reserved to management (and similar size as that of the linux tool mkusb).

Re-format
---
I tested also that it was possible to re-format the ext3 file system with AOMEI Parition Assistent (the freeware version), and that file system was working almost correctly, there was a "Resize inode not valid" message. But no other complaint, not the huge amount of errors caused by Rufus, and there was no obvious loss of drive space for the user.

Final words
---
I wish that you will fix this bug or find a way around it soon, and I am willing to help with testing, when you have new versions of Rufus or simply new ways to set the conditions to make it work.

Good luck
Nio


Log
---
```
Rufus x86 v3.8.1580
Windows version: Windows 10 64-bit (Build 18362)
Syslinux versions: 4.07/2013-07-25, 6.03/2014-10-06
Grub versions: 0.4.6a, 2.04
System locale ID: 0x041D (sv-SE)
Will use default UI locale 0x041D
SetLGP: Successfully set NoDriveTypeAutorun policy to 0x0000009E
Localization set to 'sv-SE'
Found non-USB removable device 'LITEONIT LMT-128M6M mSATA 128GB' => Eliminated
0 devices found
Found UAS (USB 3.0) device 'OCZ-AGIL ITY3 SCSI Disk Device' (174C:55AA)
No logical drive found (unpartitioned?)
Device eliminated because it was detected as a Hard Drive (score 3 > 0)
If this device is not a Hard Drive, please e-mail the author of this application
NOTE: You can enable the listing of Hard Drives under 'advanced drive properties'
Found non-USB removable device 'LITEONIT LMT-128M6M mSATA 128GB' => Eliminated
0 devices found
Found UAS (USB 3.0) device 'OCZ-AGIL ITY3 SCSI Disk Device' (174C:55AA)
No logical drive found (unpartitioned?)
Found non-USB removable device 'LITEONIT LMT-128M6M mSATA 128GB' => Eliminated
1 device found
No volume information for drive 0x81
Disk type: FIXED, Disk size: 60 GB, Sector size: 512 bytes
Cylinders: 7297, Tracks per cylinder: 255, Sectors per track: 63
Partition type: MBR, NB Partitions: 0
Disk ID: 0x00000000
Drive does not have an x86 Master Boot Record
Scanning image...
ISO analysis:
  Image is an ISO9660 image
  Will use '/isolinux/isolinux.cfg' for Syslinux
  Detected Syslinux version: 6.04/20190226 (from '/isolinux/isolinux.bin')
Disk image analysis:
  Image has an unknown Master Boot Record
  Image is a bootable disk image
ISO label: 'Lubuntu 19.10 amd64'
  Size: 1.6 GB (Projected)
  Uses: Syslinux/Isolinux v6.04
  Uses: EFI
  Note: This ISO uses symbolic links, which will not be replicated due to file system limitations.
  Because of this, some features from this image may not work...
Using image: lubuntu-19.10-desktop-amd64.iso (1.6 GB)
Will reuse 'ldlinux.sys' and 'ldlinux.bss' from './rufus_files/rufus_files/syslinux-6.04/20190226/' for Syslinux installation

Format operation started
Requesting disk access...
No drive letter was assigned...
Will use 'E:' as volume mountpoint
Deleting partitions...
Notice: Could not delete partitions: [0x00000000] Åtgärden har slutförts.
Opened \\.\PhysicalDrive1 for shared write access
No logical drive found (unpartitioned?)
Drive does not appear to be partitioned
Analyzing existing boot records...
Drive does not have an x86 Master Boot Record
Clearing MBR/PBR/GPT structures...
Erasing 2176 sectors
Deleting partitions...
Partitioning (MBR)...
● Creating Main Data Partition (offset: 1048576, size: 1.9 GB)
● Creating Linux Persistence Partition (offset: 2040434176, size: 54.0 GB)
Waiting for logical drive to reappear...
Closed Windows format prompt
Using Ubuntu-like method to enable persistence
Formatting (ext3)...
884735 possible inodes out of 14155769 blocks (block size = 4096)
707788 blocks (5.0%) reserved for the super user
Creating 432 inode sets: [1 marker = 5.4 set(s)]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Creating 32768 journal blocks: [1 marker = 409.6 block(s)]
++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
Done
Formatting (Large FAT32)...
Opened \\?\Volume{000592e1-0000-0000-0000-100000000000} for exclusive write access
Size : 1.9 GB 3983175 sectors
Cluster size 16384 bytes, 512 Bytes Per Sector
Volume ID is 1b17:1d76
32 Reserved Sectors, 972 Sectors per FAT, 2 FATs
124412 Total clusters
124411 Free Clusters
Clearing out 2008 sectors for reserved sectors, FATs and root cluster...
Initializing reserved sectors and FATs...
FAT #0 sector at address: 32
FAT #1 sector at address: 1004
Writing Partition Boot Record...
Using Standard FAT32 partition boot record
Confirmed new volume has a primary FAT32 boot sector
Setting primary FAT32 boot sector for boot...
Confirmed new volume has a secondary FAT32 boot sector
Setting secondary FAT32 boot sector for boot...
Setting Label (This may take a while)...
Format completed.
Writing Master Boot Record...
Partition is already FAT32 LBA...
Set bootable USB partition as 0x80
Using Syslinux MBR
Found volume \\?\Volume{000592e1-0000-0000-0000-100000000000}\
\\?\Volume{000592e1-0000-0000-0000-100000000000}\ is already mounted as E:
Installing Syslinux 6.04...
Opened \\?\Volume{000592e1-0000-0000-0000-100000000000} for shared write access
Using existing './rufus_files/syslinux-6.04/20190226/ldlinux.sys' ✓
Using existing './rufus_files/syslinux-6.04/20190226/ldlinux.bss' ✓
Successfully wrote 'ldlinux.sys'
Successfully wrote Syslinux boot record
Successfully remounted \\?\Volume{000592e1-0000-0000-0000-100000000000}\ as E:
Extracting files...
Image is an ISO9660 image
This image will be extracted using Rock Ridge extensions (if present)
Extracting: E:\.disk\base_installable (0 bytes)
Extracting: E:\.disk\casper-uuid-generic (37 bytes)
Extracting: E:\.disk\cd_type (15 bytes)
Extracting: E:\.disk\info (56 bytes)
Extracting: E:\.disk\release_notes_url (79 bytes)
Extracting: E:\boot\grub\efi.img (3.9 MB)
Extracting: E:\boot\grub\font.pf2 (4.9 KB)
Extracting: E:\boot\grub\grub.cfg (892 bytes)
  Added 'persistent' kernel option
Extracting: E:\boot\grub\loopback.cfg (382 bytes)
Extracting: E:\boot\grub\x86_64-efi\acpi.mod (15.2 KB)
Extracting: E:\boot\grub\x86_64-efi\adler32.mod (2 KB)
Extracting: E:\boot\grub\x86_64-efi\ahci.mod (22.4 KB)
Extracting: E:\boot\grub\x86_64-efi\all_video.mod (824 bytes)
Extracting: E:\boot\grub\x86_64-efi\aout.mod (1.6 KB)
Extracting: E:\boot\grub\x86_64-efi\appleldr.mod (5.4 KB)
Extracting: E:\boot\grub\x86_64-efi\archelp.mod (4.5 KB)
Extracting: E:\boot\grub\x86_64-efi\ata.mod (8.9 KB)
Extracting: E:\boot\grub\x86_64-efi\at_keyboard.mod (6.9 KB)
Extracting: E:\boot\grub\x86_64-efi\backtrace.mod (2.6 KB)
Extracting: E:\boot\grub\x86_64-efi\bfs.mod (9.3 KB)
Extracting: E:\boot\grub\x86_64-efi\bitmap.mod (3.2 KB)
Extracting: E:\boot\grub\x86_64-efi\bitmap_scale.mod (5.4 KB)
Extracting: E:\boot\grub\x86_64-efi\blocklist.mod (3.1 KB)
Extracting: E:\boot\grub\x86_64-efi\boot.mod (3.3 KB)
Extracting: E:\boot\grub\x86_64-efi\bsd.mod (47.3 KB)
Extracting: E:\boot\grub\x86_64-efi\bswap_test.mod (3.4 KB)
Extracting: E:\boot\grub\x86_64-efi\btrfs.mod (24.5 KB)
Extracting: E:\boot\grub\x86_64-efi\bufio.mod (2.9 KB)
Extracting: E:\boot\grub\x86_64-efi\cat.mod (4.5 KB)
Extracting: E:\boot\grub\x86_64-efi\cbfs.mod (5.8 KB)
Extracting: E:\boot\grub\x86_64-efi\cbls.mod (6.2 KB)
Extracting: E:\boot\grub\x86_64-efi\cbmemc.mod (4.0 KB)
Extracting: E:\boot\grub\x86_64-efi\cbtable.mod (1.7 KB)
Extracting: E:\boot\grub\x86_64-efi\cbtime.mod (4.5 KB)
Extracting: E:\boot\grub\x86_64-efi\chain.mod (19.2 KB)
Extracting: E:\boot\grub\x86_64-efi\cmdline_cat_test.mod (4.7 KB)
Extracting: E:\boot\grub\x86_64-efi\cmp.mod (3.0 KB)
Extracting: E:\boot\grub\x86_64-efi\cmp_test.mod (6.6 KB)
Extracting: E:\boot\grub\x86_64-efi\command.lst (3.6 KB)
Extracting: E:\boot\grub\x86_64-efi\cpio.mod (4.4 KB)
Extracting: E:\boot\grub\x86_64-efi\cpio_be.mod (4.4 KB)
Extracting: E:\boot\grub\x86_64-efi\cpuid.mod (2.7 KB)
Extracting: E:\boot\grub\x86_64-efi\crc64.mod (2.3 KB)
Extracting: E:\boot\grub\x86_64-efi\crypto.lst (936 bytes)
Extracting: E:\boot\grub\x86_64-efi\crypto.mod (6.9 KB)
Extracting: E:\boot\grub\x86_64-efi\cryptodisk.mod (15.5 KB)
Extracting: E:\boot\grub\x86_64-efi\cs5536.mod (3.9 KB)
Extracting: E:\boot\grub\x86_64-efi\ctz_test.mod (2.8 KB)
Extracting: E:\boot\grub\x86_64-efi\date.mod (3.3 KB)
Extracting: E:\boot\grub\x86_64-efi\datehook.mod (3.1 KB)
Extracting: E:\boot\grub\x86_64-efi\datetime.mod (2.0 KB)
Extracting: E:\boot\grub\x86_64-efi\disk.mod (3.2 KB)
Extracting: E:\boot\grub\x86_64-efi\diskfilter.mod (14.5 KB)
Extracting: E:\boot\grub\x86_64-efi\div.mod (1.5 KB)
Extracting: E:\boot\grub\x86_64-efi\div_test.mod (8.1 KB)
Extracting: E:\boot\grub\x86_64-efi\dm_nv.mod (2.9 KB)
Extracting: E:\boot\grub\x86_64-efi\echo.mod (3.1 KB)
Extracting: E:\boot\grub\x86_64-efi\efifwsetup.mod (2.2 KB)
Extracting: E:\boot\grub\x86_64-efi\efinet.mod (10 KB)
Extracting: E:\boot\grub\x86_64-efi\efi_gop.mod (12.4 KB)
Extracting: E:\boot\grub\x86_64-efi\efi_uga.mod (7.1 KB)
Extracting: E:\boot\grub\x86_64-efi\ehci.mod (25.2 KB)
Extracting: E:\boot\grub\x86_64-efi\elf.mod (6.3 KB)
Extracting: E:\boot\grub\x86_64-efi\eval.mod (2.3 KB)
Extracting: E:\boot\grub\x86_64-efi\exfat.mod (8.0 KB)
Extracting: E:\boot\grub\x86_64-efi\exfctest.mod (2.4 KB)
Extracting: E:\boot\grub\x86_64-efi\ext2.mod (8.8 KB)
Extracting: E:\boot\grub\x86_64-efi\f2fs.mod (9.6 KB)
Extracting: E:\boot\grub\x86_64-efi\fat.mod (8.1 KB)
Extracting: E:\boot\grub\x86_64-efi\fdt.lst (0 bytes)
Extracting: E:\boot\grub\x86_64-efi\file.mod (25.5 KB)
Extracting: E:\boot\grub\x86_64-efi\fixvideo.mod (3.1 KB)
Extracting: E:\boot\grub\x86_64-efi\font.mod (16.8 KB)
Extracting: E:\boot\grub\x86_64-efi\fs.lst (219 bytes)
Extracting: E:\boot\grub\x86_64-efi\gcry_arcfour.mod (2.5 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_blowfish.mod (9 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_camellia.mod (27.9 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_cast5.mod (14.6 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_crc.mod (11.8 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_des.mod (16.2 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_dsa.mod (3.5 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_idea.mod (4.1 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_md4.mod (4.2 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_md5.mod (4.6 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_rfc2268.mod (3.3 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_rijndael.mod (20.1 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_rmd160.mod (7.9 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_rsa.mod (3.5 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_seed.mod (13.2 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_serpent.mod (16.5 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_sha1.mod (7.6 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_sha256.mod (5.2 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_sha512.mod (6 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_tiger.mod (13 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_twofish.mod (32.9 KB)
Extracting: E:\boot\grub\x86_64-efi\gcry_whirlpool.mod (22.5 KB)
Extracting: E:\boot\grub\x86_64-efi\geli.mod (9.2 KB)
Extracting: E:\boot\grub\x86_64-efi\gettext.mod (8.4 KB)
Extracting: E:\boot\grub\x86_64-efi\gfxmenu.mod (58.1 KB)
Extracting: E:\boot\grub\x86_64-efi\gfxterm.mod (16.7 KB)
Extracting: E:\boot\grub\x86_64-efi\gfxterm_background.mod (4.5 KB)
Extracting: E:\boot\grub\x86_64-efi\gfxterm_menu.mod (7.8 KB)
Extracting: E:\boot\grub\x86_64-efi\gptsync.mod (5.3 KB)
Extracting: E:\boot\grub\x86_64-efi\grub.cfg (219 bytes)
Extracting: E:\boot\grub\x86_64-efi\gzio.mod (11.7 KB)
Extracting: E:\boot\grub\x86_64-efi\halt.mod (6.7 KB)
Extracting: E:\boot\grub\x86_64-efi\hashsum.mod (8.3 KB)
Extracting: E:\boot\grub\x86_64-efi\hdparm.mod (10.3 KB)
Extracting: E:\boot\grub\x86_64-efi\help.mod (4.0 KB)
Extracting: E:\boot\grub\x86_64-efi\hexdump.mod (4.5 KB)
Extracting: E:\boot\grub\x86_64-efi\hfs.mod (10.0 KB)
Extracting: E:\boot\grub\x86_64-efi\hfsplus.mod (10.8 KB)
Extracting: E:\boot\grub\x86_64-efi\hfspluscomp.mod (4.3 KB)
Extracting: E:\boot\grub\x86_64-efi\http.mod (9.3 KB)
Extracting: E:\boot\grub\x86_64-efi\iorw.mod (4.7 KB)
Extracting: E:\boot\grub\x86_64-efi\jfs.mod (8.6 KB)
Extracting: E:\boot\grub\x86_64-efi\jpeg.mod (8.7 KB)
Extracting: E:\boot\grub\x86_64-efi\keylayouts.mod (6.4 KB)
Extracting: E:\boot\grub\x86_64-efi\keystatus.mod (3.1 KB)
Extracting: E:\boot\grub\x86_64-efi\ldm.mod (8.0 KB)
Extracting: E:\boot\grub\x86_64-efi\legacycfg.mod (43.8 KB)
Extracting: E:\boot\grub\x86_64-efi\legacy_password_test.mod (15.7 KB)
Extracting: E:\boot\grub\x86_64-efi\linux.mod (19.6 KB)
Extracting: E:\boot\grub\x86_64-efi\linux16.mod (8.8 KB)
Extracting: E:\boot\grub\x86_64-efi\linuxefi.mod (11.7 KB)
Extracting: E:\boot\grub\x86_64-efi\loadbios.mod (4.7 KB)
Extracting: E:\boot\grub\x86_64-efi\loadenv.mod (9.1 KB)
Extracting: E:\boot\grub\x86_64-efi\loopback.mod (4.8 KB)
Extracting: E:\boot\grub\x86_64-efi\ls.mod (6.4 KB)
Extracting: E:\boot\grub\x86_64-efi\lsacpi.mod (7.1 KB)
Extracting: E:\boot\grub\x86_64-efi\lsefi.mod (5.2 KB)
Extracting: E:\boot\grub\x86_64-efi\lsefimmap.mod (3.7 KB)
Extracting: E:\boot\grub\x86_64-efi\lsefisystab.mod (4.2 KB)
Extracting: E:\boot\grub\x86_64-efi\lsmmap.mod (3 KB)
Extracting: E:\boot\grub\x86_64-efi\lspci.mod (7.2 KB)
Extracting: E:\boot\grub\x86_64-efi\lssal.mod (3.8 KB)
Extracting: E:\boot\grub\x86_64-efi\luks.mod (9.6 KB)
Extracting: E:\boot\grub\x86_64-efi\lvm.mod (9.4 KB)
Extracting: E:\boot\grub\x86_64-efi\lzopio.mod (7.3 KB)
Extracting: E:\boot\grub\x86_64-efi\macbless.mod (4.9 KB)
Extracting: E:\boot\grub\x86_64-efi\macho.mod (10.7 KB)
Extracting: E:\boot\grub\x86_64-efi\mdraid09.mod (2.9 KB)
Extracting: E:\boot\grub\x86_64-efi\mdraid09_be.mod (2.9 KB)
Extracting: E:\boot\grub\x86_64-efi\mdraid1x.mod (2.7 KB)
Extracting: E:\boot\grub\x86_64-efi\memrw.mod (4.7 KB)
Extracting: E:\boot\grub\x86_64-efi\minicmd.mod (5.7 KB)
Extracting: E:\boot\grub\x86_64-efi\minix2.mod (5.6 KB)
Extracting: E:\boot\grub\x86_64-efi\minix2_be.mod (5.7 KB)
Extracting: E:\boot\grub\x86_64-efi\minix3.mod (5.7 KB)
Extracting: E:\boot\grub\x86_64-efi\minix3_be.mod (5.8 KB)
Extracting: E:\boot\grub\x86_64-efi\minix_be.mod (5.6 KB)
Extracting: E:\boot\grub\x86_64-efi\mmap.mod (9.4 KB)
Extracting: E:\boot\grub\x86_64-efi\moddep.lst (5.1 KB)
Extracting: E:\boot\grub\x86_64-efi\morse.mod (3.4 KB)
Extracting: E:\boot\grub\x86_64-efi\mpi.mod (42.5 KB)
Extracting: E:\boot\grub\x86_64-efi\msdospart.mod (3.8 KB)
Extracting: E:\boot\grub\x86_64-efi\multiboot.mod (20.4 KB)
Extracting: E:\boot\grub\x86_64-efi\multiboot2.mod (23.6 KB)
Extracting: E:\boot\grub\x86_64-efi\mul_test.mod (2.5 KB)
Extracting: E:\boot\grub\x86_64-efi\nativedisk.mod (6.6 KB)
Extracting: E:\boot\grub\x86_64-efi\net.mod (87.7 KB)
Extracting: E:\boot\grub\x86_64-efi\newc.mod (4.6 KB)
Extracting: E:\boot\grub\x86_64-efi\ntfs.mod (15.0 KB)
Extracting: E:\boot\grub\x86_64-efi\ntfscomp.mod (5.7 KB)
Extracting: E:\boot\grub\x86_64-efi\odc.mod (4.4 KB)
Extracting: E:\boot\grub\x86_64-efi\offsetio.mod (2.3 KB)
Extracting: E:\boot\grub\x86_64-efi\ohci.mod (15.6 KB)
Extracting: E:\boot\grub\x86_64-efi\partmap.lst (111 bytes)
Extracting: E:\boot\grub\x86_64-efi\parttool.lst (17 bytes)
Extracting: E:\boot\grub\x86_64-efi\parttool.mod (7.3 KB)
Extracting: E:\boot\grub\x86_64-efi\part_acorn.mod (2.4 KB)
Extracting: E:\boot\grub\x86_64-efi\part_amiga.mod (2.7 KB)
Extracting: E:\boot\grub\x86_64-efi\part_apple.mod (3.1 KB)
Extracting: E:\boot\grub\x86_64-efi\part_bsd.mod (4.3 KB)
Extracting: E:\boot\grub\x86_64-efi\part_dfly.mod (2.7 KB)
Extracting: E:\boot\grub\x86_64-efi\part_dvh.mod (2.3 KB)
Extracting: E:\boot\grub\x86_64-efi\part_gpt.mod (3.3 KB)
Extracting: E:\boot\grub\x86_64-efi\part_msdos.mod (3.1 KB)
Extracting: E:\boot\grub\x86_64-efi\part_plan.mod (2.6 KB)
Extracting: E:\boot\grub\x86_64-efi\part_sun.mod (2.3 KB)
Extracting: E:\boot\grub\x86_64-efi\part_sunpc.mod (2.6 KB)
Extracting: E:\boot\grub\x86_64-efi\password.mod (3 KB)
Extracting: E:\boot\grub\x86_64-efi\password_pbkdf2.mod (4.4 KB)
Extracting: E:\boot\grub\x86_64-efi\pata.mod (7.4 KB)
Extracting: E:\boot\grub\x86_64-efi\pbkdf2.mod (2.1 KB)
Extracting: E:\boot\grub\x86_64-efi\pbkdf2_test.mod (3.5 KB)
Extracting: E:\boot\grub\x86_64-efi\pcidump.mod (3.6 KB)
Extracting: E:\boot\grub\x86_64-efi\pgp.mod (19 KB)
Extracting: E:\boot\grub\x86_64-efi\play.mod (4.1 KB)
Extracting: E:\boot\grub\x86_64-efi\png.mod (10.1 KB)
Extracting: E:\boot\grub\x86_64-efi\priority_queue.mod (2.3 KB)
Extracting: E:\boot\grub\x86_64-efi\probe.mod (4.4 KB)
Extracting: E:\boot\grub\x86_64-efi\procfs.mod (3.9 KB)
Extracting: E:\boot\grub\x86_64-efi\progress.mod (3.2 KB)
Extracting: E:\boot\grub\x86_64-efi\raid5rec.mod (2.1 KB)
Extracting: E:\boot\grub\x86_64-efi\raid6rec.mod (3.4 KB)
Extracting: E:\boot\grub\x86_64-efi\random.mod (3.7 KB)
Extracting: E:\boot\grub\x86_64-efi\rdmsr.mod (3.1 KB)
Extracting: E:\boot\grub\x86_64-efi\read.mod (2.4 KB)
Extracting: E:\boot\grub\x86_64-efi\reboot.mod (1.7 KB)
Extracting: E:\boot\grub\x86_64-efi\regexp.mod (74.3 KB)
Extracting: E:\boot\grub\x86_64-efi\reiserfs.mod (13.6 KB)
Extracting: E:\boot\grub\x86_64-efi\relocator.mod (25.5 KB)
Extracting: E:\boot\grub\x86_64-efi\romfs.mod (5.8 KB)
Extracting: E:\boot\grub\x86_64-efi\scsi.mod (7 KB)
Extracting: E:\boot\grub\x86_64-efi\serial.mod (14.5 KB)
Extracting: E:\boot\grub\x86_64-efi\setjmp.mod (1 KB)
Extracting: E:\boot\grub\x86_64-efi\setjmp_test.mod (2.7 KB)
Extracting: E:\boot\grub\x86_64-efi\setpci.mod (8.3 KB)
Extracting: E:\boot\grub\x86_64-efi\shift_test.mod (3.2 KB)
Extracting: E:\boot\grub\x86_64-efi\shim_lock.mod (3.6 KB)
Extracting: E:\boot\grub\x86_64-efi\signature_test.mod (8.7 KB)
Extracting: E:\boot\grub\x86_64-efi\sleep.mod (3.6 KB)
Extracting: E:\boot\grub\x86_64-efi\sleep_test.mod (3.4 KB)
Extracting: E:\boot\grub\x86_64-efi\spkmodem.mod (3.3 KB)
Extracting: E:\boot\grub\x86_64-efi\squash4.mod (9.9 KB)
Extracting: E:\boot\grub\x86_64-efi\strtoull_test.mod (3.4 KB)
Extracting: E:\boot\grub\x86_64-efi\syslinuxcfg.mod (29.3 KB)
Extracting: E:\boot\grub\x86_64-efi\terminal.lst (162 bytes)
Extracting: E:\boot\grub\x86_64-efi\terminal.mod (6.7 KB)
Extracting: E:\boot\grub\x86_64-efi\terminfo.mod (18.6 KB)
Extracting: E:\boot\grub\x86_64-efi\test.mod (7.4 KB)
Extracting: E:\boot\grub\x86_64-efi\testload.mod (3.9 KB)
Extracting: E:\boot\grub\x86_64-efi\testspeed.mod (3.5 KB)
Extracting: E:\boot\grub\x86_64-efi\test_blockarg.mod (2.1 KB)
Extracting: E:\boot\grub\x86_64-efi\tftp.mod (8.6 KB)
Extracting: E:\boot\grub\x86_64-efi\tga.mod (6.4 KB)
Extracting: E:\boot\grub\x86_64-efi\time.mod (2.4 KB)
Extracting: E:\boot\grub\x86_64-efi\tpm.mod (6.3 KB)
Extracting: E:\boot\grub\x86_64-efi\tr.mod (3.7 KB)
Extracting: E:\boot\grub\x86_64-efi\trig.mod (2.2 KB)
Extracting: E:\boot\grub\x86_64-efi\true.mod (2.0 KB)
Extracting: E:\boot\grub\x86_64-efi\udf.mod (12.0 KB)
Extracting: E:\boot\grub\x86_64-efi\ufs1.mod (7.7 KB)
Extracting: E:\boot\grub\x86_64-efi\ufs1_be.mod (7.8 KB)
Extracting: E:\boot\grub\x86_64-efi\ufs2.mod (7.7 KB)
Extracting: E:\boot\grub\x86_64-efi\uhci.mod (10 KB)
Extracting: E:\boot\grub\x86_64-efi\usb.mod (15.4 KB)
Extracting: E:\boot\grub\x86_64-efi\usbms.mod (10.8 KB)
Extracting: E:\boot\grub\x86_64-efi\usbserial_common.mod (3.0 KB)
Extracting: E:\boot\grub\x86_64-efi\usbserial_ftdi.mod (3.5 KB)
Extracting: E:\boot\grub\x86_64-efi\usbserial_pl2303.mod (3.8 KB)
Extracting: E:\boot\grub\x86_64-efi\usbserial_usbdebug.mod (2.5 KB)
Extracting: E:\boot\grub\x86_64-efi\usbtest.mod (5.6 KB)
Extracting: E:\boot\grub\x86_64-efi\usb_keyboard.mod (5.8 KB)
Extracting: E:\boot\grub\x86_64-efi\verifiers.mod (3.6 KB)
Extracting: E:\boot\grub\x86_64-efi\video.lst (41 bytes)
Extracting: E:\boot\grub\x86_64-efi\video.mod (8.9 KB)
Extracting: E:\boot\grub\x86_64-efi\videoinfo.mod (5.3 KB)
Extracting: E:\boot\grub\x86_64-efi\videotest.mod (5.5 KB)
Extracting: E:\boot\grub\x86_64-efi\videotest_checksum.mod (3.8 KB)
Extracting: E:\boot\grub\x86_64-efi\video_bochs.mod (8.4 KB)
Extracting: E:\boot\grub\x86_64-efi\video_cirrus.mod (9.0 KB)
Extracting: E:\boot\grub\x86_64-efi\video_colors.mod (9.9 KB)
Extracting: E:\boot\grub\x86_64-efi\video_fb.mod (27.8 KB)
Extracting: E:\boot\grub\x86_64-efi\wrmsr.mod (2.4 KB)
Extracting: E:\boot\grub\x86_64-efi\xfs.mod (10.3 KB)
Extracting: E:\boot\grub\x86_64-efi\xnu.mod (41 KB)
Extracting: E:\boot\grub\x86_64-efi\xnu_uuid.mod (3.3 KB)
Extracting: E:\boot\grub\x86_64-efi\xnu_uuid_test.mod (3.4 KB)
Extracting: E:\boot\grub\x86_64-efi\xzio.mod (19.4 KB)
Extracting: E:\boot\grub\x86_64-efi\zfscrypt.mod (8.4 KB)
Extracting: E:\boot\grub\x86_64-efi\zstd.mod (78.1 KB)
Extracting: E:\casper\filesystem.manifest (52.4 KB)
Extracting: E:\casper\filesystem.manifest-remove (667 bytes)
Extracting: E:\casper\filesystem.size (11 bytes)
Extracting: E:\casper\filesystem.squashfs (1.5 GB)
Extracting: E:\casper\filesystem.squashfs.gpg (916 bytes)
Extracting: E:\casper\initrd (78.1 MB)
Extracting: E:\casper\vmlinuz (10.9 MB)
Extracting: E:\dists\eoan\main\binary-amd64\Packages.gz (6.3 KB)
Extracting: E:\dists\eoan\main\binary-amd64\Release (94 bytes)
Extracting: E:\dists\eoan\main\binary-i386\Packages.gz (677 bytes)
Extracting: E:\dists\eoan\main\binary-i386\Release (93 bytes)
Extracting: E:\dists\eoan\multiverse\binary-amd64\Packages.gz (40 bytes)
Extracting: E:\dists\eoan\multiverse\binary-amd64\Release (100 bytes)
Extracting: E:\dists\eoan\multiverse\binary-i386\Packages.gz (40 bytes)
Extracting: E:\dists\eoan\multiverse\binary-i386\Release (99 bytes)
Extracting: E:\dists\eoan\Release (6.4 KB)
Extracting: E:\dists\eoan\Release.gpg (819 bytes)
Extracting: E:\dists\eoan\restricted\binary-amd64\Packages.gz (40 bytes)
Extracting: E:\dists\eoan\restricted\binary-amd64\Release (100 bytes)
Extracting: E:\dists\eoan\restricted\binary-i386\Packages.gz (40 bytes)
Extracting: E:\dists\eoan\restricted\binary-i386\Release (99 bytes)
Extracting: E:\dists\eoan\universe\binary-amd64\Packages.gz (1.6 KB)
Extracting: E:\dists\eoan\universe\binary-amd64\Release (98 bytes)
Extracting: E:\dists\eoan\universe\binary-i386\Packages.gz (1.1 KB)
Extracting: E:\dists\eoan\universe\binary-i386\Release (97 bytes)
Extracting: E:\dists\stable (0 bytes)
  Ignoring Rock Ridge symbolic link to 'eoan'
Extracting: E:\dists\unstable (0 bytes)
  Ignoring Rock Ridge symbolic link to 'eoan'
Extracting: E:\EFI\BOOT\BOOTx64.EFI (1.3 MB)
Extracting: E:\EFI\BOOT\grubx64.efi (1.3 MB)
Extracting: E:\EFI\BOOT\mmx64.efi (1.2 MB)
Extracting: E:\install\mt86plus (178.4 KB)
Extracting: E:\isolinux\16x16.fnt (69.6 KB)
Extracting: E:\isolinux\aa.tr (2.0 KB)
Extracting: E:\isolinux\ab.tr (2.1 KB)
Extracting: E:\isolinux\ace.tr (2.1 KB)
Extracting: E:\isolinux\adtxt.cfg (0 bytes)
Extracting: E:\isolinux\ady.tr (2.1 KB)
Extracting: E:\isolinux\af.tr (2.4 KB)
Extracting: E:\isolinux\ak.tr (2.1 KB)
Extracting: E:\isolinux\am.tr (3.5 KB)
Extracting: E:\isolinux\an.tr (2.3 KB)
Extracting: E:\isolinux\arn.tr (2.1 KB)
Extracting: E:\isolinux\ary.tr (2.1 KB)
Extracting: E:\isolinux\as.tr (5.0 KB)
Extracting: E:\isolinux\ast.hlp (7.2 KB)
Extracting: E:\isolinux\ast.tr (2.3 KB)
Extracting: E:\isolinux\ay.tr (2.1 KB)
Extracting: E:\isolinux\az.tr (2.6 KB)
Extracting: E:\isolinux\ba.tr (2.1 KB)
Extracting: E:\isolinux\back.jpg (7.3 KB)
Extracting: E:\isolinux\be.hlp (11.4 KB)
Extracting: E:\isolinux\be.tr (4 KB)
Extracting: E:\isolinux\bem.tr (3.3 KB)
Extracting: E:\isolinux\ber.tr (2.1 KB)
Extracting: E:\isolinux\bg.hlp (11.4 KB)
Extracting: E:\isolinux\bg.tr (4.3 KB)
Extracting: E:\isolinux\bho.tr (2.1 KB)
Extracting: E:\isolinux\bn.hlp (14.8 KB)
Extracting: E:\isolinux\boot.cat (2 KB)
Extracting: E:\isolinux\bootlogo (1.2 MB)
Extracting: E:\isolinux\br.tr (2.3 KB)
Extracting: E:\isolinux\brx.tr (2.3 KB)
Extracting: E:\isolinux\bs.hlp (6.9 KB)
Extracting: E:\isolinux\bs.tr (2.3 KB)
Extracting: E:\isolinux\byn.tr (2.1 KB)
Extracting: E:\isolinux\ca.hlp (7.9 KB)
Extracting: E:\isolinux\ca.tr (2.6 KB)
Extracting: E:\isolinux\ca@valencia.tr (2.6 KB)
Extracting: E:\isolinux\ce.tr (2.7 KB)
Extracting: E:\isolinux\ceb.tr (2.4 KB)
Extracting: E:\isolinux\chain.c32 (24.4 KB)
Extracting: E:\isolinux\chr.tr (2.1 KB)
Extracting: E:\isolinux\ckb.tr (4.1 KB)
Extracting: E:\isolinux\co.tr (2.5 KB)
Extracting: E:\isolinux\crh.tr (2.1 KB)
Extracting: E:\isolinux\cs.hlp (7.2 KB)
Extracting: E:\isolinux\cs.tr (2.5 KB)
Extracting: E:\isolinux\csb.tr (2.6 KB)
Extracting: E:\isolinux\cv.tr (2.1 KB)
Extracting: E:\isolinux\cy.tr (2.3 KB)
Extracting: E:\isolinux\da.hlp (6.7 KB)
Extracting: E:\isolinux\da.tr (2.3 KB)
Extracting: E:\isolinux\de.hlp (7.6 KB)
Extracting: E:\isolinux\de.tr (2.5 KB)
Extracting: E:\isolinux\dtmenu.cfg (1.4 KB)
Extracting: E:\isolinux\dv.tr (5.1 KB)
Extracting: E:\isolinux\ee.tr (2.1 KB)
Extracting: E:\isolinux\el.hlp (13.1 KB)
Extracting: E:\isolinux\el.tr (4.6 KB)
Extracting: E:\isolinux\en.hlp (6.4 KB)
Extracting: E:\isolinux\en.tr (2.1 KB)
Extracting: E:\isolinux\en_AU.tr (2.1 KB)
Extracting: E:\isolinux\en_CA.tr (2.1 KB)
Extracting: E:\isolinux\en_GB.tr (2.1 KB)
Extracting: E:\isolinux\eo.hlp (6.7 KB)
Extracting: E:\isolinux\eo.tr (2.2 KB)
Extracting: E:\isolinux\es.hlp (7.5 KB)
Extracting: E:\isolinux\es.tr (2.3 KB)
Extracting: E:\isolinux\es_CO.tr (2.1 KB)
Extracting: E:\isolinux\et.hlp (6.6 KB)
Extracting: E:\isolinux\et.tr (2.2 KB)
Extracting: E:\isolinux\eu.hlp (7 KB)
Extracting: E:\isolinux\eu.tr (2.2 KB)
Extracting: E:\isolinux\exithelp.cfg (53 bytes)
Extracting: E:\isolinux\f1.txt (868 bytes)
Extracting: E:\isolinux\f10.txt (723 bytes)
Extracting: E:\isolinux\f2.txt (739 bytes)
Extracting: E:\isolinux\f3.txt (782 bytes)
Extracting: E:\isolinux\f4.txt (417 bytes)
Extracting: E:\isolinux\f5.txt (806 bytes)
Extracting: E:\isolinux\f6.txt (1.2 KB)
Extracting: E:\isolinux\f7.txt (916 bytes)
Extracting: E:\isolinux\f8.txt (1 KB)
Extracting: E:\isolinux\f9.txt (765 bytes)
Extracting: E:\isolinux\fa.tr (3.7 KB)
Extracting: E:\isolinux\fa_AF.tr (2.1 KB)
Extracting: E:\isolinux\ff.tr (2.1 KB)
Extracting: E:\isolinux\fi.hlp (7.0 KB)
Extracting: E:\isolinux\fi.tr (2.3 KB)
Extracting: E:\isolinux\fil.tr (2.5 KB)
Extracting: E:\isolinux\fo.tr (2.2 KB)
Extracting: E:\isolinux\fr.hlp (7.8 KB)
Extracting: E:\isolinux\fr.tr (2.5 KB)
Extracting: E:\isolinux\frp.tr (2.5 KB)
Extracting: E:\isolinux\fr_CA.tr (2.5 KB)
Extracting: E:\isolinux\fur.tr (2.2 KB)
Extracting: E:\isolinux\fy.tr (2.4 KB)
Extracting: E:\isolinux\ga.tr (2.5 KB)
Extracting: E:\isolinux\gd.tr (2.6 KB)
Extracting: E:\isolinux\gfxboot.c32 (10.1 KB)
Extracting: E:\isolinux\gfxboot.cfg (365 bytes)
Extracting: E:\isolinux\gl.hlp (7.4 KB)
Extracting: E:\isolinux\gl.tr (2.3 KB)
Extracting: E:\isolinux\gn.tr (2.1 KB)
Extracting: E:\isolinux\guc.tr (2.1 KB)
Extracting: E:\isolinux\gv.tr (2.4 KB)
Extracting: E:\isolinux\ha.tr (2.1 KB)
Extracting: E:\isolinux\haw.tr (2.1 KB)
Extracting: E:\isolinux\he.hlp (9.2 KB)
Extracting: E:\isolinux\he.tr (3.4 KB)
Extracting: E:\isolinux\hi.hlp (0 bytes)
Extracting: E:\isolinux\him.tr (2.1 KB)
Extracting: E:\isolinux\hr.tr (2.4 KB)
Extracting: E:\isolinux\hrx.tr (2.1 KB)
Extracting: E:\isolinux\hsb.tr (2.1 KB)
Extracting: E:\isolinux\ht.tr (2.1 KB)
Extracting: E:\isolinux\hu.hlp (7.6 KB)
Extracting: E:\isolinux\hu.tr (2.8 KB)
Extracting: E:\isolinux\hy.tr (4.1 KB)
Extracting: E:\isolinux\ia.tr (2.3 KB)
Extracting: E:\isolinux\id.hlp (6.9 KB)
Extracting: E:\isolinux\id.tr (2.1 KB)
Extracting: E:\isolinux\io.tr (2.1 KB)
Extracting: E:\isolinux\is.hlp (7.3 KB)
Extracting: E:\isolinux\is.tr (2.5 KB)
Extracting: E:\isolinux\isolinux.bin (38 KB)
Extracting: E:\isolinux\isolinux.cfg (179 bytes)
Extracting: E:\isolinux\it.hlp (7.0 KB)
Extracting: E:\isolinux\it.tr (2.3 KB)
Extracting: E:\isolinux\iu.tr (2.4 KB)
Extracting: E:\isolinux\ja.hlp (9.2 KB)
Extracting: E:\isolinux\ja.tr (3.5 KB)
Extracting: E:\isolinux\jbo.tr (3.3 KB)
Extracting: E:\isolinux\jv.tr (2.1 KB)
Extracting: E:\isolinux\ka.hlp (12.1 KB)
Extracting: E:\isolinux\ka.tr (5.3 KB)
Extracting: E:\isolinux\kab.tr (2 KB)
Extracting: E:\isolinux\kbd.tr (2.1 KB)
Extracting: E:\isolinux\kk.hlp (12.8 KB)
Extracting: E:\isolinux\kk.tr (4.1 KB)
Extracting: E:\isolinux\kl.tr (2.7 KB)
Extracting: E:\isolinux\km.hlp (18.2 KB)
Extracting: E:\isolinux\kn.tr (6.5 KB)
Extracting: E:\isolinux\ko.hlp (8.1 KB)
Extracting: E:\isolinux\ko.tr (2.8 KB)
Extracting: E:\isolinux\krc.tr (2.1 KB)
Extracting: E:\isolinux\ku.tr (2.5 KB)
Extracting: E:\isolinux\kw.tr (2.2 KB)
Extracting: E:\isolinux\ky.tr (3.7 KB)
Extracting: E:\isolinux\la.tr (2.2 KB)
Extracting: E:\isolinux\langlist (232 bytes)
Extracting: E:\isolinux\lb.tr (2.5 KB)
Extracting: E:\isolinux\ldlinux.c32 (116.4 KB)
Extracting: E:\isolinux\lg.tr (2.1 KB)
Extracting: E:\isolinux\li.tr (2.2 KB)
Extracting: E:\isolinux\libcom32.c32 (166.0 KB)
Extracting: E:\isolinux\libutil.c32 (22.1 KB)
Extracting: E:\isolinux\lld.tr (2.4 KB)
Extracting: E:\isolinux\ln.tr (2.5 KB)
Extracting: E:\isolinux\lo.tr (5.9 KB)
Extracting: E:\isolinux\lt.hlp (7.2 KB)
Extracting: E:\isolinux\lt.tr (2.5 KB)
Extracting: E:\isolinux\ltg.tr (2.4 KB)
Extracting: E:\isolinux\luo.tr (2.1 KB)
Extracting: E:\isolinux\lv.hlp (7.7 KB)
Extracting: E:\isolinux\lv.tr (2.5 KB)
Extracting: E:\isolinux\menu.cfg (437 bytes)
Extracting: E:\isolinux\mg.tr (2.7 KB)
Extracting: E:\isolinux\mhr.tr (3.6 KB)
Extracting: E:\isolinux\mi.tr (2.2 KB)
Extracting: E:\isolinux\miq.tr (2.1 KB)
Extracting: E:\isolinux\mk.tr (3.6 KB)
Extracting: E:\isolinux\mr.tr (6.4 KB)
Extracting: E:\isolinux\ms.tr (2.1 KB)
Extracting: E:\isolinux\mt.tr (2.1 KB)
Extracting: E:\isolinux\mus.tr (3.7 KB)
Extracting: E:\isolinux\nah.tr (2.1 KB)
Extracting: E:\isolinux\nan.tr (2.2 KB)
Extracting: E:\isolinux\nap.tr (2.1 KB)
Extracting: E:\isolinux\nb.hlp (6.8 KB)
Extracting: E:\isolinux\nb.tr (2.2 KB)
Extracting: E:\isolinux\nds.tr (2.3 KB)
Extracting: E:\isolinux\nl.hlp (7.0 KB)
Extracting: E:\isolinux\nl.tr (2.5 KB)
Extracting: E:\isolinux\nn.hlp (7 KB)
Extracting: E:\isolinux\nn.tr (2.2 KB)
Extracting: E:\isolinux\nso.tr (2.2 KB)
Extracting: E:\isolinux\ny.tr (2.4 KB)
Extracting: E:\isolinux\oc.tr (2.4 KB)
Extracting: E:\isolinux\oj.tr (2.1 KB)
Extracting: E:\isolinux\om.tr (2.1 KB)
Extracting: E:\isolinux\or.tr (2.2 KB)
Extracting: E:\isolinux\os.tr (3.2 KB)
Extracting: E:\isolinux\pam.tr (2.1 KB)
Extracting: E:\isolinux\pap.tr (2.3 KB)
Extracting: E:\isolinux\pl.hlp (7.4 KB)
Extracting: E:\isolinux\pl.tr (2.5 KB)
Extracting: E:\isolinux\pmy.tr (2.0 KB)
Extracting: E:\isolinux\prompt.cfg (176 bytes)
Extracting: E:\isolinux\ps.tr (2.1 KB)
Extracting: E:\isolinux\pt.hlp (7.4 KB)
Extracting: E:\isolinux\pt.tr (2.4 KB)
Extracting: E:\isolinux\pt_BR.hlp (7.3 KB)
Extracting: E:\isolinux\pt_BR.tr (2.5 KB)
Extracting: E:\isolinux\pt_PT.tr (2.2 KB)
Extracting: E:\isolinux\qu.tr (2.1 KB)
Extracting: E:\isolinux\ro.hlp (8.4 KB)
Extracting: E:\isolinux\ro.tr (2.5 KB)
Extracting: E:\isolinux\rom.tr (2.1 KB)
Extracting: E:\isolinux\rqtxt.cfg (135 bytes)
Extracting: E:\isolinux\ru.hlp (11.8 KB)
Extracting: E:\isolinux\ru.tr (4.1 KB)
Extracting: E:\isolinux\rw.tr (2.1 KB)
Extracting: E:\isolinux\sa.tr (2.7 KB)
Extracting: E:\isolinux\sc.tr (2.3 KB)
Extracting: E:\isolinux\sco.tr (2.1 KB)
Extracting: E:\isolinux\sd.tr (3.6 KB)
Extracting: E:\isolinux\se.tr (2.2 KB)
Extracting: E:\isolinux\shn.tr (6.6 KB)
Extracting: E:\isolinux\si.hlp (13.7 KB)
Extracting: E:\isolinux\si.tr (6.3 KB)
Extracting: E:\isolinux\sk.hlp (7.4 KB)
Extracting: E:\isolinux\sk.tr (2.7 KB)
Extracting: E:\isolinux\sl.hlp (6.8 KB)
Extracting: E:\isolinux\sl.tr (2.3 KB)
Extracting: E:\isolinux\sm.tr (2.1 KB)
Extracting: E:\isolinux\sml.tr (2.1 KB)
Extracting: E:\isolinux\sn.tr (2.3 KB)
Extracting: E:\isolinux\so.tr (2.2 KB)
Extracting: E:\isolinux\splash.pcx (25.2 KB)
Extracting: E:\isolinux\splash.png (12.2 KB)
Extracting: E:\isolinux\sq.hlp (7.8 KB)
Extracting: E:\isolinux\sq.tr (2.3 KB)
Extracting: E:\isolinux\sr.hlp (11.4 KB)
Extracting: E:\isolinux\sr.tr (4.3 KB)
Extracting: E:\isolinux\sr@ijekavianlatin.tr (2.1 KB)
Extracting: E:\isolinux\sr@latin.tr (2.1 KB)
Extracting: E:\isolinux\st.tr (2.1 KB)
Extracting: E:\isolinux\stdmenu.cfg (508 bytes)
Extracting: E:\isolinux\su.tr (2.1 KB)
Extracting: E:\isolinux\sv.hlp (7.1 KB)
Extracting: E:\isolinux\sv.tr (2.3 KB)
Extracting: E:\isolinux\sw.tr (2.2 KB)
Extracting: E:\isolinux\szl.tr (2.3 KB)
Extracting: E:\isolinux\ta_LK.tr (5.4 KB)
Extracting: E:\isolinux\te.tr (6.7 KB)
Extracting: E:\isolinux\tet.tr (2.1 KB)
Extracting: E:\isolinux\tg.tr (4 KB)
Extracting: E:\isolinux\th.hlp (12.8 KB)
Extracting: E:\isolinux\ti.tr (2.1 KB)
Extracting: E:\isolinux\tk.tr (2.1 KB)
Extracting: E:\isolinux\tl.tr (2.1 KB)
Extracting: E:\isolinux\tlh.tr (2 KB)
Extracting: E:\isolinux\tr.hlp (7.6 KB)
Extracting: E:\isolinux\tr.tr (2.4 KB)
Extracting: E:\isolinux\ts.tr (2.5 KB)
Extracting: E:\isolinux\tt.tr (4.1 KB)
Extracting: E:\isolinux\txt.cfg (613 bytes)
  Added 'persistent' kernel option
Extracting: E:\isolinux\ty.tr (2.1 KB)
Extracting: E:\isolinux\udm.tr (2.1 KB)
Extracting: E:\isolinux\ug.hlp (11.6 KB)
Extracting: E:\isolinux\uk.hlp (11.5 KB)
Extracting: E:\isolinux\uk.tr (4.2 KB)
Extracting: E:\isolinux\ur.tr (4.1 KB)
Extracting: E:\isolinux\uz.tr (2.7 KB)
Extracting: E:\isolinux\vec.tr (2.3 KB)
Extracting: E:\isolinux\vesamenu.c32 (26.1 KB)
Extracting: E:\isolinux\vi.hlp (9.5 KB)
Extracting: E:\isolinux\vi.tr (3.0 KB)
Extracting: E:\isolinux\wa.tr (2.2 KB)
Extracting: E:\isolinux\wae.tr (2.4 KB)
Extracting: E:\isolinux\wo.tr (2.1 KB)
Extracting: E:\isolinux\xh.tr (2.2 KB)
Extracting: E:\isolinux\yi.tr (2.1 KB)
Extracting: E:\isolinux\yo.tr (2.1 KB)
Extracting: E:\isolinux\zh_CN.hlp (6.1 KB)
Extracting: E:\isolinux\zh_CN.tr (2.2 KB)
Extracting: E:\isolinux\zh_HK.tr (2.4 KB)
Extracting: E:\isolinux\zh_TW.hlp (6.1 KB)
Extracting: E:\isolinux\zh_TW.tr (2.4 KB)
Extracting: E:\isolinux\zu.tr (2.1 KB)
Extracting: E:\isolinux\zza.tr (2.1 KB)
Extracting: E:\md5sum.txt (21.8 KB)
Extracting: E:\pics\blue-lowerleft.png (294 bytes)
Extracting: E:\pics\blue-lowerright.png (266 bytes)
Extracting: E:\pics\blue-upperleft.png (280 bytes)
Extracting: E:\pics\blue-upperright.png (290 bytes)
Extracting: E:\pics\debian.jpg (8.2 KB)
Extracting: E:\pics\logo-50.jpg (3.9 KB)
Extracting: E:\pics\red-lowerleft.png (353 bytes)
Extracting: E:\pics\red-lowerright.png (299 bytes)
Extracting: E:\pics\red-upperleft.png (321 bytes)
Extracting: E:\pics\red-upperright.png (344 bytes)
Extracting: E:\pool\main\e\efibootmgr\efibootmgr_15-1_amd64.deb (27.5 KB)
Extracting: E:\pool\main\g\grub2\grub-efi_2.04-1ubuntu12_amd64.deb (2.5 KB)
Extracting: E:\pool\main\g\grub2\grub-efi-amd64_2.04-1ubuntu12_amd64.deb (30.0 KB)
Extracting: E:\pool\main\g\grub2\grub-efi-amd64-bin_2.04-1ubuntu12_amd64.deb (684.7 KB)
Extracting: E:\pool\main\g\grub2\grub-efi-ia32_2.04-1ubuntu12_amd64.deb (30.0 KB)
Extracting: E:\pool\main\g\grub2\grub-efi-ia32-bin_2.04-1ubuntu12_amd64.deb (645.3 KB)
Extracting: E:\pool\main\g\grub2-signed\grub-efi-amd64-signed_1.128+2.04-1ubuntu12_amd64.deb (456.1 KB)
Extracting: E:\pool\main\l\lupin\lupin-support_0.57build1_amd64.deb (13.7 KB)
Extracting: E:\pool\main\m\make-dfsg\make_4.2.1-1.2_amd64.deb (158.5 KB)
Extracting: E:\pool\main\m\mouseemu\mouseemu_0.16-0ubuntu10_amd64.deb (16.2 KB)
Extracting: E:\pool\main\s\setserial\setserial_2.17-52_amd64.deb (35.1 KB)
Extracting: E:\pool\main\s\shim\shim_15+1533136590.3beb971-0ubuntu1_amd64.deb (561.2 KB)
Extracting: E:\pool\main\s\shim-signed\shim-signed_1.39+15+1533136590.3beb971-0ubuntu1_amd64.deb (335.4 KB)
Extracting: E:\pool\main\u\user-setup\user-setup_1.63ubuntu6_all.deb (134.5 KB)
Extracting: E:\pool\universe\c\caspar\caspar_20180315-2_all.deb (29.2 KB)
Extracting: E:\pool\universe\g\grub2\grub2_2.04-1ubuntu12_amd64.deb (2.5 KB)
Extracting: E:\preseed\cli.seed (212 bytes)
Extracting: E:\preseed\lubuntu.seed (353 bytes)
Extracting: E:\README.diskdefines (226 bytes)
Extracting: E:\ubuntu (0 bytes)
  Ignoring Rock Ridge symbolic link to '.'
Created: E:\syslinux.cfg → /isolinux/isolinux.cfg
Finalizing, please wait...
Created: E:autorun.inf
Created: E:autorun.ico

Found UAS (USB 3.0) device 'OCZ-AGIL ITY3 SCSI Disk Device' (174C:55AA)
Using autorun.inf label for drive E: 'Lubuntu 19.10 amd64'
Found non-USB removable device 'LITEONIT LMT-128M6M mSATA 128GB' => Eliminated
1 device found
Disk type: FIXED, Disk size: 60 GB, Sector size: 512 bytes
Cylinders: 7297, Tracks per cylinder: 255, Sectors per track: 63
Partition type: MBR, NB Partitions: 2
Disk ID: 0x000592E1
Drive has a Syslinux Master Boot Record
Partition 1:
  Type: FAT32 LBA (0x0c)
  Size: 1.9 GB (2039385600 bytes)
  Start Sector: 2048, Boot: Yes
Partition 2:
  Type: GNU/Linux (0x83)
  Size: 54.0 GB (57982030848 bytes)
  Start Sector: 3985223, Boot: No
```

﻿__This topic is flagged as INTERNAL and is therefore NOT open for comments.__

- [x] [fa8be68c54b324b231df32ee91b8d42b71932238] We're going to start to add the frigging Windows sub-build number in our version detection, because it's starting to become a bit difficult to tell Windows version apart (for instance there are two official 19H1 ISOs using Build 18363). How does `winver` gets the sub-build number?
- [ ] Use VDS for `GetDrivePartitionData()` and use this opportunity to call on `IVdsVolumeMF_GetFileSystemProperties()` to get the file systems. Or we might switch to using WMI as Microsoft advises and create our own C++ wmi library interface.
- [ ] Also we should use VDS to query data for label sanitization
- [ ] Detect if ReFS is available (e.g. Windows Pro Workstation vs Windows Pro) and only offer the option if it actually is.
- [ ] Are we losing our toolbar buttons as some people are reporting in Hiren's WinPE x64? &rarr; _Well the issue is that the buttons are there but the icons aren't displayed, most likely because the `ImageList` or `CreateIconFromResourceEx` function calls are broken on Hiren. Also it seems that the Hiren people screwed their users by using SSL libraries that can't handle recent TLS so you get the `This SSL library is too old` message..._
- [ ] Add a prompt about cycling port on `[0x00000015]`?
- [ ] I'm seeing triple screen on our protective GPT MBR notice on one machine. Should we replace the `hlt` in `gpt.S` with a loop?
- [ ] The FormatEx API appears to be very temperamental about formatting drives at times (e.g. GPT+NTFS with a fixed large drive), repeatedly throwing errors such as `Volume is in use`. Zeroing the drive tends to help, but is there something we could do about that?
- [ ] If we see a `Small FAT16 (0x00)` partition with a large size (typical of unpartitionned drives), we should probably not report it.
- [ ] Switching from GPT to MBR without cycling seems to be an issue (e.g. UEFI:NTFS &rarr; FreeDOS). What on earth does one need to do to get Windows to __actually__ refresh its layout?!?
- [ ] Add a separate checkbox to enable Fido?
- [ ] UI should be disabled during port cycle until we detect the cycled device again (with timeout in case the user yanked the device)
- [ ] Label changed by the user should not revert to ISO label once the drive has been created.
- [ ] Sometimes VDS can be super slow for no reason. &rarr; _This seems to happen when no drive letter has been assigned. Possibly VDS doesn't like that we exclusively lock the physical drive... Should we drop locking if we don't have any letters?_
- [ ] Add a note about `\efi\boot\bootx64.efi` not found in the FAQ?
- [ ] Create a new _"Surely DD mode should be default over ISO for ISOHybrid"_ FAQ entry.
- [x] ~~It's possible (using ImgBurn) to create dual UDF+ISO9660 images that fail when trying to open them as UDF with `Could not locate UDF root directory` (see `R-DriveImage-UDF-Fail.iso`)~~ &rarr; _Looks like an ImgBurn compliance issue with UDF as even 7-zip can't open a pure UDF image from ImgBurn anyway._
- [ ] Could we add a UEFI:NTFS-like second partition for BIOS-only bootable media, to warn UEFI users that they need to recreate it, like we do with the MBR bootloader for UEFI-only media?
- [x] [bf8d888b212cde450afcabeba9b0c2845d523223] I'm still seeing drive letters being dropped after creating flash drives. Do we have an actual issue here? &rarr; _This could have something to do with using `DefineDosDevice()` in `AltMountVolume()` when formatting `ext` partitions, as we're going to remove the letter when we we call AltUnmountVolume()`..._
- [ ] We probably want to look at drive locking and ext3, as we are most likely too lenient about this in 3.8.
- [x] [1b02181f74ca617f6cb261317954003379829db9] `Formatting: (null)` on slow format
- [ ] Maybe we should pick our ETA/Transfer speed code from WinSCP instead of `wget`...
- [ ] It'd be nice to have a better formatted message for UEFI-only BIOS warning message (using the second block for the message so we have more space?)
- [ ] Do we want to add the Linux Foundation Preloader to UEFI:NTFS for Secure Boot whiners? The problem is there only appears to exist an x64 version of it...
﻿<!--PLEASE READ THIS CAREFULLY: You *MUST* read and complete the checklist below, by placing an x into each [ ] (so that it shows '[x]', NOT '[ x]' or '[x ]'), BEFORE clicking on 'Submit new issue'. Failure to perform these steps, WHICH ARE ONLY THERE TO HELP *YOU*, will result in the issue being dismissed without warning.-->

Checklist
---------
- [x] I looked at https://github.com/pbatard/rufus/wiki/FAQ to see if my question has already been answered.
- [x] I performed a search in the issue tracker for similar issues using keywords relevant to my problem, such as the error message I got from the log.
- [x] I clicked the 'Log' button or pressed <kbd>Ctrl</kbd>-<kbd>L</kbd> in Rufus, and copy/pasted the log into the line that says `<FULL LOG>` below.
- [x] The log I am copying is the FULL log, starting with the line `Rufus version: x.y.z` - I have NOT removed any part of it.

Additionally (if applicable):
- [ ] I ran a bad blocks check, by clicking _Show advanced format options_ then _Check device for bad blocks_, and confirmed that my USB is not defective.
- [ ] I also tried one or more of the following:
  - [ ] Using a different USB drive.
  - [ ] Plugging the USB into a different port.
  - [ ] Running Rufus on a different computer.
- [ ] If using an image, I clicked on the `(✓)` button to compute the MD5, SHA1 and SHA256 checksums, which are therefore present in the log I copied. I confirmed, by performing an internet search, that these values match the ones from the official image.

Issue description
-----------------
Sometimes `grub.conf` has multiple `LABEL`s in single line something like
```
linuxefi /images/pxeboot/vmlinuz inst.stage2=hd:LABEL=CentOS\x207\x20x86_64 inst.ks=hd:LABEL=CentOS\x207\x20x86_64 acpi_osi="Linux" quiet
```
But the conversion code in iso.c converts LABEL once so the second LABEL doesn't get converted.
```
iso.c:
fix_config() -> replace_in_token_data()
```
Would it be possible to call `replace_in_token_data()` multiple times until nothing's converted?
Or any better solutions will be appreciated.

Thanks,
Soohoon.
Checklist
---------
- [x] I looked at https://github.com/pbatard/rufus/wiki/FAQ to see if my question has already been answered.
- [x] I performed a search in the issue tracker for similar issues, using keywords relevant to my problem.
---------

The speed comparison in your website and the README file are completely outdated. It would be a good idea considering Rufus had major changes since v1.1.0, that was 6 years ago.
Also the UNetbootin link redirects to the new official link, which is [https://unetbootin.github.io/](https://unetbootin.github.io/) and the versioning for their program appears to be different. Latest one is 661. According to properties the software is still v1.1.1.1 but for some reason they never changed that.
Also the windows link, loads the microsoft website, which tells you to download from codeplex, which redirects you to archive.codeplex which tells you the project is on a microsoft link. It would be better to just link the file download than going through several links.

- Test new Rufus release (v3.0)
- Update UNetbootin link with the newer one. https://unetbootin.github.io
- Test newer release of UNetbootin (661)
- Update Windows link. https://www.microsoft.com/en-us/download/details.aspx?id=56485
- Test with Windows 10, Ubuntu 18.04, and any other OS that seems relevant (Maybe BSD one)
This could go something like this:
- User would create a text file with the same name as the ISO but with a specific extension. For instance, if you use `en_windows_8_1_x64_dvd_2707217.iso` you would create a `en_windows_8_1_x64_dvd_2707217.ruf` or something in the same directory
- The `.ruf` file would contain simple commands like:

```
d /sources/cversion.ini
r /sources/boot.wim C:/mydir/myboot.wim
i C:/mydir/EI.cfg /sources/EI.cfg
```

to `d`elete, `r`eplace or `i`nsert a file onto the target USB during ISO extraction. 

First of all- thank you for a great utility!

Does Rufus support command line argument?  So that you can specify an ISO when starting Rufus. Something like...

```
rufus.exe /iso=win7.iso
```

If not, would you consider adding that feature?

Thank you for your time.

Best regards,
Bob

Such as the one from DOSUSB ISO, as well a regular DOS ISO data.
Basically, this would copy what are expected to be DOS files to a DOS bootable USB.
We may also want to handle pure image executables such as the ones used on Memtest86+ ISOs, through Syslinux's image load or something...

Might also be able to use something similar to [this](https://userpages.uni-koblenz.de/~krienke/ftp/noarch/geteltorito/geteltorito/geteltorito.pl) script:
<details>
<summary>geteltorito.pl</summary>

```
#!/usr/bin/perl

use Getopt::Std;

#
# geteltorito.pl: a bootimage extractor
# Script that will extract the first El Torito bootimage from a
# bootable CD image
# R. Krienke 08/2001
# krienke@uni-koblenz.de
# License: GPL
#
# Get latest version from:
# http://userpages.uni-koblenz.de/~krienke/ftp/noarch/geteltorito
#
$utilVersion="0.6"; 
#
# Version 0.6
#    2015/02/25
#    I included a patch by Daniel Kekez, daniel.kekez@utoronto.ca to make geteltorito
#    better compatible with windows:
#       "To run this Perl script using using Strawberry Perl under Windows, I
#       found it was necessary to explicitly open the files in binary mode since
#       Windows will default to text mode when open() is called."
# Version 0.5
#    2009/06/22
#    A patch for harddisk emulation images from <colimit@gmail.com>.
#    For BootMediaType=4 (harddisk emulation) SectorCount is always 1, and geteltorito.pl
#    returns just MBR. This patch guesses the correct bootimage size
#    from MBR (offset+size of the first partitition).
# Version 0.4
#    2007/02/01
#    A patch from Santiago Garcia <manty@debian.org> to use a virtual sector
#    size (vSecSize) of 512 bytes, as defined on "El Torito" specs and change
#    unpack of the sector count from n to v to get the correct sector count.
# Version 0.3
#    2006/02/21
#    A patch from  Ben Collins <bcollins@ubuntu.com> to make the 
#    utility work on PPC machines (change from 'L'-encoding in pack to 'V')
# Version 0.2
#    Several patches included from Nathan Stratton Treadway(nathant@ontko.com)
#    to adjust the platform output as well as fixes for other minor bugs
# Version 0.1
#    Initial release
#
# For information on El Torito see 
# http://en.wikipedia.org/wiki/El_torito

$vSecSize=512;
$secSize=2048;
$ret=undef;$version=undef;$opt_h=undef;$loadSegment=undef;$systemType=undef;

#
# Read a particular sector from a file
# sector counting starts at 0, not 1
#
sub getSector{
   my ($secNum, $secCount, $file)=@_;
   my ($sec, $count);

   open(FILE, "<:raw", $file) || die "Cannot open \"$file\" \n";

   seek(FILE, $secNum*$secSize, 0);
   $count=read(FILE, $sec, $vSecSize*$secCount, 0) ;
   if( $count != $vSecSize*$secCount ){
       warn "Error reading from file \"$file\"\n";
   }
   close(FILE);

   return($sec);
}


#
# Write eltorito data into a file
#
sub writeOutputFile{
   my($name)=shift;
   my($value)=shift;

   open(OUT, ">:raw", $name)|| die "$0: Cannot open outputfile \"$name\" for writing. Stop.";
   print OUT $value;
   close(OUT);
}


#
# Usage
#
sub usage{
	warn "\n$0 [-hv] [-o outputfilename] cd-image \n",
	    "Script will try to extract an El Torito image from a \n",
	    "bootable CD (or cd-image) given by <cd-image> and write \n",
	    "the data extracted to STDOUT or to a file.\n",
	    "   -h:        This help. \n",
	    "   -v:        Print version of script and exit.\n",
	    "   -o <file>: Write extracted data to file <file> instead of STDOUT.\n",
	    "\n\n";
	exit 0;    
}


# ---------------------------------------------------------------------
$ret=getopts('hvo:');
 
if( defined($opt_v) ){
 	warn "Version: $utilVersion \n";
	exit 0;
}

if( defined($opt_h) || $#ARGV <0 ){
         usage(0);
}	 

if( defined($opt_o) ){
   $outputFilename="$opt_o";
}
	 
$imageFile=$ARGV[0];

if( ! -r $imageFile ){
	die "Cannot read image/device \"$imageFile\". Aborting\n";
}

#
# Read Sector 17 from CD which should contain a Boot Record Volume
# descriptor. This descriptor contains at its start the text ($isoIdent)
# CD001     and ($toritoSpec)
# EL TORITO SPECIFICATION
# see http://www.cdpage.com/Compact_Disc_Variations/eltoritoi.html
# for details
#

$sector=getSector(17, 1, $imageFile );
($boot, $isoIdent, $version, $toritoSpec,
 	$unUsed, $bootP)= unpack( "Ca5CA32A32V", $sector );

if( $isoIdent ne "CD001" || $toritoSpec ne "EL TORITO SPECIFICATION" ){
	die "This data image does not seem to be a bootable CD-image\n";
}	

#
# Now fetch the sector of the booting catalog 
#
$sector=getSector($bootP, 1, $imageFile );

print STDERR "Booting catalog starts at sector: $bootP \n";

# The first 32 bytes of this sector contains the validation entry for a
# boot. The first byte has to be 01, the next byte determines the
# architecture the image is designed for, where 00 is i86, 01 is PowerPC
# and 02 is Mac. More data give info about manufacturer, etc.  The 
# final two bytes must contain 0x55 and 0xAA respectively (as 
# defined by the El Torito standard).

$validateEntry=substr($sector, 0, 32);

($header, $platform, $unUsed, $manufact, $unUsed, $five, $aa)=
               unpack( "CCvA24vCC", $validateEntry);

if( $header != 1 || $five != 0x55 || $aa != 0xaa ){
	die "Invalid Validation Entry on image \n";
}

print STDERR "Manufacturer of CD: $manufact\n";
print STDERR "Image architecture: ";
print STDERR "x86" if( $platform == 0 );
print STDERR "PowerPC" if( $platform == 1 );
print STDERR "Mac" if( $platform == 2 );
print STDERR "unknown ($platform)" if( $platform > 2 );
print STDERR "\n";

#
# Now we examine the initial/defaultentry which follows the validate
# entry and has a size of 32 bytes. 

$initialEntry=substr($sector, 32, 32);

($boot, $media, $loadSegment, $systemType, $unUsed, 
       $sCount, $imgStart, $unUsed)=unpack( "CCvCCvVC", $initialEntry);

if( $boot != 0x88 ){
	die "Boot indicator in Initial/Default-Entry is not 0x88. CD is not bootable. \n";
}    

print STDERR "Boot media type is: ";
if( $media == 0 ){
	print STDERR "no emulation";
	$count=0;
}
if( $media == 1 ){
	print STDERR "1.2meg floppy";
        $count=1200*1024/$vSecSize;  
}
if( $media == 2 ){
	print STDERR "1.44meg floppy";
        $count=1440*1024/$vSecSize;  
}
if( $media == 3 ){
	print STDERR "2.88meg floppy";
        $count=2880*1024/$vSecSize;  
}
if( $media == 4 ){
	print STDERR "harddisk";
	$MBR=getSector($imgStart, 1, $imageFile );
	$partition1=substr($MBR, 446, 16);
	($unUsed, $firstSector, $partitionSize) = unpack( "A8VV", $partition1);
	$count=$firstSector + $partitionSize;
}
print STDERR "\n";

# Only use the internal sector counter if the real size is unknown
# ($count==0)
$cnt=$count==0?$sCount:$count;

print STDERR "El Torito image starts at sector $imgStart and has $cnt sector(s) of $vSecSize Bytes\n";

# We are there:
# Now read the bootimage to stdout
$image=getSector($imgStart, $cnt, $imageFile);

if( length($outputFilename) ){
   writeOutputFile($outputFilename, $image);
   print STDERR "\nImage has been written to file \"$outputFilename\".\n";
}else{
   print "$image";
   print STDERR "Image has been written to stdout ....\n"; 
}
```
</details>

Might also want to look at the EFI Lenovo BIOS update images, which 7-zip has trouble to extract, such as `Lenovo BIOS Update n1eur34w.iso`...
