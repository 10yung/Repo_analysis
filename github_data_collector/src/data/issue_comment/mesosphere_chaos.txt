Hi,

I am trying to use Chronos, which depends on this particular project. Can you upload this artifact to Maven Central instead of using a proprietary Maven repo ?
After get rid of Guice DI, you replace `JacksonMessageBodyProvider`by `JsonProvider`, but the mapper of it only register `DefaultScalaModule`, so, how to register customized **restMapper** in `RestModule`/`HttpModule`?


Ideally this would support a standard [apache htpasswd style](https://httpd.apache.org/docs/2.4/programs/htpasswd.html) file, which would also add the benefit of allowing multiple different user/password combinations to access the webapp such as marathon.

Try out the [MacWire](https://github.com/adamw/macwire) for wiring. Also add some actor and AOP examples.

The mesosphere marathon package for redhat logs via logger, which gets hoovered up into the systemd journal on RHEL/CentOS 7 or Fedora. It would be really nice to instead send this to a specific file in addition to the systemd journal.

Since marathon uses this library to do logging, the issue seems to be here and not in marathon directly. I've added this systemd service as a stopgap so we can use splunk to read marathon logs:

``` bash
[Unit]
Description=Hack to log marathon logs to a file
After=network-online.target
Wants=network.target

[Service]
ExecStart=/bin/bash -c "/usr/bin/journalctl --quiet -lfu marathon >> /var/log/marathon/marathon.log"
Restart=always
RestartSec=1

[Install]
WantedBy=multi-user.target
```

And I've added `Requires=marathon-logger.service` to the marathon systemd unit to start `marathon-logger` on demand. Would it be possible to have chaos, and as a nice side effect, marathon support something like:

`--log_level=info --log_file=/var/log/marathon/marathon.log`

A simple logrotate config like this could be used so that chaos wouldn't natively need to rotate any logs:

``` bash
/var/log/marathon/*.log {
    daily
    compress
    missingok
    rotate 30
    notifempty
    copytruncate
    delaycompress
}
```

hope to support the oauth2 

please update the new version of readme

All Marathon instances currently proxy to the current leader. Marathon uses its own proxy implementation with various issues.

Jetty 9 includes support for proxying. Thus it would probably make sense to upgrade to Jetty 9 to benefit from this functionality.

Since this is functionality which would be useful to frameworks other than Marathon, I would include the proxy artifact in Chaos, potentially even some utility support to provide proxying to another host dynamically.

It would be nice if we could document which steps are necessary to publish a new release.

E.g.:
- Bumping up versions in version.sbt
- Creating tags
- Testing certain essentials
- Running a team city task

Whatever is necessary.
