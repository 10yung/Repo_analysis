the syntax `$var{$i}`is deprecated:

```
PHP Deprecated:  Array and string offset access syntax with curly braces is deprecated in ./src/ForceUTF8/Encoding.php on line 196
```
this is a small improvement, but using this function in a loop with large texts it is an improvement
Reproduce with:
php php-cs-fixer --rules=native_function_invocation fix ./ --allow-risky=yes
(php-cs-fixer from : https://cs.symfony.com/)

Details:
https://veewee.github.io/blog/optimizing-php-performance-by-fq-function-calls/
PHP 7.4 [deprecates](https://wiki.php.net/rfc/deprecate_curly_braces_array_access) the usage of curly braces for array/string access.

ForceUTF8 uses curly braces in the [`toUTF8()`](https://github.com/neitanod/forceutf8/blob/c4222087168fe8476bde930e2ad04d111f36f53b/src/ForceUTF8/Encoding.php#L196-L200) method.

Running the [test script](https://github.com/neitanod/forceutf8/blob/master/test/ForceUTF8Test.php) with PHP 7.4.0RC4 and full error reporting enabled shows multiple deprecation warnings:

``` shell script
PHP_VERSION=7.4.0RC4-cli ; docker run --tty --rm \
--name "$PHP_VERSION" \
-v "$PWD":"/usr/src/php-$PHP_VERSION" \
-w "/usr/src/php-$PHP_VERSION" \
"php:$PHP_VERSION" \
php -d error_reporting=E_ALL test/ForceUTF8Test.php

Deprecated: Array and string offset access syntax with curly braces is deprecated in /usr/src/php-7.4.0RC4-cli/src/ForceUTF8/Encoding.php on line 196

Deprecated: Array and string offset access syntax with curly braces is deprecated in /usr/src/php-7.4.0RC4-cli/src/ForceUTF8/Encoding.php on line 198

Deprecated: Array and string offset access syntax with curly braces is deprecated in /usr/src/php-7.4.0RC4-cli/src/ForceUTF8/Encoding.php on line 199

Deprecated: Array and string offset access syntax with curly braces is deprecated in /usr/src/php-7.4.0RC4-cli/src/ForceUTF8/Encoding.php on line 200
.................
17 tests passed.
0 tests failed.
```

This pull request changes all occurrences to square brackets.

I am having an issue with  where a curly apostrophe is being converted as a ?

    you’ll

converts to 

    you?ll

Any ideas on how to fix this?
Hi there,

This looks really useful. How about hosting it on a website where people can upload their garbled text and have it fixed? This would allow for not having to setup PHP to run the code, and you could get even more bitcoin tips :)
I have 2 files :
  File has one row with : magn�sienne
  Second file has one row with magn�sienne
The results for one document is :  
    magnésienne
For other : 
    magn?sienne
Implimentation : 
$return[] = $this->utf8Encoding($row);

private function utf8Encoding($datas)
{
    foreach ($datas as $key => $data) {
        $datas[$key]  = Encoding::fixUTF8($data);
    }
    return $datas;
}
Have you an idea ? Thx in advance
Hello,
It does not work with UTF16 source encoding.
How to solve this ? (very hard task)
Thanks
Best regards
