# 推荐收录

## 链接

https://mp.weixin.qq.com/s/UQksScr_LZ1n7wLAVjzEMg
https://mp.weixin.qq.com/s/KHvWSsvKNxJq9IwAsZu4qw

## 理由

通过学习Swift Intermediate Language，理解Swift的语法特性和编译器内部语言的实现细节，解决开发过程中遇到的实际问题，解答一些表面上似懂非懂的困惑


# 推荐收录

## 链接

[High performance systems in Swift - Johannes Weiss](https://www.dotconferences.com/2019/01/johannes-weiss-high-performance-systems-in-swift)

## 理由

演讲者分享了他在 Swift-NIO 开发时的一些经验，在选择 class 和 struct 时，Swift 社区有一个普遍的共识是 struct 绝大部分情况下比 class 好，能用 struct 就用 struct。

但实际在 Swift-NIO 的 benchmark 里[这件事情并不成立](https://github.com/apple/swift-nio/pull/351)，将 [HTTPRequestHeader](https://github.com/apple/swift-nio/blob/f44fe0b2042924e3f0392febd8716bbcfc8f36a6/Sources/NIOHTTP1/HTTPTypes.swift#L39) 这个 struct 直接改成 class 之后，性能竟然比之前提升了 4 倍，并且内存占用也变得更低，他在演讲里很详细的分析了两种方式在运行时的内存分配过程，大家有兴趣的话可以去看。

所以这就是结论？class 性能比 struct 好？这件事情还没有结束，用 class 意味着 `HTTPRequestHeader` 这个类型失去了值语义，写 Swift 的人都能懂这是多么重要的一个保证，这意味着你对于一个实例的独占，你对于这个实例的任何 Mutation 都不会导致其它地方发生问题。

想要保持值语义的同时使用 class？使用 Copy-On-Write(COW) 就可以达到这个目的，Swift-NIO 最终也是这么做的，但这并不意味着 COW 就是最好的，**只有在特定的使用场景下，class 才会比 struct 性能更好**，所以 Swift-NIO 里只有三个类型使用了 COW 进行实现。

最后他提到 **struct 和 class 的选择其实跟性能无关，只跟我们想要表达的语义有关**，如果遇上了 class 比 struct 更好的场景，那再用 COW 把这些性能相关的细节封装在内部即可，保持 API 兼容的同时还能得到更好的性能。

PS：[SwiftFormat](https://github.com/nicklockwood/SwiftFormat) 的作者 Nick 最近也在 Twitter 上分享了[类似的优化经验](https://twitter.com/nicklockwood/status/1217373239640580097)以及相关的原理分析，也是推荐一读。
# 推荐收录

## 链接

https://www.jianshu.com/p/1369508e477d
# 推荐收录

## 链接

https://engineering.nodesagency.com/categories/ios/2019/12/31/How-to-make-an-Augmented-Reality-decorating-experience-app-with-AR-Quick-Look

## 理由

[此处填写您的推荐理由]

## 推荐人信息

如果收录这个资源，我们会在点评后面说明推荐信息人。
# 推荐收录

## 链接

https://pspdfkit.com/blog/2018/binary-frameworks-swift/
# 推荐收录

## 链接

https://nshipster.com/at-compiler-directives/
# 推荐收录

SwiftUI 官方英文教程译文

## 链接

https://github.com/WillieWangWei/SwiftUI-Tutorials

## 理由

SwfitUI 已经公布半年了，开始逐渐有大批开发者尝试学习和使用。此项目翻译了共十篇官方的 SwfitUI 教程，在保留官方的文字内容、配图、代码外，还进行了细微的优化。

这个项目旨在帮助更多开发者迅速入门，快速使用 SwfitUI 进行开发，并共同解决实际遇到的问题，同时推进 SwfitUI 和 Combine 两大框架在国内的传播，让 iOS 开发更加简洁、现代化。

## 推荐人信息

[@Willie](https://github.com/WillieWangWei)
https://github.com/stephanemoore/archives/blob/master/objc/tips/api-reviews.md

考虑翻译一下
