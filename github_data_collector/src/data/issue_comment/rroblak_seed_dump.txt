
Fixes #143 and should be backwards compatible.

Mocking the zeitwerk loader is beyond my capabilities - I tried to use the existing helper in the specs as a starting point but failed pretty miserably. To get specs back to green I'll need some help on that front. The specs should remain green for 5.2 and below with my latest changes but without changes to the mocking of the autoloader are broken in rails 6+
Can't get seed dump to edit the seeds.rb file. 
Using "rake db:seed:dump LIMIT=10" creates a dump with 10 records for every model.

Suppose there are two models Student and Teacher,
Teacher has_many Students, 1 teacher have 100 students, 
so there are 10 Teachers but Students data must be more than 10 to be completely associated.

 
When using activerecord-import gem, running callbacks and validations are not desired.
Dear,

I tried to run `rake db:seed:dump` in windows, but it threw exception 
`/c/Ruby25-x64/bin/rake: line 4: {#: command not found`

I already run 
```
$ gem install seed_dump
Fetching: seed_dump-3.3.1.gem (100%)
Successfully installed seed_dump-3.3.1
```

My working environment :

- OS : Windows
- Rails : 5.2.1
- Ruby: 2.5
- Gem: 2.7.6


Many thanks


I encountered an issue with one table of my database : duplicates.
For example if the table was 100 entities, i had 100 entities to import but with duplicates, meaning there were some entities lost in the process.
After investigation i realised those entities were duplicated because of the order method wasn't working, breaking in the same time the batching algorithm.

That's why i forked the project and replaced line 8 in enumeration.rb :
`records.order("#{records.quoted_table_name}.#{records.quoted_primary_key} ASC") ` 
by
` records = records.order(records.primary_key => :asc)`

I hope this helps someone
Hello,

I am trying your excellent component

I am using it in an Alchemy_CMS web app with a local Postgres db

The db has a lot of tables and a lot of them have records in it

The rake task creates a dump file with only the contents of a single model, "Alchemy::User"

If I use the MODELS param then it returns this model...

I think that this strange behaviour started after I used for the first time the MODELS param with contents "Alchemy::User"... after that when I do not use the MODEL  param I get always the "Alchemy::User" model dumped...

Please advise...

Thank you
Any plans to support Sequel ORM (https://github.com/jeremyevans/sequel)?
Was embedding tmpdir (a randomly generated folder on some machines) twice, which then didn't exist: 

```
  1) SeedDump.dump with file option should dump the models to the specified file
     Got 0 failures and 2 other errors:

     1.1) Failure/Error: @filename = Tempfile.new(File.join(Dir.tmpdir, 'foo'), nil)
          
          Errno::ENOENT:
            No such file or directory @ rb_sysopen - /var/folders/yh/RANDOMNESS/T/var/folders/yh/RANDOMNESS/T/foo20180522-6029-7061cr
          # ./spec/dump_methods_spec.rb:33:in `new'
          # ./spec/dump_methods_spec.rb:33:in `block (4 levels) in <top (required)>'

     1.2) Failure/Error: File.unlink(@filename)
          
          TypeError:
            no implicit conversion of nil into String
          # ./spec/dump_methods_spec.rb:37:in `unlink'
          # ./spec/dump_methods_spec.rb:37:in `block (4 levels) in <top (required)>'
```