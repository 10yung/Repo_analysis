I'm using AForge.Video.DirectShow version 2.2.5 from NuGet. I have a Logitech HD Webcam C615 connected on a Windows 10 machine.

If I compile the main project as a x86 app, everything works fine. If I compile the main project as a x64 app, the following works normally,

1. ```new FilterInfoCollection(FilterCategory.VideoInputDevice)``` returns all connected webcams.
2. ```new VideoCaptureDevice()``` created the object correctly. All public properties seems right, including ```VideoCapabilities```.

Calling the ```Start()``` method of a ```VideoCaptureDevice``` object will change its ```IsRunning``` property to ```True```, but it does not trigger the ```NewFrame``` event.


Can someone supply me with x64 version.I can't find any x64 dll  on the internet
I choose x64 ,but aforge goes wrong
Not all errors where detected during an ErrorAbort "Event".
This additional ErrorCodes should contain all missing codes.
The main issue was that the user did not get a video feed and no error why.
I am using AForge to detect rectangles on image and the method shapeChecker.IsQuadrilateral throws System.ArgumentOutOfRangeException.
I tracked the execution and it looks like the exception happens in method FindQuadrilateralCorners of class PointsCloud.
Specifically at this part of the code:

```C#
// sort other points in counter clockwise order
            float k1 = ( corners[1].X != corners[0].X ) ?
                ( (float) ( corners[1].Y - corners[0].Y ) / ( corners[1].X - corners[0].X ) ) :
                ( ( corners[1].Y > corners[0].Y ) ? float.PositiveInfinity : float.NegativeInfinity );

            float k2 = ( corners[2].X != corners[0].X ) ?
                ( (float) ( corners[2].Y - corners[0].Y ) / ( corners[2].X - corners[0].X ) ) :
                ( ( corners[2].Y > corners[0].Y ) ? float.PositiveInfinity : float.NegativeInfinity );
``` 

where it looks like the corners array has only two elements.
As in photo:
![capture](https://user-images.githubusercontent.com/22299171/53766741-f0c56280-3ed3-11e9-9806-22dac1f5d4fc.PNG)

Hi, @stefan-j @craigmillard @anders9ustafsson @andrewkirillov 

Radon & inverse Radon Transfrom is not yet?

In Aforge.net, I cannot find the radon transform. --;

Please insert this function for all medical imaging developers !!

Thanks in advance ~
I hope this library works with windows 7 OS too. Is there any way to find out if the issue  is with the device used for capturing
In the AVIWriter.AddFrame and AVIReader.GetNextFrame methods, converting the IntPtr's to ints to do math and perform a memcpy caused an ArithmeticOverflowException on 64-bit systems. I modified it to perform the math and the copy directly with the IntPtr's and not throw exceptions.
Hello,

I've tried to install the package in a Xamarin Android project, but I get the following error: 

> Package AForge 2.2.5 is not compatible with monoandroid81
> (MonoAndroid,Version=v8.1).

After having described the problem on [Stack ](https://stackoverflow.com/questions/50905545/xamarin-android-package-xx-is-not-compatible-with-monoandroid81-monoandroid-ve) and Xamarin [forum](https://forums.xamarin.com/discussion/128176/xamarin-android-package-xx-is-not-compatible-with-monoandroid81-monoandroid-version-v8-1/p1?new=1), it seems that the problem comes from the new PackageReference.

Could you update your package?


Cause m_framerate is int, VideoFileReader returns an inaccurate frame rate.
In VideoFileReader.cpp
`int m_frameRate = data->VideoStream->r_frame_rate.num / data->VideoStream->r_frame_rate.den;`
Though actual frame rate is 29.97, VideoFileReader.FrameRate returns 29 not 30.