
Thanks for writing this. Wondering if you've considered using block callbacks instead of delegate pattern?   It would allow the completion handling code to live near where the alerts are shown instead of being handled in a separate method (that might include a large switch statement if you're showing lots of alerts in a single view). I'd be happy to submit a PR if you're interested in exploring further. 

The Fabric has a record of issue:

<pre><code>
iPhone5, iOS9.3.1
Crashed: com.apple.main-thread
EXC_BAD_ACCESS KERN_INVALID_ADDRESS 0x00000000a1b06cf5
Thread : Crashed: com.apple.main-thread
0  libobjc.A.dylib                0x2136ba86 objc_msgSend + 5
1  Foundation                     0x222f779d -[NSObject(NSKeyValueObserverNotification) willChangeValueForKey:] + 276
2  QuartzCore                     0x241e1251 CA::Layer::set_delegate(objc_object*) + 112
3  UIKit                          0x26174d95 -[UIView _createLayerWithFrame:] + 592
4  UIKit                          0x261746e5 UIViewCommonInitWithFrame + 852
5  UIKit                          0x26174317 -[UIView initWithFrame:] + 130
6  UIKit                          0x2617bc61 -[UILabel initWithFrame:] + 56
7  MyApp                  0xcf6af -[RKDropdownAlert initWithFrame:] (RKDropdownAlert.m:56)
8  MyApp                  0xcfc77 +[RKDropdownAlert alertView] (RKDropdownAlert.m:135)
9  MyApp                  0xcffab +[RKDropdownAlert title:message:] (RKDropdownAlert.m:174)
10 MyApp                  0x74847 -[ZZFileViewController p_refreshByConnectStatus] (ZZFileViewController.m:1186)
11 CoreFoundation                 0x21b53345 __CFNOTIFICATIONCENTER_IS_CALLING_OUT_TO_AN_OBSERVER__ + 12
12 CoreFoundation                 0x21b52d53 _CFXRegistrationPost + 398
13 CoreFoundation                 0x21b52b29 ___CFXNotificationPost_block_invoke + 40
14 CoreFoundation                 0x21ba9f63 -[_CFXNotificationRegistrar find:object:observer:enumerator:] + 1334
15 CoreFoundation                 0x21ab20eb _CFXNotificationPost + 486
16 Foundation                     0x222f7b17 -[NSNotificationCenter postNotificationName:object:userInfo:] + 70
17 UIKit                          0x261fa873 -[UIApplication _stopDeactivatingForReason:] + 1150
18 UIKit                          0x26413b39 __62-[UIApplication _sceneSettingsPostLifecycleEventDiffInspector]_block_invoke1180 + 104
19 FrontBoardServices             0x232621a3 __52-[FBSSettingsDiffInspector inspectDiff:withContext:]_block_invoke27 + 158
20 Foundation                     0x22397e23 __NSIndexSetEnumerate + 430
21 Foundation                     0x223230f7 -[NSIndexSet enumerateIndexesWithOptions:usingBlock:] + 66
22 BaseBoard                      0x231f6d17 -[BSSettingsDiff inspectChangesWithBlock:] + 102
23 FrontBoardServices             0x2325dbe7 -[FBSSettingsDiff inspectOtherChangesWithBlock:] + 94
24 FrontBoardServices             0x2326200f -[FBSSettingsDiffInspector inspectDiff:withContext:] + 310
25 UIKit                          0x264142cf __70-[UIApplication scene:didUpdateWithDiff:transitionContext:completion:]_block_invoke + 170
26 UIKit                          0x26413f99 -[UIApplication scene:didUpdateWithDiff:transitionContext:completion:] + 644
27 FrontBoardServices             0x23254c29 __80-[FBSSceneImpl updater:didUpdateSettings:withDiff:transitionContext:completion:]_block_invoke_2 + 40
28 FrontBoardServices             0x2326fbf7 __FBSSERIALQUEUE_IS_CALLING_OUT_TO_A_BLOCK__ + 18
29 FrontBoardServices             0x2326faa7 -[FBSSerialQueue _performNext] + 226
30 FrontBoardServices             0x2326fda5 -[FBSSerialQueue _performNextFromRunLoopSource] + 44
31 CoreFoundation                 0x21b63a67 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 14
32 CoreFoundation                 0x21b63657 __CFRunLoopDoSources0 + 454
33 CoreFoundation                 0x21b619bf __CFRunLoopRun + 806
34 CoreFoundation                 0x21ab0289 CFRunLoopRunSpecific + 516
35 CoreFoundation                 0x21ab007d CFRunLoopRunInMode + 108
36 GraphicsServices               0x230ccaf9 GSEventRunModal + 160
37 UIKit                          0x261db2c5 UIApplicationMain + 144
38 FlashairShare                  0x8abcf main (main.m:14)
39 libdispatch.dylib              0x2175c873 (Missing)
</code></pre>


I check the code, and find it just calls:
<code>[RKDropdownAlert title:alertTitle message:alertMsg];</code>
Both the strings are not nil as using `NSLocalizedString`.  
The Project is using ARC and I have no idea about this  `EXC_BAD_ACCESS`.
Could you find something from the crash log?



I seem to have a small bug where I have to tap the dropdown alert twice to dismiss that.

Is there a reason for that?

My code is simply : 

[RKDropdownAlert title:message];

Please support [Carthage](https://github.com/Carthage/Carthage). You just need to share the build scheme and push it. Thanks!

+(void)title:(NSString_)title backgroundColor:(UIColor_)backgroundColor textColor:(UIColor*)textColor time:(NSInteger)seconds;

I want to use faster or more precise timing for this. How about making another method which takes Float as a parameter?

I could have done this and sent a pull request but I haven't been using obj-c for a long time. If no one does it I still might.

If the device is in portrait and the orientation is changed to landscape while the alert is displayed the view is not resized to fit the whole width.

Hey, 

could you maybe add a (optional) close button to the right of the notification, or a swipe gesture similar to normal notifications in iOS, to dismiss the notification, without toggling the action related to the `viewWasTapped`?

Thanks!
