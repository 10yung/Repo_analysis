Hi,
It would be a great amelioration if you could select multiple time slots. It makes live much easier to select multiple slots instead of reserving each slots separately.
.
Fix issue #687 And Spanish translation.
Hi!
1 error: When the provider try to modify the appointment from the link's mail the provider field not autofill and not appear in the list, you have to change the service and return to the first one to get the provider.

2 error: When the appointment is modified by the provider his mail subject is $lang['appointment_details_changed'] and the client subject $lang['appointment_changes_saved'], it should be the opposite.

Sorry for my English!

This project is absolutely amazing - it would however be cool if it could be used in a completely portable fashion, say embedded in an HTML wiki, on a thumb-drive...

SQLite to the rescue?
If you're interested I would be glad to help!

Just a thought of mine - thx for all the hard work :D
It's mess but this is the idea.
In the "generate_random_string()" function, that is in the "general_helper.php" file, rand function does not good for generate random password and maybe create duplicate password. 
**It's better to use random_int(),random_bytes(), or openssl_random_pseudo_bytes() instead.**

https://www.php.net/manual/en/function.rand.php
My implementation is according to https://stripe.com/docs/payments/accept-a-payment
Don't forget to: composer require stripe/stripe-php

[easyappointments.zip](https://github.com/alextselegidis/easyappointments/files/3848498/easyappointments.zip)

Due to a known incompatibility between jQuery and older iOS browsers (e.g. iOS 10.3) the  language switch of the footer may fail to recognize tap/click events. This PR fixes the issue. In the absence of an old device, you may reproduce the bug and test the fix using the Xcode simulator.


The list of languages does pop up but the individual languages are not clickable.

You may reproduce this on a Mac by downloading, for instance, an iPad Air simulator running iOS 10.3.1.
Load the frontend in the primary language of the client's browser, unless the end-user has overridden it using the language control of the footer.

Automatic detection will be overridden if a user's manual language selection has been saved in the session cookie.

Note that this implementation does not discriminate between languages classified, for better or worse, as variants. It does not distinguish German from Luxembourgish, for instance, whose RFC codes are `de` and `de-lu` respectively. I opted for this compromise because its implementation is contained within a few lines of code. Considering the flexibility of the [IETF/BCP language-tag scheme](https://tools.ietf.org/html/bcp47#appendix-A), a solution discriminating between all possible sequences of language and dialect subtags would be difficult to maintain and possibly require changes throughout the EasyAppointments codebase. 

To enable auto-detection for a new language, simply include its RFC subtag as a key-value pair in the [DEFAULT LANGUAGE](https://github.com/alextselegidis/easyappointments/blob/6b39b121b6712f2f490202bf00d0ae537b7497d3/src/application/config/config.php#L85) section of `src/application/config/config.php` , for example: 

```
'el' => 'greek',
```


