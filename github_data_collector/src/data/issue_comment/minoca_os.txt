There is possibility to run Minoca OS on Udoo or more in general on iMX6 SoCs?
There are difficulties with the apps\swiss\sh\shntos.c file for swiss.exe. The compiler includes the <sys /types.h> file with the tools\win32\MinGW\include path, so I have to redefine the POINTER_ADD macro. In addition, UINTN is not defined. The size of a "long" and a "int" integer in msvc x64 is 4 bytes. but in gcc x64 it is 8 bytes.
I've been contributing some patches to [Sparrowdo](https://github.com/melezhik/sparrowdo). One of these changed their bootstrapping script to be POSIX compliant. This makes supporting Alpine easier, but it has come to my attention that it breaks the script on Minoca.

It seems that Minoca doesn't come with `awk` on a default installation. As such my request would be to have `awk` added, in order to improve POSIX compliance.
Hi,
great work with this new distro, works fine. But could y add the MQTT broker Mosquitto to the repo.
I could compile it, but there are several dependencies (e.g. http://goochgooch.co.uk/2014/08/01/building-mosquitto-1-4/) needed for libwebsocket and Mosquitto that are not existing in repo.

Best reagards,
Nic

Any chances to run Minoca on cheapest SBCs?
[Allwinner H3/H2+ Datasheets&SDK&Info](http://linux-sunxi.org/H3)
I can help with debugging and testing (have OPi Lite & Zero now), but can't help much with C (still noob in programming)
Would it be possible to support [RISC-V][] in the future?

GCC has support for RISC-V beginning in version 7.1.

[RISC-V]: https://en.wikipedia.org/wiki/RISC-V
The current GUI debugger seems to be written specifically for Windows OS. Is it possible to have a cross-platform (Windows/Linux/macOS) GUI debugger?
pkg/minoca/os/apps/libc/dynamic/gaddrinf.c contains:

    if ((Hints != NULL) && ((Hints->ai_flags & AI_NUMERICSERV) != 0)) {
        return EAI_SERVICE;
    }

POSIX says:

The ai_flags field to which the hints parameter points shall be set to zero or be the bitwise-inclusive OR of one or more of the values AI_PASSIVE, AI_CANONNAME, AI_NUMERICHOST, AI_NUMERICSERV, AI_V4MAPPED, AI_ALL, and AI_ADDRCONFIG.

Minoca defines AI_ADDRCONFIG in apps/libc/include/netdb.h and should support its use in the hints argument of getaddrinfo.

I have not looked at whether Minoca supports IP6, but that is not the issue here.  Support for AI_ADDRCONFIG is needed so Minoca can run POSIX-compliant programs that want to adapt to whatever network facilities are available in the current platform.
Hello, It would be nice to add support golang in minoca, it even possible?
a software request:
gluster
mono
openzfs

