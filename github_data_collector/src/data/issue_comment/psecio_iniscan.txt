Hi, I'm making updates for Open Collective. Either you or a supporter signed this repo up for Open Collective. This pull request adds backers and sponsors from your Open Collective https://opencollective.com/iniscan ❤️
  
  It adds two badges at the top to show the latest number of backers and sponsors. It also adds placeholders so that the avatar/logo of new backers/sponsors can automatically be shown without having to update your README.md. [[more info](https://github.com/opencollective/opencollective/wiki/Github-banner)]. See how it looks on [this repo](https://github.com/apex/apex#backers).
You can also add a "Donate" button to your website and automatically show your backers and sponsors there with our widgets. Have a look here: https://opencollective.com/widgets

  P.S: As with any pull request, feel free to comment or suggest changes. The only thing "required" are the placeholders on the README because we believe it's important to acknowledge the people in your community that are contributing (financially or with code!).

  Thank you for your great contribution to the open source community. You are awesome! 🙌
  And welcome to the open collective community! 😊

  Come chat with us in the #opensource channel on https://slack.opencollective.com - great place to ask questions and share best practices with other open source sustainers!
  
- Implemented the methods showIni and showSection;
- The showIni can display data if it's empty, an array or only a value;
- It's important to note that this code rely on the process_sections
  argument from the parse_ini_file function and this processing is
  somehow weak, because it depends on the existence of the '[SECTION_NAME]'
  and the 'section_name.' is not interpreted as a section;
- We're now testing if the string is exactly '/tmp' instead of checking
  if there's any '/tmp' in it;
This adds a JUnit XML output which can be integrated into CI-systems like Jenkins, amongst certainly other use cases.

Use it with `--format=junit`

Before merging, check https://github.com/psecio/iniscan/issues/104 to ensure that generated JUnit XMLs will not be totally useless because of false positives in PHP 7/7.1 :)
Hi,

CI systems like Jenkins can publish JUnit XML results out of the box.
It would be great if we could have a exporter for that format.

For a JUnit XML format specification see here: https://github.com/windyroad/JUnit-Schema.

Example how php-cs-fixer exports to JUnit format: https://github.com/FriendsOfPHP/PHP-CS-Fixer/blob/master/src/Report/JunitReporter.php
When using a directory different to /tmp which directory name starts with tmp, 
iniscan issues a false positive:
````
[...]
soap.wsdl_cache_dir="/temp-php-wsdl"
[...]
````
Without the directory present:
````
[...]
FAIL   | WARNING  |             |               | soap.wsdl_cache_dir           | The SOAP WSDL cache directory did not resolve to a valid directory
[...]
````
With the directory present:
````
[...]
FAIL   | WARNING  |             |               | soap.wsdl_cache_dir           | The SOAP WSDL cache directory is inside of "/tmp/" which allows local users to conduct WSDL injection attacks (CVE-2013-6501)
[...]
````


Using a directory which directory name does not start with /tmp[...]:
````
[...]
soap.wsdl_cache_dir="/temp-php-wsdl"
[...]
````
Directory has been ensured being present, this iniscan passes then:
````
[...]
PASS   | WARNING  |             |               | soap.wsdl_cache_dir           | Security checks for CVE-2013-1635 and CVE-2013-6501
[...]
````

I guess there are some incorrect results. I use [this php.ini](https://github.com/prooph/docker-files/blob/master/php/config/php-cli.ini) and PHP 7.0 with iniscan version 3.6.4.

This is the output:

```
Status | Severity | PHP Version | Current Value | Key                           | Description
------------------------------------------------------------------------------------------
FAIL   | ERROR    | 5.2.0       | 1             | session.cookie_httponly       | Setting session cookies to 'http only' makes them only readable by the browser
FAIL   | ERROR    | 4.0.4       | 1             | session.cookie_secure         | Cookie secure specifies whether cookies should only be sent over secure connections.
FAIL   | WARNING  | 5.5.2       | 1             | session.use_strict_mode       | Strict mode prevents uninitialized session IDs in the built-in session handling.
FAIL   | ERROR    | 4.0.3       | 0             | allow_url_fopen               | Do not allow the opening of remote file resources ('Off' recommended)
```

As you can read in [the php docs](http://php.net/manual/en/session.configuration.php#ini.session.cookie-httponly) the current session settings are secure. `allow_url_fopen` is also disabled. Or is the column `Current value` the recommended value?

It seems the determination of default values is incorrect, because the value of `session.cookie_httponly` is `""`. Same for other values. 

Do you check the values `1`, `0`, `Off`, `On`, `"1"`, `"0"` or `""` for specific settings? 

I get multiple PHP warnings if I run `iniscan show`. I use [this php.ini](https://github.com/prooph/docker-files/blob/master/php/config/php-cli.ini) and PHP 7.0 with iniscan version 3.6.4.

```
Current PHP.ini settings from /usr/local/etc/php/php.ini
##########
:: date.timezone

Warning: Invalid argument supplied for foreach() in /app/vendor/psecio/iniscan/src/Psecio/Iniscan/Command/ShowCommand.php on line 53
-----------------

:: memory_limit

Warning: Invalid argument supplied for foreach() in /app/vendor/psecio/iniscan/src/Psecio/Iniscan/Command/ShowCommand.php on line 53
-----------------

:: error_reporting

Warning: Invalid argument supplied for foreach() in /app/vendor/psecio/iniscan/src/Psecio/Iniscan/Command/ShowCommand.php on line 53
-----------------

:: display_errors

Warning: Invalid argument supplied for foreach() in /app/vendor/psecio/iniscan/src/Psecio/Iniscan/Command/ShowCommand.php on line 53
-----------------
```

Running the `scan` command and outputting the result to console would always exit with an exit code of `1` regardless of whether there were any errors found or not.

This messes up CI builds and other usages where the exit code is meaningful.

The bug was caused by invalid assumption in the result value of `Output\Console::render`: the `$fail` variable is an integer, not an array.

The following illustrates the previous situation and how using `count` always resulted in the exit code of `1`.

``` php
php > $fail = 0;
php > var_dump((count($fail) > 0) ? 1 : 0);
int(1)
php > $fail = 1;
php > var_dump((count($fail) > 0) ? 1 : 0);
int(1)
```

This patch fixes the bug; `Output\Console::render` now treats the `$fail` variable as an integer and returns a correct exit status.
