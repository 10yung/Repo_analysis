Touch-Bar-Simulator kills Touch Bar on `MacBook Pro 16-inch` model.
Touch Bar goes to black when I start Touch-Bar-Simulator.
![IMG_0096](https://user-images.githubusercontent.com/33802186/69252910-b54bff00-0bee-11ea-8779-8edb92d81c6c.png)





hardware: MacBook Pro (16-inch, 2019)
software: 10.15.1 (19B2106)
Closes #55.

Also upgrades Defaults.framework to v3.1.1 and uses its tieToLifetime(of:), obsoleting (and removing) the version in glue.swift.
This is espeically annoying when positioned above the dock, and it blocks the ability to quit apps:

![Screen Shot 2019-11-15 at 7 14 57 PM](https://user-images.githubusercontent.com/1396727/68984108-70822b80-07dc-11ea-8d32-b289636b589d.png)

I’m not sure if there’s a way to have Touch Bar Simulator detect when these menus are being shown behind it and quickly fade itself out, but that would be the optimal UX in my opinion.

I _don’t_ think it should hide for app name bubbles, though. Just for right click context menus.
MacOS Catalina
Instal latestl TouchBar Simluartor version 
Clicking on any of the actions does not work. No matter what app I use underaneath, any click on the touch bar has no effect. For example clicking on `esc` does not close the simulator.

I believe this was working with the previous TouchBar Simulator. Though I upgraded from one version of Catalina to the latest so that might have also caused the issue.

Thanks!
We also need to use `AXIsProcessTrustedWithOptions` to prompt for access if needed at launch.

See https://github.com/search?l=Swift&q=AXIsProcessTrustedWithOptions&type=Code for examples.

We can also listen to when the access is given: https://github.com/thompsonate/Shifty/blob/0140051cf8b132eaf153df5191861621f7c62e3a/Shifty/AppDelegate.swift#L184-L195
The touch keyboard is not working. 10.15.1 Beta (19B68f)
We need to get the app notarized for Catalina.

https://developer.apple.com/documentation/security/notarizing_your_app_before_distribution

- [ ] Upgrade Sparkle: https://github.com/sparkle-project/Sparkle/releases/tag/1.22.0rc1
- [ ] Enable "Hardened runtime"
- [ ] Add notarization handling to the build script: https://github.com/sindresorhus/touch-bar-simulator/blob/master/build
I'd like to use SwiftUI and Combine in the app to simplify state handling and drawing.

https://developer.apple.com/tutorials/swiftui/
https://developer.apple.com/documentation/combine

Some ideas:

- [ ] Use [`Slider`](https://developer.apple.com/documentation/swiftui/slider) instead of our [custom slider class](https://github.com/sindresorhus/touch-bar-simulator/blob/master/Touch%20Bar%20Simulator/ToolbarSlider.swift). For example, here: https://github.com/sindresorhus/touch-bar-simulator/blob/2aab75f045f279416ebba040ca48b5914268f6e2/Touch%20Bar%20Simulator/AppDelegate.swift#L68-L79
- [ ] Use Combine publishers instead of our custom glue state binding: https://github.com/sindresorhus/touch-bar-simulator/blob/2aab75f045f279416ebba040ca48b5914268f6e2/Touch%20Bar%20Simulator/Glue.swift#L31-L103
- [ ] Use SwiftUI views here: https://github.com/sindresorhus/touch-bar-simulator/blob/2aab75f045f279416ebba040ca48b5914268f6e2/Touch%20Bar%20Simulator/TouchBarWindow.swift#L313-L331
- [ ] Use Combine instead of our custom `NSControl#onAction` thing. Probably worth making a Combine extension to simplify when you just want the callback right away without any transformation. https://github.com/sindresorhus/touch-bar-simulator/blob/2aab75f045f279416ebba040ca48b5914268f6e2/Touch%20Bar%20Simulator/util.swift#L137-L204
- Make a [`@propertyWrapper`](https://nshipster.com/propertywrapper/) for our [`AssociatedObject` class](https://github.com/sindresorhus/touch-bar-simulator/blob/2aab75f045f279416ebba040ca48b5914268f6e2/Touch%20Bar%20Simulator/util.swift#L127-L135), so we can more easily use it:
	```swift
	@AssociatedObject var foo = true
	```

Anything other ideas?

---

*This issue requires you to have advanced Swift knowledge. It has a bounty, so it's expected that you do a good job on it.*
When docked to the bottom of the screen, Touch Bar Simulator covers up dock icon labels. When I used the floating window option before docking was a thing, I would always float the window 20px or so above the dock to make room for the dock labels.

Would be great to be able to define this, possibly with a lil slider in the menu bar above "transparency".

If this feature is added, my recommendation is to have all four corners be rounded if the Touch Bar simulator window is not directly against the edge.
Fixes #34 
Set cornerRadius to 5.0.