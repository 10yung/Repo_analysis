I'm trying obtain account that I need to access in order to create my new business purchase a home and get all that owed and items I have either inherited, things that I may purchase,and ir gifts that were give to me through a 3rd party. 
    Thank you, Josh (TED)
The Android Gradle plugin supports bundling proguard rules as part of the library, so users won't need to do anything. 
This is great because users don't need to worry about keeping their file up to date.
I saw you have updated androix support , but it does not upload to jcenter, can you finish this?
sdk中的WebViewAppLinkResolver会影响google play 对webView SSLError处理的审核么；
See if you haven't submitted it for a long time. Would you like to ask if you will continue to update this library?
What happens when a task is running and activity or fragment is closed or paused ?
#142 continueWhile no longer creates long task dependency chain.  The state machine adds each continuation individually allowing garbage collection to collect the used tasks.
continueWhile no longer runs when the parent task is failed or cancelled, and no longer swallows the error which allows the error to be caught by another continuation.
Add Chinese README.md
This is more of a performance or memory leak/resource management item but as far as I can tell the way continueWhile is written will effectively create a chain of tasks that will keep growing each iteration until the loop completes.   In a small loop this probably does not matter but in a long running or infinite loop this grows indefinitely until failure.
I believe this can be prevented by using a completion source to manage reporting loop completion and avoiding continueWithTask or related anything that chains the .then's together.  The continuation could be rewritten as a Task<boolean> returning method so returning false ends the loop.  the result of each iteration would use continueWith and proxy the error to the task completion source or dispatch the next iteration if result is good.  
Below is my code.
dependencies {
   compile 'com.facebook.android:facebook-android-sdk:[4,5)'
    compile 'com.parse:parse-android:1.15.7'
    compile 'com.parse.bolts:bolts-tasks:1.4.0'
    compile 'com.parse.bolts:bolts-applinks:1.4.0'
}
private void appLevel_Lang(final Context cntxt) {

        if (db == null) {
            db = new DataBaseHelper(cntxt);
        }
        try {
            final ParseQuery<ParseObject> query = ParseQuery.getQuery("appSupportedLanguages");
            query.setLimit(100);
          
            Date dbLastUpdatedDate = db.getLastUpdateDateOfTable("appSupportedLanguages");

            if (dbLastUpdatedDate != null) {
                query.whereGreaterThan("updatedAt", dbLastUpdatedDate);
            }
            query.orderByAscending("updatedAt");
            query.findInBackground(new FindCallback<ParseObject>() {
                @Override
                public void done(List<ParseObject> applvl_LangList, ParseException e) {

                    if (e == null) {

                        if (applvl_LangList.size() > 0) {
                            String lastUpdatedDate = ParseQueries.getNSDateFormatterUpdateAtForParse().format(applvl_LangList.get(applvl_LangList.size() - 1).getUpdatedAt());

                            for (ParseObject p : applvl_LangList) {
                                AppLevelLanguage appLevelLanguage = new AppLevelLanguage();
                                appLevelLanguage.objectID = p.getObjectId();
                                appLevelLanguage.key = p.getString("key");
                                appLevelLanguage.updatedAt = lastUpdatedDate;
                                ArrayList<String> arrLangColNames = (ArrayList<String>) ParseConfig.getCurrentConfig().get("supportedLanguages");
                                for (String strLangCode : arrLangColNames) {
                                    p.getString(strLangCode);
                                    appLevelLanguage.langHashMap.put(strLangCode, p.getString(strLangCode));
                                }
                                 db.insertOrUpdateAppSupportedLanguageTable(appLevelLanguage);
                            }
                        }
                        if (applvl_LangList.size() == query.getLimit()) {
                            appLevel_Lang(cntxt);
                        } else {
                            Log.d("", "AppSupportedLanguages is not equal to limit");
                        }

                    } else {
                        Log.d("AppSupportedLanguages", "Error: " + e.getMessage());
                    }
                }
            });
        } catch (Exception e) {
            e.printStackTrace();
        }

    }

This is my new Project.The above similar code is running my older project.