服务端版本 1.1.4
客户端: spring-cloud-starter-alibaba-nacos-config-0.9.0.RELEASE.jar

我使用如下配置,根据配置的验证
客户端加载到的配置是DEFAULT_GROUP:wms.yaml和DEFAULT_GROUP:wms-inventory.yaml

    shared-dataids: wms.yaml,wms-inventory.yaml
    refreshable-dataids: wms.yaml,wms-inventory.yaml
    server-addr: 10.102.12.17:8848
    file-extension: yaml
    group: DEFAULT_GROUP
    namespace: 16832476-8288-4440-a416-7f89e174a9a7
当将上述配置group改为test后,加载的配置是
DEFAULT_GROUP:wms.yaml和test:wms-inventory.yaml.
1. 软件版本
SpringBoot版本： 2.0.1.RELEASE
SpringCloud版本：Finchley.RELEASE
AlibabaSpringCloud版本：2.0.1.RELEASE
NacosClient版本：1.1.4.RELEASE
2. 使用 Nacos+Ribbon
使用 com.alibaba.cloud.nacos.ribbon.NacosRule 作为自定义规则
现象：
如果有多个服务需要负载，会出现负载错误的情况
debug了一下，是因为 loadBalancer.getName() 得到了错误的服务名称

```
	@Override
	public Server choose(Object key) {
		try {
			String clusterName = this.nacosDiscoveryProperties.getClusterName();
			DynamicServerListLoadBalancer loadBalancer = (DynamicServerListLoadBalancer) getLoadBalancer();
			String name = loadBalancer.getName();

			NamingService namingService = this.nacosDiscoveryProperties
					.namingServiceInstance();
			List<Instance> instances = namingService.selectInstances(name, true);
			......
		}
		catch (Exception e) {
			LOGGER.warn("NacosRule error", e);
			return null;
		}
	}
```
Spring cloud gateway启用Nacos服务注册中心，如果serviceId配置了listOfServers的话，但还是从nacos取serverList，最后导致服务找不到，配置如下：
上面省略...
    routes:
      - id: website-lb-byContextPath
         uri: lb://boot-website
         predicates:
          - Path=/spring-boot/**
         filters:
          - StripPrefix=0

boot-website:  
  ribbon:
    nacos:
      enabled: false
    listOfServers: localhost:8070, localhost:8071

boot-website并未注册在nacos注册中心的(此时只是想用网关来代理不在服务注册中心注册的服务)，以上配置期望在网关转发选取服务ip时从配置中的listOfServers中获取，现在只要是加入了nacos-discovery依赖则上面的配置则会自动从nacos中获取serverList，而忽略了配置的listOfServers，如果是eureka做服务注册中心可以通过xxserviceId.ribbon.eureka.enabled:false来单个服务关闭，而nacos却不支持类似xxserviceId.ribbon.nacos.enabled:false这个配置，请问这算是一个bug吗？有没有什么解决方案呢？

环境版本：
spring boot:2.1.1.RELEASE
spring cloud:Greenwich.SR4
alibaba cloud:2.1.1.RELEASE

For a new consumer group, call

`DefaultMQPushConsumer.setConsumeFromWhere(ConsumeFromWhere.CONSUME_FROM_LAST_OFFSET);`

`offsetStore.readOffset(mq, ReadOffsetType.READ_FROM_STORE)` never return -1

so it still pulls all the msgs in the topic. If it is bug, i want to solve it.
### Describe what this PR does / why we need it

Nacos config load data orderly

### Does this pull request fix one issue?

fixed #987 
### Describe what this PR does / why we need it

- optimize Acm module base Spring Cloud Common 2.2.1
- solved `NacosPropertySourceRepository` data is not updated when data changes are monitored

### Describe what this PR does / why we need it
Should not be forced to depend the following dependency when not use `spring-cloud-loadbalancer`
```
<dependency>
            <groupId>org.springframework.cloud</groupId>
            <artifactId>spring-cloud-loadbalancer</artifactId>
 </dependency>
```
我们鼓励使用英文，如果不能直接使用，可以使用翻译软件，您仍旧可以保留中文原文。
We recommend using English. If you are non-native English speaker, you can use the translation software. 


**Which Component**
eg. Nacos Discovery, Sentinel

**Describe what problem you have encountered**
A clear and concise description of what you want to do.

**Describe what information you have read**
eg. I have read the reference doc of Sentinel

我们鼓励使用英文，如果不能直接使用，可以使用翻译软件，您仍旧可以保留中文原文。
We recommend using English. If you are non-native English speaker, you can use the translation software. 

**Which Component**
eg. Nacos Discovery, Sentinel
spring-cloud-alibaba-dubbo 2.1.1.RELEASE
spring-cloud-dependencies Hoxton.SR1
spring-boot 2.2.2.RELEASE

**Describe the bug**
A clear and concise description of what the bug is.
如果采用dubbo替换feign client的http协议，ReferenceBean在底层初始化filter chain的时候，TracingFilter的setTracing方法注入了一个null值，根本原因是ExtensionLoader委托SpringExtensionFactory获取bean对象失败（因为SpringExtensionFactory还没来得及给CONTEXTS初始化）

1.必须强制@DubboTransported(filter = {"tracing"})才可以使用tracing（前提条件是使用dubbo协议替换feign的http协议），而配置文件里面的dubbo.consumer.filter或dubbo.provider.filter不起作用

2.ExtensionLoader执行inject操作，注入的tracing对象是委托给SpringExtensionFactory从context里面获取，但是ExtensionLoader inject操作在SpringExtensionFactory context还未初始化之前就执行了，导致SpringExtensionFactory不能从context获取bean，也就导致inject了一个null值

**To Reproduce**
Steps to reproduce the behavior:
1. 源码在这里 [spring-cloud-alibaba-example](https://github.com/Costriod/spring-cloud-alibaba-example)
2. 启动zipkin
3. 启动nacos
4. 启动server服务
5. 启动client服务
6. 访问http://localhost:9001/echo?message=xxx

解决方案：
```java
@FeignClient(name = "spring-cloud-alibaba-server")
public interface EchoService {
    @RequestMapping(value = "/echo")
    @DubboTransported(filter = {"tracing"})
    String echo(@RequestParam("message") String message);
}

@Component
@Order(value = Ordered.HIGHEST_PRECEDENCE)
public class CustomContextAware implements ApplicationContextAware {

    @Override
    public void setApplicationContext(ApplicationContext applicationContext) throws BeansException {
        SpringExtensionFactory.addApplicationContext(applicationContext);
    }
}
```
**Expected behavior**
A clear and concise description of what you expected to happen.
1.如果不给SpringExtensionFactory初始化一些context，那么tracing是不起作用的，因为brave.dubbo.TracingFilter内部的tracing是一个null值

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Additional context**
Add any other context about the problem here.
e.g.  MacOS  、Java8 、 Version 0.2.1.RELEASE

k8s目前支持配置configmap、支持服务注册与发现、LB，那么咱们后面是否支持结合k8s来做分布式微服务架构：
``` springcloud + k8s + redis + mysql + mybatis + seata ```
or
``` springcloud + k8s + mq + seata```
