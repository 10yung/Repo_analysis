I'm trying to look at the various components on documentation website, but 'Figures' is at the horizon, and I can seem to scroll down below that.  I'm think it might need some sort of css overflow property setup or something.
Related to #4194
## Describe the bug

A disabled button with popover behaves differently in Chrome and Firefox browser.

## To Reproduce

Here's my code:
Code: 
```
const popoverLeft = (
  <Popover id="popover-positioned-left" title="Popover left">
    <strong>Holy guacamole!</strong> Check this info.
  </Popover>
);

render(
  <ButtonToolbar>
    <OverlayTrigger trigger="hover" placement="left" overlay={popoverLeft}>
      <Button disabled>Holy guacamole!</Button>
    </OverlayTrigger>
  </ButtonToolbar>
); 
```
 
For the above code -
1.  popover is rendered in Firefox on hover.
2. popover is not rendered in chrome on hover.

## Expected behavior

Popover should not be rendered on disabled button in Firefox (Firefox 72) browser.

## Environment (please complete the following information)

- Operating System: [e.g. macOS]
- Browser, Version [e.g. Chrome 78, Firefox 72]
- React-Bootstrap Version [e.g. 0.33.1] 

## Additional context

This happens in React-Bootstrap Version  v1.0.0-beta.16 as well. 

Trying to use Glyphicon on my project but giving error :-

> ./src/product/vote.js
> Attempted import error: 'Glyphicon' is not exported from 'react-bootstrap'.

Here is my code:-
import React, { Component } from 'react';
import { Glyphicon } from 'react-bootstrap';

```
class Vote extends Component {
  constructor(props){
    super(props);
  }
  }

  render(){
    return (
      <div className="productVote">
      <Glyphicon glyph="star" />

      </div>
    );
  }
}

export default Vote;

```

- Operating System: macOS
- Browser, Chrome
- React-Bootstrap Version : 0.33.1


## Describe the bug

The OverlayTrigger adds an `aria-desribedby` attribute to it's target when showing (if the popper has a tooltip role). When the tooltip is no longer showing the `aria-describedby` attribute is left

## To Reproduce

Steps to reproduce the behavior:

1. Create an OverlayTrigger with an overlay that has the 'tooltip' role and and id. Add an element inside the OverlayTrigger to activate it such as a button (any trigger type is fine).
2. The element correctly does not have an `aria-describedby` attribute at the start.
2. Activate the popover.
3. The element now correctly has an `aria-describedby` attribute referencing the popover.
4. Close the popover.
5. The element now incorrectly still has the `aria-describedby` attribute which no longer references anything in the DOM.

## Reproducible Example

Go to https://react-bootstrap.github.io/components/overlays/#popover-examples. Look at the attributes for the 'Click me to see' example button before showing the popover and after closing it.

## Expected behavior

The `aria-describedby` attribute should be removed from the OverlayTrigger's target element when not showing the popover. Alternatively the popover could be left in the DOM and shown/hid dynamically instead and the `aria-describedby` attribute could always be on the target element.

## Environment (please complete the following information)

- Operating System: Windows
- Browser, Version Chrome 79
- React-Bootstrap Version 1.0.0-beta.16

## Additional context

The dynamic `aria-describedby` attribute was added in a merge request as part of this old issue: https://github.com/react-bootstrap/react-bootstrap/issues/1827

## Describe the bug

When using onSlideEnd on the `<Carousel>` component in Internet Explorer 11, the onSlideEnd method passed through the props is not called.

## To Reproduce

Steps to reproduce the behavior:

1. Add onSlideEnd handler to `<Carousel>`
2. Click arrow and see that method is never called.

## Expected behavior

The onSlideEnd method should be fired once the carousel finishes transitioning to the next/prev slide.

## Environment (please complete the following information)

- Operating System: Windows 10
- Browser, Version: IE 11
- React-Bootstrap Version: 1.0.0-beta.11

## Additional context

Noticed that inside the transitionEnd.js file in the react-bootstrap package, the `TRANSITION_SUPPORTED` variable is always false for IE and so it runs the `emulateTransitionEnd` method and does not pass the handler through. The handler is what is responsible for calling the onSlideEnd method that you provide.

## Is your feature request related to a problem? Please describe
Would like to open NavDropdown on mouse over but can't because there is [no prop](https://github.com/react-bootstrap/react-bootstrap/blob/master/src/NavDropdown.js#L8-L40) controlling the open state of the NavDropdown

## Describe the solution you'd like

Tried the following

```javascript
<NavDropdown
  title={category.name[LANGUAGE]}
  onMouseEnter={handleOpen}
  onMouseLeave={handleClose}
  open={isOpen}
>
```

A clear and concise description of what you want to happen.

Would like to have a prop that can control if the menu is open or not if such a prop exist then it's not documented anywhere nor can I find it in the source code.


#### What does this PR do?
Adds support for defaultChecked in `<ToggleButton>`

#### Description of tasks completed.
- add defaultChecked prop to the ToggleButtonProps interface
- use defaultChecked as value for active prop for the Button element
- write a test for this to make sure it is working fine

#### What is the related issue?
[#4913](https://github.com/react-bootstrap/react-bootstrap/issues/4913)

#### Screenshots

Before:
<img width="909" alt="Screenshot 2020-01-13 at 00 40 39" src="https://user-images.githubusercontent.com/40595048/72239264-7ab08280-35f1-11ea-8326-07f24255d3b5.png">

After:
<img width="891" alt="Screenshot 2020-01-13 at 00 40 31" src="https://user-images.githubusercontent.com/40595048/72239270-83a15400-35f1-11ea-84b5-8947b4b3af73.png">

Related to #4194
cc @jquense 

In https://github.com/react-bootstrap/react-bootstrap/pull/3215, the references to these examples got removed. They thus no longer show up in our docs. We should either use them or remove them entirely.