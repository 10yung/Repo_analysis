Its been a while since ES 6 is renamed to "ECMAScript 2015" I think that the terms that we should use everywhere. https://www.ecma-international.org/ecma-262/6.0/index.html

What do you think? Happy to create PR for this.
**What this PR does?**
Added Turkish translation

**Why are you adding given library? (Short description why do you think that this library is important)**
This file could help to Turkish developers understand easier the roadmap

**Screenshots (the part that you modified is enough)**
Before:
After changes:
收藏
**What this PR does?**
Changes "GIT" to "Git".
**What this PR does?**
Add `ionic` to mobile list.

**Why are you adding given library? (Short description why do you think that this library is important)**
`Ionic` is one of mobile framework using Angular ever, but it is support to react and annouce release supporting react recently.
Ionic is similar to `react-native`, but it has some characteristic and difference with react-native.

1. Ionic use standard 'react-dom' system, so It is easy to learn for react developers who web based.
2. Ionic support to `PWA(Progressive Web App)` basically, so developers using ionic can multiple resource, mobile-web and web app.

Here is [annoucing ionic react](https://ionicframework.com/blog/announcing-ionic-react) url, and if it is need to adding png file, I'll add images and pull request again.

**Screenshots (the part that you modified is enough)**

Before:

After changes:
<img width="211" alt="스크린샷 2019-10-22 오전 3 49 32" src="https://user-images.githubusercontent.com/12755670/67234901-f67eb100-f480-11e9-9f91-fe2f155b0d31.png">
I have no idea, how to reach you without opening the issue. I am following the road map and I am curious to know some books that are best to learn Design Patterns and for Algorithms and Data Structures. It would be great if you link those books in the map as well.
**What this PR does?**
Fix typos in README-ES.md

**Why are you adding given library? (Short description why do you think that this library is important)**
Great resources


**Screenshots (the part that you modified is enough)**

Before:

After changes:

It might be worth mentioning features like hooks, context, etc outside of simply 'React' as they solve some of the problems that recommended-to-learn technologies addressed previously.

Since these roadmaps are often used by developers learning a tech, who don't necessarily know about its new or upcoming features, it would be worthwhile to let them know that they don't always need to go outside of React to do, for example, state management. It'd also be a useful hint as to what they are for.

Another issue is that these newer features are often considered to be optional when it comes to learning that technology. For example, most people probably wouldn't say that someone who doesn't know hooks is someone who doesn't 'know React'. So, even if you are aware of the existence of these features, you might not include them mentally in any of the points along the roadmap.

Any thoughts?
It would be nice if there was an official Website for the roadmap. Kinda like what the 100daysofcode has.
I think it would be nice to design an ISSUE_TEMPLATE to standardize the discussions and requests of improvement in the repo.

Let me know your opinion and I would be able to draft an ISSUE_TEMPLATE.md to discuss it.