Hello,
I have a problem with my app when I use this library. When I make a GET request the app crashes.
I'm using this instruction:
`val response: Response = "https://google.com/search?q=iphone".httpGet()`
Any solution for me? Thank you :) 
@see kohttp-jackson

see https://github.com/rybalkinsd/kohttp/issues/172#issuecomment-552419901

See https://github.com/skrapeit/skrape.it/commit/379539cdde41de418edc216cb0d3bfb66c943b2a#diff-2899f62fb8f337393d7ed4fcac58fc0fR20

Things to keep in mind:
Backward compatibility 
 
Incorrect multiple reads of body content
1. Introduce a way to group tests into unit and integration
2. Run unit first during build stage, and integration only after successful run of units.
3. Many of existing integration tests could be replaced with unit + mocks, it will improve test time   
It would be really nice to have ability to somehow swap defaultHttpClient: okhttp3.Call.Factory with Mock Entity in tests. For now current implementation of functions like httpGet {} can be only tested by using MockWebServer from okhttp or you have to inject okhttp3.Call.Factory  manually.

Ideally i would like to have integration with mockk, because it's designated mocking framework for kotlin. 

Example:

```
@EnableOkHttpMock
class MyTest {
    
    private val sut = MyBestService()
    
    fun `test foo is bar`() {
        //given
        every { httpGet(any()) } returns "foo" to "bar"
        
        //when
        val res = sut.getBar()
        
        //then
        assert("bar", res)
    }
}

```
https://github.com/ChuckerTeam/chucker