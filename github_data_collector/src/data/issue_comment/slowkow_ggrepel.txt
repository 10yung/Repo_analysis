ggplot(mat.mean.mRNA.miRNA, aes(Cumulative, CumValue)) + geom_line() +
  geom_point(shape=1)  + theme_classic(base_size = 8) +
  facet_wrap(~Group,scales="free") +
  labs(x="Number of mRNAs", y=substitute(paste("Cumulative reads (", 10^x, ")"), list(x=log10(valueRange)))) +
  geom_text_repel(data=subset(mat.mean.mRNA.miRNA, mat.mean.mRNA.miRNA$CumPerc<0.6 & mat.mean.mRNA.miRNA$Group=="MicroRNA"),segment.size = 0.2,
                  aes(Cumulative,label=Gene  ),size=2, colour="black",force=0,hjust=-1)  +
  geom_text_repel(data=subset(mat.mean.mRNA.miRNA, mat.mean.mRNA.miRNA$CumPerc<0.1 & mat.mean.mRNA.miRNA$Group=="MessengerRNA"),segment.size = 0.2,
[                  aes(Cumulative,label=Gene  ),size=2, colour="black",force=0,hjust=-1) 

              value        Gene variable  CumValue   CumPerc Cumulative    Group
      hsa-miR-148a-3p 560917.2 miR-148a-3p     Mean  560917.2 0.1191391          1 MicroRNA
      hsa-miR-26a-5p  404036.9  miR-26a-5p     Mean  964954.1 0.2049568          2 MicroRNA
     hsa-let-7g-5p   359982.0   let-7g-5p     Mean 1324936.1 0.2814172          3 MicroRNA
     hsa-let-7a-5p   330416.7   let-7a-5p     Mean 1655352.8 0.3515979          4 MicroRNA
     hsa-let-7f-5p   321201.4   let-7f-5p     Mean 1976554.2 0.4198213          5 MicroRNA
     hsa-miR-21-5p   288040.6   miR-21-5p     Mean 2264594.8 0.4810012          6 MicroRNA




Error in if (!point_inside && d > 0 && euclid(int, point_pos) > min.segment.length) { : 
  missing value where TRUE/FALSE needed

The documentation of the nudge options does not specify the units of these values. It would help new users to clarify this. 

They are probably in the same units as the data values for these axes? But they mightâ€™ve been relative units for the plotted axis (e.g. 0.5 would nudge the position by half of the axis length), or even absolute units for the plot (like the units for many of the other options).
## Summary

In my chart I can **either** use subsetting in the nudge_x argument to `geom_label_repel()`, like this
```
nudge_x = 1050 - subset(data.means, F2nuc < 1600)$F2nuc,
```
**or** I can use `facet_wrap()` to break out my plot into two panels by one of the group factors. But I can't do both: when I keep both the `nudge_x` and the `facet_wrap` in the call to `ggplot`, things crash.

## Minimal code example

Here is the code that does not work because it contains both the ``facet_wrap`` and the ``nudge`` elements. If I leave either of them out, I at least get a plot - but it'd be great to use both of them.

``` r
library(tidyverse)
library(scales)
library(ggthemes)
library(ggrepel)
set.seed(42)

vowel <- c("CHOICE", "DRESS", "FACE", "FLEECE", "FOOT", 
           "GOAT", "GOOSE", "KIT", "LOT/PALM/START", "MOUTH", 
           "NURSE", "PRICE", "STRUT", "THOUGHT", "TRAP/BATH")
vowelclass <- c("long", "short", "long", "long", "short", "long", "long", "short",
                "long", "long", "long", "long", "short", "long", "short")
F1nuc <- c(432.2298, 470.0430, 411.0955, 348.8965, 396.5128, 445.1375, 349.9190,
           401.3571, 521.6027, 482.3714, 398.9484, 500.4809, 472.9490, 477.1944,
           533.7897)
F2nuc <- c(1072.064, 1499.041, 1772.628, 1825.357, 1418.273, 1275.455, 1443.043,
           1611.058, 1249.752, 1502.553, 1365.589, 1419.620, 1347.935, 1171.713,
           1535.666)
df <- data.frame(vowel, vowelclass, F1nuc, F2nuc)

# make the plot
p <- ggplot(data=df, aes(x=F2nuc, y=F1nuc)) +
  
  scale_x_reverse(name="F2 (Hz)") + 
  scale_y_reverse(name="F1 (Hz)") +
  
  geom_label_repel(
    data          = subset(df, F2nuc > 1600),
    aes(label=vowel),
    nudge_x       = 2200 - subset(df, F2nuc > 1600)$F2nuc,
    segment.size  = 0.2,
    direction     = "y",
    hjust         = 1
  ) +
  
  geom_label_repel(
    data          = subset(df, F2nuc < 1600),
    aes(label=vowel),
    nudge_x       = 1050 - subset(df, F2nuc < 1600)$F2nuc,
    segment.size  = 0.2,
    direction     = "y",
    hjust         = 0
  ) +
  
  geom_point(size=4, color="black") +
    
    facet_wrap(~ vowelclass)
    
  
p + scale_fill_grey() +
  theme_bw() +
  labs(title = "Long and short vowel systems",
       subtitle="Control group",
       caption = (expression(paste(italic("N")[English], " = 20,992"))))
#> Warning in data$x + nudge_x: longer object length is not a multiple of
#> shorter object length
#> Error in data.frame(x = data$x + nudge_x, y = data$y + nudge_y): arguments imply differing number of rows: 3, 2
```
<sup>Created on 2019-06-08 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>




## Version information

Here is the output from `sessionInfo()` in my R session:

```
R version 3.6.0 (2019-04-26)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS High Sierra 10.13.6
```

Would it be possible to add more options to `direction` to limit the direction (I mean to a positive or negative value in x or y direction)? Maybe something like `diraction="+x"` or `direction="right"` to repel to the right. 

I was trying to repel text label on a labels in error bars, and I would like the lower bound to be shifted to the left and the upper bound to be shifted to the right. The xlim option didn't work for me because the I am using facet, and xlim can only specify a common value for all the facets. 

## Summary

When the legend is too large and ggrepel is used, the following obtuse error text is produced:

Error in grid.Call(C_convert, x, as.integer(whatfrom), as.integer(whatto),  : 
  Viewport has zero dimension(s)

## Minimal code example

Here is the minimum amount of code needed to demonstrate the issue:

```r
library(ggplot2)
library(ggrepel)
library(ggplot2movies)
ggplot(movies[1:300,], aes(y = year, x = length, color = factor(title))) +
  geom_point() +
  geom_text_repel(aes(label = title))
```

## Suggestions

Improve the wording of the error message to indicate that the legend is too large.

A legend this large is useless, and hiding it fixes the problem.
```r
library(ggplot2movies)
ggplot(movies[1:300,], aes(y = year, x = length, color = factor(title))) +
  geom_point() +
  geom_text_repel(aes(label = title)) + 
  theme(legend.position="none")
```

## Version information

Here is the output from `sessionInfo()` in my R session:

```
R version 3.5.0 (2018-04-23)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS High Sierra 10.13.2

Matrix products: default
BLAS: /System/Library/Frameworks/Accelerate.framework/Versions/A/Frameworks/vecLib.framework/Versions/A/libBLAS.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRlapack.dylib

locale:
[1] en_US.UTF-8/en_US.UTF-8/en_US.UTF-8/C/en_US.UTF-8/en_US.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] ggrepel_0.8.0       ggplot2_3.0.0       ggplot2movies_0.0.1 lmerTest_3.0-1      lme4_1.1-17        
[6] Matrix_1.2-14      

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.17      compiler_3.5.0    pillar_1.2.3      nloptr_1.0.4      plyr_1.8.4       
 [6] bindr_0.1.1       tools_3.5.0       digest_0.6.15     tibble_1.4.2      gtable_0.2.0     
[11] nlme_3.1-137      lattice_0.20-35   pkgconfig_2.0.1   rlang_0.2.1       yaml_2.1.19      
[16] mvtnorm_1.0-8     bindrcpp_0.2.2    coda_0.19-1       withr_2.1.2       dplyr_0.7.5      
[21] lsmeans_2.27-62   tidyselect_0.2.4  grid_3.5.0        glue_1.2.0        R6_2.2.2         
[26] survival_2.41-3   multcomp_1.4-8    TH.data_1.0-8     minqa_1.2.4       purrr_0.2.5      
[31] magrittr_1.5      scales_0.5.0      codetools_0.2-15  MASS_7.3-49       splines_3.5.0    
[36] assertthat_0.2.0  xtable_1.8-2      colorspace_1.3-2  numDeriv_2016.8-1 labeling_0.3     
[41] sandwich_2.4-0    estimability_1.3  lazyeval_0.2.1    munsell_0.5.0     zoo_1.8-2        
```

## Summary

ggplot2 will (hopefully) get `geom_sf_label()` and `geom_sf_text()` for labeling `sf` objects. (c.f. https://github.com/tidyverse/ggplot2/issues/2742#issuecomment-403315573)
Are you interested in implementing the `_repel` version of these? Labelling sf objects is a very common task so I'm sure many people will find `geom_sf_label_repel()` useful.

If you feel ggrepel is not the right place for them, they will probably be implemented in ggforce.

## Minimal code example

Proof of Concept is here: https://yutannihilation.github.io/ggsflabel/#geom_label_repel-for-sf

## Suggestions

Note that this can be addressed after `geom_sf_label()` and `geom_sf_text()` are implemented in ggplot2. So, please stay tuned on tidyverse/ggplot2#2742! (I will do my best to finish it as soon as possible)

## Version information

N/A
## Summary

When setting `hjust` to a value outside 0..1 range, in cases it would push text over the plotting area edge, text overlaps point. The problem can be reproduced only at certain plotting area sizes, rather small ones in most cases. (Anyway, it seems like setting `hjust` reduces repulsive force in the y direction.)

(@slowkow @AliciaSchep While adding visual test cases I noticed some problems, this is one of them.)

## Minimal code example

Here is the minimum amount of code neeeded to demonstrate the issue:

```r
  dat <- subset(mtcars, wt > 2.75 & wt < 3.45)
  dat$car <- rownames(dat)
  set.seed(42)

  p <- ggplot(dat, aes(wt, mpg, label = car)) +
    geom_point()
```

Problem on right edge.

```r
p + geom_text_repel(hjust = -0.5)
```
Problem on bottom edge.
```r
p + geom_text_repel(vjust = 1.5, angle = 90)
``` 
Problem on left edge.

```r
p + geom_text_repel(hjust = 1.5)
```
Here is an image of the output produced by the code immediately above.
Rstudio not at full screen:
![rplot](https://user-images.githubusercontent.com/2743159/34339817-049b8648-e982-11e7-941c-48bf4265a3f6.png)

RStudio full screen (redrawn automatically after switch to full screen):
![rplot01](https://user-images.githubusercontent.com/2743159/34339827-3ff59f80-e982-11e7-9f71-abe596991b1f.png)

## Suggestions

None, as I haven't studied the repulsion code.

## Version information

Here is the output from `sessionInfo()` in my R session:

```
Session info ------------------------------------------------------------------------------------------------------------------
 setting  value                                      
 version  R version 3.4.3 Patched (2017-12-14 r73916)
 system   x86_64, mingw32                            
 ui       RStudio (1.1.402)                          
 language (EN)                                       
 collate  English_United Kingdom.1252                
 tz       Europe/Helsinki                            
 date     2017-12-25                                 

Packages ----------------------------------------------------------------------------------------------------------------------
 package    * version    date       source                            
 base       * 3.4.3      2017-12-15 local                             
 colorspace   1.3-2      2016-12-14 CRAN (R 3.4.0)                    
 compiler     3.4.3      2017-12-15 local                             
 datasets   * 3.4.3      2017-12-15 local                             
 devtools   * 1.13.4     2017-11-09 CRAN (R 3.4.2)                    
 digest       0.6.13     2017-12-14 CRAN (R 3.4.3)                    
 ggplot2    * 2.2.1.9000 2017-12-24 Github (tidyverse/ggplot2@a637c67)
 ggrepel    * 0.7.2      2017-12-25 Github (slowkow/ggrepel@ab51ed2)  
 graphics   * 3.4.3      2017-12-15 local                             
 grDevices  * 3.4.3      2017-12-15 local                             
 grid         3.4.3      2017-12-15 local                             
 gtable       0.2.0      2016-02-26 CRAN (R 3.4.0)                    
 labeling     0.3        2014-08-23 CRAN (R 3.4.0)                    
 lazyeval     0.2.1      2017-10-29 CRAN (R 3.4.2)                    
 memoise      1.1.0      2017-04-21 CRAN (R 3.4.0)                    
 methods    * 3.4.3      2017-12-15 local                             
 munsell      0.4.3      2016-02-13 CRAN (R 3.4.0)                    
 plyr         1.8.4      2016-06-08 CRAN (R 3.4.0)                    
 Rcpp         0.12.14    2017-11-23 CRAN (R 3.4.2)                    
 rlang        0.1.4.9000 2017-12-16 Github (tidyverse/rlang@cc7587c)  
 rstudioapi   0.7        2017-09-07 CRAN (R 3.4.1)                    
 scales       0.5.0.9000 2017-09-01 Github (hadley/scales@d767915)    
 stats      * 3.4.3      2017-12-15 local                             
 tibble       1.3.4      2017-08-22 CRAN (R 3.4.1)                    
 tools        3.4.3      2017-12-15 local                             
 utils      * 3.4.3      2017-12-15 local                             
 withr        2.1.1.9000 2017-12-24 Github (jimhester/withr@df18523)  
 yaml         2.1.16     2017-12-12 CRAN (R 3.4.3)          ```

I have three groups of points with different radiuses. With fixed set of `point.padding`, the problem will look like below. The big circle will cover part of the label. But if increase `point.padding`, the small circle's label will be too far away.  Is there any work around for this? Thanks.
![image](https://user-images.githubusercontent.com/12883455/29345876-3e755df0-8274-11e7-8b5c-d21f8d516dab.png)

This is possible out of scope for ggrepel, but it's often nice to be able to label just the unusual points, i.e. those points that are in a low-density region of the plot. 

i.e. an alternative to `geom_jitter()`
