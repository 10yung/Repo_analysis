Hi

How can I write a new line in the body of a Teams message?

No matter what I tried so far, I always ended up getting one long string in the body of the Teams message. Any ideas / suggestions?

Thanks
This is happening intermittently in a script that runs as a scheduled task. Sometimes the task starts up and logs fine. Sometimes it throws this error. (PSVersion 5.1.14393.2430, Logging version 4.2.11)

Code that errors
```
Import-Module Logging
Add-LoggingTarget -Name WinEventLog -Configuration @{
  LogName="$($evt.log)"
  Source ="$($evt.source)"
}
```

Error message

```
Add-LoggingTarget : Cannot validate argument on parameter 'Name'. The argument "WinEventLog" does not belong to the 
    set "Email,ElasticSearch,Console,Slack,File,Seq" specified by the ValidateSet attribute. Supply an argument that is in 
    the set and then try the command again.
```

I'd guess AV or over-provisioned hosting or something else is causing `Start-LoggingManager` to take longer than 500ms to do its work

From [Logging.psm1](https://github.com/EsOsO/Logging/blob/336053714890971509e0a7e7662d8cf614350711/Logging/Logging.psm1#L22)

```
Start-LoggingManager

# Let the runspace spinup and generate all the available targets
Start-Sleep -Milliseconds 500 
```

What would it take to change this from a fixed interval to a loop that checks status every 100ms and either returns when ready or times out with an error?
I have a script that does tasks in different threads and I noticed that some messages were being lost.  I used the following script to test:


```
function Config-Logging {
    Set-LoggingDefaultLevel -Level 'INFO'
    Add-LoggingTarget -Name File -Configuration @{Path = 'C:\Temp\example_%{+%Y%m%d}2.csv'}
}
$Level = 'DEBUG', 'INFO', 'WARNING', 'ERROR'

$LoggingDemo = {
    Config-Logging
    foreach ($i in 1..100) {
        Write-Log -Level ($Level | Get-Random) -Message 'Message n. {0} , Job{1} ' -Arguments @($i, $_)
        Start-Sleep -Milliseconds (Get-Random -Min 100 -Max 150)
    }

    Wait-Logging
}

1..5 | Start-RSJob -ScriptBlock $LoggingDemo -ModulesToImport 'Logging', 'PoshRSJob' -VariablesToImport 'Level' -FunctionsToImport 'Config-Logging'
```

The script above spawns 5 concurrent threads, each one logging 100 message to the log file. 

Expected result: 500 lines written to example CSV file
Actual result: Number of lines written varies. May need to try different times.

Note: I'm using PoshRSJob for multithreading. 
```powershell
Add-LoggingTarget -Name Console
exit
[Console hangs]
```
We could add a function that read a json file and configure  targets, levels and format.
As stated here: https://docs.microsoft.com/en-us/powershell/wmf/5.1/catalog-cmdlets
I think it could be useful to move to Azure Pipelines to test the module against all major versions of Powershell
It would be desirable to have an option to set the maximum number of log files to keep while configuring the File target.
And whenever a new log file is created the oldest one can be deleted. Something similar to what log4net does with [RollingFileAppender](https://logging.apache.org/log4net/release/sdk/html/T_log4net_Appender_RollingFileAppender.htm)