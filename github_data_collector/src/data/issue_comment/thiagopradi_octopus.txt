rails connection pool does this by default when checking out from pool.
https://github.com/rails/rails/blob/v5.0.7.2/activerecord/lib/active_record/connection_adapters/abstract/connection_pool.rb#L364
when the db restarts this only gets hit for the primary connection and not any that use the model.using( which then fail and continue to fail until instance is restarted.

this is the best I could come up with to get something equivalent as I don't see where to clear Thread.current[] vars when the connection is checked back into the pool.

the RequestStore gem does this for you in rails and there is a sidekiq instance as well to help with that.

this is going through testing on our side and if everything works on production then I will put in an update.


and this was raising an error.  sidekiq + delayed_mailer and yaml

we use sidekiq's action_mailer extensions to add a delay
https://github.com/mperham/sidekiq/blob/v5.2.7/lib/sidekiq/extensions/action_mailer.rb#L33

which serializes yaml and then restores it when worker starts with 
https://github.com/ruby/psych/blob/master/lib/psych/visitors/to_ruby.rb#L394
which hits your init_with and raises exception on some of the cleanup code.   

so this pull fixes that by rescuing. 

some inspection could also take place but the this seemed more risky.   
Hi, I've encountered a shard mismatch problem when using octopus with identity_cache gem.

## Environment
Databases:
- master * 1
- replica * 1

Config:
- replicated: true
- fully_replicated: false (set replicated_model by ourself)

Gems:
- rails 4.2.11
- octopus: 0.10.2
- identity_cache: 0.4.1

## Scenario

Model
- User (replicated_model)
  - has_one :setting
- Setting (replicated_model)

When I want to update the setting record fetched from cache, the update query will be sent to the replica shard.

```ruby
# in controller

# first request works, later requests all failed
User.fetch(1).setting.update(some_attribute)
```

By using `binding.pry` I found that first time `.current_shard` will return `:master`, record fetched by another request will get `:replica` then the update query sent to wrong replica database.

But if I using normal Active Record method (e.g. `Member.find(1).setting.update(some_attribute)`) all request are success.

Is there some class variables stored across requests but computing after ActiveRecord instance initialize, but record initialized by IdentityCache cause the problem?

Thanks
Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.6.0 to 1.10.4.
<details>
<summary>Release notes</summary>

*Sourced from [nokogiri's releases](https://github.com/sparklemotion/nokogiri/releases).*

> ## 1.10.4 / 2019-08-11
> 
> ### Security
> 
> #### Address CVE-2019-5477 ([#1915](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1915))
> 
> A command injection vulnerability in Nokogiri v1.10.3 and earlier allows commands to be executed in a subprocess by Ruby's `Kernel.open` method. Processes are vulnerable only if the undocumented method `Nokogiri::CSS::Tokenizer#load_file` is being passed untrusted user input.
> 
> This vulnerability appears in code generated by the Rexical gem versions v1.0.6 and earlier. Rexical is used by Nokogiri to generate lexical scanner code for parsing CSS queries. The underlying vulnerability was addressed in Rexical v1.0.7 and Nokogiri upgraded to this version of Rexical in Nokogiri v1.10.4.
> 
> This CVE's public notice is [sparklemotion/nokogiri#1915](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1915)
> 
> 
> ## 1.10.3 / 2019-04-22
> 
> ### Security Notes
> 
> [MRI] Pulled in upstream patch from libxslt that addresses CVE-2019-11068. Full details are available in [#1892](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1892). Note that this patch is not yet (as of 2019-04-22) in an upstream release of libxslt.
> 
> ## 1.10.2 / 2019-03-24
> 
> ### Security
> 
> * [MRI] Remove support from vendored libxml2 for future script macros. [#1871](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1871)
> * [MRI] Remove support from vendored libxml2 for server-side includes within attributes. [#1877](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1877)
> 
> 
> ### Bug fixes
> 
> * [JRuby] Fix node ownership in duplicated documents. [#1060](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1060)
> * [JRuby] Rethrow exceptions caught by Java SAX handler. [#1847, [#1872](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1872)] (Thanks, [@&#8203;adjam](https://github.com/adjam)!)
> 
> 
> 
> ## 1.10.1 / 2019-01-13
> 
> ### Features
> 
> * [MRI] During installation, handle Xcode 10's new library pathOS. [#1801, [#1851](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1851)] (Thanks, [@&#8203;mlj](https://github.com/mlj) and [@&#8203;deepj](https://github.com/deepj)!)
> * Avoid unnecessary creation of `Proc`s in many methods. [#1776](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1776) (Thanks, [@&#8203;chopraanmol1](https://github.com/chopraanmol1)!)
> 
> 
> ### Bug fixes
> 
> * CSS selector `:has()` now correctly matches against any descendant. Previously this selector matched against only direct children). [#350](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/350) (Thanks, [@&#8203;Phrogz](https://github.com/Phrogz)!)
> * `NodeSet#attr` now returns `nil` if it's empty. Previously this raised a NoMethodError.
> * [MRI] XPath errors are no longer suppressed during `XSLT::Stylesheet#transform`. Previously these errors were suppressed which led to silent failures and a subsequent segfault. [#1802](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1802)
> 
> 
> 
></tr></table> ... (truncated)
</details>
<details>
<summary>Changelog</summary>

*Sourced from [nokogiri's changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md).*

> ## 1.10.4 / 2019-08-11
> 
> ### Security
> 
> #### Address CVE-2019-5477 ([#1915](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1915))
> 
> A command injection vulnerability in Nokogiri v1.10.3 and earlier allows commands to be executed in a subprocess by Ruby's `Kernel.open` method. Processes are vulnerable only if the undocumented method `Nokogiri::CSS::Tokenizer#load_file` is being passed untrusted user input.
> 
> This vulnerability appears in code generated by the Rexical gem versions v1.0.6 and earlier. Rexical is used by Nokogiri to generate lexical scanner code for parsing CSS queries. The underlying vulnerability was addressed in Rexical v1.0.7 and Nokogiri upgraded to this version of Rexical in Nokogiri v1.10.4.
> 
> This CVE's public notice is [sparklemotion/nokogiri#1915](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1915)
> 
> 
> ## 1.10.3 / 2019-04-22
> 
> ### Security Notes
> 
> [MRI] Pulled in upstream patch from libxslt that addresses CVE-2019-11068. Full details are available in [#1892](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1892). Note that this patch is not yet (as of 2019-04-22) in an upstream release of libxslt.
> 
> 
> ## 1.10.2 / 2019-03-24
> 
> ### Security
> 
> * [MRI] Remove support from vendored libxml2 for future script macros. [#1871](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1871)
> * [MRI] Remove support from vendored libxml2 for server-side includes within attributes. [#1877](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1877)
> 
> 
> ### Bug fixes
> 
> * [JRuby] Fix node ownership in duplicated documents. [#1060](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1060)
> * [JRuby] Rethrow exceptions caught by Java SAX handler. [#1847, [#1872](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1872)] (Thanks, [@&#8203;adjam](https://github.com/adjam)!)
> 
> 
> ## 1.10.1 / 2019-01-13
> 
> ### Features
> 
> * [MRI] During installation, handle Xcode 10's new library path. [#1801, [#1851](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1851)] (Thanks, [@&#8203;mlj](https://github.com/mlj) and [@&#8203;deepj](https://github.com/deepj)!)
> * Avoid unnecessary creation of `Proc`s in many methods. [#1776](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1776) (Thanks, [@&#8203;chopraanmol1](https://github.com/chopraanmol1)!)
> 
> 
> ### Bug fixes
> 
> * CSS selector `:has()` now correctly matches against any descendant. Previously this selector matched against only direct children). [#350](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/350) (Thanks, [@&#8203;Phrogz](https://github.com/Phrogz)!)
> * `NodeSet#attr` now returns `nil` if it's empty. Previously this raised a NoMethodError.
> * [MRI] XPath errors are no longer suppressed during `XSLT::Stylesheet#transform`. Previously these errors were suppressed which led to silent failures and a subsequent segfault. [#1802](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1802)
> 
> 
> ## 1.10.0 / 2019-01-04
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`beb832e`](https://github.com/sparklemotion/nokogiri/commit/beb832e3a67ba9aef1b4e83640bc8fd08fbc6da5) version bump to v1.10.4
- [`5d30128`](https://github.com/sparklemotion/nokogiri/commit/5d30128343573a9428c86efc758ba2c66e9f12dc) Merge branch '1915-css-tokenizer-load-file-vulnerability_v1.10.x' into v1.10.x
- [`c86b5fc`](https://github.com/sparklemotion/nokogiri/commit/c86b5fc02e5b50308d8de08b9a194aa71b701081) update CHANGELOG
- [`5fe449f`](https://github.com/sparklemotion/nokogiri/commit/5fe449fd3ab8cc25a71499128529c821c10dde83) regenerate lexical scanner using rexical 1.0.7
- [`6777008`](https://github.com/sparklemotion/nokogiri/commit/6777008202c1bde0520bb09fd1f02dee64dbcb60) eliminate `eval` from Builder#initialize
- [`47a7bc7`](https://github.com/sparklemotion/nokogiri/commit/47a7bc7d905207a9f5ccb2e6618e56d0ea78160a) rufo formatting
- [`094ecb1`](https://github.com/sparklemotion/nokogiri/commit/094ecb1f7057ec56f47ed910b0326b17ec88c0fe) rubocop security scan is run as part of the `test` rake target
- [`d068cd4`](https://github.com/sparklemotion/nokogiri/commit/d068cd43fe74966095af248410e442d09be3e8e5) add rubocop as a dev dependency
- [`45ee92b`](https://github.com/sparklemotion/nokogiri/commit/45ee92bcc0c0ad5195bab5e564704bb1e28aab17) adding a temporary pipeline for v1.10.x
- [`8e24af5`](https://github.com/sparklemotion/nokogiri/commit/8e24af59af22c0bf61376d8c9ae6a85e5b2ba3bd) version bump to v1.10.3
- Additional commits viewable in [compare view](https://github.com/sparklemotion/nokogiri/compare/v1.6.0...v1.10.4)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nokogiri&package-manager=bundler&previous-version=1.6.0&new-version=1.10.4)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/thiagopradi/octopus/network/alerts).

</details>
Hi,

I'm trying to get Octopus working with my **Rails 6** application. What I want to achieve is to use an AWS RDS read-replica for the read-only queries of my Rails application.

I'm using Octopus v. 0.10.2. Gemfile:
```ruby
gem 'ar-octopus', '~> 0.10.2'
```

Here is what my `MY-PROJECT/config/shards.yml` looks like:
```yml
---
octopus:
  environments:
  - production
  replicated: true
  fully_replicated: true
  production:
    rds_read_replica:
      adapter: postgresql
      host: XXX.eu-west-1.rds.amazonaws.com
      port: '5432'
      database: XXX
      username: XXX
      password: XXX
      encoding: utf8
```

However, when I run `bundle exec rails server`, I have the huge cryptic error below. The application works fine without Octopus. Do you have an idea of what can cause this problem?

Error:
```
/srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus/shard_tracking.rb:23:in `alias_method': undefined method `any?' for class `ActiveRecord::Associations::CollectionAssociation' (NameError)
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus/shard_tracking.rb:23:in `create_sharded_method'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus/shard_tracking.rb:12:in `block in sharded_methods'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus/shard_tracking.rb:12:in `each'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus/shard_tracking.rb:12:in `sharded_methods'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus/collection_association.rb:9:in `included'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus/collection_association.rb:17:in `include'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus/collection_association.rb:17:in `<main>'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `block in require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:21:in `require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `block in require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:291:in `load_dependency'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/octopus.rb:189:in `<main>'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `block in require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:21:in `require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `block in require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:291:in `load_dependency'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/ar-octopus-0.10.2/lib/ar-octopus.rb:1:in `<main>'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `block in require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:21:in `require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'
        from /usr/local/bundle/gems/bundler-2.0.2/lib/bundler/runtime.rb:81:in `block (2 levels) in require'
        from /usr/local/bundle/gems/bundler-2.0.2/lib/bundler/runtime.rb:76:in `each'
        from /usr/local/bundle/gems/bundler-2.0.2/lib/bundler/runtime.rb:76:in `block in require'
        from /usr/local/bundle/gems/bundler-2.0.2/lib/bundler/runtime.rb:65:in `each'
        from /usr/local/bundle/gems/bundler-2.0.2/lib/bundler/runtime.rb:65:in `require'
        from /usr/local/bundle/gems/bundler-2.0.2/lib/bundler.rb:114:in `require'
        from /srv/MY-PROJECT/config/application.rb:20:in `<main>'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `block in require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:21:in `require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `block in require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:291:in `load_dependency'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/railties-6.0.0/lib/rails/commands/server/server_command.rb:141:in `block in perform'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/railties-6.0.0/lib/rails/commands/server/server_command.rb:138:in `tap'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/railties-6.0.0/lib/rails/commands/server/server_command.rb:138:in `perform'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/thor-0.20.3/lib/thor/command.rb:27:in `run'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/thor-0.20.3/lib/thor/invocation.rb:126:in `invoke_command'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/thor-0.20.3/lib/thor.rb:387:in `dispatch'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/railties-6.0.0/lib/rails/command/base.rb:65:in `perform'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/railties-6.0.0/lib/rails/command.rb:46:in `invoke'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/railties-6.0.0/lib/rails/commands.rb:18:in `<main>'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:22:in `block in require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/loaded_features_index.rb:92:in `register'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:21:in `require_with_bootsnap_lfi'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/bootsnap-1.4.5/lib/bootsnap/load_path_cache/core_ext/kernel_require.rb:30:in `require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `block in require'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:291:in `load_dependency'
        from /srv/MY-PROJECT/vendor/bundle/ruby/2.6.0/gems/activesupport-6.0.0/lib/active_support/dependencies.rb:325:in `require'
        from bin/rails:9:in `<main>'

```
> Once the first version of Rails 6 beta is released, there will be a migration guide to help users migrate from Octopus to Rails 6.

https://weblog.rubyonrails.org/2019/8/18/this-week-in-rails-rails-6-is-released-sass-rails-6-improved-mysql2-error-and-more/
In many setups, the default master shard might be a different database server in each environment.  A single `master_shard` config setting doesn't fit.  This patch first checks the shards.yml for `octopus` => `master_shards` => Rails env for a setting, and still falls back to `octopus` => `master_shard` if it doesn't exist.

Example:
```
octopus:
  master_shard: fallback
  master_shards:
    development: dev1
    production: lion
  environments:
    - development
    - production
  development:
    dev1:  . . . 
    dev2:  . . . 
  production:
    lion:  . . . 
    tiger:  . . . 
```
Hi folks,

I'm trying to pin down a slippery issue with a Rails API that's using Octopus to maintain a large (200+) list of SQL Server database shards for multitenancy. 

We host our application on MS Azure which has a limit of SNAT ports used for all outbound TCP connections (including DB connections) that we seem to be periodically exhausting. I understand ActiveRecord maintains a connection pool so that it can reuse connections when they complete queries, but I don't understand is how this intersects with Octopus.

For example, our Database.yml, which we load settings from when loading shards, sets the pool size at "5." We then apply these settings to each shard in a list of shard names, with the below code snippets:

Building the list of shards, where config is loaded from our database.yml:
```
def self._build_shards(db_names, config)
      shards = { ENV['RAILS_ENV'].to_sym => {} }
      db_names.each do |name|
        shards[ENV['RAILS_ENV'].to_sym][name] = {
          host:      config['host'],
          pool:      config['pool'],
          adapter:   config['adapter'],
          database:  name,
          username:  config['username'],
          password:  config['password'],
          port:      config['port'],
          azure:     config['azure'],
          timeout:   config['timeout'],
          variables: config['variables']
        }
      end
      return shards
    end
```

...saving the list of shards to octopus:
```
# Save shards to config
      Octopus.setup do |config|
        config.environments = [ENV['RAILS_ENV']]
        config.shards       = shards
      end
```

Is this maintaining essentially a separate connection for each database shard? Or is there a unified pool somehow?

Thanks much!
I'm familiar with Octopus for a previous project, but opted to try the new Rails 6 connection switching per the note in the README.md. 

However, I can't seem to get it to reproduce a using(:tenant1) / using(:tenant2) approach, it seems  setup for a role-based read/write strategy, rather than sharding. (Can go into detail on challenges if needed, but seemed like I was going against the grain with various approaches).

Is the plan still to create a migration guide and depreciate Octopus, or are features like sharding/using_group/extended migration features etc still an Octopus only feature (to be continued).

Thanks
This adds optional support for the ibm_db gem.  If the ibm_db gem is not loaded in the bundle, octopus should behave the same as before.  If the ibm_db gem is loaded, it enables some monkey patches in the ibm_db gem to work with Rails 4.2 and Rails 5.0.

This includes the Docker dev system commits in #526.  Much of this PR is supporting code for the test suite and build system.

