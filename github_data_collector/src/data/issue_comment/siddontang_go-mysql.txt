https://github.com/siddontang/go-mysql/blob/fba9c9655f7cff606e91f387352561ec5a77de4b/replication/binlogsyncer.go#L715

这里看到作者的注释是不知道为什么会读取到 EOF.

我这边的情况是，当mysqld进程关闭的时候，会读取到EOF。

大概是因为 关闭mysql进程后，会创建新的binlog文件（例如之前是 mysql-001, 重启mysql进程后，001就不在有效，会创建一个新的 002）。

不确定是否是这个原因。

希望有帮助。
server包的demo里   EmptyHandler 好多是"not supported now"，这些转发sql的各种命令及返回mysql服务端数据正常不  我想问下现在能作为mysql代理吗？监听本机端口，那mysql服务器IP，什么代码设置？监听本机转发到mysql服务器，并处理中间传输的东西。这个如何作为一个mysql代理中间件使用？
Please add some extended events:

**TRANSACTION_CONTEXT_EVENT**
https://dev.mysql.com/doc/dev/mysql-server/latest/classbinary__log_1_1Transaction__context__event.html

**VIEW_CHANGE_EVENT**
https://dev.mysql.com/doc/dev/mysql-server/latest/classbinary__log_1_1View__change__event.html

**XA_PREPARE_LOG_EVENT**
https://dev.mysql.com/doc/dev/mysql-server/latest/classbinary__log_1_1XA__prepare__event.html
how do u do unix socket connection?
```
[2019/12/23 19:33:05] [info] binlogsyncer.go:572 begin to re-sync from (mysql-bin.000063, 17654)
[2019/12/23 19:33:05] [info] binlogsyncer.go:195 register slave for master server xxx:3306
[2019/12/23 19:33:05] [info] binlogsyncer.go:218 b.lastConnectionID=84178431, b.c.GetConnectionID()=17767104
[2019/12/23 19:33:05] [error] binlogsyncer.go:224 kill connection 84178431 error ERROR 1094 (HY000): Unknown thread id: 84178431
[2019/12/23 19:33:05] [info] binlogsyncer.go:230 kill last connection id 84178431
[2019/12/23 19:33:05] [error] sync.go:139 ERROR 1236 (HY000): Client requested master to start replication from position > file size; the first event 'mysql-bin.000063' at 17654, the last event read from '/home/mysql/data3293/mysql/mysql-bin.000063' at 4, the last byte read from '/home/mysql/data3293/mysql/mysql-bin.000063' at 4.
```


`runSyncBinlog`这个函数的loop遇到GetEvent返回Error后如何处理？
Does this package allow for grouping of row events per transaction? Not sure if xid or gtid should be used.
```
	github.com/siddontang/go-mysql/canal imports
	github.com/pingcap/parser tested by
	github.com/pingcap/parser.test imports
	github.com/pingcap/tidb/types/parser_driver: module github.com/pingcap/tidb@latest found (v2.0.11+incompatible), but does not contain package github.com/pingcap/tidb/types/parser_driver
```
这个是在我用go mod tidy后出现的错误，这个问题是怎么会是?请大神们帮忙解答一下，谢谢!
mysql 5.7,表里的数据是latin1编码的，用canal去解析，OnRow打印出来的中文是乱码。
cfg := canal.NewDefaultConfig()
cfg.Addr = dbConf.Host
cfg.User = dbConf.User
cfg.Password = dbConf.Password
cfg.Charset = "latin1"

![image](https://user-images.githubusercontent.com/7323504/69407953-bab95e80-0d40-11ea-86b3-b7206ace7d79.png)

Is there a way to know EXACTLY which inserts, updates and deletes are grouped together as part of the same transaction.

If so, can we know given a transaction id, ALL of the inserts, updates and deletes that are part of it? (slightly different Q)
I implement & register the callback `OnRotate` and `OnRow`. I can get the log from the go-mysql source:

```
 64     if ev.Header.LogPos == 0 {                                                  
 65       switch e := ev.Event.(type) {                                             
 66       case *replication.RotateEvent:                                            
 67         fakeRotateLogName = string(e.NextLogName)                               
 68         log.Infof("received fake rotate event, next log name is %s", e.NextLogName)
 69       }                                                                         
 70                                                                                 
 71       continue                                                                  
 72     } 
```

that indicates I received the rotate binlog-file-name event, but the framework not call `OnRotate` callback, it just `continue` to skip.

 Then my slave server received a few `OnRow` event callback, but I only know the binlog-position, not know current binlog-filename.

I think even if pos==0, we should also trigger `OnRotate`, framework can set pos to invalid value(e.g. -1) to indicate that this is a `binlog-filename-changed-notification`.