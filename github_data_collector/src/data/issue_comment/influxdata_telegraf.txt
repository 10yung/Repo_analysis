### Required for all PRs:

- [x] Signed [CLA](https://influxdata.com/community/cla/).
- [x] Associated README.md updated.
- [x] Has appropriate unit tests.

### Required for all PRs:

- [ ] Signed [CLA](https://influxdata.com/community/cla/).
- [ X] Associated README.md updated.
- [X ] Has appropriate unit tests.

Add additional counters for statsd in udp mode.

closes: #6779

### Required for all PRs:

- [x] Signed [CLA](https://influxdata.com/community/cla/).
- [ ] Associated README.md updated.
- [ ] Has appropriate unit tests.

I'm using radsniff (https://wiki.freeradius.org/guide/stats-with-radsniff) to collect freeradius statistics and forward to a collectd listener.  Using collectd it seems to work.  I use socat to sniff the unix socket and it looks good.  collectd also is populating RRDs.

When I redirect radsniff to telegraf with the below configuration, telegraf logs an error:

telegraf[1522]: 2020-01-17T18:47:27Z E! [inputs.socket_listener] Unable to parse incoming line: Collectd parser error: invalid length 21590

I also have the socat capture from this communication upon request.  

### Relevant telegraf.conf:
     cat /etc/telegraf/telegraf.d/collectd.conf
      [[inputs.socket_listener]]
        service_address = "unix:///var/run/telegraf/telegraf.sock"
        data_format = "collectd"
        collectd_typesdb = ["/usr/local/share/freeradius/radsniff_types.db"]
        collectd_parse_multivalue = "split"
        socket_mode = "777"

### System info:

    # uname -a
    Linux ccc 4.19.0-5-amd64 #1 SMP Debian 4.19.37-5 (2019-06-19) x86_64 GNU/Linux
    # cat /etc/debian_version 
    10.2
    # telegraf --version
    Telegraf 1.13.1 (git: HEAD 0c175724)

### Additional info:

    # radsniff -v
    radsniff version 3.0.20, built on Jan 16 2020 at 08:54:33, libpcap version 1.9.0 (with TPACKET_V3), collectdclient version 5.8.1


## Feature Request

Opening a feature request kicks off a discussion.

### Proposal:

Add a configuration options (possibly max_parser_threads) to the StatsD Input plugin config to allow user configuration of the number of goroutines to spin up for parsing inputs off of the input channel to increase throughput.

### Current behavior:

As per my reading, every incoming messages adds to the `s.in` channel (which is of size allowed_pending_messages), and only the parser() function is pulling messages off of the channel. 
 The parser is run using a goroutine here: https://github.com/influxdata/telegraf/blob/d7b3f1f4ea565ff2d5a80725c622ea542f04432c/plugins/inputs/statsd/statsd.go#L395 - but it's only spinning off a single goroutine. 

### Desired behavior:

Spin up n goroutines to do the listening instead of 1. But still default to the current behavior.

### Use case: <!-- [Why is this important (helps with prioritizing requests)] -->

My team is seeing consistent message dropping from our telegraph instances using the statsD input plugin. We're seeing the log message `[inputs.statsd] Error: statsd message queue full. We have dropped <num> messages so far. You may want to increase allowed_pending_messages in the config`

Our issue, I believe, is due to the fact that the parser isn't able to keep up with incoming message volume. We'd like to improve its throughput.

If people have other suggestions for configuration tweaks we can make to improve throughput, we'd also love to hear those!
## Feature Request
We would like to be able to use SNMP traps version 3
Opening a feature request kicks off a discussion.

### Proposal:
Can SNMP traps version 3 be implemented in a similar way to the existing v2c and v1 versions

### Current behavior:
Only works for v1 and v2c

### Desired behavior:
To work on v3

### Use case: <!-- [Why is this important (helps with prioritizing requests)] -->
We have > 3K devices and this split:
total no. Of v1 = 50
total no. Of v2c = 1285
total no. Of v3 = 1940 

We are thinking of implementing the TICK stack and this feature is really important as allows
us to monitor most of our routers/switches in a secure way, as v3 provides username/password which v2 does not.
Closes #6809.

As it's my first contrib to this project:
[x] signed CLA
[x] make check && make test
[-] integration test: `docker-compose up` would not start, problem with docker-credential-secretservice

I couldn't identify a suitable test to add - I could update PR if you have some guidance on that.
### Required for all PRs:

- [x] Signed [CLA](https://influxdata.com/community/cla/).
- [x] Associated README.md updated.
- [x] Has appropriate unit tests.

This PR adds AMQP1.0 as output plugin. Can be used with e.g. Azure ServiceBus.
This replaces my old PR #4327
### Required for all PRs:

- [X] Signed [CLA](https://influxdata.com/community/cla/).
- [X] Associated README.md updated.
- [X] Has appropriate unit tests.

make test and make check also pass. It's working for me on a Mimic and a Nautilus cluster.
Add tag for replica set name.
