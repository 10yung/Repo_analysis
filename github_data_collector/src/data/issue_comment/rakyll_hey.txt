Is there a way to set custom HTTP headers by passing in a text file (similar to `-D  HTTP request body from file`)? If not, would be a very useful option; happy to work submit a PR for this.
Fix DNS+dialup fastest and slowest
Hi, really appreciate for making this great tool, it provides almost all useful information .
I am new to this great tool, just wondering if there is any way to change my histogram unit from second to millisecond / microsecond ? And any way to expand to larger range, say 30 scales instead of 10.  
Thanks a lot

Response time histogram:
  0.000 [1]	|
  0.001 [941756]	|■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
  0.002 [51207]	|■■
  0.003 [2736]	|
  0.004 [1491]	|
  0.005 [2400]	|
  0.006 [263]	|
  0.007 [64]	|
  0.008 [44]	|
  0.009 [21]	|
  0.009 [17]	|
Hello, what is the calculation formula for Latency distribution and Response time?
Nix is an OS-agnostic purely functional package manager: https://nixos.org/nix/

This PR adds a `shell.nix` for use during development and a `default.nix` for building the `hey` binary itself. 

Also added OS-agnostic installation using `nix-env` to the README. If this gets merged, we should adapt the URL in the README to point to the official repo/master branch.

I'll also create a PR to https://github.com/NixOS/nixpkgs as an alternative to having `default.nix` in this repo.

https://storage.googleapis.com/jblabs/dist/hey_linux_v0.1.2
```
<Error>
<Code>UserProjectAccountProblem</Code>
<Message>User project billing account not in good standing.</Message>
<Details>
The billing account for project 938381945713 is disabled in state absent
</Details>
</Error>
```
As requested in #35, the idea is to use regular expressions in various places, which will lead to different URLs being used when requests are spawned.

This current implementation only works with RegEx passed directly as part of the URL path or its parameters (wrapped within `{{...}}` ):

```
hey https://google.com/"{{[a-z]{10}}}"
```

Depending on your shell, the wrapping parentheses might or might not be needed.

Although this part can be merged, this is an ongoing effort and further changes would require the introduction of a local `Request` type first.
Hey finally was packaged for Debian based distros and now  can be installed with `apt install hey`

Soon it will be on `Testing` and `Stable`
The hey version 0.1.2 was packaged and published on **Debian** and **Ubuntu**, current on `unstable`.

https://tracker.debian.org/pkg/hey

I notice that the Debian build servers fail to build `mips64el`arch and the following error show up:
```bash
fatal error: non-Go code set up signal handler without SA_ONSTACK flag
```
The full log can be found on https://buildd.debian.org/status/fetch.php?pkg=hey&arch=mips64el&ver=0.1.2-1&stamp=1572790290&raw=0

Looks like this is a common error on Golang and would be good to be fixed for the next hey releases so we from Debian can have `mips64el` arch available.

The good thing is that now people using Debian based distros can install using `apt install hey`!
- hey's Content-Type  
```
 -T  Content-type, defaults to "text/html".
```

- ab's Content-Type  
```
 -T content-type Content-type header to use for POST/PUT data, eg.
               'application/x-www-form-urlencoded'
               Default is 'text/plain'
```

hey should not add `Content-Type: text/html` to Get request