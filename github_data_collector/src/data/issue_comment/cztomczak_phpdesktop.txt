_Initially posted in the [forum](https://groups.google.com/d/topic/phpdesktop/LA60tXfnJGg/discussion)_

----

I am testing the [linux-v72.0](https://github.com/cztomczak/phpdesktop/releases/tag/linux-v72.0) package without any modifications and it seems that the keyboard input is not working. I cannot type anything in the text fields in **forms.php**, nor can I scroll long pages using the keyboard (Page Up, Page Down, arrow keys). The developers tools work fine however, so this problem is present only in the main browser window.

Here are my system specifications:

- Debian GNU/Linux 9 (stretch) (amd64)
- plasmashell 5.8.6
- Qt: 5.7.1
- KDE Frameworks: 5.28.0
- GTK2: libgtk2.0-0: 2.24.31-2
- GTK3: libgtk-3-0: 3.22.11-1

Here is a sample [debug output from the console](https://github.com/cztomczak/phpdesktop/files/3965247/phpdesktop-linux-72.1.debug.log).

I have tested all packages from the [linux-v70.0](https://github.com/cztomczak/phpdesktop/releases/tag/linux-v70.0) release to see if the bug is present in any of them:

- phpdesktop-linux-70.0 - :heavy_check_mark: works (there is keyboard input)
- phpdesktop-linux-70.1 - :heavy_check_mark: works (there is keyboard input)
- phpdesktop-linux-70.2 - :x: program doesn't start due to a segmentation fault
- phpdesktop-linux-70.3 - :x: doesn't work (there is no keyboard input)
- phpdesktop-linux-72.0 - :x: doesn't work (there is no keyboard input)

As per Czarek's request I've built the cefclient from [cef_binary_3.3626.1883.g00e6af4_linux64](http://opensource.spotify.com/cefbuilds/cef_binary_3.3626.1883.g00e6af4_linux64.tar.bz2) and it is working fine.

I am getting this error "the application was unable to start correctly 0xc00005" on a windows 7 machine, it's working fine during first open, but when i closed the program and reopen it, the error occurs.

Add example of using JoliNotif PHP library to display desktop notifications. With this library you can send desktop notifications directly from your PHP script. Works on Windows, Mac and Linux, see: https://github.com/jolicode/JoliNotif

Html5 Notifications API is not supported by CEF which PHP Desktop uses to embed Chrome browser.

In the future we may add native support for desktop notifications and expose such API through `window.phpdesktop` javascript object.
On Windows there is a lower limit on how small you can resize a window, but not on Linux, so you can resize the window to only a few pixels.

![screenshot](https://user-images.githubusercontent.com/450038/53745172-c907d780-3e9e-11e9-92e5-c571ae2011a7.png)

Discussion: https://groups.google.com/forum/#!topic/phpdesktop/9hqVnsAXHWM
PHP Desktop version: 72.1
OS: Linux Mint 19 Tara/Cinnamon 3.8.9

The option menu does not position it self underneath the select field, when clicking it.

Instead it opens outside the window:

![screenshot](https://i.imgur.com/3xh9FHv.png)
Only `$_ENV["SERVER_NAME"] is set.

See:
https://github.com/cztomczak/phpdesktop/wiki/Environment-variables
There is a "http_error" callback in Mongoose that maybe we should implement to handle 422 error code:
https://github.com/cztomczak/phpdesktop/blob/3a56b9342d69105bf47f146a8adf0b9e5e70836d/src/mongoose.h#L125

This is the default "send_http_error" implementation for handling http errors in Mongoose:
https://github.com/cztomczak/phpdesktop/blob/3a56b9342d69105bf47f146a8adf0b9e5e70836d/src/mongoose.c#L953

Reported on the Forum:
https://groups.google.com/d/topic/phpdesktop/RcB3q2uiwGc/discussion
So that WebRTC audio/video (webcam) and Flash (PPAPI installed system-wide) work out of the box.
Implemented `waitpid` for Windows in commit 3a56b93.
This funding is for those interested in sponsoring a PHP Desktop Chrome v80 release for Windows. The money will  be used to update phpdesktop to the latest Chrome version, implement new features, make a stable release and to provide long term support for it.

Funding is carried out using Bountysource and Paypal platforms. Multiple people can post bounties and donations using both platforms and make up for the goal.

The total funds raised so far are showed in the title of this issue.

## Option 1 - Paypal

You can make a Paypal donation using the button below.

[![Donate](https://raw.githubusercontent.com/wiki/cztomczak/cefpython/images/donate.gif)](https://www.paypal.com/cgi-bin/webscr?cmd=_s-xclick&hosted_button_id=JQSTPDRRM8AQ8)

By default all donations without any specific comment will be added towards funding the Chrome release for Windows.

## Option 2 - Bountysource

https://www.bountysource.com/issues/55998279