Since #37, some error messages are shown in double: since rustc now show them, tql does not have to emit them anymore.
For the ForeignKey to show up (instead of Option), that might require it to change it from a type synonym to a newtype with a Deref to Option.
I would really like to use this crate for my projects, but I don't know enough about low-level rust or procedural macros to be able to fix or maintain it myself.

I really don't like Diesel's approach, so having an alternative like this one would be a great deal for me. So, I'd like to ask if there is any chance of tql getting maintained in the future? Maybe after proc macros stabilized? I would love to use it.
This library is amazing, any chance for a UUID support from the `uuid` crate? I'd kill for that

I'd be willing to implement it myself, if you could give me any pointers as to where to go about doing that.
I'm trying to compile this simple program from your example:

```
#![allow(unused)]
#![allow(dead_code)]
extern crate chrono;
extern crate rusqlite;

#[macro_use]
extern crate tql;
#[macro_use]
extern crate tql_macros;
use rusqlite::Connection;
use tql::PrimaryKey;
use chrono::Utc;
use chrono::DateTime;

#[derive(SqlTable)]
struct Model {
    id: PrimaryKey,
    text: String,
    date_added: DateTime<Utc>
}

fn get_connection() -> Connection {
    Connection::open("database.db").unwrap()
}

fn main() {
    let connection = get_connection();
    let _ = sql!(connection, Model.create());

    // Insert a row in the table.
    let text = String::new();
    let date_added = Utc::now();
    let id = sql!(connection, Model.insert(text = text, date_added = date_added)).unwrap();
}
```

I got the following type conversion error message:

```
>> cargo run
   Compiling updater_tql v0.1.0 (file:///C:/Users/tembo/Desktop/qnd/updater_tql)
error[E0277]: the trait bound `rusqlite::types::ToSqlOutput<'_>: std::convert::From<&std::string::String>` is not satisfied
  --> src\main.rs:41:14
   |
41 |     let id = sql!(connection, Model.insert(text = text, date_added = date_added)).unwrap();
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<&std::string::String>` is not implemented for `rusqlite::types::ToSqlOutput<'_>`
   |
   = help: the following implementations were found:
             <rusqlite::types::ToSqlOutput<'a> as std::convert::From<&'a T>>
             <rusqlite::types::ToSqlOutput<'a> as std::convert::From<T>>
   = note: required because of the requirements on the impl of `std::convert::Into<rusqlite::types::ToSqlOutput<'_>>` for `&std::string::String`
   = note: required because of the requirements on the impl of `rusqlite::types::ToSql` for `&std::string::String`
   = note: required for the cast to the object type `rusqlite::types::ToSql`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0277]: the trait bound `rusqlite::types::ToSqlOutput<'_>: std::convert::From<&chrono::DateTime<chrono::Utc>>` is not satisfied
  --> src\main.rs:41:14
   |
41 |     let id = sql!(connection, Model.insert(text = text, date_added = date_added)).unwrap();
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<&chrono::DateTime<chrono::Utc>>` is not implemented for `rusqlite::types::ToSqlOutput<'_>`
   |
   = help: the following implementations were found:
             <rusqlite::types::ToSqlOutput<'a> as std::convert::From<&'a T>>
             <rusqlite::types::ToSqlOutput<'a> as std::convert::From<T>>
   = note: required because of the requirements on the impl of `std::convert::Into<rusqlite::types::ToSqlOutput<'_>>` for `&chrono::DateTime<chrono::Utc>`
   = note: required because of the requirements on the impl of `rusqlite::types::ToSql` for `&chrono::DateTime<chrono::Utc>`
   = note: required for the cast to the object type `rusqlite::types::ToSql`
   = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error: aborting due to 2 previous errors

For more information about this error, try `rustc --explain E0277`.
error: Could not compile `updater_tql`.

To learn more, run the command again with --verbose.

```
Were you able to run your example without these kind of errors?
I've tried to build the bare library (i.e. on its own) and had a strip of error messages. The message seem to point to the compiler than the library. Any idea how to solve this? I've very little knowledge on Rustc.

```
>>  cargo build
   Compiling unicode-xid v0.1.0
   Compiling winapi v0.3.4
   Compiling proc-macro2 v0.2.3
error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
  --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:63:33
   |
63 |                     proc_macro::TokenNode::Group(delim, (s.0).0)
   |                                 ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
  --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:70:33
   |
70 |                     proc_macro::TokenNode::Op(ch, kind)
   |                                 ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
  --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:73:33
   |
73 |                     proc_macro::TokenNode::Term((s.0).0)
   |                                 ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
  --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:76:33
   |
76 |                     proc_macro::TokenNode::Literal((l.0).0)
   |                                 ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:124:29
    |
124 |                 proc_macro::TokenNode::Group(delim, s) => {
    |                             ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:133:29
    |
133 |                 proc_macro::TokenNode::Op(ch, kind) => {
    |                             ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:140:29
    |
140 |                 proc_macro::TokenNode::Term(s) => {
    |                             ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:143:29
    |
143 |                 proc_macro::TokenNode::Literal(l) => {
    |                             ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0433]: failed to resolve. Could not find `TokenNode` in `proc_macro`
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:362:21
    |
362 |         proc_macro::TokenNode::Literal(l) => l,
    |                     ^^^^^^^^^ Could not find `TokenNode` in `proc_macro`

error[E0574]: expected struct, variant or union type, found enum `proc_macro::TokenTree`
  --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:53:21
   |
53 |         TokenStream(proc_macro::TokenTree {
   |                     ^^^^^^^^^^^^^^^^^^^^^ not a struct, variant or union type
help: possible better candidate is found in another module, you can import it into scope
   |
1  | use TokenTree;
   |

error[E0412]: cannot find type `TokenTreeIter` in module `proc_macro`
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:102:38
    |
102 | pub struct TokenTreeIter(proc_macro::TokenTreeIter);
    |                                      ^^^^^^^^^^^^^ did you mean `TokenTree`?
help: possible candidates are found in other modules, you can import them into scope
    |
1   | use TokenTreeIter;
    |
1   | use imp::TokenTreeIter;
    |

error[E0599]: no function or associated item named `intern` found for type `proc_macro::Term` in the current scope
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:279:14
    |
279 |         Term(proc_macro::Term::intern(string))
    |              ^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `proc_macro::Term`

error[E0599]: no function or associated item named `float` found for type `proc_macro::Literal` in the current scope
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:319:17
    |
319 |         Literal(proc_macro::Literal::float(s))
    |                 ^^^^^^^^^^^^^^^^^^^^^^^^^^ function or associated item not found in `proc_macro::Literal`

error[E0599]: no function or associated item named `integer` found for type `proc_macro::Literal` in the current scope
   --> C:\Users\tembo\.cargo\registry\src\github.com-1ecc6299db9ec823\proc-macro2-0.2.3\src\unstable.rs:323:17
    |
323 |         Literal(proc_macro::Literal::integer(s.into()))

// some other error messages elided here ...

error: aborting due to 27 previous errors

Some errors occurred: E0412, E0433, E0574, E0599, E0609.
For more information about an error, try `rustc --explain E0412`.
error: Could not compile `proc-macro2`.
```
warning: build failed, waiting for other jobs to finish...
error: build failed
I'm trying to use TQL in my simple project for learning this library. When trying to compile I get the error message below. Do I need a separate install of sqlite3.lib or is it built during compilation as among the internal dependencies of TQL?

```
error: linking with `link.exe` failed: exit code: 1181
  |
  = note: "C:\\Program Files (x86)\\Microsoft Visual Studio\\2017\\Community\\VC\\Tools\\MSVC\\14.11.25503\\bin\\HostX64\\x64\\link.exe" "/NOLOGO" "/NXCOMPAT" "/LIBPATH:C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib" "c:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\updater_tql-a11d14ed7d7324b3.1y16o1qfye96o7m0.rcgu.o" "c:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\updater_tql-a11d14ed7d7324b3.3rngp6bm2u2q5z0y.rcgu.o" "c:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\updater_tql-a11d14ed7d7324b3.4xq48u46a1pwiqn7.rcgu.o" "c:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\updater_tql-a11d14ed7d7324b3.5800s341grwjljfs.rcgu.o" "/OUT:c:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\updater_tql-a11d14ed7d7324b3.exe" "c:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\updater_tql-a11d14ed7d7324b3.crate.allocator.rcgu.o" "/OPT:REF,NOICF" "/DEBUG" "/NATVIS:C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\etc\\intrinsic.natvis" "/NATVIS:C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\etc\\liballoc.natvis" "/NATVIS:C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\etc\\libcore.natvis" "/LIBPATH:c:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps" "/LIBPATH:C:\\Libraries\\sqlite3" "/LIBPATH:C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\libtql-d8ecd190af549af7.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\librusqlite-24eee94d86133be2.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\libbitflags-eb80195f44875689.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\liblru_cache-ae0b0c300e351208.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\liblinked_hash_map-7367aa363fa8342d.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\liblibsqlite3_sys-ebd946f4787afcf1.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\libchrono-08cdfe376037e6cb.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\libnum_integer-9b5b4e77248b3568.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\libnum_traits-bc8f73005586735b.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\libtime-c75df5511e17845c.rlib" "C:\\Users\\tembo\\Desktop\\qnd\\updater_tql\\target\\debug\\deps\\libwinapi-57789260dbfe6bee.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libstd-1cce2a9d20ab1f24.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libpanic_unwind-65a4af75723cdd90.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libunwind-2e8655cc7305d65c.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\liblibc-46a305d94fa2d1ac.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\liballoc_system-af1f1cda65a920c9.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\liballoc-46dfcbf8c4dcea26.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libstd_unicode-239f9a431f378980.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcore-b754d68cb5d0aae4.rlib" "C:\\Users\\tembo\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\lib\\rustlib\\x86_64-pc-windows-msvc\\lib\\libcompiler_builtins-2cbf590829e54572.rlib" "sqlite3.lib" "kernel32.lib" "secur32.lib" "credui.lib" "advapi32.lib" "advapi32.lib" "ws2_32.lib" "userenv.lib" "shell32.lib" "msvcrt.lib"
  = note: LINK : fatal error LNK1181: cannot open input file 'sqlite3.lib'


error: aborting due to previous error
```
Hi,

I'm struggling to understand why this works

```rust
let _ = sql!(connection, PersonModel.insert(first_name = "John"))
```

while this fails to compile

```rust
let name = "john";
let _ = sql!(connection, PersonModel.insert(first_name = name));
```

not even this works

```rust
let name: &'static str = "john";
let _ = sql!(connection, PersonModel.insert(first_name = name));
```
Using stable Rust with SQLite.

Any ideas why?
Thanks

errors

```
error[E0308]: mismatched types
   --> src\main.rs:174:25
    |
174 |                 let _ = sql!(connection, PersonModel.insert(first_name = name));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `std::string::String`, found &str
    |
    = note: expected type `std::string::String`
               found type `&str`
    = help: here are some functions which might fulfill your needs:
            - .escape_debug()
            - .escape_default()
            - .escape_unicode()
            - .to_ascii_lowercase()
            - .to_ascii_uppercase()
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error[E0277]: the trait bound `rusqlite::types::ToSqlOutput<'_>: std::convert::From<&&str>` is not satisfied
   --> src\main.rs:174:25
    |
174 |                 let _ = sql!(connection, PersonModel.insert(first_name = name));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<&&str>` is not implemented for `rusqlite::types::ToSqlOutput<'_>`
    |
    = help: the following implementations were found:
              <rusqlite::types::ToSqlOutput<'a> as std::convert::From<T>>
              <rusqlite::types::ToSqlOutput<'a> as std::convert::From<&'a T>>
    = note: required because of the requirements on the impl of `std::convert::Into<rusqlite::types::ToSqlOutput<'_>>` for `&&str`
    = note: required because of the requirements on the impl of `rusqlite::types::ToSql` for `&&str`
    = note: required for the cast to the object type `rusqlite::types::ToSql`
    = note: this error originates in a macro outside of the current crate (in Nightly builds, run with -Z external-macro-backtrace for more info)

error: aborting due to 2 previous errors
```

passing a proper string still results in an error

```rust
let name = String::from("john");
let _ = sql!(connection, PersonModel.insert(first_name = name));
```

```
error[E0277]: the trait bound `rusqlite::types::ToSqlOutput<'_>: std::convert::From<&std::string::String>` is not satisfied
   --> src\main.rs:174:25
    |
174 |                 let _ = sql!(connection, PersonModel.insert(first_name = name));
    |                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ the trait `std::convert::From<&std::string::String>` is not implemented for `rusqlite::types::ToSqlOutput<'_>`
```
Current (15/2/2018) README example does not work properly with 0.1. Connection-parameter is missing. SQlite example is also missing. Please add new examples which work out-of-the box on nightly and stable.
I think a nice quality of life improvement would be to add an option to change the behavior of `MyTable.create()` from
``` sql
CREATE TABLE MyTable
```
to
```sql
CREATE TABLE MyTable IF NOT EXISTS
```

I looked at the source and I couldn't actually find where `MyTable.create()` is defined. Maybe it's because I'm not well-versed in macros yet.
