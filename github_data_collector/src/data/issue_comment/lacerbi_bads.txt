Is it possible to change the evolution strategy (ES, CMAES) inside of the BADS by another metaheuristics?
Is it possible to evaluate multiple cost functions at once, then produce the next set of likely parameters to evaluate, a.k.a. batch updating the internal model state with parallel function evaluation?
Is it possible to specify discrete valid values for each dimension of the parameter (of the cost function) such that only those values on the grid are evaluated? A special case would be optimizing a single integer variable. An extension is being able to specify some dimensions of the parameter to be discrete and specify the discrete space over which it takes values. Some problems are discrete in nature, but combinatorics kills any attempt to do greedy grid search due to the curse of dimensionality. 

One possible solution would be to put a map inside the evaluated function (logL) s.t. it maps continuous space into discrete one(e.g. p(1)=round(p(1)). But this wastes function evaluations for no good reason, and would be horrible for slow function evaluations. 
When `bads` is called with LB, UB, pLB, and pUB all equivalent (and thus fixing every dimension of the search), this error is returned:

`Error using bads (line 343)
If no starting point is provided, PLB and PUB need to be specified.
Error in fixedbads (line 41)
        [x_free,fval] = bads(fun_fix,x0,LB,UB,PLB,PUB,nonbcon_fix,options);
Error in bads (line 386)`

The motivation for wanting to call BADS with every dimension fixed is to obtain the value of the objective function (and non linear constraint) from a nested function. This allows for a tidy arrangement of the code.