I have been trying to get CloudKit Subscriptions working, basically it doesn't do anything after you attempt to send the invitation.  I came across this little note in CKSubscriptions Apple doc:

Overview
**Note: CKQuerySubscription is not supported in a sharedCloudDatabase.**

Can anyone enlighten me and/or describe how to get the subscription workflow working?  Or a least confirm that it does work?

Many thanks!
I have a countdown app that allows you to put countdowns into different categories. The Category class has a to-many relationship with a Countdown, so a countdown can be in more than one category, or none.

When I add a countdown to a category, it gets added to the category on other devices as well, just as I'd expect.

However removing a countdown from a category doesn't work correctly. Removing a countdown from a category triggers a sync. On the other device, a sync is triggered, but the countdown is not removed from the category on the other device. Another sync then occurs on the other device, which then triggers a sync on the first device. The countdown gets re-added to the category on the first device.

I'm not sure what I'm doing wrong or what's causing this.

Videos of this happening: https://imgur.com/a/5759Ae6
I didn't make any changes to the code that worked in iOS 11, but now I get the following errors when attempting to sync:

`[19293:5031258] [error] error: -addPersistentStoreWithType:Binary configuration:(null) URL:file:///var/mobile/Containers/Data/Application/3958D3AC-BED2-437B-AD3A-AB375BA4CF6B/Library/Application%20Support/com.mycompany.myapp/com.mentalfaculty.ensembles.eventdata/transitcache/MainStore/download/0_BF7C72BC-E135-4DA4-9DEE-858446A3D9A3-20796-00000B0B1A8C21B5_66DC6A8F.cdeevent options:{
    NSInferMappingModelAutomaticallyOption = 1;
    NSMigratePersistentStoresAutomaticallyOption = 1;
} ... returned error Error Domain=NSCocoaErrorDomain Code=259 "The file couldn’t be opened because it isn’t in the correct format." UserInfo={NSUnderlyingException=Can't read binary data from file, NSUnderlyingError=0x281c1be40 {Error Domain=NSCocoaErrorDomain Code=259 "The file “0_BF7C72BC-E135-4DA4-9DEE-858446A3D9A3-20796-00000B0B1A8C21B5_66DC6A8F.cdeevent” couldn’t be opened because it isn’t in the correct format." UserInfo={NSFilePath=/var/mobile/Containers/Data/Application/3958D3AC-BED2-437B-AD3A-AB375BA4CF6B/Library/Application Support/com.mycompany.myapp/com.mentalfaculty.ensembles.eventdata/transitcache/MainStore/download/0_BF7C72BC-E135-4DA4-9DEE-858446A3D9A3-20796-00000B0B1A8C21B5_66DC6A8F.cdeevent, NSUnderlyingException=value for key 'NS.objects' was of unexpected class 'CDEPropertyChangeValue'. Allowed classes are '{(
    NSDictionaryMapNode,
    NSOrderedSet,
    NSString,
    NSNumber,
    NSArray,
    NSDictionary,
    NSNull,
    NSDate,
    NSSet,
    NSData,
    NSUUID,
    NSDecimalNumber,
    NSURL
)}'.}}} with userInfo dictionary {
    NSUnderlyingError = "Error Domain=NSCocoaErrorDomain Code=259 \"The file \U201c0_BF7C72BC-E135-4DA4-9DEE-858446A3D9A3-20796-00000B0B1A8C21B5_66DC6A8F.cdeevent\U201d couldn\U2019t be opened because it isn\U2019t in the correct format.\" UserInfo={NSFilePath=/var/mobile/Containers/Data/Application/3958D3AC-BED2-437B-AD3A-AB375BA4CF6B/Library/Application Support/com.mycompany.myapp/com.mentalfaculty.ensembles.eventdata/transitcache/MainStore/download/0_BF7C72BC-E135-4DA4-9DEE-858446A3D9A3-20796-00000B0B1A8C21B5_66DC6A8F.cdeevent, NSUnderlyingException=value for key 'NS.objects' was of unexpected class 'CDEPropertyChangeValue'. Allowed classes are '{(\n    NSDictionaryMapNode,\n    NSOrderedSet,\n    NSString,\n    NSNumber,\n    NSArray,\n    NSDictionary,\n    NSNull,\n    NSDate,\n    NSSet,\n    NSData,\n    NSUUID,\n    NSDecimalNumber,\n    NSURL\n)}'.}";
    NSUnderlyingException = "Can't read binary data from file";
}
`
During development I see a very strange error: When I insert data into core data it's synced perfectly fine. If I update some part of the object (the title) on my Mac though I sometimes see fields becoming nil - but only specific ones. For me that is the two binary fields I have. Even stranger: At times I see data from other CoreData objects appearing instead of `nil` - and in a consistent manner - so it's the preview + actual binary data from the same wrong document appearing under the title I just changed.

All of this strangeness resolves if I remove the app on my phone and re-install it.

General logic is the following: I subscribe to `CDEMonitoredManagedObjectContextDidSave` and sync on my Mac. On the iOS side I react to `CDEICloudFileSystemDidDownloadFiles`, then trigger the usual merge on the main thread. 
I also implement `didSaveMergeChangesWith` to update my main context from the delegate callback, which I also do in the main thread. Logging the notification received shows data not being nil or anything.
We’re just troubleshooting a little problem at the moment and I thought see if I can get some help here on Issues.

So, we’ve been getting lots of reports over the past few month of our app (which uses Ensembles) slowing down dramatically for long term users, to the point where the main thread is blocked for minutes on end. We’ve been looking into it and have discovered that as soon as iCloud sync (Ensembles) is turned off, things speed right up again.

We set up a data generator that creates a a years worth of data, forcing a sync after each piece of data creation. This mimics well how long term users would be using the app. 

Here’s what we’ve found: After running the data importer and relaunching the app, you get endless printouts of  [CDERevisionManager CheckModelVersionOfStoredModificationEvents] and a big pause with the UI slow. At this point our sync indicator is up and takes ages to complete sync - up to 5 minutes. 

This is the behaviour for a few runs of the app, with sync taking a long time to complete. then it miraculously ‘sorts itself out’, sometimes after leaving the app till the next day, other times just leaving it open for a good 10 minutes or so, sync is super quick again, and all is good again. 

Users are never getting to the point where Ensembles 'sorts itself out' as they're not going to sit with the app open and frozen for 10 minutes, so they're just abandoning the app, which isn't great!

We’re having trouble finding the source or reason for this happening. Knowing Ensembles as you do, is anything I’m describing here ringing any bells for you?

Cheers!
Hi Drew
My name is Hans, I am integrating my app with ensemble, I've already purchased v2.2 production version of ensemble.
I am using webDAV as a cloud service.
Actually I am running my WebDAV server on my local machine for testing purpose.
When I run the app first time it gives me `CDEErrorDomain Code=205 "(null)" `
And there is no directory creation on the server storage.
When I run the app second time, that error does not occur and the new directory(ensemble events) created on the server storage.
Please let me know what is the issue.

Thanks
This one's definitely an enhancement/feature request. Have you given any thought to adding Watch Connectivity as a supported backend for Ensembles? It would probably behave similarly to Multipeer Connectivity, as it's also a peer-to-peer service that supports sending direct messages and/or files. It also has some niceties like background transfers delivered in order that they were sent.
I'd very much like to handle the error 'CDEErrorCode.cloudIdentityChange' as a run-time alert, but cannot get any line to work. Logic would suggest the following in the completion block:

      func sync(_ completion: (() -> Void)?) {
        if !ensemble.isLeeched {
            ensemble.leechPersistentStore {
                error in
                completion?()
            }        
        } else {
            //ensemble.merge
            ensemble.merge(completion: {
                error in
                if error == CDEErrorCode.cloudIdentityChanged {
                    iCloudAlert()
                }
                completion?()  
            })
        }        
    }

But the 'if error == ...'  line returns the message, " Binary operator '==' cannot be applied to operands of type 'Error?' and 'CDEErrorCode' "

Have tried many variants & type casts to no avail. Suggestions would be hugely appreciated.
PS  This is Swift 3, with Ensembles v1.7.1. Everything works wonderfully, just can't catch this error specifically.

Ensembles 1.7 is unable to load its omo on Xcode 9, resulting in completely disabled functionality. Firstly it gives the error:

`CoreData: annotation:  Failed to load optimized model at path '/var/containers/Bundle/Application/46C61E42-DA78-460D-82B1-2B780511C9D8/MyApp.app/CDEEventStoreModel.momd/CDEEventStoreModel_2.omo'`

And then we see

`CoreData: error: -addPersistentStoreWithType:Binary configuration:(null) URL:file:///var/mobile/Containers/Data/Application/FBE36631-CF92-420E-A4D3-5EBA07B2447B/Library/Application%20Support/com.myapp.MyApp/com.mentalfaculty.ensembles.eventdata/transitcache/MyAppSync/download/236_159945E3-FA38-46B2-9BC3-394C2B07FD10-960-00000081E9732578_A23EF461.cdeevent options:{
    NSInferMappingModelAutomaticallyOption = 1;
    NSMigratePersistentStoresAutomaticallyOption = 1;
} ... returned error Error Domain=NSCocoaErrorDomain Code=259 "The file couldn’t be opened because it isn’t in the correct format." UserInfo={NSUnderlyingException=Can't read binary data from file, NSUnderlyingError=0x1c0647440 {Error Domain=NSCocoaErrorDomain Code=259 "The file “236_159945E3-FA38-46B2-9BC3-394C2B07FD10-960-00000081E9732578_A23EF461.cdeevent” couldn’t be opened because it isn’t in the correct format." UserInfo={NSFilePath=/var/mobile/Containers/Data/Application/FBE36631-CF92-420E-A4D3-5EBA07B2447B/Library/Application Support/com.myapp.MyApp/com.mentalfaculty.ensembles.eventdata/transitcache/MyAppSync/download/236_159945E3-FA38-46B2-9BC3-394C2B07FD10-960-00000081E9732578_A23EF461.cdeevent, NSUnderlyingException=value for key 'NS.objects' was of unexpected class 'CDEPropertyChangeValue'. Allowed classes are '{(
    NSNumber,
    NSUUID,
    NSOrderedSet,
    NSDate,
    NSSet,
    NSDictionary,
    NSNull,
    NSDictionaryMapNode,
    NSData,
    NSArray,
    NSString,
    NSDecimalNumber,
    NSURL
)}'.}}} with userInfo dictionary {
    NSUnderlyingError = "Error Domain=NSCocoaErrorDomain Code=259 \"The file \U201c236_159945E3-FA38-46B2-9BC3-394C2B07FD10-960-00000081E9732578_A23EF461.cdeevent\U201d couldn\U2019t be opened because it isn\U2019t in the correct format.\" UserInfo={NSFilePath=/var/mobile/Containers/Data/Application/FBE36631-CF92-420E-A4D3-5EBA07B2447B/Library/Application Support/com.myapp.MyApp/com.mentalfaculty.ensembles.eventdata/transitcache/MyAppSync/download/236_159945E3-FA38-46B2-9BC3-394C2B07FD10-960-00000081E9732578_A23EF461.cdeevent, NSUnderlyingException=value for key 'NS.objects' was of unexpected class 'CDEPropertyChangeValue'. Allowed classes are '{(\n    NSNumber,\n    NSUUID,\n    NSOrderedSet,\n    NSDate,\n    NSSet,\n    NSDictionary,\n    NSNull,\n    NSDictionaryMapNode,\n    NSData,\n    NSArray,\n    NSString,\n    NSDecimalNumber,\n    NSURL\n)}'.}";
    NSUnderlyingException = "Can't read binary data from file";
}`

I am not sure how I can proceed here, so I wanted to open an issue for this.
The Ensembles binary framework was not built with the Xcode option "Allow app extension API only" enabled.  When the framework is included in another target that may have a extension API only requirement, Xcode emits the warning "linking against a dylib which is not safe for use in application extensions".

Please enable this option to eliminate the warning emitted by Xcode.
