This would be particularly useful in order to silence "unused import" warnings (#30) based on what's being imported, e.g. with regex-based compiler option like:

`-P:silencer:lineContentFilters=import scala\.collection\.compat\._`

Motivation for the change:
* Other tools like a scalafix or WartRemover uses @SuppressWarning
* It's hard to type and remember import `com.github.ghik.silencer.silent` if u're not using IntelliJ or other IDE
* Requires useless `provided` dependency in classpath (silencer-lib), pollutes maven artifacts

`@SuppressWarnings(Array("silencer"))` works like `@silent`
`@SuppressWarnings(Array("silencer:pattern"))` works like `@silent("pattern")`

WDYT, @ghik ?
Just wanted to note that adding this flag to `scalacOptions` caused an error when trying to generate docs (`sbt doc`). To fix, I have removed this flag from `Compile / doc` scope in `build.sbt` like so:

```scala
scalacOptions in(Compile, doc) := scalacOptions.value.filterNot(Seq("-P:silencer:checkUnused").contains)
```

Although perhaps the flag could also only be applied to the `Compile / compile` scope:

```scala
scalacOptions in(Compile, compile) ++= Seq("-P:silencer:checkUnused")
```
consider using [`sbt-ci-release`](https://github.com/olafurpg/sbt-ci-release) to fix broken release once and for all
typically the warning would be a deprecation warning

imports can't have annotations, so it would have to be via some other mechanism:
* a special comment?
* a setting where you specify what deprecated things you want to be able to import warning-free?

(opening the issue partly as documentation that there isn't any support currently)