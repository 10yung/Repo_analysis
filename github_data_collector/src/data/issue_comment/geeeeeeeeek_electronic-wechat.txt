
你好，请问一下，我在使用electron的时候，需要使用模板引擎去创建不同的html文件，然后在程序运行的过程中使用BrowserWindow.load去加载这个html文件，在Ubuntu下面调试运行的时候是没有问题的，但是经过打包成exe文件之后，运行的时候会报错，找不到这个文件，我查了一下，使用打包工具的时候，会把我创建html文件的目录位置打包成asar文件，而这种文件是只读的，所以程序在执行的时候，并没有在这个文件下面创建或者修改文件，所以导致我加载文件的时候失败，请问对于这种需求，有什么好的解决方案吗？？


os ubuntu 16.04 node9.4
cnpm run build:linux

> electronic-wechat@2.0.0 build:linux /opt/wechat
> ./scripts/build.sh linux x64

Start packaging for linux x64.
Packaging app for platform linux x64 using electron v1.4.15

<--- Last few GCs --->

[3867:0x2917a60]  2053131 ms: Mark-sweep 1716.8 (2201.8) -> 1716.8 (2150.8) MB, 2538.2 / 5.6 ms  (+ 0.0 ms in 0 steps since start of marking, biggest step 0.0 ms, walltime since start of marking 2744 ms) last resort GC in old space requested
[3867:0x2917a60]  2055524 ms: Mark-sweep 1716.8 (2150.8) -> 1716.8 (2133.3) MB, 2392.9 / 5.6 ms  last resort GC in old space requested


<--- JS stacktrace --->

==== JS stack trace =========================================

Security context: 0x3062d7f25501 <JSObject>
    1: 0x2d1c9153de39 <Symbol: Symbol.match>(aka [Symbol.match])(this=0x82cf81fcdd1 <JSRegExp <String[58]: dist|scripts|\.idea|.*\.md|.*\.yml|node_modules\/nodejieba>>,0x82cf81fcda9 <String[197]: /node_modules/_es6-map@0.1.5@es6-map/node_modules/es5-ext/node_modules/es6-symbol/node_modules/es5-ext/node_modules/es6-iterator/node_modules/es6-symbol/node_modules/es5-ext/test/array/#/@@iterator>)
  ...

FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out of memory
 1: node::Abort() [node]
 2: 0x11f155c [node]
 3: v8::Utils::ReportOOMFailure(char const*, bool) [node]
 4: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [node]
 5: v8::internal::Factory::NewCode(v8::internal::CodeDesc const&, unsigned int, v8::internal::Handle<v8::internal::Object>, bool, int) [node]
 6: v8::internal::CodeGenerator::MakeCodeEpilogue(v8::internal::TurboAssembler*, v8::internal::EhFrameWriter*, v8::internal::CompilationInfo*, v8::internal::Handle<v8::internal::Object>) [node]
 7: v8::internal::compiler::CodeGenerator::FinalizeCode() [node]
 8: v8::internal::compiler::PipelineImpl::FinalizeCode() [node]
 9: v8::internal::compiler::PipelineCompilationJob::FinalizeJobImpl() [node]
10: v8::internal::Compiler::FinalizeCompilationJob(v8::internal::CompilationJob*) [node]
11: v8::internal::OptimizingCompileDispatcher::InstallOptimizedFunctions() [node]
12: v8::internal::StackGuard::HandleInterrupts() [node]
13: v8::internal::NativeRegExpMacroAssembler::CheckStackGuardState(v8::internal::Isolate*, int, bool, unsigned char**, v8::internal::Code*, v8::internal::String**, unsigned char const**, unsigned char const**) [node]
14: v8::internal::RegExpMacroAssemblerX64::CheckStackGuardState(unsigned char**, v8::internal::Code*, unsigned char*) [node]
15: 0x9ad0841916
./scripts/build.sh: line 30:  3867 Aborted                 (core dumped) electron-packager . "${APP_NAME}" --platform=$PLATFORM --arch=$ARCH --electronVersion=1.4.15 --app-version=1.4.0 --asar --icon=assets/icon.icns --overwrite --out=./dist --ignore=${ignore_list}

Rewrote the *Important* description in README.md. The rewrite improves conciseness and removes ambiguities.
# A Request

Usually, there is a **history message** button in the drop-down menu of '...'  when reading a article in a subscription, It is really useful when following a public account by PC. 

Thanks for your talented work.
#### Description

First of all, thanks for your attention to open an issue for this project.
Please notice that if you are requesting a **feature**, then you should give a **brief description** of your request.
If you are reporting a **bug**, please **follow the template** below.
A bug report **without detailed information** required will have a **very low priority** and even be **ignored** (closed directly)!

#### Specifications

- Version of Electron (run `$ electron --version`): ``
- OS: `Ubuntu`
- Stack trace from the error message (if any)
在locales里看到了中文pak, zh_CN.pak。 在那里能设置，希望开发相应功能。加个conf配置文件之类的也行
```
<Stack trace here>
```

#### Specifications

- Version of Electron (run `$ electron --version`): `v1.4.15`
- OS: `Kubuntu 18.10`
#### Description

Just installed a new setup with Ubuntu 18.10 and configured a Chinese input source. Seems to work in every app, except electronic-wechat. It works fine in the browser though.
I am using IBus.

#### Specifications

- OS: Ubuntu 18.10

使用的是您的此版本[https://github.com/geeeeeeeeek/electronic-wechat/releases/tag/V2.0](url)
![feedback](https://user-images.githubusercontent.com/36185379/45864674-594cd700-bdad-11e8-8bbf-e25565bb2c0e.png)
在截图的右上角,(?关于)此选项,点击后跳转到浏览,为某广告页面
[https://dreamz.cn/?utm_source=google&utm_medium=webstore&utm_content=weixin&utm_campaign=weixin](url)
![feedback2](https://user-images.githubusercontent.com/36185379/45864810-dd9f5a00-bdad-11e8-8253-c5375f35a23c.png)
烦请解决,谢谢!
