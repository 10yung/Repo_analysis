Would it be possible to implement typed actors? I made a small example [https://gist.github.com/Pireax/9e65b9188a188e2a35051c2708b837ed](here), this ignores the whole mailbox, threading, etc so it isn't an exact match but is it possible to implement such a thing? It would allow for safer code.
Hi,
Are you planning to make `ActorRef` serializable when/if you create networking support?

This has been one of the most problematic things for us when creating Akka.NET (port of Akka to .NET).
Polymorphic serialization is hard and depending on serializer and platform not always possible.
(LocalActorRef, DeadLetterActorRef, RemoteActorRef, RouterActorRef etc etc)

In my other actor project https://github.com/rogeralsing/gam, I ditched the ActorRef concept and used a more Erlang like PID which is a simple value that instead of using polymorphism, resolves the underlying actor.
This way, the actor pid can easily be passed across the wire using e.g. protobuf as the serializer.

Just wanted to give a heads up on that one.
Another benefit of the above approach would be the possibility of cross platform Go <-> Rust remoting, _hint hint_

If you are still going down the ActorRef route, are there some interesting ways that Rust can deal with the above?
