I just installed the latest version of `shinyMobile` from GitHub for a new project (hoping to unveil very soon) and noticed that no matter which type of device I supply as the `device` value in the call to `preview_mobile` that a new tab opens in my Chrome browser and the app is not in an iframe at all (in fact it is full-screen as if it was a typical Shiny app).  This happens for both the `url` and `appPath` invocations (at first I was thinking it had something to do with my current app being wrapped with `golem`, but that does not seem to be the case here).  

Any ideas on how to get the preview to properly appear?  In case it helps, here's the list of packages and versions grabbed from `renv` diagnostics for the project:

<details>

```
# Lockfile ===========================
There are 122 package(s) recorded in the lockfile.
               _
  BH             [1.69.0-1]
  DT             [0.10]
  MASS           [7.3-51.4]
  Matrix         [1.2-17]
  R6             [2.4.0]
  RColorBrewer   [1.1-2]
  Rcpp           [1.0.3]
  V8             [2.3]
  askpass        [1.1]
  assertthat     [0.2.1]
  attempt        [0.3.0]
  backports      [1.1.5]
  base64enc      [0.1-3]
  brew           [1.0-6]
  callr          [3.3.2]
  cli            [1.1.0]
  clipr          [0.7.0]
  clisymbols     [1.2.0]
  colorspace     [1.4-1]
  commonmark     [1.7]
  config         [0.3]
  covr           [3.3.2]
  crayon         [1.3.4]
  crosstalk      [1.0.0]
  curl           [4.2]
  desc           [1.2.0]
  devtools       [2.2.1]
  digest         [0.6.22]
  dockerfiler    [0.1.3]
  dplyr          [0.8.3]
  ellipsis       [0.3.0]
  evaluate       [0.14]
  fansi          [0.4.0]
  fastmap        [1.0.1]
  fs             [1.3.1]
  ggplot2        [3.2.1]
  gh             [1.0.1]
  git2r          [0.26.1]
  glue           [1.3.1]
  golem          [0.1]
  gtable         [0.3.0]
  highr          [0.8]
  htmltools      [0.4.0]
  htmlwidgets    [1.5.1]
  httpuv         [1.5.2]
  httr           [1.4.1]
  ini            [0.3.1]
  jsonlite       [1.6]
  knitr          [1.26]
  labeling       [0.3]
  later          [1.0.0]
  lattice        [0.20-38]
  lazyeval       [0.2.2]
  lifecycle      [0.1.0]
  magrittr       [1.5]
  markdown       [1.1]
  memoise        [1.1.0]
  mgcv           [1.8-29]
  mime           [0.7]
  munsell        [0.5.0]
  nlme           [3.1-142]
  openssl        [1.4.1]
  packrat        [0.5.0]
  parsedate      [1.2.0]
  pillar         [1.4.2]
  pkgbuild       [1.0.6]
  pkgconfig      [2.0.3]
  pkgload        [1.0.2]
  plogr          [0.2.0]
  plyr           [1.8.4]
  praise         [1.0.0]
  prettyunits    [1.0.2]
  processx       [3.4.1]
  promises       [1.1.0]
  ps             [1.3.0]
  purrr          [0.3.3]
  rappdirs       [0.3.1]
  rcmdcheck      [1.3.3]
  rematch        [1.0.1]
  rematch2       [2.1.0]
  remotes        [2.1.0]
  renv           [0.9.2]
  reshape2       [1.4.3]
  rex            [1.1.2]
  rhub           [1.1.1]
  rlang          [0.4.1]
  rmarkdown      [1.17]
  roxygen2       [6.1.1]
  rprojroot      [1.3-2]
  rsconnect      [0.8.15]
  rstudioapi     [0.10]
  rversions      [2.0.0]
  scales         [1.0.0]
  sessioninfo    [1.1.1]
  shiny          [1.4.0]
  shinyMobile    [RinteRface/shinyMobile]
  shinyjs        [1.0]
  sourcetools    [0.1.7]
  stringi        [1.4.3]
  stringr        [1.4.0]
  sys            [3.3]
  testthat       [2.3.0]
  tibble         [2.1.3]
  tidyr          [1.0.0]
  tidyselect     [0.2.5]
  tinytex        [0.17]
  usethis        [1.5.1]
  utf8           [1.1.4]
  uuid           [0.1-2]
  vctrs          [0.2.0]
  viridisLite    [0.3.0]
  wavesurfer     [Athospd/wavesurfer]
  whisker        [0.4]
  whoami         [1.3.0]
  withr          [2.1.2]
  xfun           [0.10]
  xml2           [1.2.2]
  xopen          [1.0.0]
  xtable         [1.8-4]
  yaml           [2.2.0]
  yesno          [0.1.0]
  zeallot        [0.1.0]
```

</details>


Hi,

the Datepicker opens during initialization.
I guess this is on purpose:
I already saw that this is triggered in the datePickerInputBinding.js:

```
        // need to trigger a click
        // close the picker to initiate it properly but need Timeout
        // otherwise the date picker cannot open anymore
        init: function(datePicker) {
          datePicker.open();
          // minimum timeout value: 4 ms (HTML5 spec)
          setTimeout(function() {datePicker.close();}, 4);
        }
```

Is there any way to make this popover invisible?
Thanks in advance.

Best regards
Seyphaton
Currently f7SmartSelect works with the auto-init property of framework7. However, not having a dedicated input binding prevents it from having an update function
The way I see it, f7Search works fine for f7List groups. It would be really nice if this worked for cards' titles as well. :)
e.g. "perspective", "function", "chart_bar_alt_fill", etc. 

Only properly working icons tested so far: "book" and "list_number"
Hi,
I am currently migrating my shiny project to this great shinyMobile package (great work thanks).

However, I need update functions for the datepicker and select inputs.

Thanks a lot in advance.

Best regards
```
dateRangeInput(inputId = "date_range",label = "Date Range",
                                             start = Sys.Date()-7,
                                             end = Sys.Date(),
                                               max=Sys.Date(),
                                               format = "yyyy-mm-dd"
                                  )
```

![date range](https://user-images.githubusercontent.com/18054137/70528438-38200400-1b74-11ea-81a4-8ed82beac3cd.png)


Now any input in f7Dialog is NULL. Alternatively, an option could be to allow customisation of the prompt input when type = "prompt" (selectInput, dateInput, ...)

add the full JS API