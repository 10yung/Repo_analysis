got error 
error[E0554]: `#![feature]` may not be used on the stable release channel
 ---~/.cargo/registry/src/github.com-1ecc6299db9ec823/sauron_vdom-0.20.0/src/lib.rs:3:1
  |
3 | #![feature(arbitrary_self_types)]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: `#![feature]` may not be used on the stable release channel
 --> ~/.cargo/registry/src/github.com-1ecc6299db9ec823/sauron_vdom-0.7.1/src/lib.rs:3:1
  |
3 | #![feature(arbitrary_self_types)]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to previous error


rustc version1.40.0 stable
following
git clone https://github.com/ivanceras/diwata
cd diwata
git submodule update --init --recursive
./run_sqlite_sakila.sh


I get this error when trying to connect to my postgres database
```
thread 'main' panicked at 'not yet handled: xml', /home/jbenedict/.cargo/registry/src/github.com-1ecc6299db9ec823/rustorm-0.10.7/src/pg/column_info.rs:320:26
note: Run with `RUST_BACKTRACE=1` for a backtrace.
```
This is what appears in the browser when I open http://localhost:8000
![image](https://user-images.githubusercontent.com/7259973/41183300-e2bd304c-6b2e-11e8-9182-113f00917582.png)

Trying this out on a hosted database I got the following:

```
connection Error: DbError(PlatformError(PostgresError(GenericError("From conversion", Error(Db(DbError { severity: "FATAL", parsed_severity: None, code: SqlState("28000"), message: "no pg_hba.conf entry for host \"......\", user \"......\", database \"......\", SSL off", detail: None, hint: None, position: None, where_: None, schema: None, table: None, column: None, datatype: None, constraint: None, file: Some("auth.c"), line: Some(470), routine: Some("ClientAuthentication") }))))))
```

I suspect (?) the problem may be that SSL is required by the db host, but is turned off by rustorm over here: https://github.com/ivanceras/rustorm/blob/8da5be8dd143591f6ae09d1469fa4a54ba496d40/src/pg/mod.rs#L34

EDIT: note that the hosting is on heroku https://devcenter.heroku.com/articles/connecting-to-heroku-postgres-databases-from-outside-of-heroku#ssl
Hi, I was trying to create a diwata package for [NixOS](https://nixos.org/) (and other platforms where the nix package manager is available).

However, in order to get it to build I've had to compile with nightly [rustc](https://static.rust-lang.org/dist/2018-03-01/rustc-nightly-src.tar.gz), which would make it tough to get it accepted into the nixpkgs collection.

```
Running cargo build --release
   Compiling serde v1.0.27
   Compiling rustc-serialize v0.3.24
   Compiling gcc v0.3.54
   Compiling byteorder v1.2.1
   Compiling bitflags v1.0.1
   Compiling lazy_static v0.2.11
   Compiling strsim v0.7.0
   Compiling pear v0.0.12
   Compiling ordermap v0.2.13
   Compiling num-traits v0.2.1
   Compiling scopeguard v0.3.3
   Compiling matches v0.1.6
   Compiling unicode-normalization v0.1.5
   Compiling ansi_term v0.11.0
   Compiling nodrop v0.1.12
   Compiling byte-tools v0.2.0
   Compiling state v0.3.3
error[E0554]: #![feature] may not be used on the stable release channel
 --> /tmp/nix-build-diwata-0.1.0.drv-0/diwata-0.1.0-vendor/state/src/lib.rs:1:1
  |
1 | #![feature(const_fn)]
  | ^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> /tmp/nix-build-diwata-0.1.0.drv-0/diwata-0.1.0-vendor/state/src/lib.rs:2:1
  |
2 | #![feature(const_unsafe_cell_new)]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> /tmp/nix-build-diwata-0.1.0.drv-0/diwata-0.1.0-vendor/state/src/lib.rs:3:1
  |
3 | #![feature(const_atomic_usize_new)]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error[E0554]: #![feature] may not be used on the stable release channel
 --> /tmp/nix-build-diwata-0.1.0.drv-0/diwata-0.1.0-vendor/state/src/lib.rs:4:1
  |
4 | #![feature(const_atomic_bool_new)]
  | ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

error: aborting due to 4 previous errors

error: Could not compile `state`.
warning: build failed, waiting for other jobs to finish...
error: build failed
```

I think I may have had similar problems with other dependencies. Is there any chance of a fix?