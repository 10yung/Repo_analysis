I wanted to load images from Url into a simple Imageview using Picasso. But unfortunately I am facing some issue. I have included the logs below and the relevant code. I have given Internet permission and using the latest build of Picasso.

[https://i.stack.imgur.com/jTZfC.jpg]

MainActivity.java

`package com.example.picassotest;

import androidx.appcompat.app.AppCompatActivity;

import android.net.Uri;
import android.os.Bundle;
import android.widget.ImageView;
import android.widget.TextView;

import com.squareup.picasso.Picasso;

import org.w3c.dom.Text;

public class MainActivity extends AppCompatActivity {

    ImageView imgView;
    TextView txtView;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);

        imgView = findViewById(R.id.img_view);
        txtView = findViewById(R.id.txtview);
        Picasso.get().setLoggingEnabled(true);
        Picasso.get().load("https://images.unsplash.com/photo-1500100586562-f75ff6540087?ixlib=rb-1.2.1&ixid=eyJhcHBfaWQiOjEyMDd9&auto=format&fit=crop&w=3589&q=80").into(imgView);
    }
}`

activity_main.xml

`<?xml version="1.0" encoding="utf-8"?>
<androidx.constraintlayout.widget.ConstraintLayout xmlns:android="http://schemas.android.com/apk/res/android"
    xmlns:app="http://schemas.android.com/apk/res-auto"
    xmlns:tools="http://schemas.android.com/tools"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    tools:context=".MainActivity">

    <ImageView
        android:id="@+id/img_view"
        app:layout_constraintStart_toStartOf="@id/img_view"
        app:layout_constraintTop_toTopOf="parent"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:src="@mipmap/ic_launcher_round"/>

    <TextView
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:id="@+id/txtview"
        app:layout_constraintTop_toBottomOf="@id/img_view"
        app:layout_constraintLeft_toLeftOf="parent"
        app:layout_constraintRight_toRightOf="parent"
        app:layout_constraintBottom_toBottomOf="parent"
        android:text="Hey"
        />


</androidx.constraintlayout.widget.ConstraintLayout>`

Logs

Link: [https://pastebin.com/820tP9Jd
](url)


![1111](https://user-images.githubusercontent.com/29918776/71658519-55b14980-2d7f-11ea-8f12-29f9eef15098.png)
![QQ截图20200102162640](https://user-images.githubusercontent.com/29918776/71658523-5a75fd80-2d7f-11ea-93b6-8aef66b894e8.png)


- I use picasso 2.71828, When loading image , the network is unstable, resulting in incomplete picture display, do you know why ?, what should I do?

Picasso fails in loading pictures where the URL contains colon character (`:`).
I'm experiencing such a problem in loading pictures obtained by using Google Knowledge Graph Search API (https://developers.google.com/knowledge-graph/reference/rest/v1). 
For example, by using the API, you can get info like these:
`"image": {
          "url": "https://commons.wikimedia.org/wiki/File:Milano_Italy_Duomo-Milan-01.jpg",
          "contentUrl": "http://t3.gstatic.com/images?q=tbn:ANd9GcTFPRTO_NKK6uI172KlVdyG3fIpY4MnMPbECjYW96747mPKoL3k"
        },`
It would be nice to be able to handle network failures depending on the HTTP status code. 

Currently, when image downloading fails, Picasso executes Callback's onError(Exception e) method and passes a NetworkRequestHandler.ResponseException. However, because this is a package-private class, we can't cast the generic argument to get the status code.

I think that throwing a specialized exception when the consumer can only "see" its generic interface defeats the purpose.

use picasso:2.71828 load web image to imageview,  url from aliyun oss server, there are two url, one is original, another is cname url like alias
https://nij20190123.oss-cn-shanghai.aliyuncs.com/avatar/1.png
https://oss.mu78.com/avatar/1.png
![image](https://user-images.githubusercontent.com/15214079/63140241-dd3a2e00-c013-11e9-8cc6-4561f2286b64.png)
original url is load success
![image](https://user-images.githubusercontent.com/15214079/63140272-f93dcf80-c013-11e9-889d-44744fbb89ee.png)
but alias url is fail
![image](https://user-images.githubusercontent.com/15214079/63140299-12df1700-c014-11e9-89de-75a009d23848.png)
this two url both can visit on browser, and have same respose
and on same pc same net env,both url can be load on ios project
![image](https://user-images.githubusercontent.com/15214079/63140370-47eb6980-c014-11e9-9149-4207a285541a.png)
so whats the problem??
I have 2 same tablets. One is having as android for work profile as the application I am currently developing is used for corporate work.
On the regular tablet this code of showing an image from the internal storage works:
`File img = new File(actualMissionLocation.getAbsolutePath() + "/" + location.getName() + ".jpg");        Picasso.get().load(img).into(imageView);`
This same code does not work on the device with the AFW. It is showing a black screen. The .jpg image was saved by my application and it is there in the file system. I have tried with Uri in the format of "file://..." but also did not work on AFW.
What seems to be the problem here? Thanks for your help in advance.

Image is not loading sometimes. so I enabled the Picasso log.
the log in the case when it's not loading is -
```
D/Picasso: Main        created      [R3] Request{https://a-idea-factory-chat.herokuapp.com/myAvatar circle}
```
it should enque and complete that but nothing happens.

the case when its loading picture successfully is -
```
D/Picasso: Main        created      [R6] Request{https://a-idea-factory-chat.herokuapp.com/profilePicture/5d2c3d8700c15a0017fa8f76 circle}
D/Picasso: Main        completed    [R6] from MEMORY
```

the picasso object i am using is -
```java
        Picasso picasso = new Picasso.Builder(context)
                .downloader(
                        new OkHttp3Downloader(
                                new OkHttpClient.Builder()
                                        .addInterceptor(
                                                chain -> chain.proceed(
                                                        chain.request()
                                                                .newBuilder()
                                                                .addHeader(
                                                                        "Authorization", repository.getAuthToken()
                                                                )
                                                                .build()
                                                )
                                        ).cache(
                                        new Cache(
                                                context.getCacheDir(),
                                                1024 * 1024 * 40
                                        )
                                )
                                        .build()
                        )
                )
                .listener(
                        new Picasso.Listener() {
                            @Override
                            public void onImageLoadFailed(Picasso picasso, Uri uri, Exception exception) {
                                repository.logUtil.logV("picasso", exception.toString());
                            }
                        }
                )
                .build();
        picasso.setLoggingEnabled(true);
        picasso.setIndicatorsEnabled(true);
```

Please suggest.
Javadoc says:
```
 Resize the image to the specified size in pixels.
 Use 0 as desired dimension to resize keeping aspect ratio.
```

However I get an exception:
```
2019-07-08 13:45:08.658 de.spieleck.app.badgers.debug E/AndroidRuntime: FATAL EXCEPTION: OkHttp Dispatcher
    Process: de.spieleck.app.badgers.debug, PID: 14750
    java.lang.IllegalArgumentException: Dimensions must be positive! provided (640, 0)
        at android.graphics.ImageDecoder.setTargetSize(ImageDecoder.java:1033)
        at com.squareup.picasso3.BitmapUtils$1.onHeaderDecoded(BitmapUtils.java:197)
        at android.graphics.ImageDecoder.callHeaderDecoded(ImageDecoder.java:1618)
        at android.graphics.ImageDecoder.decodeBitmapImpl(ImageDecoder.java:1756)
        at android.graphics.ImageDecoder.decodeBitmap(ImageDecoder.java:1747)
        at com.squareup.picasso3.BitmapUtils.decodeImageSource(BitmapUtils.java:189)
        at com.squareup.picasso3.BitmapUtils.decodeStreamP(BitmapUtils.java:121)
        at com.squareup.picasso3.BitmapUtils.decodeStream(BitmapUtils.java:109)
        at com.squareup.picasso3.NetworkRequestHandler$1.onResponse(NetworkRequestHandler.java:81)
        at okhttp3.RealCall$AsyncCall.execute(RealCall.java:203)
```

I am using `com.squareup.picasso3:picasso:3.0.0-SNAPSHOT:20190502.143828-106`.
Seems like feature had been introduced here: https://github.com/square/picasso/issues/226