I followed the tutorial that can be found [here](https://libspectrum.io/docs/getting_started_android) to use this lib on my Android app.

I was able to include the lib successfully, but I perceived that the release `.apk` and `.aab` size increased a lot (5mb +).

Is there any "trick" to greatly reduce this?

Thank you :)
I have created a Cordova plugin around the Spectrum library and while it works well for compressing a source file from an iOS device to a nice, small jpg I am noticing that each processing of an image ends up leaking a lot of memory and when I profile the leak in Instruments I see that it is from thousands of array mallocs coming from the constructor of Scanlines but I can't really make any more sense of why these are being retained after the compression/encode operation successfully completes. Any ideas here? I am using objective-c for my plugin to call the Spectrum library. 

<img width="871" alt="Screen Shot 2019-12-13 at 12 19 51 PM" src="https://user-images.githubusercontent.com/36008778/70829611-00e36a00-1da3-11ea-8c1d-b54daeac5f87.png">

<img width="1144" alt="Screen Shot 2019-12-13 at 12 09 57 PM" src="https://user-images.githubusercontent.com/36008778/70829627-0a6cd200-1da3-11ea-8bb3-0c9c0a09f0ff.png">

<img width="1008" alt="Screen Shot 2019-12-13 at 12 10 19 PM" src="https://user-images.githubusercontent.com/36008778/70829643-13f63a00-1da3-11ea-863a-57d0a46e2908.png">
In my android app https://github.com/k3b/LosslessJpgCrop/ I use sprectrum to do lossless cropping/rotation of jpg images 

I have observed that rotating a jpg image without cropping the file size changes it-s file size and rotation is done throuh image manipulation.

I would have expected that only the exif-orientation flag is updated.

If i rotate an image with exif-orientation=90 degrees by 180 degrees i expect the same image but with orientation 270 degrees.

The current code does an image-rotation transformation and result exif-orientation is always 0

Although rotating changes image-file size, is it still loss-less?

I am using this code:

    public void crop(InputStream inputStream, OutputStream outputStream, int left, int top, int right, int bottom, int relativeRotationInDegrees) throws IOException {
        final EncodeRequirement encoding =
                new EncodeRequirement(EncodedImageFormat.JPEG, 80, EncodeRequirement.Mode.LOSSLESS);
        try {
            final TranscodeOptions.Builder optionsBuilder = TranscodeOptions
                    .Builder(encoding)
                    .cropAbsoluteToOrigin(left, top, right, bottom, false);
            if (relativeRotationInDegrees != 0) {
                optionsBuilder.rotate(relativeRotationInDegrees);
            }
            mSpectrum.transcode(
                    EncodedImageSource.from(inputStream),
                    EncodedImageSink.from(outputStream),
                    optionsBuilder.build(),
                    "my_callsite_identifier");
        } catch (Exception ex) {
            throw new IOException("Cannot Transcode from " + inputStream + " to " + outputStream + " : " + ex.getMessage(), ex);
        }
    }

Hi, @yangshun,  please check [spectrum site](https://github.com/facebookincubator/spectrum/pull/192) as an example of resolved issue "migrate spectrum to v2 #192   "
Hi there! The Docusaurus team is currently developing Docusaurus 2 and are almost done with an MVP that doesn't include translations and versioning features, which means there's feature parity with your website's current usage of Docusaurus.

Docusaurus 2 brings about many improvements:

- Client-side rendering with prerendering (site renders without JavaScript!)
- More flexible appearance - Customizable layouts, CSS modules, etc
- Embeddable interactive React components within markdown via MDX

I will be your POC in helping you throughout the migration process. Let me know what you think!

cc @yangshun @endiliey
The following code causes spectrum to crash if the gps timestamp property is in string format instead of double. Here is the an extract of GPS dictionary from an image exif:
```
{
    Altitude = "399.3269045323048";
    DateStamp = "2019:08:22";
    Latitude = "20.224505";
    LatitudeRef = S;
    Longitude = "57.53423333333333";
    LongitudeRef = E;
    TimeStamp = "09:30:04";
}
```

```objective c
 CGImageSourceRef source = CGImageSourceCreateWithURL((CFURLRef)[NSURL fileURLWithPath:path], NULL);
    NSMutableDictionary *metadata = [(NSDictionary *) CFBridgingRelease(CGImageSourceCopyPropertiesAtIndex(source, 0, NULL)) mutableCopy];
    FSPEncodeOptions *options =
    [FSPEncodeOptions encodeOptionsWithEncodeRequirement:encodeRequirement
                                         transformations:transformations
                                                metadata:[FSPImageMetadata imageMetadataWithDictionary:metadata]
                                           configuration:nil
                     outputPixelSpecificationRequirement:nil];
```

If i force the timestamp to a number, it works:
```objective c
gpsMetadata[(NSString*)kCGImagePropertyGPSTimeStamp] = @0;
```
the crash happens on this line:
```FSPCReportMustFix(@"Unexpected value: %@", value);```
 from the function `FSPInternalRationalsFromValues` in FSPImagemetadata.mm


Using pod 'SpectrumKit', when I try to build the project, I get the 'webp/encode.h' file not found error. It also happens with the SpectrumKitSample project.
React Native version: 0.59.8
Spectrum version: 1.1.0

Tried the following, but it didn't help:
```
    implementation('com.facebook.spectrum:spectrum-default:1.1.0') {
        exclude group: 'com.facebook.spectrum', module: 'fbjni'
    }
```

> 1 exception was raised by workers:
  java.lang.RuntimeException: java.lang.RuntimeException: Duplicate class com.facebook.jni.CppException found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.CppSystemErrorException found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.DestructorThread found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.DestructorThread$1 found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.DestructorThread$Destructor found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.DestructorThread$DestructorList found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.DestructorThread$DestructorStack found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.DestructorThread$Terminus found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.HybridClassBase found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.HybridData found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.HybridData$Destructor found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.IteratorHelper found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.MapIteratorHelper found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.NativeRunnable found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.ThreadScopeSupport found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
  Duplicate class com.facebook.jni.UnknownCppException found in modules classes.jar (com.facebook.react:react-native:0.59.8) and classes.jar (com.facebook.spectrum:spectrum-fbjni:1.1.0)
If forceUpOrientation= true in Android.
The image is not being rotated and the returned  ImageOrientation is UP.

Is this something that is in the pipeline? The idea is to use ExifInterface here?
How about to update the documentation about the usage of appbundle?
If I use already distribute my app with appbundle, do I need to use ABI split?