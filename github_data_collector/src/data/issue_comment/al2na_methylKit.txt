Hello,
Thanks for the great tool. I have a quick question regarding the validity check for tileMethylCounts function. For this particular experiment I have 9 samples (5 called MORs and 3 called FORS). Now, when I am performing DMR analysis, while I am doing tiling, I am getting the following warning **"object has more than one sample id: only one allowed"**. While reading the data I am reading it based on the default resolution, i.e. base, and filtering it based on criteria defined in the tutorial. Please find attached the code and the output till the filtering. I have 2 questions in this case:
a) Should I ignore this warning?
b) If not is there a special way to handle DMRs?

Please let me know if you have any further questions.

Thanks, 
Surajit
[methylationwarning.txt](https://github.com/al2na/methylKit/files/4010574/methylationwarning.txt)

I have a `methRead` object that is further merged using `unite`. 
It consists of 5 samples. When running `clusterSamples`, I get the following error: 


> clusterSamples(Unite.object, dist="correlation", method="ward.D", plot=TRUE,)
Error in quantile.default(sds, sd.threshold) : 
  missing values and NaN's not allowed if 'na.rm' is FALSE
See here, the error is not very informative

https://groups.google.com/d/msg/methylkit_discussion/9nPkCbPyKLI/a9xCm3mdAwAJ
getMethylDiff command appends its filename suffix with a space on both sides (i.e. "methylDiff _suffix .txt.bgz" vs. "methylDiff_suffix.txt.bgz"). This applies to its index file as well, though I'm not sure if this also appears when a suffix is automatically generated (as opposed to having one supplied as a parameter)
right now we don't get rowids when asking for them: 

```
> percMethylation(methylBaseDB,save.txt = TRUE,rowids = TRUE)

      PEsample_rrbs PEsample_wgbs SEsample_v2copy  SEsample SEsample_v2
  [1,]    100.000000    100.000000       71.428571  33.33333   71.428571
  [2,]    100.000000    100.000000       71.428571  41.66667   71.428571
  [3,]    100.000000    100.000000       45.454545  53.33333   45.454545
  [4,]     44.444444     50.000000       20.000000  26.66667   20.000000
  [5,]     78.571429     72.727273       37.500000  23.07692   37.500000
  [6,]      5.000000      5.555556       36.363636  75.00000   36.363636
```
Sometimes it would be useful to include column and row names in the text output, for instance when saving percMethylation to file.

https://github.com/al2na/methylKit/blob/a22fb817a1c244ccba0491b9289064731c801a30/R/tabix.functions.R#L696
https://github.com/al2na/methylKit/blob/a22fb817a1c244ccba0491b9289064731c801a30/R/bedgraph.R#L78
In order to count methylated and unmethylated cystosines, the documentation at `3.5 Tiling windows analysis` states this code:

```
tiles=tileMethylCounts(myobj,win.size=1000,step.size=1000)
```

In order to obtain the `myobj` object this code is stated further up (which is the only place where this is defined):

```
# read the files to a methylRawList object: myobj
myobj=methRead(file.list,
           sample.id=list("test1","test2","ctrl1","ctrl2"),
           assembly="hg18",
           treatment=c(1,1,0,0),
           context="CpG"
           )
```

Given the default of `mincov=10`, the `myobj` will be pre-filtered for each cystosine which makes sense for DMC analysis. For regions, this pre-filtering shouldn't be done imo. For example for a given region with 100 cytosines, all have a coverage of say 9. All would  be filtered on this threshold and consequently the whole region. However they would sum up to 900 coverage without pre-filtering worthwhile being included for DMR analysis.

I would there fore suggest (if this my understanding is correct) to pointing this out in the documentation, adding `mincov=1` or so to create `myobj` for section 3.5.

Filtering should still be made, but on the region rather the cytosine level, i.e. using `cov.bases = 10` in the `tileMethylCounts` call or so. 
Right now I saw that it used 2x the size of the input file in memory. 
This is fine for 40 million CpG sites, but can be quite large for 800 million CHH or 200 million CHG sites. 

We are loading the whole file into memory anyways, but maybe we could limit copying during some of our processing functions. 

For now this should just go into documentation that for non-cpg sites a lot more ressources are required.  
https://github.com/al2na/methylKit/blob/a22fb817a1c244ccba0491b9289064731c801a30/R/backbone.R#L280