### Summary of Changes

This fix a bug, when the params tab become empty if one of the field is a subform with own fieldset


### Testing Instructions
Apply patch.
Add next subform field to Custom HTML module (in `<fieldset name="options"`):
```xml
<field name="test_fields" type="subform" label="test_fields"
  filter="FooBar::filterTest" multiple="true" min="1" groupByFieldset="true">
   <form>
    <fieldset name="test1" label="fieldset 1">
     <field name="test_field" type="text" label="TESTFIELD1"/>
    </fieldset>
    <fieldset name="test2" label="fieldset 2">
     <field name="test_field2" type="text" label="TESTFIELD2"/>
    </fieldset>
   </form>
</field>
```
Open the module for editing, check the options tab (or where field was added)

### Expected result
you see there all fields, and subform field also


### Actual result
the tab are empty




### Summary of Changes

Allow to use a custom filter with subform field.
The same as #27561 but for Joomla 4.0


### Testing Instructions

Apply patch, create a subform field , somwhere in CustomHTML module, with custom filter:
```xml
<field name="test_fields" type="subform" label="test_fields" 
filter="FooBar::filterTest" multiple="true" min="1">
  <form>
    <field name="test_field" type="text" label="TESTFIELD1"/>
  </form>
</field>
```

Add custom filter class, somwhere in bottom of `plugins/system/debug/debug.php`:
```php
class FooBar
{
	static function filterTest($value)
	{
		JFactory::getApplication()
		 ->enqueueMessage('Filter works: ' . json_encode($value));
		return $value;
	}
}
```

Then create a Custom module in backed, and try save it.
Look for the message you got


### Expected result
You should get 2 message:
`Filter works: {"test_fields0":{"test_field":""}}`
and
`Module saved`


### Actual result
You get 1 message
`Module saved`
that means the custom filter was ignored


### Summary of Changes

Fix regression that not allow to use a custom filter with subform field, was introduced by one of previous update.


### Testing Instructions

Apply patch, create a subform field , somwhere in CustomHTML module, with custom filter:
```xml
<field name="test_fields" type="subform" label="test_fields" 
filter="FooBar::filterTest" multiple="true" min="1">
  <form>
    <field name="test_field" type="text" label="TESTFIELD1"/>
  </form>
</field>
```

Add custom filter class, somwhere in bottom of `plugins/system/debug/debug.php`:
```php
class FooBar
{
	static function filterTest($value)
	{
		JFactory::getApplication()
		 ->enqueueMessage('Filter works: ' . json_encode($value));
		return $value;
	}
}
```

Then create a Custom module in backed, and try save it.
Look for the message you got


### Expected result
You should get 2 message:
`Filter works: {"test_fields0":{"test_field":""}}`
and
`Module saved`


### Actual result
You get 1 message
`Module saved`
that means the custom filter was ignored




### Summary of Changes

Fix little regression introduced by #27473

### Testing Instructions
Apply path, and check the tabs between Set 2, Set 1, and Set 0 of TinyMCE builder plugin


### Expected result
They works


### Actual result
They not works



### Summary of Changes 
As title says. Dates are displayed as entered in db, i.e. not "translated" to the format used by the language, contrary to articles for example (see `PublishedButton.php` ).

Therefore this PR adds the correct `HtmlHelper` method.

### Testing Instructions
Best way to test is using in admin the fa-IR (Persian) language, as the format there should be jalali.
Display `administrator/index.php?option=com_finder&view=index`after indexing.

The screenshot below are captured after applying https://github.com/joomla/joomla-cms/pull/27554#issuecomment-575871283 (and using npm) as it corrects the text alignment.
It is not necessary to do so to see the results of this PR.
### Before patch
<img width="1083" alt="Screen Shot 2020-01-18 at 07 11 11" src="https://user-images.githubusercontent.com/869724/72660069-d3549680-39c8-11ea-894d-02c793efa19c.png">


### After patch
<img width="911" alt="Screen Shot 2020-01-18 at 08 36 07" src="https://user-images.githubusercontent.com/869724/72660430-1402de80-39ce-11ea-8c24-92a0f9d0f8cf.png">



The CSS for the control-group field (most Joomla fields) uses an old floating hack to align the label with the field. I presume this is something that predates even J3. Basically it floats the label to take it out of the flow of the page and then places a left margin on the field to give it a fixed inset width. I propose moving them to use flex instead. It is a typical scenario flex is used designed for.

- Less CSS required
- Flex naturally supports RTL so no RTL CSS required.
- Media queries look at the width of the viewport and are the only way to change the orientation of the current control-group fields. Flex would allow us to change the orientation of the field depending on the space available to it. A much more versatile and safer way to approach responsive fields especially.

It is a change that would touch a large part of the Joomla UI so I am reluctant in making such a change without bringing it up as an issue first. Maybe there is a reason this wasn't done before that I am unaware of?

### Summary of Changes
Remove title tooltip that has redundant info overlapping tooltip.


### Testing Instructions
Install Multilingual Sample Data.
Go to Articles list.
Under Association column, hover over a badge.
See tooltip overlapping tooltip.

Do the same for Categories, Contacts, News Feeds, and Menus.



### Actual result
![tooltip](https://user-images.githubusercontent.com/368084/72635475-c3c64680-3911-11ea-8be5-6004cd041e79.jpg)


### Summary of Changes
Fix `Invalid argument supplied for foreach() in \libraries\src\Form\FormField.php on line 1134` by checking that it is an array.


### Testing Instructions
* Create a text field.
* Create a subfield field.
* Edit an article (leave subfield field empty).
* Save the article.
* Check PHP error log.
* Apply PR.
* Check PHP error log for no errors.




### Steps to reproduce the issue

I created these fields in my custom module backend as below :

     <field name="show_option" type="radio" default="0" label="Radio" description="Desc" class="btn-group btn-group-yesno">
          <option value="0">Hide</option>
          <option value="1">Show</option>
     </field>
     
     <field name="option_name" type="text" default="0" label="Text" description="Desc" showon="show_option:1"/>`

### Expected result
When I choose 'show_option' to 'Show' the 'option_name' field will automatically be shown under the radio field.


### Actual result
The 'option_name' field will only be shown after I save the form.


### System information (as much as possible)



### Additional comments


Since the change in global configuration to use True/False instead of 1/0 the display of the system information missing some important information

![image](https://user-images.githubusercontent.com/1296369/72605721-37b61e00-3915-11ea-9b66-6512d082204d.png)

Basically anything with a value of false doesnt display anything