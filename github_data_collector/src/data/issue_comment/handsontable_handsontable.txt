### Description
<!--- Tell us what happens and what should happen -->
The 'freeze_column' and 'unfreeze_column' won't work as keys of a custom dropdown menu.

### Steps to reproduce
<!--- Provide steps to reproduce this issue -->
1. Try to open context menu to freeze a column
2. Reload the page 
3. Try to open dropdown menu to freeze a column

**Result**
You can see that not only the option does not work it also does not translate the key to it's default name.

![Zrzut ekranu 2020-01-17 o 14 56 34](https://user-images.githubusercontent.com/10757813/72617633-b0c76c80-3939-11ea-8899-f6a57001a0ec.png)


### Demo
<!--- Provide a link to a live example on JSFiddle or Codepen or fill the following demo with your settings -->
https://jsfiddle.net/h5kgw6pa/2/

### Your environment
* Handsontable version: 7.3.0
_It doesn't seem to be related to any version_
* Browser Name and version: Chrome 79
* Operating System: Windows 10


### Context
<!--- Why is this change required? What problem does it solve? -->
All input elements owned by HOT got an attribute "data-hot-input" which are identified by that key. Previously it was done by searching a proper class name which was a lot less extendable.

The documentation has to be updated (https://github.com/handsontable/docs/pull/92). The "input" element which is created in the `createElements` method must have an `"data-hot-input"` attribute (https://handsontable.com/docs/7.3.0/tutorial-cell-editor.html#-passwordeditor-extending-an-existing-editor).

Currently, I've removed className checking and replaced it with attribute checking. This can be treated as a breaking change. When a developer has implemented a custom editor with class name set as "handsontableInput" (this was a workaround previously) then this stops working - the input element will lose focus. 

### How has this been tested?
<!--- Please describe in detail how you tested your changes (doesn't apply to translations). -->
E2E tests.

It can be tested using this demo https://codesandbox.io/s/dazzling-butterfly-t85dt. With the previous version <kbd>ESC</kbd>-aping an editor didn't work https://jsfiddle.net/6po2scjb/.

### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature or improvement (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Additional language file or change to the existing one (translations)

### Related issue(s):
1. #6383

### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My code follows the code style of this project,
- [x] My change requires a change to the documentation.

In https://github.com/handsontable/handsontable/pull/6157, the relation between the frozen line and any kind of border is implemented according to the following spec:

> ### Edges with the frozen line
> 
> We do not render the part of a border that overlaps with a freeze line. However, if the width of the border is bigger than 1, we render the part of the border that bleeds on the other side of the freeze line.

However, today @wojciechczerniak and @krzysztofspilka suggested that this gives a bad UI experience, and it would be better if we added a sesne of depth. That means a cell selection should be rendered:

- above the frozen line, when the selection is on an overlay with a higher z-index
- behind the frozen line, when the selection is on an overlay with a lower z-index

The request is only about selection borders. Custom borders should always have a lower priority than the frozen line.

Suggested change to the spec:

> ### Edges with the frozen line
> 
> #### Custom borders
> We do not render the part of a custom border that is on the freeze line. However, if the width of the custom border is bigger than 1, we render the part of the custom border that bleeds on the other side of the freeze line.
> 
> #### Selection borders
> For selections made on a pane that is lower in the visual hierarchy, we do not render the part of a selection border that is on the freeze line. 
> 
> For selections made on a pane that is higher in the visual hierarchy, we render the part of a selection border that is on the freeze line.

This is proposed outside of scope for 8.0.0.

### Description
There is a hole after selection and fileHandle square on printed Handsontable.  
If you printed then when a selection is rendered.

Like @wojciechczerniak [wrote](https://github.com/handsontable/handsontable/issues/6626#issuecomment-575185454), the web browser changed the background color to white. The default browser setting for "print background color" is no to limit ink waste.


`Print screen from browser`
<img width="226" alt="Screenshot 2020-01-16 at 16 16 01" src="https://user-images.githubusercontent.com/30186818/72537062-ba8a9a80-387b-11ea-9543-d29d612aa058.png">

`Print screen from print`
<img width="314" alt="Screenshot 2020-01-16 at 16 16 25" src="https://user-images.githubusercontent.com/30186818/72537068-bbbbc780-387b-11ea-8386-9eacc432246d.png">

Tested locally.

### Your environment
* Handsontable version:
* Browser Name and version: not related
* Operating System: macOS 


### Description
We have a scenario with several columns where the cells contain an array of numbers (IDs). For these cells we've created a custom multi-select editor. The issue that we're experiencing is that the copy/paste functionality (CTRL+C/CTRL+V) provided by the built-in plugin doesn't seem to work with a value containing an array. 

### Steps to reproduce
<!--- Provide steps to reproduce this issue -->
1. Open the demo (see below).
2. Select the first cell of the first row (containing the comma-separated values).
3. Press CTRL+C or CMD+C
4. Select the first cell of the second row.
5. Press CTRL+V or CMD+V

=> The values of the first cell are not copied to the second cell. Performing the same for cells of the second or third column does work as expected.

### Demo
https://codesandbox.io/s/copypaste-array-values-ee5jz

### Your environment
* Handsontable version: 7.2.2
* Browser Name and version: Chrome
* Operating System: Windows


### Description
During the second horizontal scrolling, we lose the right border rowHeaders when fixedRowsTop and fixedRowsBottom are enabled. Only the border that is not associated with fixed is not displayed.

I scrolled it with the Apple Magic mouse, without clicking or losing focus. That can be reproduced with TrackPad or by pressing the scrolling wheel and moving the mouse sideways in a typical mouse.

### Steps to reproduce
<!--- Provide steps to reproduce this issue -->
1. Open demo https://jsfiddle.net/aninde/eq263gvh/ `8.0.0-svg-#PR6157 v.` 
2. Scroll it horizontal two times

### Actual result:
Right rowHeader is missing
<img width="143" alt="Screenshot 2020-01-16 at 12 08 44" src="https://user-images.githubusercontent.com/30186818/72520098-ff510a00-3858-11ea-82c2-bc3ea6d3396b.png">
![right-header-border-ff-6157](https://user-images.githubusercontent.com/30186818/72520104-01b36400-3859-11ea-955c-a3f64a8669ce.gif)


### Expected result:
All rowHeaders should be visible while scrolling in each direction.
https://jsfiddle.net/aninde/q7k6cmz8/  `7.3.0 v.` fixed
<img width="94" alt="Screenshot 2020-01-16 at 12 09 35" src="https://user-images.githubusercontent.com/30186818/72520149-1bed4200-3859-11ea-9781-0ea8f7938862.png">


### Demo
<!--- Provide a link to a live example on JSFiddle or Codepen or fill the following demo with your settings -->
https://jsfiddle.net/aninde/eq263gvh/ `8.0.0-svg-#PR6157 v.` broken
https://jsfiddle.net/aninde/q7k6cmz8/  `7.3.0 v.` fixed

### Your environment
* Handsontable version: 8.0.0-svg-PR#6157
* Browser Name and version: Firefox, Safari, Chrome
* Operating System: macOS


### Description
<!--- Tell us what happens and what should happen -->
I want keep all the cells of the handsontable readOnly initilly. At the end of each row want add an edit botton on clicking on which a user should get edit access for that specific row.
i tried using setCellMeta event but, i am getting below error everytime i use it,
**Cannot read property 'setCellMeta' of undefined**


Can anyone please suggest me how can i implement this requirment in TypeScript
### Steps to reproduce
<!--- Provide steps to reproduce this issue -->
1.
2.
3.

### Demo
<!--- Provide a link to a live example on JSFiddle or Codepen or fill the following demo with your settings -->
https://jsfiddle.net/handsoncode/8ffpsqt6/

### Your environment
* Handsontable version:
* Browser Name and version:
* Operating System:


### Description
<!--- Tell us what happens and what should happen -->
I've created a pretty unusual example where we use `-webkit-xxx-large` value of the `font-size` attribute for the Handsontable container.

Once we set it up `autoColumnSize` 'does the job' and resizes the columns respectively to the 'new content'. The `autoRowSize` that is also applied by default ignores the font change.

### Steps to reproduce
<!--- Provide steps to reproduce this issue -->
1. Open the demo https://jsfiddle.net/h9tqpc7n/1/

![image](https://user-images.githubusercontent.com/10757813/72434803-d79c6c00-379c-11ea-8749-ff885edc89c4.png)

2. Go to this example https://jsfiddle.net/8xu9s0e2/

![image](https://user-images.githubusercontent.com/10757813/72435596-b63c7f80-379e-11ea-9fdd-b89eddf7c64b.png)

This is the effect if we initiate the table and then change the `font-size`. To get the table from point 1, you can
* use `render()`
* click the table

3. Go to https://jsfiddle.net/h9tqpc7n/2/

![image](https://user-images.githubusercontent.com/10757813/72434927-1f22f800-379d-11ea-92a2-f6a40123889e.png)

This is how it looks before `6.0.0`, in `5.0.2`

### Demo
<!--- Provide a link to a live example on JSFiddle or Codepen or fill the following demo with your settings -->
https://jsfiddle.net/h9tqpc7n/1/

### Additional info
* It is not supported by any other browser than Firefox and Chrome (+chrome for Android) https://caniuse.com/#search=xxx-large
* the `manualRowResize` gets back to the original cell's height
![GIF](https://user-images.githubusercontent.com/10757813/72435367-36161a00-379e-11ea-8c23-f39a6626db50.gif)
https://jsfiddle.net/zgn96kmp/

### Your environment
* Handsontable version: 7.3.0
* Browser Name and version: Chrome 79, FF 72
* Operating System: Windows 10


### Description
A hidden column appears after collapse/ expand header column

### Steps to reproduce
<!--- Provide steps to reproduce this issue -->
1.I collapse the column "I"
2.if i expand the column "I" , the Hidden column O appears


### Demo
<!--- Provide a link to a live example on JSFiddle or Codepen or fill the following demo with your settings -->
https://jsfiddle.net/jeanmarc/3odc4w91/11/

### Your environment
* Handsontable version:PRO 7.3.0
* Browser Name and version:Chrome 79
* Operating System: Windows 10


### Description

The SVG borders PR (https://github.com/handsontable/handsontable/pull/6157) contains a visual breaking change:

> When scrolling horizontally or vertically on the border fixed/frozen col/row, the line selection or right border of the selected cell if the border is bigger than 1 px.
> Check out demo https://codesandbox.io/s/gifted-noyce-hdvx5
> ![svg-stage2-6594-ff](https://user-images.githubusercontent.com/30186818/71974182-1cf6f180-3211-11ea-8724-b952d04e2b30.gif)

More details about that problem here by @aninde: https://github.com/handsontable/handsontable/pull/6594#issuecomment-572005899

---

@krzysztofspilka, @wojciechczerniak and I have discussed how to change the spec to fix the problem reported in https://github.com/handsontable/handsontable/pull/6594#issuecomment-572005899. 

Our conclusion is to introduce a new feature in this PR: "Frozen line" [1]. The borders (incl. custom borders and selection borders) will not be rendered on the frozen line, except for the parts of borders that are thicker than the frozen line [2].

This will be fixed within the SVG borders PR https://github.com/handsontable/handsontable/pull/6157.

Links to the updated specs:

- [1] https://kb.handsontable.com/display/HAN/Frozen+line
- [2] https://kb.handsontable.com/display/HAN/Borders ([change highlight](https://kb.handsontable.com/pages/diffpagesbyversion.action?pageId=22053066&selectedPageVersions=9&selectedPageVersions=8))

🚨 This is a (Visual) breaking change