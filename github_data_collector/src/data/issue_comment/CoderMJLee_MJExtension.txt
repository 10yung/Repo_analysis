



我从服务器获取到的日期格式是 "yyyy-MM-dd"，通过
`- (id)mj_newValueFromOldValue:(id)oldValue property:(MJProperty *)property;`
可以将NSString类型的"2018-12-12"转换为 NSDate类型的 2018-12-11 16:00:00 +0000。
但是将Model反转回Json时，会转成NSString类型的"2018-12-11 16:00:00 +0000"，有没有方法可以Model反转Json时也转成"2018-12-12"？类似于`mj_newValueFromOldValue`的方法。

谢谢大佬们解答！
针对+[NSObject mj_objectArrayWithKeyValuesArray:]方法进行了性能提升，提升50%
请问用
`mj_object(withKeyValues: keyValues, context: NSManagedObjectContext.mr_default())`
转换得到的object会因为调用
`NSManagedObjectContext.mr_default().mr_saveToPersistentStoreAndWait()`
而导致被存储到本地数据库么？
如果会，如何避免被存下来？
当coreData嵌套时无法解析子类，因为coredata对应为NSSet而非NSArray。

coredata 建立了两个entity  entity1 包含entity2    由于core data里边包含关系 是用NSSet 集合 所以用您这个解析的时候失败了  
            // 不可变 -> 可变处理
            if (propertyClass == [NSMutableArray class] && [value isKindOfClass:[NSArray class]]) {
                value = [NSMutableArray arrayWithArray:value];
            } else if (propertyClass == [NSMutableDictionary class] && [value isKindOfClass:[NSDictionary class]]) {
                value = [NSMutableDictionary dictionaryWithDictionary:value];
            } else if (propertyClass == [NSMutableString class] && [value isKindOfClass:[NSString class]]) {
                value = [NSMutableString stringWithString:value];
            } else if (propertyClass == [NSMutableData class] && [value isKindOfClass:[NSData class]]) {
                value = [NSMutableData dataWithData:value];
            }
            是不是你这里需要加一个NSSet的呢

mj_setKeyValue:方法里，可变处理的转化好像没有发现在哪里用到，这个处理有什么意义吗？

``` objc
// 不可变 -> 可变处理
            if (propertyClass == [NSMutableArray class] && [value isKindOfClass:[NSArray class]]) {
                value = [NSMutableArray arrayWithArray:value];
            } else if (propertyClass == [NSMutableDictionary class] && [value isKindOfClass:[NSDictionary class]]) {
                value = [NSMutableDictionary dictionaryWithDictionary:value];
            } else if (propertyClass == [NSMutableString class] && [value isKindOfClass:[NSString class]]) {
                value = [NSMutableString stringWithString:value];
            } else if (propertyClass == [NSMutableData class] && [value isKindOfClass:[NSData class]]) {
                value = [NSMutableData dataWithData:value];
            }
```
