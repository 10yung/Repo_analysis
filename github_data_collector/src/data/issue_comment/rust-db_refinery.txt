Fixes #39.

I wanted to use [`intra_rustdoc_links`](https://rust-lang.github.io/rfcs/1946-intra-rustdoc-links.html) everywhere to fix the broken links but it looks like proc-macros aren't supported.

So, I used relative paths for in-crate linking (`macro.embed_migrations.html`) and docs.rs urls for cross-crate linking (https://docs.rs/refinery/~0/refinery/macro.embed_migrations.html).
[`refinery::Runner`](https://docs.rs/refinery/0.2.0/refinery/struct.Runner.html) docs don't include the `Runner::run` and `Runner::run_async` functions.

I noticed that docs metadata was commented out in `Cargo.toml`:

```toml
# [package.metadata.docs.rs]
# features = ["postgres", "mysql", "sqlite", "extras"]
# no-default-features = true
```

was this intentional?

Also, the links for `embedded_migrations` and `include_migration_mods` are broken in https://docs.rs/refinery/0.2.0/refinery/index.html.
Django and other more mature ORMs such as TypeORM can automatically generate migrations based on the data structure. This increases productivity and frees users from having to keep DB layout and code data structures in sync.

In Enterprise settings, there are tooling that take the declarative database management concepts even further for more robust database management: https://docs.microsoft.com/en-us/sql/relational-databases/data-tier-applications/data-tier-applications?view=sql-server-2017

However for simple use cases the Django style automigrations will suffice.