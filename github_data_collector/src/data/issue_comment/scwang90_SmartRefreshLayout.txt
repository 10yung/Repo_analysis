         * 1.全局关闭（推荐）
         *          SmartRefreshLayout.setDefaultRefreshInitializer(new DefaultRefreshInitializer() {
         *             @Override
         *             public void initialize(@NonNull Context context, @NonNull RefreshLayout layout) {
         *                 layout.getLayout().setTag("close egg");
         *             }
         *         });

这种设置方式也无效
**详细描述**
对问题进行清晰而简明的描述，把握问题的关键点。

**使用版本**
```gradle
implementation  'com.scwang.smart:refresh-layout-kernel:2.0.0-alpha-1'      //核心必须依赖
implementation  'com.scwang.smart:refresh-header-classics:2.0.0-alpha-1'    //经典刷新头
```
**布局代码**
```xml
    <com.scwang.smart.refresh.layout.SmartRefreshLayout
        android:id="@+id/srl_refresh"
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        app:srlDragRate="0.75"
        app:srlEnableLoadMore="false"
        app:srlEnablePureScrollMode="true"/>
```



**详细描述**
对问题进行清晰而简明的描述，把握问题的关键点。

**使用版本**
```gradle
implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0' 
implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0' 
```
**使用代码**
```java
SmartRefreshLayout.setDefaultRefreshHeaderCreator(new DefaultRefreshHeaderCreator() {
                @Override
                public RefreshHeader createRefreshHeader(Context context, RefreshLayout layout) {
                    return new ClassicsHeader(context).setSpinnerStyle(SpinnerStyle.Translate);
                }
            });
        SmartRefreshLayout.setDefaultRefreshFooterCreator(new DefaultRefreshFooterCreator() {
                @Override
                public RefreshFooter createRefreshFooter(Context context, RefreshLayout layout) {
                    return new ClassicsFooter(context).setSpinnerStyle(SpinnerStyle.Translate);
                }
            });
RefreshLayout refreshLayout = (RefreshLayout)findViewById(R.id.refreshLayout);
refreshLayout.setOnRefreshListener(new OnRefreshListener() {
    @Override
    public void onRefresh(RefreshLayout refreshlayout) {
        refreshlayout.finishRefresh(2000);
    }
});
refreshLayout.setOnLoadMoreListener(new OnLoadMoreListener() {
    @Override
    public void onLoadMore(RefreshLayout refreshlayout) {
        refreshlayout.finishLoadMore(2000);
    }
});
```

**布局代码**
```xml
<com.scwang.smartrefresh.layout.SmartRefreshLayout
    xmlns:app="http://schemas.android.com/apk/res-auto"
    android:id="@+id/refreshLayout"
    android:layout_width="match_parent"
    android:layout_height="match_parent"
    android:background="#444444"
    app:srlPrimaryColor="#444444"
    app:srlAccentColor="@android:color/white"
    app:srlEnablePreviewInEditMode="true">
    <com.scwang.smartrefresh.layout.header.ClassicsHeader
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/>
    <TextView
        android:layout_width="match_parent"
        android:layout_height="match_parent"
        android:padding="@dimen/dimenPaddingCommon"
        android:background="@android:color/white"
        android:text="@string/description_define_in_xml"/>
    <com.scwang.smartrefresh.layout.footer.ClassicsFooter
        android:layout_width="match_parent"
        android:layout_height="wrap_content"/>
</com.scwang.smartrefresh.layout.SmartRefreshLayout>
```



**附加信息**
使用中 没什么问题，就是配合viewmodel 使用 ，假如下拉到第二页 ，再切屏时，此时的状态下拉就可进行刷新（类似于当前页数时第一页 ，实际是第二页）上拉应该滑到顶部再刷新，求看看怎么解决 

当正在加载更多时，调用 `refreshLayout.closeHeaderOrFooter() 和 recyclerView.scrollToPosition(0)` 后会发生 RecyclerView 没有完全置顶的问题。

Demo 中可以复现这个问题，修改 嵌套滑动->整体嵌套 代码，如下：
![置顶 bug](https://user-images.githubusercontent.com/8703758/71903318-c4870c00-319e-11ea-85c9-2a54377c0518.png)


**具体说下**
屏幕只有一屏数据时，执行下拉操作，然后马上执行向上滑【没有上拉加载更多功能】再执行下拉操作，反复这样，最终列表卡住了

**为什么**
列表滑动事件冲突

本来想引入该库的，代码分析，技术评估，搞了好久……最后被一个彩蛋否决了！！！一次彩蛋，后面可能会有更多彩蛋，无法信任这种操作！！！代码要远离彩蛋，且行且珍惜！！！
**详细描述**
先调用autoRefreshAnimationOnly()，然后获取数据列表，紧接着调用finishRefresh(true)，当点击RecyclerView条目时，会触发onRefresh回调

**使用版本**
```gradle
implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.1.0'
implementation 'com.scwang.smartrefresh:SmartRefreshHeader:1.1.0'
```
**使用代码**
```java
mSmartLayout.autoRefreshAnimationOnly();
mSmartLayout.finishRefresh(true);
```

**问题重现**
首次进入页面发起网络请求时调用autoRefreshAnimationOnly()，网络请求结束调用.finishRefresh(true),此时点击RecycleView条目或者滑动列表都偶发触发刷新onRefresh，
尝试finishRefresh(400,true,false),结果导致下拉刷新有动画不执行onRefresh回调

**预期行为**
点击列表条目不要触发onRefresh

**附加信息**
在此处添加任何有关该问题的任何其他说明。
怀疑是autoRefreshAnimationOnly执行未结束就调用.finishRefresh(true)引发的错乱，尝试finishRefresh(400,true,false),结果导致下拉刷新有动画不执行onRefresh回调
设置某个header后，再设置其他header，后者的展示高度还是前的高度，即没有重新计算新设置header的高度

demo也存在这问题，我录制了下视频

PhoenixHeader的高度为200dp
MaterialHeader的高度为100dp

默认先设置MaterialHeader刷新头部，第一次动态设完PhoenixHeader刷新头部后，再动态设置MaterialHeader刷新头部，此时MaterialHeader的高度为200dp和预期的100dp不符合

由于新设置的MaterialHeader没有走测量逻辑，高度直接复用了上一个header的高度导致的！具体为什么没有走测量还没有发现问题……

![71649716-e8d08c00-2d4b-11ea-9930-b95f5307f496](https://user-images.githubusercontent.com/20511081/71658598-a6c13d80-2d7f-11ea-89e8-3f24157e1f63.gif)




问题一：
![企业微信截图_1577950529743](https://user-images.githubusercontent.com/20511081/71656231-8ee4bc00-2d75-11ea-980c-9393c41dd532.png)

在MaterialHeader的Ring中，绘制圆环的时机早于圆环背景的绘制，导致如果绘制背景生效的时候圆环会被背景覆盖！

如图正确的顺序应该是先绘制红色区域再绘制绿色区域！！！

问题二：
![企业微信截图_15779507264513](https://user-images.githubusercontent.com/20511081/71656410-07e41380-2d76-11ea-8fe7-9d4c467c1967.png)

在设置圆环进度条背景的时候，还设置了圆环载体ImageView的背景色，导致圆环背景色被View覆盖呈现矩形！！！与预期只改变圆环圆形背景不符合预期，在app换肤时候发现的！


用于区分这两种情况：a.用户拖动触发刷新，b.autoRefresh等方法触发刷新。目的在于实现不同的刷新效果。https://github.com/scwang90/SmartRefreshLayout/issues/72#issuecomment-562411978