When i was decompiling douban.apk, I can not see Classes. 
ClassyShark hint "error loading archive".
It will be great to have simple text search in the selected file.
Currently it's all flat, and XML is mixed with Java and others...
Not even sorted by type...
It offers various things that are missing here, and vice versa.

It would be great to have a single library that has both of what those libraries offer.

We could, this way, get resources data properly, maybe even parse more...


Take this sample Hello-world APK, and open the file "ic_launcher_foreground.xml" :

![image](https://user-images.githubusercontent.com/5357526/69890947-a86f8f80-1301-11ea-96c0-7b13cef612c8.png)

[Uploading app-debug.zip…]()

Not just a jar file.
But a real dependency that we can use in Android projects.

If this is already possible, please write it on the main page of the repository, and show there also tutorials of how to use it with various ways of input, such as InputStream, Uri, etc...

The reason I don't mention File is that sadly Android is becoming very much against it, preferring the terrible SAF API instead.
Currently there is no way to find those that belong to the current configuration, let alone to a locale.
There is no gradle dependency of the library, there is no jar file, there is no usage of "Shark.with" ...

I want to try it out, right on Android device.
I want to get manifest data, to get resources, to be able to view them, including app icons even if they are VectorDrawable or Adaptive icon.

The reason for that is that sadly Android has added new restrictions to get information from APK files, so it's impossible to do it for them unless I copy each APK file to my own path of the app, which is a waste of time and storage.
The export button does not seem to do anything.

1. Open APK.
2. Select AndroidManifest.xml
3. Press export button

Expected: AndroidManifest.xml is exported to the file system somewhere.

Actual: Nothing happens.

Related issue #152 and workaround is there.
The xml external entity is not disabled when parsing the xml string. When analyzing malicious apk or app, it may cause xml external entity injection.
![图片](https://user-images.githubusercontent.com/39950310/61424403-eb7a2900-a945-11e9-9ba7-80dfd70cf37d.png)
