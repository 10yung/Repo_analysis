related to #487

<!--
There are two main goals in this document, depending on the nature of your PR:

- description: please tell us about your PR
- checklist: please review the checklist

To help to quickly understand the nature of your pull request,
please create a description that incorporates the following elements:
-->

### What is accomplished by your PR?
This PR updates:
- the design system typo and colors
- uses composition API for the button component
- re-designs the button component according to the new designs

<img width="839" alt="Bildschirmfoto 2020-01-06 um 00 48 22" src="https://user-images.githubusercontent.com/1667598/71787980-4865ba80-301e-11ea-93ea-84e742afb345.png">


### Is there something controversial in your PR?
no

### Link to the Issue
#487 

# Checklist

### New Feature / Bug Fix

- [x] Run unit tests to ensure all existing tests are still passing
- [x] Add new passing unit tests to cover the code introduced by your PR
- [ ] Change documentation for the code introduced by your PR
- [x] Add Story / Design System Page for a new component introduced by your PR

<!--
Thanks for contributing!
-->

align all components with the new design system sketch file and rewrite all of them to use the composition api
which tools to use for web assembly? (Rust, webpack would be my first guess)

which use-cases make sense for web assembly?

provide generic use-cases as npm package?
to create some kind of a component development kit. this should make update of existing components easier in the future
create an addon that installs a firebase auth example that works with SSR via `vuesion add`
a component that provides a drop area, file-select and progress bar for multiple files to upload
desktop app, like [github desktop](https://github.com/desktop/desktop)

**Is your feature request related to a problem? Please describe.**
work with electron 

**Describe the solution you'd like**
work with electron 

**Describe alternatives you've considered**
work with electron 

**Additional context**
work with electron 

typical color picker (like sketch or procreate)

1. step: simple hex web colors
2. step: rgba color picker
3. step: HSL color picker
a component that allows users to draw with the mouse cursor or on touch devices -> usually, a native app feature -> one reason more to use a PWA over a native app
**Is your feature request related to a problem? Please describe.**
Not really. I'd like to implement Optimistic UI updates and I thought it's a good topic to cover with documentation or maybe add some extra support if we like.

**Describe the solution you'd like**
For example: I would like to load pages with the existing contents of the store and subsequently trigger an API request to patch those contents. This could be a practical scenario, but I'm aiming at something more general.

**Describe alternatives you've considered**
Continuing with the case above, an alternative would be to wait for API requests to finish before doing the route change. While this is a solid choice, sometimes you have certain resources that are unlikely to change in the span of a single session, so it's probably better to serve them from cache.

Again, this is just a practical scenario trying to illustrate the need to expand a bit more on caching.

**Additional context**
The goal of this issue is to discuss how these two concepts play into `vuesion`. Maybe writing a piece of documentation is enough.

Also, this library seems nice: https://github.com/superwf/vuex-cache
