This is a followup pull request to #712 (#709)

I included @lashus commit from the original PR in 2a8e9e637ee137eb692beb10adb16d25ea1b89cd
This prevents the GMagick error `No encode delegate for this image format`

See #732
When creating a GIF, more than 200 MB is spent and the PHP process freezes and gives a 404 error.
What is the reason for this? And how to fix it?
The total size of all frames (in base64) is only 10mb, where from so much memory consumption?

```
$imagine = new Imagine\Imagick\Imagine();
$image = '';
foreach ($framesBase64 as $frame){
 $data = explode( ',', $frame);
 $decoded = base64_decode($data[1]);
 if($image === ''){
   $image = $imagine->load($decoded);
 } else {
   $image->layers()->add($imagine->load($decoded));
 }
}
$gifdata = $image->get('gif', array(
                   'animated'       => true,
                   'animated.delay' => 40, // delay in ms
                   'animated.loops' => 0,   // number of loops, 0 means infinite
               ));
echo base64_encode($gifdata);
```
### Issue description

Imagine won't save a jpeg file with jfif extension although the library is able to crop the file.

### What version of Imagine are you using?

1.2.1

### What's the PHP version you are using?

7.2.17-1


### What's the imaging library you are using [gd/imagick/gmagick/any]?

gd

### What's the imaging library configuration 

GD Support => enabled
GD headers Version => 2.2.5
GD library Version => 2.2.5

### Minimal PHP code to reproduce the error: 

Example file : 
[imagetest.tar.gz](https://github.com/avalanche123/Imagine/files/3846774/imagetest.tar.gz)
(it's tar gz as github doesn't accept jfif images)

```php

$stream = fopen($filename, 'r');
$imagine = new Imagine\Gd\Imagine();
$image = $imagine->read($stream);
$manipulator = $image->copy();
$box = new Box(300,300);
$manipulator = $manipulator->thumbnail($box);
$manipulator->save(__DIR__ . '/altered-' . basename($filename));

```

### Proposed solution
Replace `\Imagine\Gd\Image::normalizeFormat()` by

```php
    private function normalizeFormat($format)
    {
        $format = strtolower($format);

        if ('jpg' === $format || 'pjpeg' === $format || 'jfif' === $format) {
            $format = 'jpeg';
        }

        return $format;
    }
```



Kindly help solve this issue. I'm trying to upload a profile pic it brings this error kindly assist, I'm using yii2.

Class 'Imagine\Gd\Imagine' not found

the code is this

422423424425426427428429430431432433434435436437438439440                                    $ext = "png";
                // generate a unique file name to prevent duplicate filenames
                $model->user_photo = Yii::$app->user->identity->user_name . "_ppic.{$ext}";  //Yii::$app->security->generateRandomString().".{$ext}";
                // the path to save file, you can set an uploadPath
                // in Yii::$app->params (as used in example below)
                Yii::$app->params['uploadPath'] = "uploads/user_image/";
                $path = Yii::$app->params['uploadPath'] . $model->user_photo;
                $image->saveAs($path);
 
                $imagine = new Imagine();
                $photo = $imagine->open($path);
                $photo->thumbnail(new Box(160, 160))->save($path, ['quality' => 90]);
 
                if ($model->save()) {
 
                    Yii::$app->session->set("UserImage", $model->user_photo);
                    //return $this->redirect(['profile']);
                    Yii::$app->session->setFlash('success', 'Profile updated successfully');
                    return $this->redirect(Yii::$app->request->referrer); //$this->goHome();






I use:
`

        $imagine = new Imagine();

        $fontContent = $imagine->font($fontPathContent, 50, $palette->color('#000'));

        $image = $imagine->open(Yii::getAlias('@common/files/templates/1.png'));

        $image->draw()->text($value, $fontContent, $positionContent, 0, 1650);
`
Flatten does accidently reset the format to gif and so it need to be set after `$this->flatten`
I've changed the cropping behaviour as written in #709. Not sure though how to test it and also without using distort and SRT we are changing the image size (in GD that doesnt happen). Not sure how to refactor it other way though as with using image distortion with SRT it's hard to rotate it in same way (using same point).
### Issue description

Gd and Imagick drivers leave the image in a different state after rotation. 

### What version of Imagine are you using?

1.2.1-dev

### What's the PHP version you are using?

PHP 7.2.1


### What's the imaging library you are using [gd/imagick/gmagick/any]?

Imagick, Gd

### Minimal PHP code to reproduce the error: 

```php

$size = $image->getSize();
$image->rotate(45);
$image->crop(new Point(0, 0), $size);

```

Output by Gd driver:
![Gd-output](https://user-images.githubusercontent.com/7146670/56239037-e330fa00-6087-11e9-9d5f-b6afc8510b0a.jpeg)

Output by Imagick driver:
![Imagick-output](https://user-images.githubusercontent.com/7146670/56239061-f0e67f80-6087-11e9-9b5c-6bbca80c4271.jpeg)

The problem is that Imagick does not update image geometry after the rotation. I think a similar issue is described here: https://phpimagick.com/Tutorial/imageGeometryReset

Output from Gd seems to be the correct one.

The solution would be to call `setImagePage()` inside Imagick driver after the rotation.


Created applyMask() fix for #460 