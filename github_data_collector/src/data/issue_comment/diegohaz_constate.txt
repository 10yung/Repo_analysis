Hello there, I think we still need a helper HOC for applying the container provider named `withProvider/withContainer/withContainerProvider` or whatever. Otherwise, we always have to modify some component's parent to add such codes `<Container.Provider>....</Container.Provider>` and when we decide to remove a `context` we have to modify its parent again and again.
I have a request that adding the HOC helper:

```javascript
import React, { useState, useContext, useEffect } from "react";
import createContaine, { withProvider }r from "constate";
import {userCounter, MainCounter} from '../containers/counter'
import { Button, Count } from '../components'

// we wish use context inside the DynamicImportedRoutePage(current componet),
// not only its descendants
function DynamicImportedRoutePage() {
   // we may use count context here
  const { increment } = useContext(MainCounter.Context);

    useEffect(
       () => {
           increment()
       },
       []
     )

  return (
    <>
      <Count />
      <Button />
    </>
  );
}

// Use the HOC
export default withProvider(MainCounter)(DynamicImportedRoutePage)
```
When we decide to refactor the `DynamicImportedRoutePage`, just remove/change the HOC and update the function body
