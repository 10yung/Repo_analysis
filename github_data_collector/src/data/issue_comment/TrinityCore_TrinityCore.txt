**Changes proposed:**
Move script from C++ to SAI.

**Target branch(es):** 3.3.5

~**Issues addressed:**~

**Tests performed:** Works as intended.

~**Known issues and TODO list:**~


<!--- Notes
- Enable the setting "[√] Allow edits from maintainers." when creating your pull request.
- If this PR only contains SQL files, open a new issue instead and post or link the SQL in the issue.
- When adding new SQL files, name them 9999_99_99_99_db_name.sql to reduce the chance of possible merge conflicts.
--->

**Description:**

PathGenerator::BuildPolyPath() currently creates a 2-points path if start and end positions are on the same poly. It should instead create a smooth path in the same way PathGenerator::BuildPointPath() works (and in particular PathGenerator::FindSmoothPath() ), with a limited distance and slope between each point.

29bf280e3496cf13c24ccb20e37da29d3bfa74d9 tried to fix it but all the closestPointOnPolyBoundary() calls caused additional points on the border to be added to the path.

**Current behaviour:**

PathGenerator::BuildPolyPath() currently creates a 2-points path if start and end positions are on the same poly.

**Expected behaviour:**

It should instead create a smooth path in the same way PathGenerator::BuildPointPath() works (and in particular PathGenerator::FindSmoothPath() ), with a limited distance and slope between each point.

**Steps to reproduce the problem:**

1. place character B on positions:
.go xyz -3282.670654 -2478.257324 24.3308734 0
2. then place character A with charge on:
.go xyz -3268.020752 -2486.342529 20.014091 0
3. then make character A charge character B, he will go underground.

![kMVRy1u](https://user-images.githubusercontent.com/1153754/72671086-9975a580-3a45-11ea-916b-6c0de85f2baf.png)

**Branch(es):**

3.3.5

9f8477cd112bf0f52e23afc9cdee4adfcf540de5

**Operating system:** Windows 10


<!--- Notes
- This template is for problem reports. For other types of report, edit it accordingly.
- For fixes containing C++ changes, create a Pull Request.
--->

**Current behaviour:**
Ulduar: Xt-002 Deconstructor seems to have serious issues.  When he exposes his heart, he starts moving and when switching tanks/agro he instantly resets.

**Expected behaviour:**
The boss should not move at all if the heart is exposed, otherwise the encounter cannot progress or be completed.

**Steps to reproduce the problem:**

1. Go to Ulduar
2. Engage Xt-002, trigger Expose Heart
3. Watch how he starts moving around

**Branch(es):**
3.3.5a
c1df161e1ddf95584030480d3dcb15149aacd7a6

**Operating system:** CHANGEME OS
Windows x64 | 2012 Server Edition

**Changes proposed:**
Changed script so that it uses gossips from DB. Also moved it to new registration system.

**Target branch(es):** 3.3.5

~**Issues addressed:**~

**Tests performed:** Works as intended

~**Known issues and TODO list:**~


<!--- Notes
- Enable the setting "[√] Allow edits from maintainers." when creating your pull request.
- If this PR only contains SQL files, open a new issue instead and post or link the SQL in the issue.
- When adding new SQL files, name them 9999_99_99_99_db_name.sql to reduce the chance of possible merge conflicts.
--->

- Add default visibility range with distance override
- Add Infinite gameobject check

**Target branch(es):** 3.3.5/master

- [x] 3.3.5
- [x] master

**Issues addressed:** Closes #  (insert issue tracker number)
https://github.com/TrinityCore/TrinityCore/issues/22986
https://github.com/TrinityCore/TrinityCore/issues/22984
**Description:** We need 2 new actions, one that allow to change light and an other to change the weather.

For OVERRIDE_LIGHT:  packet field names are AreaLightID, OverrideLightID, TransitionMilliseconds

For OVERRIDE_WEATHER: packet field names are State, Grade, Unk Byte

https://github.com/TrinityCore/TrinityCore/commit/529cabea68ab90e34ccafa276fc40a8f2723902b#diff-9eea3ad0b189ac095427d3c6c6ff68e7R3490-R3536

Example of quest:
OVERRIDE_LIGHT: https://www.youtube.com/watch?v=KHcr8MjbrfU
OVERRIDE_WEATHER: https://www.youtube.com/watch?v=vG8fb_qMzho

**Branch(es):** Both

**Changes proposed:**
The current movement update logic is interrupting auras before movement generators had their turn with updating their movement state. This was leading to the edge case issue that auras that should get interrupted by movement were falsely removed because the unit was still considered as moving while it might have stopped in the same update tick.

The most prominent case is the interrupting of instant cast channeled spells during chase movement.

We now wait until the movement generators had their shot to update their movement so the nasty dictatorship of UpdatePosition comes to an end.

**Target branch(es):** 3.3.5/master

- [x] 3.3.5
- [ ] master

**Issues addressed:** Closes #  (insert issue tracker number)
fixes #22908 properly this time

**Tests performed:** (Does it build, tested in-game, etc.)
- tested ingame on my 434 branch. Should be the same result on 335


**Description:** The SAI action Activate object doesn't work with gob type trap.
Example: https://woehead.way-of-elendil.fr/?object=179557 is a trap that cast the spell: https://woehead.way-of-elendil.fr/?spell=22888 once activated, if you spawn the gob and use the gm command .gob activate "guid" it will cast the spell.
But this sai will not.
``` sql
UPDATE `gameobject_template` SET `AIName`='SmartGameObjectAI' WHERE `entry`=179560;
DELETE FROM `smart_scripts` WHERE `entryorguid`=179560;
INSERT INTO `smart_scripts` (`entryorguid`, `source_type`, `id`, `link`, `event_type`, `event_phase_mask`, `event_chance`, `event_flags`, `event_param1`, `event_param2`, `event_param3`, `event_param4`, `action_type`, `action_param1`, `action_param2`, `action_param3`, `action_param4`, `action_param5`, `action_param6`, `target_type`, `target_param1`, `target_param2`, `target_param3`, `target_x`, `target_y`, `target_z`, `target_o`, `comment`) VALUES
(179560, 1, 0, 0, 60, 0, 100, 1, 1000, 1000, 0, 0, 9, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 0, 'go- On update- activate');
```
**Steps to reproduce the problem:**

1. Use the SAI above
2. .gob add temp 179560
3. Notice nothing happen

The SAI action: https://github.com/TrinityCore/TrinityCore/blob/3.3.5/src/server/game/AI/SmartScripts/SmartScript.cpp#L673-L687

**Branch(es):** 3.3.5

**TC rev. hash/commit:** rev. 13696204368

**Description:** If you miss all attacks against a dummy you will get out of combat, then you will re-enter combat with the next swing even if it miss.
https://imgur.com/DghpYKf
https://imgur.com/JYMBWLU

**Steps to reproduce the problem:**

1. connect a low level char
2. .go c 201242
3. Start attacking

**Branch(es):** 3.3.5

**TC rev. hash/commit:** rev. 13696204368e

**Changes proposed:**

-  It was discussed in https://github.com/TrinityCore/TrinityCore/pull/16551#issuecomment-220298203 and https://github.com/TrinityCore/TrinityCore/issues/4005, closed because "was not blizzlike".
-  But looks like it's blizzlike. As you can see [here](https://www.youtube.com/watch?v=szuiKxOEBJQ&feature=youtu.be&t=67) and [here](https://www.youtube.com/watch?v=szuiKxOEBJQ&feature=youtu.be&t=315).
Video was posted on youtube in 2016, but they're recorded in 2010, in Blizzards realms.
Original video was posted in warcraftmovies by [this](https://www.warcraftmovies.com/pv.php?l=glick5312) guy.
Check in part 1: warlock uses devour magic in rogue and resummon pet to try dispel again.
Check in part 2: Pet is dead with Spell Lock cooldown running. Warlock resummon pet and Spell lock get reset.

**Target branch(es):** 3.3.5

**Issues addressed:** Updates https://github.com/TrinityCore/TrinityCore/issues/4005


**Tests performed:** Builded and tested in game
