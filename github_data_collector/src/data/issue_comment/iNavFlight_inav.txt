## Current Behavior
https://github.com/iNavFlight/inav/blob/master/docs/Display.md

> There is currently no way to change the information on the display

## Desired Behavior
I would like a way to change the OLED display.  

Where does the OLED display get its information from?  Can we modify the screen somehow to show more relevant information?  This could be set up as a HUD for a camera (eg. DJI) to show your home arrow, distance to home, alt, speed, mah.

There are all sorts of fun things you could do with this as a HUD.





I'm trying to add a SoftSerial port to the NOX target to allow SmartAudio VTX control using the LED pad.

I'm a software developer, but don't have experience with this type of hardware. I hope this is the appropriate place to ask these questions.

I looked over the existing code for [NOX ](https://github.com/iNavFlight/inav/tree/master/src/main/target/NOX )and have a couple of questions.

There appears to be a SoftSerial 1 defined already as a workaround for ESC telemetry:
```
#define USE_SOFTSERIAL1
#define SOFTSERIAL_1_TX_PIN      PA2 // Workaround for softserial not initializing with only RX
#define SOFTSERIAL_1_RX_PIN      PA2 // Backdoor timer on UART2_TX, used for ESC telemetry
```
If I don't need ESC telemetry, can I redefine SoftSerial1 on PA0 (LED PAD)?

 My current plan is to define SoftSerial2 to PA0.
```
#define USE_SOFTSERIAL2
#define SOFTSERIAL_2_TX_PIN      PA0 // Softserial on the LED pad
#define SOFTSERIAL_2_RX_PIN      PA0 
```

In target.c, there is a timerHardware section I don't understand.
```
const timerHardware_t timerHardware[] = {
    DEF_TIM(TIM2, CH3, PB10, TIM_USE_PPM,  0, 0),   //PPM
    DEF_TIM(TIM2, CH1, PA0,  TIM_USE_LED,  0, 0), //2812LED
    DEF_TIM(TIM5, CH2, PA1,  TIM_USE_MC_MOTOR | TIM_USE_FW_MOTOR,  0, 0), // S1_OUT
    DEF_TIM(TIM1, CH1N, PA7,  TIM_USE_MC_MOTOR | TIM_USE_FW_MOTOR,  0, 0), // S2_OUT
    DEF_TIM(TIM4, CH3, PB8,  TIM_USE_MC_MOTOR | TIM_USE_FW_SERVO,  0, 0), // S3_OUT
    DEF_TIM(TIM3, CH4, PB1,  TIM_USE_MC_MOTOR | TIM_USE_FW_SERVO,  0, 0), // S4_OUT
    DEF_TIM(TIM9, CH1, PA2,  TIM_USE_ANY,  0, 0), //UART2 TX
    DEF_TIM(TIM9, CH2, PA3,  TIM_USE_ANY,  0, 0), //UART2 RX
};
```
I assume the line `DEF_TIM(TIM2, CH1, PA0, TIM_USE_LED` needs to change, but I'm not sure to what. 
Are TIM2 and CH1 still okay? Looking at other targets, there is a mix of TIM_USE_PPM and TIM_USE_ANY for softserial. 

```
    DEF_TIM(TIM2, CH1, PA0, TIM_USE_ANY,  0, 0), // Softserial on LED PAD
```

Note, I'll make my changes to a new target using the appropriate #ifdefs. I didn't want to complicate the discussion here.

Thanks for any help.

Hi.

First of all I would like to give you my congratulations for the wonderful software that you developed.
But after several months of frustration with Altitude Hold feature, I’m asking for help. Not sure if this is the current place, let me know if there is a better one.
I have a 5 inch quad with a Matek F405STD, equipped with a sonar TFMini pointing to the ground. I’ve used the Present setting for this type of quad.
There are two major issues that I’m not able to overcome:
1.	Quad is not able to keep altitude, with stock PID values, or even after a (tentative) PID tuning to the Altitude Hold parameters. When hovering two meters from the ground, the quad slowly starts to drop altitude and hits the ground. And when hovering, if I softly move the quad forward (pitch), it will lose altitude and hit the ground.
2.	Sonar seems not be doing nothing, ie, when I get the quad hovering two or three meters from the ground if I put my hand under the sonar, the quad does not react moving up.
Barometer is properly isolated with foam, and sonar and barometer have correct readings in Sensors tab.
I believe vibrations are within the expected values, based on my limited knowledge from inspecting Black Box logs.
Moreover, installing Ardupilot on this same setup with default PIDs proves that there is no problems with my hardware: the altitude hold works wonderfully and the sonar reacts properly.
I’m sharing Black Box log that reflects these two issues.
Every time I moved forward the quad, it dropped altitude until I add some throttle to compensate.
In the last moments of the flight the quad was hovering about three meters from the ground in Position Hold until it slowly moved down and reached the ground, moment which I disarmed the quad.
I’ve spent several hours looking for videos and posts regarding this kind of behavior but I don’t find anyone facing the same problem as I am.
Can someone give me some light where can be the problem and give some hope to move forward?
Thank you.

Tiago
[LOG00002.zip](https://github.com/iNavFlight/inav/files/4076446/LOG00002.zip)

Need camera shutter release in missions

## Suggested Solution
In mission planning add modes user1/user2 for pinio, with pressed timing, or similar mechanism with servo.
Need stopping on point for this.
## Current Behavior
On a waypoint mission, when RTH is selected at the end of a mission, the OSD is not showing RTH once the mission ends
Adding to the above, with no clear indication on the mission progress you cannot really tell when your mission is over.
Adding to that when mission is over and craft is in loitr there is no indication on that state as well (i,.e that the mission is over)

## Steps to Reproduce

1. Configure mission
2. Select the Checkbox "RTH at the end of mission"


## Expected behavior
Change the osd from "en route to waypoint" to RTH when the mission is over (and the RTH option is selected as stated above)

## Suggested solution(s)
Change the osd from "en route to waypoint" to RTH when the mission is over (and the RTH option is selected as stated above)


version is Inav 2.2.1

- FC Board name and vendor: Omnibus f4 AIO


## Current Behavior
<!-- If applicable, add screenshots, videos and blackbox logs to help explain your problem. -->
Dangerous behavior. Failsafe RTH / RTH ends up in a crash. The compass seems to have an error. Getting back control doesn´t work. Even a disarm doesn´t change anything.

## Steps to Reproduce
<!-- Steps to reproduce the behavior: -->
1. Use Failsafe RTH
2. Diarm
(3. if you want the full schnetzmachine mode, you need a compass error too)

## Expected behavior
<!-- A clear and concise description of what you expected to happen. -->
A disarm should end in a quad drop. Something that handles a compass error without having the risk of a crazy flying uncontrolable schnetzmachine would be nice too.

## Suggested solution(s)
<!-- How could we solve this issue? What changes would need to made to INAV? -->
If the compass does not change but the gyro says something else, maybe their is something wrong. Is a plausibility check with the gyro or gps possible?

## Additional context
<!-- Add any other context about the problem here.  -->
<!-- Go to CLI, execute `dump` command copy its output to [PasteBin](https://pastebin.com) and provide a link to a paste here -->
If you see this video, keep in mind... after the RTH starts, i don´t control anything on the RC. This is full autonomous INAV flying behavior (with a not 100% working compass): https://youtu.be/2cafmbl2WLE

After the quad moves from HOME point, I switched failsafe of to normal mode (and checked all switches to be on normal mode). It doesn´t change anything, so I hit the arm switch to disarm. And the quad keeps flying and change direction, and keeps flying and change direction again.... and luckily crashes in the end. This could get horrible wrong.

---
<!-- PLEASE FILL THIS OUT -->
<!-- Use CLI 'version' command to get version string -->

- FC Board name and vendor: MAMBA F405 MK2
- INAV version string: 2.3.0 (stable)
- GPS/Compass: BN-880Q (=QMC5883)
- Baro: BMP280

## Current Behavior
inav only supports 32 LEDs
## Desired Behavior
Support 52 LEDs
## Suggested Solution
Would this be a simple matter of changing WS2811_LED_STRIP_LENGTH to 52 in src/main/drivers/light_ws2811strip.h
And LED_MAX_STRIP_LENGTH to 52 in src/main/io/ledstrip.h
<!-- NOTE: Feature Requests without suggested solutions may not be addressed with the same level of urgency as those that have suggested solutions -->

## Who does this impact? Who is this for?
<!-- Who is this for? All users? Airplane users? Beginners? Advanced? Yourself? People using X, Y, Z, etc.? -->
Particularly useful for plane users but also larger drones.
## Additional context
<!-- Add any other context or links about the feature request here. -->

on the latest inav (2.3.0) OMNIBUSF4V3 target,the BMP280 I2C external BARO is not working.
There is a SPI /I2C conflict, on the target.h
see here:
https://github.com/iNavFlight/inav/blob/debe8ab772dc7e13d6cecd162ae107760adfd90c/src/main/target/OMNIBUSF4/target.h#L116
and here:
https://github.com/iNavFlight/inav/blob/debe8ab772dc7e13d6cecd162ae107760adfd90c/src/main/target/OMNIBUSF4/target.h#L119

In my case i wanted a I2C BARO, so had to recompile inav with #define BMP280_SPI_BUS commented out: 
`// #define BMP280_SPI_BUS`

This is the FC used:
https://www.banggood.com/9_4g-30_5x30_5mm-Omnibus-F4-Flight-Controller-AIO-OSD-5V-BEC-and-Current-Sensor-p-1226610.html?rmmds=buy&cur_warehouse=CN

## Current Behavior
Unstable flight, may just flip out at any time using Omnibus V6 target. Forums and websites that seem dated recommend using Fireworks firmware. I tried that and it just doesn't work. Github INav recommends Fireworks FW. Some websites have updated recommendation to Omnibus V6. Cats whom answer threads are split down the middle. I'm one whom Fireworks just doesn't work properly for. I know about the using second gyro, and pointing the Fireworks FW in the write direction since this firmware wasn't written for this board. Is anyone using this FC successfully with INav...? I fly the X220S Omnibus F4 V3 and have no issues which has 3 or 4 targets and I use them all. 

## Steps to Reproduce
1. Load Omnibus V6 FW 50/50 chance of flight ending in disaster.
2. Load Fireworks FW I've never gotten as far as flight just doesn't work.
3. Same Omnibus V6 FC flies perfect as a betaflight quad with no issues.
4. I'll give anything a shot if anyone has a recommendation that is working for them. I will also retire this setup in INav and move on no big deal. 

## Expected behavior
Complete a flight (2200mah 3s) without flipping over and crashing.
## Suggested solution(s)
Uniting all users of the Omnibus F4 V6 in the correct firmware to use. 
## Additional context
This post is getting long sorry Happy New Year... Packers won
<!-- Go to CLI, execute `dump` command copy its output to [PasteBin](https://pastebin.com) and provide a link to a paste here -->

---
<!-- PLEASE FILL THIS OUT -->
<!-- Use CLI 'version' command to get version string -->

- FC Board name and vendor:
- INAV version string:
