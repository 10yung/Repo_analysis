Issues on GitHub are intended to be related to bugs or feature requests, so we recommend using our other community resources instead of asking here.

- [SOAR Doc](http://github.com/XiaoMi/soar/blob/master/README.md)
- Any other questions can be asked in the community [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/xiaomi-dba/soar)

#### Feature Description

```sql
UPDATE tb SET col = 1 WHERE col1 IN (col1, 1, 2);
```

#### Use Case(s)

The column name in the `IN` clause will cause full table update!!

CREATE TABLE `tb1` (
  `ability_id` int(11) NOT NULL,
  `domain_id` int(11) NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `last_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`ability_id`,`domain_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8 COLLATE=utf8_bin;


CREATE TABLE `tb2` (
  `symbol` int(10) unsigned NOT NULL,
  `domain_id` int(10) unsigned NOT NULL,
  `ability_id` int(10) unsigned NOT NULL,
  `created` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
  `last_modified` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
  PRIMARY KEY (`symbol`,`domain_id`,`ability_id`)
) ENGINE=InnoDB DEFAULT CHARSET=utf8

select t1.ABILITY_ID from tb2 t2 join tb1 t1 on t2.ABILITY_ID = t1.ABILITY_ID and t1.DOMAIN_ID = t2.DOMAIN_ID 

![image](https://user-images.githubusercontent.com/21232401/71572539-965c5900-2b1a-11ea-8bbb-46dacb6c12ea.png)

This suggestion is wrong about collation，because collation only affects char、varchar、text type。

**sql:**
`SELECT ul.*
FROM uxxx_list ul
WHERE  ul.status <> -9 AND ul.can_play = 1 
AND ul.udb = 'a153267292'  AND ul.source_client IN(14) ORDER BY ul.vid DESC LIMIT 20;`

**soar 给出的优化建议：**
> 为xxx库的uxxx_list表添加索引
Item: IDX.001
Severity: L2
Content: 为列can_play添加索引;为列udb添加索引;为列source_client添加索引;为列status添加索引;为列vid添加索引
Case: ALTER TABLE `xxx`.`uxxx_list` add index `idx_can_play_udb_source_client_status_vid` (`can_play`,`udb`,`source_client`,`status`,`vid`) ;

status 的条件为 != ，用不上索引，不应在 status 列加索引！
输入：
select * from tb1;
select * from tb2;

输出：
select * from tb1
select * from tb2

输出没有分号，存在语法报错。
希望输出：
select * from tb1;
select * from tb2
或者：
select * from tb1;
select * from tb2;

Now, run **go mod download** command, I will downoad v0.8.0, not v0.11.0 that I expect.
Issues on GitHub are intended to be related to bugs or feature requests, so we recommend using our other community resources instead of asking here.

- [SOAR Doc](http://github.com/XiaoMi/soar/blob/master/README.md)
- Any other questions can be asked in the community [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/xiaomi-dba/soar)

我通过程序把explain 语句的结果拼接到 soar -report-type explain-digest 后面 ，通过程序执行拼接的命令行，没有给出正确的结果显示。

拼接语句如下，output是通过程序得到的explain 语句的结果
 ' -report-type explain-digest << EOF\n' + output + 'EOF'

最后拼接的语句如下
/root/go/src/github.com/XiaoMi/soar/bin/soar -report-type explain-digest << EOF
id      select_type     table   type    possible_keys   key     key_len ref     rows    Extra
1       SIMPLE  config  ALL     NULL    NULL    NULL    NULL    50      NULL
EOF

不知道是我拼接的语句格式不对出不来结果


发现SOAR 使用的vitess解析器对于DDL RENAME语句无法解析库名/表名

自带测试样例SQL语句

ALTER TABLE old_table RENAME TO new_table;

打印dbName/tableName 均为空

正常进入case "rename"

使用soar master分支



Please answer these questions before submitting your issue. Thanks!

1. What did you do?
If possible, provide a recipe for reproducing the error.

```
echo "ALTER TABLE xxx ADD status tinyint(2) NOT NULL DEFAULT '1' COMMENT '状态'" | ~/Downloads/soar.darwin-amd64 -report-type ast-json
```

2. What did you expect to see?
```
output ast json as normal
```


3. What did you see instead?

```
execute cmd got nothing, and exit code is zero
```

```
# echo $?
# 0
````


4. What version of are you using (`soar -version`)?
Version: 2019-01-21 16:54:09 +0800 0.11.0-16-gc12ae96
Branch: master
Compile: 2019-01-21 16:55:46 +0800 by go version go1.10.7 linux/amd64
GitDirty: 0


![image](https://user-images.githubusercontent.com/14213113/62044169-d1d5bd00-b234-11e9-87b5-e1564c257bf1.png)


按照COL.009的规则描述，应该是建议使用DECIMAL，NUMERIC来替代FLOAT类型，但COL.009的判断逻辑中却因为字段中有mysql.TypeDecimal, mysql.TypeNewDecimal而触发，这样的判断和COL.009的描述是不是有冲突？