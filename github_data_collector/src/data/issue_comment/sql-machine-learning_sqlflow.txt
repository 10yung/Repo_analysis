
Some functions have too many indentation levels.  For example

https://github.com/sql-machine-learning/sqlflow/blob/5ab490f740decbb8c3f293461c7920d5ef2f8979/pkg/step/feature/derivation.go#L55

Some are too long.  For example

https://github.com/sql-machine-learning/sqlflow/blob/5ab490f740decbb8c3f293461c7920d5ef2f8979/pkg/step/feature/derivation.go#L144

Some have both problems. For example

https://github.com/sql-machine-learning/sqlflow/blob/5ab490f740decbb8c3f293461c7920d5ef2f8979/pkg/step/feature/derivation.go#L243
By the name, the package `codgen/couler` should generate the Couler program.  However, it generates the Argo YAML file:

https://github.com/sql-machine-learning/sqlflow/blob/5ab490f740decbb8c3f293461c7920d5ef2f8979/pkg/sql/codegen/couler/codegen.go#L164

This doesn't make sense -- if we want a Argo codegen, it should be named `codegen/argo` instead of `codegen/couler`.

In particular, as we have a package named [`argo`](https://github.com/sql-machine-learning/sqlflow/blob/develop/pkg/argo/), which, by the name, should be the one doing Argo related work.
SQLFlow needs the capability of translating and executing each SQL statement, with or without the extending syntax.  This capability makes the Argo/Tekton workflow tracable; it also makes it possible to integrate SQLFlow with IDEs like Visual Studio Code to support step-by-step running.

Currently, we rely on the binary `cmd/repl` as the step runner.  However, `cmd/repl` also has other roles like a local debug mode of SQLFlow and runs a SQL program instead of a SQL statement.

I agree that we keep `cmd/repl` as a SQLFlow server client, just like the Jupyter Notebook client.  But to make its role as a client clear, we need a new tool to run each step in the Argo/Tekton workflow.
This filename doesn't make sense.  An IR is not executable. Instead, it is the workflow or Python program converted from the IR which is executable.  

We should move the code in this file to related packages, so we could remove this file.
Currently, the binary repl call [`func RunSQLProgram`](https://github.com/sql-machine-learning/sqlflow/blob/5ab490f740decbb8c3f293461c7920d5ef2f8979/pkg/sql/executor_ir.go#L52) locally.

I propose to 

1. Rename repl into sqlflow.
1. Make repl call SQLFlow server, just like mysql calls MySQL server.
1. Move part of `RunSQLProgram` in `executor_ir.go` to `pkg/server` and the rest to `pkg/step/executor/`.  The former part calls the later part.

BTW, we need `cmd/step`, which calls `pkg/step/executor/` and is called by the generated workflow to run each step, as explained in https://github.com/sql-machine-learning/sqlflow/issues/1746.

A side-effect of this proposal is to reduce and finally remove the file `execute_ir.go`, as the IR is not executable -- it is the submitter program generated from the IR which is executable.

The function [`SubmitWorkflow`](https://github.com/sql-machine-learning/sqlflow/blob/44939623ee243d06f5d7b9f3dac4e8c5d8b7c4b3/pkg/sql/executor_ir.go#L80) defined in package `pkg/sql` is only used in [`cmd/sqlflowserver`](https://github.com/sql-machine-learning/sqlflow/blob/44939623ee243d06f5d7b9f3dac4e8c5d8b7c4b3/cmd/sqlflowserver/main.go#L63) together with `pkg/server.NewServer`.

Hence, I propose to move the definition of this function to `pkg/server` as `submitWorkflow`.

A side-effect of this proposal is to minimize and finally remove the file `execute_ir.go`, because the IR is not executable -- it is the codegen result, a.k.a., submitter programs, which are executable.
Currently, our parser doesn't' generate IR. Instead, its output type is `SQLFlowStmt`, and it is `ir_generator.go` who converts SQLFlowStmt into IR.  In particular, function `generateTrainStmt` defined in `ir_generator.go` converts `SQLFlowStmt` into `ir.TrainStmt`.  The function `generateTrainStmt` needs to call feature derivation defined in `step/feature/` and verification functions defined in `ir_generator.go`.  

An illustration of the conversion process is like the following.

```
parse -> SQLFlowStmt -> ir_generator.go -> ir
                                      ^
                                      |
                           step/feature/derivation.go
```

Should we move `ir_generator.go` to package IR, and rename `generateTrainStmt` into `ir.NewTrainStmt`?
fixed #1725 
WIP, need to pre-create explain result tables