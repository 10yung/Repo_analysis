Per the quickstart docs, the schema gets `.yaml` and the config get `.yml`. Seems unnecessarily inconsistent. 

afaik there's [no consensus on which extension gets used](https://stackoverflow.com/questions/21059124/is-it-yaml-or-yml) but seems like within a single project only one should be used.
There's already a [TODO](https://github.com/encode/apistar/blob/2edeb6946af3562c6310fcd6db393d3960152f32/apistar/schemas/openapi.py#L441) in the code for this, but when parsing the OpenAPI schema, API Star does not seem to cater for media types other than `application/json`.

The OpenAPI 3 [specification](https://swagger.io/docs/specification/describing-request-body/) makes provision for operations to consume many different media types in `requestBody`, as per the example for Form Data below:

```
 /survey:
    post:
      requestBody:
        required: true
        content:
          application/x-www-form-urlencoded:  # <!--- API Star does not support using this media type
            schema:
              type: object
              properties:
                name:
                  type: string
                fav_number:
                  type: integer
              required:
                - name
                - email
```

 At the moment, using anything other than `application/json` in the schema will raise a `ClientError` with code `invalid_property`.
current

![this](https://user-images.githubusercontent.com/11388735/70322898-5f37a800-17f9-11ea-9a27-5621fc60d76d.png)

proposed

![that](https://user-images.githubusercontent.com/11388735/70322907-652d8900-17f9-11ea-99a0-9bd209550bed.png)


Trying to install apistar inside a venv created with  python -m venv venv,  python -m apistar yields "no module named apistar"

Not sure what I am doing wrong, I recorded this from my terminal.  These should be steps to reproduce.

```wurst [~/tmp]
❯ python --version
Python 3.7.4
wurst [~/tmp]
❯ pip --version
pip 19.2.3 from /usr/lib/python3.7/site-packages/pip (python 3.7)
wurst [~/tmp]
❯ python -m venv venv
wurst [~/tmp]
❯ source venv/bin/activate
(venv) wurst [~/tmp]
❯ which pip
/home/wurst/tmp/venv/bin/pip
(venv) wurst [~/tmp]
❯ pip install apistar
Ignoring '--user', since user site-packages are not visible in this virtualenv.
Collecting apistar
  Using cached https://files.pythonhosted.org/packages/d6/0c/3066b856f661bc58b16c1a2ff4eeed25dc4f0d4618871b3454066dad89e0/apistar-0.7.2.tar.gz
Collecting click (from apistar)
  Using cached https://files.pythonhosted.org/packages/fa/37/45185cb5abbc30d7257104c434fe0b07e5a195a6847506c074527aa599ec/Click-7.0-py2.py3-none-any.whl
Collecting jinja2 (from apistar)
  Using cached https://files.pythonhosted.org/packages/65/e0/eb35e762802015cab1ccee04e8a277b03f1d8e53da3ec3106882ec42558b/Jinja2-2.10.3-py2.py3-none-any.whl
Collecting requests (from apistar)
  Using cached https://files.pythonhosted.org/packages/51/bd/23c926cd341ea6b7dd0b2a00aba99ae0f828be89d72b2190f27c11d4b7fb/requests-2.22.0-py2.py3-none-any.whl
Collecting pyyaml (from apistar)
  Using cached https://files.pythonhosted.org/packages/e3/e8/b3212641ee2718d556df0f23f78de8303f068fe29cdaa7a91018849582fe/PyYAML-5.1.2.tar.gz
Collecting typesystem (from apistar)
  Using cached https://files.pythonhosted.org/packages/bd/be/158f4a02dde348e16cec7ab9603df521d9175d37ff7d048f086d9b76eb7b/typesystem-0.2.4.tar.gz
Collecting MarkupSafe>=0.23 (from jinja2->apistar)
  Using cached https://files.pythonhosted.org/packages/98/7b/ff284bd8c80654e471b769062a9b43cc5d03e7a615048d96f4619df8d420/MarkupSafe-1.1.1-cp37-cp37m-manylinux1_x86_64.whl
Collecting chardet<3.1.0,>=3.0.2 (from requests->apistar)
  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl
Collecting idna<2.9,>=2.5 (from requests->apistar)
  Using cached https://files.pythonhosted.org/packages/14/2c/cd551d81dbe15200be1cf41cd03869a46fe7226e7450af7a6545bfc474c9/idna-2.8-py2.py3-none-any.whl
Collecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 (from requests->apistar)
  Using cached https://files.pythonhosted.org/packages/e0/da/55f51ea951e1b7c63a579c09dd7db825bb730ec1fe9c0180fc77bfb31448/urllib3-1.25.6-py2.py3-none-any.whl
Collecting certifi>=2017.4.17 (from requests->apistar)
  Using cached https://files.pythonhosted.org/packages/18/b0/8146a4f8dd402f60744fa380bc73ca47303cccf8b9190fd16a827281eac2/certifi-2019.9.11-py2.py3-none-any.whl
Installing collected packages: click, MarkupSafe, jinja2, chardet, idna, urllib3, certifi, requests, pyyaml, typesystem, apistar
  Running setup.py install for pyyaml ... done
  Running setup.py install for typesystem ... done
  Running setup.py install for apistar ... done
Successfully installed MarkupSafe-1.1.1 apistar certifi-2019.9.11 chardet-3.0.4 click-7.0 idna-2.8 jinja2-2.10.3 pyyaml requests-2.22.0 typesystem urllib3-1.25.6
(venv) wurst [~/tmp]
❯ python -m apistar
/home/wurst/tmp/venv/bin/python: No module named apistar
(venv) wurst [~/tmp]
❯ which apistar
/home/wurst/.local/bin/apistar
(venv) wurst [~/tmp]
❯ deactivate
wurst [~/tmp]
❯ exit
```

This pull requests will add the following:
- Extend the openapi validator  to allow the `examples` field, eee https://swagger.io/docs/specification/adding-examples/ and https://swagger.io/specification/#componentsObject
- Render the examples (and the already existing example field) in the `apistar` theme documentation.

<img width="1149" alt="apistar-examples" src="https://user-images.githubusercontent.com/121401/65146776-e9534a00-da1c-11e9-9117-8faf95edbdf0.png">



Both OpenAPI 2/Swagger and OpenAPI 3 offer a `deprecated` boolean attribute on [operation objects](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#operationObject), [parameter objects](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#parameter-object) and [schema objects](https://github.com/OAI/OpenAPI-Specification/blob/master/versions/3.0.2.md#fixed-fields-20): APIStar could raise a warning when calling a deprecated endpoint, using a deprecated parameter or schema, or at least make the attributes available to the user in the `Link` and `Field` classes.
Following the instructions [here](https://docs.apistar.com/api-documentation/#programmatic-interface) I'm trying to create an endpoint in a Tornado app that shows the API documentation. I'm setting up a static file handler similar to this:

```python
from pathlib import Path

import apistar
from tornado.web import StaticFileHandler

# ...

apistar_static_path = Path(apistar.__file__).parent.joinpath("themes", theme_name, "static")
handlers += [
    ("/apistar/(.*)", StaticFileHandler, {"path": str(apistar_static_path)})
]

# ...
```

This works fine if `theme_name = "apistar"` but there are several 404s with `swaggerui` and `redoc` themes due to missing JS/CSS files that are not included in `apistar/themes`. If these files aren't going to be included in the package, then there should be a way to specify a vendor URL prefix.
c.f. https://github.com/encode/django-rest-framework/pull/6565

Required structure looks like this: 

```
request_body['content']['application/json']['schema']
```

Prior to this fix I'd missed the `schema` level, but `apistar` was reporting a valid schema. 
This makes error messages and tracebacks fancier ; I am however unsure about how the ClientError should display its messages in `__str__`. Closes #658 