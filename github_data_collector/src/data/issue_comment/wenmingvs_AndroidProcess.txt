如何在不root的情况下，获取正在运行的所有app，因为android 7.0以后androidprocess库不能用了，现在的我很是苦恼啊？

如何在使用方法三的情况下，让栈顶的activity做出弹窗操作？

在5.0中方法2和方法6都可以，但是5.0之后都只会返回自己的进程信息，其他的应用信息不可查看。不知道没有人想出其他解决方案。
方法六:我在一个服务中开线程一直调用getRunningForegroundApps()方法,会导致应用调不起支付宝,这是什么原因呀?
我这样改了下就好了。
原：
/*
        if (usageStats == null || usageStats.size() == 0) {
            if (HavaPermissionForTest(context) == false) {
                Intent intent = new Intent(Settings.ACTION_USAGE_ACCESS_SETTINGS);
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                context.startActivity(intent);
                Toast.makeText(context, "权限不够\n请打开手机设置，点击安全-高级，在有权查看使用情况的应用中，为这个App打上勾", Toast.LENGTH_SHORT).show();
            }
            //发现造成这里的false 是因为 usageStats.size() == 0，即空集合（实际手机有任务存在）
           // boolean r = (usageStats == null);
            //android.util.Log.e("Current","usageStats:null:"+r);

            return false;
        }*/

改后：
        //改一下上面的
        if (usageStats == null || usageStats.size() == 0) {
            if (HavaPermissionForTest(context) == false) {
                Intent intent = new Intent(Settings.ACTION_USAGE_ACCESS_SETTINGS);
                intent.setFlags(Intent.FLAG_ACTIVITY_NEW_TASK);
                context.startActivity(intent);

                //1.我是子线程里使用Toast
                Looper.prepare();
                Toast.makeText(context, "权限不够\n请打开手机设置，点击安全-高级，在有权查看使用情况的应用中，为这个App打上勾", Toast.LENGTH_SHORT).show();
                Looper.loop();// 进入loop中的循环，查看消息队列

                //2.添加这里，
                return false;
            }
            //3.一定得返回，不然后面会下标越界，估计返回true，一直检查的话，马上就会有真实情况
            return true;
        }
	
	public static boolean isAppForegroundRunning(final Context context) {
 		ActivityManager activityManager = (ActivityManager) context.getSystemService(Context.ACTIVITY_SERVICE);
        if (activityManager == null) return false;
        List<ActivityManager.RunningTaskInfo> tasks = activityManager.getRunningTasks(1);
        if (!tasks.isEmpty()) {
            ComponentName topActivity = tasks.get(0).topActivity;
            if (topActivity.getPackageName().equals(context.getPackageName())) {
                return true;
            }
        }
        return false;
    }
- 手机系统:Android 4.3
- 型号:Galaxy Nexus
- 你的代码:`AndroidProcesses.getRunningForegroundApps(context);`
如果一个应用退出到后台，但是正在下载文件的话，`AndroidProcesses.getRunningForegroundApps(context);`中的`foreground==true,`而以前使用的代码返回值为false,
就是说的你的代码判断不准确
当客户端运行xposed框架, 采用读取/proc/的方式不适用.

**应在README中提醒开发者.**

![](https://raw.githubusercontent.com/qbeenslee/ART/master/issues/wenmingvs-AndroidProcess.png)

这个方法也有问题，当我横竖屏切换 重新实例化时，生命周期会先调用 自己的onStop ，再去调用 onStart会出现误判断 appCount =0； 而正常的 activity 跳转（A -》B）是 B Activity 先 onStart() 然后 A Activity 才 onStop()
