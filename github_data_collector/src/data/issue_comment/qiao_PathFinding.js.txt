My usage: When findPath returns an empty array because the destination is impassable, I'm testing various surrounding nodes to see if I can reach them instead.

Using AStar algorithm, the first time I call this function I receive a list of nodes as expected.

On subsequent calls using the same instance of AStarFinder with the same grid but different coordinates, I seem to receive empty arrays in response.
Thank you for this! I have learned a lot already about AI searching since finding this project.

I identified the solution (I think) to how this is applied:

1. Create default grid.
2. Clone default grid to objects.
3. Decision logic to determine destination.
4. findPath()
5. Update default grid.
6. Repeat 2-5.

Am I on the right track?

Chrys
The first example in the documentation with walkability matrix does not seem to work.
var walkabilityMatrix = [[0, 0, 0, 0, 0],
                         [1, 1, 1, 1, 0],
                         [0, 0, 0, 0, 0],
                         [0, 1, 1, 1, 1],
                         [0, 0, 0, 0, 0],
                         [1, 1, 1, 1, 0],
                         [0, 0, 0, 0, 0]];

var grid = new PF.Grid(walkabilityMatrix); // typo here in the original documentation - matrix instead of walkabilityMatric
var finder = new PF.AStarFinder();
var path = finder.findPath(0, 0, 4, 6, grid);

Produces the following error:
TypeError: this.nodes[e] is undefined
I'm currently working on a project that renders a tile map based on a **one-dimensional** array as grid.

So I have to transform that array into a two-dimensional array in order to instantiate a Grid that can be used by the finders.

If I'm not mistaken, it seems that we could have a new Grid that knows how to handle a one-dimensional array while exposing the same API, or even extend `PF.Grid` to handle a one-dimensional `grid` argument.

I didn't read all of the finders yet but from what I've seen it would be possible to extend `Grid` in order to support one-dimensional arrays with no breaking changes to the finders, right?
I don't know if it's intentional but due to cloning my grid (1000x1000) in loop and adding collisions also in loop searching closest path is taking more than few seconds which make's this library unusable in my case. But be aware I'm not hating, this is open source so thank you for sharing anyway.

Just wondering if there are plans to optimase performance of this library in future?
Hi, I have this array with points [(x1,y1),(x2,y2),.....(xn,yn)], how find best route with a start and end point?
Array of points:
```
0: (2) [130.88, 354.89]
1: (2) [122.18, 322.98]
2: (2) [153.31, 351.22]
3: (2) [172.04, 334.03]
4: (2) [207.09, 299.83]
5: (2) [231.48, 276.16]
6: (2) [245.4, 262.95]
7: (2) [257.48, 275.43]
8: (2) [272.44, 290.94]
9: (2) [292.67, 310.78]
10: (2) [318.43, 337.46]
11: (2) [337.61, 325.84]
12: (2) [338.26, 351.88]
13: (2) [355.18, 340.54]
14: (2) [375.93, 320.04]
15: (2) [358.31, 306.1]
16: (2) [395.11, 300.93]
17: (2) [434.08, 293.71]
18: (2) [473.06, 291.14]
19: (2) [505.49, 292.2]
20: (2) [531.19, 314.53]
21: (2) [401.48, 304.73]
22: (2) [375.27, 280.55]
23: (2) [344.31, 252.47]
24: (2) [324.58, 230.19]
25: (2) [297.55, 242.45]
26: (2) [278.77, 263.83]
```

The red dots are the points
![image](https://user-images.githubusercontent.com/4583818/54581907-a4eae100-49dc-11e9-8bc6-e685113128db.png)

First I want to say: This is an awesome, fun tool for visualizing different search algorithms, so thanks for making it!

While trying out https://qiao.github.io/PathFinding.js/visual/ I found that the goal seems to be starting off-screen on my platform (Windows 10, Google Chrome version 71.0.3578.98). Here's a picture to illustrate:

![hiddengoal](https://user-images.githubusercontent.com/1307217/51828341-539c6a80-2326-11e9-8726-a8bc3601d5c5.png)

If I click and drag from somewhere within the circle, I can pull the goal back onto the grid, so it's still usable; it's just tricky to get going.

I would guess it has something to do with [this line here](https://github.com/qiao/PathFinding.js/blob/7b9c3ef3ef45f9130af5a1c1081be2d64305399f/visual/js/controller.js#L482), because seeing that line is what gave me the idea of trying to click and drag from off-screen at the same height as the start marker. Unfortunately I don't know anything about web dev, so I have no ideas about why it's wrong or how to fix it.
Hello, thank you for this library! I´d like to use it in Angular 6, but I´m not sure how to install it. What I did:

1) "npm install pathfinding" 

2) In the angular.json I added it:
`"scripts": ["node_modules/paper/dist/paper-full.min.js",
            "node_modules/pathfinding/src/PathFinding.js"]`


3) In my component, I tried to import:
`import { Grid, Finder } from "pathfinding";`

But I get an error when I compile it,  with "ng serve":
`PathFinding.js:1 Uncaught ReferenceError: module is not defined
    at PathFinding.js:1`

Is it possible to use it in Angular? If so, what´s the best way to do it?
Any help would be very welcome!

(I´m building an interactive table app for shopping/malls and I´m trying to build the wayfinding module)

Thanks in advance!


Hello,

Nice code!

I am wondering if it's possible to connect to points.

Like here: http://www.pacman1.net/ from the middle left to the middle right.

Thanks in advance,
Chris Pappas.
im noob help ...