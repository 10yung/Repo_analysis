I find that when working with multiple repositories – or especially with git submodules – it can be useful to see in the prompt which one I'm currently in. (This will often be the current working directory, but not always.)
Installation did not work for `Ubuntu 18.10` with default instructions. Adding required commands to the bottom of `.bashrc` fixed it. 
Implementation of paulej's suggestion in issue #51:
https://github.com/jimeh/git-aware-prompt/issues/51
When use PS1 = export PS1="\${debian_chroot:+(\$debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\] \[$txtcyn\]\$git_branch\[$txtred\]\$git_dirty\[$txtrst\]\$ "
below bashrc,
Teminer lose path folder 
![lose](https://user-images.githubusercontent.com/19677561/41886438-9091fa54-7926-11e8-8b13-dce83765fad8.png)
![notlose](https://user-images.githubusercontent.com/19677561/41886447-95cd5450-7926-11e8-8fc9-62ac22b21e93.png)


Through the variable DISABLE_GIT_AWARE, allow disabling the software.
This is needed, for example, when using a huge git repository, if we don't want the script to slow the command line work
Hi There,

While it is/was working with other Debian, it did not work with Ubuntu 18.04. Is there anything that I should take care of ?
Sometimes branch names get very long. Adds a hostname, username and, for python developers, vritualenv names and you can easly get a multiline shell prompt. This helps keep branch name within a size pre-defined. 
I wanted to add ability to get the tag at HEAD (not the closest tag). Nothing big

The function find_git_dirty() delayed prompt display by over a second when in a large repo, so I now use the plumbing commands instead of "git status". Because we don't actually need to generate a list of all the changed files just to see if the repo is dirty. Further improvements possible.

Also, there's some more verbosity to keep the command output reliable. 
(Errcode 128 applies e.g. when in any .git folder)

Finally, I surrounded this by the test for branch name as in find_git_branch(), to avoid output on non-git folders. Other implementation imaginable.