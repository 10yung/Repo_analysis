##  Expected Behavior
When creating a new chart, we should get a nice appearing animation.

## Current Behavior
With master, chart appears abrutly, without any initial animation.

## Possible Solution
I did some testing, it seems to be a regression appeared with #6974:

- At chart creation we have a second resize event with the same canvas width and height than already set in initial event
- Before #6974, we were not triggering a resize event in this case, so everything went fine
- After #6974, we are triggering a resize event which stops the initial animation, resulting in no more animation

## Steps to Reproduce (for bugs)
This can be seen in the same jsfiddle than my other bug #6985:

1. Open https://jsfiddle.net/pn4rb209/
2. See that there is no animation at first load
3. Change Chart.js version from master to latest and click Run
4. See that there is an animation

## Environment
* Chart.js version: master
* Browser name and version: Chromium 79

## Expected Behavior
When updating chart data, updated line should be correctly filled with background color.

## Current Behavior
Sometimes portions of the line are not filled and remains white.
It happens in master but does not happen 2.9.3.

## Steps to Reproduce (for bugs)

1. Go to https://jsfiddle.net/pn4rb209/
2. At first run, filling is OK
3. Click "Update chart" button until the issue happens

![Screenshot_20200119_112740](https://user-images.githubusercontent.com/42184090/72679377-e2ae0f80-3aae-11ea-88eb-9c0c85f94d0e.png)

## Environment
* Chart.js version: master
* Browser name and version: Chromium 79

### Feature Proposal

If I set `minBarLength = 1` and I have a bar chart with data `[0, 12.5]`, the first bar will be displayed as a very short bar:

<img width="352" alt="Screenshot 2020-01-18 at 10 19 32" src="https://user-images.githubusercontent.com/37240226/72661586-0e13fa00-39dc-11ea-9c9b-cfe70642c244.png">


If, however, my data is `[0, -12.5]`, the first bar is invisible:

<img width="335" alt="Screenshot 2020-01-18 at 10 17 50" src="https://user-images.githubusercontent.com/37240226/72661587-0e13fa00-39dc-11ea-9116-cb4cafa5a130.png">

### Feature Use Case
This would be great for bar charts that may display only data thats <= 0.



<!--
  Hey there! 

  If you need help or tech support then this is not the place to ask. Please post
  a question to https://stackoverflow.com/questions/tagged/chart.js or head over
  to our Slack workspace at https://chartjs-slack.herokuapp.com/.

  You maximize your chances of having your question answered if you follow
  StackOverflow's guidelines: https://stackoverflow.com/help/how-to-ask.
  If your question was not answered on StackOverflow, that does not mean you 
  should post it here. If you do, it will be immediately closed.

  Chart.js users vastly outnumber our small number of volunteer maintainers and 
  we try to help as many users as we can, but we may not get to every question. 
  Chart.js is a community project. You can contribute towards the goal of helping
  every user by asking good questions, answering questions on StackOverflow
  or Slack, creating an issue or pull request for the documentation, or otherwise
  contributing to the project:

  https://www.chartjs.org/docs/latest/developers/contributing.html
-->

Hi, i would like to reopen the issue thats going on in this thread.
[https://github.com/chartjs/Chart.js/issues/6677](https://github.com/chartjs/Chart.js/issues/6677)

i found out that these warning pops out every 10milisec? when i use the below plugins.

【warnings poping out】
```
time scale: "time.format" is deprecated. Please use "time.parser" instead
```
<img width="208" alt="72200621-0958be80-348f-11ea-8a81-34ebb4f74741" src="https://user-images.githubusercontent.com/26535295/72660682-361f4f80-3a14-11ea-8b35-ea14a40db592.png">
since it pops out in high rate, the memory will be decreased, leading huge lag.

【plugins that makes warning】
①chart.js 2.9.3
②chart.js financial plugin
③chart.js streaming plugin 1.8.0

I have made a quick sample html here.
http://aifx2.sakura.ne.jp/realtimecharttest2.html

please kindly confirm.

```
<!DOCTYPE HTML>
<html>
 <head>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no">
	
	

<head>
	<script src="https://cdn.jsdelivr.net/npm/moment@2.24.0/min/moment.min.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chart.js@2.9.3"></script>
	<script src="https://www.chartjs.org/chartjs-chart-financial/chartjs-chart-financial.js"></script>
	<script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-streaming@1.8.0"></script>
</head>
<body>
	<div>
		<canvas id="myChart"></canvas>
	</div>
</body>


<script>

 var past =  {t:Date.now()-20000, o:87, h: 101, l: 78, c: 100};
 var past2 = {t:Date.now()-40000, o:87, h: 101, l: 78, c: 100}
 console.log(past);
var ask = Math.random();
 

setInterval(function () {
	
	annotationx= Date.now();

	annotationy = 90;
	return annotationx;
	return annotationy; 
	
	
}, 10000); 





function onRefresh(chart) {
	var t = Date.now();
	var data2 = chart.data.datasets[0].data;
	var last;

	t -= t % 1000;
	if (data2.length === 0) {
		data2.push(past);
		data2.push(past2);
	}
	last = data2[data2.length - 1];
	if (t != last.t) {
		var c = last.c;
		last = { t: t, o: c, h: c, l: c, c: c };
		data2.push(last);
	}
	last.c += Math.random() - 0.5;
	last.h = Math.max(last.h, last.c);
	last.l = Math.min(last.l, last.c);





}

var config = {
	type: 'candlestick',
	data: {
		datasets: [
{
			data: [],
			fractionalDigitsCount: 2
		},
             




]
	},
	options: {


		title: {
			display: true,
			text: 'Financial chart sample'
		},
		legend: {
			display: false,
		},
		scales: {
			xAxes: [{
				type: 'realtime',
				realtime: {
					duration: 120000,
					refresh: 100,
					delay: 0,
					onRefresh: onRefresh
				}
			}]
		},
		tooltips: {
			position: 'nearest',
			intersect: false
		},
		animation: {
			duration: 0
		}
	}
};

window.onload = function() {
	var ctx = document.getElementById('myChart').getContext('2d');
	window.myChart = new Chart(ctx, config);
};


</script>



```
This should hopefully allow users to import just the scales that they need and allow the others to be tree-shaken out

We will need to do one of two things to really make this work:
1. Create a controller registration service similar to the scale registration service instead of having users add to `Chart.controllers` as suggested in [the docs](https://www.chartjs.org/docs/latest/developers/charts.html)
2. Or stop using strings to specify chart and scale types and use the object types instead as suggested in https://github.com/chartjs/Chart.js/issues/4461. This would be more type safe and work better with tools like eslint, Typescript, etc. E.g. right now if you have a typo like you want to use the `'yime'` scale instead of `'time'` then you won't find out until runtime. But if instead you passed in `YimeScale` then that should be able to be caught at build time

These aren't necessarily mutually exclusive and we could possibly support them both, but I personally don't have time to do both and I think it would be potentially confusing to users to support multiple ways of creating charts (have to document everything twice, all the stackoverflow answers and docs look different, etc.). @etimberg @kurkle do you have a preference on approach here?
This is the last one created with `new Chart` in tests, that was not cleaned up after.
Hoping that removing the trash from document.body would fix the interaction tests that occasionally fail.
Move the Chart.platform to live as an instance on the chart instead, and add ways to override the current platform. This is necessary for adding tests that use the "basic" platform - which will be needed to test Chart.js in a web worker.
Closes: #6896


Closes: #4246 

[master](https://codepen.io/kurkle/pen/LYEBYPN?editors=1010)
[pr](https://codepen.io/kurkle/pen/povZozq?editors=0010)
