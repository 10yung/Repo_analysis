![image](https://user-images.githubusercontent.com/24873495/71802877-24e05580-309a-11ea-9666-e3059b5335d8.png)


### Prerequisite
* [x] I have read the [README](https://github.com/Ne0nd0g/merlin/blob/master/README.MD)
* [x] I have search the opened & _closed_ [issues](https://github.com/Ne0nd0g/merlin/issues)
* [x] I have search the [WIKI](https://github.com/Ne0nd0g/merlin/wiki) and its [FAQ](https://github.com/Ne0nd0g/merlin/wiki/FAQ) page
### Environment Data
* Merlin Version: master branch
* Operating System: Ubuntu

### Expected Behavior

Dockerfile successfully builds merlin

### Actual Behavior

Dockerfile build breaks at step 4

### Steps to Reproduce Behavior

```bash
root@dockerhost:~/merlin# docker build -t merlin .
Sending build context to Docker daemon   34.5MB
Step 1/8 : FROM golang:stretch
 ---> d30a8b8b92e2
Step 2/8 : MAINTAINER @audibleblink
 ---> Using cache
 ---> cd2eb209a713
Step 3/8 : RUN apt-get update && apt-get install -y git make
 ---> Using cache
 ---> 2a5f4fc64bfc
Step 4/8 : RUN go get github.com/Ne0nd0g/merlin/...
 ---> Running in e53a30612f04
package github.com/Ne0nd0g/merlin/cmd/merlinagent
	imports github.com/lucas-clemente/quic-go/h2quic: cannot find package "github.com/lucas-clemente/quic-go/h2quic" in any of:
	/usr/local/go/src/github.com/lucas-clemente/quic-go/h2quic (from $GOROOT)
	/go/src/github.com/lucas-clemente/quic-go/h2quic (from $GOPATH)
The command '/bin/sh -c go get github.com/Ne0nd0g/merlin/...' returned a non-zero code: 1
```

Cheers! :wave: 
To fix error where server emits missing type in json, add standard type
to existing modules.


### Pull Request (PR) Checklist
- [x ] I have read the [CONTRIBUTING](./CONTRIBUTING.MD) doc
- [ x] PR is from **a topic/feature/bugfix branch** off the **dev branch** (right side)
- [x ] PR is against the **dev branch** (left side)
- [x ] Merlin compiles without errors
- [ x] Passes linting checks and unit tests
- [ ] Updated [CHANGELOG](./CHANGELOG.MD)
- [ ] Updated README documentation (if applicable)
- [ ] Update Merlin version number in `pkg/merlin.go` (if applicable)

### Change Type
- [ ] Addition
- [x ] Bugfix
- [ ] Modification
- [ ] Removal
- [ ] Security

### Description
Fix Missing Type in Linux Modules

To fix error where server emits missing type in json, add standard type
to existing modules.
### Prerequisite
* [x] I have read the [README](https://github.com/Ne0nd0g/merlin/blob/master/README.MD)
* [x] I have search the opened & _closed_ [issues](https://github.com/Ne0nd0g/merlin/issues)
* [x] I have search the [WIKI](https://github.com/Ne0nd0g/merlin/wiki) and its [FAQ](https://github.com/Ne0nd0g/merlin/wiki/FAQ) page
### Environment Data
* Merlin Version: v0.7.0
* Merlin Build: I run it with `go run`
* Go Version: `go version go1.12.7 linux/amd64`
* GOPATH Environment Variable: `$HOME/go`
* GOROOT Environment Variable: empty
* Operating System: Arch Linux

### Expected Behavior
On new agent connect, a folder with its ID should be created (ex. `data/agents/xxxx-xxxx-xxxx`) with the `agent_log.txt` inside

### Actual Behavior
A folder with the agent ID is created, but with incorrect permissions:
```
dzervas merlin> ls -la data/agents
drwxr-xr-x dzervas dzervas  4 KB Sat Jul 27 10:23:02 2019 ./
drwxr-xr-x dzervas dzervas  4 KB Fri Jul 26 17:31:52 2019 ../
d--------- dzervas dzervas  4 KB Sat Jul 27 10:21:31 2019 b4d72e27-2a68-4024-801d-b753e4fc71a0/
d--------- dzervas dzervas  4 KB Sat Jul 27 10:23:02 2019 d03f0107-4b4c-4602-acf3-10d26ec5f793/
d--------- dzervas dzervas  4 KB Fri Jul 26 18:17:36 2019 fda3db0e-ca68-4498-b61a-153965549dbd/
.rw-r--r-- dzervas dzervas 29 B  Fri Jul 26 17:31:52 2019 README.MD
```

### Steps to Reproduce Behavior
Start server and an agent

### Misc Information

### Prerequisite
* [x] I have read the [README](https://github.com/Ne0nd0g/merlin/blob/master/README.MD)
* [x] I have search the opened & _closed_ [issues](https://github.com/Ne0nd0g/merlin/issues)
* [x] I have search the [WIKI](https://github.com/Ne0nd0g/merlin/wiki) and its [FAQ](https://github.com/Ne0nd0g/merlin/wiki/FAQ) page
### Environment Data
* Merlin Version: `v0.7.0.BETA`
* Merlin Build:
* Go Version: `1.12`
* GOPATH Environment Variable:
* GOROOT Environment Variable:
* Operating System: `Linux`

### Expected Behavior

When starting the Merlin server with a QUIC listener by specifying `-proto hq`, the Merlin Server would start and listen on port 443/UDP.

### Actual Behavior

The Merlin Server just exists. The `ListenAndServeTLS` function returns the `no such file or directory` error. The source code was modified to retrieve this error. The error is in reference to the x509 certificate.

### Steps to Reproduce Behavior

Start Merlin Server (i.e. `./merlinServer -proto hq`)

### Misc Information

The error seems to surround generating a x509 in-memory only certificate. A valid work around is to generate a x509 key pair and save them in the `data/x509` directory. This will prevent the listener from generating an error.
### Prerequisite
* [x] I have read the [README](https://github.com/Ne0nd0g/merlin/blob/master/README.MD)
* [x] I have search the opened & _closed_ [issues](https://github.com/Ne0nd0g/merlin/issues)
* [x] I have search the [WIKI](https://github.com/Ne0nd0g/merlin/wiki) and its [FAQ](https://github.com/Ne0nd0g/merlin/wiki/FAQ) page
### Environment Data
* Merlin Version: `v0.7.0.BETA`
* Merlin Build: `1b0ce52d71da62da21cc8f90b97191308e6fe7a9`
* Go Version: N/A
* GOPATH Environment Variable: N/A
* GOROOT Environment Variable: N/A
* Operating System: Ubuntu

### Expected Behavior
Setting agent to `all` in a module would not generate an error when executing a module

### Actual Behavior

Setting agent to `all` and executing the module generates an error

### Steps to Reproduce Behavior

```
Merlin[module][shellcodeInjection]Â» set Agent all 
[+]agent set to ffffffff-ffff-ffff-ffff-ffffffffffff
Merlin[module][shellcodeInjection]Â» run
[!]ffffffff-ffff-ffff-ffff-ffffffffffff is not a valid agent
```

### Misc Information

`ffffffff-ffff-ffff-ffff-ffffffffffff` is meant to be a broadcast identifier. Merlin should cycle through all available agents and create a job. There were no agents checked in when this error was generated. The error message should state that no agents were found, not that the broadcast identifier is invalid.

### Pull Request (PR) Checklist
- [x] I have read the [CONTRIBUTING](../CONTRIBUTING.MD) doc
- [x] PR is from **a topic/feature/bugfix branch** off the **dev branch** (right side)
- [x] PR is against the **dev branch** (left side)
- [x] Merlin compiles without errors
- [x] Passes linting checks and unit tests
- [ ] Updated [CHANGELOG](../CHANGELOG.MD)
- [ ] Updated README documentation (if applicable)

### Change Type
- [ ] Addition
- [ ] Bugfix
- [x] Modification
- [ ] Removal
- [ ] Security

### Description

Modified the agent to take a generic 'transport' interface - allows for creating agents with different transport options much more seamlessly. Still requires a bit of heavy lifting on the server side to define behaviour, that might come at a later date ðŸ˜„

For an example of how this might look with a DNS C2, see https://github.com/C-Sto/merlin/tree/flexic2
### Pull Request (PR) Checklist
- [ ] I have read the [CONTRIBUTING](../CONTRIBUTING.MD) doc
- [ ] PR is from **a topic/feature/bugfix branch** off the **dev branch** (right side)
- [ ] PR is against the **dev branch** (left side)
- [ ] Merlin compiles without errors
- [ ] Passes linting checks and unit tests
- [ ] Updated [CHANGELOG](../CHANGELOG.MD)
- [ ] Updated README documentation (if applicable)

### Change Type
- [x] Addition
- [ ] Bugfix
- [ ] Modification
- [ ] Removal
- [ ] Security

### Description

Adding the ability to generate agents from within Merlin. Work-in-progress, but wanted to get visibility over some of the approaches that could be taken to allow this in order to get feedback etc.
Add the ability to issue a `jobs` command and see all jobs per agent along with their status. Some status could include:
- `created` - This is when the job has been entered into the server but not sent to the agent
- `sent` - This is when the job has been sent to the agent from the server