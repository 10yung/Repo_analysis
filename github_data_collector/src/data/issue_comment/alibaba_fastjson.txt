# 1.  正常实例

## 1.1. 程序代码
```
public class TestCase {
	
	protected String _mode;
	
	public String get_mode() {
		return _mode;
	}
}
```

## 1.2 测试代码

```
TestCase tc = new TestCase();
tc.set_mode("hello");
System.out.println(JSON.toJSONString(tc));
```

## 1.3 输出与期望一致

```
{"_mode":"hello"}
```

# 2.  异常实例

## 2.1. 程序代码
```
public class TestCase {
	
	protected String _mode;
	
	protected Mode mode;

	public String get_mode() {
		return _mode;
	}

	public void set_mode(String _mode) {
		this._mode = _mode;
	}

	public Mode getMode() {
		return mode;
	}

	public void setMode(Mode mode) {
		this.mode = mode;
	}

	public static class Mode {
		
		protected String a;
		
		protected String b;

		public String getA() {
			return a;
		}

		public void setA(String a) {
			this.a = a;
		}

		public String getB() {
			return b;
		}

		public void setB(String b) {
			this.b = b;
		}
		
	}
}
```

## 2.2 测试代码

```
TestCase tc = new TestCase();
tc.set_mode("hello");
System.out.println(JSON.toJSONString(tc));
```

## 2.3 输出与期望不一致（丢失下画线）

```
{"mode":"hello"}
```

# 为啥无法正常识别mode和_mode？
Fix issue #2962:

- Pacific/Chatham DST: add support UTC offset +13:45
- Pacific/Honolulu: fix UTC offset output
- America/St_Johns: fix UTC offset output
- Australia/Adelaide: use SimpleTimeZone instead of TimeZone.getAvailableIDs()[0]

Test case Issue2962 tested all time zones in jdk8. DSTs in northern hemisphere are also tested.
        String json = "{\"id\":123,\"name\":\"小明\",\"address\":\"{\"pro\":\"北京\",\"city\":\"北京市\"}\"}";
        Object o = (Object)json;
        String tmp = o.toString();
        JSONObject jo = JSONObject.parseObject(tmp);
        Object address = jo.get("address");
        String a = address.toString();
        System.out.println(jo.toString());
希望FastJson支持json schema来进行json内容校验
配置如下：
`@Configuration
public class FastJsonConfiguration extends WebMvcConfigurerAdapter {

    @Override
    public void configureMessageConverters(List<HttpMessageConverter<?>> converters) {
        super.configureMessageConverters(converters);
        FastJsonHttpMessageConverter fastConverter = new FastJsonHttpMessageConverter();

        List<MediaType> supportedMediaTypes = new ArrayList<>();
        supportedMediaTypes.add(MediaType.APPLICATION_JSON);
        supportedMediaTypes.add(MediaType.APPLICATION_JSON_UTF8);
        supportedMediaTypes.add(MediaType.APPLICATION_ATOM_XML);
        supportedMediaTypes.add(MediaType.APPLICATION_FORM_URLENCODED);
        supportedMediaTypes.add(MediaType.APPLICATION_OCTET_STREAM);
        supportedMediaTypes.add(MediaType.APPLICATION_PDF);
        supportedMediaTypes.add(MediaType.APPLICATION_RSS_XML);
        supportedMediaTypes.add(MediaType.APPLICATION_XHTML_XML);
        supportedMediaTypes.add(MediaType.APPLICATION_XML);
        supportedMediaTypes.add(MediaType.IMAGE_GIF);
        supportedMediaTypes.add(MediaType.IMAGE_JPEG);
        supportedMediaTypes.add(MediaType.IMAGE_PNG);
        supportedMediaTypes.add(MediaType.TEXT_EVENT_STREAM);
        supportedMediaTypes.add(MediaType.TEXT_HTML);
        supportedMediaTypes.add(MediaType.TEXT_MARKDOWN);
        supportedMediaTypes.add(MediaType.TEXT_PLAIN);
        supportedMediaTypes.add(MediaType.TEXT_XML);
        fastConverter.setSupportedMediaTypes(supportedMediaTypes);
        //将fastjson添加到视图消息转换器列表内
        converters.add(fastConverter);
    }
}`
在用nginx代理做的一个简易分布式的项目，两个相同的项目互相调用的时候出现的，按照这样配置或者将这个配置定义成一个@Bean 同样不行，项目是springboot1.5.9
Test case for deserializing nested object with autotype
`{
  "@type": "com.alibaba.json.bvt.parser.autoType.AutoTypeTest0$ModelNested",
  "id": 123,
  "nested": {
    "@type": "com.alibaba.json.bvt.parser.autoType.AutoTypeTest0$ModelNested",
    "id": 456,
    "nested": null
  }
}`


比如说有实体
class ResultInfo<T,S>{
T data1;
S data2;
}
怎么反序列化

报错：
com.alibaba.fastjson.JSONException: default constructor not found. class com.xxx.xxx.model.Config
原类：
data class Config(val kinds : ArrayList<Kind> , val sort : ArrayList<String>) 
```
String jsonStr="[ { \"activity_type\" : 0, \"activity_id\" : \"***\", \"activity_tip\" : \"***\", \"position\" : \"1\" }, { \"activity_type\" : 0, \"activity_id\" : \"2669\", \"activity_tip\" : \"****\", \"position\" : \"1\" }]";
assertTrue(!JSONArray.isValidArray(jsonStr));
assertTrue(!JSON.isValidArray(jsonStr));
assertTrue(!JSONObject.isValidArray(jsonStr));
assertTrue(JSONArray.parseArray(jsonStr).getString(0) instanceof String);

```