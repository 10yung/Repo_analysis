Following the steps here (https://github.com/beyondcode/laravel-er-diagram-generator) I get the following error. I use php 7.3.6 and Laravel 6.1.0. Thank you!

![Error](https://user-images.githubusercontent.com/8269523/68546836-ec423980-03d2-11ea-8384-4f7a836746e2.JPG)

I have an idea to build an interactive visualization of an ERD using d3. it would be awesome if we could get access to a raw json output of the relationships backing the svg generator.

it looks like phpDocumentor may already have support for that https://github.com/phpDocumentor/phpDocumentor2/pull/1446
Hello,

First of all, thanks for you package, it's really easy to use and save us some time in our projet !
I would like to know if there is a way to generate multiple diagrams, based on parts of models used in the app to get a more focused view of some relations in our application ? 

Thx in advance !
Have a nice day !
Currently we still cannot use Laravel 6 with 1.3.0. We get the
`Call to undefined function BeyondCode\ErdGenerator\array_get()` error:
![image](https://user-images.githubusercontent.com/338265/67160965-928ea800-f31b-11e9-853f-cf1f049a4d23.png)

#60 PR (which is merged) fixes this issue. However we cannot use it until the composer version is upped.
Hi,
I am trying to run php artisan generate:erd for my project and getting the below error.

PhpParser\Error  : Syntax error, unexpected ',' on line 153

at /var/www/app/vendor/nikic/php-parser/lib/PhpParser/ParserAbstract.php:315
    311|                     /* error */
    312|                     switch ($this->errorState) {
    313|                         case 0:
    314|                             $msg = $this->getErrorMessage($symbol, $state);
  > 315|                             $this->emitError(new Error($msg, $startAttributes + $endAttributes));
    316|                             // Break missing intentionally
    317|                         case 1:
    318|                         case 2:
    319|                             $this->errorState = 3;

  Exception trace:

  1   PhpParser\ParserAbstract::doParse()
      /var/www/app/vendor/nikic/php-parser/lib/PhpParser/ParserAbstract.php:158

  2   PhpParser\ParserAbstract::parse("<?php namespace App\Http\Controllers;

Please let me know why am I getting this error?
Hi,

Yesterday I tried to run the command. I got the following error

```
[2019-09-10 14:53:40] local.ERROR: An error occurred while creating the graph; GraphViz returned: sh: dot: command not found {"exception":"[object] (phpDocumentor\\GraphViz\\Exception(code: 0): An error occurred while creating the graph; GraphViz returned: sh: dot: command not found at /Users/jamesmills/Projects/flights/vendor/phpdocumentor/graphviz/src/phpDocumentor/GraphViz/Graph.php:375)
```

I didn't think much of it and I just decided to look at it again another time. Then a few hours later I was alerted to the fact that our search was not working on our website. I looked at the Algolia logs and it looks like my application send a 'clear indices' command at the same time I ran the `generate:erd` command. Granted, I should have my admin Algolia key commented out in development to prevent anything odd happening like this but I thought it was odd that this would happen.

I can only think that when the package loads up and looks at the Model the interaction that it had made it look like it was clearing, deleting or that there were no records for the Model and then Scout/Algolia cleared my live index.

Just wanted to make you aware of this. I have not had the time to dig into it any further.

James


please can you do somethings like 

```
use Doctrine\DBAL\Schema\Column;

class GraphBuilder
{
     protected function getTableColumnsFromModel(string $model)
    {
        try {

            $model = app($model);

            switch ($model->getConnectionName()) {

                case 'mongodb':

                    if (method_exists($model, 'columns')) {
                        $columns = $model::columns();
                        $colloction = new Collection();
                        foreach ($columns as $column => $type) {
                            $column = new Column($column, $type);
                            $colloction->push($column);
                        }

                        return $colloction->toArray();
                    }
                    return [];
                default:
                    $table = $model->getConnection()->getTablePrefix().$model->getTable();
                    $schema = $model->getConnection()->getDoctrineSchemaManager($table);
                    $databasePlatform = $schema->getDatabasePlatform();
                    $databasePlatform->registerDoctrineTypeMapping('enum', 'string');

                    $database = null;

                    if (strpos($table, '.')) {
                        list($database, $table) = explode('.', $table);
                    }

                    return $schema->listTableColumns($table, $database);
            }
        } catch (\Exception $e) {

        }

        return [];
    }
}
```

and in the mongo model 

```
/**
     * @return array|bool
     */
    protected static function columns()
    {
        try {
            return [
                'id' => Type::getType(Type::BIGINT),
                'component_type_id' => Type::getType(Type::BIGINT),
                'labels' => Type::getType(Type::TARRAY),
                'visualization_type' => Type::getType(Type::STRING),
                'created_at' => Type::getType(Type::DATETIMETZ),
                'data' => Type::getType(Type::JSON),
            ];
        } catch (\Exception $e) {
            if (config('app.debug')) {
                dd($e);
            }
            return false;
        }
    }
```
Hey, its there a way to support OctoberCMS models?

https://octobercms.com/
Relationships added dynamically with macros aren't shown

E.g.
```php
\Illuminate\Database\Eloquent\Builder::macro('foo', function () {
    return $this->getModel()->morphMany(\App\Models\Foo::class, 'foable');
});
```
Invoking directly the method [code](https://github.com/beyondcode/laravel-er-diagram-generator/blob/master/src/RelationFinder.php#L70) can lead to unexpected code execution. Before executing the method a great filter could be the use of `ReflectionFunctionAbstract::getReturnType`. If not mandatory i think it sould be at least configurable.

Anyway, great package!