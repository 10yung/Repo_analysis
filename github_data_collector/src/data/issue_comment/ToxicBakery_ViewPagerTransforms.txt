when i used this with very fast action to switch,fragment's variable  are in disorderï¼Œ
Height and Width of my fragment decreased after Page Transformation.
I'm using BackgroundToForegroundTransformer. 
After the transformation, i want to set my fragment size to original size. I don't want to decrease the height and width of my fragment.
How can i do it  ?



How to test bug: add next code in onCreate, run app, choose some transformation and wait for 6 seconds, it will change something but slider won't appear or animation would be frozen (paused at its start)

```
        // test bug
        Handler handler = new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                mPager.setCurrentItem(4, false);
            }
        }, 6000);
```


```
protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);

        int selectedPage = 0;
        if (savedInstanceState != null) {
            mSelectedItem = savedInstanceState.getInt(KEY_SELECTED_CLASS);
            selectedPage = savedInstanceState.getInt(KEY_SELECTED_PAGE);
        }

        final ArrayAdapter<TransformerItem> actionBarAdapter = new ArrayAdapter<>(
                getApplicationContext(), android.R.layout.simple_list_item_1, android.R.id.text1, TRANSFORM_CLASSES);

        setContentView(R.layout.activity_main);

        mAdapter = new PageAdapter(getFragmentManager());

        mPager = (ViewPager) findViewById(R.id.container);
        mPager.setAdapter(mAdapter);
        mPager.setCurrentItem(selectedPage);

        // test bug
        Handler handler = new Handler();
        handler.postDelayed(new Runnable() {
            @Override
            public void run() {
                mPager.setCurrentItem(4, false);
            }
        }, 6000);

        final ActionBar actionBar = getActionBar();
        if (actionBar != null) {
            actionBar.setListNavigationCallbacks(actionBarAdapter, this);
            actionBar.setNavigationMode(ActionBar.NAVIGATION_MODE_LIST);

            //noinspection ResourceType
            actionBar.setDisplayOptions(actionBar.getDisplayOptions() ^ ActionBar.DISPLAY_SHOW_TITLE);

            actionBar.setSelectedNavigationItem(mSelectedItem);
        }

    }
```

for example with ZoomOutSliderTransformer slider won't be fully 100% taking all space of layout (you can see white paddings or margin at right and bottom)

![screenshot_2017-10-01-18-40-51-795_com toxicbakery viewpager transforms](https://user-images.githubusercontent.com/8851301/31056315-6565d39e-a6d8-11e7-9223-39b162484867.png)


Hi, I am using your library, trying to implement FlipHorizontalTransformer

Inside my view pagers I have fragments with buttons, and their onClickLIsteners...but every time I use your library, these listeners start to overlap:

I have 2 pages: On page on i have Button1 and on page 2 i have Button2 (on same sort of relative location)

But when I am on page2 and click to Button2 -> Button1 onClick lister fires up!!!

Its like this page never left screen...its still on top (but hidden)...can you explain how to fix this ?! 
Don't have time to do a proper change, test, and pull request so I'm just going to write this issue. If no one fixes, I'll come back to make the change and pull request after my app release.

Problem: those modifications have the side effect that if I change transformations after a vertical or horizontal flip, when I swipe the other direction, the off screen view, which is now on screen, remains hidden. 

I believe the framework already (sort of) supported the necessary change to remedy this. For anyone that runs into the problem, make the following change to ABaseTransformer:
`if (hideOffscreenPages() && (position <= -1f || position >= 1f)) {
            page.setVisibility(View.INVISIBLE);
            page.setAlpha(0f);
//          page.setEnabled(false);
        } else {
//          page.setEnabled(true);
            page.setAlpha(1f);
            page.setVisibility(View.VISIBLE);
        }
`
And then you can remove the onPostTransform from FlipHorizontal and FlipVertical.

In doing other work I did a limited amount of research on alpha vs visibility. I found a post from Romain Guy saying to use visibility and not alpha to hide/show as it's more efficient. The original defects were due to the framework using alpha to hide. The partial fixes switched to using visibility to prevent interaction with "off screen" pages, as it should be IMO. Problem is the side effect I found. Moving this into the framework itself fixes both these transformations and future transformations.

I left the alpha change in as it's necessary to clean up after some transformations. I don't think the setEnabled is necessary and it's commented out in my copy.

To the original developer that fixed the Flip transformation, thank you! I'd been having a problem being unable to scroll after a transformation and not taking the time to debug. Your fix helped very much.

I override `PagerAdapter.getPageWidth`: 

```
@Override
public float getPageWidth(int position) {
    return 0.5f;
}
```
