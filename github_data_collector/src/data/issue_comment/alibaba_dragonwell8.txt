**Description**
exception found while use dragonwell8 + easyexcel lib 



**Expected behavior**
java.lang.NullPointerException: null
	at sun.awt.FontConfiguration.getVersion(FontConfiguration.java:1264) ~[na:1.8.0_222]
	at sun.awt.FontConfiguration.readFontConfigFile(FontConfiguration.java:219) ~[na:1.8.0_222]
	at sun.awt.FontConfiguration.init(FontConfiguration.java:107) ~[na:1.8.0_222]
	at sun.awt.X11FontManager.createFontConfiguration(X11FontManager.java:774) ~[na:1.8.0_222]
	at sun.font.SunFontManager$2.run(SunFontManager.java:431) ~[na:1.8.0_222]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_222]
	at sun.font.SunFontManager.<init>(SunFontManager.java:376) ~[na:1.8.0_222]
	at sun.awt.FcFontManager.<init>(FcFontManager.java:35) ~[na:1.8.0_222]
	at sun.awt.X11FontManager.<init>(X11FontManager.java:57) ~[na:1.8.0_222]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method) ~[na:1.8.0_222]
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62) ~[na:1.8.0_222]
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45) ~[na:1.8.0_222]
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423) ~[na:1.8.0_222]
	at java.lang.Class.newInstance(Class.java:442) ~[na:1.8.0_222]
	at sun.font.FontManagerFactory$1.run(FontManagerFactory.java:83) ~[na:1.8.0_222]
	at java.security.AccessController.doPrivileged(Native Method) ~[na:1.8.0_222]
	at sun.font.FontManagerFactory.getInstance(FontManagerFactory.java:74) ~[na:1.8.0_222]
	at java.awt.Font.getFont2D(Font.java:491) ~[na:1.8.0_222]
	at java.awt.Font.canDisplayUpTo(Font.java:2060) ~[na:1.8.0_222]
	at java.awt.font.TextLayout.singleFont(TextLayout.java:470) ~[na:1.8.0_222]
	at java.awt.font.TextLayout.<init>(TextLayout.java:531) ~[na:1.8.0_222]
	at org.apache.poi.ss.util.SheetUtil.getDefaultCharWidth(SheetUtil.java:273) ~[poi-4.1.0.jar!/:4.1.0]
	at org.apache.poi.xssf.streaming.AutoSizeColumnTracker.<init>(AutoSizeColumnTracker.java:117) ~[poi-ooxml-4.1.0.jar!/:4.1.0]
	at org.apache.poi.xssf.streaming.SXSSFSheet.<init>(SXSSFSheet.java:82) ~[poi-ooxml-4.1.0.jar!/:4.1.0]
	at org.apache.poi.xssf.streaming.SXSSFWorkbook.createAndRegisterSXSSFSheet(SXSSFWorkbook.java:674) ~[poi-ooxml-4.1.0.jar!/:4.1.0]
	at org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:695) ~[poi-ooxml-4.1.0.jar!/:4.1.0]
	at org.apache.poi.xssf.streaming.SXSSFWorkbook.createSheet(SXSSFWorkbook.java:87) ~[poi-ooxml-4.1.0.jar!/:4.1.0]
	at com.alibaba.excel.util.WorkBookUtil.createSheet(WorkBookUtil.java:57) ~[easyexcel-2.0.5.jar!/:na]
	at com.alibaba.excel.context.WriteContextImpl.initSheet(WriteContextImpl.java:191) ~[easyexcel-2.0.5.jar!/:na]
	at com.alibaba.excel.context.WriteContextImpl.currentSheet(WriteContextImpl.java:141) ~[easyexcel-2.0.5.jar!/:na]
	at com.alibaba.excel.write.ExcelBuilderImpl.addContent(ExcelBuilderImpl.java:91) ~[easyexcel-2.0.5.jar!/:na]
	at com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:155) ~[easyexcel-2.0.5.jar!/:na]
	at com.alibaba.excel.ExcelWriter.write(ExcelWriter.java:140) ~[easyexcel-2.0.5.jar!/:na]
	at com.hcll.sail.file.consumer.controller.ExportController.exportMoMessage(ExportController.java:215) ~[classes!/:na]
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[na:1.8.0_222]
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62) ~[na:1.8.0_222]
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[na:1.8.0_222]
	at java.lang.reflect.Method.invoke(Method.java:498) ~[na:1.8.0_222]

**JDK version**
The output of `java -version` command

**Execution environment**
centos 7
**Description**
JWarmup removes a class from the `ClassInitChainEntry` when the class is unloaded. During removing, methods declared in the class can be removed directly without checking their liveness.

**Steps to Reproduce**
Steps to reproduce the behavior:
1. Not a bug.

**Expected behavior**
JVM should not crash when methods are removed the `ClassInitChainEntry`.

**JDK version**
openjdk version "1.8.0_222"
OpenJDK Runtime Environment (Alibaba Dragonwell 8.1.1-b00) (build 1.8.0_222-b10)
OpenJDK 64-Bit Server VM (Alibaba Dragonwell 8.1.1-b00) (build 25.222-b10, mixed mode)

**Execution environment**
 - OS and version: Linux
 - CPU model: x64
 - Number of CPU cores:
 - Size of physical memory:
 - Inside Linux container?
   - Linux container name (docker, pouch, etc):
   - Linux container version:

# JRE version: OpenJDK Runtime Environment (8.0_222-b10) (build 1.8.0_222-b10)
# Java VM: OpenJDK 64-Bit Server VM (25.222-b10 mixed mode windows-amd64 compressed oops)
# Failed to write core dump. Minidumps are not enabled by default on client versions of Windows
#
# An error report file with more information is saved as:
**Platform:**
 Fedora release 30 (Thirty), Debian GNU/Linux 9.9 (stretch), Ubuntu 18.04, Arch Linux
openjdk version "1.8.0_212"
OpenJDK Runtime Environment (Alibaba Dragonwell 8.0.0-b03) (build 1.8.0_212-b04)
OpenJDK 64-Bit Server VM (Alibaba Dragonwell 8.0.0-b03) (build 25.212-b04, mixed mode)

**Architecture:**
amd64

Please see the following images for Google font "[Great Vibes](https://fonts.google.com/specimen/Great+Vibes)":

**OpenJDK 8** **_broken_** font redering:

![openjdk-8-font-incorrect](https://user-images.githubusercontent.com/125954/67096926-6529e900-f1b9-11e9-82ba-1e672216225d.png)

![openjdk-8-font-incorrect-marked](https://user-images.githubusercontent.com/125954/67101295-a58d6500-f1c1-11e9-9cc8-8dc72eb6da19.png)


**OracleJDK 8, OpenJDK 10, 11, 13** correct font rendering:

![openjdk-13-font-correct](https://user-images.githubusercontent.com/125954/67096942-6d822400-f1b9-11e9-8f39-43175ffe1189.png)

**Example code**:

Wrong rendering **_not_** visible:
```java
javax.swing.JButton button = new javax.swing.JButton("Open");
java.awt.Font font = new java.awt.Font("Great Vibes", Font.PLAIN, 64);
button.setFont(font);
```
![OpenJDK-8-font-size-128-wrong-rendering-not-visible png](https://user-images.githubusercontent.com/125954/67099592-8b05bc80-f1be-11e9-995b-b535ac0dda12.png)

Wrong rendering visible:
```java
javax.swing.JButton button = new javax.swing.JButton("Open");
java.awt.Font font = new java.awt.Font("Great Vibes", Font.PLAIN, 128);
button.setFont(font);
```
![OpenJDK-8-font-size-128-wrong-rendering-visible](https://user-images.githubusercontent.com/125954/67099600-8e994380-f1be-11e9-8c5a-024eb3b1809b.png)

As it turned out, it is related to the [font version](https://github.com/corretto/corretto-8/files/3748490/Great.Vibes.ttf.zip) we are using.:
* [broken font version:](https://github.com/corretto/corretto-8/files/3748490/Great.Vibes.ttf.zip)
* [correct font version](https://github.com/corretto/corretto-8/files/3748496/greatvibes.zip) downloaded from [here](https://github.com/google/fonts/archive/master.zip)

**Description**
```
#
# A fatal error has been detected by the Java Runtime Environment:
#
#  SIGSEGV (0xb) at pc=0x00007f27f207ba44, pid=10448, tid=0x00007f27d52fe700
#
# JRE version: OpenJDK Runtime Environment (8.0_222-b10) (build 1.8.0_222-b10)
# Java VM: OpenJDK 64-Bit Server VM (25.222-b10 mixed mode linux-amd64 compressed oops)
# Problematic frame:
# V  [libjvm.so+0x4a1a44]  CMBitMapClosure::do_bit(unsigned long)+0xd4
#
# Failed to write core dump. Core dumps have been disabled. To enable core dumping, try "ulimit -c unlimited" before starting Java again
#
# If you would like to submit a bug report, please visit:
#   http://bugreport.java.com/bugreport/crash.jsp
#

---------------  T H R E A D  ---------------

Current thread (0x00007f27dc02b800):  ConcurrentGCThread [stack: 0x00007f27d51fe000,0x00007f27d52ff000] [id=10460]

siginfo: si_signo: 11 (SIGSEGV), si_code: 1 (SEGV_MAPERR), si_addr: 0x0000000000000010

Registers:
RAX=0x00007f27f2bff860, RBX=0x00007f27dc032fe0, RCX=0x0000000000000003, RDX=0x0000000000000001
RSP=0x00007f27d52fdcb0, RBP=0x00007f27d52fdcd0, RSI=0x000000001341b078, RDI=0x0000000000000008
R8 =0x00007f27d5400000, R9 =0x00000000004d0800, R10=0x0000000002680000, R11=0x0000000000000202
R12=0x00007f27d52fdd30, R13=0x000000079a0d83c0, R14=0x00007f27f2c1e824, R15=0x00007f27dc032fe0
RIP=0x00007f27f207ba44, EFLAGS=0x0000000000010202, CSGSFS=0x0000000000000033, ERR=0x0000000000000004
  TRAPNO=0x000000000000000e

Top of Stack: (sp=0x00007f27d52fdcb0)
0x00007f27d52fdcb0:   0000000013420000 000000079a100000
0x00007f27d52fdcc0:   00007f27dc028e50 000000001341b078
0x00007f27d52fdcd0:   00007f27d52fddd0 00007f27f2077af0
0x00007f27d52fdce0:   00007f27dc02c850 00000001dc02c828
0x00007f27d52fdcf0:   4024000000000000 3fe0000000000000
0x00007f27d52fdd00:   00007f27dc0330f0 0100000000000000
0x00007f27d52fdd10:   00007f27dc028e68 00007f27d52fdd30
0x00007f27d52fdd20:   00007f27d52fdd90 00007f27f24c05cc
0x00007f27d52fdd30:   00007f27f2bd1390 00007f27dc028e50
0x00007f27d52fdd40:   00007f27dc028d70 00007f27dc032fe0
0x00007f27d52fdd50:   00007f27f2bd0d70 0000000000009c00
0x00007f27d52fdd60:   00007f27dcc17450 00007f27f2bdae20
0x00007f27d52fdd70:   0000000000000000 00007f27d52fdd50
0x00007f27d52fdd80:   00007f27dc028d70 0000000000870d00
0x00007f27d52fdd90:   00007f27dc032fe0 0000000000000008
0x00007f27d52fdda0:   0000000000000000 00007f27dc032fe0
0x00007f27d52fddb0:   00007f27d53fed00 00007f27dc02bc30
0x00007f27d52fddc0:   00007f27f2c2d7e0 00007f27f2bedbb0
0x00007f27d52fddd0:   00007f27d52fde60 00007f27f207d261
0x00007f27d52fdde0:   00007f27f2bd0dd0 00000000000003d8
0x00007f27d52fddf0:   00007f27dc02c058 00007f27dc02bc80
0x00007f27d52fde00:   0000000000000000 400a116a8b8f14db
0x00007f27d52fde10:   00000000dc02b140 00007f27dc02bc70
0x00007f27d52fde20:   40108a9e6eeb7026 40115f93ff25e56d
0x00007f27d52fde30:   00007f27d52fde60 00007f27dc02b140
0x00007f27d52fde40:   00007f27dc02b800 000000000000000e
0x00007f27d52fde50:   00007f27d53fed00 000000000000000e
0x00007f27d52fde60:   00007f27d52fdea0 00007f27f26862da
0x00007f27d52fde70:   00007f27d52fdea0 00007f27dc02cc80
0x00007f27d52fde80:   00007f27dc02cb90 00007f27dc02b800
0x00007f27d52fde90:   00007f27f3a4f040 0000000000000003
0x00007f27d52fdea0:   00007f27d52fdee0 00007f27f24bfb42 

Instructions: (pc=0x00007f27f207ba44)
0x00007f27f207ba24:   5b 41 5c 41 5d 41 5e 83 f0 01 5d c3 48 8d 05 29
0x00007f27f207ba34:   3e b8 00 41 8b 7d 08 8b 48 08 48 d3 e7 48 03 38
0x00007f27f207ba44:   8b 4f 08 83 f9 00 0f 8f 6e ff ff ff 0f 85 8a 00
0x00007f27f207ba54:   00 00 66 2e 0f 1f 84 00 00 00 00 00 48 8b 07 4c 

Register to memory mapping:

RAX=0x00007f27f2bff860: <offset 0x1025860> in /home/tomcat/j2sdk-image/jre/lib/amd64/server/libjvm.so at 0x00007f27f1bda000
RBX=0x00007f27dc032fe0 is an unknown value
RCX=0x0000000000000003 is an unknown value
RDX=0x0000000000000001 is an unknown value
RSP=0x00007f27d52fdcb0 is an unknown value
RBP=0x00007f27d52fdcd0 is an unknown value
RSI=0x000000001341b078 is an unknown value
RDI=0x0000000000000008 is an unknown value
R8 =0x00007f27d5400000 is an unknown value
R9 =0x00000000004d0800 is an unknown value
R10=0x0000000002680000 is an unknown value
R11=0x0000000000000202 is an unknown value
R12=0x00007f27d52fdd30 is an unknown value
R13=0x000000079a0d83c0 is an unknown value
R14=0x00007f27f2c1e824: <offset 0x1044824> in /home/tomcat/j2sdk-image/jre/lib/amd64/server/libjvm.so at 0x00007f27f1bda000
R15=0x00007f27dc032fe0 is an unknown value


Stack: [0x00007f27d51fe000,0x00007f27d52ff000],  sp=0x00007f27d52fdcb0,  free space=1023k
Native frames: (J=compiled Java code, j=interpreted, Vv=VM code, C=native code)
V  [libjvm.so+0x4a1a44]  CMBitMapClosure::do_bit(unsigned long)+0xd4
V  [libjvm.so+0x49daf0]  CMTask::do_marking_step(double, bool, bool)+0x8a0
V  [libjvm.so+0x4a3261]  CMConcurrentMarkingTask::work(unsigned int)+0xd1
V  [libjvm.so+0xaac2da]  GangWorker::loop()+0xca
V  [libjvm.so+0x8e5b42]  java_start(Thread*)+0xf2


---------------  P R O C E S S  ---------------
```

**Steps to Reproduce**
Steps to reproduce the behavior:
try following vm options:
 -Xms3g -Xmx3g -XX:MaxPermSize=128M -XX:+UseG1GC -XX:+G1ElasticHeap -XX:+ElasticHeapPeriodicUncommit  -XX:-UseSplitVerifier -XX:MaxDirectMemorySize=64m 


**Expected behavior**
work well

**JDK version**
8.1.1GA

**Execution environment**
 - OS and version: CentOS release 6.9 (Final)
 - CPU model: Intel(R) Xeon(R) Platinum 8163 CPU @ 2.50GHz
 - Number of CPU cores: 4 
 - Size of physical memory:
 - Inside Linux container? No
   - Linux container name (docker, pouch, etc):
   - Linux container version:

1. The following error occurred when executing the `get_source_dragonwell.sh -s github` command

```
Cloning into 'dragonwell8-corba'...
Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
```

I know this because I didn't set GitHub SSH public key.
It is suggested that line 66 of get_source_dragonwell.sh be changed from `GITURL= "git@github.com:alibaba"` to `GITURL= "https://github.com/alibaba"`. 
This problem can be solved simply and effectively.

2. It is suggested to add executable permissions to the `configure` script.
