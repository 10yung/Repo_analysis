if there is an animation for a presentr view (for example selecting a customer from a custom view) and that view is animating to the screen - if there is another view that is required to be displayed (as a result of the first customer select view) it will be displayed at 100% height and width.
### What does this PR do?

Simply updating the README.md to reflect 'dismissOnTap' change

This library is excellent and it would be great if we could install it with Swift Package Manager. Please add SPM support for Xcode 11. :)

<img width="660" alt="Presentr" src="https://user-images.githubusercontent.com/2513753/63707488-dd41e700-c7e6-11e9-8eaa-1b32c1f29ed7.png">

Is there any official / recommended / supported way to expand a presented view controller (say, for example, at half-screen size) to full screen? And then toggle back to the previous size?
when I downloaded the example project, I used Swift5 . when I tap the "Alert without animation", I could not  see any AlertView.  but it is appear sometimes
Is there a way to detect when the presentr window has been dismissed?
Hello,

I am trying to present a UIViewController with Presentr controller.

```
let width = ModalSize.custom(size: Float.init(scheduleDispPrefVC.preferredContentSize.width))
        let height = ModalSize.custom(size: Float.init(scheduleDispPrefVC.preferredContentSize.height))
        let center = ModalCenterPosition.customOrigin(origin: CGPoint(x: 0, y: 100))
        let customType = PresentationType.custom(width: width, height: height, center: center)
        
        presenter = Presentr.init(presentationType: customType)
        presenter?.backgroundOpacity = 0.25
        presenter?.transitionType = TransitionType.coverVerticalFromTop
        presenter?.dismissTransitionType = TransitionType.coverVerticalFromTop
        presenter?.backgroundTap = BackgroundTapAction.passthrough
        customPresentViewController(presenter!, viewController: scheduleDispPrefVC, animated: true)
```
ScheduleViewOption is the new vc which i am trying to present below app header but when it is presented then i am not able to click header buttons.
When I run this I get as shown in image.
![Screenshot 2019-04-18 at 1 00 13 PM](https://user-images.githubusercontent.com/6183766/56344271-a0cc0200-61da-11e9-952c-519144fa5583.png)

Hello guys.
I have faced with an issue related to safe area during interactive presentation. Does someone knows how to fix it?

I have added in PresentrExample.MainTableViewController -> `lazy var alertViewController` following codeL
```swift
        if #available(iOS 11.0, *) {
            let custom = UIView()
            custom.backgroundColor = UIColor.red.withAlphaComponent(0.5)
            custom.translatesAutoresizingMaskIntoConstraints = false
            alertController.view.addSubview(custom)
            NSLayoutConstraint.activate([
                custom.leadingAnchor.constraint(equalTo: alertController.view.leadingAnchor),
                custom.trailingAnchor.constraint(equalTo: alertController.view.trailingAnchor),
                custom.bottomAnchor.constraint(equalTo: alertController.view.safeAreaLayoutGuide.bottomAnchor),
                custom.heightAnchor.constraint(equalToConstant: 50)
                ])
        }
```

### What does this PR do?

* Fix frame for compress keyboard translation type on X/XS/XS Max
Hi, trying to get presentr to render over tabs. Is there a way to do this?

![image](https://user-images.githubusercontent.com/2382172/51447725-7dcaa880-1ce6-11e9-8747-ea11c8303b1e.png)

Just using an example setup right now trying to get this to work:
```
    let presenter: Presentr = {
        let presenter = Presentr(presentationType: .bottomHalf)
        return presenter
    }()
    
    var alertController: AlertViewController {
        let alertController = AlertViewController(title: "Are you sure? ‚ö†Ô∏è", body: "This action can't be undone!")
        let cancelAction = AlertAction(title: "NO, SORRY! üò±", style: .cancel) {
            print("CANCEL!!")
        }
        let okAction = AlertAction(title: "DO IT! ü§ò", style: .destructive) {
            print("OK!!")
        }
        alertController.addAction(cancelAction)
        alertController.addAction(okAction)
        
        return alertController
    }
```