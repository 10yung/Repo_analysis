getting an undefined reference to mbedtls_md_file even if it is defined in the config.h file. 
## Description
This PR applies to IO callbacks used in ssl test suites and contains:
 * Fixed segmentation fault for some of sequences realized with mbedtls_test_buffer
 * Changed behavior for non-blocking read/write. Previously the blocking error was used depending on blocking_patern which was preset by test designer. Currently the blocking error for non-blocking functions is returned depending on whether buffer is empty or full
* Tests for both upper points


## Status
**READY**

## Requires Backporting
NO  

## Migrations
NO

## Todos
- [ ] Tests

This PR is an implementation of  IOTSSL-2958.
It adds tests for a message-based connection. An additional layer of metadata is laid on the base of I/O callbacks to perform as a message queue. The receive function had to be modified to enable data dropping.
The changes themselves can be divided into two (as are the tests for them):
- The metadata layer only, which can operate separately from the connection itself (this lets the developers to approach it in a more TDD way);
- The integration layer, which uses the underlying mocked sends/reads and the metadata layer to provide a compound functionality, hidden behind `mbedtls_message_socket_setup`, `mbedtls_mock_tcp_send_msg`, `mbedtls_mock_tcp_recv_msg`, and `mbedtls_message_socket_close`. 

The only function that's used from the lower, socket mock layer is `mbedtls_mock_socket_connect`, but since, if it was to be hidden, the function that would be hiding it would only consist of a single line calling `mbedtls_mock_socket_connect` - I figured it wouldn't be necessary, especially for tests.
## Description
Move dummy rounds to the start/end of the AES calculations.

This PR is made on top of https://github.com/ARMmbed/mbedtls/pull/2982

## Status
**READY**
## Description
- Type: Bug 
- Priority: Minor

Raised in the [forum](https://forums.mbed.com/t/typo-in-the-comment/6732) by David Timber


---------------------------------------------------------------
## Bug

**mbed TLS build:**  
Version: 2.16.3

**Expected behavior**   
No typo in function description

**Actual behavior**  
[typo](https://github.com/ARMmbed/mbedtls/blob/development/include/mbedtls/ssl.h#L4020): "Load reason**n**able default SSL configuration values."

Description
This PR add test for prescribed states of handshake and gives endpoint structure which allows to future SSL communication simulation with the custom IO callbacks


## Status
**READY**

## Requires Backporting
 NO  

## Todos
- [ ] Tests


Is there any reason why IP and URI subject names aren't supported?

https://github.com/ARMmbed/mbedtls/blob/252faff19f938f6b9b107b289c750786a5abecdc/library/x509_crt.c#L1879
### Description
- Type: Bug
- Priority: Minor
Raised in the [forum](https://forums.mbed.com/t/how-to-avoid-warning-passing-int-to-parameter-of-type-socklen-t-aka-unsigned-int-converts-between-pointers-to-integer-types-with-different-sign-wpointer-sign/6638) by pii

---------------------------------------------------------------
## Bug

**OS**  
Android

**mbed TLS build:**  
Version: 2.16.3
OS version: Android/sdk/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/

**Expected behavior**   
Build finishes without any warning
**Actual behavior**  
Build warning because neither `#if defined(__socklen_t_defined) || defined(_SOCKLEN_T) ||  \
    defined(_SOCKLEN_T_DECLARED) || defined(__DEFINED_socklen_t)` is defined:
~~~
External/.build_area/mbedtls-2.16.3/library/net_sockets.c:332:37: warning: passing 'int *'
      to parameter of type 'socklen_t *' (aka 'unsigned int *') converts between pointers to integer types with
      different sign [-Wpointer-sign]
                    (void *) &type, &type_len ) != 0 ||
                                    ^~~~~~~~~
/Users/pi/Library/Android/sdk/ndk-bundle/toolchains/llvm/prebuilt/darwin-x86_64/sysroot/usr/include/sys/socket.h:311:92: note: 
      passing argument to parameter '__value_length' here
__socketcall int getsockopt(int __fd, int __level, int __option, void* __value, socklen_t* __value_length);
                                                                                           ^
External/.build_area/mbedtls-2.16.3/library/net_sockets.c:342:80: warning: passing 'int *'
      to parameter of type 'socklen_t *' (aka 'unsigned int *') converts between pointers to integer types with
      different sign [-Wpointer-sign]
                                             (struct sockaddr *) &client_addr, &n );
~~~
`getsockopt` receives 'socklen_t *' (aka 'unsigned int *') , however since none of the precompilation checks is defined, `int` is sent as parameter
## Description

This PR fixes a gap in our testing: we didn't test any build with zlib (for TLS record compression) enabled. This is a deprecated option but it should nonetheless be tested until it's removed for real.

The usefulness of these tests is illustrated by the fact that in their absence, we introduced a bug in 2.19 that caused us to fail to build with zlib enabled: https://github.com/ARMmbed/mbedtls/issues/2859

## Status
**READY**

## Requires Backporting

This is the 2.7 backport of https://github.com/ARMmbed/mbedtls/pull/2975

## Migrations

NO

## Additional comments

No ChangeLog entry as this is only a change in tests, not in the library.

## Steps to test or reproduce

`tests/scripts/all.sh 'test_zlib*'`

## Description

This PR fixes a gap in our testing: we didn't test any build with zlib (for TLS record compression) enabled. This is a deprecated option but it should nonetheless be tested until it's removed for real.

The usefulness of these tests is illustrated by the fact that in their absence, we introduced two bug in 2.19 that caused us to fail to build or run with zlib enabled: #2859 plus another one that was found by the tests and is fixed in this PR.

__Dependencies:__ This PR is based on #2963 which fixes a bug in building with zlib - the added test obviously wouldn't pass without that fix.

## Status
**READY**

## Requires Backporting

Yes - for the tests (the bugfix is only applicable to development, the LTS branches are free from the bug as the tests show).

- [x] Mbed TLS 2.16 https://github.com/ARMmbed/mbedtls/pull/2972
- [x] Mbed TLS 2.7 https://github.com/ARMmbed/mbedtls/pull/2976

## Migrations

NO

## Additional comments

No ChangeLog entry as this is only a change in tests, not in the library, and the runtime bug probably doesn't need it own entry as it was hidden by the compile bug.

## Steps to test or reproduce

Run `tests/scripts/all.sh 'test_zlib*'` and observe the result, in particular the two lines with `Default (compression enabled)` in the output of `ssl-opt.sh`.
