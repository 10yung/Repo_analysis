the command Faraday::Error::TimeoutError doesn't exist anymore, was replaced for this command Faraday::TimeoutError
how to make the bot the do these actions 

ban 
unban
kick
mute 
unmute
warn
unwarn 

  in supergroup


gem install telegram-bot-ruby
require t.me/@LXR_Verifybot
token = 727038858:AAEhQBZIKBmNf88HW2o47Rl0TVC8n19p_Co
Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |message|
    case message.text
    when 'Hello'
      bot.api.send_message(chat_id: message.chat.id, text: "Hello, #{message.from.first_name}")
    when 'How are you ?'
       bot.api.send_message(chat_id: message.chat.id, text: "I'm ok. Thanks")
    when 'Do you know Maria Yui Ozawa Hatano?'
       bot.api.send_message(chat_id: message.chat.id, text: "Sure. I love her. I alway watch her film")
    end
  end
end
token = 727038858:AAEhQBZIKBmNf88HW2o47Rl0TVC8n19p_Co
Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |message|
    case message.text
    when 'Hello'
      bot.api.send_message(chat_id: message.chat.id, text: "Hello, #{message.from.first_name}")
    when 'How are you ?'
       bot.api.send_message(chat_id: message.chat.id, text: "I'm ok. Thanks")
    when 'Do you know Maria Yui Ozawa Hatano?'
       bot.api.send_message(chat_id: message.chat.id, text: "Sure. I love her. I alway watch her film")
    end
  end
end
How can I make this stateless using lamda if the process is running?  Is there a way to process input and stop?  I want to push my code to AWS lambda or similar. 

Guessing I would need to register a callback with the bot or something.
I want to make quiz. But I don't understand how to do it.

I can't save user's message correctly.

For example I have one question:

```
Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |message|
    bot.api.send_message(chat_id: message.chat.id, text: '2+2')
    bot.api.send_message(chat_id: message.chat.id, text: 'OK') if message.text == '4'
  end
end
```

So dialogue is:

>                             /start

>  2+2

>                                4

>  2+2

>  OK



Using filter `/start`:

```
Telegram::Bot::Client.run(token) do |bot|
  bot.listen do |message|
    case message.text
    when '/start'
      bot.api.send_message(chat_id: message.chat.id, text: '2+2')
      bot.api.send_message(chat_id: message.chat.id, text: 'OK') if message.text == '4'
    end
  end
end
```

So dialogue:

>                             /start

>  2+2

>                                4
Libraries should not intercept SIGINT or handle `exit`ing it's process or thread. This PR provides a method interface for cleanly stopping the poller via `.stop` while allowing SIGINT to be handled by the application developer.

Includes patch version bump.

I have the bot working and it response very nice

but i want also to send messages trom the command line is that also possible? and if you how?
i can not find anything about it
hi everyone i am beginer and want to lern how can i make bot who can messgage in group every hour for telegram will anyone tell me how can make it where can i start i don't know about anything how to make simple bot but i know coding well