作者已经没有维护了... 
优秀的库，从一开始收益于此。
如果有需求可以看最新的组件化库 https://github.com/YummyLau/ComponentPlugin
调试功能不再耦合在功能组件内，单一module调试多组件，同时面向接口编程，无需任何router！


![image](https://user-images.githubusercontent.com/13369103/63010671-65f08700-beb9-11e9-8434-2f92fa734b7a.png)
如图，只能引入runalone里面的R文件，很奇怪
你好 目前在考虑使用组件化改造项目。所以进来学习一波

由于dagger android的初始化需要写在application当中
假如各个Moudle单独作为App运行的话需要些在各个moudle的的Application当中，
那moudle作为lib的时候,该如何初始化各个lib里 的dagger android呢。
希望能提供一些思路。
各种测试真机，模拟器，debug包，relese包，在7.0以上可以正常的交互，在7.0以下的版本无法交互，这个是什么问题，用自动集成和手动集成build-gradle发布到本地仓库，等等都试过了，最低版本也没问题
android {
    compileSdkVersion 27
    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 27
    ...
用的都是这一套，这是什么情况呢，模拟器也是这个情况7.0以上才能正常运行，但是运行Demo确是好的，我一一对照了不知道哪里出问题了 ，大佬能指点一下吗？可能是哪里的问题？
现在发现很多实体类和layout文件等 各个组件都需要用到 是各个组件单独维护做隔离呢 还是下沉处理 一直闹不明白
![image](https://user-images.githubusercontent.com/16019231/45797658-3bae3d80-bcd9-11e8-987d-10fd73ab5691.png)
不修改组件里面java文件，运行app是没有问题的，只要一修改，就会报删除失败，每次只能关闭所有AS运行的项目，然后去文件夹找到后，删除。
 module A 是一个组件，module B 也是一个组件。
 module A  和  module B 共同依赖 componentService 

如果 module A 需要用到 module B 的功能，但是 Module B 的类是自在自己的模块中定义，请问如何在componentService 中声明接口，因为 componentService 中没有 Module B 中的类？
即使声明了，Module  A 中如何得到？ Module A 中也没有 Module B 中的类？

 // UI transfer with Bundle
    private void goToShareActivityWithBundle() {
        Author author = new Author();
        author.setName("Margaret Mitchell");
        author.setCounty("USA");
        Bundle bundle = new Bundle();
        bundle.putString("bookName", "Gone with the Wind");
        bundle.putString("author", JsonService.Factory.getInstance().create().toJsonString(author));
        UIRouter.getInstance().openUri(getActivity(), "DDComp://share/shareBook", bundle);
    }

这是 Demo 中的数据传递，如果传递 List<Author> 数据，怎么传递？
    @Autowired
    List<Author> author;
接收数据时，这么写，编译报错：错误: 需要<标识符>

@Override
  public void inject(Object target) {
    jsonService = JsonService.Factory.getInstance().create();
    SecondActivity substitute = (SecondActivity)target;
    if (null != jsonService) {
      substitute.children = jsonService.parseObject(substitute.getIntent().getStringExtra("children"), List<Author>.class);
    } else {
      Log.e("AutowiredProcessor", "You want automatic inject the field 'children' in class 'SecondActivity' , but JsonService not found in Router");
    }
    substitute.title = substitute.getIntent().getStringExtra("title");
  }

这是编译生成的类，List<Author>.class 这个地方编译不通过，Cannot select from parameterized type


我原有项目也集成了tinker热修复功能。所以在使用该组件化方案前，测试了一下对tinker的支持。

直接使用DDComponentForAndroid提供的Demo集成buglySdk支持的tinker1.9.6，编译跟运行都没有问题，但是发现在打补丁包的时候出错了。

	异常类型：其他兼容性异常

	手机型号：努比亚Z11 miniS (其他手机也一样)

	手机系统版本：Android6.0

	bugly的tinker支持的SDK版本：com.tencent.bugly:tinker-support:1.1.2

	实际使用的tinker版本：1.9.6

	gradle工具版本：3.0.1

	是否使用热更新SDK： Bugly SDK

	系统：ubuntu18.04

	堆栈/日志：
	Information:Gradle tasks [buildTinkerPatchDebug]
	Error:Failed to complete Gradle execution.

	Cause:
	Gradle build daemon disappeared unexpectedly (it may have been killed or may have crashed)

	Warning:ignoreWarning is false, but we found some loader class has been changed in new primary dex. Such these changes will not take effect!! related classes: {Lcom/luojilab/componentdemo/application/BaseTinkerApplication;}

	Error:com.tencent.tinker.build.util.TinkerPatchException: some loader class has been changed in new primary dex. Such these changes will not take effect!! related classes: {Lcom/luojilab/componentdemo/application/BaseTinkerApplication;}

	Information:2 errors
	Information:1 warning
	Information:See complete output in console

![image](https://user-images.githubusercontent.com/17336101/42553232-9cb5b9a4-8512-11e8-9bbe-f14308d1b888.png)
