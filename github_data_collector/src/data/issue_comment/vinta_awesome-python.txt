## What is this Python project?

[Pybotics](https://github.com/nnadeau/pybotics) is an open-source Python toolbox for robot kinematics and calibration. 
It was designed to provide a simple, clear, and concise interface to quickly simulate and evaluate common robot concepts, such as kinematics, dynamics, trajectory generations, and calibration. 
The toolbox is specifically designed for use with the Modified Denavit–Hartenberg parameters convention.

### Applications & Examples

- [Basic Usage](examples/basic_usage.py)
- [Kinematics](examples/kinematics.ipynb)
- [Calibration](examples/calibration.ipynb)
- [Trajectory and Path Planning](examples/trajectory_generation.ipynb)
- [Machine Learning](examples/machine_learning.ipynb)
- [Dynamics](examples/dynamics.ipynb)

This toolbox was featured in the Journal of Open Source Software: https://doi.org/10.21105/joss.01738

## What's the difference between this Python project and similar ones?

1. As MATLAB® is not necessarily readily available outside of academia, `Pybotics` was originally developed as a fully open-source alternative to the `Robotics Toolbox` by Peter Corke.
2. `rospy` is a client for the ROS framework and performs a different function.
3. `PythonRobotics` is a repository of code samples primarily focusing on trajectory planning for mobile robotics. `Pybotics` focuses more on industrial robots and is a framework for modelling robots.
4. `Pybotics` can be integrated with the above two packages as the modelling component. 

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.

## What is this Python project?

[Sourcery](https://sourcery.ai) is a tool which enables Python developers to write better code faster. It analyses your code and suggests improvements which you can then apply instantly. It is currently available as a PyCharm plugin, with VS Code and Github integrations coming soon.

## What's the difference between this Python project and similar ones?

Sourcery is completely automated - unlike other tools it both identifies the problems and suggests the code changes. It can suggest complex refactorings that dramatically improve code readability in one step. It is also safe - it uses static code analysis to check that all refactoring suggestions won't change the existing functionality.

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.

Add docxtpl
Add loguru

## What is this Python project?

Stores changes to a `JsonStore` object as soon as it is changed, unless a transaction is active. Transactions may use a context manager and be nested, and discard changes if the transaction manager is exited with an exception.

## What's the difference between this Python project and similar ones?

compared to pickleDB, python-sonstore:
* has transactions
* appears to have better documentation of use

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.

## What is this Python project?

The [Datapad](https://github.com/huyng/datapad) library provides a fluent API for processing streams/sequences of data. It is used for loading, cleaning, and manipulating datasets in machine learning and exploratory analysis tasks.

## What's the difference between this Python project and similar ones?

https://datapad.readthedocs.io/en/latest/faq.html

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.

## What is this Python project?

A desktop application that is a replacement for Internet Download Manager, a popular desktop downloader program.

## What's the difference between this Python project and similar ones?

Not aware of other downloader Desktop applications that are Python based.

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.

Repo: https://github.com/PydPiper/pylightxl
Docs: https://pylightxl.readthedocs.io

## What is this Python project?

pylightxl is a light weight, zero dependency (only standard libs used), to the point (no bells and whistles) Microsoft Excel reader/writer(coming soon) python 2.7-3+ library.

## What's the difference between this Python project and similar ones?

- **(compatability +1, small lib +1)** pylightxl has no external dependencies (only uses python builtin standard libs)
- **(compatability +1)** pylightxl was written to be compatible for python 2.7-3+, it does not impose rules on users to switch versions
- **(small lib +1)** pylightxl was written to simply read/write, thereby making the library small without any bells or whiles which makes
  it easy to compile with pyinstaller and other packagers
- **(user friendly +1)** pylightxl was written to be as pythonic and easy to use as possible. Core developers actively survey stackoverflow 
  questions on working with excel files to tailor the API for most common problems.
- **(see [xlrd](https://xlrd.readthedocs.io/en/latest/) before pylightxl)** Note that xlrd library is very similar in values to pylightxl, but with much more functionality! 
  Please take a look at [xlrd](https://xlrd.readthedocs.io/en/latest/) to see if it is a good fit for your project.
  So why pick pylightxl over xlrd that has much more to offer? Currently, xlrd does not have any active developers. Pylightxl
  is a new library aimed to help solve current excel data issues (as surveyed by stackoverflow), please submit your suggestions
  to help improve this library together

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.

added nosqlmodels

## What is this Python project?

nosqlmodel is a first non-relational NoSql ORM framework. Easy way to create models with a nosql backend.

## What's the difference between this Python project and similar ones?

There is no smilar nosql ORM frameworks with multi backends.

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.

## What is this Python project?

Buildbot is the Continuous Integration Framework. 100% Configuration as Code. 

## What's the difference between this Python project and similar ones?

I haven't seen any other projects written in Python that do these same tasks that worked as well.

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.


## Other notes

There have been other attempts to add this to the Awesome list before.

* https://github.com/vinta/awesome-python/pull/1237
* https://github.com/vinta/awesome-python/pull/835
* https://github.com/vinta/awesome-python/pull/324

These just hadn't got the number of votes required to be merged.
## What is this Python project?

**Quart** is a Python ASGI web microframework. It is intended to provide the easiest way to use
asyncio functionality in a web context, especially with existing Flask apps. This is possible as the Quart API is a superset of the Flask API.
Quart aims to be a complete web microframework, as it supports HTTP/1.1, HTTP/2 and websockets. Quart is very extendable and has a number of known extensions and works
with many of the Flask extensions.

## What's the difference between this Python project and similar ones?

**Quart** supports the full ASGI 3.0 specification as well as the websocket response and HTTP/2 server push extensions. For those of you familiar with Flask, Quart extends the Flask-API by adding support for

- HTTP/1.1 request streaming.
- Websockets.
- HTTP/2 server push.

--

Anyone who agrees with this pull request could vote for it by adding a :+1: to it, and usually, the maintainer will merge it when votes reach **20**.