Is `SolidOak` going to support RLS?

There is a plugin for neovim supports Rust Language Server:
https://github.com/autozimu/LanguageClient-neovim
SolidOak built-in terminal does not recognize terminated process


Steps to reproduce:
- build latest master of solidoak on debian testing, as described in README.md.
- create new project, by clicking "New Project" button. A hello world example gets created.
- click "Run" button.


Expected:
- cargo run should compile the project and print "Hello, world!" to the built-in console


Observed:
- project gets compiled, no "Hello, world!" output visible
- built-in console stuck
- when pressing "Stop" button, the ===Finished=== string appears, but no Hello world


Some debugging:
(Please note I'm an absolute newbie to rust. Therefore my debugging capabilities are quite limited. Sorry about that.)
- extend the hello world program to one which takes some input (e.g. guessing game example from doc.rust-lang.org), so that the process does not terminate immediately
- after compilation, the program runs, prints out some println and I can enter a string
- after entering a string, the program is supposed to print a message and exit. 
- no println message visible, built-in console stuck again
- change solidoak code: builders.rs file, run_builder function to print the pid of the process started by cargo run. Recompile solidoak:
```
                match term.fork_command(project_path_str.as_ref(), args) {
                    Ok(pid) => { 
						println!("pid {}",pid);
						*current_pid = pid 
					},
```

- in the xterm where I started solidoak, I see the pid of the process that was started by cargo run, when I click the "Run" button
- with ps aux | grep PIDNR, I can verify that the program is running
- I enter some string to the built-in console, I expect the process to end
- I can verify with ps that the process actually ended
- The built-in terminal did not recoginze that the process ended: Last println! messages not visible and built-in terminal stuck, I have to press "Stop" button
Hi all

I tried to build a DockerContainer but I have a strange error message:

```
error: could not find native static library `nvim`, perhaps an -L flag is missing?                                                   
error: Could not compile `neovim-rs`.
```

Can I build it with the stable toolchain?

Regards

Dockerfile:

``` Dockerfile
FROM scorpil/rust:stable


RUN apt update && \
    apt upgrade -qy && \
    apt install -qy hicolor-icon-theme gnome-icon-theme-extras git \
            libgtk-3-dev libglib2.0-dev libcairo2-dev libvte-2.90-dev \ &&
    apt install -qy \
            libtool autoconf automake cmake libncurses5-dev g++ pkg-config unzip \
    && \
      rm -rf /var/lib/apt/lists/*

RUN cd /rust && git clone https://github.com/oakes/SolidOak.git && \
    cd SolidOak && rm -rf .git && \
    RUST_BACKTRACE=1 cargo build --release

# Replace 1000 with your user / group id
RUN export uid=1000 gid=1000 && \
    mkdir -p /home/user/.local/share/ && \
    mkdir -p /home/user/.config/gtk-3.0 && \
    echo -e "[Settings]\ngtk-recent-files-max-age=0\ngtk-recent-files-limit=0" > /home/user/.config/gtk-3.0/settings.ini && \
    echo gtk-recent-files-max-age=0 >> /home/user/.gtkrc-2.0 && \
    echo "user:x:${uid}:${gid}:Developer,,,:/home/user:/bin/bash" >> /etc/passwd && \
    echo "user:x:${uid}:" >> /etc/group && \
    echo "user ALL=(ALL) NOPASSWD: ALL" > /etc/sudoers.d/user && \
    chmod 0440 /etc/sudoers.d/user && \
    chown ${uid}:${gid} -R /home/user && chmod 755 -R /home/user

USER user
ENV HOME /home/user
CMD cd /rust/SolidOak && cargo run --release || echo 'try "xhost + localhost" if it does not start'

# Build like this:
# docker build --no-cache -t dns2utf8/solidoak .

# Start like this:
# docker run -ti --rm --net=host -e DISPLAY=$DISPLAY --volume="/tmp/.X11-unix/:/tmp/.X11-unix/:rw" --volume="$HOME/.Xauthority:/home/user/.Xauthority:rw" --volume="$(pwd):/home/user/$(basename $(pwd)):rw" dns2utf8/solidoak
```

Some jurisdictions have no concept of committing a work to the "Public Domain" - and others have rights that cannot be waived (authorship rights vs. editorial rights). CC0 handles these by using Public Domain where it exists, and getting as close as possible where it doesn't.

https://wiki.creativecommons.org/wiki/CC0

See also: https://cr.yp.to/publicdomain.html

The title says it all.

`gtk` handles Windows platform for a while now. Any project to add Windows support of SolidOak ? :)

Copying, pasting from the clipboard (Ubuntu 14.04 LTS) does not seem to work.

Am I missing something?

[`xdg_basedir`](http://kiran-kp.github.io/xdg-basedir/xdg_basedir/index.html) has [`get_config_home()`](http://kiran-kp.github.io/xdg-basedir/xdg_basedir/dirs/fn.get_config_home.html) which you can use to get the correct directory to put config files into on linux.

on windows, it should go into `%appdata%`.

for backwards compatibility, it should first try to read from the correct location, then from the old `~/.solidoakrc`, and use the first one it can find. if it canâ€™t find anything, it should create the config file in the correct location.

I have problems in OsX with locale settings. The character set don't display correctly with the spanish keyboard.

There are some way to configure it? Thank you!

Here is an github repository with toml-vim support  https://github.com/cespare/vim-toml
