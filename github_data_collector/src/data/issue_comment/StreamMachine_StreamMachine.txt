Bumps [stringstream](https://github.com/mhart/StringStream) from 0.0.5 to 0.0.6.
<details>
<summary>Commits</summary>

- [`fee31c5`](https://github.com/mhart/StringStream/commit/fee31c5c4a5efc7c7cc2fde4aee633dedefd6d67) 0.0.6
- [`2f4a9d4`](https://github.com/mhart/StringStream/commit/2f4a9d496f94b0880e01a26857aa266a5a3ef274) Merge pull request [#9](https://github-redirect.dependabot.com/mhart/StringStream/issues/9) from mhart/fix-buffer-constructor-vuln
- [`afbc744`](https://github.com/mhart/StringStream/commit/afbc7442220358419e330618e47f3a65fc265b1b) Ensure data is not a number in Buffer constructor
- See full diff in [compare view](https://github.com/mhart/StringStream/compare/v0.0.5...v0.0.6)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=stringstream&package-manager=npm_and_yarn&previous-version=0.0.5&new-version=0.0.6)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/StreamMachine/StreamMachine/network/alerts).

</details>
I need https no matter what, how can i generate https link from this StreamMachine?
StreamMachine is really amazing but i don't know how to do this........
Need Help..

Thanks
Stream Machine is not generating w3c logs.  Stream is up and running, but no logs.  Here's my config:

```
{
        "port"          : 8000,
        "source_port"   : 8001,
        "log": {
                "stdout": {
                        "ignore": "request,interaction"
                },
                "w3c": {
                        "level":    "request",
                        "file":     "/var/log/StreamMachine/w3c.log"
                }
        },
        "streams": {
                "96k": {
                        "metaTitle"     : "WBHM 90.3",
                        "key"           : "96k",
                        "root_route"    : true,
                        "group"         : "live",
                        "format"        : "aac",
                        "fallback"      : "http://10.90.3.163:8000/",
                        "host"          : "https://audio.wbhm.org",
                        "bandwidth"     : "64000",
                        "codec"         : "mp4a.40.34"
                },
                "256k": {
                        "metaTitle"     : "WBHM 90.3",
                        "key"           : "256k",
                        "group"         : "live",
                        "format"        : "aac",
                        "fallback"      : "http://10.90.3.163:8010/",
                        "host"          : "https://audio.wbhm.org",
                        "bandwidth"     : "320000",
                        "codec"         : "mp4a.40.34"
                }
        }
}

```
Works great, but Cool Mic Android App does not works with Stream Machine. It shows error message "ICY source failed to authenticate for test", even if everything correctly given
Hi, 
Is it possible to push song specific information to the listeners ?
Cheers Marc
I want to run streammachine with web frontend. For example just plain node.js web app:

```
'use strict';
var http = require('http');
var port = process.env.PORT || 1337;

http.createServer(function (req, res) {
    res.writeHead(200, { 'Content-Type': 'text/plain' });
    res.end('Hello World\n');
}).listen(port);
```

So how do I add streammachine to this app?

I would like to make simple HTML website that plays stream machine's stream to visitors.
browser is hanging, server is blocking

google chrome

$ lscpu 
Architecture:          x86_64
CPU op-mode(s):        32-bit, 64-bit
Byte Order:            Little Endian
CPU(s):                8
On-line CPU(s) list:   0-7
Thread(s) per core:    2
Core(s) per socket:    4
Socket(s):             1
NUMA node(s):          1
Vendor ID:             GenuineIntel
CPU family:            6
Model:                 58
Model name:            Intel(R) Core(TM) i7-3740QM CPU @ 2.70GHz
Stepping:              9
CPU MHz:               1199.871
CPU max MHz:           3700.0000
CPU min MHz:           1200.0000
BogoMIPS:              5387.98
Virtualization:        VT-x
L1d cache:             32K
L1i cache:             32K
L2 cache:              256K
L3 cache:              6144K
NUMA node0 CPU(s):     0-7


$ uname -a

Linux usr 4.10.0-30-generic #34~16.04.1-Ubuntu SMP Wed Aug 2 02:13:56 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux
 
17405/sourcein -- debug: Incoming source attempt.
/home/jeff/Projetos/radio2/server/js/src/streammachine/master/source_in.js:242
        return this.info.headers[match[1].toLowerCase()] = match[2];
                                      ^

TypeError: Cannot read property '1' of null
    at IcyParser.module.exports.SourceIn.IcyParser.IcyParser.HEADER (/home/jeff/Projetos/radio2/server/js/src/streammachine/master/source_in.js:242:39)
    at IcyParser.module.exports.SourceIn.IcyParser.IcyParser.execute (/home/jeff/Projetos/radio2/server/js/src/streammachine/master/source_in.js:175:25)
    at Socket.<anonymous> (/home/jeff/Projetos/radio2/server/js/src/streammachine/master/source_in.js:62:32)
    at emitNone (events.js:105:13)
    at Socket.emit (events.js:207:7)
    at emitReadable_ (_stream_readable.js:502:10)
    at emitReadable (_stream_readable.js:496:7)
    at addChunk (_stream_readable.js:263:7)
    at readableAddChunk (_stream_readable.js:239:11)
    at Socket.Readable.push (_stream_readable.js:197:10)

It would be great if it was possible to use a stream from websockets (socket.io) :) 
Having bit a of a trouble understanding the workflow/config, in the transcoding case. Two questions pop:

1) Is the icy metadata be preserved in the output? Both Icy and HSL have support for metadata, different tagging, but nevertheless present. If there is no metadata preservation currently, where should the metadata transcoding be hooked? Delighted to work on a meta transcoder we are in need for.

2) What is wrong with this config? Can the source be directly piped to the icy stream? This is what I am after with the config:

```JSON
{
    "port":         8000,
    "source_port":  8001,
    "log": {
        "stdout":     true
  },
  "sources": {
    "test": {
      "format": "mp3",
      "fallback": "http://stream4.nadaje.com:15358/radiokolor"
    }
  },
  "streams": {
    "test-mp3": {
      "key":          "test-mp3",
      "root_route":   true,
      "format":       "mp3",
      "seconds":      3600,
      "metaTitle":    "Testing",
      "host":         "localhost",
      "source":       "test",
      "ffmpeg_args":  "-c:a libmp3lame|-b:a 64k|-f:a adts|-ac 1"
    },
    "test-aac": {
      "key":          "test-aac",
      "root_route":   true,
      "format":       "aac",
      "seconds":      3600,
      "metaTitle":    "Testing",
      "host":         "localhost",
      "source":       "test",
      "ffmpeg_args":  "-c:a libfdk_aac|-b:a 48k|-f:a adts|-profile:a aac_he"
    }
  }
}
```

The console reads:
```
./streammachine-cmd --config ./config/transcoding.json 
adding Console transport
36894 -- debug: StreamMachine standalone initialized.
36894 -- debug: Attaching listener for SIGUSR2 restarts.
36894 -- error: USING API ON MAIN PORT IS UNSAFE! See api_port documentation.
36894 -- debug: Standalone is listening on port 8001
36894 -- info: Attaching listeners.
(node:36894) DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead.
36894/master -- debug: Configuring Source Mapping test
36894/master -- event: Source Mount is initializing. source_mount=test
36894/master -- debug: Parsing stream for test-mp3
36894/master -- debug: Starting up master stream: test-mp3 key=test-mp3, root_route=true, format=mp3, seconds=3600, metaTitle=Testing, host=localhost, source=test, ffmpeg_args=-c:a libmp3lame|-b:a 64k|-f:a adts|-ac 1
36894/master -- debug: Setting up transcoding source for test-mp3 stream=test-mp3
36894/master -- info: ffmpeg started with ffmpeg -i - -c:a libmp3lame -b:a 64k -f:a adts -ac 1 pipe:1 stream=test-mp3, uuid=3fe8837b-6ce0-462d-9194-607938817a91
36894/master -- event: Stream is initializing. stream=test-mp3
36894/master -- info: Initializing RewindBuffer for master stream. stream=test-mp3
36894/master -- debug: Setting up HLS Segmenter. segment_duration=10, stream=test-mp3, module=rewind
36894/master -- debug: RewindBuffer got source event stream=test-mp3, module=rewind
36894/master -- debug: attachIOProxy call for test-mp3. slaves=false, proxy=false
36894/master -- debug: Parsing stream for test-aac
36894/master -- debug: Starting up master stream: test-aac key=test-aac, root_route=true, format=aac, seconds=3600, metaTitle=Testing, host=localhost, source=test, ffmpeg_args=-c:a libfdk_aac|-b:a 48k|-f:a adts|-profile:a aac_he
36894/master -- debug: Setting up transcoding source for test-aac stream=test-aac
36894/master -- info: ffmpeg started with ffmpeg -i - -c:a libfdk_aac -b:a 48k -f:a adts -profile:a aac_he pipe:1 stream=test-aac, uuid=0c725cfe-c2f9-48b3-8c2a-111829b91381
36894/master -- event: Stream is initializing. stream=test-aac
36894/master -- info: Initializing RewindBuffer for master stream. stream=test-aac
36894/master -- debug: Setting up HLS Segmenter. segment_duration=10, stream=test-aac, module=rewind
36894/master -- debug: RewindBuffer got source event stream=test-aac, module=rewind
36894/master -- debug: attachIOProxy call for test-aac. slaves=false, proxy=false
36894/slave -- debug: In slave configureStreams with  key=test-mp3, root_route=true, format=mp3, seconds=3600, metaTitle=Testing, host=localhost, source=test, ffmpeg_args=-c:a libmp3lame|-b:a 64k|-f:a adts|-ac 1, segment_duration=10, limit_full_index=false, preroll=, transcoder=, log_interval=30000, meta_interval=32768, max_buffer=4194304, burst=30, source_password=null, fallback=null, acceptSourceMeta=false, log_minutes=true, monitored=false, metaUrl=, preroll_key=, group=null, bandwidth=0, codec=null, stream_key=null, impression_delay=5000, key=test-aac, root_route=true, format=aac, seconds=3600, metaTitle=Testing, host=localhost, source=test, ffmpeg_args=-c:a libfdk_aac|-b:a 48k|-f:a adts|-profile:a aac_he, $ref=$["options"]["test-mp3"]["hls"], preroll=, transcoder=, log_interval=30000, meta_interval=32768, max_buffer=4194304, burst=30, source_password=null, fallback=null, acceptSourceMeta=false, log_minutes=true, monitored=false, metaUrl=, preroll_key=, group=null, bandwidth=0, codec=null, stream_key=null, impression_delay=5000
36894/slave -- debug: Starting up stream: test-mp3 key=test-mp3, root_route=true, format=mp3, seconds=3600, metaTitle=Testing, host=localhost, source=test, ffmpeg_args=-c:a libmp3lame|-b:a 64k|-f:a adts|-ac 1, segment_duration=10, limit_full_index=false, preroll=, transcoder=, log_interval=30000, meta_interval=32768, max_buffer=4194304, burst=30, source_password=null, fallback=null, acceptSourceMeta=false, log_minutes=true, monitored=false, metaUrl=, preroll_key=, group=null, bandwidth=0, codec=null, stream_key=null, impression_delay=5000
36894/slave -- debug: Enabling HLS Index for stream. stream=test-mp3
36894/slave -- debug: Starting up stream: test-aac key=test-aac, root_route=true, format=aac, seconds=3600, metaTitle=Testing, host=localhost, source=test, ffmpeg_args=-c:a libfdk_aac|-b:a 48k|-f:a adts|-profile:a aac_he, segment_duration=10, limit_full_index=false, preroll=, transcoder=, log_interval=30000, meta_interval=32768, max_buffer=4194304, burst=30, source_password=null, fallback=null, acceptSourceMeta=false, log_minutes=true, monitored=false, metaUrl=, preroll_key=, group=null, bandwidth=0, codec=null, stream_key=null, impression_delay=5000
36894/slave -- debug: Enabling HLS Index for stream. stream=test-aac
36894 -- debug: mapping master -> slave on test-mp3
36894/slave -- debug: Slave stream got source connection stream=test-mp3
36894/slave -- debug: RewindBuffer got source event stream=test-mp3
36894 -- debug: mapping master -> slave on test-aac
36894/slave -- debug: Slave stream got source connection stream=test-aac
36894/slave -- debug: RewindBuffer got source event stream=test-aac
36894/slave -- debug: Preroll settings are  preroll=, stream=test-mp3
36894/slave -- debug: Stream's max buffer size is 4194304 stream=test-mp3
36894/slave -- debug: Rewind's max buffer length is  max=0, seconds=3600, stream=test-mp3
36894/slave -- debug: Preroll settings are  preroll=, stream=test-aac
36894/slave -- debug: Stream's max buffer size is 4194304 stream=test-aac
36894/slave -- debug: Rewind's max buffer length is  max=0, seconds=3600, stream=test-aac
36894/slave -- info: RewindBuffer is now at  seconds=NaN, length=0, stream=test-mp3
36894/slave -- debug: Slave source loaded rewind buffer. stream=test-mp3
36894/slave -- info: RewindBuffer is now at  seconds=NaN, length=0, stream=test-aac
36894/slave -- debug: Slave source loaded rewind buffer. stream=test-aac
^C
Mavericks:StreamMachine Mac$ ./streammachine-cmd --config ./config/mine.js
adding Console transport
36898 -- debug: StreamMachine standalone initialized.
36898 -- debug: Attaching listener for SIGUSR2 restarts.
36898 -- error: USING API ON MAIN PORT IS UNSAFE! See api_port documentation.
36898 -- debug: Standalone is listening on port 8000
36898 -- info: Attaching listeners.
(node:36898) DeprecationWarning: os.tmpDir() is deprecated. Use os.tmpdir() instead.
36898/slave -- debug: In slave configureStreams with  
36898/sourcein -- debug: Incoming source attempt.
36898/sourcein -- debug: Incoming source attempt.
...
36898/sourcein -- debug: Incoming source attempt.
```

Thanks!

