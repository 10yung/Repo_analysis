address #4033. when it's half pie and width is larger than height, draw bigger pie chart.

The key idea is to fake the radius and adjust the circle box.

when screen width <= height, it should be the same as a full pie chart, since the radius should be diameter/2 anyway;

but when screen width > height, the radius is min(width, height) to use the maximum space

before:
![image](https://user-images.githubusercontent.com/4375169/72676306-c61fd080-3aca-11ea-8f30-2aaf4e2ffdce.png)

after:
![image](https://user-images.githubusercontent.com/4375169/72676315-e5b6f900-3aca-11ea-9eed-eed5c218ca5b.png)

the portrait portion (width < height) should not be affected.



### Goals :soccer:
Improve line graph drawing performance for data sets with multiple thousands of points.

### Implementation Details :construction:
Draw circles is an expensive function. By not running it if `drawCirclesEnabled` returns false, we're able to easily draw a line graph >7000 data points on an iPhone X with 60fps.

### Testing Details :mag:
None
![Screenshot at Jan 16 12-28-55](https://user-images.githubusercontent.com/43853709/72521732-47256080-385c-11ea-87c1-5a87fe9c6c96.png)

Hello, I want to make a drag xAxis that show very time a 4 months and when I drag, it should show the another 4! I add 4 months but the drag is disabled and I don't know why?  

yearChartView.dragEnabled = true
        yearChartView.setScaleEnabled(false)
        yearChartView.pinchZoomEnabled = false
        yearChartView.maxHighlightDistance = 500
        let xAxis = yearChartView.xAxis
        xAxis.labelFont = UIFont(name: "MetroSans-Book", size:10)!
        xAxis.setLabelCount(self.baha.count - 1, force: false)
        xAxis.labelTextColor = #colorLiteral(red: 0.5254901961, green: 0.5568627451, blue: 0.5882352941, alpha: 1)
        xAxis.labelPosition = .bottom
        xAxis.axisLineColor = #colorLiteral(red: 0.9529411765, green: 0.9607843137, blue: 1, alpha: 1)
        xAxis.gridLineWidth = 1
        xAxis.gridColor = #colorLiteral(red: 0.9529411765, green: 0.9607843137, blue: 1, alpha: 1)
        xAxis.axisRange = 3.0

I want to get something like that:

![Screenshot at Jan 16 12-26-48](https://user-images.githubusercontent.com/43853709/72521959-d599e200-385c-11ea-931a-5785505a5439.png)
![Screenshot at Jan 16 12-27-18](https://user-images.githubusercontent.com/43853709/72521960-d599e200-385c-11ea-89f5-830398b87efd.png)


> ℹ Please fill out this template when filing an issue.
> All lines beginning with an ℹ symbol instruct you with what info we expect. You can delete those lines once you've filled in the info.
>
> Per our [*CONTRIBUTING guidelines](https://github.com/jjatie/Charts/blob/master/CONTRIBUTING.md), we use GitHub for
> bugs and feature requests, not general support. Other issues should be opened on Stack Overflow with the tag [`ios-charts`.](https://stackoverflow.com/questions/tagged/ios-charts)
>
> Please remove this line and everything above it before submitting.

* [x] I've read, understood, and done my best to follow the [*CONTRIBUTING guidelines](https://github.com/jjatie/Charts/blob/master/CONTRIBUTING.md).

## What did you do?

ℹ Please replace this with what you did.  

## What did you expect to happen?

ℹ Please replace this with what you expected to happen.  

## What happened instead?

ℹ Please replace this with of what happened instead.  

## Charts Environment

**Charts version/Branch/Commit Number:**
**Xcode version:**
**Swift version:**
**Platform(s) running Charts:**
**macOS version running Xcode:**

## Demo Project

ℹ Please link to or upload a project we can download that reproduces the issue.

* [ X] I've read, understood, and done my best to follow the [*CONTRIBUTING guidelines](https://github.com/jjatie/Charts/blob/master/CONTRIBUTING.md).

Is is possible to format the axis or style it so the Y axis area displays the axis lines?

Is is possible to offset the data point text to below the line, so if the above extra lines are shown, the text is below (or above) the data line in the Y axis?

See image:
![chart-y-axis-extend](https://user-images.githubusercontent.com/46455562/72168709-aafee380-339b-11ea-9703-b22eb1186b92.png)

* [✓] I've read, understood, and done my best to follow the [*CONTRIBUTING guidelines](https://github.com/jjatie/Charts/blob/master/CONTRIBUTING.md).

## What did you do?

Create a combined Scatter and Line Chart.

## What did you expect to happen?

I wanted the line to be behind the scatter plot.

## What happened instead?

It actually works but for some reason, it sometimes produces the image attached randomly and I would have to restart the app or reload the view every time.

## Charts Environment

**3.4.0 / master**
**Xcode 11.2.1**
**Swift 5**
**iOS**
**macOS 10.15.1**

## Demo Project

```
func createCombinedChart(_ values1: [ChartDataEntry], _ values2: [ChartDataEntry], _ chartView: CombinedChartView, _ chartType: ChartType, _ isLinear: Bool, _ hasGradient: Bool) {
        
        let set1 = ScatterChartDataSet(entries: values1, label: nil)
        set1.highlightEnabled = true
        set1.highlightColor = .clear // Removes orange lines from marker
        set1.drawValuesEnabled = false
        set1.setScatterShape(.circle)
        set1.scatterShapeSize = 6.0
        set1.setColor(UIColor.white)
        
        let set2 = LineChartDataSet(entries: values2, label: nil)
        set2.highlightEnabled = false
        set2.highlightColor = .clear // Removes orange lines from marker
        set2.drawValuesEnabled = false
        set2.drawCirclesEnabled = false
        set2.circleRadius = 0.5
        set2.lineCapType = .round
        set2.lineWidth = 1
        set2.lineDashLengths = [5, 5]
        set2.mode = isLinear ? .linear : .cubicBezier
        set2.colors = [NSUIColor(named: "Purple_02")] as! [NSUIColor]
        
        let gradientColors = [UIColor.clear.cgColor, UIColor(named: "Purple_01")!.cgColor]
        let gradient = CGGradient(colorsSpace: nil, colors: gradientColors as CFArray, locations: nil)!
        
        set2.fillAlpha = 1
        set2.fill = Fill(linearGradient: gradient, angle: 90)
        set2.drawFilledEnabled = hasGradient
        
        chartView.leftAxis.drawGridLinesEnabled = true
        chartView.leftAxis.drawAxisLineEnabled = true
        chartView.leftAxis.drawLabelsEnabled = true
        chartView.leftAxis.labelFont = UIFonts.BOLD_FONT_EXTRA_SMALL
        chartView.leftAxis.labelTextColor = .white
        chartView.leftAxis.axisLineColor = .darkGray
        chartView.leftAxis.axisMinimum = 0 // Keeps the x and y minimum values on the same axis
        
        chartView.rightAxis.enabled = false
        
        chartView.xAxis.drawGridLinesEnabled = false
        chartView.xAxis.drawAxisLineEnabled = true
        chartView.xAxis.drawLabelsEnabled = true
        chartView.xAxis.labelFont = UIFonts.BOLD_FONT_EXTRA_SMALL
        chartView.xAxis.labelTextColor = .white
        chartView.xAxis.labelPosition = .bottom
        chartView.xAxis.axisLineColor = .darkGray
        chartView.xAxis.avoidFirstLastClippingEnabled = true
        
        chartView.legend.enabled = false
        chartView.chartDescription?.enabled = true
        chartView.chartDescription?.textColor = .white
        chartView.chartDescription?.font = UIFonts.BOLD_FONT_EXTRA_SMALL
        chartView.chartDescription?.text = "→ \(getAxes(chartType).x), ↑ \(getAxes(chartType).y)"
        chartView.doubleTapToZoomEnabled = false
        chartView.pinchZoomEnabled = false
                
        let data = CombinedChartData()
        data.scatterData = ScatterChartData(dataSets: [set1])
        data.lineData = LineChartData(dataSets: [set2])
        data.notifyDataChanged()
        chartView.data = data
        chartView.notifyDataSetChanged()
    }

```

![Image from iOS](https://user-images.githubusercontent.com/30643008/72107489-4c2b6280-32e6-11ea-9369-c1a115946e28.png)
### Goals :soccer:
Fixes bug in calcMinMaxY logic: when a dataset has X values exclusively outside of the fromX...toX range, the first datapoint will be used to calculate the Y range.

### Implementation Details :construction:
Fixed the guard to include the case when "indexFrom" is equal to "indexTo"

### Testing Details :mag:
Did not add tests.
### Goals :soccer:
This PR adds a link to my tutorial about using Radar Charts.
In this tutorial I wrote a step-by-step guide about how to recreate the Radar Chart example from the readme.

> ℹ Please fill out this template when filing an issue.
> All lines beginning with an ℹ symbol instruct you with what info we expect. You can delete those lines once you've filled in the info.
>
> Per our [*CONTRIBUTING guidelines](https://github.com/jjatie/Charts/blob/master/CONTRIBUTING.md), we use GitHub for
> bugs and feature requests, not general support. Other issues should be opened on Stack Overflow with the tag [`ios-charts`.](https://stackoverflow.com/questions/tagged/ios-charts)
>
> Please remove this line and everything above it before submitting.

* [ ] I've read, understood, and done my best to follow the [*CONTRIBUTING guidelines](https://github.com/jjatie/Charts/blob/master/CONTRIBUTING.md).

## What did you do?

ℹ Please replace this with what you did.  

## What did you expect to happen?

ℹ Please replace this with what you expected to happen.  

## What happened instead?

ℹ Please replace this with of what happened instead.  

## Charts Environment

**Charts version/Branch/Commit Number:**
**Xcode version:**
**Swift version:**
**Platform(s) running Charts:**
**macOS version running Xcode:**

## Demo Project

ℹ Please link to or upload a project we can download that reproduces the issue.

### Issue Link :link:
https://github.com/danielgindi/Charts/issues/4233

### Goals :soccer:
Fixes compatibility with Catalyst

### Implementation Details :construction:
Essentially, in the "Platform+" files, attempts to alias types to their AppKit equivalents for regular macOS apps works file, but fails in Catalyst apps because while those are Mac apps, Catalyst needs UIKit for certain things. 

Basically I changed this line in four files

`#if canImport(AppKit)`

to 

`#if canImport(AppKit) && !targetEnvironment(macCatalyst)`

Which causes the macro to skip over this on Catalyst apps. 

### Testing Details :mag:
No changes to unit testing performed, though I have successfully tried my fork in a Catalyst app, and the changes above have no effect on the macOS demo app in the project. 