The following command works for other drives on the same server but fails when I use D:
$AllFiles = $(Get-ForensicFileRecord -volume d:)

Error message:
Get-ForensicFileRecord : Destination array was not long enough. Check destIndex and length, and the array's lower
bounds.
At line:1 char:15
+ $AllFiles = $(Get-ForensicFileRecord -volume d:)
+               ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Get-ForensicFileRecord], ArgumentException
    + FullyQualifiedErrorId : System.ArgumentException,PowerForensics.Cmdlets.GetFileRecordCommand

Stack Trace:
PS C:\> $Stacktrace
   at System.Array.Copy(Array sourceArray, Int32 sourceIndex, Array destinationArray, Int32 destinationIndex, Int32 leng
th, Boolean reliable)
   at PowerForensics.Ntfs.DataRun..ctor(Byte[] bytes, Int32 offset, Int32 lengthByteCount, Int32 offsetByteCount, DataRu
n previousDR) in C:\Users\tester\Documents\GitHub\PowerForensics\PowerForensics\src\FileSystems\Ntfs\Attributes\NonResid
ent\DataRun.cs:line 34
   at PowerForensics.Ntfs.DataRun.GetInstances(Byte[] bytes) in C:\Users\tester\Documents\GitHub\PowerForensics\PowerFor
ensics\src\FileSystems\Ntfs\Attributes\NonResident\DataRun.cs:line 68
   at PowerForensics.Ntfs.NonResident..ctor(NonResidentHeader header, Byte[] bytes, String attrName) in C:\Users\tester\
Documents\GitHub\PowerForensics\PowerForensics\src\FileSystems\Ntfs\Attributes\NonResident\NonResident.cs:line 44
   at PowerForensics.Ntfs.FileRecordAttribute.Get(Byte[] bytes, String volume) in C:\Users\tester\Documents\GitHub\Power
Forensics\PowerForensics\src\FileSystems\Ntfs\Attributes\FileRecordAttribute.cs:line 168
   at PowerForensics.Ntfs.FileRecord..ctor(Byte[] recordBytes, String volume, Boolean fast) in C:\Users\tester\Documents
\GitHub\PowerForensics\PowerForensics\src\FileSystems\Ntfs\FileRecord\FileRecord.cs:line 142
   at PowerForensics.Ntfs.MasterFileTable.GetRecord(FileStream streamToRead, String volume) in C:\Users\tester\Documents
\GitHub\PowerForensics\PowerForensics\src\FileSystems\Ntfs\MasterFileTable.cs:line 24
   at PowerForensics.Ntfs.FileRecord.GetRecordBytesPrivate(String volume, Int32 index) in C:\Users\tester\Documents\GitH
ub\PowerForensics\PowerForensics\src\FileSystems\Ntfs\FileRecord\FileRecord.cs:line 477
   at PowerForensics.Cmdlets.GetFileRecordCommand.ProcessRecord() in C:\Users\tester\Documents\GitHub\PowerForensics\Pow
erForensics\src\Cmdlets\FileSystems\Ntfs\Get-ForensicFileRecord.cs:line 118
   at System.Management.Automation.CommandProcessor.ProcessRecord()
PS C:\>

Hi Jared,

I've recently discovered your PowerForensics project and i'm loving having the freedom of Powershell for forensics activity! 
I have been using PowerForensics for local analysis but for my scenario - PowerForensicsPortable seems to be better for remote processing. This doesn't seem to be supported anymore, however I wonder if you can help me with an issue i'm having whilst trying to run PowerForensicsPortable cmdlets. It seems when I run a command: e.g.
**Invoke-Command -ScriptBlock {Get-ForensicTimezonePortable} -ComputerName <computer> -Credential <computer>\<user>** 

I get the following error:

_Unable to find type [PowerForensics.Artifacts.Timezone]: make sure that the assembly containing this type is loaded
    + CategoryInfo          : InvalidOperation: (PowerForensics.Artifacts.Timezone:TypeName) [], RuntimeException
    + FullyQualifiedErrorId : TypeNotFound_

I'm assuming this is the link between PowerForensics and Portable? Any help would be much appreciated!

Cheers,

Joe
I was wondering if PowerForensics also parses volume shadow copies when creating a timeline, or if there are plants to include this functionality.

Hello, i'm trying to use the powerforensics framework but i have a problem. When i use the powerforensicv2 normal module from github releases i don't have the ConvertTo-Gource cmdlet. So i decided to use the powerforensic from github repository where i have the ConvertTo-Gource cmdlet, but the problem is that i can't use any cmdlet from there because i get this error:
____________________________________

Exception while calling "GetInstances" with arguments "1": "index out of matrix length."                                                                                        En C:\Program Files\WindowsPowerShell\Modules\PowerForensics\PowerForensics.psm1: 1680 Carácter: 9                                                                                              +         [PowerForensics.Formats.ForensicTimeline]::GetInstances($Volu ...                                                                                                                     +         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~                                                                                                                             + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException                                                                                                                       + FullyQualifiedErrorId : IndexOutOfRangeException

__________________________________________

So i have to get the timeline with powerforensicsv2 and then use converto-gource with normal powerforensics, beeing so annoying. What can i do?
Hello, i'm trying to generate a gource schema with the Get-ForensicTimeline cmdlet. The problem is that when i get the timeline from the tool , and i use ConvertTo-Gource, i get an error because the type of the data in the timeline variable isn't Forensic Timeline. What can i do?

$timeline = Get-ForensicTimeline -VolumeName C:
$timeline_mod = $timeline | Where-Object {($_.Date -gt $start) -and ($_.Date -lt $end)} | Sort-Object Date | ConvertTo-Gource

_____________________________________________

[ForensicTimeline] type can't be found.
En C:\Program Files\WindowsPowerShell\Modules\PowerForensics\PowerForensics.psm1: 414 Carácter: 9
+         [ForensicTimeline[]]
+         ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (ForensicTimeline:TypeName) [], RuntimeException
    + FullyQualifiedErrorId : TypeNotFound

It appears the Get-ForensicAmCache cmdlet doesn't work with newer versions of Windows 10. According to Eric Zimmerman's blog the format of amcache.hve changed with the Windows 10 Fall Creators Update (10/17/2017). 

The version in PowerShell gallery hasn't been updated since 1/30/2016

Reference: https://binaryforay.blogspot.com/2017/10/amcache-still-rules-everything-around.html

Jared - this is awesome, we love it - but please update the version on PS gallery!
I've just tested Get-ForensicFileRecord cmdlet and it gave me this Path not found error:

<img width="948" alt="snap 2017-11-11 at 22 20 04" src="https://user-images.githubusercontent.com/526959/32690795-f76dee72-c72e-11e7-83ef-323dc1153604.png">

I installed PowerForensics by these PowerShell commands:
* Install-Module -Name PowerForensics
* Update-Module
PS K:\> Get-ForensicFileRecord -VolumeName U:
Get-ForensicFileRecord : Array dimensions exceeded supported range.
At line:1 char:1
+ Get-ForensicFileRecord -VolumeName U:
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Get-ForensicFileRecord], OverflowException
    + FullyQualifiedErrorId : System.OverflowException,PowerForensics.Cmdlets.GetFileRecordCommand

PS K:\> $StackTrace
   at PowerForensics.Ntfs.NonResident.GetBytes(String volume)
   at PowerForensics.Ntfs.FileRecord.GetInstances(String volume)
   at PowerForensics.Cmdlets.GetFileRecordCommand.ProcessRecord()
   at System.Management.Automation.CommandProcessor.ProcessRecord()

Hello,

When trying to run Get-ForensicTimeline on a Windows 7 machine I get the error:

> Exception calling "GetInstances" with "1" argument(s): "The Amcache hive is only available on Windows 8 and newer Operating Systems."

Is this cmdlet only available on Windows 8 and newer OS's? Is there a way to take the Amcache hive parser out?