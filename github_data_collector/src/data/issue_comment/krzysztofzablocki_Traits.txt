Hi author, how to use this in OC project? Thanks. Newbie is me, haha^-^.
Issue #7 

Work in progress, this is just a 'proof of concept' for the idea (all tests are passing, live reloading works).

One question before I can move forward :).

Do you want to keep the original type checking method (list of restricted classes) or we can substitute it with generics? `TypedTrait` is a temporary thing.
As I understand, if I want `Font` trait to support `UITextView` I have to modify `Font` source code: add `UITextView.self` to `restrictedTypes` array and modify `apply` method.

IMO, if target type restrictions were expressed via a protocol, it would be easier to add new target classes to existing traits.
Hi,
For iOS projets it's will be great to make your component [Carthage](https://github.com/Carthage/Carthage) compatible

Take a look at these articles: 
- [Ruthlessly Simple Dependency Management with Carthage](https://bit.ly/2IWvGks)
- [Carthage Tutorial: Getting Started](https://bit.ly/2zes4dN)
- [Making Carthage-compatible Frameworks with Swift](https://bit.ly/2tXUofp)
- [Swift Cross Platform Framework](https://bit.ly/2ysgETA) (section [Configure targets for Carthage](https://bit.ly/2tZUOSt)) üëç

On your `README.md` add [![Carthage compatible](https://img.shields.io/badge/Carthage-Compatible-brightgreen.svg?style=flat)](https://github.com/Carthage/Carthage)  on top and add section for the installation with Carthage.