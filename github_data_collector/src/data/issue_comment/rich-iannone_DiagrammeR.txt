Hello,
I am new to DiagrammeR, so sorry if the question is trivial. But is it possible to use substitution to have a colour outside of the default palette? 
Here is my code 
```
my_col = "#3498DB"
my_graph = grViz("
     digraph boxes_and_circles{
     node [shape = box,  style=filled, fontsize = 60, fillcolor = @@1]
     wtdbg2_assembly; haplotigs_purged_assembly; hypo_polished_assembly; instagraal_assembly; contact_map 
     node [shape = circle, fontsize = 60, fontcolor = Navy]
     hypo_polished_instagraal_assembly
     edge [minlen = 5, fontsize = 60, color = crimson, fontcolor = Red]
     wtdbg2_assembly -> haplotigs_purged_assembly [label = 'illumina PE mapping  ']
     wtdbg2_assembly -> haplotigs_purged_assembly [label = '  haplotig_purge']
     haplotigs_purged_assembly -> hypo_polished_assembly [label = '  illumina PE and PacBio mapping  ']
     haplotigs_purged_assembly -> hypo_polished_assembly [label = '  hypo polishing']
     hypo_polished_assembly -> instagraal_assembly [label = '  Hi-C reads mapping  ']
     hypo_polished_assembly -> instagraal_assembly [label = '  instagraal']
     instagraal_assembly -> instagraal_assembly [label = '  instapolish  ']
     instagraal_assembly -> contact_map [label = '  Hi-C reads mapping  ']
     instagraal_assembly -> hypo_polished_instagraal_assembly [label = '  illumina PE and PacBio mapping  ']
     instagraal_assembly -> hypo_polished_instagraal_assembly [label = '  hypo polishing  ']
     [1]: my_col
     
     }")
my_graph
```
It returns an error
`Error in parse(text = split_references[i]) : <text>:1:6: unexpected '}' 1: } ^
`
Thank you
The `export_graph` function calls functions from `rsvg` package, but `rsvg` package is not in Imports, and I didn't have it installed, so the function threw an error.

Also, when I initially used `export_graph` with `filetype = "PNG"`, it threw the following error generated from within your function:

> Error: `export_graph()` REASONS:
> Cannot currently use this function to produce a PNG file
> please install the `DiagrammeRsvg` package and retry

This error was not very helpful, because installing `DiagrammeRsvg` did not fix the problem. Only when I ran `export_graph()` file `filetype = "PDF"` was the following error thrown:

> Error in loadNamespace(name) : there is no package called ‘rsvg’

Only then did I realize that `rsvg` was a dependency, and after installing and loading `rsvg` package, the `export_graph()` function worked, with both file types.
Hi everyone, 
I'm working with DiagrammeR to create a PDF document that embed a processing pipeline.
Unfortunately, the generated output has big margins and isn't useful for the document integration.
I could crop manually figure but I would like to know if there's any way to have a full automatic document generation.
The output document is here :
[pipeline-1.pdf](https://github.com/rich-iannone/DiagrammeR/files/3912103/pipeline-1.pdf)

The generation code is here: 
 ```
{r pipeline, echo=FALSE, fig.width=7.167, fig.height=2}
mermaid('
graph LR;
A((Lorem))
B["Ipsum"]
C["Dolor"]
D((Sit))
E((Amet))
F[lorem]
G((ipsum))
H[dolor]
I[sit]
J((amet))
K[lorem]


A--> B
K --> B
A--> H
A--> C

C--> E;
B--> D;

E--> F;
D--> F;
F--> G;
H--> J;
J--> I
I--> K
G --> H
')
```
I tried various things such as setting width and height parameters, modifying the sizePolicy of the returned object but I don't understand how to get a pdf without margins.

Does anyone have an idea about it ?
Thank you in advance.
# Example 1
## Code:
```
mermaid("
sequenceDiagram;
    B ->> A: C
    A ->> B: D
")
```

## DiagrammeR:
![image](https://user-images.githubusercontent.com/2650170/69749048-8fb87b80-1141-11ea-9a3f-452795a1ac97.png)

## mermaid.js:
![image](https://user-images.githubusercontent.com/2650170/69749086-a232b500-1141-11ea-9979-65f2af402fca.png)

# Example 2
## Code:
```{r}
mermaid("
sequenceDiagram;
    participant A
    A ->> B: C
")
```

## DiagrammeR:
![image](https://user-images.githubusercontent.com/2650170/69749270-0eadb400-1142-11ea-8a8f-6bb0606786a4.png)

## mermaid.js:
![image](https://user-images.githubusercontent.com/2650170/69749282-18371c00-1142-11ea-9424-90d46399774b.png)

I've been trying to use `DiagrammeR` to put some graphs into a shiny app. While the Graphviz renderers work, just using native DiagrammeR syntax merely produces raw digraph output. So, the following code:

```
library(shiny)
library(DiagrammeR)


ui <-  pageWithSidebar(
  headerPanel("Test"),
  sidebarPanel(
  
  ),
  mainPanel(
    DiagrammeROutput("plotMatrix")
  )
)


server <- function(input,output){
  output$plotMatrix <- renderDiagrammeR({
    create_graph() %>%
      add_balanced_tree(
        k = 2, h = 3) %>%
      render_graph()
  })
}


shinyApp(ui, server)
```

renders no graph, but instead the text

```
digraph {

graph [layout = "neato",
       outputorder = "edgesfirst",
       bgcolor = "white"]

node [fontname = "Helvetica",
      fontsize = "10",
      shape = "circle",
      fixedsize = "true",
      width = "0.5",
      style = "filled",
      fillcolor = "aliceblue",
      color = "gray70",
      fontcolor = "gray50"]

edge [fontname = "Helvetica",
     fontsize = "8",
     len = "1.5",
     color = "gray80",
     arrowsize = "0.5"]

  "1" [label = "1", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "2" [label = "2", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "3" [label = "3", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "4" [label = "4", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "5" [label = "5", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "6" [label = "6", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "7" [label = "7", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "8" [label = "8", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "9" [label = "9", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "10" [label = "10", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "11" [label = "11", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "12" [label = "12", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "13" [label = "13", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "14" [label = "14", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "15" [label = "15", fillcolor = "#F0F8FF", fontcolor = "#000000"] 
  "1"->"2" 
```
The `weight` attribute is currently not forwarded to the generated DOT code:
https://www.graphviz.org/doc/info/attrs.html#d:weight

Would it be enough to simply add `weight` here:
https://github.com/rich-iannone/DiagrammeR/blob/89b87f585bc8b6c1fb3ee2136df868520c7f2467/R/utils.R#L633

Similarly the `constraint` attribute is not supported. Why the limitation on a pre-selected list of attributes? Wouldn't it be possible to simply add all unknown attributes anyway?
Minimal example:

```r
set.seed(123)
head(.Random.seed)
#> [1]      10403        624 -983674937  643431772 1162448557 -959247990
DiagrammeR::create_graph()
#> DiagrammeR Graph // no nodes
#>  ...
head(.Random.seed) # changed!
#> [1]      10403         16  515190382 2133433928  917665867 1283494313
```

This is because `create_graph()` calls `sample` to create a unique ID. This is unexpected from the user's perspective, and I don't think it's reasonable to change the RNG state for this. It *is* expected if we are creating a random graph (and still, it should be documented), but not in any other case. (This may happen in other places too, but I didn't check thoroughly).
Left-align doesn't seem to be working if I specify it this way: 
grViz( "
    digraph boxes{
        node [shape = box,
        fontname = Helvetica,
        height=1,
        width = 4.5,
        color = lightblue]
        A1[label = '@@1'];
        A2[label = '@@2'];

        edge [color = black, arrowhead = normal,penwidth = 1]
        A1->A2
    }
   [1]:'Eligible participants approached \\l'
   [2]:'Baseline study \\l' 
")

But it works this way: 
grViz( "
    digraph boxes{
        
        node [shape = box,
        fontname = Helvetica,
        height=1,
        width = 4.5,
        color = lightblue]
        A1[label = 'Eligible participants approached \\l'];
        A2[label = 'Baseline study \\l'];

        edge [color = black, arrowhead = normal,penwidth = 1]
        A1->A2
    }
")

Am I missing anything obvious? 

Thanks very much! 

Caroline 

hi,

i've been tinkering on an R package (`behaviorchange`) which has `DiagrammeR` as a dependency. while tinkering, i've found that when `behaviorchange`calls `create_node_df()` the R process hangs and never returns. so i was like "this *is* a curious riddle". so i checked out `DiagrammeR` with git, added some print statements to `create_node_df()` so i could figure out what was going on ... and it just worked ... no hanging problem at all.

so then i thought, oh, maybe changes *since* the CRAN release have fixed this issue. so then i went fossicking through the git history so i could roll back to the current release, and then i could do some bisecting to find when the issue was fixed, and what it could possibly be.

however, i found that what's in this repo, is version 1.0.0, and the version on CRAN is 1.0.1 ... so i'm not quite sure what in this repo corresponds to the release on CRAN. so i guess i have two questions:

 - do you know any circumstances that lead to a hang of the `create_node_df()` function?
 - can you point me to a commit in this repo which corresponds to the 1.0.1 on CRAN? (i can go off the release date, but i just wanted to touch base before working any further on this).

with thanks
Is there a way to add a legend that describes the nodes in a flow chart?