[Some NPM modules](https://github.com/googleapis/google-api-nodejs-client/issues/1675) actually include Javascript modules named `docs/...`, and `node-prune` breaks these because `docs/` are removed per the default rules. It would be nice, then, to mark a given directory to not be removed according to node-prune's rules:

```bash
$ node-prune --except node_modules/googleapis/../docs/
```
I don't know what I'm doing wrong but node-prune keep all my node_modules folders...

![Screen Shot 2019-07-06 at 11 09 04](https://user-images.githubusercontent.com/30919/60757247-9f8ec200-9fde-11e9-8859-bd00cc447aa9.png)

When I added node-prune one of our tests started failing:

```
yarn run v1.13.0
$ jest --collectCoverage --ci --runInBand --reporters=default --reporters=jest-junit
 PASS  js/modules/objectives/dashboard/__tests__/_create-test.js
 PASS  js/modules/core/__tests__/react_select-test.js
 FAIL  js/__tests__/vendor-test.js
  ‚óè rails-ujs should be defined as a browser global

    ENOENT: no such file or directory, open '/home/circleci/project/ff/static/node_modules/rails-ujs/lib/assets/compiled/rails-ujs.js'

      31 | 
      32 | function runScriptInContext(...paths) {
    > 33 |   const data = fs.readFileSync(path.resolve(...paths));
         |                   ^
      34 |   const script = new vm.Script(data);
      35 | 
      36 |   const context = vm.createContext(sandbox);

      at readFileSync (js/__tests__/vendor-test.js:33:19)
      at Object.runScriptInContext (js/__tests__/vendor-test.js:258:21)
```

relevant section of our circleci config:
```yml
      - run: 
          name: Install node-prune
          command: curl -sfL https://install.goreleaser.com/github.com/tj/node-prune.sh | bash

      - run: ./bin/node-prune node_modules
      - run: ./bin/node-prune ff/static/node_modules
```
It's necessary to remove assets directory.
#50 #6
Hi! I think that node-prune is a great script but I think that often users need more then it can provide.
I think you could add a link to modclean (https://github.com/ModClean/modclean) or diarrhea (https://www.npmjs.com/package/diarrhea, it is my fork of modclean) for users who need more customized and verbose cleaning.
When we create multiple receivers we should use a buffered channel of the same size as the worker size (NumCPU) to reduce the chance of blocking.
Hi. Thanks for this awesome tool. While I've tested it against many projects, the most common problematic thing is `assets` directory which is usually intended to be included in dist.

Istanbul reports is an example:

> ERROR: Error: ENOENT: no such file or directory, scandir '/usr/src/app/node_modules/istanbul-reports/lib/html/assets'

i suppose this could break some modules, but then so could deleting the README.md 
# How to reproduce

```json
{
  "name": "prune-test",
  "version": "1.0.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "author": "",
  "license": "ISC",
  "dependencies": {
    "eslint": "^4.13.1"
  }
}
```

```bash
$ npm i
...
added 137 packages in 2.892s
$ ls -l node_modules/.bin/eslint
lrwxr-xr-x  1 tai2  staff  23 Dec 15 16:16 node_modules/.bin/eslint@ -> ../eslint/bin/eslint.js
$ node-prune

         files total 2,836
       files removed 520
        size removed 1.4 MB
            duration 76ms

$ ls -l node_modules/.bin/eslint
ls: node_modules/.bin/eslint: No such file or directory
```
Simple command for get the binary:

```sh
curl -L https://github.com/tj/node-prune/releases/download/v1.0.1/node-prune_1.0.1_`uname -s`_`uname -m` -o /usr/local/bin/
chmod +x /usr/local/bin/node-prune
```
- Avoid decompressing the binary
- `uname -s` and `uname -m` in the release URL

üôè 