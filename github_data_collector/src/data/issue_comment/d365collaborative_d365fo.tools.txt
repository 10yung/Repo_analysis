
I plan to provide a PR that will cover the following functionality:

If you use the commandlet `Invoke-D365AzureStorageUpload` to upload a file to Azure storage which is not yet present in Azure storage, the "Content type" property of the file will always be set to `application/octet-stream`. If you compare that with what Azure Storage Explorer does when uploading the same file, you will see that Azure Storage Explorer will in many cases figure out the correct content type for uploaded files and set the property accordingly.

Some examples:

- \*.jpg/\*.jpeg files should result in content type "image/jpeg"
- *.png files should result in content type "image/png"
- *.pdf files should result in content type "application/pdf"
- *.docx files should result in content type "application/vnd.openxmlformats-officedocument.wordprocessingml.document"
- etc.

A list of (valid) media types can be found here: https://www.iana.org/assignments/media-types/media-types.xhtml

As a minimum, a parameter should be added to the current commandlet to allow to pass a specific content type to the function, which then should be used as the content type property when uploading to Azure storage.
If no value for the new parameter is provided, it would be nice if function tried to figure out the content type based on the file extension. .NET framework methods can be leveraged to accomplish that.


Hi good d365fo.tools people! :)
The module requirement "Azure.Storage" is the one line that keeps giving me a headache in this otherwise awesome Powershell module. Azure.Storage itself has been superseded by Az.Storage, from my understanding. I was hoping that in the required modules section the line 
`, @{ ModuleName = 'Azure.Storage'; ModuleVersion = '4.4.0' }`
could be replaced with this line: 
`		, @{ ModuleName = 'Az.Storage'; ModuleVersion = '1.8.0' }`, without things to break, ideally ...
The problem we're facing is that Azure.Storage itself relies on AzureRm.Profile. So whenever the module d365fo.tools is loaded, AzureRm.Profile will get loaded as well. This will then make it impossible in the same Powershell session to load Az.Profile (which is the sucessor of AzureRm.Profile).
As our own Powershell tools have been migrated from AzureRM module to the Az module, we're being in constant conflict with the d365fo.tools module requirements.
I would appreciate if you could have a look at this issue and consider if the module requirement could either be swapped out or removed, so that people like us could choose to use Az.Storage/Az.Profile instead of Azure.Storage/AzureRm.Profile modules.
Thanks a lot.
### New enhancement

I had faced a minor issue when Batch service doesn't start after Start-D365Environment -All
And the issue was that Batch service was Disabled.

Could you add new column "StartType" to the following commands

- Get-D365Environment
- Start-D365Environment
- Stop-D365Environment 

**Hint**
Instead of the following
`Get-Service -ComputerName $server -Name $Services -ErrorAction SilentlyContinue| Select-Object @{Name = "Server"; Expression = {$Server}}, Name, Status, DisplayName`

Should be something like this
`Get-Service -ComputerName $server -Name $Services -ErrorAction SilentlyContinue| Select-Object @{Name = "Server"; Expression = {$Server}}, Name, Status, StartType, DisplayName`

I.e., the new parameter StartType


Hi 
I am trying to create a bacpac using "New-D365Backpac

New-D365Bacpac -ExportModeTier2-xxxx -SqlUser xxxxx -BacpacFile D:\DB_backup\update2devdb.bacpac -DatabaseName xxxxxx_axdb_2b18fc3xxxxxx -DatabaseServer xxxxxx.database.windows.net -EnableException -NewDatabaseName update2devdb -ShowOriginalProgress -Verbose 

I am ending up with this message all the time:
_[13:36:39][Invoke-ClearAzureSpecificObjects] Something went wrong while clearing the Azure specific objects in the database. | Exception calling "ExecuteNonQuery" with "0" argument(s): "The database principal owns a schema in the database, and cannot be dropped."
WARNING: [13:36:39][Invoke-ClearAzureSpecificObjects] Stopping because of errors. | Something went wrong while clearing the Azure specific objects in the database.

We are testing with version D365fo.tools : 0.5.64
D365FO is Version A10.0.8 and P Update32 (7.0.5493.16714)

Best regards Kai


This is not a mistake, and I don't know if it's the best place for this kind of suggestion. I am using D365FO.Tools for many things.

This library is amazing, but you would like to make a suggestion.

Could you create a PowerShell to configure Development Environment to debug UAT environments like this Microsoft documentation?

https://docs.microsoft.com/en-us/dynamics365/fin-ops-core/dev-itpro/database/dbmovement-scenario-debugdiag

Thanks for this channel.

https://robscode.onl/d365-set-default-model-for-new-projects/