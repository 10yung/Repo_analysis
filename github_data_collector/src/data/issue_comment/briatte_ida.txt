See #17.
- Thomas Rahlf, _[Data Visualization in R. 100 Examples](http://www.datavisualisation-r.com/)_ (2017)
- Soc Sci Quant

- http://www.radstats.org.uk/
- http://www.penombre.org/ (French)
This is one of the missing sections mentioned in #4.

Business analytics perspective:

- [k-means](http://www.business-science.io/business/2016/08/07/CustomerSegmentationPt1.html)
- [PCA](http://www.business-science.io/business/2016/09/04/CustomerSegmentationPt2.html)
- [cosine similarity/dendogram/tree/network viz](http://www.business-science.io/business/2016/10/01/CustomerSegmentationPt3.html)

- [ ] Use `ggforce` to send PCA results straight to `ggplot2`
- [Tutorial by Matt Dancho](http://www.business-science.io/timeseries-analysis/2017/07/02/tidy-timeseries-analysis.html)
__TODO_FIRST:__ determine whether this section should be 

1. about modelling _per se_ (in which case, show many models), 
2. or about __general model classes__ (linear, nonlinear, hierarchical/multilevel, temporal/spatial effects and SE clustering, bootstrapped, Bayesian), plus tips and tricks (e.g. `ggfortify`, `Zelig`)

I'm slowly drifting towards Option 2, covering only the basic modelling stuff, and citing examples of text models (topic models), network models (ERGM, SOAM), etc.

- [ ] __8.0. Linear models__
  - [ ] Current example: Markus Gesmann's prediction of London Olympics 100m men's sprint results
- [ ] __8.1. Linear correlation__
  - [ ] Visualizing linear relationships
  - [ ] Measuring linear correlations
  - [ ] Correlation matrixes
  - [ ] Scatterplot matrixes
- [ ] __8.2. Linear equations__ (changed title; also, not yet sub-sectioned)
  - [ ] ~~Ordinary~~ Least Squares (Legendre published the method of least squares [in 1805](https://twitter.com/DataSciFact/status/881939412191506433).)
  - [ ] Results:
    - [ ] residuals
    - [ ] fitted values
  - [ ] Generalization, e.g. 
    - [ ] to add dummies (show that)
    - [ ] or lagged values (leave it to Section on 'Time Series')
  - [ ] Presenting results:
    - [ ] Tables: `texreg`
    - [ ] Marginal FX plots (`margins`)
- [ ] __8.3. Advanced Modelling__ (leave anything to do with 'Times Series' or 'Networks')
  - [ ] Nonlinear equations
  - [ ] Corrected standard errors
    - [ ] Robust SEs (jackknife, sandwich), FE, RE
    - [ ] Bootstrapped SEs
  - [ ] Quick word on a few model 'classes'
    - [ ] Spatial / Gravity
    - [ ] Econometrics: 2SLS, DiD, Oaxaca decomposition
    - [ ] Lasso, regularization
    - [ ] Machine Learning, random forests, neural networks…
  - [ ] Bayesian models with Stan
    - Gelman's blog, [e.g.](http://andrewgelman.com/2017/06/30/stan-weekly-roundup-30-june-2017/)
    - A few links from Pinboard bookmarks, e.g. http://metrumrg.com/opencourses.html

Note: Section 8.3. really should be a collection of examples.

__References:__

- Hastie, Tibshirani, Friedman, _The Elements of Statistical Learning_
- Shalizi, ADAEPoV

- [ ] __4.0 Basic data operators__
  - [ ] (Tidy) data frames, `glimpse`, `rename` and `select`, `mutate`, `recode`
  - [ ] Plain text, `read_lines`, `stringr` functions
  - [ ] JSON with `jsonlite` (or NDJSON)
  - [ ] XML/HTML trees with `xml2`
- [ ] __4.1 Imports and Exports__
  - [ ] Files
  - [ ] Databases
  - [ ] Files from Outer Space: Downloading a Google Spreadsheet
  - [ ] Files from Outer Space: Web Scraping with `httr` and `rvest` (and `xm2`)
- [ ] __4.2. Reshapes and aggregates__ (N.B. things below are really case studies)
  - [ ] Split-Apply-Combine and tidiness
  - [ ] Reshaping: long and wide (always prefer long)
  - [ ] Aggregating (`aggregate`, `group_by`, `summarise`), slicing (`apply`, `slice` etc.)
  - [ ] Coercing to, and binding, data frames
    - [ ] possible example: [Facebook data](https://www.blog.cultureofinsight.com/2017/07/scraping-swarming-a-visual-exploration-of-facebook-data-in-r/)
- [ ] __4.3. Practice__
    - [ ] Currently: Estimates of Congressional ideology
    - [ ] >> MOVED from 4.2. Visualizing the U.S. housing market by city (Case Schiller Index)
    - [ ] >> MOVED from 4.2. Visualizing U.S. homicide trends by weapon type

TODO:

- Include Twitter API example.

Notes:

- Complex data object structures should be covered in Section 02 'Objects'
- [ ] __3.0 Functions__, e.g.
  - [ ] Math
  - [ ] Data
  - [ ] Models – introduce formula notation
  - [ ] quickly mention plots, HTTP calls, whatever
- [ ] __3.1 Control flow__
  - [ ] The Human Narrative: `# comments`
  - [ ] The Computer Narrative: `%>%` pipe operator
  - [ ] Conditions: `if/else`, `else_if`, `mutate_if`, `when`
  - [ ] Sanity Checks: `stopifnot` – quickly mention unit tests for packages
- [ ] __3.2 Iteration__ (with mentions of parallelization)
  - [ ] Loops: `for`, `while` – mention parallelization with `foreach`
  - [ ] Vectorization: `sapply`, `lapply`, `mapply`, `map_*` – parallelization with `mcapply`
  - [ ] Need for Speed? mention benchmarking
  - [ ] Reproducible Code:
    - [ ] Reproducibility = 10% code, 90% human documentation
    - [ ] Writing pseudo-makefiles for a data analysis folder
    - [ ] Makefiles + cron (with demo scraper)
 - [ ] __Practice__
  - Currently: Computing the Herfindhal-Hirschman Index
  - Add: Examples of calls using Stan, Julia, Python, shell?
  - Add: [Game of Life example](http://www.petrkeil.com/?p=236) to show iteration and matrix computations (Petr Keil)
- [ ] Use [bookdown](https://bookdown.org/yihui/bookdown/)
- [ ] Transfer wiki content to 'Extra Readings' section
Let's assume that v1.0 was the Jan 2013 release, and that the Aug 2013 release was v1.1.

- v1.2 -- just run the existing code properly
- v1.3 -- start improvements
- …
- v2.0 -- new major 2017 release?
> cartography + sf: http://rgeomatic.hypotheses.org/1149
> linemaps: https://rgeomatic.hypotheses.org/1156

- [ ] Keep an introductory part with __simple choropleth maps in ggplot2__
  - [possible example](https://ikashnitsky.github.io/2017/colorcoded-map/)
- [ ] Keep geocoding example with __ggmap + Google Maps__
  - [possible example](https://callumgwtaylor.github.io/blog/2017/06/05/using-sf-gganimate-and-the-humanitarian-data-exchange-to-map-acled-data-for-africa/)
- [ ] Also show __Leaflet__
  - [ ] include mention of `leaflet.extras`
  - [ ] include mention of `leaflet.esri`
- [ ] Practice:
  - [full-fledged analysis](https://link.springer.com/article/10.1007/s10745-017-9904-7) (clustering + mapping)

The list above was way more detailed, but it seems that my hard work a few days ago on detailing this issue got lost in the ether…

In brief, also use many of the posts by

- https://ikashnitsky.github.io/
- https://callumgwtaylor.github.io/

Map projections:

> https://xkcd.com/977/

Excellent multi-part tutorial by Bhaskar V. Karambelkar:

> [GeoSpatial Data Visualization in R](https://bhaskarvk.github.io/user2017.geodataviz/)

Some steps match those of Robin Lovelace:

https://github.com/Robinlovelace/Creating-maps-in-R

Bookmarks:

- https://pinboard.in/u:phnk/t:viz:maps/
- https://pinboard.in/u:phnk/t:stats:spatial/

Cite:

- http://www.afterthemap.info/
- http://www.radicalcartography.net/
- https://www.citylab.com/equity/2015/06/incredibly-detailed-map-europes-population-shifts/396497/

Cite, French:

- https://visionscarto.net/
- http://www.metropolitiques.eu/