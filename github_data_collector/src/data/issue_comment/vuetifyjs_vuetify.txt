<!--
MAKE SURE TO READ THE CONTRIBUTING GUIDE BEFORE CREATING A PR
https://github.com/vuetifyjs/vuetify/blob/master/.github/CONTRIBUTING.md

Testing and markup sections can be removed for documentation changes
-->

<!-- Provide a general summary of your changes in the Title above -->
<!-- Keep the title short and descriptive, as it will be used as a commit message -->

## Description
This PR makes the expand buttons in VDataTables focusable and adds the `aria-expanded` attribute.

## Motivation and Context
The current expand buttons in VDataTables are not focusable and have no expanded state information, which breaks accessibility
fixes #9939 

## How Has This Been Tested?
I updated the snapshots for VDataTables because of the changes. I did test it visually and with NVDA.

## Markup:
<!--- Paste markup for testing your change --->
<details>

```vue
<template>
  <v-container>
    <v-data-table
      :headers="headers"
      :items="desserts"
      :expanded.sync="expanded"
      item-key="name"
      show-expand
      class="elevation-1"
    >
      <template v-slot:top>
        <v-toolbar flat>
          <v-toolbar-title>Expandable Table</v-toolbar-title>
        </v-toolbar>
      </template>
      <template v-slot:expanded-item="{ headers }">
        <td :colspan="headers.length">Peek-a-boo!</td>
      </template>
    </v-data-table>
  </v-container>
</template>

<script>
  export default {
    data: () => ({
      expanded: [],
      headers: [
        {
          text: 'Dessert (100g serving)',
          align: 'left',
          sortable: false,
          value: 'name',
        },
        { text: 'Calories', value: 'calories' },
        { text: 'Fat (g)', value: 'fat' },
        { text: 'Carbs (g)', value: 'carbs' },
        { text: 'Protein (g)', value: 'protein' },
        { text: 'Iron (%)', value: 'iron' },
        { text: '', value: 'data-table-expand' },
      ],
      desserts: [
        {
          name: 'Frozen Yogurt',
          calories: 159,
          fat: 6.0,
          carbs: 24,
          protein: 4.0,
          iron: '1%',
        },
        {
          name: 'Ice cream sandwich',
          calories: 237,
          fat: 9.0,
          carbs: 37,
          protein: 4.3,
          iron: '1%',
        },
        {
          name: 'Eclair',
          calories: 262,
          fat: 16.0,
          carbs: 23,
          protein: 6.0,
          iron: '7%',
        },
      ],
    }),
  }
</script>

```
</details>

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Improvement/refactoring (non-breaking change that doesn't add any features but makes things better)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] The PR title is no longer than 64 characters.
- [x] The PR is submitted to the correct branch (`master` for bug fixes and documentation updates, `dev` for new features and breaking changes).
- [x] My code follows the code style of this project.
- [ ] I've added relevant changes to the documentation (applies to new features and breaking changes in core library)
- [ ] I've added new examples to the kitchen (applies to new features and breaking changes in core library)

<!--
MAKE SURE TO READ THE CONTRIBUTING GUIDE BEFORE CREATING A PR
https://github.com/vuetifyjs/vuetify/blob/master/.github/CONTRIBUTING.md

Testing and markup sections can be removed for documentation changes
-->

<!-- Provide a general summary of your changes in the Title above -->
<!-- Keep the title short and descriptive, as it will be used as a commit message -->

## Description
This merge request improves the appearance of the Snackbar action button and makes the whole snackbar be properly announced by screen readers.

## Motivation and Context
Focus states are obligatory for accessibility and the current action button does not have a focus state.
Also the screen reader should immediately announce a snackbar message when it shows up.
fixes #10047 

## How Has This Been Tested?
I have tested using NVDA and visually too.

## Markup:
<!--- Paste markup for testing your change --->
<details>

```vue
<template>
  <v-container>
    <v-btn
      dark
      @click="snackbar = true"
    >
      Open Snackbar
    </v-btn>

    <v-snackbar
      v-model="snackbar"
    >
      {{ text }}
      <v-btn
        text
        @click="snackbar = false"
      >
        Hello
      </v-btn>
    </v-snackbar>
  </v-container>
</template>

<script>
  export default {
    data: () => ({
      snackbar: false,
      text: 'Hello, I am a snackbar',
    }),
  }
</script>
```
</details>

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Improvement/refactoring (non-breaking change that doesn't add any features but makes things better)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] The PR title is no longer than 64 characters.
- [x] The PR is submitted to the correct branch (`master` for bug fixes and documentation updates, `dev` for new features and breaking changes).
- [x] My code follows the code style of this project.
- [ ] I've added relevant changes to the documentation (applies to new features and breaking changes in core library)
- [ ] I've added new examples to the kitchen (applies to new features and breaking changes in core library)

### Problem to solve
From https://github.com/vuetifyjs/vuetify/pull/9909

### Proposed solution
Use new style for playgrounds
Branch: https://github.com/vuetifyjs/vuetify/tree/docs/usages

## TODO:
- [x] Alerts
- [x] AppBars
- [x] Application
- [x] AspectRatios
- [x] Autocompletes
- [x] Avatars
- [x] Badges
- [x] Banners
- [x] BottomNavigation
- [x] BottomSheets
- [x] Breadcrumbs
- [x] ButtonGroups
- [x] Buttons
==================================== Yiping
- [x] Calendars
- [x] Cards
- [x] Carousels
- [ ] Categories
- [x] ChipGroups
- [x] Chips
- [x] ColorPickers
- [x] Combobox
- [x] DataIterators
- [ ] DataTables (Need help! Table head missing)
- [x] DatePickers
- [x] Dialogs
- [x] Dividers
- [x] ExpansionPanels
- [x] FileInputs
- [ ] FloatingActionButtons
- [x] Footer
- [ ] Forms (Need help! How to demo the value/lazy?)
- [ ] GridLists
- [ ] Grids (Need help! How to demo using the new usage?)
======================================== @sh7dm 
- [x] Hover
- [x] Icons
- [x] Images
- [x] Inputs @sh7dm 
- [ ] ItemGroups @sh7dm 
- [ ] Lazy @sh7dm 
- [ ] ListItemGroups @sh7dm 
- [ ] Lists @sh7dm 
- [ ] Menus @sh7dm 
- [ ] NavigationDrawers @sh7dm 
- [ ] OverflowBtns @sh7dm 
- [ ] Overlays @sh7dm 
- [ ] Paginations @sh7dm 
- [ ] Parallax @sh7dm 
========================================
- [ ] ProgressCircular
- [ ] ProgressLinear
- [ ] Ratings
- [ ] SelectionControls
- [ ] Selects
- [ ] Sheets
- [ ] SimpleTables
- [ ] SkeletonLoaders
- [ ] SlideGroups
- [x] Sliders
- [ ] Snackbars
- [ ] Sparklines
========================================
- [ ] Steppers
- [ ] Subheaders
- [ ] SystemBars
- [ ] Tabs
- [ ] Textarea
- [ ] TextFields
- [ ] Timelines
- [ ] TimePickers
- [x] Toolbars
- [x] Tooltips
- [ ] Treeview
- [ ] Windows

<!-- generated by vuetify-issue-helper. DO NOT REMOVE -->
<!--
MAKE SURE TO READ THE CONTRIBUTING GUIDE BEFORE CREATING A PR
https://github.com/vuetifyjs/vuetify/blob/master/.github/CONTRIBUTING.md

Testing and markup sections can be removed for documentation changes
-->

<!-- Provide a general summary of your changes in the Title above -->
<!-- Keep the title short and descriptive, as it will be used as a commit message -->

## Description
This makes the labels in VNavigationDrawer readable by screen readers by hiding them visually instead of using `display: none;`.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
fixes #9741

## How Has This Been Tested?
I have tested it visually and using NVDA.

## Markup:
<!--- Paste markup for testing your change --->
<details>

```vue
<template>
  <v-container>
    <v-card>
      <v-navigation-drawer
        v-model="drawer"
        :mini-variant.sync="mini"
        permanent
      >
        <v-list-item>
          <v-list-item-avatar>
            <v-img src="https://randomuser.me/api/portraits/men/85.jpg"></v-img>
          </v-list-item-avatar>

          <v-list-item-title>John Leider</v-list-item-title>

          <v-btn
            icon
            @click.stop="mini = !mini"
          >
            <v-icon>mdi-chevron-left</v-icon>
          </v-btn>
        </v-list-item>

        <v-divider></v-divider>

        <v-list dense>
          <v-list-item
            v-for="item in items"
            :key="item.title"
            :aria-label="item.title"
            link
          >
            <v-list-item-icon>
              <v-icon>{{ item.icon }}</v-icon>
            </v-list-item-icon>
            <v-list-item-content>
              <v-list-item-title>{{ item.title }}</v-list-item-title>
            </v-list-item-content>
          </v-list-item>
        </v-list>
      </v-navigation-drawer>
    </v-card>
  </v-container>
</template>

<script>
  export default {
    data: () => ({
      drawer: true,
        items: [
          { title: 'Home', icon: 'mdi-home-city' },
          { title: 'My Account', icon: 'mdi-account' },
          { title: 'Users', icon: 'mdi-account-group-outline' },
        ],
        mini: true,
    })
  }
</script>
```
</details>

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Improvement/refactoring (non-breaking change that doesn't add any features but makes things better)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] The PR title is no longer than 64 characters.
- [x] The PR is submitted to the correct branch (`master` for bug fixes and documentation updates, `dev` for new features and breaking changes).
- [x] My code follows the code style of this project.
- [ ] I've added relevant changes to the documentation (applies to new features and breaking changes in core library)
- [ ] I've added new examples to the kitchen (applies to new features and breaking changes in core library)


<!--
MAKE SURE TO READ THE CONTRIBUTING GUIDE BEFORE CREATING A PR
https://github.com/vuetifyjs/vuetify/blob/master/.github/CONTRIBUTING.md

Testing and markup sections can be removed for documentation changes
-->

<!-- Provide a general summary of your changes in the Title above -->
<!-- Keep the title short and descriptive, as it will be used as a commit message -->

## Description
<!--- Describe your changes in detail -->
Please show how to pass the data down to the expanded section so that one can display extra information that may not fit in the columns.  I just guessed and found "item" to work as the documentation did not help me get there.

I got the template variable wrong it should be info.other, but hopefully you get the idea.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->

## How Has This Been Tested?
<!--- Please describe how you tested your changes. -->
<!--- Have you created new tests or updated existing ones? -->
<!--- e.g. unit | visually | e2e | none -->

## Markup:
<!--- Paste markup for testing your change --->
<details>

```vue
// Paste your FULL Playground.vue here
```
</details>

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [x] Improvement/refactoring (non-breaking change that doesn't add any features but makes things better)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] The PR title is no longer than 64 characters.
- [ ] The PR is submitted to the correct branch (`master` for bug fixes and documentation updates, `dev` for new features and breaking changes).
- [ ] My code follows the code style of this project.
- [ ] I've added relevant changes to the documentation (applies to new features and breaking changes in core library)
- [ ] I've added new examples to the kitchen (applies to new features and breaking changes in core library)

### Environment
**Vuetify Version:** 2.2.4
**Vue Version:** 2.6.11
**Browsers:** Chrome 79.0.3945.117
**OS:** Mac OS 10.15.0

### Steps to reproduce
1. Create data table
2. Pass down options object with mustSort: true
3. It is not respected

### Expected Behavior
mustSort option in `options` prop should be respected

### Actual Behavior
mustSort option in `options` prop is *not* respected

### Reproduction Link
<a href="https://codesandbox.io/s/admiring-surf-2vot6" target="_blank">https://codesandbox.io/s/admiring-surf-2vot6</a>


<!-- generated by vuetify-issue-helper. DO NOT REMOVE -->
<!--
MAKE SURE TO READ THE CONTRIBUTING GUIDE BEFORE CREATING A PR
https://github.com/vuetifyjs/vuetify/blob/master/.github/CONTRIBUTING.md

Testing and markup sections can be removed for documentation changes
-->

<!-- Provide a general summary of your changes in the Title above -->
<!-- Keep the title short and descriptive, as it will be used as a commit message -->

## Description
<!--- Describe your changes in detail -->

Fixed the bug which `v-container` with `fill-height` makes row smaller than it should.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open issue, please link to the issue here. -->

Fix #9773 without reproducing the bug described in #9731 

## How Has This Been Tested?
<!--- Please describe how you tested your changes. -->
<!--- Have you created new tests or updated existing ones? -->
<!--- e.g. unit | visually | e2e | none -->

visually

### before

![before](https://user-images.githubusercontent.com/15768372/72528572-bc218600-38ae-11ea-9a6b-e9c20640efe1.png)

### after

![after](https://user-images.githubusercontent.com/15768372/72528587-c5aaee00-38ae-11ea-844a-daa1b845e906.png)

## Markup:
<!--- Paste markup for testing your change --->
<details>

```vue
<template>
  <v-container class="grey fill-height lighten-5" style='background-color:grey !important'>
    <v-row>
      <v-col
        v-for="n in 3"
        :key="n"
        cols="12"
        sm="4"
      >
        <v-card
          class="pa-2"
          outlined
          tile
        >
          One of three columns
        </v-card>
      </v-col>
    </v-row>
  </v-container>
</template>

<script>
export default {
  data: () => ({
    //
  })
};
</script>
```
</details>

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to not work as expected)
- [ ] Improvement/refactoring (non-breaking change that doesn't add any features but makes things better)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] The PR title is no longer than 64 characters.
- [x] The PR is submitted to the correct branch (`master` for bug fixes and documentation updates, `dev` for new features and breaking changes).
- [x] My code follows the code style of this project.
- [ ] I've added relevant changes to the documentation (applies to new features and breaking changes in core library)
- [ ] I've added new examples to the kitchen (applies to new features and breaking changes in core library)

### Environment
**Vuetify Version:** 1.5.22
**Vue Version:** 2.6.10
**Browsers:** Chrome 79.0.3945.117
**OS:** Linux x86_64

### Steps to reproduce
Used  [UVUE](https://github.com/universal-vue/uvue) to implement SSR in Vue CLI 3. 

Command:
> npm run ssr:build
> npm run ssr:start


### Expected Behavior
No Error on visit

### Actual Behavior

{ 
...
"msg":"window is not defined",
"stack":"ReferenceError: window is not defined
    at Object.56d7 (server-bundle.js:1:635259)
   at o (webpack/bootstrap:36:26)
   at Module.91d2 (uvue.config.js:3:4)
    at o (webpack/bootstrap:36:26)
    at Object.0 (node_modules/vuetify/lib/mixins/transitionable.js:1:0)
    at o (webpack/bootstrap:36:26)
    at server-bundle.js:1:7319
    at Object.<anonymous> (server-bundle.js:1:7328)
    at o (/home/cavin/Desktop/athedian-web/node_modules/vue-server-renderer/build.prod.js:1:77607)
    at /home/cavin/Desktop/athedian-web/node_modules/vue-server-renderer/build.prod.js:1:78200",

"type":"Error",
"v":1
}


### Reproduction Link
<a href="https://codepen.io/cavinpabua/pen/gObdLoP?editors=1010#0" target="_blank">https://codepen.io/cavinpabua/pen/gObdLoP?editors=1010#0</a>


<!-- generated by vuetify-issue-helper. DO NOT REMOVE -->
### Environment


**Browsers:** Safari 13.0.4
**OS:** Mac OS 10.15.2

### Steps to reproduce
Just open it on Safari 13.0.4

### Expected Behavior
Component is supposed to be vertically centered

### Actual Behavior
Some components are on the bottom of the box instead

### Reproduction Link
<a href="https://vuetifyjs.com/en/components/toolbars" target="_blank">https://vuetifyjs.com/en/components/toolbars</a>

### Other comments
Checkout the screen recording: https://drive.google.com/file/d/1D0pz29gdbx1AQayngVfo4gPzf5GRRfH5/view?usp=sharing


<!-- generated by vuetify-issue-helper. DO NOT REMOVE -->
### Problem to solve
I found v-app-bar-nav-icon by accident, when looking at the code for some of the App Bar examples. Documenting this component explicitly will help others who are browsing the component documentation be aware of all possible components. Notably, it is mentioned peripherally on the documentation for "tabs".

### Proposed solution
Add documentation of existence of v-app-bar-nav-icon under one of UI Components >
* buttons
* app bars
* icons


<!-- generated by vuetify-issue-helper. DO NOT REMOVE -->