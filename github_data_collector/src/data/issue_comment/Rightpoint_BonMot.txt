
For Apps supporting < iOS 13, it would be nice to expose a `.colorProvider: (UITraitCollection) -> UIColor`

example callsite:
```swift
let label: UILabel = {
     let label = UILabel()
     label.bonMotStyle = .init([
            .alignment(.center),
            .colorProvider({
                   // Ideally one would abstract this semantically
                   switch $0 {
                          case .light: return .darkText
                          case .dark: return .lightText
                   }
            )
     ])
    return label
}()
```

The implementation on the `BonMot` side would involve updating the current `AdaptableTextContainer` implementations.
A way to enable tests even when building w/ SwiftPM.

Only two tests fail (on macOS):
- testAvailableFeatures
- testImageTinting
Fixes #345 using the improved interaction between `switch` and `#if` in Swift 4.1+.

I believe this requires removing support for Swift 4.0. Let me know if that assumption is incorrect.
Itâ€™s come up once or twice in projects, since some protocols that we use with model or state types require that things be `Equatable` for collection diffing reasons. It would also probably simplify some tests.

Possible challenges: anything that contains a closure. Might need to throw some reference types in the mix to make it all work out.
Hi,

I'm trying to convert an HTML snippet with styles and links to an attributed string. What parsing approach would you recommend?

Here is the HTML I am trying to convert:

`"<ol><li><strong>Bee Gees</strong> - <a href=\"https://www.youtube.com/watch?v=I_izvAbhExY\" target=\"_blank\"><em>Staying Alive</em></a></li><li><strong>Daft Punk</strong> - <a href=\"https://www.youtube.com/watch?v=yca6UsllwYs\" target=\"_blank\"><strong><em>Around the World</em></strong></a></li><li><strong>Kanye West</strong> - <a href=\"https://www.youtube.com/watch?v=mWtIxc38xNE\" target=\"_blank\"><strong>Flashing Lights</strong></a></li></ol>"`

This has various phrases with nested emphasis+strong+ahref tags. I would like these nested tags to be converted to custom font styles for an attributed string.

I'm sure others have attempted this before - wondering if there is a recommended approach?
Before:

```swift
var style = StringStyle(
    .font(someFont),
    .color(someColor),
    .minimumLineHeight(28)
)
style.adaptations = [.fontMetrics(textStyle: .title1, maxPointSize:nil)]
return style
```

After:

```swift
return StringStyle(
    .font(someFont),
    .color(someColor),
    .minimumLineHeight(28),
    .adaptations([.fontMetrics(textStyle: .title1, maxPointSize:nil)])
)
```
Way of the future
Looks like this is actually a problem with how iOS handles `setAttributedTitle()` on UIButton. We could support the work around, by setting the button's label's `attributedText` first and then using that to `setAttributedTitle()`.

Discussion/investigation of problem:
https://stackoverflow.com/a/56878374
.lineSpacing + .tracking or .adapt
<img width="409" alt="Screen Shot 2019-07-17 at 16 53 18" src="https://user-images.githubusercontent.com/17898297/61368631-84faf980-a8b8-11e9-9337-99c94e58a9d9.png">
.lineSpacing only
<img width="404" alt="Screen Shot 2019-07-17 at 16 54 27" src="https://user-images.githubusercontent.com/17898297/61368641-8a584400-a8b8-11e9-9c2c-23b7ccf7569c.png">
.lineSpacing + .tracking or .adapt
<img width="404" alt="Screen Shot 2019-07-17 at 16 55 16" src="https://user-images.githubusercontent.com/17898297/61368649-8c220780-a8b8-11e9-9900-bb28d069b70e.png">

---

This bug appears only with single line strings, this is not a BonMot bug, its probably NSAttributedString bug
@ZevEisenberg Any ideas?