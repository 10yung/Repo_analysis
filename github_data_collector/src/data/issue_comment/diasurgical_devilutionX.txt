This adds an optional fix for the unique item generation bug, as well as a header file to toggle on/off optional fixes. I know that some people will want a pure vanilla experience, so it's disabled by default.

As an FYI, the bug involves unique items where more than one item of the same base type exists. The game will always pick the last occurring item in multi player, making it impossible to find any item but that. In single player the game records which uniques have already dropped so it is possible, but it starts from bottom to top making it extremely difficult since you would have to find 3-4+ uniques of the same base in the **_same_** game.

How this should be fixed can be argued, but interestingly there is an unused `random` call in the vanilla code. I fixed it by making the game use this call, so it picks one at random rather than the last one. Below is a screenshot of me finding both Lightforge and Constricting Ring in multiplayer:
![DIABLO_20200115_024042](https://user-images.githubusercontent.com/15209402/72401664-4385c280-3712-11ea-99af-a6709e45d939.png)

I'm on Windows 10. Pressing "Print Screen" on the keyboard saves screenshots in some ancient "PCX" format. If you spam the key quickly, you get a disk space error message and the screen colors glitch out.

Seems like there are multiple issues here. Format should probably be updated to PNG, hitting the key too fast shouldn't trigger HD space errors, and the colors shouldn't glitch after an error message.
`MFILE_NONE` does not correspond to the last item of `misfiledata` array and is actually greater than the length of that array causing out-of-bounds crash on iOS (reproduced when applying rogue's Disarm Trap skill).
1. Makes START a modifier key.
2. Main modifier actions are now displayed as hints while the modifier is pressed.
3. Mouse simulation now available on all controllers:
   SELECT + D-Pad to move mouse
   SELECT + Left/Right should button to click
   
 START +    | Action
 ---------- | ------
 SELECT     | Menu
 UP         | Menu
 DOWN       | Map
 LEFT       | Character info
 RIGHT      | Inventory
 B (Bottom) | Spell book
 Y (Left)   | Quest log

This makes all actions available on controllers without sticks and ZL/ZR.

![devilutionx-controls-corners](https://user-images.githubusercontent.com/216339/71780014-0c4a3f80-2fb5-11ea-9376-89950f0eb77f.png)

Alternative hint positioning:

![devilutionx-start](https://user-images.githubusercontent.com/216339/71779802-b0ca8280-2fb1-11ea-802c-51729d036908.png)

[devilutionx-retrofw.ipk.zip](https://github.com/diasurgical/devilutionX/files/4023364/devilutionx-retrofw.ipk.zip)

This brings translation support to the game, it will probably need a bit of adjustment on different platforms and for the handling of static texts. Currently, also only the strings from DiabloUI and appfat.cpp are marked as translatable.

Fixes #66

![Sk√¶rmbillede fra 2020-01-07 23-02-49](https://user-images.githubusercontent.com/204594/71933225-e9c94980-31a1-11ea-9d8d-4389fed01b3a.png)


@Vitexus @AJenbo 
I'm trying to build a DevilutionX in multiarch [PPA repository](https://launchpad.net/~devilutionx/+archive/ubuntu/dev).
So I made some changes in debian packaging [rules](https://github.com/muzena/devilutionX/blob/debian-packaging/Packaging/debian/rules) file:
I've added flag $(DEB_HOST_MULTIARCH) for autodetecting system arch.
amd64 compiles and generates deb's without problem, but in i386 building there is problem I don't know why, maybe is bug in cmake or something missing in CMakeLists options.
Here's i386 build [log](https://launchpadlibrarian.net/458425055/buildlog_ubuntu-bionic-i386.devilutionx_0.5.0.3+git893-c3f2834-201912311215~ubuntu18.04.1_BUILDING.txt.gz)
Problem is in $(DEB_HOST_MULTIARCH) subtitution:
Search in log for more details "obj-i686-linux-gnu" and "obj-i386-linux-gnu"
cmake sets build directory in obj-i686-linux-gnu and $(DEB_HOST_MULTIARCH) made obj-i386-linux-gnu subtitution, so after trying copy devilutionx binary from obj-i386-linux-gnu instead but build file is in obj-i686-linux-gnu.
Why cmake set build directory in obj-i686-linux-gnu instead obj-i386-linux-gnu?




The PlayStation port had an option for running the game at two game speeds. Normally logic runs at 20hz. In fast mode, the logic runs at 30hz.

The 20hz is governed by `nthread_recv_turns` (50 ms) and initialized by `nthread_handler`. When joining a multiplayer game this setting should be synced the same as difficulty and seed, so possibly it should be added to _gamedata.
This being some more touch friendly ui, but it needs some cleanup before it will intergrate cleanly with the code for other ports. 
