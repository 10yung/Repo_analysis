### Describe the PR

By making each static shortcut a method, it allows for handling of late loaded polyfills, while still allowing for better minification of code.

See https://github.com/bootstrap-vue/bootstrap-vue/pull/3641#issuecomment-575884289

### PR checklist

<!-- (Update "[ ]" to "[x]" to check a box) -->

**What kind of change does this PR introduce?** (check at least one)

- [ ] Bugfix
- [ ] Feature
- [x] Enhancement
- [ ] ARIA accessibility
- [ ] Documentation update
- [x] Other (please describe) refactor

**Does this PR introduce a breaking change?** (check one)

- [x] No
- [ ] Yes (please describe)

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch, **not** the `master` branch
- [ ] When resolving a specific issue, it's referenced in the PR's title (i.e. `[...] (fixes #xxx[,#xxx])`, where "xxx" is the issue number)
- [x] It should address only one issue or feature. If adding multiple features or fixing a bug and adding a new feature, break them into separate PRs if at all possible.
- [x] The title should follow the [**Conventional Commits**](https://www.conventionalcommits.org/) naming convention (i.e. `fix(alert): not alerting during SSR render`, `docs(badge): update pill examples`, `chore(docs): fix typo in README`, etc). **This is very important, as the `CHANGELOG` is generated from these messages.**

**If new features/enhancement/fixes are added or changed:**

- [ ] Includes documentation updates (including updating the component's `package.json` for slot and event changes)
- [ ] Includes any needed TypeScript declaration file updates
- [ ] New/updated tests are included and passing (if required)
- [x] Existing test suites are passing
- [x] CodeCov for patch has met target
- [x] The changes have not impacted the functionality of other components or directives
- [ ] ARIA Accessibility has been taken into consideration (Does it affect screen reader users or keyboard only users? Clickable items should be in the tab index, etc.)

**If adding a new feature, or changing the functionality of an existing feature, the PR's
description above includes:**

- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)

### Describe the PR

Ads a new prop `input-type` to allow user to specify type of input to use in default render:

- `text` (default)
- `email`
- `url`
- `tel`
- `number`

Closes #4644

### PR checklist

<!-- (Update "[ ]" to "[x]" to check a box) -->

**What kind of change does this PR introduce?** (check at least one)

- [ ] Bugfix
- [x] Feature
- [x] Enhancement
- [ ] ARIA accessibility
- [ ] Documentation update
- [ ] Other (please describe)

**Does this PR introduce a breaking change?** (check one)

- [x] No
- [ ] Yes (please describe)

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch, **not** the `master` branch
- [x] When resolving a specific issue, it's referenced in the PR's title (i.e. `[...] (fixes #xxx[,#xxx])`, where "xxx" is the issue number)
- [x] It should address only one issue or feature. If adding multiple features or fixing a bug and adding a new feature, break them into separate PRs if at all possible.
- [x] The title should follow the [**Conventional Commits**](https://www.conventionalcommits.org/) naming convention (i.e. `fix(alert): not alerting during SSR render`, `docs(badge): update pill examples`, `chore(docs): fix typo in README`, etc). **This is very important, as the `CHANGELOG` is generated from these messages.**

**If new features/enhancement/fixes are added or changed:**

- [x] Includes documentation updates (including updating the component's `package.json` for slot and event changes)
- [ ] Includes any needed TypeScript declaration file updates
- [ ] New/updated tests are included and passing (if required)
- [x] Existing test suites are passing
- [ ] CodeCov for patch has met target
- [x] The changes have not impacted the functionality of other components or directives
- [ ] ARIA Accessibility has been taken into consideration (Does it affect screen reader users or keyboard only users? Clickable items should be in the tab index, etc.)

**If adding a new feature, or changing the functionality of an existing feature, the PR's
description above includes:**

- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)

### Describe the bug

Looks like input type of `b-form-tags` is hardcoded to `text`. I can't change it via `input-props`.

### Expected behavior

`input-props` should have ability to change `type`.

### Versions

**Libraries:**

- BootstrapVue: 2.2.2
- Bootstrap: 4.4.1
- Vue: 2.6.11

**Environment:**

- Device: Mac
- OS: macOS Mojave
- Browser: Chrome
- Version: 79.0.3945.117

## B-pagination not able to past the second page.

I am trying to load a list of 39 attendees of an event in a b-table. The table is set to 10 rows per page.
But im unable to go past the second page. Even if click on the last page button if wont go past the second page. I made a method that forces the currentPage to 3 but 
when currentPage gets assigned the value it almost instantly jumps back to value 2.
The b-table and the b-pagination able to correctly  read the current page, rows per page and the items.

**The b-table:**

```
< b-table
        id="event_attendees"
        v-if="attendees.length"
        :sort-by="'event'"
        responsive
        hover
        striped
        :filter="filter"
        :items="attendees"
        :fields="fields"
        :per-page="rowsPerPage"
       :current-page="currentPage"
       @filtered="onFiltered"
 >
```



**The b-pagination**

```
< b-pagination
      align="center"
      size="md"
      :total-rows="totalRows"
      v-model="currentPage"
      :per-page="rowsPerPage" >
</b-pagination>
```





### Versions

**Libraries:**

- BootstrapVue: 2.0.0-rc.11
- Bootstrap: 4.4.1
- Vue: 2.5.7

**Environment:**

- Device: Windows 10 computer
- Browser: Chrome 79.0.3945.117




### Describe the PR

Refactor of the icons plugin exports.

Possibly related to #4636

### PR checklist

<!-- (Update "[ ]" to "[x]" to check a box) -->

**What kind of change does this PR introduce?** (check at least one)

- [ ] Bugfix
- [ ] Feature
- [ ] Enhancement
- [ ] ARIA accessibility
- [ ] Documentation update
- [x] Other (please describe) refactor

**Does this PR introduce a breaking change?** (check one)

- [x] No
- [ ] Yes (please describe)

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch, **not** the `master` branch
- [ ] When resolving a specific issue, it's referenced in the PR's title (i.e. `[...] (fixes #xxx[,#xxx])`, where "xxx" is the issue number)
- [x] It should address only one issue or feature. If adding multiple features or fixing a bug and adding a new feature, break them into separate PRs if at all possible.
- [x] The title should follow the [**Conventional Commits**](https://www.conventionalcommits.org/) naming convention (i.e. `fix(alert): not alerting during SSR render`, `docs(badge): update pill examples`, `chore(docs): fix typo in README`, etc). **This is very important, as the `CHANGELOG` is generated from these messages.**

**If new features/enhancement/fixes are added or changed:**

- [ ] Includes documentation updates (including updating the component's `package.json` for slot and event changes)
- [ ] Includes any needed TypeScript declaration file updates
- [ ] New/updated tests are included and passing (if required)
- [x] Existing test suites are passing
- [x] CodeCov for patch has met target
- [x] The changes have not impacted the functionality of other components or directives
- [ ] ARIA Accessibility has been taken into consideration (Does it affect screen reader users or keyboard only users? Clickable items should be in the tab index, etc.)

**If adding a new feature, or changing the functionality of an existing feature, the PR's
description above includes:**

- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)

### Describe the PR

Fixes typo 

### PR checklist

<!-- (Update "[ ]" to "[x]" to check a box) -->

**What kind of change does this PR introduce?** (check at least one)

- [ ] Bugfix
- [ ] Feature
- [ ] Enhancement
- [ ] ARIA accessibility
- [ ] Documentation update
- [x] Other (please describe)

**Does this PR introduce a breaking change?** (check one)

- [x] No
- [ ] Yes (please describe)

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch, **not** the `master` branch
- [ ] When resolving a specific issue, it's referenced in the PR's title (i.e. `[...] (fixes #xxx[,#xxx])`, where "xxx" is the issue number)
- [x] It should address only one issue or feature. If adding multiple features or fixing a bug and adding a new feature, break them into separate PRs if at all possible.
- [x] The title should follow the [**Conventional Commits**](https://www.conventionalcommits.org/) naming convention (i.e. `fix(alert): not alerting during SSR render`, `docs(badge): update pill examples`, `chore(docs): fix typo in README`, etc). **This is very important, as the `CHANGELOG` is generated from these messages.**

**If new features/enhancement/fixes are added or changed:**

- [ ] Includes documentation updates (including updating the component's `package.json` for slot and event changes)
- [ ] Includes any needed TypeScript declaration file updates
- [ ] New/updated tests are included and passing (if required)
- [ ] Existing test suites are passing
- [ ] CodeCov for patch has met target
- [ ] The changes have not impacted the functionality of other components or directives
- [ ] ARIA Accessibility has been taken into consideration (Does it affect screen reader users or keyboard only users? Clickable items should be in the tab index, etc.)

**If adding a new feature, or changing the functionality of an existing feature, the PR's
description above includes:**

- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)

### Describe the bug

Excuse me, I'm importing only the Alert plugin but this appears in my browser console during hot reload.

```
VM22232 log.js:26 [HMR] Cannot apply update. Need to do a full reload!
module.exports @ VM22232 log.js:26
eval @ VM22231 dev-server.js:39
Promise.catch (async)
check @ VM22231 dev-server.js:36
eval @ VM22231 dev-server.js:55
emit @ VM22234 events.js:152
reloadApp @ VM22222 reloadApp.js:23
ok @ VM22203 localhost:28080:120
eval @ VM22206 socket.js:48
sock.onmessage @ VM22207 SockJSClient.js:63
EventTarget.dispatchEvent @ VM22208 sockjs.js:170
eval @ VM22208 sockjs.js:888
SockJS._transportMessage @ VM22208 sockjs.js:886
EventEmitter.emit @ VM22208 sockjs.js:86
WebSocketTransport.ws.onmessage @ VM22208 sockjs.js:2962



VM22232 log.js:26 [HMR] Error: Aborted because ./node_modules/bootstrap-vue/esm/icons/index.js is not accepted
Update propagation: ./node_modules/bootstrap-vue/esm/icons/index.js -> ./node_modules/bootstrap-vue/esm/index.js -> ./client/js/vue-project.ts -> ./client/js/index.ts
    at https://localhost:28080/ipack.js:820:32
    at https://localhost:28080/ipack.js:540:21
    at Array.map (<anonymous>)
    at internalApply (https://localhost:28080/ipack.js:539:54)
    at https://localhost:28080/ipack.js:516:24
    at waitForBlockingPromises (https://localhost:28080/ipack.js:471:55)
    at https://localhost:28080/ipack.js:514:22
```

### Steps to reproduce the bug

1. Add this to the project: 

```ts
import Vue from 'vue';
import { AlertPlugin } from 'bootstrap-vue';

// https://bootstrap-vue.js.org/docs/#component-groups-and-directives-as-vue-plugins
Vue.use(AlertPlugin);
```

2. Run hot reload.

3. Above error message gets displayed in browser console...

4. Hot reload will suddenly work again if you change anything in the file which renders the vue Root component, but only while webpack-dev-server is running. (The next time WDS is run again, the warning message will appear again)

### Expected behavior

Hot reload works and without warnings or errors.

### Versions

**Libraries:**

- BootstrapVue: 2.2.1
- Bootstrap: 4.4.1
- Vue: 2.6.11

**Environment:**

- Device: ASUS GU502GV
- OS: Microsoft Windows [Version 10.0.18363.535]
- Browser: Chrome 
- Version: 80.0.3987.53

### Demo link

TODO after finished speaking at my seminar

> If applicable, add a minimal demo link to help explain your problem. Some options for that are [CodePen](https://codepen.io/), [CodeSandbox](https://codesandbox.io/), [JS Bin](https://jsbin.com/) or [JSFiddle](https://jsfiddle.net/).

> You can also export markup from the [Online Playground](https://bootstrap-vue.js.org/play) to _CodePen_, _CodeSandbox_ or _JSFiddle_.

### Additional context

Am using Webpack versions:

```
    "webpack": "5.0.0-beta.11",
    "webpack-dev-server": "3.10.1",
    "vue-loader": "15.8.3",
```

Hi are there any plans til implement support for title attribute on options (**preferly rendered by the v-b-tooltip**)?

Something like this:

```
<template>
  <div>
    <b-form-select v-model="selected" :options="options"></b-form-select>
select>
    <div class="mt-3">Selected: <strong>{{ selected }}</strong></div>
  </div>
</template>

<script>
  export default {
    data() {
      return {
        selected: null,
        options: [
          { value: null, text: 'Please select an option' },
          { value: 'a', text: 'This is First option' },
          { value: 'b', text: 'Selected Option' },
          { value: { C: '3PO' }, text: 'This is an option with object value' },
          { value: 'd', text: 'This one is disabled', disabled: true }
         { value: 'xyz', text: 'VeryComplex option', title:'My very good description for the complex option'}
        ]
      }
    }
  }
</script>
```
### Describe the bug

In my project a Table set to be selectable is not selectable - rows don't emit events when clicked but can be selected by methods (selectAllRows, etc.). Sometimes rows can be selectable after toggling the select state of the table (but not usually).

### Steps to reproduce the bug

1. Go to https://codesandbox.io/s/bootstrap-vue-table-select-issue-fkqns
2. Click on either "purchase" or "select rows"
3. Attempt to select a row - it shouldn't work (you don't see SELECTED)
4. Hit exit mode. Click on either button again
5. Attempt to select a row - it may work (SELECTED may appear)

GIF of Issue in full project: https://imgur.com/Y2hqQ7M

### Expected behavior

I can select rows on the table on the first try.

### Versions

**Libraries:**

- BootstrapVue: 2.2.1
- Bootstrap: 4.4.1
- Vue: 2.6.10

**Environment:**

- Device: Windows 10 latest
- Chrome 80.0.3987.42 and Firefox 72.0.1, others on phones etc

### Demo link

https://codesandbox.io/s/bootstrap-vue-table-select-issue-fkqns

### Additional context

My demo is a stripped down part from a project which uses CoreUI which may be related. In the project selecting never works (where in the demo it starts to after exiting a select mode). In the code sandbox it worked as expected originally but when I started adding more to figure out the issue it broke. When I added these libraries it stopped working (not even imported in main.js just added to the dependencies):  
@coreui/coreui-pro: 3.0.0-beta.3,
@coreui/vue: ^3.0.0-beta.7,
Removing them did not fix the issue so maybe something else is at fault. 

I attempted to work around this buy having two tables (one you can select one is view-only) that use v-if and else that also result in un-selectable rows. I finally added keys to both and that seems to work but is ugly...

### Describe the PR

This PR add adds following new props to the `<b-pagination>` and `<b-pagination-nav>` components:

- `first-class` - Adds a custom class to the first page button.
- `prev-class` - Adds a custom class to the previous page button.
- `next-class` - Adds a custom class to the next page button.
- `last-class` - Adds a custom class to the last page button.
- `page-class` - Adds a custom class to the page buttons.
- `ellipsis-class` - Adds a custom class to the ellipsis elements.
- `first-number` - Show the first page number in favor of the `first-text`. Will move the first page button after the previous page button.
- `last-number` - Show the last page number in favor of the `last-text`. Will move the last page button before the next page button.

Closes #4597, Closes #4533.

### PR checklist

<!-- (Update "[ ]" to "[x]" to check a box) -->

**What kind of change does this PR introduce?** (check at least one)

- [ ] Bugfix
- [x] Feature
- [ ] Enhancement
- [ ] ARIA accessibility
- [ ] Documentation update
- [ ] Other (please describe)

**Does this PR introduce a breaking change?** (check one)

- [x] No
- [ ] Yes (please describe)

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch, **not** the `master` branch
- [x] When resolving a specific issue, it's referenced in the PR's title (i.e. `[...] (fixes #xxx[,#xxx])`, where "xxx" is the issue number)
- [x] It should address only one issue or feature. If adding multiple features or fixing a bug and adding a new feature, break them into separate PRs if at all possible.
- [x] The title should follow the [**Conventional Commits**](https://www.conventionalcommits.org/) naming convention (i.e. `fix(alert): not alerting during SSR render`, `docs(badge): update pill examples`, `chore(docs): fix typo in README`, etc). **This is very important, as the `CHANGELOG` is generated from these messages.**

**If new features/enhancement/fixes are added or changed:**

- [ ] Includes documentation updates (including updating the component's `package.json` for slot and event changes)
- [ ] Includes any needed TypeScript declaration file updates
- [ ] New/updated tests are included and passing (if required)
- [x] Existing test suites are passing
- [x] CodeCov for patch has met target
- [x] The changes have not impacted the functionality of other components or directives
- [ ] ARIA Accessibility has been taken into consideration (Does it affect screen reader users or keyboard only users? Clickable items should be in the tab index, etc.)

**If adding a new feature, or changing the functionality of an existing feature, the PR's
description above includes:**

- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)
