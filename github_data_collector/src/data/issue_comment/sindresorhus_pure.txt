Per https://github.com/sindresorhus/pure/issues/509, this adds an option to omit the new line before the prompt.
<!-- TIP: Hit 'Preview' for a more readable version of this template -->

### General information

#### System report (output of `prompt_pure_system_report`):

```
- Zsh: zsh 5.7.1 (x86_64-pc-linux-gnu)
- Operating system: Linux (#1 SMP PREEMPT Tue, 24 Dec 2019 04:36:53 +0000)
- Terminal program:  Kitty
- Git: git version 2.24.1
- Pure state:
	- username: `''`
	- prompt: `‚ùØ`
	- version: `1.10.3`
- Virtualenv: `export VIRTUAL_ENV_DISABLE_PROMPT=12`
- Prompt: `typeset -g PROMPT=$'%F{${prompt_pure_colors[path]}}%~%f
%{
%}%(12V.%F{$prompt_pure_colors[virtualenv]}%12v%f .)%(?.%F{$prompt_pure_colors[prompt:success]}.%F{$prompt_pure_colors[prompt:error]})${prompt_pure_state[prompt]}%f '`
- Detected frameworks: None
```

<!-- TIP: Run `prompt_pure_system_report | pbcopy` on macOS to copy straight to clipboard, then paste here -->

#### Other information

<!--
If you can't load Pure to create a system report, please report the following information:

- Pure version: 1.x.x
- ZSH version: 5.x.x
- Terminal program & version: (e.g. Hyper 1.0.0, iTerm 3.0.0, xterm 327, other?)
- Operating system: (e.g. macOS Mojave 10.13.1)
- ZSH framework: (e.g. oh-my-zsh, prezto, antigen, antibody, zplug, other?)
-->

#### I have:

- [ ] Tested with another terminal program and can reproduce the issue: <!-- e.g. iTerm, etc. -->
- [x] Followed the [integration](https://github.com/sindresorhus/pure#integration) instructions for my framework


### Problem description
My git prompt stopped appearing after updating my system. I don't know what's fully wrong but I hope someone might have this issue or may know my problem. Everything was working before; my prompt included my branch and also if there are changes to commit( the *). However, now neither of those appear. 


### Reproduction steps

1. Git prompt never appears anymore. Tried it on almost every single git project that I have by cd. 

### My `.zshrc`:
My .zshrc is minimal. It only contains the aliases with COMPLETE_ALIASES, and exporting env variables. I source my antibody plugins and it only contains zsh-autosuggestions, pure, and zsh-completions. Everything was working before. I think some dependency update broke pure. 
<!--
Please provide a minimal `.zshrc` that reproduces the issue.
Try to remove everything that that does not affect the issue, the fewer lines, the better.

Example:

```shell
autoload -U promptinit; promptinit
prompt pure
```
-->

The pre-prompt is written twice, which is both inefficient and causes some problems with "shell-integration".

*Background*: I'm working on an extended [protocol](https://gitlab.freedesktop.org/Per_Bothner/specifications/blob/master/proposals/semantic-prompts.md) for enhanced "shell integration" - see [article with screenshots](http://per.bothner.com/blog/2019/shell-integration-proposal/). I wrote [a zsh script](https://github.com/PerBothner/DomTerm/blob/master/tools/shell-integration.zsh) to implement the protocol: It essentially adds an invisible prefix and postfix to `PROMPT`, specifically:

    PS1=$'%{\e]133;P;k=i\a%}'$PS1$'%{\e]133;B\a\e]122;> \a%}'

This worked fine until I ran into multi-line prompts, specifically Pure-style "pre-prompt" lines.  After some thought and fixes, it now works fine with spaceship-prompt and with the [fish port of pure](https://github.com/rafaelrinaldi/pure).  However, zsh pure doesn't work properly:

![multiline-prompts](https://user-images.githubusercontent.com/10293361/70581111-efb01880-1b6a-11ea-85ad-0413e21f03c2.png)

The default colors are light blue-green for prompts, light yellow for input area, and light beige for input lines as a whole.  The pre-prompt lines `~/DomTerm master*` should be blue-green, and that is correct for fish-pure and spaceship.  However, the original pure, the pre-prompt lines appear in the light yellow of input text.  The reason for that is that pure first displays the pre-prompt correctly (using the escape sequences above), and then it re-paints the pre-prompt without the escape sequences, so they appears to be (echo of) user input.  This causes some problems because the terminal is confused as to what is prompt and what is input.  The visual appearance is also not what it should be.

I don't know zsh much or use it on a regular basis, so I haven't tried to figure out why the pure prints the pre-prompt a second time, this time without the escape sequences.

As discussed in #507 and #510, clarifies the manual installation instructions. 
Only fetch information for the current branch to minimize the amount of work Pure (well, git) needs to do.

This commit also starts redirecting git stderr to `/dev/null` because in some cases git can start spewing errors like crazy (see #502). We also never use the stderr so there's no point in keeping it around.

Fixes #473.

Future work could include figuring out if we can somehow avoid one or both of the extra subshells (although, they're run in the async job so it will have minor impact).
Hey,

thanks for this great theme.
I'm right now testing colors and fonts to customize it to my needs.
It would be super handy to have a command that outputs all the different prompt styles. (clean git, dirty git, up arrow, down arrow, time etc.)

This way it would be much easier to test out color themes and fonts for your terminal.
Fixes #507.
There is an empty line between subsequent prompts. This can be seen in the image that it is in the README. For example, there is a line between "Exit 1" and "~".

Is it possible to remove this line? I find it wastes to much space.

<!-- TIP: Hit 'Preview' for a more readable version of this template --> 

### General information

- Pure version: master
- ZSH version: 5.7.1
- Terminal program & version: iTerm
- Operating system: macOS Sierra
- ZSH framework: None

I have:
- [x] Tested with another terminal program and can reproduce the issue: <!-- e.g. iTerm, etc. -->
- [x] Followed the [Integration](https://github.com/sindresorhus/pure#integration) instructions for my framework

### Problem description

The instructions seem to be wrong.

### Reproduction steps

1. Try following the instructions for manual installation, then open a new terminal.
2. You don't see the pure prompt.

### My `.zshrc`:

```shell
autoload -U promptinit; promptinit
prompt pure
```

### Notes

As far as I can tell, the third and final command in the manual installation steps (`fpath+=("$HOME/.zsh/pure")`) only updates the `fpath` variable locally, in the current terminal session. So I tried inserting this line in my `.zshrc` instead (before `autoload...` etc), and this seems to make it work. Not sure if this is the correct approach, but if so, the instructions should be updated to explain that you need to put the `fpath+=` line in your `.zshrc` file.
**Summary**
Moves the dirty indicator to be always adjacent to the branch. Separate the git action with a space instead of a pipe. Bestow a distinct default color to the git action, yellow.

This is following up to other recent changes #491 and #486. (which are great!)

I feel that the re-arranging would be a less welcome change without the default color also being changed.

Before:
![image](https://user-images.githubusercontent.com/5565418/67792127-a5555b00-fa46-11e9-9205-4ec507b65759.png)

After:
![image](https://user-images.githubusercontent.com/5565418/67791369-4b07ca80-fa45-11e9-9ed8-f2d19ef14047.png)

Of course this is all subjective but here is my rationale...

The dirty indicator should be adjacent to the branch since they are very closely related in my mind. Together they tell me the status of the working tree. The git action seems like it belongs at the end since it is a "special state", relatively uncommon, important to notice. A space and a distinct color is cleaner and more readable than a pipe.

I choose yellow instead of red (as in #486) for the git action since red looks like an error.

If these changes are agreed upon, I can update the readme too.