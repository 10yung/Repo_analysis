
Example "traits" from our "triton datacenter" deployment:

**CN 1 Traits:**
{
"hvm": "bhyve"
}
**CN 2 Traits:**
{
"hvm": "kvm",
"ssd": "true"
}
**VM IMAGE & PACKAGE**
_The base64 Image should be allowed to provision on any hardware assuming that package traits are also properly aligned. Hence the reason for the JSON array below._ 

Base64 Image Traits:
{
"hvm": [ "kvm","bhyve"]
}
_The package traits mandate that this base64 image should be provisioned on a CN with the SSD trait set_
Package Traits:
{
"ssd": true
}
**Actual Behavior**
Attempting to provision a base64 VM with the aforementioned IMAGE and PACKAGE traits assigned causes provisioning to fail. The provisioning system chooses CN1 immediately and since the "ssd" trait is not set simply produces "failed to provision, no compute resources available". 
**Workaround**
Within ops portal or CNAPI: Update CN1 and set {"ssd": false}, the provisioning system will now skip CN1 and provision onto CN2 successfully.
**Expected behavior:**
A compute node that has a nil trait should automatically be skipped during provisioning preventing every compute node in the datacenter that does not match a specific trait from requiring a manual update to its "traits" property.




joyent/triton#223 External network shouldn't have QEMU DHCP service


This PR was migrated-from-gerrit, <https://cr.joyent.us/#/c/1203/>.
The raw archive of this CR is [here](https://github.com/joyent/gerrit-migration/tree/master/archive/1203).
See [MANTA-4594](https://smartos.org/bugview/MANTA-4594) for info on Joyent Eng's migration from Gerrit.
Add important note about headnode domain name, and the following sections: a) Setup SDC-Docker, b) Configure Client Access to CloudAPI


This PR was migrated-from-gerrit, <https://cr.joyent.us/#/c/925/>.
The raw archive of this CR is [here](https://github.com/joyent/gerrit-migration/tree/master/archive/925).
See [MANTA-4594](https://smartos.org/bugview/MANTA-4594) for info on Joyent Eng's migration from Gerrit.

## CR discussion

##### @khangngu commented at 2018-12-17T23:55:35

> Patch Set 1: Code-Review+1

##### @khangngu commented at 2018-12-17T23:55:57

> Removed the following votes:
> 
> * CI-Testing+1 by Joyent Automation (1000005)


##### @johnlevon commented at 2018-12-20T16:36:17

> Patch Set 1:
> 
> (2 comments)

##### Patch Set 1 code comments

> ###### docs/developer-guide/coal-setup.md#150 @johnlevon  
> 
> > "alphanumeric"?
> 
> ###### docs/developer-guide/coal-setup.md#383 @johnlevon  
> 
> > "Substitute"?
According to IRC, my headnode install failures was from using a domain that's publicly resolvable.  This is apparently a sin. so I suggest a line like this:
https://github.com/joyent/triton/pull/253

be merged into the CoaL docs, so future uninformed people like me can hopefully not have 3 failures before success.

1)
I have  a VM machine with 4 core, 32 GB RAM installing RHEL
Installed VM Workstation as you mentioned

2)
Then i tried running the below which is not required my understanding
curl -s https://raw.githubusercontent.com/joyent/sdc/master/tools/coal-linux-vmware-setup | sudo bash
It did not went fine gave errors

3)
tar -zxvf coal-latest.tgz -C ~/Documents/Virtual\ Machines.localized also did not went fine

could you please help here

We want to use Joyent as a dedicated product image (meaning photography) server for our e-commerce websites, https://www.circalighting.com and https://www.clarksonlighting.com . There are some 30,000+ product photographs, on these web properties. We are currently serving the site from AWS with an integrated (or partially dedicated) server for these product images. My understanding is that using Joyent, they could be delivered faster and cheaper. (Am I correct?!)

We are currently using AWS to serve the images AND the site (on separate instances - but I am not sure that this is what you would call a "dedicated image server". Then these are on CloudFront as CDN

What I want to do is have a Dedicated (product) image server on Joyent, and use CloudFlare as CDN/proxy.

The question is this: what are the best choices in provisioning for this particular use-case? I could not find this published on your site. (Sorry if I missed it somewhere).

Anoop from Corra is working with me on this; and in fact there may be another ticket he opened to discuss. 

Again, what stack is best for a dedicated server to deliver product photography with CloudFlare CDN?
Dylan



I followed the instructions in the README to get CoaL running on VMware. I installed VMware Fusion 8 (8.5.3) on a new machine (macOS 10.13.3) that has never hosted any VMs in the past.

When running the `coal-mac-vmware-setup` tool, I saw the following:

```
richard ~/Downloads
$ sudo bash coal-mac-vmware-setup
Password:
Admin network:    network="10.99.99.0", mac ip="10.99.99.254", netmask="255.255.255.0"
External network: network="10.88.88.0", mac ip="10.88.88.1", netmask="255.255.255.0"
Setup VMWare networking: admin network 10.99.99.0, external network 10.88.88.0
cat: networking: No such file or directory
```

Checking out the script, it seems that we use `cd` to "/Library/Preferences/VMware Fusion/" and look for "./networking" in that directory, but it didn't exist for me:

```
richard ~/Downloads
$ ls -alh /Library/Preferences/VMware\ Fusion/
total 16
drwxr-xr-x   5 root  wheel   160B 21 Sep 08:36 .
drwxr-xr-x  47 root  wheel   1.5K 21 Sep 09:17 ..
-r--r--r--   1 root  wheel    31B 21 Sep 08:35 lastLocationUsed
...
drwxr-xr-x  10 root  wheel   320B 21 Sep 08:35 thnuclnt
```

I headed over to the VMware GUI and created an empty Solaris 10 VM, and after clicking through the wizard (ending up at the console for that VM), I could see that I now had a "networking" file:

```
richard ~/Downloads
$ ls -alh /Library/Preferences/VMware\ Fusion/
total 24
drwxr-xr-x   7 root  wheel   224B 21 Sep 09:29 .
drwxr-xr-x  47 root  wheel   1.5K 21 Sep 09:17 ..
-r--r--r--   1 root  wheel    31B 21 Sep 09:29 lastLocationUsed
...
-rw-r--r--   1 root  wheel    12B 21 Sep 09:29 networking
drwxrwxrwx   3 root  wheel    96B 21 Sep 09:29 networking.lck
drwxr-xr-x  10 root  wheel   320B 21 Sep 09:29 thnuclnt
```

I deleted the test VM and ran `coal-mac-vmware-setup`, which then worked.

When installing VMware Fustion for the first time I opted not to create a VM, so perhaps this "networking" file is only created if we've created a VM in the past?
I've just been deploying manta to my coal and found out that the slow I/O within the VM affects the imagadm action simply causing it to take more than an hour which is made the default timeout of SAPI and causes failure of the manta-deploy-coal. 

Would you consider adding some tunable for COAL? Or is there a plan to fix this in manta?