Currently the Visual Studio Solution File (`guetzli.sln`) and the project files (`guetzli.vcxproj` and `guetzli_static.vcxproj`) are configured for Visual Studio 2015. It would be nice if those could be recompiled for Visual Studio 2019, which increases compatibility and performance.
 - Update Linux environment from Ubuntu 14.04 to 18.04 LTS
 - Update macOS environment from macOS 10.13 with Xcode 9.4 to macOS 10.14 with Xcode 11.2
 - Update Bazel from 1.1.0 to 1.2.1
I have written a guetzli wrapper which works just fine. Because guetzli is so slow, it would make sense if it could indicate progress. So what I suggest is that you create an empty progress function, something like this:

void Progress(int percentage) {
// your callback goes here
}

That would work for me. I could send a window message to my wrapper which would use a progress bar. I admit I haven’t looked at the code since I use an older version of Visual Studio. 
If guetzli fails for some reason, it always returns 1. I would much rather see that different values were used. Like this:
1: can’t find file
2: no output file
3: too many arguments
And so on. Very simple change
when running npm install I get node_modules\guetzli\vendor already exists, I do see that in install.js there is a line .cmd(`mkdir -p ${bin.dest()}`),
should'nt there be a conditional that confirms whether the folder already exists prior to attempting to create it?
Is it ok to install Vistual Studio 2017 ?
```
==== Building guetzli (release) ====
Creating bin/Release
mkdir -p bin/Release
dct_double.cc
c++ -O2 -pipe -fstack-protector -fno-strict-aliasing   -MMD -MP  -I. -Ithird_par
ty/butteraugli -std=c++11 `pkg-config --cflags libpng`  -o "obj/Release/dct_doub
le.o" -MF "obj/Release/dct_double.d" -c "guetzli/dct_double.cc"
butteraugli_comparator.cc
debug_print.cc
c++ -O2 -pipe -fstack-protector -fno-strict-aliasing   -MMD -MP  -I. -Ithird_par
ty/butteraugli -std=c++11 `pkg-config --cflags libpng`  -o "obj/Release/debug_pr
int.o" -MF "obj/Release/debug_print.d" -c "guetzli/debug_print.cc"
c++ -O2 -pipe -fstack-protector -fno-strict-aliasing   -MMD -MP  -I. -Ithird_par
ty/butteraugli -std=c++11 `pkg-config --cflags libpng`  -o "obj/Release/butterau
gli_comparator.o" -MF "obj/Release/butteraugli_comparator.d" -c "guetzli/buttera
ugli_comparator.cc"
Creating obj/Release
error: unable to open output file 'obj/Release/debug_print.o': 'No such file or
directory'
1 error generated.
gmake[2]: *** [guetzli.make:154: obj/Release/debug_print.o] Error 1
```

Original FreeBSD bug report: https://bugs.freebsd.org/bugzilla/show_bug.cgi?id=226070
Dear All,

I am trying to understand processor.cc, specially the function bool Processor::ProcessJpegData().
I see an if statement to check if the input has cbcr colorspace HasYCbCrColorSpace().
And, before the function try to optimize the quantization table, I found the following code:
  {
    JPEGData jpg = jpg_in;
    RemoveOriginalQuantization(&jpg, q_in);
    OutputImage img(jpg.width, jpg.height);
    img.CopyFromJpegData(jpg);
    comparator_->Compare(img);
  }
  MaybeOutput(encoded_jpg);

My question is, if the above code neccessary if my input is always have ycbcr (non grayscale) and always yuv420? Because I also try to optimize the code for our own usage. 

https://github.com/google/guetzli/blob/0b78c7cc8b1b6cbaaf3d08b1facb599bcec1d101/guetzli/processor.cc#L839

Thanks,

Sunny
Hi everybody,

since at the end of year 2018 guetzli is still a incredible good tool to compress images I decided to compile windows binaries.
I use Win7+Visual Studio 2015+followed the steps closely. But no matter what I do, I can not point the project to  use C:\vcpkg\packages\ as additional lib since I always get the missing "png.h" error. When I copy this file to guetzli dir I get this error instead:

``LNK2019	unresolved external symbol png_create_read_struct referenced in function "bool __cdecl `anonymous namespace'::ReadPNG(class std::basic_string<char,struct std::char_traits<char>,class std::allocator<char> > const &,int *,int *,class std::vector<unsigned char,class std::allocator<unsigned char> > *)" (?ReadPNG@?A0x1b7a9cb8@@YA_NAEBV?$basic_string@DU?$char_traits@D@std@@V?$allocator@D@2@@std@@PEAH1PEAV?$vector@EV?$allocator@E@std@@@3@@Z)	guetzli	C:\guetzli\guetzli.obj	1	
``
Can somebody help me?
Some images show visible gradient banding / blocking artifacts even after cb5e4a8.

Here's the crop to illustrate the issue. 

![guetzli-original](https://user-images.githubusercontent.com/3129436/48575752-d4e98100-e923-11e8-850f-91186bf08766.png)

From left to right: [Guetzli q94](https://user-images.githubusercontent.com/3129436/48576440-9ead0100-e925-11e8-84f1-d78d4460056d.jpg), [Original](https://user-images.githubusercontent.com/3129436/48575798-f21e4f80-e923-11e8-9ded-aa9612ae882c.jpg).

This issue is related to #243.