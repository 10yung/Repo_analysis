# Summary of the new feature/enhancement

The current PowerToys icon feels dated. With the legacy and connection with Windows 95 this makes sense, but I believe modernizing it might be better to make it feel more native to Windows 10. In 2020, we'll see lots of inbox application icons modernized ([more on Microsoft Design's push to re-design hundreds of OS icons here](https://medium.com/microsoft-design/the-ripple-effect-expanding-our-icon-design-system-74b4d916b7a4)).

Another issue with the current icon is the fact that it feels outdated and doesn't scale very well to smaller sizes (for e.g. the systemtray)


# Proposed technical implementation details (optional)

The proposal is to redesign the current PowerToys icon, so it feels part of the Windows 10 family of experiences (e.g. Terminal, other inbox apps)

<!--
**Important: When reporting BSODs or security issues, DO NOT attach memory dumps, logs, or traces to Github issues**.
Instead, send dumps/traces to secure@microsoft.com, referencing this GitHub issue.
-->

# Environment

```
Windows build number: windows 10 Build 18363.592
PowerToys version: 0.14.1.0
PowerToy module for which you are reporting the bug (if applicable):
```

# Steps to reproduce
Sorry i did notis this when my chrildren was testing my new fancy keybord with RGB light. 
So have no ide how to get it stack in a fanzy zone. But i can think of its some sort of Key kombinding.

# Expected behavior
https://photos.app.goo.gl/q4UrzWL5s51uuRAP7

Se the image.

# Actual behavior


# Screenshots

https://photos.app.goo.gl/q4UrzWL5s51uuRAP7

Error message upon launching settings from tray icon:

Error Failed to WebView Control.

No option other than to click OK, then App closes
<!-- Enter a brief description/summary of your PR here. What does it fix/what does it change/how was it tested (even manually, if necessary)? -->
## Summary of the Pull Request
Zone layout looks different in layout priview (just going through predefined zones in main editor window) and once You actually try to edit zone by going to `Edit selected layout`. Over the edges of the screen, in layout preview zone spacing is smaller in comparisson to editing layout where we have correct spacing both between zones and between zone edges and border of the screen (monitor).

<!-- Please review the items on the PR checklist before submitting-->
## PR Checklist
* [x] Applies to #952

<!-- Describe how you validated the behavior. Add automated tests wherever possible, but list manual validation steps taken as well -->
## Validation Steps Performed
1. Open FancyZones editor (go to edit zones in `FancyZones` general settings).
2. Select a 4 zones grid template with 20px spacing.
3. Check one of the corners, for instance the top-left corner.
4. Click `Edit selected layout`.

Expected result: Spacing between edges of the zones and border of the screen is the same as the spacing between zones itself (both for layout preview and when editing layout).
<!-- Enter a brief description/summary of your PR here. What does it fix/what does it change/how was it tested (even manually, if necessary)? -->
## Summary of the Pull Request
This PR moves the context menu entry to the same section as the Rotate right/left options and moves the drag and drop menu entry down below the **Copy here** entry. Details of the investigations are available in issue #1110. These changes have only been verified for the MSI installer. Handling the same for MSIX will be done in a separate PR linked to the same issue.

<!-- Please review the items on the PR checklist before submitting-->
## PR Checklist
* [X] Applies to #1110 
* [X] CLA signed. If not, go over [here](https://cla.opensource.microsoft.com/microsoft/PowerToys) and sign the CLA
* [X] Tests passed

<!-- Provide a more detailed description of the PR, other things fixed or any additional comments/features here -->
## Detailed Description of the Pull Request / Additional comments
- **Details of how the context menu ordering works can be found in #1110** 
- Based on the details above, since the ShellImagePreview which contains Rotate Left/Right is registered at HKCR/SystemFileAssociation/.png/ShellEx/ContextMenuHandlers/ShellImagePreview, the same has to be done with ImageResizer for each of the supported types. Thus there are entries for bmp, dib, gif, jfif, jpe, jpeg, jpg, jxr, png, rle, tif, tiff, wdp (all the directly supported types mentioned in the ImageResizer code). Images like .ico also "work" with the ImageResizer.exe but it converts it to jpg instead, so it doesn't actually resize a .ico back to .ico.
- ShellImagePreview adds 4 entries: a separator, Rot right, Rot left and another separator. For a basic check without making the context menu handling more resource intensive, a simple check for a separator at the start index(indexMenu arg) has been added to make sure that if an older version of Windows is being used where ShellImagePreview isn't available or if it has been disabled the code will still run fine.
- The drag and drop handler index was simply increased by one because **Copy here** was the initial first value in the context menu.
<!-- Describe how you validated the behavior. Add automated tests wherever possible, but list manual validation steps taken as well -->
## Validation Steps Performed
- Build, install, run on Debug/Release x64
- Tests passed
- Checked position of drag/drop and context menu entry for .jpg, .png, .bmp.
![image](https://user-images.githubusercontent.com/32061677/72653161-81672e80-393e-11ea-8b7b-d776eb2f1c70.png)
![image](https://user-images.githubusercontent.com/32061677/72653188-98a61c00-393e-11ea-8c18-a4bd92814d49.png)

<!-- Enter a brief description/summary of your PR here. What does it fix/what does it change/how was it tested (even manually, if necessary)? -->
## Summary of the Pull Request
This PR refactors the QueryContextMenu function in ImageResizer based on PowerRename by changing the usage of InsertMenu to InsertMenuItem and the MenuItemInfo structure which supersedes InsertMenu. This refactor also allows the addition of an icon in the context menu entry. The ImageResizer.ico which is present in the C# project is used for this. The CreateBitmapFromIcon which was moved to common in #1101 was utilized for this icon addition.
<!-- Other than the issue solved, is this relevant to any other issues/existing PRs? --> 
## References

<!-- Please review the items on the PR checklist before submitting-->
## PR Checklist
* [X] Applies to #53 
* [X] CLA signed. If not, go over [here](https://cla.opensource.microsoft.com/microsoft/PowerToys) and sign the CLA
* [X] Tests passed

<!-- Provide a more detailed description of the PR, other things fixed or any additional comments/features here -->
## Detailed Description of the Pull Request / Additional comments
- Refactored InsertMenu to InsertMenuItem based on PowerRename code
- Added a reference to the ImageResizer icon in the ShellExtensions project
- Added the icon in the ShellExtensions.rc file and resource.h
- Added an `HINSTANCE` object which is initialized in dllmain.cpp and is accessed in ContextMenuHandler.cpp using an extern declaration (Replicated based on PowerRename).

<!-- Describe how you validated the behavior. Add automated tests wherever possible, but list manual validation steps taken as well -->
## Validation Steps Performed
- Build, install, run successfully in Debug/Release x64
- Test cases pass

<!-- Enter a brief description/summary of your PR here. What does it fix/what does it change/how was it tested (even manually, if necessary)? -->
## Summary of the Pull Request
This pull request is adding the functional spec for the Keyboard Manager.

Changes:
- Added the KeyManager.md in the spec folder
- Added the images from the spec in a new folder in the image folder in doc/specs/images
- Updated the readme.MD in images to include link to KeyManager.md

<!-- Other than the issue solved, is this relevant to any other issues/existing PRs? --> 
## References
N/A

<!-- Please review the items on the PR checklist before submitting-->
## PR Checklist
* [x] Applies to #6 
* [x] CLA signed. If not, go over [here](https://cla.opensource.microsoft.com/microsoft/PowerToys) and sign the CLA
* [x] Tests added/passed
* [x] Requires documentation to be updated
* [x] I've discussed this with core contributors already. If not checked, I'm ready to accept this work might be rejected in favor of a different grand plan. Issue number where discussion took place: #xxx

<!-- Provide a more detailed description of the PR, other things fixed or any additional comments/features here -->
## Detailed Description of the Pull Request / Additional comments

<!-- Describe how you validated the behavior. Add automated tests wherever possible, but list manual validation steps taken as well -->
## Validation Steps Performed
N/A
# Environment

```
Windows build number: 10.0.18362.535
PowerToys version: 0.14.1.0
PowerToy module for which you are reporting the bug (if applicable): FancyZones
```

# Steps to reproduce

Have the "Move newly created windows to their last known zone" setting enabled. Recieve a native Windows notification.

# Expected behavior

Notifications should be excluded from auto-snapping, and appear in the bottom-right corner. Not sure if it is possible to exclude them via the exclusions list. I wouldn't know what name to enter.

# Actual behavior

Notifications get snapped to a zone and make that whole area of the screen unclickable until they are dismissed.

The Resize pictures option would fit better if it appeared along with the Rotate right/Rotate left options which are other "Quick image editing" options available in Windows.

It currently appears in the middle of many random options which are unrelated to image editing.
![resizeMenuOld](https://user-images.githubusercontent.com/32061677/72639163-da709b80-3919-11ea-8fc7-5bebf326c966.png)

The drag-drop handler on the other hand appears at the top, whereas the **Copy here** option should ideally remain as the first option as that would be what is generally used when dragging and dropping.
![image](https://user-images.githubusercontent.com/32061677/72641140-4523d600-391e-11ea-9ac8-27b345fc0967.png)


This issue is to track moving the position for both the MSI installer and the MSIX installer.
<!-- Enter a brief description/summary of your PR here. What does it fix/what does it change/how was it tested (even manually, if necessary)? -->
## Summary of the Pull Request
Adding PowerLauncher spec and images under doc/specs/images/PowerLauncher/.

<!-- Other than the issue solved, is this relevant to any other issues/existing PRs? --> 
## References
N/A

<!-- Please review the items on the PR checklist before submitting-->
## PR Checklist
* [] Applies to #xxx
* [] CLA signed. If not, go over [here](https://cla.opensource.microsoft.com/microsoft/PowerToys) and sign the CLA
* [] Tests added/passed
* [] Requires documentation to be updated
* [] I've discussed this with core contributors already. If not checked, I'm ready to accept this work might be rejected in favor of a different grand plan. Issue number where discussion took place: #xxx

<!-- Provide a more detailed description of the PR, other things fixed or any additional comments/features here -->
## Detailed Description of the Pull Request / Additional comments
N/A

<!-- Describe how you validated the behavior. Add automated tests wherever possible, but list manual validation steps taken as well -->
## Validation Steps Performed
N/A