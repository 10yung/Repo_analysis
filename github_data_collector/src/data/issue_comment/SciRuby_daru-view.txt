If I understand correctly, a cell in a Jupyter notebook can only render one output. In case of Daru this can be done by calling `my_graph.show_in_iruby`. In order to render multiple (n) plots in a single output, there's `Daru::View::PlotList` which constructs a table with n columns and a single row. If the individual plots are too big, this table would overflow and the user needs to scroll sideways (see attached screenshot).

Is there a better way to display multiple plots, especially without horizontal scrolling?
If not (and you are interested) I'd also take look into that, not sure if it suffices to give a `num_cols` parameter for the construction of the table to limit the number of columns, or wrap the individual plots inside a flexbox container.

![Screenshot 2019-11-11 at 09 57 02](https://user-images.githubusercontent.com/118812/68574251-c0be5e00-0469-11ea-95eb-246861cd7500.png)

The link in the description of this project (see screenshot below) does not work (404).
If I understand the discussion in #135 correctly, the link should point to http://sciruby.com/daru-view/


![Screenshot 2019-11-08 at 15 37 02](https://user-images.githubusercontent.com/118812/68484657-fc74e000-023d-11ea-82a2-bccaf746d4d7.png)

Github Actions beta version can be used in SciRuby repos. Anyone feel free to play and setup it for this repo. 


Refer : https://github.com/SciRuby/daru-view/pull/147#discussion_r259702090

Need to improve test converage for datatables adapter.
[6th cell](https://github.com/SciRuby/daru-view/blob/master/spec/dummy_iruby/Highcharts%20-%20line%20graphs2.ipynb) throws error, this issue is opened so that it remains into consideration.
Hi.

I use `Daru::View::Plot` almost everyday.
It is troublesome to write `show_in_iruby` method every time I plot. I am lazy.

I write a simple ad hoc monkey patch below so that I do not need to write anything.

```ruby
module Daru::View
  class Plot
      def to_iruby
          representation = show_in_iruby
          [representation.options[:mime], representation.object]
      end
  end

  class PlotList
    def to_iruby
          representation = show_in_iruby
          [representation.options[:mime], representation.object]
    end
  end
end
```

How about implementing the `to_iruby` method?
There may be some reasons for not being implemented. But I think it is useful.


![image](https://user-images.githubusercontent.com/5798442/52642618-b55ff580-2f1e-11e9-93f2-593ff5a0e35c.png)
This is not a problem. Information for people using Googlecolab.

### How to use IRuby on Google Colab.
https://dev.to/kojix2/ruby-kernel-in-google-colaboratory-32ni

### If `Daru::View.plotting_library` and `Daru::View::Plot` are in the same cell, it works well.  

![image](https://user-images.githubusercontent.com/5798442/52529753-00211800-2d3b-11e9-8782-d2f77da1dc91.png)

### But when `Daru::View.plotting_library` and `Daru::View::Plot` are in the different cells, it does not show anything. 

![image](https://user-images.githubusercontent.com/5798442/52529793-ecc27c80-2d3b-11e9-9266-c3a00ecef39b.png)
Hello!

Hello. 
Thank you for developing a powerful gem.

But, Is daru / view compatible with Jupyter Lab?
https://jupyterlab.readthedocs.io/en/stable/

I got errors when I tried to use daru/view with Jupyter Lab. 
But Jupyter Notebook works well.
So I can use daru-view now. 

![image](https://user-images.githubusercontent.com/5798442/51744699-f9ac6280-20e3-11e9-8462-8f3a959686b5.png)
![image](https://user-images.githubusercontent.com/5798442/51744713-029d3400-20e4-11e9-9c5e-e2e834f4ae72.png)

I'm thinking about copying the example notebooks to https://github.com/sciruby/sciruby-notebooks repository because it supports interaction with them via https://mybinder.org/. Is that a good idea?


last few lines of error : 
``` /bin/bash ../libtool  --tag=CC   --mode=compile gcc -DHAVE_CONFIG_H -I. -I../include  -pedantic -Werror -Wall -D_GNU_SOURCE -DLINUX -D_REENTRANT -D_THREAD_SAFE  -g -I/usr/local/lib/ruby/gems/2.5.0/gems/rbczmq-1.7.9/ext/rbczmq/dst/include -g -fPIC -MT zdir.lo -MD -MP -MF .deps/zdir.Tpo -c -o zdir.lo zdir.c
libtool: compile:  gcc -DHAVE_CONFIG_H -I. -I../include -pedantic -Werror -Wall -D_GNU_SOURCE -DLINUX -D_REENTRANT -D_THREAD_SAFE -g -I/usr/local/lib/ruby/gems/2.5.0/gems/rbczmq-1.7.9/ext/rbczmq/dst/include -g -fPIC -MT zdir.lo -MD -MP -MF .deps/zdir.Tpo -c zdir.c -o zdir.o
zdir.c: In function ‘zdir_new’:
zdir.c:156:9: error: ‘readdir_r’ is deprecated [-Werror=deprecated-declarations]
         int rc = readdir_r (handle, entry, &result);
         ^~~
In file included from ../include/czmq_prelude.h:257:0,
                 from ../include/czmq.h:31,
                 from zdir.c:35:
/usr/include/dirent.h:183:12: note: declared here
 extern int readdir_r (DIR *__restrict __dirp,
            ^~~~~~~~~
zdir.c:159:13: error: ‘readdir_r’ is deprecated [-Werror=deprecated-declarations]
             rc = readdir_r (handle, entry, &result);
             ^~
In file included from ../include/czmq_prelude.h:257:0,
                 from ../include/czmq.h:31,
                 from zdir.c:35:
/usr/include/dirent.h:183:12: note: declared here
 extern int readdir_r (DIR *__restrict __dirp,
            ^~~~~~~~~
cc1: all warnings being treated as errors
Makefile:774: recipe for target 'zdir.lo' failed
make[2]: *** [zdir.lo] Error 1
make[2]: Leaving directory '/usr/local/lib/ruby/gems/2.5.0/gems/rbczmq-1.7.9/ext/czmq/src'
Makefile:586: recipe for target 'all' failed
make[1]: *** [all] Error 2
make[1]: Leaving directory '/usr/local/lib/ruby/gems/2.5.0/gems/rbczmq-1.7.9/ext/czmq/src'
Makefile:414: recipe for target 'all-recursive' failed
make: *** [all-recursive] Error 1
CZMQ compile error!
*** extconf.rb failed ***
Could not create Makefile due to some reason, probably lack of necessary
libraries and/or headers.  Check the mkmf.log file for more details.  You may
need configuration options.

Provided configuration options:
	--with-opt-dir
	--without-opt-dir
	--with-opt-include
	--without-opt-include=${opt-dir}/include
	--with-opt-lib
	--without-opt-lib=${opt-dir}/lib
	--with-make-prog
	--without-make-prog
	--srcdir=.
	--curdir
	--ruby=/usr/local/bin/$(RUBY_BASE_NAME)
	--with-system-libs
	--without-system-libs
	--with-system-libs
	--without-system-libs

extconf failed, exit code 1

Gem files will remain installed in /usr/local/lib/ruby/gems/2.5.0/gems/rbczmq-1.7.9 for inspection.
Results logged to /usr/local/lib/ruby/gems/2.5.0/extensions/x86_64-linux/2.5.0-static/rbczmq-1.7.9/gem_make.out
```