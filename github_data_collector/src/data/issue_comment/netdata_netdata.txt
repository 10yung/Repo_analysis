Instead of running `shellcheck` against the entire codebase; let's just run `shellcheck` against changed shell scripts in PR(s). This way we can incrementally improve the quality of our shell scripts and catch problems early on like in #7770 and #7787 

Supersedes #7789 
##### Question summary
I operate several CloudLinux CentOS servers. The problem that I have is that my accounts often hit their memory limits, although there’s really no true threat to the server memory. Almost hundreds of times a day, I receive notices from netdata, warning about memory limits. I was unable to find any other questions from folks having the same type of issue. 

The question I have is if there are any simple methods to disable those memory email warnings, for only those within cageFS system. I’d hate to miss an actual email for a server memory issue. 

The only solution I can think of for now is to disable warning emails.  

##### OS / Environment
CloudLinux CentOS
 
##### Component Name
mem_usage

##### Expected results
Warnings at the server level, not account level
<!---
When asking a new question please:
- Verify first that your question wasn't asked before on GitHub. 
  HINT: Use label "question" when searching for such issues.
- Briefly explain what is the problem you are having
- Try to provide as much information about your environment (OS distribution,
  running in container, etc.) as possible to allow us reproduce this bug faster.
- Write which component is affected. We group our components the same way our
  code is structured so basically:
    component name = dir in top level directory of repository
- Provide a clear and concise description of what you expected to happen.
-->
Hi 
How to change badge font color?
##### Question summary

##### OS / Environment

##### Component Name

##### Expected results

<!--
Describe the change in summary section, including rationale and degin decisions.
Include "Fixes #nnn" if you are fixing an existing issue.

In "Component Name" section write which component is changed in this PR. This
will help us review your PR quicker.

If you have more information you want to add, write them in "Additional
Information" section. This is usually used to help others understand your
motivation behind this change. A step-by-step reproduction of the problem is
helpful if there is no related issue.
-->

##### Summary
I am proposing two changes to systemd.service (netdata.service.in) file
1. Instead of using ExecStartPre lines to create directories, let systemd do it. (There is no need of ExecStartPre lines and forking of 4 additional processes unnecessarily)
2. Instead of setting global options via command line in ExecStart (via -W), specify them in netdata.conf. This gives much more flexibility to administrator. That way  they can set them more easily and at single place. (instead of putting some options in service file and some in netdata.conf)

##### Component Name
systemd

##### Additional Information
Please read summary above and individual commit description.

Installer for FreeBSD 12-RELEASE does not install the updater tool. There seems to be a problematic invocation of sed.

`uname -a`:

```sh
FreeBSD dell-poweredge-2950.sanyalnet.lan 12.0-RELEASE-p10 FreeBSD 12.0-RELEASE-p10 GENERIC  amd64
```

`./netdata-installer.sh --install /opt`:

```sh
...
...
--- Installing (but not enabling) the netdata updater tool --- 
sed: -I or -i may not be used with stdin
 FAILED  Cannot install netdata updater tool. 

 --- Check if we must enable/disable the netdata updater tool --- 
You chose *NOT* to enable auto-update, removing any links to the updater from cron (it may have happened if you are reinstalling)
...
...
```

Otherwise all good.

Environment:
GCP instance with Ubuntu 18.04

Ran the below command to install Netdata:
`bash <(curl -Ss https://my-netdata.io/kickstart.sh)`

It seemed to install successfully, however, when I try to remotely access it on another machine using the below URL:
`http://<public ip of the machine running netdata>:19999/`

It shows below error:

`The site can't be reached.
ERR_CONNECTION_TIMED_OUT`

I checked firewall and it is disabled:
`$ sudo ufw status`
`Status: inactive`

I also added the below statement in both `[web]` and `[global]` sections in `/etc/netdata/netdata.conf` followed by service restart:
`bind to = 0.0.0.0`
`sudo systemctl restart netdata`

What do I need to change in order to access the Netdata web interface remotely?
I was unable to find this in the documentation, after several lookthroughs of it.

##### Feature idea summary
A 'custom dashboard' html file should have the ability to refresh charts with the same options as the default chart file.  In our case, similar to the settings' entries "refresh charts=always" and "refresh policy=sequential."  This is required in order to create a single-pane URL that can live alongside other monitoring tools (web, java etc) that are next to the netdata's base screens.

##### Expected behavior
A custom chart/dash URL should have the same update ability as a default dashboard when no longer in focus.  Perhaps by an argument in the <script /> clause.
##### Summary
#7584 broke unit tests for the exporting engine. We should wrap `uv_thread_set_name_np` to make the tests work again. 

##### Component Name
exporting engine
##### Feature idea summary
Placeholder: @thiagoftsm please fill out as discussed.

##### Expected behavior
Deployment of new library via the netdata installer.

<!--
Describe the change in summary section, including rationale and degin decisions.
Include "Fixes #nnn" if you are fixing an existing issue.

In "Component Name" section write which component is changed in this PR. This
will help us review your PR quicker.

If you have more information you want to add, write them in "Additional
Information" section. This is usually used to help others understand your
motivation behind this change. A step-by-step reproduction of the problem is
helpful if there is no related issue.
-->

##### Summary
Fixes #7268 
Fixes #7468 
##### Component Name
database/engine
##### Additional Information
Introduce dirty page pressure handling in the dbengine page cache that invalidates pages when the disk cannot keep up with the flushing speed. Make sure progress is made by managing real threads instead of relying on libuv workers since the workers will be exhausted by internal I/O queuing.