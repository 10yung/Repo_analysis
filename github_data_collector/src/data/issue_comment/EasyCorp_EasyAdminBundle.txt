**Describe the bug**
On Windows, if there is a trailing `/` in the config input, an additional `\\` gets appended to the `upload_dir` path before being used elsewhere.

**To Reproduce**
Use a trailing `/` in the `upload_dir` config on Windows (or any OS where the directory separator doesn't match, I guess).

**Workaround**
Just don't use a trailing slash. The config input normalizer will append one for you.

**(OPTIONAL) Additional context**
Both `\\` and `/` are valid directory separators in Windows (and can even both be used in a single path, common on generated paths from portable software), and to enable config to be portable to the production box that runs Linux I use `/` for my config. However, the `DIRECTORY_SEPARATOR` value contains the default Windows value, which obviously does not match when the check for a trailing slash is made.

Probably the easiest fix would be to normalize `/`es in the input to `DIRECTORY_SEPARATOR` before performing the checks in FileUploadType.php:154. This would account for any case where it doesn't match what the user has in their config.

Might also take the opportunity to fix the hardcoded `'/'` to be a `DIRECTORY_SEPARATOR` on line 159 as well for the oddball system that doesn't accept either for some reason (I'm sure there are some out there).
I upgraded to Symfony 5.0.3 and EasyAdmin 2.3

When I boot the application I directly hit the following error:

```
PHP Fatal error:  Class 'Symfony\Bundle\FrameworkBundle\Controller\Controller' not found in /data/pim/development/current/vendor/easycorp/easyadmin-bundle/src/Controller/AdminController.php on line 14
```

Which is correct, since the Controller class was renamed to AbstractController in Symfony 5.
I don't know why Symfony is raising that error since I am not referencing AdminController anywhere, only the new EasyAdminController. It seems like the cache warmup of Symfony is running some post-scripts which will result in the deprecated AdminController class being loaded.

Did anyone else run into that issue and know how to solve it? Currently I see no other option than fork EasyAdmin and remove the deprecated AdminController class.
**Describe the bug**
Using a custom (bootstrap based) template for an inline form, it does not fit into it's parent
```
{% extends '@EasyAdmin/default/layout.html.twig' %}

{% block main %}
    {{ form_start(form) }}
        {% for field in form %}
            <div class="form-group row">
                {{ form_label(field, null, {'label_attr': {'class': 'col-md-2 col-form-label'}}) }}
                <div class="col-md-9">
                    {{ form_widget(field, {'attr': {'class': 'form-control'}}) }}
                </div>
            </div>
        {% endfor %}
    {{ form_end(form) }}
{% endblock %}
```

col-2 and col-9 fit's, col-2 and col-10 won't fit
Bug found using php:7.4-fpm container with Opcache, symfony 5 and latest easyadmin. It's default installation of symfony/website-skeleton with one simple entity. Database - mysql 8.

After multiple refreshes php crashes with following errors:
`recv() failed (104: Connection reset by peer) while reading response header from upstream`
`[pool www] child 11 exited on signal 11 (sigsegv)`

There is no errors:
without opcache enabled
with default symfony CRUD for same entity (bin/console make:crud)
with same project build on top of php:7.3-fpm
in dev mode

Opcache config:
```
[opcache]
opcache.memory_consumption = 256
opcache.validate_timestamps=0
opcache.max_accelerated_files=20000
opcache.interned_strings_buffer=16
```

Php Dockerfile:

```
FROM php:7.4-fpm

# Install dependencies
RUN apt-get update && apt-get install --no-install-recommends -y \
    libfreetype6-dev \
    libjpeg62-turbo-dev \
    libpng-dev \
    libicu-dev \
    libzip-dev \
    git \
    unzip \
     && docker-php-ext-configure gd --with-freetype --with-jpeg \
     && docker-php-ext-configure opcache --enable-opcache \
     && docker-php-ext-install opcache \
     && docker-php-ext-configure intl \
        && docker-php-ext-install -j$(nproc) gd intl pdo_mysql exif zip \
    # Cleanup
    && apt-get clean && rm -rf /var/lib/apt/lists/*

# Install composer
RUN curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer

# Set container working dir
WORKDIR /var/www/app
```

It looks like something wrong with opcache and easyadmin code in prod environment with php 7.4. 

I'll understand if you'll close it as this kind of things is very hard to debug, but please keep it in mind.
 If I override templates by adding configuration, I don't understand why the whole routes execution time increase. 

Nothing special in my twig file
```
{% extends 'base.html.twig' %}
{% block content_title %}a{% endblock %}
{% block main %}b{% endblock %}
{% block content_footer %}c{% endblock %}
```

Have a look : 

with
```
easy_admin:
  entities:
    Customer:
      class: App\Entity\Customer
      templates:
        show: 'show/Customer.html.twig'
```
![image](https://user-images.githubusercontent.com/6322328/72156010-d5699480-33cd-11ea-855d-ea22a7ce6d1c.png)

without  :
```
easy_admin:
  entities:
    Customer:
      class: App\Entity\Customer
```
![image](https://user-images.githubusercontent.com/6322328/72155961-c08d0100-33cd-11ea-9fb5-967d442db0fe.png)

![image](https://user-images.githubusercontent.com/6322328/72156198-60e32580-33ce-11ea-8663-f0fc4dff6096.png)


Here is my configuration : Symfony5.0.2 php741. 

I try in production mode. Every thing is ok when cache is enabled. 





**Describe the bug**
when using the option to change the default public directory to another folder (see https://symfony.com/doc/current/configuration/override_dir_structure.html#override-the-public-directory) the filename stored in db contains the complete path to the file on the filesystem not only the relative part

the property is configured like:
```
          - property: image
            type: 'file_upload'
            type_options: {
              upload_dir: 'html/uploads/',
              download_path: 'uploads/',
              upload_filename: '[timestamp].[extension]'
            }
```

and in composer.json i have:
```
  "extra": {
    "symfony": {
      "allow-contrib": false,
      "require": "4.4.2"
    },
    "public-dir": "html"
  },
```

now in the database column something like '/home/user/dev/project/html/uploads/file.jpg' is stored, but there should be nothing about the root

**To Reproduce**
1. configure an alternative public directory
2. upload a file which is not accessible


**Description**
When attempting to save an edit, a `Doctrine\DBAL\Exception\UniqueConstraintViolationException` can be thrown.


**To Reproduce**

| Software                  | Version         |
|---------------------------|-----------------|
| php                       | 7.4.1           |
| MariaDB                   | 10.1.37-MariaDB |
| doctrine/dbal             | 2.10            |
| easycorp/easyadmin-bundle | 2.3.4           |
| symfony                   | 5.0.2           |

_A simple entity_
```
    /**
     * @ORM\Column(type="string", length=30, unique=true)
     */
    private $name;
```

_A single-field form_
```
      form:
        fields:
          - 'name'
```

Begin with 2 records, then attempt to edit one of the `name`s to match the other.  This will throw:
```
An exception occurred while executing 'UPDATE demo SET name = ? WHERE id = ?' with params ["i exist", 2]:

SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry 'i exist' for key 'UNIQ_57698A6A5E237E06'
```

I was able to do a test catch in
`vendor/easycorp/easyadmin-bundle/src/Controller/AdminControllerTrait.php`
```
    protected function updateEntity($entity)
    {
        try {
            $this->em->persist($entity);
            $this->em->flush();
        } catch (UniqueConstraintViolationException $e) {
            throw new EntityUniqueConstraintException(['entity_name' => $this->entity['name'], 'message' => $e->getMessage()]);
        }
    }
```
...But I think `UniqueConstraintViolationException` should trigger redirect back to the referrer with a flash message.

**Describe the bug**
I have 3 entities. Inside first entity there is OneToMany relation to second entity, while second entity has OneToMany relation to third entity. To add this form inside easy bundle, I used 
```
form:
          fields:
            - { property: 'sections', label: 'Add things bellow', type: 'collection', type_options: {entry_type: 'App\Form\EntityNameType', by_reference: false} }
```
This works fine, but I am getting `<legend>` inside html for the third entity with 0, 1, 2, 3 for each thing I want to add. Both second and third entity are ArrayCollection by the way.

Is this the right way to do it? If it is, how to remove <legend>? I tried to add empty label, but that didn't do anything

I am using easy bundle 2

**Packages version:**
```
friendsofsymfony/user-bundle         v2.1.2
symfony/symfony                      v4.4.1
easycorp/easyadmin-bundle            v2.3.4
```
The problem is that I loose the session on every request only in dev environment.
This mean that I've to login on every click to see the administration.
I've already checked that the `session.save_path` it's writeable and in fact the session file is written.
The strange things it's that the session cookie isn't (only in dev)! This is the only difference that I've found.
Maybe someone can help me...


After submitting a form with optional field of date/datetime and an invalid value in that field, the "Leave empty" checkbox gets checked and the field is hidden.
Steps to reproduce:
1. Create an entity with a nullable datetime field
2. Add it to easyadmin config
3. Go to "Add <entity>"
4. Uncheck the "Leave empty" checkbox and enter some incomplete date, e.g. only the year.
5. Submit the form
An error message is displayed but the date field is toggled off.

The variable "data" remains null because it can't get assigned an invalid datetime value, so an additional check of data validity fixes this.