**Describe the bug**

This is related to https://github.com/reactiveui/ReactiveUI/issues/2286 and https://github.com/reactiveui/ReactiveUI/pull/2315, with some more test cases

**Steps To Reproduce**

Sample: [Test.zip](https://github.com/reactiveui/ReactiveUI/files/4077642/Test.zip)

The sample is based on the one provided by https://github.com/reactiveui/ReactiveUI/issues/2286

There are three cases (all can be found inside `ItemViewModel`):
1. `NavigateBack` inside `Subscribe`
    ```cs
    var completedInternally = Observable.Amb(
        Confirm.Select(_ => _),
        Cancel.Select(_ => _),
        Delete.Select(_ => _));

    completedInternally.Subscribe(_ =>
    {
        if (HostScreen.Router.NavigationStack.LastOrDefault() == this)
        {
            HostScreen.Router.NavigateBack.Execute().Subscribe(); 
            if (NextViewModel != null)
                HostScreen.Router.Navigate.Execute(NextViewModel).Subscribe();
        }
    });
    ```
1. `NavigateBack` inside `SelectMany`
    ```cs
    var completedInternally = Observable.Amb(
            Confirm.Select(_ => _),
            Cancel.Select(_ => _),
            Delete.Select(_ => _))
        .Where(_ => HostScreen.Router.NavigationStack.LastOrDefault() == this)
        .SelectMany(_ => HostScreen.Router.NavigateBack.Execute());
    completedInternally.Subscribe(_ =>
    {
        if (NextViewModel != null)
            HostScreen.Router.Navigate.Execute(NextViewModel).Subscribe();
    });
    ```
1. `NavigateBack` inside `Do`
    ```cs
    var completedInternally = Observable.Amb(
            Confirm.Select(_ => _),
            Cancel.Select(_ => _),
            Delete.Select(_ => _))
        .Where(_ => HostScreen.Router.NavigationStack.LastOrDefault() == this)
        .Do(_ => HostScreen.Router.NavigateBack.Execute().Subscribe());
    completedInternally.Subscribe(_ =>
    {
        if (NextViewModel != null)
            HostScreen.Router.Navigate.Execute(NextViewModel).Subscribe();
    });
    ```

| Case | RxUI 11.1.11 | RxUI 11.1.6 |
| ---- | ------------ | ----------- |
| 1    | ✔            | ❌           |
| 2    | ❌            | ❌           |
| 3    | ✔            | ❌           |


**Expected behavior**
<!-- A clear and concise description of what you expected to happen. -->
It should return to the Main Page when Save is tapped on the Production page.


**Environment**
<!-- Please complete the following information. -->
- OS:      Android 7-API 24, physical device
- Version   11.1.11 and 11.1.6
- Device:   Samsung S6

**Additional context**
<!-- Add any other context about the problem here. -->

_I'm quite new to ReactiveUI (using this for my uni's final year project), so it might the case that I am using it all wrong._

Thanks!
<!--
Please note although we can't commit to any timeline, priority will be given to those who are [Contributors](https://github.com/reactiveui/ReactiveUI#contribute ) to the project.

If this is a question please ask on [StackOverflow](https://stackoverflow.com/questions/tagged/reactiveui).
-->

**Describe the bug**
<!-- A clear and concise description of what the bug is. -->

Related To: #2299 
Possibly Related: #2169 

**Steps To Reproduce**
`RefreshCommand = ReactiveCommand.CreateFromTask(async _ => await RefreshItemsAsync(), outputScheduler: RxApp.MainThreadScheduler);`
```
<RefreshView IsRefreshing="{Binding IsRefreshing, Mode=OneWay}"
                     Command="{Binding RefreshCommand}">
        <ScrollView>
               ...
        </ScrollView>
</RefreshView>
```

**Expected behavior**
<!-- A clear and concise description of what you expected to happen. -->

That I can bind a `ReactiveCommand` to a Xamarin.Forms Visual Element.  Either in the XAML or in Code.

**Screenshots**
<!-- If applicable, add screenshots to help explain your problem. -->



**Environment**
<!-- Please complete the following information. -->

- OS: iOS 13.3
- Version ReactiveUI 11.1.1
- Device: iOS Simulator and iPad 10,5"

**Additional context**
<!-- Add any other context about the problem here. -->

It seems there is an issue either with Binding the `ReactiveCommand` or the thread execution of the `ReactiveCommand`.

Works:
```
RefreshView
                .Events()
                .Refreshing
                .InvokeCommand(this, x => x.ViewModel.RefreshCommand);
```

Doesn't Work:
```
this.BindCommand(ViewModel, x => x.RefreshCommand, x => x.RefreshView.IsRefreshing);
```
Bumps [Nerdbank.GitVersioning](https://github.com/AArnott/Nerdbank.GitVersioning) from 3.0.26 to 3.0.50.
<details>
<summary>Commits</summary>
<ul>
<li>See full diff in <a href="https://github.com/AArnott/Nerdbank.GitVersioning/commits">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=Nerdbank.GitVersioning&package-manager=nuget&previous-version=3.0.26&new-version=3.0.50)](https://dependabot.com/compatibility-score.html?dependency-name=Nerdbank.GitVersioning&package-manager=nuget&previous-version=3.0.26&new-version=3.0.50)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
**Description**
Adding the ReactiveUI.Events Nuget package 11.1.n to a newly created empty UWP app in Visual Studio using the base no frills template will cause the release build to fail if `Compile with .NET Native tool chain` compiler option is set to true.

This option must be set to true in order to be able to submit a UWP to the store.


**Steps To Reproduce**

> Screen shots for each step included below

1. Open Visual Studio 2019 and select to create a Universal Windows Blank App
2. Select target version of 18362 and min ver of 17134
3. open project properties and set the build to Release | x64 and make sure the `Compile with .NET Native tool chain` option is selected true _(this is the default)_
4. Run app to confirm hello world works
5. open Nuget for solution and add ReactiveUI.Events package 11.1.6 _(error will also happen with 11.1.1 package)_
6. add ReactiveUI base package 11.1.6
7. Try to run / compile the application now, it will fail with SDK `...nutc_driver.exe returned with exit code 1`
8. Remove the ReactiveUI.Events nuget package from the application, leaving in the ReactiveUI base package
9. Application compiles and runs.

**Expected behavior**
The project should build and run with just a reference to the nuget package with the Compile with .NET Native tool chain compiler option set to on.


**Screenshots**
1. 
![image](https://user-images.githubusercontent.com/11168104/72459815-9e163180-3799-11ea-8b3f-0726687c279e.png)
2. 
![image](https://user-images.githubusercontent.com/11168104/72459904-ca31b280-3799-11ea-86db-32a6bbe47ab8.png)
3.
![image](https://user-images.githubusercontent.com/11168104/72460113-30b6d080-379a-11ea-9ee1-667a3e7117e5.png)
4.
![image](https://user-images.githubusercontent.com/11168104/72460145-43310a00-379a-11ea-8434-883fe3a0f644.png)
5.
![image](https://user-images.githubusercontent.com/11168104/72460313-9014e080-379a-11ea-916a-4a15233e08b8.png)
6.
![image](https://user-images.githubusercontent.com/11168104/72460379-acb11880-379a-11ea-9326-b1be3b84bb65.png)
7.
![image](https://user-images.githubusercontent.com/11168104/72460514-f699fe80-379a-11ea-8c1b-8bb65bfaeec7.png)
8.
![image](https://user-images.githubusercontent.com/11168104/72460596-19c4ae00-379b-11ea-9d42-62b43e015e90.png)
9.
![image](https://user-images.githubusercontent.com/11168104/72460630-2812ca00-379b-11ea-8034-c797e661a81c.png)




**Environment**
![image](https://user-images.githubusercontent.com/11168104/72460819-8dff5180-379b-11ea-998b-849e57d52261.png)

-OS Name	Microsoft Windows 10 Pro
-Version	10.0.18363 Build 18363
-Other OS Description 	Not Available
-OS Manufacturer	Microsoft Corporation
-System Name	XSGEEKBOOK
-System Manufacturer	Microsoft Corporation
-System Model	Surface Book 2
-System Type	x64-based PC
-System SKU	Surface_Book_1793
-Processor	Intel(R) Core(TM) i7-8650U CPU @ 1.90GHz, 2112 Mhz, 4 Core(s), 8 Logical Processor(s)
-BIOS Version/Date	Microsoft Corporation 389.2837.768, 8/21/2019
-SMBIOS Version	3.1
-Embedded Controller Version	255.255
-BIOS Mode	UEFI
-BaseBoard Manufacturer	Microsoft Corporation
-BaseBoard Product	Surface Book 2
-BaseBoard Version	Not Available
-Platform Role	Slate
-Secure Boot State	On
-PCR7 Configuration	Elevation Required to View
-Windows Directory	C:\WINDOWS
-System Directory	C:\WINDOWS\system32
-Boot Device	\Device\HarddiskVolume1
-Locale	United States
-Hardware Abstraction Layer	Version = "10.0.18362.387"
-User Name	XSGEEKBOOK\mh
-Time Zone	Eastern Standard Time
-Installed Physical Memory (RAM)	16.0 GB
-Total Physical Memory	15.9 GB
-Available Physical Memory	6.34 GB
-Total Virtual Memory	25.4 GB
-Available Virtual Memory	12.2 GB
-Page File Space	9.50 GB
-Page File	C:\pagefile.sys
-Kernel DMA Protection	Not Available
-Virtualization-based security	Running
-Virtualization-based security Required Security Properties	
-Virtualization-based security Available Security Properties	Base Virtualization Support, Secure Boot, DMA Protection, UEFI Code Readonly, SMM Security Mitigations 1.0, Mode Based Execution Control
-Virtualization-based security Services Configured	
-Virtualization-based security Services Running	
-Device Encryption Support	Elevation Required to View
-A hypervisor has been detected. Features required for Hyper-V will not be displayed.	

**Visual Studio Configuration**
Microsoft Visual Studio Professional 2019
Version 16.4.3
VisualStudio.16.Release/16.4.3+29709.97
Microsoft .NET Framework
Version 4.8.03752

Installed Version: Professional

Visual C++ 2019   00435-60000-00000-AA931
Microsoft Visual C++ 2019

.ignore   1.2.77
A language service that makes it painless to handle all types of .ignore files such as .gitignore, .tfignore, etc.

Add New File   3.5.138
The fastest and easiest way to add new files to any project - including files that start with a dot

ADL Tools Service Provider   1.0
This package contains services used by Data Lake tools

ASA Service Provider   1.0

ASP.NET and Web Tools 2019   16.4.457.38025
ASP.NET and Web Tools 2019

ASP.NET Web Frameworks and Tools 2012   16.4.457.38025
For additional information, visit https://www.asp.net/

ASP.NET Web Frameworks and Tools 2019   16.4.457.38025
For additional information, visit https://www.asp.net/

Azure App Service Tools v3.0.0   16.4.457.38025
Azure App Service Tools v3.0.0

Azure Data Lake Node   1.0
This package contains the Data Lake integration nodes for Server Explorer.

Azure Data Lake Tools for Visual Studio   2.4.5000.0
Microsoft Azure Data Lake Tools for Visual Studio

Azure Functions and Web Jobs Tools   16.4.457.38025
Azure Functions and Web Jobs Tools

Azure Stream Analytics Tools for Visual Studio   2.4.5000.0
Microsoft Azure Stream Analytics Tools for Visual Studio

C# Tools   3.4.1-beta4-19610-02+c4e5d138903b899477649a17f197abd2bcb22f9e
C# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.

Common Azure Tools   1.10
Provides common services for use by Azure Mobile Services and Microsoft Azure Tools.

Extensibility Message Bus   1.2.0 (d16-2@8b56e20)
Provides common messaging-based MEF services for loosely coupled Visual Studio extension components communication and integration.

Fabric.DiagnosticEvents   1.0
Fabric Diagnostic Events

Farticus   2.0.3
The original Visual Studio fart app

Git Tools 2019   3.1.1
This extension provides a git changes window, and menus to launch Git Bash, Git Extenstions and TortoiseGit.

GitHub.VisualStudio   2.10.8.8132
A Visual Studio Extension that brings the GitHub Flow into Visual Studio.

IncrediBuild Build Acceleration   1.5.0.10
IncrediBuild effectively reduces compilation and development times by up to 90%.

IntelliCode Extension   1.0
IntelliCode Visual Studio Extension Detailed Info

Material icons generator   1.8.60
This plugin help you to add material design icons to your Android, iOS or UWP project

Microsoft Azure HDInsight Azure Node   2.4.5000.0
HDInsight Node under Azure Node

Microsoft Azure Hive Query Language Service   2.4.5000.0
Language service for Hive query

Microsoft Azure Service Fabric Tools for Visual Studio   16.0
Microsoft Azure Service Fabric Tools for Visual Studio

Microsoft Azure Stream Analytics Language Service   2.4.5000.0
Language service for Azure Stream Analytics

Microsoft Azure Stream Analytics Node   1.0
Azure Stream Analytics Node under Azure Node

Microsoft Azure Tools   2.9
Microsoft Azure Tools for Microsoft Visual Studio 2019 - v2.9.21016.1

Microsoft Continuous Delivery Tools for Visual Studio   0.4
Simplifying the configuration of Azure DevOps pipelines from within the Visual Studio IDE.

Microsoft JVM Debugger   1.0
Provides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines

Microsoft Library Manager   2.0.87+gbb515bf382
Install client-side libraries easily to any web project

Microsoft MI-Based Debugger   1.0
Provides support for connecting Visual Studio to MI compatible debuggers

Microsoft Visual C++ Wizards   1.0
Microsoft Visual C++ Wizards

Microsoft Visual Studio Tools for Containers   1.1
Develop, run, validate your ASP.NET Core applications in the target environment. F5 your application directly into a container with debugging, or CTRL + F5 to edit & refresh your app without having to rebuild the container.

Microsoft Visual Studio VC Package   1.0
Microsoft Visual Studio VC Package

Mono Debugging for Visual Studio   16.5.24 (1fafd7e)
Support for debugging Mono processes with Visual Studio.

Multilingual App Toolkit   4.0
Multilingual App Toolkit helps you localize your Windows Store app by providing file management, pseudo and machine translation, translation editor, and build integration. http://aka.ms/matinstall

NuGet Package Manager   5.4.0
NuGet Package Manager in Visual Studio. For more information about NuGet, visit https://docs.nuget.org/

ProjectServicesPackage Extension   1.0
ProjectServicesPackage Visual Studio Extension Detailed Info

SendMeThatPackage Extension   1.0
SendMeThatPackage Visual Studio Extension Detailed Info

SQL Server Data Tools   16.0.61912.09160
Microsoft SQL Server Data Tools

StopOnFirstBuildError   1.0
StopOnFirstBuildError

Stops a solution build immediately after a project has failed to build.

http://tech.einaregilsson.com/2011/01/06/stop-build-on-first-error-in-visual-studio-2010/

StylerPackage Extension   1.0
StylerPackage Visual Stuido Extension Detailed Info

Surface Dial Tools for Visual Studio   0.8.68
Adds features to Visual Studio specific to the Surface Dial. You don't need a Surface Book or Surface Studio to take advantage of the Surface Dial.

Syntax Visualizer   1.0
An extension for visualizing Roslyn SyntaxTrees.

Test Adapter for Boost.Test   1.0
Enables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.

Test Adapter for Google Test   1.0
Enables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.

ToolWindowHostedEditor   1.0
Hosting json editor into a tool window

TypeScript Tools   16.0.11031.2001
TypeScript Tools for Microsoft Visual Studio

Visual Basic Tools   3.4.1-beta4-19610-02+c4e5d138903b899477649a17f197abd2bcb22f9e
Visual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.

Visual C++ for Cross Platform Mobile Development (Android)   16.0.29428.195
Visual C++ for Cross Platform Mobile Development (Android)

Visual C++ for Linux Development   1.0.9.29512
Visual C++ for Linux Development

Visual F# Tools 10.4 for F# 4.6   16.4.0-beta.19556.5+e7597deb7042710a7142bdccabd6f92b0840d354
Microsoft Visual F# Tools 10.4 for F# 4.6

Visual Studio Code Debug Adapter Host Package   1.0
Interop layer for hosting Visual Studio Code debug adapters in Visual Studio

Visual Studio Container Tools Extensions (Preview)   1.0
View, manage, and diagnose containers within Visual Studio.

Visual Studio Tools for CMake   1.0
Visual Studio Tools for CMake

Visual Studio Tools for CMake   1.0
Visual Studio Tools for CMake

Visual Studio Tools for Containers   1.0
Visual Studio Tools for Containers

Visual Studio Tools for Kubernetes   1.0
Visual Studio Tools for Kubernetes

VisualStudio.DeviceLog   1.0
Information about my package

VisualStudio.Mac   1.0
Mac Extension for Visual Studio

Windows Template Studio   3.5.19310.1
Windows Template Studio quickly builds a UWP app, using a wizard-based UI to turn your needs into a foundation of Windows 10 patterns and best practices.

Xamarin   16.4.000.308 (d16-4@4755fb3)
Visual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.

Xamarin Designer   16.4.0.475 (remotes/origin/d16-4@ac250f5aa)
Visual Studio extension to enable Xamarin Designer tools in Visual Studio.

Xamarin Templates   16.4.25 (579ee62)
Templates for building iOS, Android, and Windows apps with Xamarin and Xamarin.Forms.

Xamarin.Android SDK   10.1.3.7 (d16-4/d66aed0)
Xamarin.Android Reference Assemblies and MSBuild support.
    Mono: fd9f379
    Java.Interop: xamarin/java.interop/d16-4@c4e569f
    ProGuard: xamarin/proguard/master@905836d
    SQLite: xamarin/sqlite/3.28.0@46204c4
    Xamarin.Android Tools: xamarin/xamarin-android-tools/master@9f4ed4b


Xamarin.iOS and Xamarin.Mac SDK   13.10.0.17 (5f802ef)
Xamarin.iOS and Xamarin.Mac Reference Assemblies and MSBuild support.




**Describe the bug**
In ReactiveUI.Blazor, ReactiveComponentBase now throws errors on both server and client side.

This is new behaviour.  It didn't before.  You can bypass by implementing IViewFor in code-behind but the component itself ist kaput.



I'll investigate further and add details here as I find them.

<!--
Please note although we can't commit to any timeline, priority will be given to those who are [Contributors](https://github.com/reactiveui/ReactiveUI#contribute ) to the project.

If this is a question please ask on [StackOverflow](https://stackoverflow.com/questions/tagged/reactiveui).
-->

**Is your feature request related to a problem? Please describe.**
<!-- A clear and concise description of what the problem is. -->

This is a request for Xamarin.Forms Shell Support.

**Describe the solution you'd like**
<!-- A clear and concise description of what you want to happen. -->

ReactiveUI to support Xamarin.Forms Shell as opposed to the current `INavigation` interface.  This will introduce an entirely new paragadim into ReactiveUI for navigation and make the current `RoutingState` obsolete in Shell applications.  The new `Shell` navigation will be specific to the Xamarin.Forms platform.

**Describe alternatives you've considered**
<!-- A clear and concise description of any alternative solutions or features you've considered. -->

None.  There is a perfectly convenient routing system in Xamarin Forms that ReactiveUI supports.  But it doesn't support Shell.  Currently you have to choose between Xamarin.Forms Shell or ReactiveUI Routing.  The current ReactiveUI routing system will not support shell out of the box.

### NOTE
**There is currently some work the Xamarin.Forms team is doing to support MVVM with Shell.  Last I was told that work is being tracked here** https://github.com/xamarin/Xamarin.Forms/issues/5166

**Describe suggestions on how to achieve the feature**
<!-- A clear description to how to achieve the feature. -->

An abstraction over the Shell to make it less static and more in line with MVVM patterns.  Not sure the specifics of what this looks like.

**Additional context**
<!-- Add any other context or screenshots about the feature request here. -->

The Xamarin.Forms Shell approach is a Page => Page approach.  ReactiveUI has been actively trying to move to the ViewModel based navigation.  These two concepts are not congruent with each other, this doesn't mean they won't work together.  This simply means that we will have to work to address concerns in our approach to get the most value.
**Describe the solution you'd like**
I would like to be able to setup Interaction bindings in the same way that a standard binding or a command binding is setup. The new binding would be named `BindInteraction`. 

The setup would be very similar to a command binding and I would imagine it would look like the following.

```
this.BindInteraction(ViewModel, vm => vm.MyInteraction, input => /*Do Something*/);
```

Currently, the way to implement when an Interaction has changed and to get it setup feels a little clumsy when compared to the elegance of the existing bindings.


**Describe alternatives you've considered**
<!-- A clear and concise description of any alternative solutions or features you've considered. -->
Today, we created an extension method that is essentially a poor man's binding for interactions. This is largely due to the fact that some of the bits needed to create a custom binding, such as Reflection.Rewrite ([example](https://github.com/reactiveui/ReactiveUI/blob/3c185b10397fe2409db0ad146b5f05be832e230f/src/ReactiveUI/Bindings/Command/CommandBinderImplementation.cs#L64)) are not publicly available, which is totally fine.

We created an extension method like this:

```
public static IDisposable Bind<TInput, TOutput>(this IObservable<Interaction<TInput, TOutput>> interactionObservable, Func<InteractionContext<TInput, TOutput>, Task> handler)
{
    var interactionDisposable = new SerialDisposable();

    return
        interactionObservable
            .Where(x => x != null)
            .Do(x => interactionDisposable.Disposable = x.RegisterHandler(handler))
            .Finally(() => interactionDisposable?.Dispose())
            .Subscribe();
}

public static IDisposable Bind<TInput, TOutput, TDontCare>(this IObservable<Interaction<TInput, TOutput>> interactionObservable, Func<InteractionContext<TInput, TOutput>, IObservable<TDontCare>> handler)
{
    var interactionDisposable = new SerialDisposable();

    return
        interactionObservable
            .Where(x => x != null)
            .Do(x => interactionDisposable.Disposable = x.RegisterHandler(handler))
            .Finally(() => interactionDisposable?.Dispose())
            .Subscribe();
}
```

on the UI side of things, we then setup the binding like this:

```
this.WhenAnyValue(x => x.ViewModel.ConfirmDelete)
    .Bind(
        async input =>
        {
            var result = await this.DisplayAlert("Confirm Delete", "Are you sure you want to delete this task?", "Yes", "No");

            input.SetOutput(result);
        });
```

**Describe suggestions on how to achieve the feature**
<!-- A clear description to how to achieve the feature. -->
I think it really would just need to be implemented similar to a BindCommand. The examples above are really not as fault tolerant and expressive as a normal binding, but I feel as if that should be achievable.

<!--
Please note although we can't commit to any timeline, priority will be given to those who are [Contributors](https://github.com/reactiveui/ReactiveUI#contribute ) to the project.

If this is a question please ask on [StackOverflow](https://stackoverflow.com/questions/tagged/reactiveui).
-->

**Describe the bug**
<!-- A clear and concise description of what the bug is. -->

Recently CommandBindingTests in ReactiveUI.Tests.Winforms seem to fail randomly.  When all tests are executed it tests won't pass.  When the failing test is executed in isolation it passes.

**Steps To Reproduce**
<!--
Provide the steps to reproduce the behavior:
1. Build all Unit Tests in the ReactiveUI project
2. Observe that some of the CommandBindingTests fail
3. Run the failed test
4. Observe that it passed
-->

**Expected behavior**
<!-- A clear and concise description of what you expected to happen. -->

My expected behavior is that the CI server can execute these tests without issue.

**Screenshots**
<!-- If applicable, add screenshots to help explain your problem. -->



**Environment**
<!-- Please complete the following information. -->
Local Development Machine
**Additional context**
<!-- Add any other context about the problem here. -->

Bumps [PublicApiGenerator](https://github.com/PublicApiGenerator/PublicApiGenerator) from 9.3.0 to 10.0.1.
<details>
<summary>Release notes</summary>

*Sourced from [PublicApiGenerator's releases](https://github.com/PublicApiGenerator/PublicApiGenerator/releases).*

> ## 10.0.1
> Changes:
> 
> - Fix Output property even though indexer exists (PR)[#161](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/issues/161)
> 
> ## 10.0.0
> Changes:
> 
> - Remove support for .NET 4.0 [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/89)
> - Read-only structs support [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/84)
> - In-modifier support [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/85)
> - Unsafe modifier support [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/120)
> - Support for default keyword for non primitive structs [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/88)
> - Removing empty attribute parentheses and Attribute suffix if present [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/118
> - Fix order of static and readonly keywords [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/122)
> - Fix order of members within a type, by [@&#8203;adamralph](https://github.com/adamralph)  [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/138)
> - Volatile public field support [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/123)
> - Fix support for named indexers [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/136)
> - More advanced support for Property, event and method modifiers 
>  - Event modifiers [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/130)
>  - Property modifiers [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/155)
>  - Method modifiers [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/152)
> - C# 8 nullable reference type support, by [@&#8203;sungam3r](https://github.com/sungam3r) and [@&#8203;jnm2](https://github.com/jnm2) [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/115)
> - Embedded PDB in package and source for better source-stepping [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/131/)
> - Introduce `ApiGeneratorOptions` to configure the generator [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/129)
> - Extension methods as public API for the generator [PR](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/pull/134)
> 
> For more information see the [related milestone](https://github.com/PublicApiGenerator/PublicApiGenerator/milestone/17).
</details>
<details>
<summary>Commits</summary>

- [`539c99f`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/539c99fbf48f8a916b21759f2ff3c2ea81b06b2e) Merge pull request [#161](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/issues/161) from sungam3r/indexer-name-fix
- [`3935ed2`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/3935ed2477dd1e41e6c40e8feee7f9bd80914cfb) fix
- [`6bab05c`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/6bab05ce01615bc410d5c3218747e6f641bab66e) add tests to demonstrate problem
- [`a5877c3`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/a5877c3f36eb6101929c5f80a505e3c0d48ad7ff) Merge pull request [#160](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/issues/160) from PublicApiGenerator/fix-tool
- [`afe8481`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/afe8481ac31a0e8989fabbf6fca1525006bb63be) Update README.md
- [`9f385ef`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/9f385efb6540fd6f80daba31d12f4ae1e7bb7074) Fix tool and readme
- [`a2b5e9c`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/a2b5e9cc062e3c1ca2e6a0e5832696830c74ad55) Merge pull request [#158](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/issues/158) from PublicApiGenerator/method-param-matching
- [`02c13f7`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/02c13f7342bb70560671a2b53abf763489d15bbf) Fix parameter comparison
- [`d7d3581`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/d7d35813e83be2e5d997fc782a746937a80196a6) Reproduce base class having method with different arguments
- [`f0a64bd`](https://github.com/PublicApiGenerator/PublicApiGenerator/commit/f0a64bdbf7131ccc76d098ae63d78c6ba35b518e) Merge pull request [#157](https://github-redirect.dependabot.com/PublicApiGenerator/PublicApiGenerator/issues/157) from PublicApiGenerator/whitespace
- Additional commits viewable in [compare view](https://github.com/PublicApiGenerator/PublicApiGenerator/compare/9.3.0...10.0.1)
</details>
<br />

[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=PublicApiGenerator&package-manager=nuget&previous-version=9.3.0&new-version=10.0.1)](https://dependabot.com/compatibility-score.html?dependency-name=PublicApiGenerator&package-manager=nuget&previous-version=9.3.0&new-version=10.0.1)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
**Describe the bug**
When a view model is changed for a `ViewModelViewHost`, it creates the old view again and only after that creates a new view, which can cause brief flickering of views. This happens in a WPF app on .NET Core 3.0 (not sure about other frameworks). ReactiveUI version is 10.5.31.

**Steps To Reproduce**
I've created a simple [repo](https://github.com/TolikPylypchuk/BugReactiveUIViewModelViewHost) to reproduce the issue.

The view flickering is not actually visible there, but if you debug the app in Visual Studio, you'll see the log output. When switching the view from View1 to View2, the following log can be seen:


```
MainViewModel: Switching the view.
View1: Creating the view 1
View2: Creating the view 2
```

**Expected behavior**
The old view is not created again when switching to a new view.

**Environment**
- OS: Windows 10 Home 1909

**Additional context**

The source of error is probably [in the constructor](https://github.com/reactiveui/ReactiveUI/blob/master/src/ReactiveUI/Platforms/windows-common/ViewModelViewHost.cs#L109) of the `ViewModelViewHost` class:

```
var contractChanged = _updateViewModel.Select(_ => ViewContractObservable).Switch();
var viewModelChanged = _updateViewModel.Select(_ => ViewModel);

var vmAndContract = contractChanged.CombineLatest(viewModelChanged, (contract, vm) => new { ViewModel = vm, Contract = contract });

vmAndContract.Subscribe(x => ResolveViewForViewModel(x.ViewModel, x.Contract));
```

I've debugged this code, and `x => ResolveViewForViewModel(x.ViewModel, x.Contract)` is hit twice  when switching the view model - first time with the old view model (hence creating the old view) and the second time with the new view model. I think this is becuase when a view model is changed, the `contractChanged` is fired, and then the `viewModelChanged` is fired, which is why `vmAndContract` is fired twice.