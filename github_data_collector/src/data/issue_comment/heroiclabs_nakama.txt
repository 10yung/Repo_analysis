Add support for authenticating with the Nakama server by providing Facebook Instant Game signed player information.

Depends on https://github.com/heroiclabs/nakama-common/pull/1

https://developers.facebook.com/docs/games/instant-games/sdk/fbinstant6.3#signedplayerinfo
## Description
It would be useful to get a list of the keys in a collection of the DataStorage without getting the full content.

## Use case
I'm trying to write a news popup that lists news to players. But before opening the popup, I'd like to show the number of unread news to players in the news button without reading all the news and their content which is what happens if I call "ListUsersStorageObjectsAsync". Because most of the time, they won't open that popup.
One news item is a storage Object in the collection "inbox" (owned by the system user). So I'd like to get all keys in that collection to compare with the ones the player has already read.

Thanks

we have a lot of system owned records and in the console there's no way to see them all or filter them by collection name. It seems there's a max limit of how many records will display for a user, and no pagination controls to see additional records. Alternately or in addition, to be able to filter records per user by collection name would be handy.
## Description
As explained in https://forum.heroiclabs.com/t/handling-demote-for-the-receiving-user/383/2 we want to have a way from the client to easily demote user in a group. While current method to demote is available via removing from group and then re-added it, from the pov of the user being demoted will received two messages, kicked and then added, which will cause confusion to that user. It would be better to handle it if we have message code for Demotion and a way for a client to demote user

## Context
- [x] Unity

## Your Environment
- Nakama: 2.8.0

## Description
I believe these are 2 separate but related issues:
1. `Content-Type` in response is controlled by `Accept-Encoding` instead of `Accept` in request
2. Given request contains `Accept-Encoding: identity`, `Content-Type` in response is reported as `text/plain` despite Nakama actually sends json (both with `&unwrap=true` and without)

## Steps to Reproduce
- Create a lua module, which responds anything to incoming request
- Send GET request with headers [`Accept-Encoding: gzip, deflate` or `Accept-Encoding: identity`], `Accept: application/json`

## Expected Result
Server response has `Content-Type: application/json`

## Actual Result
Server response has `Content-Type: application/x-gzip` or `Content-Type: text/plain; charset=utf-8`

## Your Environment
- Nakama: 2.8.0
- Database: does not matter
- Environment name and version: does not matter
- Operating System and version: does not matter

It would be nice to be able to enter the matchmaking as more than 1 player looking a match

The use case is local couch multiplayer games, where you can have 2 friends at home and want to play with 2 more players from elsewhere.

Suggestion:
```json
{
   "query": "*",
   "presences": 2,
   "min_count": 3,
   "max_count": 4
}
```
Before you submit an issue we recommend you drop into the [Gitter community](https://gitter.im/heroiclabs/nakama) and ask any questions you have or mention any problems you've had getting started with the server.

Please provide as much information as you can with this issue report. If you believe it may be an issue with one of the client libraries please report it on their [own trackers](https://github.com/heroiclabs?utf8=%E2%9C%93&q=nakama%20AND%20sdk&type=&language=).

## Description
<!--- Example: Error thrown when Unity client fetches a user's friends. -->
Adding 0 points to an incremental leaderboard causes discrepancies in the record list

## Steps to Reproduce
<!---
Example:
1. Register a new user
2. Connect to server socket
3. Send message to fetch current user's friends
4. Errors reported to client and in server logs
-->

Rename the extension of the attached file to .go (it's a go module). Build an .so and start the server with it.
Using postman or any other tool for sending requests.
1) Auth
2) Send this request to this RPC
URL : `http://<url>/v2/rpc/lb_admin`
BODY: `"{ \"command\":\"ADD\",\"id\":\"<id>\", \"score\":0 }"`
3) Send this request to this RPC
URL : `http://<url>/v2/rpc/lb_admin`
BODY: `"{ \"command\":\"GET\",\"id\":\"<id>\" }"`

## Expected Result
<!--- Example: No error is thrown and results are returned by server. -->
There shouldn't be any discrepancies in the "me/owner" position and the real position on the leaderboard

## Actual Result
<!--- Example: Error is thrown with stacktrace in logs. -->
The response shows discrepancies between the "owner" position and its real position on the leaderboard

## Context
<!-- Which client did you use? -->
- [ ] Unity
- [ ] Unreal
- [ ] Other

## Your Environment
<!---
`nakama --version` will show the version of the server.
`cockroach version` will show the version of the Cockroach database server.
Use `nakama doctor` to collect diagnostics on the server and environment and submit it with your report if possible.
-->
- Nakama: 2.6.0
- Cockroach: 2.1.6
- Environment name and version:
- Operating System and version: OSX 10.14.2 Mojave
[go_module.txt](https://github.com/heroiclabs/nakama/files/3742802/go_module.txt)

## Description

From the `console/ui` directory, running `yarn run build` as instructed by README.me results in the following failure for me:

<pre>
yarn run v1.19.0
$ react-scripts build
Creating an optimized production build...
Browserslist: caniuse-lite is outdated. Please run next command `yarn upgrade caniuse-lite browserslist`

<--- Last few GCs --->

[5939:0x427ac20]   139338 ms: Scavenge 1219.5 (1288.0) -> 1207.1 (1288.0) MB, 41.8 / 0.0 ms  (average mu = 0.998, current mu = 0.998) allocation failure


<--- JS stacktrace --->

==== JS stack trace =========================================

    0: ExitFrame [pc: 0x136d539]
Security context: 0x1ef3a94c08a1 <JSObject>
    1: set [0x1ef3a94c64c1](this=0x1f53b1df97b1 <Map map = 0xc20c96c0ed1>,0x1b0436522991 <String[12]: 36068,220535>,2)
    2: recursiveTypeRelatedTo(aka recursiveTypeRelatedTo) [0x1221a080351] [<my path>/3rdparty/nakama/console/ui/node_modules/typescript/lib/typescript.js:~44114] [pc=0x22f5a964bdb8](this=0x1c2e39dc04a9 <undefined>,0x3881c96c8681 <TypeObject m...

FATAL ERROR: invalid table size Allocation failed - JavaScript heap out of memory
 1: 0x9d33e0 node::Abort() [<my path>/.nvm/versions/node/v12.11.1/bin/node]
 2: 0x9d4596 node::OnFatalError(char const*, char const*) [<my path>/.nvm/versions/node/v12.11.1/bin/node]
 3: 0xb32dbe v8::Utils::ReportOOMFailure(v8::internal::Isolate*, char const*, bool) [<my path>/.nvm/versions/node/v12.11.1/bin/node]
 4: 0xb33139 v8::internal::V8::FatalProcessOutOfMemory(v8::internal::Isolate*, char const*, bool) [<my path>/.nvm/versions/node/v12.11.1/bin/node]
 5: 0xcde455  [<my path>/.nvm/versions/node/v12.11.1/bin/node]
 6: 0xedbf15 v8::internal::OrderedHashTable<v8::internal::OrderedHashMap, 2>::Allocate(v8::internal::Isolate*, int, v8::internal::AllocationType) [<my path>/.nvm/versions/node/v12.11.1/bin/node]
 7: 0xedc055 v8::internal::OrderedHashTable<v8::internal::OrderedHashMap, 2>::Rehash(v8::internal::Isolate*, v8::internal::Handle<v8::internal::OrderedHashMap>, int) [<my path>/.nvm/versions/node/v12.11.1/bin/node]
 8: 0xedc69b v8::internal::OrderedHashTable<v8::internal::OrderedHashMap, 2>::EnsureGrowable(v8::internal::Isolate*, v8::internal::Handle<v8::internal::OrderedHashMap>) [<my path>/.nvm/versions/node/v12.11.1/bin/node]
 9: 0xfcede8 v8::internal::Runtime_MapGrow(int, unsigned long*, v8::internal::Isolate*) [<my path>/.nvm/versions/node/v12.11.1/bin/node]
10: 0x136d539  [<my path>/.nvm/versions/node/v12.11.1/bin/node]
Done in 145.07s.
</pre>


## Steps to Reproduce

1. Nearly fresh ubuntu server install
2. Running node version v12.11.1
3. No local code changes

## Expected Result

Admin console builds successfully.

## Actual Result

Error above is received.

## Context

Trying to build Nakama by hand as instructed in README.me


## Your Environment

> uname -a
`Linux osboxes 5.0.0-31-generic #33-Ubuntu SMP Mon Sep 30 18:51:59 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux`

> node --version
`v12.11.1`

> go version
`go version go1.13.1 linux/amd64`

According to the latest iOS update, making available the Apple Sign In authentication will be required when the application uses any other third party identification platform (ie Facebook).

https://developer.apple.com/sign-in-with-apple/get-started/

We will need an Identity Provider added for Apple Sign In added to Nakama to be in compliance.

Thank you.

Before you submit an issue we recommend you drop into the [Gitter community](https://gitter.im/heroiclabs/nakama) and ask any questions you have or mention any problems you've had getting started with the server.

Please provide as much information as you can with this issue report. If you believe it may be an issue with one of the client libraries please report it on their [own trackers](https://github.com/heroiclabs?utf8=%E2%9C%93&q=nakama%20AND%20sdk&type=&language=).

## Description
<!--- Example: Error thrown when Unity client fetches a user's friends. -->

## Steps to Reproduce
<!---
Example:
1. Register a new user
2. Connect to server socket
3. Send message to fetch current user's friends
4. Errors reported to client and in server logs
-->

## Expected Result
<!--- Example: No error is thrown and results are returned by server. -->

## Actual Result
<!--- Example: Error is thrown with stacktrace in logs. -->

## Context
<!-- Which client did you use? -->
- [ ] Unity
- [ ] Unreal
- [ ] Other

## Your Environment
<!---
`nakama --version` will show the version of the server.
`cockroach version` will show the version of the Cockroach database server.
Use `nakama doctor` to collect diagnostics on the server and environment and submit it with your report if possible.
-->
- Nakama: X.X.X
- Cockroach: X.X.X
- Environment name and version:
- Operating System and version:
