Getting vimdeck requires getting rmagick installed, and that's not straightforward in Arch.
You'll get the well-known found partial imagemagick installation error (MagicWand.h not found).

I finally found [this site](https://hackido.com/2019/04/16/2019-04-16-rmagick-arch-linux/), which provided me the workaround:
+ `export PKG_CONFIG_PATH=/usr/lib/imagemagick6/pkgconfig`
+ `gem install vimdeck`

Leaving this here in case you want to incorporate it in the README

 In hands on type of presentation i end running a lot of code, generally after showing a piece of code. 
Could we have a comment on top of these snippets which gives user to run the command in the comment. 
I would love to help here.
Hi, this slide

```
# XYZ

* foo
    * bar
    * baz
* oof
```

renders as:

```
           _  ___  _______
          | |/ \ \/ /__  /
          |   / \  /  / /
         /   |  / /  / /__
        /_/|_| /_/  /____/

        • foo
        • <!~bar
        • baz

        oof
        ~!>
```

Is this a known issue? As far as I know RedCarpet supports nested lists correctly, which is why I'm submitting the issue here.

``` bash
root@255c1d09cdc3:/slides# vimdeck SLIDES.md
[DEPRECATION] requiring "RMagick" is deprecated. Use "rmagick" instead
```

Would be nice not to see this anymore.  :)

Hi there,

this is amazing :grin: 

Is there any way to export this to PDF?

Cheers
Raphael :bow: 

I noticed that the syntax highlighting fails with very peculiar languages, that is languages that need to be at the start of the line. For example, I wanted to include a git commit file wrapped around the _```gitcommit_ and _```_ tags and because vimdeck indents the content of the slides, the syntax highlighting fails. I have no idea how to solve this though, sorry...

I have to issue a few more commands than are at the top of `script.vim` to remove things like `colorcolumn` and the status bar. I also need to issue `nonumber` twice (not sure why!).

Would you consider allowing an additional file to to included (passed via a command line arg) or if you think its generic enough we could add it to `script.vim` for everyone. I'm currently doing the below:

```
:bufdo :set nocursorline
:bufdo :set colorcolumn=
:bufdo :set nu!
:bufdo :set nu!
:set laststatus=0
:buffer 1
```

I think `colorcolumn` is an optional feature so it would need wrapping in an `exists(+colorcolumn)`.

Thoughts?
