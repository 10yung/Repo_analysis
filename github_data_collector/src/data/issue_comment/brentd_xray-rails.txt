Using a fresh checkout of master and with Ruby 2.7.0, the test suite fails to run with these errors:

```
Failure/Error: Dummy::Application.initialize!

Sprockets::Railtie::ManifestNeededError:
  Expected to find a manifest file in `app/assets/config/manifest.js`
  But did not, please create this file and use it to link any assets that need
  to be rendered by your app:

  Example:
    //= link_tree ../images
    //= link_directory ../javascripts .js
    //= link_directory ../stylesheets .css
  and restart your server
# ./spec/dummy/config/environment.rb:5:in `<top (required)>'
```

It seems that the test suite is incompatible with Sprockets 4.
Our Travis CI configuration only includes Ruby versions up to 2.4. Sprockets 4 requires Ruby 2.5+. Therefore we have no coverage of Sprockets 4, or for that matter any coverage for current versions of Ruby.
I'm trying to use xray in a dockerized project, but it doesn't works. 
Does anyone know how to make it work with Docker?
Resolves #100
I've used this gem before with success, but I just tried adding it to an app that happens to have a strict CSP and am running into this error:

```
Refused to load the script
'http://some.dev.hostname/assets/xray.self-130d130a29b059ab5e1f6b7ea349011b67ee8593ecb3e9222db86c7a5d55ed3a.js?body=1'
because it violates the following Content Security Policy directive:
"script-src 'self' https: 'strict-dynamic' 'sha256-...'
'nonce-RNrEgMJkrdj8D2U9IljIDQ=='". 'strict-dynamic' is present, so host-based
whitelisting is disabled. Note that 'script-src-elem' was not explicitly set,
so 'script-src' is used as a fallback.
```

I wonder if there would be an easy fix to make it work out of the box with strict CSP. Could it be as simple as changing:

`lib/xray/middleware.rb:116`:
```
-       "#{$~}\n" + helper.javascript_include_tag(script_name)
+       "#{$~}\n" + helper.javascript_include_tag(script_name, nonce: true)
```
?

I don't know if that helper can access the request's nonce from within a middleware but maybe...

(Otherwise, it could always use a regex to extract the nonce from the `<meta name="csp-nonce"` tag.)

As a workaround, I guess I'll have to disable my strict CSP in development, but I'd prefer to keep it strict in development as well so that I ran into any CSP issues sooner...

Reference:
- https://api.rubyonrails.org/classes/ActionView/Helpers/AssetTagHelper.html#method-i-javascript_include_tag
- https://github.com/rails/rails/pull/32607
Added support for runtime `append_view_path` and `prepend_view_path` instance methods in controllers.

So far, `_xray_bar.html.erb` partial have been raising `ActionView::MissingTemplate` if you call `append_view_path` or `prepend_view_path` in your controllers' action, because `lookup_context` in that partial doesn't take over its view_paths from your controllers' action view.

We added additional view paths to `Xray.request_info` struct using monkeypatch, and now you can use `append_view_path` and `prepend_view_path` in your application.


When loading of jQuery is deferred, the Javascript `Xray` script loads ahead of this and loads a blank object.

This is a stripped down approach to allow defer loading the script, via a config option.
Hi guys,

We defer the loading of scripts in our asset pipeline - this is causing Xray to load before jQuery and return an empty object.

On the page, this loads as follows:

<img width="697" alt="Screenshot 2019-06-17 at 12 53 36" src="https://user-images.githubusercontent.com/8395303/59602576-f4859980-90fe-11e9-8c72-c1295452ab6c.png">

Is there a method in place to overcome this?

If not, perhaps something like #98 would work?

Thanks in advance.

I have been using x-ray for a while now and all of a sudden it stopped working a couple of days ago. I removed all the browser extensions to make sure nothing is interfering with the gem. 

Do you have any insights?

using ruby version 4.2.0
`radial-gradient` is now supported by all current browsers:

https://caniuse.com/#search=radial-gradient

Also, the `cover` keyword has been deprecated in favor of `farthest-corner`. This fixes the following autoprefixer warning:

```
autoprefixer: xray-rails-0.3.1/app/assets/stylesheets/xray.css:42:3:
Gradient has outdated direction syntax. Replace `cover` to `farthest-corner`.
```