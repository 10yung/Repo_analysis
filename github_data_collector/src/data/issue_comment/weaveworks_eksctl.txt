* Add kubeconfig context flag in scale nodegroup

Signed-off-by: Dinos Kousidis <dinkousidis@gmail.com>

### Description

Hi, this is a WIP PR with some changes addressing a part of #258
It implements flags: `--use-kubeconfig-context` and `--kubeconfig-path` in `eksctl scale nodegroup` which read the cluster name from a given context.

Some details in the combination of the flags and the cluster naming:
- If both `--cluster` and `--use-kubeconfig-context` are passed, the name is taken from the context, I'm not sure if the other way is better, or if an error should be raised instead.
- The path of the kubeconfig is expected to be absolute, from https://github.com/weaveworks/eksctl/blob/f920788fa4c4375493610f987d4fa1b3d6661f3b/pkg/utils/kubeconfig/kubeconfig.go#L159
- If the cluster name ends in ".eksctl.io" the name is split and the first part is stored, as the generated names in the kubeconfig have the suffix `.<region>.eksctl.io`.

If this is in the right direction, I can add some test cases and add it to other commands where it makes sense!

### Checklist
- [ ] Added tests that cover your change (if possible)
- [ ] Added/modified documentation as required (such as the `README.md`, and `examples` directory)
- [x] Manually tested
- [ ] Added labels for change area (e.g. `area/nodegroup`) and target version (e.g. `version/0.12.0`)
- [x] Added note in `docs/release_notes/draft.md` (or relevant release note)

<!-- If you haven't done so already, you can add your name to the humans.txt file -->
<!-- If you need the attention of the maintainers ping @weaveworks/eksctl -->

### Description

Address https://github.com/weaveworks/eksctl/issues/1730

**__Notes__**:
I was thinking about to update `localhost` to `127.0.0.1` to by pass lookup, but `NewOpenIDConnectManager` method parsed input and derive host, which might impact mock function. 

### Checklist
- [ ] Added tests that cover your change (if possible)
- [ ] Added/modified documentation as required (such as the `README.md`, and `examples` directory)
- [ ] Manually tested
- [ ] Added labels for change area (e.g. `area/nodegroup`) and target version (e.g. `version/0.12.0`)
- [ ] Added note in `docs/release_notes/draft.md` (or relevant release note)

<!-- If you haven't done so already, you can add your name to the humans.txt file -->
<!-- If you need the attention of the maintainers ping @weaveworks/eksctl -->

I am running `make test` on MacOS Catalina, however it failed due to differences for localhost in IPv6 (e.g. ::1) instead of 127.0.0.1

~~~~
    Expected
        <string>: connecting to issuer OIDC: Get https://localhost:10020/: dial tcp [::1]:10020: connect: connection refused
    to have prefix
        <string>: connecting to issuer OIDC: Get https://localhost:10020/: dial tcp 127.0.0.1:10020: connect: connection refused
~~~~

### Description
- bump image to 940911992744.dkr.ecr.us-west-2.amazonaws.com/eks/coredns:v1.6.6
- change proxy to forward 
- more details can be found at  https://docs.aws.amazon.com/eks/latest/userguide/coredns.html

### Checklist
- [ ] Added tests that cover your change (if possible)
- [ ] Added/modified documentation as required (such as the `README.md`, and `examples` directory)
- [ ] Manually tested
- [ ] Added labels for change area (e.g. `area/nodegroup`) and target version (e.g. `version/0.12.0`)
- [ ] Added note in `docs/release_notes/draft.md` (or relevant release note)

<!-- If you haven't done so already, you can add your name to the humans.txt file -->
<!-- If you need the attention of the maintainers ping @weaveworks/eksctl -->

**What happened?**
If one deletes an eksctl created service account, it does not appear that one can recreate it with
`eksctl create iamserviceaccount --config-file foo.yaml`
or with
`eksctl create iamserviceaccount --config-file foo.yaml --override-existing-serviceaccounts`.

The output suggests that the serviceaccount was `excluded`.

This adds a step in the normal workflow to build binaries for all the distros. This
is not normally run and has to be started manually.


Needs rebasing once https://github.com/weaveworks/eksctl/pull/1726 is merged

- [x] Manually tested
This new versioning embeds the version of eksctl in the code so that regardless of where it's built 
the binary will always print the correct version.

The versioning format follows semver (except for the timestamp which contains `:`).

```
X.Y.Z[-preReleaseId][+gitCommit.timestamp]
```

Some examples:

  - development snapshot version: `0.13.0-dev+3d6107c3.2020-01-15T15:23:39Z`
  - a release candidate: `0.13.0-rc.0`
  - a release: `0.13.0`

The version is kept in `pkg/version/release.go` and `release_generate.go` is used to automate
certain operations like: preparing a release or release candidate, move to the next development version.

`release_generate.go` is used by the release scripts to automate the manipulation of the `pkg/version/release.go` file.

It also uses the version to produce artifacts in circleci. Check it here https://circleci.com/gh/weaveworks/eksctl/6102#artifacts/containers/0

fixes #1282


- [x] Added tests that cover your change (if possible)
- [x] Added/modified documentation as required (such as the `README.md`, and `examples` directory)
- [x] Manually tested
- [x] Added labels for change area (e.g. `area/nodegroup`) and target version (e.g. `version/0.12.0`)
- [ ] Added note in `docs/release_notes/draft.md` (or relevant release note)

<!-- If you haven't done so already, you can add your name to the humans.txt file -->
<!-- If you need the attention of the maintainers ping @weaveworks/eksctl -->
*Before creating a feature request, please search existing feature requests to see if you find a similar one. If there is a similar feature request please up-vote it and/or add your comments to it instead*

**Why do you want this feature?**
As an organization, we rely soley on oath tokens for github authentication, and do not use ssh keys. The following command example does not appear to have a method to use anything other than SSH keys:
`EKSCTL_EXPERIMENTAL=true \
        eksctl enable repo \
        --git-url git@github.com:example/my-eks-config \
        --git-email your@email.com \
        --cluster your-cluster-name \
        --region your-cluster-region`
Having to add an ssh key as a deploy key is cumbersome.

**What feature/behavior/change do you want?**
A clear and concise description of the change you would like to see in eksctl.

The command parameter `--git-url git@github.com:example/my-eks-config` needs to have the ability to pass credentials via https, using an oath token as an authentication option.

Do not hesitate, when appropriate, to share the exact commands or API you would like, and/or to share a diagram (e.g.: asciiflow.com): "a picture is worth a thousand words".

### Description
To address the lack of test coverage for `pkg/vpc/vpc.go` with small change in implementation. This is related to https://github.com/weaveworks/eksctl/pull/1477. Hopefully this is the last ground work PR for the actual fix :(

The current coverage of this file is improved 55.8% to 84.6%.

Noted: I am using dependency injection to mock the private methods. Please let me know if it's accepted üôè üôè üôè 

I personally don't like this approach much, as it's going against the idea of using gingko BDD testing, but mocking the entire stack calls is just hard üò¢ 

### Checklist
- [x] Added tests that cover your change (if possible)
- [ ] Added/modified documentation as required (such as the `README.md`, and `examples` directory)
- [ ] Manually tested
- [ ] Added labels for change area (e.g. `area/nodegroup`) and target version (e.g. `version/0.12.0`)
- [ ] Added note in `docs/release_notes/draft.md` (or relevant release note)

<!-- If you haven't done so already, you can add your name to the humans.txt file -->
<!-- If you need the attention of the maintainers ping @weaveworks/eksctl -->

**What happened?**
A description of actual behavior (with error messages).
Installed via snap and failed to create cluster using `--profile` flag

Remove snap package and installed from github/releases. Same command worked

**What you expected to happen?**
cluster creation

**How to reproduce it?**
install from snap
Run `eksctl create cluster ... --profile MYPROFILE`


**Anything else we need to know?**
Ubuntu 18.04

**Versions**
Please paste in the output of these commands:
```
eksctl version 0.12.0
kubectl version 1.15.7
```

**Logs**
```
[‚Ñπ]  eksctl version 0.12.0
[‚Ñπ]  using region us-east-2
[!]  retryable error (RequestError: send request failed
caused by: Put http://169.254.169.254/latest/api/token: dial tcp 169.254.169.254:80: connect: no route to host) from ec2metadata/GetToken - will retry after delay of 39.892905ms
[!]  retryable error (RequestError: send request failed
caused by: Put http://169.254.169.254/latest/api/token: dial tcp 169.254.169.254:80: connect: no route to host) from ec2metadata/GetToken - will retry after delay of 99.423428ms
```