When doing an (interactive) `git rebase` the VCS segment does not show the state of the rebase but just the current commit hash. When doing larger rebases this not very expressive.

Example:
```
git clone https://github.com/ViToni/powerline.segments.common.vcs.branch_rebase
cd powerline.segments.common.vcs.branch_rebase
git rebase -i  HEAD~2
```
and set the topmost commit to edit.

Output with `powerline`: `ce014aa` (which is the hash of the commit being edited)

Without powerline my `Bash` config defaults to:
```
PS1="\[\e]0;\w\a\]\n\[\e[32m\]\u@\h \[\e[33m\]\w\[\e[0m\]\[\e[1;36m\]\$(__git_ps1)\[\e[0m\]\n\$ "
```
which results in `master|REBASE-i 1/2` (after PWD) which is more descriptive.

I uses Vim in windows and using Chocolatey to install it, and powerline didn't work in Vim.
I added `let g:Powerline_symbols = 'fancy'` in `vimrc` file.
https://github.com/kiteco/plugins/tree/master/vim#statusline

Is there any way, for example, custom segments to call vimscript function? I need the information on kite#statusline() to be displayed!

------

Maybe I should write a similar python plugin like the following, 
https://github.com/powerline/powerline/blob/develop/powerline/segments/vim/plugin/capslock.py

replace the vim.eval('CapsLockStatusline()')  to vim.eval('kite#statusline()')  ?
Close #2046
Adding the following to the config json  (I'm running it with lemonbar, but I guess it should not matter):

```
      {
        "function": "powerline.segments.i3wm.mode",
        "args": {
            "names": {
                "default": "default"
              }
          }
      },
```
results in the following error

```
2019-11-25 21:47:39,439:ERROR:wm:mode:Failed to set highlight group: u'Highlighting groups not found in colorscheme: mode'
Traceback (most recent call last):
  File "/usr/local/lib/python2.7/dist-packages/powerline/segment.py", line 151, in set_segment_highlighting
    segment.get('gradient_level')
  File "/usr/local/lib/python2.7/dist-packages/powerline/colorscheme.py", line 105, in get_highlighting
    raise KeyError('Highlighting groups not found in colorscheme: ' + ', '.join(groups))
KeyError: u'Highlighting groups not found in colorscheme: mode'
```

As far as I can see the issue is that it is missing from `config_files/colorschemes/default.json`. For test purposes, I copied the mode line from the `vim` config, so it now displays "default", but changing modes doesn't have any effect, it display "default" in all modes, which suggests that mode information from `i3` never reaches powerline.
I added the the following line as suggested in the documentation

```sh
. /usr/local/lib/python3.7/site-packages/powerline/bindings/zsh/powerline.zsh
```

I'm getting the following error when I open a new terminal 

```sh
Config file not found in search paths (/Users/sbocz/Library/Python/3.7/lib/python/site-packages/powerline/config_files, /Users/sbocz/.config/powerline): config.json
Config file not found in search paths (/Users/sbocz/Library/Python/3.7/lib/python/site-packages/powerline/config_files, /Users/sbocz/.config/powerline): config.json
```

I'm not sure why `/Users/sbocz/Library/Python/3.7/` is being used.

```sh
which python
/usr/bin/python

which powerline
/usr/local/bin/powerline

echo $PATH
/Users/sbocz/bin:/Users/sbocz/.toolbox/bin:/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin
```

I've tried uninstalling `powerline-status` and python, but got nowhere.
I have been trying to get powerline working in qtile's built-in bar.

All the [powerline documentation](https://powerline.readthedocs.io/en/master/usage/wm-widgets.html) says about it is:

> Add the following to :file:`~/.config/qtile/config.py`:
> 
>  ```` Python
> 
>    from libqtile.bar import Bar
>    from libqtile.config import Screen
>    from libqtile.widget import Spacer
> 
>    from powerline.bindings.qtile.widget import PowerlineTextBox
> 
>    screens = [
>        Screen(
>            top=Bar([
>                    PowerlineTextBox(update_interval=2, side='left'),
>                    Spacer(),
>                    PowerlineTextBox(update_interval=2, side='right'),
>                ],
>                35 # width
>            ),
>        ),
>    ]
> ````

Following this I got an error until I also added a text argument. So the relevant section of my config.py for qtile is:
``` Python
PowerlineTextBox(
    update_interval = 2,  # the documentation says to use this, but I don't understand what it does
    side = left,  # whether this is set to right or left doesn't seem to change anything
    text = 'left',
    # bar_colours is defined earlier in my config file
    foreground = bar_colours[2],
    background = bar_colours[9],
    ),
```

Now there are no errors, but all I see in my panel is the word 'text' on a coloured background. I have tried adding various other instances of PowerlineTextBox and Spacer in different places but this makes no difference.
I haven't messed with any powerline configuration files at all, and I'm using the standard qtile and powerline packages from the Arch repos.

[Issue #499](https://github.com/powerline/powerline/issues/499) seems to offer an alternative method, but I can't work out what to do with the code snippets.
I guess this is a feature request. I jump about with my laptop quite a lot, so it's important for me to see what wifi I'm connected to, but I haven't found a segment that can do that. I actually looked into `segments/common/net.py` to see if I can add it myself, but it's a bit over my head without any help.
From tmux man page: 

```
status [off | on | 2 | 3 | 4 | 5]
          Show or hide the status line or specify its size.  Using on gives a status line one row in height; 2, 3, 4 or 5 more rows.

```

I don't think powerline currently supports that. 
A relatively recent, major update in i3ipc (`v2.0.1`) breaks some of our segments and listers here.
I discovered it today while updating all my python packages (for python 3.8).

In essence, the python class wrappers around i3ipc JSON responses that our code deals with have changed, so that `reply['attr']` is no longer valid, and `reply.attr` or `getattr(reply, 'attr')` must be used.
This is relevant in powerline/listers/i3wm.py and powerline/segments/i3wm.py.