cloned the examples python simple http endpoint trying to run it offline line it starts but after trying ``` localhost:3000/ping``` the terminal shows
``` Serverless: GET /todos (λ: list)
Serverless: Failure: internal/modules/cjs/loader.js:798
undefined
```
I tried to install the dotnet example using: 

> install -u https://github.com/serverless/examples/tree/master/aws-dotnet-rest-api-with-dynamodb -n dotnet_example

but it responds with:

>   Serverless Error ---------------------------------------
>  
>   serverless.yml not found in .../dotnet_example

So I think the "-n my-project" in the README is perhaps not what is actually needed here?
<!-- Hi there ⊂◉‿◉つ

Thanks for submitting a PR! We're excited to see what you've got for us!

Make sure to lint your code to match the rest of the repo.

Run `npm run lint` to lint

-->
When running `serverless deploy function --function graphql` after `npm run deploy` to update lambda function with recent changes I ended up with `The role defined for the function cannot be assumed by Lambda.`

**Solution:**

in `examples/aws-node-graphql-and-rds/resource/LambdaRole.yml` we need to add `RoleName` to fix that.
`RoleName: serverlessLambdaIAMRole`
I'm using the Lambda +ALB for by post api and is getting the CORS error when calling from a different domain where my frontend code is deployed. I did fix it when this lambda was integrated with API Gateway, but dont see any similar approach for ALb + Lambda. Can you please let me know how to fix CORS error for a path based routing in ALB which points the target to a lambda ?
Hi All,
I've been working with serverless for around 1 year but the problem is that I didn't find a single concrete solution for implementing the serverless architecture for larger applications that are easy to manage, update, and highly recommended. 

**Problems**
- I have some utility function files that I need to use in almost every function.
- There will be around 100 APIs.

Considering resources limitation in CloudFormation I come up with these following ideas. 

**Solutions**
- Divide the whole app into multiple services and deploy (But how do I update the utility functions and classes, It should be in one directory)
- Should I use the Flask within a single function to handle multiple routes? (I don't know how this works with threshold or other things)

Any other idea would you suggest and why it’s good. 

Hi! I'm having problems trying to upload the app to s3.

Type Error ---------------------------------------------
 
  TypeError: Cannot read property 'OutputValue' of undefined
      at /Users/juliangsibecas/Documents/sybila-web/node_modules/serverless-single-page-app-plugin/index.js:51:23
      at tryCatcher (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/util.js:16:23)
      at Promise._settlePromiseFromHandler (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:547:31)
      at Promise._settlePromise (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:604:18)
      at Promise._settlePromise0 (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:649:10)
      at Promise._settlePromises (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/promise.js:729:18)
      at _drainQueueStep (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:93:12)
      at _drainQueue (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:86:9)
      at Async._drainQueues (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:102:5)
      at Immediate.Async.drainQueues [as _onImmediate] (/usr/local/lib/node_modules/serverless/node_modules/bluebird/js/release/async.js:15:14)
      at processImmediate (internal/timers.js:439:21)
      at process.topLevelDomainCallback (domain.js:131:23)
 
     For debugging logs, run again after setting the "SLS_DEBUG=*" environment variable.
 
  Get Support --------------------------------------------
     Docs:          docs.serverless.com
     Bugs:          github.com/serverless/serverless/issues
     Issues:        forum.serverless.com
 
  Your Environment Information ---------------------------
     Operating System:          darwin
     Node Version:              12.12.0
     Framework Version:         1.58.0
     Plugin Version:            3.2.5
     SDK Version:               2.2.1
     Components Core Version:   1.1.2
     Components CLI Version:    1.4.0

Thank you in advance!
https://github.com/serverless/examples/tree/master/aws-node-vue-nuxt-ssr

I'm successfully using the above example to deploy a Vue Nuxt serverless app to aws.

Now what I'm trying to do is to add a server middleware for a restful API, so I can have /api/v1/helloworld like endpoints. I tried a lot, but I can't find a solution to this problem.

Please, can someone provide some information about how to this?
Hey there! Here's a new example to use SQS with TypeScript

Upgrades aws-node-fullstack example's frontend to use react hooks
Upgrades aws-node-fullstack example's frontend react version from 16.8.4 to 16.11.0