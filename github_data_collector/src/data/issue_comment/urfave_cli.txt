Highly experimental and still WIP.

Refers to #287
## my question is...

i want to stop a cli.App by codesã€‚what should i doï¼Ÿ
## my urfave/cli version is
2.1.1

## Checklist

* [x] Are you running the latest v2 release? The list of releases is [here](https://github.com/urfave/cli/releases).
* [x] Did you check the manual for your release? The v2 manual is [here](https://github.com/urfave/cli/blob/master/docs/v2/manual.md)
* [x] Did you perform a search about this problem? Here's the [Github guide](https://help.github.com/en/github/managing-your-work-on-github/using-search-to-filter-issues-and-pull-requests) about searching.

## Describe the bug
Under https://github.com/urfave/cli/blob/master/docs/v2/manual.md#values-from-files
> Note that default values set from file (e.g. FilePath) take precedence over default values set from the environment (e.g. EnvVar).

But at https://github.com/urfave/cli/blob/master/docs/v2/manual.md#precedence
> 1. Environment variable (if specified)
> 2. Configuration file (if specified)

## Expected behavior

Consistency withing documentation and between documentation and code.

via https://github.com/urfave/cli/pull/1019#issuecomment-569253463

https://github.com/urfave/cli/pull/979 didn't work I guess ðŸ˜­ 
> Enforce that a PR has a minimum of (a) a title, (b) a release notes block, and (c) a valid (kubernetes) label. Do this enforcement as a precheck before the PR is sent for review or at merge time (something like https://probot.github.io/apps/semantic-pull-requests/)

via https://github.com/urfave/cli/issues/965#issuecomment-568211620
surfaced via https://github.com/urfave/cli/pull/997#issuecomment-568153073
## What problem does this solve?

This would solve people creating issues about unexpected behavior from the `StringSliceFlag`, like these ones:

- https://github.com/urfave/cli/issues/910
- https://github.com/urfave/cli/issues/1003

## Solution description

Add an example, or maybe multiple examples, of how to input `StringSliceFlag`

## Describe alternatives you've considered

I've considered possibly changing `StringSliceFlag` to work in the way that both those users were expecting, but that sounds dangerous.
I removed the template because this is unnecessary in this case. I will just reference the lines with the bug (or lack of feature): https://github.com/urfave/cli/blob/master/app.go#L253 and https://github.com/urfave/cli/blob/master/app.go#L384.

Was this intended to be covered by `OnUsageError`? Right now when you pass invalid flags, you get this error message that you cannot customize in an easy way. The "workaround" for now is setting `app.HideHelp` to true and implementing your own (make sure to add your own `OnUsageError` field), or alternatively (bad idea for this particular issue), implement your own `io.Writer` and set `app.Writer` to it.

If it was not a bug because it was not supposed to be covered by `OnUsageError`, then you should implement `FlagNotFound` that works similarly to `CommandNotFound` because I see that you aim for customizability but it is an issue that you cannot change the error message you get when you pass unknown flags.

I am not quite sure why it does not work though as it does seem to call `a.OnUsageError` and returns after that, so theoretically it should not print it when `OnUsageError` is declared by me, right? I also noticed that despite having set both `app.Name` and `app.HelpName`, it is empty for `go help -nonexistent`. It works for other commands, as in it displays the `app.Name` properly for any other commands.

---

Okay, so I have been messing around with it. `OnUsageError` inside `&cli.App` but outside `&cli.Flags` and `&cli.Commands` does get executed, i.e. `./cli -foo help` will run the function, but `./cli help -foo` will not. I think the only option here to customize the error message for those sorts of usage errors is implementing your own help command. Is that correct? In any case, I did do just that and ~~it works perfectly~~. Nevermind, I have no way of knowing in `OnUsageError` which flag was the incorrect one among multiple ones. Any ideas?
Reason for this PR is that it makes the CI fail until #987 is merged

via https://github.com/urfave/cli/pull/981#discussion_r358792047