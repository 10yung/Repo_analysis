
**Describe the bug**
generates wrong codes when service returns flux and mono objects like

`        "responses": {
          "200": {
            "description": "OK",
            "schema": {
              "$ref": "#/definitions/Flux«CommunityMemberResource»"
            }
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Not Found"
          }
        }`
**To Reproduce**
Steps to reproduce the behavior:


As I am new to this Swagger code generation, Can you please add how to use this plugin ?
**Describe the bug**
Protein is a really cool tool, I like it! However, it has failed to generate right names for data classes.
Generated classes are like "data class Class.V1.API.Model", and their names are put in Kotlin captions ``.

**To Reproduce**
Just add dots in the object names in JSON file.
Example:
```
  "Company.MyAwesomeApi.Contracts.V1.Specific.SecondSpecific": {
            "type": "object",
            "properties": {
                "date": {
                    "format": "date-time",
                    "type": "string"
                },
                "extendedPropertyTypeId": {
                    "format": "uuid",
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
```


**Expected behavior**
The easiest way would be to trim dots and generate clients with CapitalCase naming convenetion (or camelCase):
`CompanyMyAwesomeApiContractsV1SpecificSecondSpecific`
The JSON file cannot be changed since it is generated via .NET code and they use dots for namespaces.

**Info Required**
- Which version of the plugin do you actually use?
The latest one - 1.1.2

- Any other thing that could help me to reproduce the error?

**Screenshots**

**Additional context**
Hi! Does this library support openapi 3 and if not, are there any plans on supporting it in the future? If i try to run the plugin with 'openapi: "3.0.0"' as the first line, an empty interface is generated and it's unclear whether it's not supported or some error happened.