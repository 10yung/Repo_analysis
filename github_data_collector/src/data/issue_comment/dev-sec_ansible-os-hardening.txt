This PR makes the role compatible with ArchLinux systems.
I'm a bit new to Ansible but experienced with coding and CM tools in general so I could be wrong here...
It appears that the check for the UID_MIN value in login.defs assigns a data object (JSON) to the 'uid_min' variable regardless of whether the file exists or not. Therefore, the test for 'when: uid_min is defined' ALWAYS passes.

The other tests for 'when: not uid_min' NEVER pass since the variable always has some value. 

Also, even if the two tasks to set 'uid_max' were able to run, they would likely always set the value for ANY system to 499. Even though Debian systems have more specific logic that task comes first so the value may get set to 999 but the very next task will still set it to 499 when login.defs does not exist.
**Is your feature request related to a problem? Please describe.**
Currently, in the default audit logs from this project, there's a ton of events with `auid=4294967295` which is because they start before the audit daemon is up. 
```
ausearch --uid-effective 4294967295 --just-one
----
time->Tue Jan  7 01:12:46 2020
type=DAEMON_START msg=audit(1578359566.985:2837): op=start ver=2.8.4 format=raw kernel=4.19.0-6-amd64 auid=4294967295 pid=28320 uid=0 ses=4294967295 subj=unconfined  res=success
```

**Describe the solution you'd like**
Add `audit=1` as an additional grub kernel parameter

**Describe alternatives you've considered**
N/A at that time

**Additional context**
See https://manpages.debian.org/testing/auditd/auditd.8.en.html

> NOTES
> A boot param of audit=1 should be added to ensure that all processes that run before the audit daemon starts is marked as auditable by the kernel. Not doing that will make a few processes impossible to properly audit.
**Describe the bug**
Modifying `/etc/pam.d/system-auth-ac` as [seen here](https://github.com/dev-sec/ansible-os-hardening/blob/a0e7d0fbafe8ee2258e8f82003c9dd8088ffea55/tasks/pam.yml#L112-L119) is wrong as it "breaks" the `authconfig` way. Apparently a symptom was also witnessed in #23.

Normally the file begins with:

```
#%PAM-1.0
# This file is auto-generated.
# User changes will be destroyed the next time authconfig is run.
```

Which quite clearly states that you shouldn't go modify it.

**Expected behavior**
Configure PAM in RH/CentOS as it is supposed to, by using `/etc/pam.d/system-auth-local` (and including from `system-auth-ac`) as instructed [here](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/security_guide/chap-hardening_your_system_with_tools_and_services) and in SYSTEM-AUTH-AC(5):

```
EXAMPLE
       Configure system to use pam_tally2 for configuration of maximum number of failed logins. Also call pam_access to verify if access is allowed.

       Make system-auth symlink point to system-auth-local which contains:

       auth            requisite       pam_access.so
       auth            requisite       pam_tally2.so deny=3 lock_time=30 \
                                             unlock_time=3600
       auth            include         system-auth-ac
       account         required        pam_tally2.so
       account         include         system-auth-ac
       password        include         system-auth-ac
       session         include         system-auth-ac
```

**Actual behavior**

* Hardening PAM by writing to a system managed configuration file `/etc/pam.d/system-auth-ac`
* Running `authconfig --updateall` will remove the abovementioned hardening

**OS / Environment**
RH/CentOS
Seems this doesn't support OpenSUSE Tumbleweed yet, maybe we could get this included?
This fixes https://github.com/dev-sec/ansible-os-hardening/issues/244.
**Describe the bug**
The packer build fails with a non-zero exist status.

**Expected behavior**
Ansible runs with errors.

**Actual behavior**
<!--- Paste verbatim command output between quotes -->
```
vagrant: TASK [dev-sec.os-hardening : remove pam_cracklib, because it does not play nice with passwdqc] ***
    vagrant: fatal: [default]: FAILED! => {"msg": "The conditional check '(ansible_os_family == 'RedHat' and ansible_distribution_version is version_compare('7', '<') and not ansible_distribution == 'Amazon') and os_auth_pam_passwdqc_enable' failed. The error was: Version comparison: '<' not supported between instances of 'str' and 'int'\n\nThe error appears to have been in '/Users/rfinch/.ansible/roles/dev-sec.os-hardening/tasks/pam.yml': line 70, column 3, but may\nbe elsewhere in the file depending on the exact syntax problem.\n\nThe offending line appears to be:\n\n\n- name: remove pam_cracklib, because it does not play nice with passwdqc\n  ^ here\n"}
```
**Example Playbook**
<!--- Paste an example playbook that can be used to reproduce the problem between quotes -->
```
- hosts: all
  roles:
    - dev-sec.os-hardening

```

**OS / Environment**
Mac OS X

**Ansible Version**
<!--- Paste verbatim output from "ansible --version" between quotes -->
```
ansible 2.7.12
  config file = None
  configured module search path = ['/Users/rfinch/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/local/lib/python3.7/site-packages/ansible
  executable location = /usr/local/bin/ansible
  python version = 3.7.4 (default, Sep  7 2019, 18:27:02) [Clang 10.0.1 (clang-1001.0.46.4)]
```

**Role Version**
<!--- Paste version of the role between quotes -->
```
latest (5.2.1)
```

**Additional context**
The problem is due to the order of checks in some when clauses in tasks/pam.yaml. It is attempting to do a numerical comparison on an Amazon linux version string. I have a PR upcoming that will demonstrate the problem and fix it.
**Describe the bug**
After executing the role, a permission error appears (see below).

**Expected behavior**
I would like to be able to disable certain parts of the role.

**Actual behavior**
<!--- Paste verbatim command output between quotes -->
```
failed: [xxxx] (item={'key': 'net.ipv4.tcp_timestamps', 'value': 1}) => {"ansible_loop_var": "item", "changed": false, "item": {"key": "net.ipv4.tcp_timestamps", "value": 1}, "msg": "Failed to reload sysctl: net.ipv4.ip_forward = 0\nnet.ipv6.conf.all.forwarding = 0\nnet.ipv6.conf.all.accept_ra = 0\nnet.ipv6.conf.default.accept_ra = 0\nnet.ipv4.conf.all.rp_filter = 1\nnet.ipv4.conf.default.rp_filter = 1\nnet.ipv4.icmp_echo_ignore_broadcasts = 1\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\nnet.ipv4.icmp_ratelimit = 100\nnet.ipv4.icmp_ratemask = 88089\nnet.ipv6.conf.all.disable_ipv6 = 1\nnet.ipv4.conf.all.arp_ignore = 1\nnet.ipv4.conf.all.arp_announce = 2\nnet.ipv4.conf.all.shared_media = 1\nnet.ipv4.conf.default.shared_media = 1\nnet.ipv4.conf.all.accept_source_route = 0\nnet.ipv4.conf.default.accept_source_route = 0\nnet.ipv4.conf.default.accept_redirects = 0\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.all.secure_redirects = 0\nnet.ipv4.conf.default.secure_redirects = 0\nnet.ipv6.conf.default.accept_redirects = 0\nnet.ipv6.conf.all.accept_redirects = 0\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\nnet.ipv4.conf.all.log_martians = 1\nnet.ipv4.conf.default.log_martians = 1\nnet.ipv6.conf.default.router_solicitations = 0\nnet.ipv6.conf.default.accept_ra_rtr_pref = 0\nnet.ipv6.conf.default.accept_ra_pinfo = 0\nnet.ipv6.conf.default.accept_ra_defrtr = 0\nnet.ipv6.conf.default.autoconf = 0\nnet.ipv6.conf.default.dad_transmits = 0\nnet.ipv6.conf.default.max_addresses = 1\nkernel.randomize_va_space = 2\nvm.mmap_min_addr = 65536\nsysctl: permission denied on key 'net.ipv4.tcp_timestamps'\nsysctl: permission denied on key 'net.ipv4.tcp_rfc1337'\nsysctl: permission denied on key 'kernel.sysrq'\nsysctl: permission denied on key 'fs.suid_dumpable'\nsysctl: permission denied on key 'kernel.core_uses_pid'\nsysctl: permission denied on key 'kernel.kptr_restrict'\n"}


failed: [xxxx] (item={'key': 'net.ipv4.tcp_rfc1337', 'value': 0}) => {"ansible_loop_var": "item", "changed": false, "item": {"key": "net.ipv4.tcp_rfc1337", "value": 0}, "msg": "Failed to reload sysctl: net.ipv4.ip_forward = 0\nnet.ipv6.conf.all.forwarding = 0\nnet.ipv6.conf.all.accept_ra = 0\nnet.ipv6.conf.default.accept_ra = 0\nnet.ipv4.conf.all.rp_filter = 1\nnet.ipv4.conf.default.rp_filter = 1\nnet.ipv4.icmp_echo_ignore_broadcasts = 1\nnet.ipv4.icmp_ignore_bogus_error_responses = 1\nnet.ipv4.icmp_ratelimit = 100\nnet.ipv4.icmp_ratemask = 88089\nnet.ipv6.conf.all.disable_ipv6 = 1\nnet.ipv4.conf.all.arp_ignore = 1\nnet.ipv4.conf.all.arp_announce = 2\nnet.ipv4.conf.all.shared_media = 1\nnet.ipv4.conf.default.shared_media = 1\nnet.ipv4.conf.all.accept_source_route = 0\nnet.ipv4.conf.default.accept_source_route = 0\nnet.ipv4.conf.default.accept_redirects = 0\nnet.ipv4.conf.all.accept_redirects = 0\nnet.ipv4.conf.all.secure_redirects = 0\nnet.ipv4.conf.default.secure_redirects = 0\nnet.ipv6.conf.default.accept_redirects = 0\nnet.ipv6.conf.all.accept_redirects = 0\nnet.ipv4.conf.all.send_redirects = 0\nnet.ipv4.conf.default.send_redirects = 0\nnet.ipv4.conf.all.log_martians = 1\nnet.ipv4.conf.default.log_martians = 1\nnet.ipv6.conf.default.router_solicitations = 0\nnet.ipv6.conf.default.accept_ra_rtr_pref = 0\nnet.ipv6.conf.default.accept_ra_pinfo = 0\nnet.ipv6.conf.default.accept_ra_defrtr = 0\nnet.ipv6.conf.default.autoconf = 0\nnet.ipv6.conf.default.dad_transmits = 0\nnet.ipv6.conf.default.max_addresses = 1\nkernel.randomize_va_space = 2\nvm.mmap_min_addr = 65536\nsysctl: permission denied on key 'net.ipv4.tcp_timestamps'\nsysctl: permission denied on key 'net.ipv4.tcp_rfc1337'\nsysctl: permission denied on key 'kernel.sysrq'\nsysctl: permission denied on key 'fs.suid_dumpable'\nsysctl: permission denied on key 'kernel.core_uses_pid'\nsysctl: permission denied on key 'kernel.kptr_restrict'\n"}
```

**OS / Environment**
Debian Jessie, amd64, running on OpenVZ.
I actually think that OpenVZ is my real issue here. Maybe it is possible to detect that and ignore some of the parts when running on top of OpenVZ.

**Ansible Version**
<!--- Paste verbatim output from "ansible --version" between quotes -->
```paste below
ansible 2.8.5
  config file = /etc/ansible/ansible.cfg
  configured module search path = ['/home/xxxx/.ansible/plugins/modules', '/usr/share/ansible/plugins/modules']
  ansible python module location = /usr/lib/python3.7/site-packages/ansible
  executable location = /usr/bin/ansible
  python version = 3.7.4 (default, Jul 16 2019, 07:12:58) [GCC 9.1.0
```
I am running on Arch Linux with the latest updates applied.
Fixes #194 
System user UID range was extended from 0-499 to 0-999 (https://access.redhat.com/articles/1190233).

In the template `rhel_system_auth.j2` there is a 500 harcoded.
I think there should be a variable with the max system UID number (500 or 1000, depending the OS version) and use that variable instead of the `500` hardcoded here:
https://github.com/dev-sec/ansible-os-hardening/blob/44b32922ffd4372fabdef56c958448ea555ed9c3/templates/etc/pam.d/rhel_system_auth.j2#L9 and here: https://github.com/dev-sec/ansible-os-hardening/blob/44b32922ffd4372fabdef56c958448ea555ed9c3/templates/etc/pam.d/rhel_system_auth.j2#L17

Or maybe don't define a new variable and just use `os_auth_uid_min`?

In both cases the variable must be defined in the OS specific version var file (`Redhat-6` and `Redhat-7`) instead of the general (`Redhat`).

I can submit a PR with the changes once I get feedback from this.

CC @rndmh3ro 