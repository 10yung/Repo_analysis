## [Hashing - Hard Version](https://github.com/CYBruce/DataStructure-Algorithm_ZJU/blob/week1/%E6%95%A3%E5%88%97%E6%9F%A5%E6%89%BE/11-%E6%95%A3%E5%88%974%20Hashing%20-%20Hard%20Version.py)
### Description
Given a hash table of size NN, we can define a hash function . Suppose that the linear probing is used to solve collisions, we can easily obtain the status of the hash table with a given sequence of input numbers. 
However, now you are asked to solve the reversed problem: reconstruct the input sequence from the given status of the hash table. Whenever there are multiple choices, the smallest number is always taken. 

Input： 
Each input file contains one test case. For each test case, the first line contains a positive integer N (≤1000), which is the size of the hash table. The next line contains N integers, separated by a space. A negative integer represents an empty cell in the hash table. It is guaranteed that all the non-negative integers are distinct in the table.

Output： 
For each test case, print a line that contains the input sequence, with the numbers separated by a space. Notice that there must be no extra space at the end of each line.
