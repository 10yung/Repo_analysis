Quick fix to add to Carlo a pdf viewer feature.
Thanks to create this project. The idea of carlo is very interesting.
However, when I install the example project and bundle it, it's package size is so large more than I expected.

https://github.com/GoogleChromeLabs/carlo/tree/master/examples/photobooth

![스크린샷 2020-01-17 오후 10 10 34](https://user-images.githubusercontent.com/8295005/72614729-5bf61700-3976-11ea-8026-f12052df37e7.png)

Can someone explain this?

I tired to build a pretty simple demo with `pkg`, but it failed to run on macOS. Do I need to do something more? It failed with following issue:

_Google Chrome cannot read and write to its data directory: /snapshot/carlo-desktop/node_modules/carlo/lib/.local-data/profile-stable_

This is my package.json:

```json
{
  "name": "carlo-desktop",
  "version": "1.0.0",
  "main": "index.js",
  "license": "MIT",
  "bin": {
    "carlo-desktop": "./index.js"
  },
  "pkg": {
    "scripts": "*.js",
    "assets": "src/**/*"
  },
  "dependencies": {
    "canvas": "^2.6.1",
    "carlo": "^0.9.46"
  },
  "devDependencies": {
    "pkg": "^4.4.2"
  }
}
```


```
const launchOptions = { width: 500, height: 400, executablePath: "/Applications/Google Chrome.app/Contents/MacOS/Google Chrome" };
const startTime = new Date().getTime();
const app = await carlo.launch(launchOptions);
const launchTime = new Date().getTime() - startTime;
```
This takes <1s to launch

```
const launchOptions = { width: 500, height: 400" };
const startTime = new Date().getTime();
const app = await carlo.launch(launchOptions);
const launchTime = new Date().getTime() - startTime;
```
This takes 6s to launch
As [this line of code](https://github.com/GoogleChromeLabs/carlo/blob/master/lib/carlo.js#L597), `carlo` now would exit the process when failed to find the `chrome`.

Why `carlo` make this decision? I packed my app into a single executable used `pkg`, but since this behavour, user could only see the app launch failed and exit immediately, should we just throw an error instead of exit the process to allow the developer do something for this case?

First of all, thanks for releasing this! Really has the potential for making it easier to build desktop applications without the full bloat of frameworks like electron.
I have used carlo in a number of projects and am really impressed.
That being said, there seems to be many critical issues open with no response.
Is carlo gonna be unmaintained ? and if not then what are the updates and fixes planned by the team ?
Although the error says
> The environment variable CHROME_PATH must be set to executable of a build of Chromium version 54.0 or later.

`CHROME_PATH` is never added to `installations`.
This page with an input tag crashes carlo when tries to open a file picker. I`m runnin on ubuntu 19.04

``` HTML
<html>
    <body>
        <h1>Hello World!!</h1>
        <label for="avatar">Choose a file:</label>
        <input type="file" id="fileinput" name="fileinput" accept="image/png, image/jpeg">
    </body>
</html>
```
Files with spaces in the name don't work from inside folders exposed with `serveFolder`.

[demo app](https://github.com/johnmuhl/carlo-serve-space)

Error in the browser console:
> index.html:4 GET https://domain/dont%20work.css net::ERR_NAME_NOT_RESOLVED

The following snippet reproduce the error

```js
const carlo = require('carlo');

(async () => {
  // Launch the browser.
  const app = await carlo.launch({
    // removing the following args solves the issue with createWindow
    args: [
      '--load-extension=./invalid-extension',
      '--disable-extensions-except=./invalid-extension'
    ]
  });

  // Terminate Node.js process on app window closing.
  app.on('exit', () => process.exit());

  // this script should open two windows, one is the carlo window the other is an extra chrome window.
  // with the args provided (which are obviously wrong)  the application fails to create this window
  // but does not throw any exception
  await app.createWindow();
})();

```