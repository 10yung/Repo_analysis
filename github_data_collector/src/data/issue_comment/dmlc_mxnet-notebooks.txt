Is this project still being maintained? The latest update seems to be about two years ago.
import sys
sys.path.append("../../tests/python/common")
import get_data

ImportError                               Traceback (most recent call last)
<ipython-input-17-9a42a43f0281> in <module>()
      1 import sys
      2 sys.path.append("../../tests/python/common")
----> 3 import get_data

ImportError: No module named get_data

I wrote a following script to predict image label for resent 18.
```

import mxnet as mx
model_name = 'resnet-18'
path='http://data.mxnet.io/models/imagenet/resnet/'
    [mx.test_utils.download(path+'18-layers/resnet-18-symbol.json'),
     mx.test_utils.download(path+'18-layers/resnet-18-0000.params'),
     mx.test_utils.download(path+'synset.txt')]
sym, arg_params, aux_params = mx.model.load_checkpoint(model_name, 0)
mod = mx.mod.Module(symbol=sym, context=mx.cpu(), label_names=None)
mod.bind(for_training=False, data_shapes=[('data', (1,3,224,224))], 
         label_shapes=mod._label_shapes)
mod.set_params(arg_params, aux_params, allow_missing=True)
with open('synset.txt', 'r') as f:
    labels = [l.rstrip() for l in f]

%matplotlib inline
import matplotlib.pyplot as plt
import cv2
import numpy as np
# define a simple data batch
from collections import namedtuple
Batch = namedtuple('Batch', ['data'])

def get_image(url, show=False):
    # download and show the image
    fname = mx.test_utils.download(url)
    img = cv2.cvtColor(cv2.imread(fname), cv2.COLOR_BGR2RGB)
    if img is None:
         return None
    if show:
         plt.imshow(img)
         plt.axis('off')
    # convert into format (batch, RGB, width, height)
    img = cv2.resize(img, (224, 224))
    img = np.swapaxes(img, 0, 2)
    img = np.swapaxes(img, 1, 2)
    img = img[np.newaxis, :]
    return img

def predict(url):
    img = get_image(url, show=True)
    # compute the predict probabilities
    mod.forward(Batch([mx.nd.array(img)]))
    prob = mod.get_outputs()[0].asnumpy()
    # print the top-5
    prob = np.squeeze(prob)
    a = np.argsort(prob)[::-1]
    for i in a[0:5]:
        print('probability=%f, class=%s' %(prob[i], labels[i]))
```

`
predict('http://writm.com/wp-content/uploads/2016/08/Cat-hd-wallpapers.jpg')`


Output:
```

probability=0.244390, class=n01514668 cock
probability=0.170342, class=n01514752 gamecock, fighting cock
probability=0.145019, class=n01495493 angel shark, angelfish, Squatina squatina, monkfish
probability=0.059832, class=n01540233 grosbeak, grossbeak
probability=0.051555, class=n01517966 carinate, carinate bird, flying bird
```


I am getting completly wrong output. 

Same code I tried with Resent 152., Output I got is correct
```

probability=0.692327, class=n02122948 kitten, kitty
probability=0.043847, class=n01323155 kit
probability=0.030002, class=n01318894 pet
probability=0.029693, class=n02122878 tabby, queen
probability=0.026972, class=n01322221 baby
```
Iam learning to work on ConvLSTM and ConvGRU. Kindly suggest some examples to work on these modules
How to install mxnet-notebooks on Mac OS X, can I just us  the example script proved for Ubuntu to do the installation?

Thanks

Here is an example script to install all these packages on Ubuntu
In https://github.com/dmlc/mxnet-notebooks/blob/master/python/rnn/lstm.ipynb, some of the images that at in the source code and are referenced in the text do not render. Specifically, https://raw.githubusercontent.com/antinucleon/web-data/master/mxnet/notebook/recurrent.jpg and 
https://raw.githubusercontent.com/antinucleon/web-data/master/mxnet/notebook/unroll.jpg do not render. Both of these links give 404s.

Hi! I followed this [notebook](https://github.com/dmlc/mxnet-notebooks/blob/master/python/how_to/predict.ipynb) to extract image feature using pre-trained CNN model.  I wonder do we need to subtract mean pixel values of imagenet before feature extraction. Other deep learning frameworks usually have this process, but I didn't find it in this notebook.
Missing ptb.train.txt file.
I found the get_ptb_data.sh in mxnet/example/rnn directory so it should be fine.

But the lstm_bucketing.ipynb missed several png files?

update2: the lstm_bucketing.py in mxnet/example/rnn could run. But the notebooks version can't run.  
fix typos and grammer
Implementation of three different regularizers (L1, L2 and dropout) on MNIST dataset. This will be useful for MXNet users who want to implement various regularizers on their cost function of interest.