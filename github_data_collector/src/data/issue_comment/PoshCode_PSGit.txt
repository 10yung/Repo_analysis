```
> Import-Module PSGit
Import-Module : Exception calling "EnableVirtualTerminalProcessing" with "0" argument(s): "The type initializer for 'PoshCode.Pansies.Console.WindowsHelper' threw an exception."
At line:1 char:1
+ Import-Module PSGit
+ ~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : NotSpecified: (:) [Import-Module], MethodInvocationException
+ FullyQualifiedErrorId : TypeInitializationException,Microsoft.PowerShell.Commands.ImportModuleCommand
```

```powershell
> $PSVersionTable

Name                           Value                                                                                                                    
----                           -----                                                                                                                    
PSVersion                      6.0.1                                                                                                                    
PSEdition                      Core                                                                                                                     
GitCommitId                    v6.0.1                                                                                                                   
OS                             Darwin 17.5.0 Darwin Kernel Version 17.5.0: Fri Apr 13 19:32:32 PDT 2018; root:xnu-4570.51.2~1/RELEASE_X86_64            
Platform                       Unix                                                                                                                     
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                  
PSRemotingProtocolVersion      2.3                                                                                                                      
SerializationVersion           1.1.0.1                                                                                                                  
WSManStackVersion              3.0  
```

Is macOS supported?
I (sadly) have to work with SVN repositories at work and having the svn command work would be awesome. Has any though been put into them? Would there be any objection to me looking into getting them started?
![capture](https://cloud.githubusercontent.com/assets/10100995/22994364/9e93af24-f3be-11e6-9b0b-10a9a7987703.PNG)

the file `ignored` is ignored by `.gitignore` by there is no reflection of that.

It would be nicer if you can make a property called ignored to keep track of the ignored file.
Can we rename all the commands with the prefix "Git"?
f.e.:

`Get-GitBranch` instead of `Get-Branch` - or -
`New-GitRemote` instead of  `New-Remote`?

I think that is more like the PowerShell naming standard. When you take a look at the module `SQLPS`, you will find out that next to all commands are using `Sql` as the prefix.
Hi there,

I did manage to create some functions to mimic the GIT functions.
but i cannot write functions that need authentication.

i do not know how to translate the **(url, usernameFromUrl, types) =>** part of the CredentialsHandler to powershell

``` csharp
    options.CredentialsProvider = new CredentialsHandler(
        (url, usernameFromUrl, types) =>
            new UsernamePasswordCredentials()
            {
                Username = USERNAME,
                Password = PASSWORD
            });
```

```
[LibGit2Sharp.UsernamePasswordCredentials] $UserCred = New-Object LibGit2Sharp.UsernamePasswordCredentials
$Credentials.UserName = $Username
$Credentials.Password = $Password
```

```
PS U:\> [LibGit2Sharp.Handlers.CredentialsHandler]::new

OverloadDefinitions                                                                       
-------------------                                                                       
LibGit2Sharp.Handlers.CredentialsHandler new(System.Object object, System.IntPtr method)  
```

so the main question is how to create a "CredentialsHandler"

Here's the updated version of the feature file for Add-Change. I re-did the scenarios using tabular form, and added a few more. Some addressing common params are still missing (e.g. -WhatIf), as well as scenarios for the _walk the whole tree_ behavior of --update et all.

Default PSProviders in PowerShell are the followings:

``` PowerShell
> Get-PSProvider

Name                 Capabilities                                      Drives
----                 ------------                                      ------
Registry             ShouldProcess, Transactions                       {HKLM, HKCU}
Alias                ShouldProcess                                     {Alias}
Environment          ShouldProcess                                     {Env}
FileSystem           Filter, ShouldProcess, Credentials                {C, D, E, F...}
Function             ShouldProcess                                     {Function}
Variable             ShouldProcess                                     {Variable}
```

I thought it would make sense to have one for working with Git repositories, so that you can do, for example:

```
Get-ChildItem Git:MyRepo\src\*
```

and other Git operations with standard PS cmdlets.

clean branch with GCI proxy in it. cant provide full CC because of the nature of proxy functions.

I need to be able to `git pull` changes from a remote

We need to be able to `git push` our changes to a remote
