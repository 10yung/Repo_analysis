1. Put a tableview with MGSwipeTableCell on a master view of split view controller, on a device that has a safe area
2. Rotate to landscape
3. Slide from right to left

Probably safe area calculations related. 

Screenshot: 
![Screenshot 2020-01-06 at 15 29 03](https://user-images.githubusercontent.com/9308257/71832228-6ecd3980-30a2-11ea-80bd-0bb4ae5b12a3.png)

Sample project(modified version of MailAppDemo) : 
[MailAppDemo.zip](https://github.com/MortimerGoro/MGSwipeTableCell/files/4026939/MailAppDemo.zip)


Supporting SPM integration would be very cool :)
Apple supported a new gesture to multi select cells at once in iOS13: https://developer.apple.com/documentation/uikit/uitableviewdelegate/selecting_multiple_items_with_a_two-finger_pan_gesture

But if a user pan left/right with two-finger, cell will swipe to left/right and also enter edit mode, so the UI seems a little wired.
<img width="360" alt="image" src="https://user-images.githubusercontent.com/3232651/71160531-b706f200-2282-11ea-8b15-09c713902ebd.png">

Could you please fix this bug?
One way to fix it is in 'MGSwipeTableCell.m' file, add func:

`- (BOOL)gestureRecognizer:(UIGestureRecognizer *)gestureRecognizer shouldRequireFailureOfGestureRecognizer:(UIGestureRecognizer *)otherGestureRecognizer `

and return yes when gestureRecognizer is `_panRecognizer` and otherGestureRecognizer is 2-finger pan gesture.

Thanks
You have the option for corner swipe buttons
cell.layer.cornerRadius = 50
cell.backgroundColor = UIColor.gray
cell.clipsToBounds = true
cell.swipeBackgroundColor = UIColor.gray

BUT how can I color the "swipeBackgroundColor" from both sides? 
I have this result!

![2019-11-26](https://user-images.githubusercontent.com/58219471/69638944-5827d180-1064-11ea-856d-97ae2c02fadf.jpg)

Changed bool/false/true to BOOL/YES/NO
App crashes on iOS13 only 

**Crashed: com.apple.main-thread
SIGABRT ABORT 0x000000019e1bf95c**

Version: **1.6.9**

```
Crashed: com.apple.main-thread
0  libsystem_kernel.dylib         0x19e1bf95c __abort_with_payload + 8
1  libsystem_kernel.dylib         0x19e1c3f6c abort_with_payload_wrapper_internal + 104
2  libsystem_kernel.dylib         0x19e1c3f04 abort_with_payload_wrapper_internal + 30
3  libobjc.A.dylib                0x19e10c5c8 _objc_fatalv(unsigned long long, unsigned long long, char const*, char*) + 108
4  libobjc.A.dylib                0x19e10c55c _objc_fatalv(unsigned long long, unsigned long long, char const*, char*) + 30
5  libobjc.A.dylib                0x19e108a98 weak_clear_no_lock + 318
6  libobjc.A.dylib                0x19e10a59c objc_storeWeak + 336
7  UIKitCore                      0x1a25f1c44 -[UITableViewCell _tableView] + 268
8  UIKitCore                      0x1a25f4470 -[UITableViewCell _selectedBackgroundView:] + 96
9  UIKitCore                      0x1a25ecbec -[UITableViewCell _setSelectionStyle:selectionTintColor:] + 172
10 MGSwipeTableCell               0x106893308 -[MGSwipeTableCell hideSwipeOverlayIfNeeded] + 926 (MGSwipeTableCell.m:926)
11 UIKitCore                      0x1a28fbdc8 __UIViewWillBeRemovedFromSuperview + 284
12 UIKitCore                      0x1a28fbb50 -[UIView(Hierarchy) removeFromSuperview] + 96
13 UIKitCore                      0x1a25f0164 -[UITableViewCell removeFromSuperview] + 148
14 UIKitCore                      0x1a28e47b8 -[UIView dealloc] + 396
15 UIKitCore                      0x1a2888db0 -[UIScrollView dealloc] + 844
16 UIKitCore                      0x1a263171c -[UITableView dealloc] + 368
17 libobjc.A.dylib                0x19e10a408 objc_release + 136
18 libobjc.A.dylib                0x19e10b9d8 AutoreleasePoolPage::releaseUntil(objc_object**) + 184
19 libobjc.A.dylib                0x19e10b8c4 objc_autoreleasePoolPop + 232
20 CoreFoundation                 0x19e3e2b28 _CFAutoreleasePoolPop + 32
21 CoreFoundation                 0x19e34bb84 __CFRunLoopRun + 1988
22 CoreFoundation                 0x19e34b098 CFRunLoopRunSpecific + 480
23 GraphicsServices               0x1a84b5534 GSEventRunModal + 108
24 UIKitCore                      0x1a246b7ac UIApplicationMain + 1940
25 MyApp                       0x1047e2050 main + 30 (MyClass.swift:30)
26 libdyld.dylib                  0x19e1caf30 start + 4
```
pod version = 1.6.9

Log:
objc[3720]: Cannot form weak reference to instance (0x10e99c600) of class UITableView. It is possible that this object was over-released, or is in the process of deallocation.

MGSwipeTableCell.m (line 925)
**Description**
1. Swap a cell to show right button
2. Use refreshContentView method to refresh this cell frequently

**Result**
The cell get wrong image, the wrong image without right button

**Try**
When I change the method `- (UIImage *)imageFromView:(UIView *)view cropSize:(CGSize)cropSize`  and use `[view.layer renderInContext:UIGraphicsGetCurrentContext()];` , it become normal.

**Enviroment**
1. XCode 11
2. iOS 13、iOS 10
3. iPhone 5、iPhone 11
### Environment(Sample project is created using):
_Xcode_ **10.1**
_Swift_ **4.2**
_iOS_ **12.1**
_Simulator_ **iPhone XS**

### Output screenshot: 
https://www.dropbox.com/s/dcbczqd6aleibs8/Screenshot%202019-09-18%20at%207.58.42%20PM.png?dl=0

### Sample Project:
https://www.dropbox.com/s/xshrlioptomr3qx/MGSwipeTableCellSample18Sep2019.zip?dl=0

### Other Notes:

- The same issue is happening in iOS 13 too.

**_Thank you, I love your Framework._**
I have a tableView that is reversed and a cell w/ reversed content view. 

When I swipe cell to delete, the text gets reversed and appears upside down.

Is there a way to handle this situation with MGSwipe?