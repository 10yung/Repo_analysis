- [ ] update readme
Closes issue #41 
With Android 9 on some devices, the status bar height is large so the event listener for KetboardVisibilityEvent is always open.

Here is the attached screenshot of the device emulator having the big status bar:
![device-2019-07-05-144756](https://user-images.githubusercontent.com/14223997/60712097-e5db1700-9f33-11e9-985b-92e8047b353a.png)

I tried to get the values of Screen Height, Height Difference, Status Bar, etc and here are the results:
1. ScreenHeight = 1920
2. StatusBarHeight = 171
3. Rectangle = Rect(0, 171 - 1080, 1794)
4. HeightDifference = 297
5. KeyboardMinHeight = ScreenHeight * KeyboardMinRatio = 1920*0.15 = 288

As you can see that the HeightDifference is bigger than KeyboardMinHeight. Due to this the status is always open.

I think we need to include status bar height in calculation to make it work.
Can you please check?

Let me know if you need more details

Thanks

it can work when I not use fullScreen，my softInputMethod is normal ， here is my fullScreen code：

```java
public void applyFullScreen(boolean enable) {
        isFullScreen = enable;
        if (enable) {
            getImageView_apply_full_screen_state().setImageResource(R.drawable.push_down);
            WindowManager.LayoutParams lp = this.getWindow().getAttributes();
            lp.flags |= WindowManager.LayoutParams.FLAG_FULLSCREEN;
            this.getWindow().setAttributes(lp);
            this.getWindow().addFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);
            hideBottomUIMenu();
        } else {
            getImageView_apply_full_screen_state().setImageResource(R.drawable.push_up);
            WindowManager.LayoutParams attr = this.getWindow().getAttributes();
            attr.flags &= (~WindowManager.LayoutParams.FLAG_FULLSCREEN);
            this.getWindow().setAttributes(attr);
            this.getWindow().clearFlags(WindowManager.LayoutParams.FLAG_LAYOUT_NO_LIMITS);
            showBottomUIMenu();
        }
    }

public void hideBottomUIMenu() {
        if (Build.VERSION.SDK_INT > 11 && Build.VERSION.SDK_INT < 19) { // lower api
            View v = this.getWindow().getDecorView();
            v.setSystemUiVisibility(View.GONE);
        } else if (Build.VERSION.SDK_INT >= 19) {
            //for new api versions.
            View decorView = getWindow().getDecorView();
            int uiOptions = View.SYSTEM_UI_FLAG_HIDE_NAVIGATION
                    | View.SYSTEM_UI_FLAG_IMMERSIVE_STICKY | View.SYSTEM_UI_FLAG_FULLSCREEN;
            decorView.setSystemUiVisibility(uiOptions);
        }
    }

public void showBottomUIMenu() {
        if (Build.VERSION.SDK_INT > 11 && Build.VERSION.SDK_INT < 19) { // lower api
            View v = this.getWindow().getDecorView();
            v.setSystemUiVisibility(View.VISIBLE);
        } else if (Build.VERSION.SDK_INT >= 19) {
            //for new api versions.
            View decorView = getWindow().getDecorView();
            decorView.setSystemUiVisibility(0);
        }
    }
```

currentAndroidVersion is 5.1.1
wish it‘s helpful.


if the device is LandScape and the keyboard is fullScreen,it will not work.
Hi, I am using your library for some time and it works great, but recently one of my user report a strange behaviour. 

Here are the details:
1. Device name: Essential ph-1 phone
2. Android version 7.1.1
4. Use default keyboard, not custom
3. I use windowSoftInputMode adjustResize

I use the event listener to hide a button when the keyboard is open, I think somehow this device detect the keyboard is open when it is not (the activity just started, and it don't show keyboard on start). Do you have any idea what cause this? Thanks
Hi there, I am using your library on my second project and its work fine, thank you. But today i needed to use adjustNothing in activity to prevent it from moving (coz was implementing custom animation). After several hours of researching I discovered the following snippet and successfully applied it to my activity: https://github.com/siebeprojects/samples-keyboardheight/blob/master/app/src/main/java/com/siebeprojects/samples/keyboardheight/KeyboardHeightProvider.java

Hope you will get some new ideas for your library =) good luck