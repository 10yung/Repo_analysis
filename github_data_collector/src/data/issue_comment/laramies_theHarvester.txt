This is still a WIP
Hello I'm facing this issue where the internet wont let me connect. I have had this issue from the moment i started using the Harvester. I am in China currently and I'm using shadow socks proxy so my question is does it have anything to do with it? either ways please post a solution. Thanks in advance :)
A simple reverse DNS lookup.
Can be called with the '-n' option.

*Note*
The `__main__.py` hasn't been modified.
IE the functionality is here but the results are *not* added to the report.
As is `__main__.py` only prints the results (l 460-488).
**Feature Request or Bug or Other**
Other

**Describe the feature request or bug or other**
Add the documentation to the README on how to configure the API keys

**To Reproduce**
N/A

**Expected behaviour**
Docs on how to configure in the README and not relying on the closed tickets.

**Screenshots**
N/A

**System Information (System that tool is running on):**
N/A

**Additional context**
Information is in https://github.com/laramies/theHarvester/issues/360 
**Feature Request or Bug or Other**
Feature Request

**Describe the feature request or bug or other**
It looks like reverse DNS is proposed in the CLI / `__main__.py`, but not actually implemented?

**To Reproduce**
Steps to reproduce the behaviour:
1. Run python theHarvester.py -d <...> -n
2. See error "module 'theHarvester.discovery.dnssearch' has no attribute 'DnsReverse'"

**Expected behaviour**
I'd guess DnsReverse would check the IPs in the neighboorhood of all the discovered hosts?
And then check whether there's a domain registered for every tested IP?

**Screenshots**
N/A

**System Information (System that tool is running on):**
N/A

**Additional context**
N/A
Hello there, great work!!
Your project bumped me so much ahead of my little scraping :D
Apart from the functionnalities I have a few thoughts on coding style.
It's on the annoying side of coding, since it wouldn't add features, but it may make things easier in the future!

**Feature Request or Bug or Other**
Other

**Describe the feature request or bug or other**
Code snippets are duplicated with hard to spot adjustments.
It makes the code bigger, harder to read, and harder to test since there's no central point for each feature.
__main__.py is especially big and convoluted

**To Reproduce**
Read __main__.py :D

**Expected behaviour**
One function / method / script per feature:
- argument parsing
- logging (console / file)
- exporting (html / xml)
- etc
- __main__.py just controling / calling the processing modules

**Screenshots**
N/A

**System Information (System that tool is running on):**
N/A

**Additional context**
It would make debugging, testing, profiling way easier, no?
Hi;

I got an error:
Google is blocking your ip and the workaround, returning
        Searching 100 results.
Google is blocking your ip and the workaround, returning
        Searching 200 results.
Google is blocking your ip and the workaround, returning
        Searching 300 results.
Google is blocking your ip and the workaround, returning
        Searching 400 results.
Google is blocking your ip and the workaround, returning
        Searching 500 results.

[*] No links found.
**Feature Request or Bug or Other**
Other

**Describe the feature request or bug or other**
Enforce checkstyle using customized variation of pylint or pychecker.
As part of this, we should enforce DocString for every method added.

As an aside, we can revisit all the existing DocStrings and convert them to Google or Numpy format. Recommended [here](https://www.sphinx-doc.org/en/master/usage/extensions/napoleon.html#targetText=NumPy%20style%20tends%20to%20require,long%20and%20in-depth%20docstrings.) and [here](https://github.com/Khan/style-guides/blob/master/style/python.md#docstrings).

**To Reproduce**
N/A

**Expected behavior**
Errors when checkstyle fails (eg: no DocString is added for a new method).

**Screenshots**
N/A

**System Information (System that tool is running on):**
N/A

**Additional context**
N/A
Some of the dorks are not that helpful and coul be replaced with more useful stuff.
Some modules and functions throughout the code base have little to no docstring, this should change!