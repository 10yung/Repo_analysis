I want to get userID when using authorizeSSO method.
so I created a PR referring to the code below.

https://github.com/twitter-archive/twitter-kit-ios/blob/2cd78d3d5783d998f6b5fde242d1dd69d32e385d/TwitterCore/TwitterCore/Identity/TWTRSession.m#L44
## why 

iOS authorize method need SFSafariViewControllerDelegate but if developer used TwitterKit before 
sometime get confused. 

TwitterKit implementation:  https://github.com/twitter-archive/twitter-kit-ios/blob/4a69c9df030e979ecc60a320bda75c3797c5b079/TwitterKit/TwitterKit/Social/Syndication/API/TWTRWebAuthenticationFlow.m#L91

## how 

I create a internal view controller to implement SFSafariViewControllerDelegate inside the authorize method.  And handle the SafariViewController event.

I want to use the features included in this commit. https://github.com/mattdonnelly/Swifter/pull/271
But I think this commit has not been released since it was merged.

Are you planning to release a new version?
thanks.
I'm relatively new to development firstly. Anyway, I have made a custom app for my Twitter account to post tweets which works fine on 13.3. However, when I tried running it on 13.3.1 beta (17D5026c), the app crashes on startup with the error shown in the screenshot
<img width="1440" alt="Œ£œÑŒπŒ≥ŒºŒπœåœÑœÖœÄŒø 2019-12-31, 3 20 54 ŒºŒº" src="https://user-images.githubusercontent.com/58777168/71623608-88740a00-2be6-11ea-88e6-312a2522f648.png">

I have an app I wrote years ago with TwitterKit, and am looking to transition to Swifter now that TwitterKit is no longer supported.  However, I am not finding any good resources or sample code for writing a simple Post a Tweet using Swifter.  I know how to create the tweet, but nothing seems to happen.  It appears that Swifter requires usage of a callbackURL.  Can you post a wiki or simple sample code for posting a static tweet using Swifter?
Hello all,

In #204, @zachrwolfe brought up the idea of allowing raw Data access to the returned data response from the Twitter API and also adding support for Decodable. Unfortunately, due to my other commitments, I let the PR slip through and it was closed. But, I think it is actually a great time to start discussing possible changes to the Swifter API to expand and take advantage of a lot of the new features that Swift has since then introduced. 

---- 
Currently, Swifter works by having its own JSON wrapper that it returns to the client with; and does not allow the client to access the raw Data that is immediately returned by the Twitter API. In Swift 4, the language now includes the protocol [Codable](https://developer.apple.com/documentation/swift/codable), which allows the client to create type-safe encoders/decoders for their data and supports JSONDecoding out-of-the-box. However, since Swifter is, at the end of the day, a API client wrapper, I was against having a data model to decode all of the JSON data within Swifter as:
1. The apps/clients may have their own model, and it still means that the model (whether JSON or a Decodable-struct within Swifter) is duplicated and needs to be copied to the end-result
2.  Twitter's API could change, and since Codable *is* a type-safe model, any changes to the JSON declaration by Twitter would theoretically break all clients using Swifter without the client realizing (as it would just start throwing decodable errors).

## Goals

1. Add support for accessing the raw Data
2. Add support for third-party decoding 
3. Maintain existing API without breaking changes (if possible)
4. Don't duplicate codepaths. 

## Possible Solutions

1. In #204, @zachrwolfe introduced the idea of replacing `successHandler` with a `rawSuccess` handler that leaves it up to the end-user to handle the data. I think this is a fine solution but breaks goal 3 above, as we would be replacing every API in Swifter with a new handler. 
    - Pros: Makes it very easy to decode into whatever type the user needs
    - Cons: Breaks existing API 
2. Add `data` property in `JSON` type to allow the app-client to then decode into whatever data model they need.
    - Pros: Doesn't break existing API, merely an additive change
    - Cons: Not efficient (converting to JSON ‚Üí then converting back into Data)
3. _To be added..._

## Notes
There are still a lot to think about how we can shape this API while maintaining the goals for this proposal. I'll update the post as discussions happen. 
It seems that the way to go is using the search api with a since_id set to the target tweet's id, then checking the in_reply_to_tweet_id parameter.

However, in the standard API this usually misses many tweets.

twarc seems to work though, not sure why. https://github.com/DocNow/twarc

Anyone wanna work together to implement a way to get full-fidelity replies to a particular tweet?

(even if the first version only works for tweets made in the past week)
Neither the command pod search swifter or a search on cocoapods.org show Swifter as one of the results.

I can install it with the git option in the podfile but it would be great to have it in cocoapods too for pod install swifter.

Thanks!
 HTTP Status 400: Bad Request, Response: {"request":"\/1.1\/media\/upload.json","error":"media type unrecognized."}

I'm sending an .mov/.mp4 file. did twitter support mov/mp4?
I'm trying to post a tweet with a photo but every time I try, i get an error "The operation couldn‚Äôt be completed. (SwifteriOS.SwifterError error 1.)"

My code looks like

```
var tweetMedia: [String: Any]?
//I then set tweetMedia to a UIImageView from the UIImagePickerControllerOriginalImage
let picForTwitterApi = tweetMedia![UIImagePickerControllerOriginalImage] as! UIImage
let image = UIImagePNGRepresentation(picForTwitterApi) as Data?
self.swifter?.postTweet(status: tweetText, media: image!, inReplyToStatusID: nil, coordinate: nil, placeID: nil, displayCoordinates: nil, trimUser: false, 
tweetMode: TweetMode.default, success: { json in self.alert(title: "Tweet PHOTO sent", message: "üëçüèæ")
            }, failure: failureHandler)

```
But it does not work, i even tried

```
self.swifter?.postMedia(image!, additionalOwners: nil, success: { json in
                print(json)
```

instead, still no success. When I post a regular vanilla tweet like 
```
self.swifter?.postTweet(status: tweetText, inReplyToStatusID: nil, trimUser: false, tweetMode: TweetMode.default, success: { json in
                print(json).....
```

Everything works perfectly fine, I only have problems when I try to post a photo. Please help. Thanks in advance