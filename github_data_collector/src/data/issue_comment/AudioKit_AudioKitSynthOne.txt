delete recordings in tmp dir on audio engine start
I hope to be collaborating pretty soon!!!!

Best regards

Hugo Barbosa
Founder & CEO
MyCloudVIP
Could a saturation module be added?  Something like a zener limiter with controllable current (controls rolloff) would be nice.  Sorry if it’s already there and I missed it.
I downloaded AudioKitSynthOne from GitHub, did the pod commands, changed the bundle identifiers and built the project using Xcode 11.2. On start-up (does not matter if I take the master or develop branch), it crashes with an uncaught NSException on :

window?.makeKeyAndVisible()

Stack trace:
Thread 1 Queue : com.apple.main-thread (serial)
#0	0x00000001bfc8a9c0 in objc_exception_throw ()
#1	0x00000001c09bbbc0 in +[NSException raise:format:] ()
#2	0x00000001cb150de8 in UINibDecoderDecodeObjectForValue ()
#3	0x00000001cb15116c in UINibDecoderDecodeObjectForValue ()
#4	0x00000001cb0f0304 in -[UINibDecoder decodeObjectForKey:] ()
#5	0x00000001ed328e70 in -[UIView initWithCoder:] ()
#6	0x00000001ed2d72e8 in -[UIScrollView initWithCoder:] ()
#7	0x00000001ed1e0d6c in -[UITextView initWithCoder:] ()
#8	0x00000001cb150f28 in UINibDecoderDecodeObjectForValue ()
#9	0x00000001cb0f0304 in -[UINibDecoder decodeObjectForKey:] ()
#10	0x00000001ecb7c508 in -[UIRuntimeConnection initWithCoder:] ()
#11	0x00000001cb150f28 in UINibDecoderDecodeObjectForValue ()
#12	0x00000001cb15116c in UINibDecoderDecodeObjectForValue ()
#13	0x00000001cb0f0304 in -[UINibDecoder decodeObjectForKey:] ()
#14	0x00000001ecb79df0 in -[UINib instantiateWithOwner:options:] ()
#15	0x00000001ec91526c in -[UIViewController _loadViewFromNibNamed:bundle:] ()
#16	0x00000001ec915c14 in -[UIViewController loadView] ()
#17	0x00000001ec915ed8 in -[UIViewController loadViewIfRequired] ()
#18	0x00000001ec916628 in -[UIViewController view] ()
#19	0x00000001ed04ab10 in __67-[UIStoryboardEmbedSegueTemplate newDefaultPerformHandlerForSegue:]_block_invoke ()
#20	0x00000001ed04cc38 in -[UIStoryboardSegueTemplate _performWithDestinationViewController:sender:] ()
#21	0x00000001ed04cae4 in -[UIStoryboardSegueTemplate _perform:] ()
#22	0x00000001ed04cdb0 in -[UIStoryboardSegueTemplate perform:] ()
#23	0x00000001ec91607c in -[UIViewController loadViewIfRequired] ()
#24	0x00000001ec916628 in -[UIViewController view] ()
#25	0x00000001ecef4e64 in -[UIWindow addRootViewControllerViewIfPossible] ()
#26	0x00000001ecef540c in -[UIWindow _setHidden:forced:] ()
#27	0x00000001ecf05ce8 in -[UIWindow makeKeyAndVisible] ()
#28	0x0000000100aef6e0 in AppDelegate.application(_:didFinishLaunchingWithOptions:) at /Users/dwr/Downloads/AudioKitSynthOne-develop/AudioKitSynthOne/AppDelegate.swift:49


When I browse around the stack trace, I see a lot of 'cloud' related texts like CloudDocsLibrary. Not sure what to do next. I managed to build SynthOne in February of this year.

Some new info: it says:
[<AudioKitSynthOne.KeyboardView 0x104822cf0> setValue:forUndefinedKey:]: this class is not key value coding-compliant for the key darkMode.
We want to support MacOS Catalina with Synth One.
The MVP-Goal is to have a first running version of Synth One available in the App Store.
Further goals could be adding AUv3 support.

This document is supposed to track progress towards that goal.

**Current state**
I managed to get a build of Synth One running on Catalina, that produces audio output.
![Screenshot 2019-11-03 at 11 37 54](https://user-images.githubusercontent.com/5174440/68083869-76682c00-fe2e-11e9-88b0-499f512382c6.png)

Unfortunately this is far from releasable. The biggest current obstacles are:
- Cocoapods does not support iOSMac targets (Catalyst)
- We use a lot of third-party frameworks that are closed source and not compiled for iOSMac.
- There are a lot of UIKit related crashes that warrant further investigation

**Current steps**

- [x] Remove ChimpKit from S1 (Dated framework, no update in 5 years): https://github.com/AudioKit/AudioKitSynthOne/pull/118

- [x] Remove EZAudio OpenGL dependencies from AudioKit: https://github.com/AudioKit/AudioKit/pull/1912 & https://github.com/AudioKit/AudioKit/pull/1913

- [x] Remove AudioBus/IAA from Mac targets: https://github.com/AudioKit/AudioKitSynthOne/pull/120

- [x] Figure out what to do with OneSignal and MS AppCenter dependencies: https://github.com/AudioKit/AudioKitSynthOne/pull/121

- [ ] Figure out what to do with Cocoapods support

- [ ] Need support for `LSSupportsOpeningDocumentsInPlace` across platforms

- [ ] Resolve all the other issues (S1 crashes on any other screen than the home-screen, presumably due to some Storyboard issues)

**How to build it currently**
Currently building for Catalina requires the following steps:
- Remove **all** Pods except for "Disk" from Podfile
- Drop in iOS Project for AudioKit
- Set checkbox for macOS
- Fix missing entitlements and code-sign issues (@analogcode needs to add those at some point)
- Build for Catalina (iOS builds will not work due to the missing Pods)

Just curious. The AERealtimeWatchdog complains, at launch, with a `AERealtimeWatchdogUnsafeActivityWarning` which traces back to the S1AudioUnit's `internalRenderBlock`. I don't know if this is a serious concern or not, but I am getting occasional `EXC_BAD_ACCESS` crashes in my app (which includes a "skinless" version of SynthOne).
These crashes always occur when using the synth (we have an AKAppleSampler in the app, as well), and always point either to our Conductor, when it tries to `.play()` an event, or within SynthOne code itself. (Of course, it's `EXC_BAD_ACCESS`, so hard to know where it's actually occurring.)
Any thoughts?

Here's a backtrace of a crash, just a moment ago:

```
* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_ACCESS (code=1, address=0x12d)
    frame #0: 0x0000000189873e28 libobjc.A.dylib`objc_retain + 8
  * frame #1: 0x000000010055f788 Spliqs`__41-[AEMessageQueue initWithBufferCapacity:]_block_invoke(.block_descriptor=0x000000010167fe00, data=0x00000002817c5010, length=0) at AEMessageQueue.m:77:16
    frame #2: 0x000000010055a914 Spliqs`__39-[AEMainThreadEndpoint serviceMessages]_block_invoke(.block_descriptor=0x00000002840d6380) at AEMainThreadEndpoint.m:157:17
    frame #3: 0x0000000106f271fc libdispatch.dylib`_dispatch_call_block_and_release + 32
    frame #4: 0x0000000106f2877c libdispatch.dylib`_dispatch_client_callout + 20
    frame #5: 0x0000000106f36158 libdispatch.dylib`_dispatch_main_queue_callback_4CF + 1392
    frame #6: 0x000000018a5e6734 CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 16
    frame #7: 0x000000018a5e13e4 CoreFoundation`__CFRunLoopRun + 1888
    frame #8: 0x000000018a5e0964 CoreFoundation`CFRunLoopRunSpecific + 452
    frame #9: 0x000000018c821d8c GraphicsServices`GSEventRunModal + 108
    frame #10: 0x00000001b7a81758 UIKitCore`UIApplicationMain + 216
    frame #11: 0x00000001008fb590 Spliqs`main at AppDelegate_iOS.swift:23:7
    frame #12: 0x000000018a09cfd8 libdyld.dylib`start + 4
```
If there isn't one already in the project, definitely add it. If there is...where is it? 

Thanks in advance and thanks for posting and updating such a wonderful project! 
Enjoy!
In `AudioKitSynthOne/Manager/Manager+callbacks.swift`, retain loops are created by the callbacks. Search for `callback = {` in your codebase and you'll find more.

The callbacks need to be of the form 

```
myWidget.callback = { [weak self] in
   guard let strongSelf = self else { return }
  // do stuff with strongSelf
}
```

This isn't a big deal for a stand-alone app (though, it's considered bad form), but if you ever want to make an AudioUnit Extension, the leaks will become an issue.

Timers are also a source of retain loops, as well as simply creating cycles between view controllers, etc.

You can use Xcode's Memory Graph Debugger to find them, though it's still not very easy.
I’ve been playing around with Synth One and I’m very impressed with it, but also kind of sad that it doesn’t seem to take advantage of MPE devices like the ROLI Seaboard and Blocks - I do see pitch changing a bit and velocity sort of works (needs some tuning, I think), but rich touch info seems to be ignored.