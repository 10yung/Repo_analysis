The current package.json uses a stripe package that is more than 3 years old. I want to start updating the cloud functions, and the first step to doing that is adding the newest functionality.

### How to reproduce these conditions

Use the exact code from the example, which imports the ui at 4.4.0

**Failing Function code used (including require/import commands at the top)**
the code fails at line 8 

'''
    <link rel="stylesheet" href="https://cdn.firebase.com/libs/firebaseui/4.4.0/firebaseui.css" />
'''
and line 110
'''
    <script src="https://cdn.firebase.com/libs/firebaseui/4.4.0/firebaseui.js"></script>
'''

Works fine with */firebaseui/4.3.0/firebaseui.js

**Screenshots**

### Expected behavior

It should look like the firestripe payforallthings example, but instead doesn't correctly allow for google auth.

### Actual behavior

<img width="997" alt="Screen Shot 2020-01-17 at 12 49 59 PM" src="https://user-images.githubusercontent.com/44684825/72578684-e022ad00-392a-11ea-8376-44555893cc3a.png">


Facing an issue with the firebase uppercase sample. On writing it back to firebase getting an error:
500 undefined: Getting metadata from plugin failed with error: Could not refresh the access token

Tried to google and follow the steps, including installing google-gax but no success.
### How to reproduce these conditions

I'm using the sample code as is: It builds and uploads and runs.
The thumb_ image can't be downloaded and just 'hangs' in the control panel.
I've tried .jpg and .png, small and large. All produce the same failure.
Logs say it ran 'ok'.  About 6 seconds for a 1 meg image.

Running latest software:

```
"engines": {
    "node": "10"
  },
  "dependencies": {
    "child-process-promise": "^2.2.1",
    "firebase-admin": "^8.6.0",
    "firebase-functions": "^3.3.0"
  }
```


firebase-tools are current.

Here is what the console looks like after an upload.  The original image uploads fine.
The generated thumb never presents an image or a link (though its name and size are correct)

![Screen Shot 2019-12-27 at 4 27 20 PM](https://user-images.githubusercontent.com/1890188/71536822-73d30180-28c8-11ea-9cae-cbd9b40d051d.png)

Function that triggers user firestore
and after the user has changed avatar id, the function checks: that such an id is in the user's photo collection or a non-empty id is set, otherwise it changes to the previous identifier
Added new cloud function

Function that triggers user firestore
and after the user has changed avatar id, the function checks: that such an id is in the user's photo collection or a non-empty id is set, otherwise it changes to the previous identifier
For months, I've seen this repository with amazing functions, and I would like to request your Team to include a function that checks the position of the image (EXIF profile) before it is uploaded to the storage bucket, this is a very specific issue with iPhones and other iOS devices when taking a picture in portrait mode, the thumbnails generated with the thumbnails function, would obviously export the thumbnail in the wrong direction (landscape). This however, does not happen with an Android mobile phone.

Best regards.
When i hit npm run start i get this error:

C:\Users\Mohit\Documents\GitHub\custom-auth-samples\instagram\app.js:145
      res.send({firebaseToken: );
                               ^

Please consider updating https://github.com/firebase/functions-samples/tree/master/nextjs-with-firebase-hosting to use https://nextjs.org/docs#serverless-deployment.

In particular I have found the [existing caveat](https://github.com/firebase/functions-samples/tree/master/nextjs-with-firebase-hosting#important--caveats) _Any npm modules dependencies used in the Next.js app (app/ folder) must also be installed as dependencies for the Cloud Functions project (functions folder)_ to be troublesome and am wondering if use of Next.js's serverless deployment may alleviate this.
Hello,

I am trying to work on a cloud function to automatically update google sheet when on adding data to the firestore database. Here is the code. I am following: https://github.com/firebase/functions-samples/blob/master/google-sheet-sync/functions/index.js.

const functions = require('firebase-functions');
const admin = require('firebase-admin');
admin.initializeApp();
const {OAuth2Client} = require('google-auth-library');
const {google} = require('googleapis');


const { Storage } = require('@google-cloud/storage');
const os = require('os');
const path = require('path');
const spawn = require('child-process-promise').spawn;

const db = admin.database();

const CONFIG_CLIENT_ID = functions.config().googleapi.client_id;
const CONFIG_CLIENT_SECRET = functions.config().googleapi.client_secret;
const CONFIG_SHEET_ID = functions.config().googleapi.sheet_id;

const CONFIG_DATA_PATH = functions.config().watchedpaths.data_path;

// The OAuth Callback Redirect.
const FUNCTIONS_REDIRECT = 'https://c39-mwk-dev.firebaseapp.com/oauthcallback';
// setup for authGoogleAPI
const SCOPES = ['https://www.googleapis.com/auth/spreadsheets'];
const functionsOauthClient = new OAuth2Client(CONFIG_CLIENT_ID, CONFIG_CLIENT_SECRET,
  FUNCTIONS_REDIRECT);

let oauthTokens = null;

// visit the URL for this Function to request tokens
exports.authgoogleapi = functions.https.onRequest((req, res) => {
  res.set('Cache-Control', 'private, max-age=0, s-maxage=0');
  res.redirect(functionsOauthClient.generateAuthUrl({
    access_type: 'offline',
    scope: SCOPES,
    prompt: 'consent',
  }));
});
    
  const DB_TOKEN_PATH = '/api_tokens';
  exports.oauthcallback = functions.https.onRequest(async (req, res) => {
    res.set('Cache-Control', 'private, max-age=0, s-maxage=0');
    const code = req.query.code;
    try {
      const {tokens} = await functionsOauthClient.getToken(code);
      // Now tokens contains an access_token and an optional refresh_token. Save them.
     // await admin.database().ref(DB_TOKEN_PATH).set(tokens);
      await admin.database().ref(DB_TOKEN_PATH).set(tokens);
      return res.status(200).send('App successfully configured with new Credentials. '
          + 'You can now close this page.');
    } catch (error) {
      return res.status(400).send(error);
    }
  });

  const SHEET_ID = 'My sheet ID';

  exports.appendRecordToSpreadsheet = functions.firestore.document('incident-report/{id}').onCreate(
    (snap, context) => {
        console.log('I am triggered');
      const newRecord = snap.data();
      console.log(newRecord);
      return appendPromise({
        spreadsheetId: SHEET_ID,
        range: 'A:C',
        valueInputOption: 'USER_ENTERED',
        insertDataOption: 'INSERT_ROWS',
        resource: {
          values: [[newRecord.firstColumn, newRecord.secondColumn, newRecord.thirdColumn]]
        },
      });
  });

  function appendPromise(requestWithoutAuth) {
    return new Promise((resolve, reject) => {
      return getAuthorizedClient().then((client) => {
        const sheets = google.sheets('v4');
        const request = requestWithoutAuth;
        request.auth = client;
        return sheets.spreadsheets.values.append(request, (err, response) => {
          if (err) {
            console.log(`The API returned an error: ${err}`);
            return reject(err);
          }
          return resolve(response.data);
        });
      });
    });
  }


// checks if oauthTokens have been loaded into memory, and if not, retrieves them
async function getAuthorizedClient() {
  if (oauthTokens) {
    return functionsOauthClient;
  }
  const snapshot = await admin.database().ref(DB_TOKEN_PATH).once('value');
  oauthTokens = snapshot.val();
  functionsOauthClient.credentials = oauthTokens;
  return functionsOauthClient;
}


I get this error:

TypeError: Cannot read property 'access_token' of null
    at OAuth2Client.getRequestMetadataAsync (/srv/node_modules/google-auth-library/build/src/auth/oauth2client.js:247:24)
    at OAuth2Client.requestAsync (/srv/node_modules/google-auth-library/build/src/auth/oauth2client.js:336:34)
    at OAuth2Client.request (/srv/node_modules/google-auth-library/build/src/auth/oauth2client.js:330:25)
    at createAPIRequestAsync (/srv/node_modules/googleapis-common/build/src/apirequest.js:248:27)
    at Object.createAPIRequest (/srv/node_modules/googleapis-common/build/src/apirequest.js:44:9)
    at Resource$Spreadsheets$Values.append (/srv/node_modules/googleapis/build/src/apis/sheets/v4.js:320:37)
    at getAuthorizedClient.then (/srv/index.js:111:43)
    at <anonymous>
    at process._tickDomainCallback (internal/process/next_tick.js:229:7)

How can I solve this problem? I am a beginner.