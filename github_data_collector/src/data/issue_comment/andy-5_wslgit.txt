Relative paths to files check if the file exist on the file system to determine if it is a path and not a RegEx. This is of course not working for deleted files, eg `git checkout -- deleted\file.txt`.

`--` could be used to detect if the following arguments are paths, but the use of `--` is not mandatory. Maybe it will work in most cases? (And is `--` only used before paths???)

Setup:

I'm running VScode with WSL, but with WSL in a non-standard mount path -- WSL installed on a `D:\` drive. In particular, my WSL is installed under `D:\Ubuntu-1804-LTS\Ubuntu`. 

I have WSL installed as a terminal in VScode and git working fine inside WSL -- ssh keys and all. 

wslgit is installed and working as `D:\wslgit.exe`

Problem:

When trying to perform git operations,  wslgit.exe tries to use the whole mount path,  as follows:

````
Looking for git in: D:\wslgit.exe
Using git 2.17.1 from D:\wslgit.exe
> git rev-parse --show-toplevel
bash: cd: /mnt/d/Ubuntu-1804-LTS/Ubuntu/rootfs/home/fotel/_AWS/GitHub/hackmd-notes: Permission denied
> git rev-parse --show-toplevel
bash: cd: /mnt/d/Ubuntu-1804-LTS/Ubuntu/rootfs/home/fotel/_AWS/GitHub/hackmd-notes/aws: Permission denied
> git rev-parse --show-toplevel
> git rev-parse --show-toplevel
> git init
bash: cd: /mnt/d/Ubuntu-1804-LTS/Ubuntu/rootfs/home/fotel/_AWS/GitHub/hackmd-notes: Permission denied
````

The `permission denied` issue is b/c it's not possible to traverse "rootfs" from inside WSL. 

Proposed solution: 

Please adjust the path parsing logic such that, if it contains `rootfs`, all previous path -- up and inculding `rootfs` -- are simply replaced with `/`.   In my case have ` /mnt/d/Ubuntu-1804-LTS/Ubuntu/rootfs/` simply replaced with `/` 

If this is a known problem and a solution already exists, please advise. 

LMK if you need any additional info.

Thanks, 

/Florian
Just installed the latest insider build 18970 with Ubuntu 18.04 on WSL2 with .zsh and running wslgit.exe from PowerShell just opens a new bash session. Please see screenshot below
![image](https://user-images.githubusercontent.com/6060545/64235649-54aeff00-cee8-11e9-9e56-c70798c58135.png)

Edit: tried to set Windows environment WSLGIT_USE_INTERACTIVE_SHELL variable to 0 and it didn't works the same way 


The insider build for 1903 has a new functionality that allows browsing files on WSL from explorer. The paths look like `\\wsl$\Ubuntu\home\alecxvs\Git\myproject`.

Running wslgit from this path gives this error:
`thread 'main' panicked at 'Cannot handle path "\\\\wsl$\\Ubuntu\\home\\alecxvs\\Git\\myproject"', src\libcore\option.rs:1008:5`
![sourcetree](https://user-images.githubusercontent.com/4201835/49124413-a7ee8400-f2bc-11e8-9d94-2a2cfd0481be.png)

Do not know if this has to do anything with the issue #37, but may be.
When trying to set up wslgit as an executable git for Git Extensions, it does not show contents of repositories. Command log from GE looks like this http://prntscr.com/lh7tdq.
I am used to use Git Extensions GUI, but will be happy to force WSLgit work with any other Windows git GUI. Any ideas?
I do not know where the error or command is not working correctly.
I think phpstorm use "git log". 
Video: https://yadi.sk/i/91cu-JL-yzmGyQ
(wgit = wslgit.exe)
Windows 1809. Ubuntu 18.05.
#### Background

While working on a Git project I noticed that when trying to annotate a file (GUI equivalent of `git blame`), one of three things can happen, depending on file being annotated:

1. File gets annotated without any problems,
2. An error is shown with message "Number of lines annotated by Git is not equal to number of lines in the file. Check file encoding and line separators"; when clicking to display it anyway it is truncated at around half the length of said file,
3. IDE errors out with message along the lines of "Error: Unexpected text end at 24566".

Java unit test files seem to cause the most trouble, probably due to their file/line length, and number of contributors/revisions.

Probably similar to #28...?

#### System info

wslgit version 0.6.0 official .exe, not additionally configured in any way

WSL: Ubuntu 18.04, Windows 10 Pro build 1803, 17134.228  
Default shell changed to zsh

-------

I haven't tried any debugging (to see which command is actually issued to wslgit), or setting `WSLGIT_USE_INTERACTIVE_SHELL=false` yet (don't know if it will even make sense in this case). I'll try later to reproduce it on my second PC, since it has the same WSL config.
When a process in Windows runs WSLgit and passes a locale variable (e.g. LC_ALL, LANG, etc.) on that spawn, that variable is not passed to WSL. Therefore, the specific locale requested for Git is ignored and can lead to errors as in in https://github.com/eamodio/vscode-gitlens/issues/276

This is due to environment variables set in Win32 not being seen in WSL. Good news. This does become possible in Windows 10 build 17063 by configuring the `WSLENV` variable as in https://blogs.msdn.microsoft.com/commandline/2017/12/22/share-environment-vars-between-wsl-and-windows/

Here are two ideas to resolve this. Any others?

1. Close this issue as won't fix and keep it for people to find/learn from later. Unfortunately, isolating the cause of the errors will be difficult because the error is from some Windows process yet caused by an interaction between WSLgit and WSL. I only am aware of it because I was the OP on that GitLens issue above.
2. Update the WSLgit code to configure the WSLENV variable for any found `LANG` or `LC_xxx` environment variables. While this will resolve locale, it feels somewhat "chasing a neverending problem" because there are more environment variables on which Git responds. For example, GitLens sets three here https://github.com/eamodio/vscode-gitlens/commit/6889e2aa576ee6591621e2bce7a6f3ed7a864bb4 and all are being dropped by WSLgit