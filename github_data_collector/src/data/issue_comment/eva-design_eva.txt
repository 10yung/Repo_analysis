Perhaps it makes sense to introduce arrays in token values for cases like: 
1. ```borderWidth: [0, 0, 1, 0]```
2. ```margin: [0, 6, 0, 6]```
3. etc.

This can help us to more “deeply” customize some components to mimic other design systems.
- add ts-node script that generates control parameter type definitions 
- Fixes js mapping generation scripts
- Fixes mapping customization scripts

We are a Windows shop here. .NET, C#, Angular.
Providing the design system only for Sketch prevents our company from using your Nebular product. Our designers cannot use any of your design assets.

Any plans to make this work for the Adobe suite?
We can add an Icon to an Input component, but there is no design system predefined rules on feedback icon press feedback. Related issue: https://github.com/akveo/react-native-ui-kitten/issues/451
I am not sure if this is the right place for this or if this is something you would even consider to be as within the scope of the project but I wanted to propose that while we have an Angular implementation of the components that it might also be beneficial to develop a native Web Components implementation that was framework agnostic.

The main benefits as I see it would be:

1. Native Web Components would allow each component to be integrated with any of the main front end frameworks not just Angular thus improving the potential reach and impact of the project.
2. It also allows the use of the components **without** any kind of framework and could just be used with nothing more than native browser APIs.
3. All the obvious future proofing of the project that would come as a result of points 1 and 2 above.


I was reviewing the code of the design system, and I realized that is a good idea create a tool for generate themes and new mappings automatically.
It could be created a tool that receive a JSON in a specific format and generate a new eva/design theme and then upload this new theme and mapping to a centralized repository, right?

I'm very exited with the UI library for React Native, and I wolud like to help to grow this project! :D

So, tell me if this approach exist in the roadmap of this project or if is possible help with a PR.
**Report**
![image](https://user-images.githubusercontent.com/230527/59453970-c7dd3380-8e19-11e9-8ee0-2c381033dd72.png)


**Reason**
Multiple Users requests

**Mapping Changes**
No.

- [ ] Design OK
- [ ] Mobile OK
- [ ] Web OK


**Report**
Checkbox, inputs, etc disabled colors are too light. Simply saying, it makes it very hard to see the elements.

**Reason**
Multiple Users requests

**Mapping Changes**
TBD (changes in themes and in the mappings)

- [ ] Design OK
- [ ] Mobile OK
- [ ] Web OK

