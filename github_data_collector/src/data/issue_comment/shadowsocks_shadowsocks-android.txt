It seems `0.0.0.0` is part of spoofed IP addresses now. (update: `127.0.0.1` as well)

```
> nslookup www.google.com 223.5.5.5
Server:  public1.alidns.com
Address:  223.5.5.5

Name:    www.google.com
Addresses:  2001::4b7e:7ca2
          0.0.0.0
```

But shadowsocks-android build-in DNS resolver can't filter it away. 

Because we have:

https://github.com/shadowsocks/shadowsocks-android/blob/11a0ecd95e162c70c318cd09e0e5bd545b43ea1e/core/src/main/assets/acl/bypass-lan-china.acl#L3-L4

https://github.com/shadowsocks/shadowsocks-android/blob/11a0ecd95e162c70c318cd09e0e5bd545b43ea1e/core/src/main/java/com/github/shadowsocks/net/LocalDnsServer.kt#L133

Affected route mode: 
Bypass LAN, 
Bypass LAN & mainland China
GFW List

Got err, for example, when testing server latency: `Fail to detect internet connection: Fail to connect to www.google.com/0.0.0.0:443`

Tested on shadowsocks-android version: 5.0.1




Please read contributing guidelines. Thanks.

**Is your feature request related to a problem? Please describe.**
ndk release compile flags is just "-O2" with nothing else. most android phone processor is  compatible with cortex-a53. let's set another cflag "-mcpu=cortex-a53"

I have build the official benchmark of mbedtls with ndk-r20 and tested several cflags combination on my mobile phone.
Here is the result table.
|                        |   aes-128-gcm | aes-192-gcm | aes-256-gcm |  chachapoly    |  binary_size|
|----------------|---------------|---------------|-------------|-------------|------------|
|default(O2)      |   69398 KiB/s   | 68241 KiB/s   | 64930 KiB/s    | 180535 KiB/s  |    100%|
|O2+a53           |   71145 KiB/s   | 69702 KiB/s   | 66283 KiB/s    | 181584 KiB/s  |    100%|
|O2+a55           |   71422 KiB/s   | 69611 KiB/s   | 66230 KiB/s    | 179028 KiB/s  |    100%|
|O3                   |  70269 KiB/s    | 68852 KiB/s   | 65445 KiB/s    | 185508 KiB/s  |    119%|



**Describe the bug**
I started to use an online gfwlist rule hosted on `github.com` since the hardcoded gfwlist inside `shadowsocks-android` stopped updating a few years back.
Yet under some cellular network (e.g. China Mobile Hangzhou), the DNS resolve for `githubusercontent` has been jeopardised.

**Expected behavior**
If it's possible, maybe we can postpone the procedure -- by connecting to the remote server first, then fetch a remote acl rule using the proxy.



**Describe the bug**
Bypass LAN doesn't work.

**To Reproduce**
Select an available server, profile use "Bypass LAN and mainland China", open your router web manager page under WIFI.

**Expected behavior**
I can open this page.

**Screenshots**
None

**Smartphone (please complete the following information):**
Android 10 Pixel 3
Andoird 10 Emulator
Shadowsocks is latest beta version

**Configuration**
Put an `x` inside the [ ] that applies.

* [x] IPv4 server address
* [ ] IPv6 server address
* [x] Client IPv4 availability
* [ ] Client IPv6 availability
* Encrypt method:
* Route
  * [ ] All
  * [ ] Bypass LAN
  * [ ] Bypass China
  * [x] Bypass LAN & China
  * [ ] GFW List
  * [ ] China List
  * [ ] Custom rules
* [ ] IPv6 route
* [ ] Apps VPN mode
  * [ ] Bypass mode
* Remote DNS: 8.8.8.8
* [ ] DNS over UDP
* Plugin configuration (if applicable):
* [x] Auto Connect
* [ ] TCP Fast Open
* If you're not using VPN mode, please supply more details here:

**Additional context**
None
**Is your feature request related to a problem? Please describe.**
I'm using tunnel for selected apps on phone to connect home private cloud servers with lan address. The ss server is installed on a router with DDNS setup. The WAN connection on router was with dynamic IP.
The tunnel was inaccessible every time WAN IP changes.

**Describe the solution you'd like**
Would be nice if there's an option optimized for connect ss servers with DDNS.

**Describe alternatives you've considered**
Force DNS resolve every n seconds.
Kill and restart the android client app with some task manager while DNS change detected. Need an option to start selected profile on app start.

https://github.com/shadowsocks/shadowsocks-android/issues/1328
I currently use Tasker to turn off Shadowsocks on standby to avoid this problem, but the TV client does not support the Tasker plugin.

Add Tasker plugin support to the TV client, just like the Android version.

Problem causes
https://github.com/CiNcH83/bravia_atv2/issues/27
Hi! 

I'm working on ultimate kotlin formatting tool called [blue](https://gitlab.com/grihabor/blue/). I'd like you to have a look at it, so I've formatted the projects with this tool.
节点列表中的部分节点可能会出现不可用的情况，需要全部测试可用性，但是手动测试费时费力
https://tools.ietf.org/html/rfc7766

CC @shawn1m
I have a Nvidia Shield TV running Oreo. I upgraded from v4.5.7 to the latest v4.6.4. 
Immediately after upgrading, I noticed there were no way to add server information manually. And the import function does not seem to work either. These combined, practically rendered this release unusable. I have reverted back to v4.5.7.
The UI design in the new TV dedicated version is so much more user friendly when using a remote control. It's a shame to see it not working as it should. I hope this minor issue could be fixed in the next release.

Please read contributing guidelines. Thanks.

**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is. Ex. I'm always frustrated when [...]

**Describe the solution you'd like**
A clear and concise description of what you want to happen.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.

**Additional context**
Add any other context or screenshots about the feature request here.
