I added the option --bytes to show size as bytes. Enables further scripting with the numbers.
I followed the path used in the README which is a subdirectory of the output path, but nothing is getting created and there's no error message. The subdirectory doesn't exist but I'd expect that it would be created. If I have just the name of a path then the file gets produced.
Is there any way the output can be split out by the bundle? I'm not currently sure how to use this in a multi-chunk webpack build.
Hi!
I tried running webpack-bundle-size-analyzer against the output generated by my app for the first after some iterations, and was surprised by the following error:

```
Î» webpack --json --verbose | webpack-bundle-size-analyzer
C:\Users\gustavo\AppData\Roaming\npm\node_modules\webpack-bundle-size-analyzer\build\src\size_tree.js:136
        return stats.children.map(bundleSizeTree);
                             ^

TypeError: Cannot read property 'map' of undefined
    at Object.dependencySizeTree (C:\Users\gustavo\AppData\Roaming\npm\node_modules\webpack-bundle-size-analyzer\build\src\size_tree.js:136:30)
    at printStats (C:\Users\gustavo\AppData\Roaming\npm\node_modules\webpack-bundle-size-analyzer\build\src\cli.js:14:30)
    at Socket.<anonymous> (C:\Users\gustavo\AppData\Roaming\npm\node_modules\webpack-bundle-size-analyzer\build\src\cli.js:43:50)
    ...
```

One change I made was to hide most stats from the webpack logs with the `stats` key my `webpack.config.js`:

```js
stats: {
    assets: true,
    children: false,
    chunks: false,
    errors: true,
    errorDetails: true,
    modules: false,
    timings: true,
    colors: true
}
```

Obviously this was the cause of the error above.
The only thing I found to work is to remove these. I haven't tried any combination of webpack CLI flags apart from `--verbose --json` (which didn't work).

It would be nice to document this problem and how to solve it, so others don't get into this trap as well.
And if you know about a more elegant way around this, let me know!
My webpack config has multiple entry points and bundles. It would be nice to see the size for each one. Right now the analyser just shows the size of what I think is the first one and doesn't indicate which one.
Would be great to add something like https://github.com/sindresorhus/gzip-size to the output to see real-world increases.

I've been using webpack-bundle-size-analyzer for a while now, and it's been working great.

I have however recently noticed that some packages are not showing up anywhere in my analyzer results. I'm fairly certain this is related to the fact that I recently started using code-splitting with webpack (https://webpack.github.io/docs/code-splitting.html) 

For example, I have a reports page that when accessed, dynamically loads a bundle which uses the d3.js npm package to show some charts, yet d3.js is not showing up anywhere in the analyzer results. If I add an import of d3.js to my main bundle, it starts showing up in the analyzer results again.

Any advice on how to resolve this would be greatly appreciated. I've checked the output from webpack -p --json and I am seeing d3.js mentioned when it's loaded in the code-split bundle. I can provide more specific info / snippets from the webpack json output etc. if that helps.
