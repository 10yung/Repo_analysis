Dear Canlab team,

When I try to run the canlab_glm_subject_levels function I get the following error: 'undefined function 'canlab_spm_fmri_model_job' for input arguments of type 'cell''. 

The problem seems to be that this function is missing (from the matlab path). However, upon checking I cannot find this function (as well as the function 'canlab_spm_contrast_job_luka') in any of the canlab repositories. Is this correct? 

I added a screenshot of the DSGN.mat variables in case the error may come from there.

Many thanks in advance,

Jelle

![DSGN](https://user-images.githubusercontent.com/22050059/71787182-01bf9280-3015-11ea-9ee6-e7265cc28b90.png)







Hello there,

I was recently trying a glmfit. I tested the example given in the help for the function (glmfit_multilevel) and I get the following error. It seems that  the error is rather deep in the code and I am not good enough with statistics to determine how to fix this. Has something changed since the example was written and tested?

```
Undefined operator '*' for input arguments of type 'cell'.

Error in glmfit_general>get_weights_based_on_varcomponents (line 506)
SSW = dfwithin' * s2within; % 1 x nvars, within-subjects sum sq. errors. dfwithin must be row vector

Error in glmfit_general (line 147)
[W, btwn_var_est] = get_weights_based_on_varcomponents(s2within, s2between_ols, dfwithin, verbose);

Error in glmfit_multilevel (line 232)
stats = glmfit_general( ...
```

Many thanks,
Rob
Hi, 
I have an fMRI dataset that I preprocessed using SPM12. Now, I would like to perform multilevel glm with the 'glmfit_multilevel.m' script. However, when I use the example data (as defined in lines 69-81 of the glmfit_multilevel.m), I receive the following errors:

Undefined operator '*' for input arguments of type 'cell'.

Error in glmfit_general>get_weights_based_on_varcomponents (line 506)
SSW = dfwithin' * s2within;             % 1 x nvars, within-subjects sum sq. errors. dfwithin must be row vector

Error in glmfit_general (line 147)
        [W, btwn_var_est] = get_weights_based_on_varcomponents(s2within, s2between_ols, dfwithin, verbose);

Error in glmfit_multilevel (line 232)
      stats = glmfit_general( ...


Thanks very much in advance.

Ezgi
In some but not all cases, resample_space causes an image to be shifted left/right / in the axial plane by a few mm. I have not figured out the boundary conditions of when this happens and when it does not happen. Here is an example of when it happens: 

![image](https://user-images.githubusercontent.com/4513934/60210158-2f3bb000-982a-11e9-8fe5-051197fb0614.png)

The top is the original image. The bottom is resampled to a new space -- notice how the image has been shifted right. In my testing, this occurrence of this bug may depend more on the target space being sampled to, rather than the resampling algorithm, but more testing is needed to better understand this.

Here is the code to recreate the bug:
```
limbicmask = fmri_data(fullfile(repodir, 'data', 'Etienne2016modules.nii'))
limbic_rs = resample_space(limbicmask, gbt, 'nearest');
orthviews_multiple_objs({limbicmask, limbic_rs})
```

Contact me directly for the brain imaging files used to above to reproduce the bug; I don't have permission to post them publicly. Using other files, the bug may or may not appear.

running `addbrain('surface left)` or `addbrain('surface right')` returns:
`I need the file: L.pial_MSMAll_2_d41_WRN_DeDrift.32k.mat`

From the documentation, this is the template "from Glasser et al. 2016 Nature based on the Human Connectome Project." Is it intended to be included in CanlabCore?

Upon running the `canlab_toolbox_setup` I get this warning

```
Warning: Function vecnorm has the same name as a MATLAB builtin. We suggest you rename the function to avoid a
potential name conflict. 
> In path (line 109)
  In addpath (line 96)
  In canlab_clone_github_repository (line 164)
  In canlab_toolbox_setup (line 179) 
```

Might be worth renaming it to avoid name-space collision.
Resample space incorrectly transforms data if written in any order other than x, y, z dimensions. The transformation assumes this order, but it is not necessarily the case.
Hi there,

I’m trying to verify that the results I get from glmfit_multilevel and that I get from lme4 and nlme in R are the same, but I am finding that they are not.  My model has one continuous predictor and one categorical predictor, both on level 1, and I can include a continuous interaction as well.  I’m new to using glmfit_multilevel, but have been using R for years, so am wondering how glmfit_multilevel computes betas and SE that is different from the R packages.  I’ve attached a reproducible example.  Any clarification on this would help.

Thanks in advance,

Liz







[Glmfit_multilevelvsR.zip](https://github.com/canlab/CanlabCore/files/1916423/Glmfit_multilevelvsR.zip)

Dear Canlab group, thank you for this great toolbox! I am using your scn_session_spike_id function and it works very nicely. 
However, using the default MADs value of 10, quite many of my volumes are identified as containing spikes (up to 10 % from one session). This made me wonder what your rationale was for setting this default threshold? I first thought that I could simply find the correct threshold by determining the critical chi-square value for a desired probability level and the degrees of freedom. Then I saw that in your function the MADs threshold is not applied directly to the calculated mahalanobis distances in d2 (I guess given the degrees of freedom it would also have to be much higher than 10 in this case anyways) but rather as a cutoff for deviation of these d2 values from a moving average. Can you give a recommendation what criteria to use if one wants to change the default MADs value?

Many thanks in advance!

Teresa