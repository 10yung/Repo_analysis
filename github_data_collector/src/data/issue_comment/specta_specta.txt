### Motivation

Brute force fix for:

* Bad access in SPTSharedExampleGroups #225

### Test

I don't know if this breaks existing tests because tests do not run.

* No visible @interface for 'XCTestSuite' declares the selector 'run' #223
### Reproduce

* Xcode 9.2, 9.3, 9.4 beta
* macOS Sierra, High Sierra

1. Pull [calabash-ios-server](https://github.com/calabash/calabash-ios-server) develop/ branch
2. Update code sign settings for the XCTest target to match your signing environment
3. Run an individual XCTest via the Xcode UI until the crash happens (takes 2 - 3 tries)

### Expected

Tests to complete.

### Found

Bad access in 
[SPTShareExampleGroups.m#L28](https://github.com/specta/specta/blob/f572fa1a4e5d76462e3775ec12a99aa9737648d4/Specta/Specta/SPTSharedExampleGroups.m#L28)

### Analysis

```
        if (numClasses > 0) {
            classes = (Class *)malloc(sizeof(Class) * numClasses);
            numClasses = objc_getClassList(classes, numClasses);

            Class klass, superClass;
            for(uint i = 0; i < numClasses; i++) {
                klass = classes[i];
                    superClass = class_getSuperclass(klass);
                    if (superClass == SPTSharedExampleGroupsClass) {
                            [[[klass alloc] init] sharedExampleGroups];
                        }
                    }
                }
            }
            free(classes);
        }
```

I believe classes are being dealloc'd during the loop.

I am not sure what this code is trying to accomplish.  Skipping the loop appears to have no effect on Specta.
No visible @interface for 'XCTestSuite' declares the selector 'run'
![machi 2017-10-20 17-00-16](https://user-images.githubusercontent.com/7850978/31813243-494dfc5a-b54b-11e7-8e99-af76c6716d16.png)
It's okay on Xcode 8.3.3, but in Xcode 9, tests failed shows in the picture.
Some test are skipped in a random way. It happens what the editing and undoing operations affects to this behavior even if in the result the code still be the same.
Product cleaning doesn't help.
Xcode 8.2.1
Gif:
![spectabug](https://user-images.githubusercontent.com/6689478/28414070-2630d52c-6d74-11e7-87d6-183d6d842a79.gif)


Here is the code:

```
#import <Specta/Specta.h>

SpecBegin(TEST)

describe(@"TEST", ^{

    
    it(@"test1", ^{
        NSLog(@"1111");
    });
    
    it(@"test2", ^{
        NSLog(@"2222");
    });
    
    it(@"test3", ^{
        NSLog(@"3333");
    });
    
    it(@"test4", ^{
        NSLog(@"4444");
    });
    
    it(@"test5", ^{
        NSLog(@"5555");
    });
    
    afterEach(^{

    });
    
    afterAll(^{
        
    });
    
});
SpecEnd

```

I recently found an `fdescribe` checked into a project. Our continuous integration showed all the tests as passing, so it looked like everything was in good order even though only about 2% of tests were being run.

I'm wondering if it would make sense to, when an `fdescribe` or `fit` are in the suite, mark other tests as either failing or pending to make it more obvious that only a subset of the tests were run.

(Yes, I'll be adding a [Danger](https://github.com/danger/danger) rule to prevent this in the future...)
Sometimes you have unit-tests failing 'randomly' due to dependencies between tests. SPECTA_SHUFFLE as an environment variable is a nice feature to detect issues like these but it would be a nice additional feature to have a second env-variable to set a repeat count similar to encapsulating your context() or fit() in a for-loop.

The XCTest API changed a little but, but nothing massive, this agrees to all of the apple migration update thingies too.

I'm getting this error when trying to run a test with a tvOS app.

`target 'Specta' has bitcode disabled (ENABLE_BITCODE = NO), but it is required for the 'appletvos' platform`

I noticed that Bitcode was disabled in 1.0.5 at the same time that tvOS support was introduced, which I thought was odd since tvOS requires Bitcode to be turned on. (FYI I'm using Cocoapods 1.0.0beta.2. I'm also getting the same error on Expecta.)

I've found that clicking on the test result arrow:
![test result](https://cloud.githubusercontent.com/assets/5221/10302323/eb03bd5e-6c56-11e5-839b-6dd1075a4052.png)
in the Xcode Test Reports UI takes me directly to the right code for `XCTestCase` tests, but doesn't do anything for individual `Specta` tests.

The arrow buttons for the spec files themselves work correctly for Specta test files.

Using Xcode 7.0.1 and Specta 1.0.4.
