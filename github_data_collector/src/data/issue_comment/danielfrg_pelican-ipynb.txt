I am trying to output some notebooks containing some HoloViews visuals, and I finally got something working after including both requireJS and JQuery in my base.html file. 
While this work, it messes up another graphic I have on my page. I noticed in another issue #75 
you mention the requireJS. But is it correct to put it in base.html? Or is there anyway to only associate that with the html generated from the notebook? 
Where you say

> First, enable the "metacell" mode globally in your config
> IPYNB_USE_METACELL = True

which config file do you refer to?
Thanks for a great tool. I have a problem where markdown table headers disappear (they're there in the output source, but seem to get assigned 0 height).

Here is an example table (I also made a [test](https://gist.github.com/jooh/66240e310e2f8f4cf22eec5ed5ccdc90) notebook). I have the following markdown in a jupyter notebook cell:

```
| statistical test | null true | null false |
| :--- | :--- | :--- |
| **significant**     |  $\alpha$ false positive rate, false alarm  | $1-\beta$ power, sensitivity, recall, hit |
| **not significant** | $1-\alpha$ specificity, precision, correct rejection | $\beta$ false negative rate, miss |
```
The header row disappears in the rendered output with default options (this is on the pelican-bootstrap3 pelican theme with the lumen bootstrap theme):

<img width="576" alt="Screenshot 2019-09-25 at 16 12 33" src="https://user-images.githubusercontent.com/1559987/65614883-51bba180-dfb0-11e9-8607-6a70d066aca3.png">

Unless I set `IPYNB_FIX_CSS = False`:

<img width="687" alt="Screenshot 2019-09-25 at 16 13 20" src="https://user-images.githubusercontent.com/1559987/65614922-6ac45280-dfb0-11e9-9380-56535faddcf1.png">

Or alternatively, `IPYNB_SKIP_CSS = True`:

<img width="584" alt="Screenshot 2019-09-25 at 16 29 16" src="https://user-images.githubusercontent.com/1559987/65615675-a875ab00-dfb1-11e9-901b-e21fd96dfadc.png">

I take this to mean that the notebook CSS is ok, but the 'fix' CSS somehow includes setting thead to zero height. How do I control this behavior?
Inside Jupyter notebook, I want to embed image files. The tree for image files are like this:

my_blog > content > images > mobile_1.jpg
my_blog > content > images > mobile_2.jpg

I want to refer to my static image files using `{{ SITEURL }}` argument. But when I use `{{ SITEURL }}`, or any other `pelicanconf.py` variables inside Jupyter like this,

```
<div class="row">
    <div class="col-4"><img src="{{ SITEURL }}/images/mobile_1.jpg"></div>
    <div class="col-4"><img src="{{ SITEURL }}/images/mobile_2.jpg"></div>
</div>
```

and run `pelican content`,  get the following warning message

`WARNING: Replacement Indicator '{ SITEURL ' not recognized, skipping replacement`

And the SITEURL was indeed not passed into the HTML file rendered using Jupyter. Is there anyway that I can pass variables `pelicanconf.py` into Jupyter?
When I try to use pelican to generate content from a ipynb file I always get the above error.
The `<body>` tag wrapped around the content when generating a summary (I assume for good reason) also turn up in the content of the post itself, where they don't belong.

This is the change I propose to fix it:

    diff --git a/markup.py b/markup.py
    index 56aba92..0651f4c 100644
    --- a/markup.py
    +++ b/markup.py
    @@ -117,11 +117,11 @@ class IPythonNB(BaseReader):
                 parser = MyHTMLParser(self.settings, filename)
                 if isinstance(content, six.binary_type):
                     # unicode_literals makes format() try to decode as ASCII. Enforce decoding as UTF-8.
    -                content = '<body>{0}</body>'.format(content.decode("utf-8"))
    +                wrapped_content = '<body>{0}</body>'.format(content.decode("utf-8"))
                 else:
                     # Content already decoded
    -                content = '<body>{0}</body>'.format(content)
    -            parser.feed(content)
    +                wrapped_content = '<body>{0}</body>'.format(content)
    +            parser.feed(wrapped_content)
                 parser.close()
                 # content = parser.body
                 metadata['summary'] = parser.summary
    
as title

I tried but I failed
I don't know what I am doing wrong, 

I want to use jupyter notebook as a blog post and I applying **Mode A**/  **option 3**

I do this inside a jupyter notebook ... from edit > edit notebook meta data 

then I insert what is required  ... 

the problem is the this sometimes work and sometimes does not work and I get this error messege
CRITICAL: TypeError: object of type 'NoneType' has no len()

If notebook contain the links to another notebook (with `Link to [Math](09_Math.ipynb)`), plugin doesn't convert it to `<a href="09_Math.html">Math</a>`.

Could it be done?
Some nbextensions modules are very useful, like [python-markdown](https://github.com/ipython-contrib/jupyter_contrib_nbextensions/tree/master/src/jupyter_contrib_nbextensions/nbextensions/python-markdown) that allows you to include inline Python code in Markdown cells.

I have added a support for nbextensions in my fork of pelican-ipynb. One problem though is that it uses shell command to run the conversion code. Let me know if there is a better way to do this or otherwise merge my fork.

I have also added a feature to copy attachment images into the `output` directory.