If configuring the stack Nginx (SSL 443) -> Varnish (6081) -> Nginx with PageSpeed (8080), how to serve .pagespeed. rewritten files? As I see Varnish returning the page with URLs rewritten but it's not found physically. Looks like it stays at 8080 VirtualHost that unavailable from public net.
Any solutions to workaround this?  
I tried a number of ideas to reduce my FCP time but still nothing happening, first, I was using Linode Virtual Machine with Apache, then FCP was around 3.2 Sec, but when I started using Google Virtual Machine with Nginx, FCP goes 3.7 sec, here is the screenshot of the website speed. 

Anyone can tell, is google telling right FCP?
<img width="782" alt="speed screenshot" src="https://user-images.githubusercontent.com/38814070/70977691-6f426800-20d4-11ea-8c1d-77f2174a820e.png">

The docker patch can not use in Alpine 3.10

```
Applying patch automatic_makefile
patching file pagespeed/automatic/Makefile

Applying patch libpng16
patching file net/instaweb/rewriter/image.cc
Possibly reversed hunk 1 at 1438
Hunk 1 FAILED 21/21.
 #include <algorithm>
 #include <cstddef>

+extern "C" {
+#ifdef USE_SYSTEM_ZLIB
+#include "zlib.h"
+#else
+#include "third_party/zlib/zlib.h"
+#endif
+}  // extern "C"
+
 #include "base/logging.h"
 #include "net/instaweb/rewriter/cached_result.pb.h"
 #include "net/instaweb/rewriter/public/image_data_lookup.h"
Hunk 1 FAILED 411/411.
   png_uint_32 height = png_get_image_height(paletted_png_ptr,
                                             paletted_info_ptr);
   for (png_uint_32 row = 1; row < height; ++row) {
-    memcpy(paletted_info_ptr->row_pointers[row],
-           paletted_info_ptr->row_pointers[0],
+    memcpy(row_pointers[row],
+           row_pointers[0],
            row_size);
   }

Possibly reversed hunk 1 at 508
Hunk 1 FAILED 30/30.
 #else
 #include "third_party/libpng/src/png.h"
 #endif
+
+#ifdef USE_SYSTEM_ZLIB
+#include "zlib.h"
+#else
+#include "third_party/zlib/zlib.h"
+#endif
 }  // extern "C"

 #include "base/logging.h"
Possibly reversed hunk 1 at 1395
Hunk 1 FAILED 36/36.
 #else
 #include "third_party/libpng/src/png.h"
 #endif
+
+#ifdef USE_SYSTEM_ZLIB
+#include "zlib.h"
+#else
+#include "third_party/zlib/zlib.h"
+#endif
 }

 namespace {
Hunk 1 FAILED 22/22.
           'dependencies': [
             '../zlib/zlib.gyp:zlib',
           ],
+          'actions': [
+            {
+              'action_name': 'copy_libpngconf_prebuilt',
+              'inputs' : [],
+              'outputs': [''],
+              'action': [
+                'cp',
+                '-f',
+                '<(DEPTH)/third_party/libpng/src/scripts/pnglibconf.h.prebuilt',
+                '<(DEPTH)/third_party/libpng/src/pnglibconf.h',
+              ],
+            },
+          ],
           'msvs_guid': 'C564F145-9172-42C3-BFCB-6014CA97DBCD',
           'sources': [
+            'src/pngpriv.h',
             'src/png.c',
             'src/png.h',
             'src/pngconf.h',
+            'src/pngdebug.h',
             'src/pngerror.c',
-            'src/pnggccrd.c',
             'src/pngget.c',
+            'src/pnginfo.h',
             'src/pngmem.c',
patching file pagespeed/kernel/image/gif_reader.cc
patching file pagespeed/kernel/image/image_converter.cc
patching file pagespeed/kernel/image/png_optimizer_test.cc
patching file third_party/libpng/libpng.gyp
             'src/pngpread.c',
             'src/pngread.c',
The command '/bin/sh -c for i in *.patch; do printf "\r\nApplying patch ${i%%.*}\r\n"; patch -p1 < $i || exit 1; done' returned a non-zero code: 1
```
These parameters always false:
pagespeed ImagePreserveURLs true;
pagespeed CssPreserveURLs true;
pagespeed JsPreserveURLs true;

I'm checked sources and got that these options exist in Apache version of PageSpeed but not in Nginx version. 
Hi guys,

I'm 99% there with our Pagespeed config file. Just the SVG file URLs don't map to the CDN. All other static files do, CSS, JS, webp, jpg etc but simply not the SVG's which we use quite a lot.

```

<!--
<!--
mod_pagespeed on
Filters:
ah  Add Head
cc  Combine Css
jc  Combine Javascript
gp  Convert Gif to Png
jp  Convert Jpeg to Progressive
jw  Convert Jpeg To Webp
mc  Convert Meta Tags
pj  Convert Png to Jpeg
ws  When converting images to WebP, prefer lossless conversions
db  Debug
ec  Cache Extend Css
ei  Cache Extend Images
es  Cache Extend Scripts
fc  Fallback Rewrite Css 
if  Flatten CSS Imports
hw  Flushes html
ci  Inline Css
ii  Inline Images
il  Inline @import to Link
ji  Inline Javascript
js  Jpeg Subsampling
pr  Prioritize Critical Css
rj  Recompress Jpeg
rp  Recompress Png
rw  Recompress Webp
ri  Resize Images
cf  Rewrite Css
jm  Rewrite External Javascript
jj  Rewrite Inline Javascript
cu  Rewrite Style Attributes With Url
cp  Strip Image Color Profiles
md  Strip Image Meta Data

Options:
AvoidRenamingIntrospectiveJavascript (aris) True
EnableRewriting (e) 1
FileCacheInodeLimit (afcl) 500000
ImageResolutionLimitBytes (irlb) 128000000
LoadFromFileCacheTtlMs (lfct) 315360000000
LowercaseHtmlNames (lh) True
RewriteLevel (l) Core Filters
XHeaderValue (xhv) Powered By ngx_pagespeed

#NumFlushes            0
#EndDocument after     2449us
#Total Parse duration  2362us
#Total Render duration 44033us
#Total Idle duration   87us
Critical Images:
    https://domain.co.uk/assets/media/london/img/cross-white.svg
    https://domain.co.uk/assets/media/london/img/logotype-black.svg
    https://domain.co.uk/assets/media/london/img/logotype-white.svg
The following filters were disabled for this request:
    SupportNoscript
-->

```
The Pagespeed module for Nginx by default adds the following code to all pages of the site:
`<noscript><meta HTTP-EQUIV="refresh" content="0;url='https://mysite.com/?PageSpeed=noscript'" /><style><!--table,div,span,font,p{display:none} --></style><div style="display:block">Please click <a href="https://mysite.com/?PageSpeed=noscript">here</a> if you are not redirected within a few seconds.</div></noscript>`

Googlebot considers meta refresh a violation of the rules and blocks a Google Ads account with the message _Reason: System bypass_.

What you need to do: when installing the module, the `SupportNoScriptEnabled` setting should be `false` by default.

After adding the `pagespeed SupportNoScriptEnabled false;` sinks to the nginx config the problem is resolved.

p.s.
It took us 3 months to understand the reason for blocking the accents of Google Ads. We have 4 accounts blocked. It’s very sad that two Google products conflict with each other.

On Ubuntu 19.04

`
/root/incubator-pagespeed-ngx-latest-stable/src/ngx_url_async_fetcher.cc:53: multiple definition of `net_instaweb::NgxUrlAsyncFetcher::NgxUrlAsyncFetcher(char const*, ngx_log_s*, unsigned long, unsigned long, ngx_resolver_s*, int, net_instaweb::ThreadSystem*, net_instaweb::MessageHandler*)'; objs/addon/src/ngx_url_async_fetcher.o:/root/incubator-pagespeed-ngx-latest-stable/src/ngx_url_async_fetcher.cc:53: first defined here
/usr/bin/ld: objs/addon/src/ngx_url_async_fetcher.o: in function `net_instaweb::NgxUrlAsyncFetcher::FetchComplete(net_instaweb::NgxFetch*)':]
`

I want to use the nginx pagespeed proxy https request, but my backend has multiple servers, How do I proxy？

pagespeed MapOriginDomain "http://testvser_pool" "https://192.168.44.243:443";

upstream testvser_pool {
	server    192.168.66.100:80 fail_timeout=10s weight=10;
	server    192.168.66.101:80 fail_timeout=10s weight=10;
	server    192.168.66.102:80 fail_timeout=10s weight=10;
}

server {
	listen 192.168.44.243:443 ssl;
	location / {
		proxy_ssl_protocols TLSv1 TLSv1.1 TLSv1.2;                   
		proxy_pass http://testvser_pool;
	}
}
Whenever I try to build the docker image, I get these timeout errors that it can't reach git.apache.org:

```
Cloning into '/usr/src/modpagespeed/testing/gmock'...
Cloning into '/usr/src/modpagespeed/testing/gtest'...
Cloning into '/usr/src/modpagespeed/third_party/apr/src'...
fatal: unable to connect to git.apache.org:
git.apache.org[0: 52.202.80.70]: errno=Operation timed out

fatal: clone of 'git://git.apache.org/apr.git' into submodule path '/usr/src/modpagespeed/third_party/apr/src' failed
Failed to clone 'third_party/apr/src'. Retry scheduled
Cloning into '/usr/src/modpagespeed/third_party/aprutil/src'...
fatal: unable to connect to git.apache.org:
git.apache.org[0: 52.202.80.70]: errno=Operation timed out

fatal: clone of 'git://git.apache.org/apr-util.git' into submodule path '/usr/src/modpagespeed/third_party/aprutil/src' failed
Failed to clone 'third_party/aprutil/src'. Retry scheduled
```

Anyone else having this issue?
Our .png logo breaks in Chrome Desktop with ngx_pagespeed on. Tested Chrome Versions
76.0.3809.132 & 77.0.3865.75
There is no issue when visiting with other browsers (tested with Firefox and Edge).
Error in Chrome Console: Failed to load resource: the server responded with a status of 404 ()
Link to live example: [https://babynews.de/](Link)