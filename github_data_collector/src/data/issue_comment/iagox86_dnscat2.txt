I'd suggest to change 
```
typedef enum
{
  FALSE,
  TRUE
} NBBOOL;
```
to sth like
```
typedef enum
{
  _FALSE,
  _TRUE
} NBBOOL;
```
and all corresponding occurrences.

the problem with the first one is that you can't `#include <mach-o/dyld.h>`, it would see it as redeclaration of TRUE/FALSE.

So problems would occur when integrating the code in other projects.
Hello, I have trying out dnscat2 in a lab environment and have observed when an iterative query is performed by `bind` (9.14.3 installed from Alpine 3.10) the client will fail to establish a tunnel.

After looking into the problem, it appears that bind 9.14 ships with Query Name Minimisation feature as defined by RFC 7816 enabled by default. [More information](https://www.isc.org/blogs/qname-minimization-and-privacy/).

Essentially, `bind` is making a number of `A` queries of the form `_.example.com` (where dnscat server it authoritative for `example.com`). E.g. if the client wants `1234.1234.1234.example.com`, `bind` will make the following requests for `A` and `AAAA` RRs
* `_.com`
* `_.example.com`
* `_.1234.example.com`
* etc

Sadly, `dnscat2` does not expect this and results only rejecting the first query that it is authoritative for (`_.example.com`) as not found and ignoring later requests.

A non invasive workaround to the problem is adding a dummy dns server that is authoritative for the same domain as dnscat2 but with no RRs and configuring dnscat2 to proxy requests to it (i.e. it will reject anything that dnscat2 can process). Alternatively,  disabling qname minimisation on the server would be acceptable. 
I'm on an AWS Lightsail Ubuntu 18.04 VPS. I've tried running `ruby ./dnscat2.rb` to get the `dnscat2>` prompt. 

However, I keep getting the following errors:

Security policy changed: All connections must be encrypted
Traceback (most recent call last):
	6: from ./dnscat2.rb:208:in "main"
        5: from /root/dnscat2/server/tunnel_drivers/tunnel_drivers.rb:24:in "start"
	4: from /root/dnscat2/server/tunnel_drivers/tunnel_drivers.rb:24:in "new"
	3: from /root/dnscat2/server/tunnel_drivers/driver_dns.rb:251:in "initialize"
	2: from /root/dnscat2/server/tunnel_drivers/driver_dns.rb:251:in "new"
	1: from /root/dnscat2/server/libs/dnser.rb:828:in "initialize"
/root/dnscat2/server/libs/dnser.rb:828:in "bind": Address already in use - bind(2) for "0.0.0.0" port 53 (Errno::EADDRINUSE)


I've used netstat to see that I have a systemd-resolve process listening on port 53. However, I've tried editing the resolved.conf to DNSStubListener=no, and I still get the exact same errors. I've been wracking my brain trying to figure this out for the better part of a day, and I'm not sure what to do. Any ideas?
i have a problem in running "ruby ./ dnscat2"
Traceback (most recent call last):
        5: from ./dnscat2.rb:15:in `<main>'
        4: from /usr/local/lib/ruby/2.6.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        3: from /usr/local/lib/ruby/2.6.0/rubygems/core_ext/kernel_require.rb:54:in `require'
        2: from /root/dnscat2/server/libs/swindow.rb:47:in `<top (required)>'
        1: from /usr/local/lib/ruby/2.6.0/rubygems/core_ext/kernel_require.rb:54:in `require'
/usr/local/lib/ruby/2.6.0/rubygems/core_ext/kernel_require.rb:54:in `require': cannot load such file -- readline (LoadError)

Windows 10
Microsoft Visual Studio Community 2017 
Version 15.9.6
VisualStudio.15.Release/15.9.6+28307.344
Microsoft .NET Framework
Version 4.7.03190

Installed Version: Community

Visual C++ 2017   00369-60000-00001-AA138
Microsoft Visual C++ 2017

ASP.NET and Web Tools 2017   15.9.04012.0
ASP.NET and Web Tools 2017

C# Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a
C# components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.

Common Azure Tools   1.10
Provides common services for use by Azure Mobile Services and Microsoft Azure Tools.

JavaScript Language Service   2.0
JavaScript Language Service

Microsoft JVM Debugger   1.0
Provides support for connecting the Visual Studio debugger to JDWP compatible Java Virtual Machines

Microsoft MI-Based Debugger   1.0
Provides support for connecting Visual Studio to MI compatible debuggers

Microsoft Visual C++ Wizards   1.0
Microsoft Visual C++ Wizards

Microsoft Visual Studio VC Package   1.0
Microsoft Visual Studio VC Package

MLGen Package Extension   1.0
MLGen Package Visual Studio Extension Detailed Info

NuGet Package Manager   4.6.0
NuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.

ProjectServicesPackage Extension   1.0
ProjectServicesPackage Visual Studio Extension Detailed Info

ResourcePackage Extension   1.0
ResourcePackage Visual Studio Extension Detailed Info

ResourcePackage Extension   1.0
ResourcePackage Visual Studio Extension Detailed Info

Test Adapter for Boost.Test   1.0
Enables Visual Studio's testing tools with unit tests written for Boost.Test.  The use terms and Third Party Notices are available in the extension installation directory.

Test Adapter for Google Test   1.0
Enables Visual Studio's testing tools with unit tests written for Google Test.  The use terms and Third Party Notices are available in the extension installation directory.

Visual Basic Tools   2.10.0-beta2-63501-03+b9fb1610c87cccc8ceb74a770dba261a58e39c4a
Visual Basic components used in the IDE. Depending on your project type and settings, a different version of the compiler may be used.

Visual C++ for Linux Development   1.0.9.28218
Visual C++ for Linux Development

Visual Studio Code Debug Adapter Host Package   1.0
Interop layer for hosting Visual Studio Code debug adapters in Visual Studio

Visual Studio Tools for CMake   1.0
Visual Studio Tools for CMake

1>------ Build started: Project: dnscat2, Configuration: Debug Win32 ------
1>cl : Command line warning D9035: option 'Gm' has been deprecated and will be removed in a future release
1>driver_dns.c
1>e:\downloads\dnscat2-master\client\tunnel_drivers\driver_dns.c(8): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>udp.c
1>e:\downloads\dnscat2-master\client\libs\udp.c(8): fatal error C1083: Cannot open include file: 'stdio.h': No such file or directory
1>types.c
1>e:\downloads\dnscat2-master\client\libs\types.c(8): fatal error C1083: Cannot open include file: 'ctype.h': No such file or directory
1>tcp.c
1>e:\downloads\dnscat2-master\client\libs\tcp.c(8): fatal error C1083: Cannot open include file: 'stdio.h': No such file or directory
1>select_group.c
1>e:\downloads\dnscat2-master\client\libs\select_group.c(8): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>my_getopt.c
1>e:\downloads\dnscat2-master\client\libs\my_getopt.c(28): fatal error C1083: Cannot open include file: 'sys/types.h': No such file or directory
1>memory.c
1>e:\downloads\dnscat2-master\client\libs\memory.c(8): fatal error C1083: Cannot open include file: 'ctype.h': No such file or directory
1>log.c
1>e:\downloads\dnscat2-master\client\libs\log.c(7): fatal error C1083: Cannot open include file: 'stdio.h': No such file or directory
1>ll.c
1>e:\downloads\dnscat2-master\client\libs\ll.c(8): fatal error C1083: Cannot open include file: 'stdio.h': No such file or directory
1>dns.c
1>e:\downloads\dnscat2-master\client\libs\dns.c(8): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>sha3.c
1>e:\downloads\dnscat2-master\client\libs\crypto\sha3.c(20): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>salsa20.c
1>e:\downloads\dnscat2-master\client\libs\crypto\salsa20.c(32): fatal error C1083: Cannot open include file: 'stddef.h': No such file or directory
1>uECC.c
1>e:\downloads\dnscat2-master\client\libs\pstdint.h(184): fatal error C1083: Cannot open include file: 'stddef.h': No such file or directory
1>encryptor.c
1>e:\downloads\dnscat2-master\client\libs\crypto\encryptor.c(11): fatal error C1083: Cannot open include file: 'stdio.h': No such file or directory
1>buffer.c
1>e:\downloads\dnscat2-master\client\libs\buffer.c(8): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>driver_ping.c
1>e:\downloads\dnscat2-master\client\drivers\driver_ping.c(7): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>driver_exec.c
1>e:\downloads\dnscat2-master\client\drivers\driver_exec.c(7): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>driver_console.c
1>e:\downloads\dnscat2-master\client\drivers\driver_console.c(7): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>driver.c
1>e:\downloads\dnscat2-master\client\drivers\driver.c(7): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>driver_command.c
1>e:\downloads\dnscat2-master\client\drivers\command\driver_command.c(8): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>Generating Code...
1>Compiling...
1>command_packet.c
1>e:\downloads\dnscat2-master\client\drivers\command\command_packet.c(7): fatal error C1083: Cannot open include file: 'stdio.h': No such file or directory
1>dnscat.c
1>e:\downloads\dnscat2-master\client\dnscat.c(7): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>session.c
1>e:\downloads\dnscat2-master\client\controller\session.c(7): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>packet.c
1>e:\downloads\dnscat2-master\client\controller\packet.c(7): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>controller.c
1>e:\downloads\dnscat2-master\client\controller\controller.c(9): fatal error C1083: Cannot open include file: 'assert.h': No such file or directory
1>Generating Code...
1>Done building project "dnscat2.vcxproj" -- FAILED.
========== Build: 0 succeeded, 1 failed, 0 up-to-date, 0 skipped ==========

If server side is not available for some time, client
will disconnect and quit. That means losing shell.
This is bit hackish implementation of reconnect/rebeacon.
Also, implemented hardcoding of the most needed parameters.

As I told you. it is not perfect, but it works. Feel free to decide what you want with it ;)
Implemented initial mingw support

So, it is possible to compile from Mac or Linux.
Display stack trace, but do not fail and exit
(losing shells can be nightmare)

For example, dnscat2 server fails with following error messages on long running servers:

Caught an error: DNS packet was truncated (or we messed up parsing it)!
/pentest/dnscat2/server/libs/dnser.rb:179:in `unpack'
/pentest/dnscat2/server/libs/dnser.rb:634:in `parse'
/pentest/dnscat2/server/libs/dnser.rb:849:in `block (2 levels) in on_request'
/pentest/dnscat2/server/libs/dnser.rb:843:in `loop'
/pentest/dnscat2/server/libs/dnser.rb:843:in `block in on_request'

Protocol exception caught in dnscat DNS module (for more information, check window 'dns1'):
#<DnscatException: Received a packet with no questions>
Caught an error: undefined method `serialize' for nil:NilClass
/pentest/dnscat2/server/libs/dnser.rb:678:in `block in serialize'
/pentest/dnscat2/server/libs/dnser.rb:677:in `each'
/pentest/dnscat2/server/libs/dnser.rb:677:in `serialize'
/pentest/dnscat2/server/libs/dnser.rb:819:in `reply!'
/pentest/dnscat2/server/libs/dnser.rb:775:in `error!'
/pentest/dnscat2/server/tunnel_drivers/driver_dns.rb:357:in `rescue in block in initialize'
/pentest/dnscat2/server/tunnel_drivers/driver_dns.rb:293:in `block in initialize'
/pentest/dnscat2/server/libs/dnser.rb:879:in `block (2 levels) in on_request'
/pentest/dnscat2/server/libs/dnser.rb:843:in `loop'
/pentest/dnscat2/server/libs/dnser.rb:843:in `block in on_request'
/pentest/dnscat2/server/libs/dnser.rb:883:in `rescue in block (2 levels) in on_request': undefined method `response_template' for #<DNSer::Transaction:0x0000000000dd6a58> (NoMethodError)
Did you mean?  respond_to?
        from /pentest/dnscat2/server/libs/dnser.rb:878:in `block (2 levels) in on_request'
        from /pentest/dnscat2/server/libs/dnser.rb:843:in `loop'
        from /pentest/dnscat2/server/libs/dnser.rb:843:in `block in on_request'
Google and Cloudfare both have implementation of DNS over HTTPS and was wondering if it can be used as an implementation to this tool. This tool can be leveraged using the running cloudflared proxy-dns then dnscat --dns server=127.0.0.1,domain=skullseclabs.org --ping.
https://developers.cloudflare.com/1.1.1.1/dns-over-https/cloudflared-proxy/

Client ---> Encrypted DNS over HTTPS to Cloudflare --> The Skullseclabs DNS Server
----
https://developers.google.com/speed/public-dns/docs/dns-over-https
https://developers.cloudflare.com/1.1.1.1/dns-over-https/
----
Requesting for this method to simulate the traffic as HTTPS Traffic.
This should also bypass corporate that uses solely internal DNS Server.
When try to connect, the session is reset. With other types of requests, the session is established and stable.

$ --dns server=ip_adress,type=A -d
Creating DNS driver:
 domain = (null)
 host   = 0.0.0.0
 port   = 53
 type   = A
 server = ip_adress
[[ INFO ]] :: Setting session->name to command (HOST)
[[ INFO ]] :: Sending DNS query for: dnscat.blablabla to ip_adress:53
NOT IMPLEMENTED!
[[ WARNING ]] :: Terminating



Server:
$ domain.name -e open -f

-f shows:
dnscat2> Received:  dnscat.blablabla(A)
Creating Encryptor with secret: "secret"
New window created: 1
history_size (session) => 1000
Not decrypting data (incoming data seemed to be cleartext): ["cleartext"]
Setting their public key: "public key"

Setting my public key: "public key"

Returning an unencrypted response
Sending:  ["83.73.216.207", "84.3.100.20", "85.0.0.0", "86.0.6.112", "87.135.129.213", "88.102.41.64", "89.168.202.73", "90.227.167.92", "91.198.147.150", "92.192.63.248", "93.164.101.150", "94.30.176.207", "95.114.92.251", "96.221.195.244", "97.155.228.141", "98.91.48.87", "99.77.61.97", "100.170.177.81", "101.175.248.78", "102.67.167.180", "103.94.105.15", "104.64.239.110", "105.109.167.161", "106.254.183.43", "107.22.133.255"]

i will to hide queryes and adresses
Please help in solving.

