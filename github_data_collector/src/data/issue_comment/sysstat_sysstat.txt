Hi,

Since version [4.20, linux kernel](https://kernelnewbies.org/Linux_4.20#Pressure_stall_information_for_better_overview_of_system_load) can provide pressure-stall information that could be useful to provide performance information about CPU, IO and memory starvation.

It will be great to collect theses counters :)

Here are some inputs:

- [Tracking pressure-stall information](https://lwn.net/Articles/759781/)
- [Linux Pressure Stall Information (PSI) by Example](https://unixism.net/2019/08/linux-pressure-stall-information-psi-by-example/)
- [Getting Started with PSI](https://facebookmicrosites.github.io/psi/docs/overview)
- [PSI - Pressure Stall Information - Kernel's documentation](https://www.kernel.org/doc/html/latest/_sources/accounting/psi.rst.txt)

Regards,
Hi,

PostgreSQL uses a long commandline buffer, to be able to display additional details (like e.g. indication of the current query). That's useful, because otherwise there's just a lot of 'postgres' processes, even if they do a lot of different things. The size of that buffer is allocated for the worst case, basically, with the unused part set to `\0`

Unfortunately, with pidstat's -l option, `\0` gets replaced with space:
https://github.com/sysstat/sysstat/blob/master/pidstat.c#L637

What is the reason for that? And would you be open to changing that? It makes the output hard to read on terminals, as there's a few lines of just spaces.

Github unfortunately can't easily display this, as it doesn't wrap lines. So I replaced the lines wrapped in the terminal, with actual linebreaks to make it easier to see here (I used 80 wide lines here, as that's the most common, even if I personally use a wider terminal).

With -l:
```
09:43:11 AM  1000     25462   1280.00   1272.00      0.00      17  postgres: dev
 optimize: andres pgbench_5000 [local] idle in transaction                      
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                              
09:43:11 AM  1000     25463   1296.00   1624.00      0.00      17  postgres: dev
 optimize: andres pgbench_5000 [local] BIND                                     
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                              
09:43:11 AM  1000     25464   1288.00   2064.00      0.00      19  postgres: dev
 optimize: andres pgbench_5000 [local] BIND                                     
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                              
09:43:11 AM  1000     25465   1256.00   1112.00      0.00      17  postgres: dev
 optimize: andres pgbench_5000 [local] idle in transaction                      
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                              
09:43:11 AM  1000     25466   1336.00   1280.00      0.00      17  postgres: dev
 optimize: andres pgbench_5000 [local] COMMIT                                   
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                                                
                                                              
```

Without -l:
```
09:48:13 AM  1000     25756    872.00    576.00      0.00      25  postgres
09:48:13 AM  1000     25760    960.00    800.00      0.00      28  postgres
09:48:13 AM  1000     25761   1008.00    752.00      0.00      25  postgres
09:48:13 AM  1000     25763    920.00   1112.00      0.00      28  postgres
09:48:13 AM  1000     25765    968.00   1248.00      0.00      28  postgres
09:48:13 AM  1000     25767   1048.00    456.00      0.00      26  postgres
09:48:13 AM  1000     25770   1016.00    992.00      0.00      30  postgres
```

I can obviously just resort to piping through sed/perl/whatever to remove all trailing whitespace, but that seems a bit unnecessary. Here's what -l looks like after doing so:

```
09:47:45 AM  1000     25698   1128.00    600.00      0.00      22  postgres: dev
 optimize: andres pgbench_5000 [local] idle
09:47:45 AM  1000     25699   1216.00   1280.00      0.00      22  postgres: dev
 optimize: andres pgbench_5000 [local] UPDATE
09:47:45 AM  1000     25700   1144.00    992.00      0.00      22  postgres: dev
 optimize: andres pgbench_5000 [local] idle in transaction
09:47:45 AM  1000     25701   1064.00   1680.00      0.00      25  postgres: dev
 optimize: andres pgbench_5000 [local] COMMIT
09:47:45 AM  1000     25702   1152.00   1384.00      0.00      25  postgres: dev
 optimize: andres pgbench_5000 [local] idle in transaction
09:47:45 AM  1000     25703   1184.00    832.00      0.00      24  postgres: dev
 optimize: andres pgbench_5000 [local] UPDATE
```

Clearly more readable.

Would you accept a patch either removing the logic in https://github.com/sysstat/sysstat/blob/master/pidstat.c#L637 or replacing it with logic that trims all the trailing whitespace at least?

Regards,

Andres
See the image below:
![image](https://user-images.githubusercontent.com/6298562/59446098-2649e800-8e01-11e9-9c6d-6ba880f7bdf9.png)

Here is the raw output:
```
rpi@kali:~$ sar
Linux 4.14.93-Re4son-v8+ (kali) 	06/13/2019 	_aarch64_	(4 CPU)

12:00:01 AM     CPU     %user     %nice   %system   %iowait    %steal     %idle
12:05:01 AM     all      0.18      0.00      0.12      0.00      0.00     99.70
12:15:01 AM     all      0.22      0.00      0.12      0.00      0.00     99.66
12:25:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.67
12:35:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.67
12:45:01 AM     all      0.17      0.00      0.11      0.00      0.00     99.71
12:55:01 AM     all      0.21      0.00      0.11      0.00      0.00     99.67
01:05:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
01:15:01 AM     all      0.19      0.00      0.12      0.00      0.00     99.69
01:25:01 AM     all      0.19      0.00      0.13      0.00      0.00     99.68
01:35:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.67
01:45:02 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
01:55:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.66
02:05:01 AM     all      0.19      0.00      0.12      0.00      0.00     99.69
02:15:01 AM     all      0.22      0.00      0.12      0.01      0.00     99.66
02:25:01 AM     all      0.18      0.00      0.12      0.00      0.00     99.71
02:35:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
02:45:01 AM     all      0.30      0.00      0.14      0.05      0.00     99.51
02:55:01 AM     all      0.21      0.00      0.12      0.01      0.00     99.66
03:05:01 AM     all      0.19      0.00      0.12      0.00      0.00     99.69
03:15:01 AM     all      0.22      0.00      0.11      0.00      0.00     99.66
03:25:01 AM     all      0.20      0.00      0.12      0.01      0.00     99.68
03:35:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
03:45:01 AM     all      0.19      0.00      0.12      0.00      0.00     99.69
03:55:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.67
04:05:01 AM     all      0.18      0.00      0.11      0.00      0.00     99.71
04:15:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.68
04:25:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
04:35:02 AM     all      0.21      0.00      0.12      0.01      0.00     99.67
04:45:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
04:55:01 AM     all      0.22      0.00      0.12      0.00      0.00     99.65
05:05:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
05:15:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.66
05:25:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.67
05:35:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.66
05:45:02 AM     all      0.18      0.00      0.11      0.00      0.00     99.71
05:55:01 AM     all      0.23      0.00      0.12      0.00      0.00     99.65
06:05:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.69
06:15:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.67
06:25:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
06:35:01 AM     all      1.15      0.02      0.29      0.18      0.00     98.36
06:45:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
06:55:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.66
07:05:01 AM     all      0.31      0.00      0.14      0.00      0.00     99.54
07:15:01 AM     all      0.19      0.00      0.11      0.00      0.00     99.69
07:25:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.69
07:35:01 AM     all      0.20      0.00      0.12      0.01      0.00     99.68
07:45:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
07:55:01 AM     all      0.21      0.00      0.12      0.01      0.00     99.67
08:05:01 AM     all      0.21      0.00      0.12      0.00      0.00     99.67
08:15:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68
08:25:01 AM     all      0.21      0.00      0.13      0.00      0.00     99.66
08:35:01 AM     all      0.20      0.00      0.11      0.00      0.00     99.68
08:45:01 AM     all      0.20      0.00      0.12      0.00      0.00     99.68

08:45:01 AM     CPU     %user     %nice   %system   %iowait    %steal     %idle
08:55:01 AM     all      0.18      0.00      0.12      0.00      0.00     99.70
09:05:01 AM     all      0.24      0.00      0.15      0.01      0.00     99.59
09:15:01 AM     all      0.23      0.00      0.14      0.01      0.00     99.62
09:25:01 AM     all      0.23      0.00      0.14      0.01      0.00     99.61
09:45:01 AM     all      0.00      0.00      0.00      0.58      0.00    112.34
09:55:01 AM     all      0.00      0.00      0.00      2.19      0.00     95.45
10:05:01 AM     all      0.61      0.00      0.26      0.02      0.00     99.11
10:15:01 AM     all      0.39      0.00      0.19      0.01      0.00     99.41
10:25:01 AM     all      1.91      0.00      5.64      0.05      0.00     92.39
10:35:01 AM     all      6.82      0.00     20.95      0.38      0.00     71.85
10:45:02 AM     all     11.14      0.00     30.23      0.01      0.00     58.62
10:55:01 AM     all      0.96      0.00      2.21      0.01      0.00     96.83
11:05:01 AM     all      0.20      0.00      0.12      0.01      0.00     99.68
11:15:01 AM     all      0.27      0.00      0.17      0.01      0.00     99.55
11:25:01 AM     all      0.34      0.00      0.19      0.01      0.00     99.47
11:35:01 AM     all      0.42      0.00      0.22      0.00      0.00     99.36
11:45:01 AM     all      0.41      0.00      0.21      0.01      0.00     99.37
11:55:01 AM     all      0.20      0.00      0.12      0.01      0.00     99.67
12:05:01 PM     all      0.18      0.00      0.11      0.00      0.00     99.70
12:15:01 PM     all      0.21      0.00      0.12      0.00      0.00     99.67
12:25:01 PM     all      0.18      0.00      0.12      0.00      0.00     99.69
12:35:01 PM     all      0.20      0.00      0.12      0.00      0.00     99.67
12:45:02 PM     all      0.20      0.00      0.12      0.00      0.00     99.68
12:55:01 PM     all      0.22      0.00      0.12      0.00      0.00     99.66
01:05:01 PM     all      0.33      0.00      0.28      0.00      0.00     99.38
01:15:01 PM     all      0.84      0.00      0.34      0.01      0.00     98.81
01:25:01 PM     all      3.42      0.00      4.25      0.78      0.00     91.55
01:35:16 PM     all      0.00      0.00      0.00      0.00      0.00      0.00
01:45:01 PM     all      0.46      0.00      0.28      0.02      0.00     99.24
01:55:01 PM     all      0.00      0.00      0.00      0.57      0.00     98.82
02:05:16 PM     all      0.00      0.00      0.00      5.30      0.00     94.58
02:15:01 PM     all      0.31      0.00      0.18      0.01      0.00     99.50
02:25:01 PM     all      0.20      0.00      0.13      0.01      0.00     99.67
02:35:01 PM     all      0.27      0.00      0.15      0.01      0.00     99.57
02:45:01 PM     all      0.21      0.00      0.11      0.00      0.00     99.68
02:55:01 PM     all      0.21      0.00      0.12      0.00      0.00     99.66
03:05:01 PM     all      0.20      0.00      0.12      0.01      0.00     99.67
03:15:01 PM     all      0.24      0.00      0.17      0.01      0.00     99.58
03:25:01 PM     all      0.23      0.00      0.19      0.00      0.00     99.58
03:35:01 PM     all      0.29      0.00      0.23      0.02      0.00     99.46
03:45:01 PM     all      0.32      0.00      0.20      0.01      0.00     99.47
03:55:01 PM     all      0.26      0.00      0.17      0.01      0.00     99.56
04:05:01 PM     all      0.21      0.00      0.14      0.00      0.00     99.65
04:15:01 PM     all      0.26      0.00      0.16      0.00      0.00     99.58
04:25:02 PM     all      0.38      0.00      0.19      0.01      0.00     99.42
04:35:01 PM     all      0.51      0.00      0.23      0.01      0.00     99.25
04:45:01 PM     all      0.58      0.00      0.65      0.00      0.00     98.77
04:55:01 PM     all      0.00      0.00      0.00      1.01      0.00    109.07
05:05:01 PM     all      1.13      0.00      0.25      0.00      0.00     98.62
05:15:01 PM     all      1.30      0.00      0.32      0.04      0.00     98.34
05:25:01 PM     all      0.52      0.00      0.18      0.01      0.00     99.30
Average:        all      0.00      0.00      0.00      0.11      0.00    100.87
```
The pidstat manual does explicitly state that pidstat -p PID -T CHILD will collect CPU times in ms (milliseconds) rather than  %CPU, but WHY?? I would like to tally both the main process and the children as %CPU, please.


I would like to send pidstat output to a file and then make a graph from it using sadf. But there appears to be no option of pidstat to generate the binary output format that sadf wants. Such a feature would be highly useful, I think. 




Hello, could you please provide a little bit more information about `aqu-sz` (average request queue length) estimation?  

From [iostat.c](https://github.com/sysstat/sysstat/blob/master/iostat.c#L1222):
```
			/* aqu-sz */
			cprintf_f(NO_UNIT, 1, 7, 2,
				  S_VALUE(ioj->rq_ticks, ioi->rq_ticks, itv) / 1000.0);
```
whereas `rq_ticks` is [defined](https://github.com/sysstat/sysstat/blob/master/iostat.h#L105) as
```
	/* # of ticks requests spent in queue */
	unsigned int  rq_ticks		__attribute__ ((packed));
```
As far as I understand, this is just a difference between two tick measurements divided by some number. But the units of measurement for this expression are still "ticks" (equivalent to milliseconds). Why the resulting value should be treated as average request queue depth?
hi,i got a error in build,output:
`
gcc -o sadc.o -c -g -O2 -Wall -Wstrict-prototypes -pipe -O2  -DSA_DIR=\"/var/log/sa\" -DSADC_PATH=\"/usr/local/lib64/sa/sadc\"  -DUSE_NLS -DPACKAGE=\"sysstat\" -DLOCALEDIR=\"/usr/local/share/locale\" sadc.c
In file included from sa.h:11,
                 from sadc.c:37:
sadc.c: In function ‘sa_sys_init’:
sadc.c:334:51: warning: ‘*’ in boolean context, suggest ‘&&’ instead [-Wint-in-bool-context]
      (size_t) act[i]->msize * (size_t) act[i]->nr * (size_t) act[i]->nr2);
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
common.h:93:16: note: in definition of macro ‘SREALLOC’
            if (SIZE) {       \
                ^~~~
sadc.c: In function ‘open_ofile’:
sadc.c:962:51: warning: ‘*’ in boolean context, suggest ‘&&’ instead [-Wint-in-bool-context]
      (size_t) act[p]->msize * (size_t) act[p]->nr * (size_t) act[p]->nr2);
      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
common.h:93:16: note: in definition of macro ‘SREALLOC’
            if (SIZE) {       \
                ^~~~
gcc -o sa_wrap.o -c -g -O2 -Wall -Wstrict-prototypes -pipe -O2  -DSA_DIR=\"/var/log/sa\" -DSADC_PATH=\"/usr/local/lib64/sa/sadc\"  -DUSE_NLS -DPACKAGE=\"sysstat\" -DLOCALEDIR=\"/usr/local/share/locale\" sa_wrap.c
gcc -o sa_common.o -c -g -O2 -Wall -Wstrict-prototypes -pipe -O2  -DSA_DIR=\"/var/log/sa\" -DSADC_PATH=\"/usr/local/lib64/sa/sadc\"  -DUSE_NLS -DPACKAGE=\"sysstat\" -DLOCALEDIR=\"/usr/local/share/locale\" sa_common.c
In file included from sa.h:11,
                 from sa_common.c:35:
sa_common.c: In function ‘allocate_structures’:
sa_common.c:88:52: warning: ‘*’ in boolean context, suggest ‘&&’ instead [-Wint-in-bool-context]
       (size_t) act[i]->msize * (size_t) act[i]->nr * (size_t) act[i]->nr2);
       ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
common.h:93:16: note: in definition of macro ‘SREALLOC’
            if (SIZE) {       \
                ^~~~
sa_common.c: In function ‘check_file_actlst’:
sa_common.c:1325:66: warning: ‘*’ in boolean context, suggest ‘&&’ instead [-Wint-in-bool-context]
  SREALLOC(*file_actlst, struct file_activity, FILE_ACTIVITY_SIZE * file_hdr->sa_act_nr);
common.h:93:16: note: in definition of macro ‘SREALLOC’
            if (SIZE) {       \
                ^~~~
sa_common.c: In function ‘reallocate_vol_act_structures’:
sa_common.c:1453:50: warning: ‘*’ in boolean context, suggest ‘&&’ instead [-Wint-in-bool-context]
     (size_t) act[p]->msize * (size_t) act[p]->nr * (size_t) act[p]->nr2);
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~~~
common.h:93:16: note: in definition of macro ‘SREALLOC’
            if (SIZE) {       \
                ^~~~
sa_common.c: In function ‘set_default_file’:
sa_common.c:452:8: warning: ‘/sa’ directive output may be truncated writing 3 bytes into a region of size between 1 and 256 [-Wformat-truncation=]
     "%s/sa%02d", sa_dir,
        ^~~
sa_common.c:451:3: note: ‘snprintf’ output between 6 and 270 bytes into a destination of size 256
   snprintf(datafile, MAX_FILE_LEN,
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     "%s/sa%02d", sa_dir,
     ~~~~~~~~~~~~~~~~~~~~
     rectime.tm_mday);
     ~~~~~~~~~~~~~~~~
sa_common.c:444:8: warning: ‘/sa’ directive output may be truncated writing 3 bytes into a region of size between 1 and 256 [-Wformat-truncation=]
     "%s/sa%04d%02d%02d", sa_dir,
        ^~~
sa_common.c:444:5: note: directive argument in the range [-2147481748, 2147483647]
     "%s/sa%04d%02d%02d", sa_dir,
     ^~~~~~~~~~~~~~~~~~~
sa_common.c:444:5: note: directive argument in the range [-2147483647, 2147483647]
sa_common.c:443:3: note: ‘snprintf’ output between 12 and 292 bytes into a destination of size 256
   snprintf(datafile, MAX_FILE_LEN,
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     "%s/sa%04d%02d%02d", sa_dir,
     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~
     rectime.tm_year + 1900,
     ~~~~~~~~~~~~~~~~~~~~~~~
     rectime.tm_mon + 1,
     ~~~~~~~~~~~~~~~~~~~
     rectime.tm_mday);
     ~~~~~~~~~~~~~~~~
gcc -o rd_stats.o -c -g -O2 -Wall -Wstrict-prototypes -pipe -O2 -DSOURCE_SADC  -DSA_DIR=\"/var/log/sa\" -DSADC_PATH=\"/usr/local/lib64/sa/sadc\"  -DUSE_NLS -DPACKAGE=\"sysstat\" -DLOCALEDIR=\"/usr/local/share/locale\" rd_stats.c
ar rvs librdstats.a rd_stats.o count.o
ar: creating librdstats.a
a - rd_stats.o
a - count.o
gcc -o rd_sensors.o -c -g -O2 -Wall -Wstrict-prototypes -pipe -O2  -DSA_DIR=\"/var/log/sa\" -DSADC_PATH=\"/usr/local/lib64/sa/sadc\"  -DUSE_NLS -DPACKAGE=\"sysstat\" -DLOCALEDIR=\"/usr/local/share/locale\" rd_sensors.c
ar rv librdsensors.a rd_sensors.o
ar: creating librdsensors.a
a - rd_sensors.o
gcc -o common.o -c -g -O2 -Wall -Wstrict-prototypes -pipe -O2  -DSA_DIR=\"/var/log/sa\" -DSADC_PATH=\"/usr/local/lib64/sa/sadc\"  -DUSE_NLS -DPACKAGE=\"sysstat\" -DLOCALEDIR=\"/usr/local/share/locale\" common.c
common.c: In function ‘get_dev_part_nr’:
common.c:218:35: warning: ‘%s’ directive output may be truncated writing up to 255 bytes into a region of size between 0 and 1023 [-Wformat-truncation=]
   snprintf(line, MAX_PF_NAME, "%s/%s/%s", dfile, drd->d_name, S_STAT);
                                   ^~
common.c:218:3: note: ‘snprintf’ output between 7 and 1285 bytes into a destination of size 1024
   snprintf(line, MAX_PF_NAME, "%s/%s/%s", dfile, drd->d_name, S_STAT);
   ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
gcc -o ioconf.o -c -g -O2 -Wall -Wstrict-prototypes -pipe -O2  -DSA_DIR=\"/var/log/sa\" -DSADC_PATH=\"/usr/local/lib64/sa/sadc\"  -DUSE_NLS -DPACKAGE=\"sysstat\" -DLOCALEDIR=\"/usr/local/share/locale\" ioconf.c
ioconf.c: In function ‘transform_devmapname’:
ioconf.c:503:15: error: called object ‘major’ is not a function or function pointer
    dm_major = major(aux.st_rdev);
               ^~~~~
ioconf.c:479:41: note: declared here
 char *transform_devmapname(unsigned int major, unsigned int minor)
                            ~~~~~~~~~~~~~^~~~~
ioconf.c:504:15: error: called object ‘minor’ is not a function or function pointer
    dm_minor = minor(aux.st_rdev);
               ^~~~~
ioconf.c:479:61: note: declared here
 char *transform_devmapname(unsigned int major, unsigned int minor)
                                                ~~~~~~~~~~~~~^~~~~
make: *** [Makefile:161: ioconf.o] Error 1

`

steps to reproduce the issue:

1.install the new fedora29 workstation in vmware
2.dnf update
3.clone repo and checkout 11.1.3
4.cd src/sysstat/sysstat-11.1.3/
5../configure
6.make

additional environment details :

system
uname -a output:
Linux localhost.localdomain 4.19.9-300.fc29.x86_64 #1 SMP Thu Dec 13 17:25:01 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

gcc
gcc version 8.2.1 20181215 (Red Hat 8.2.1-6) (GCC)
make GNU Make 4.2.1
Currently, the disk activity statistics use ```major:minor``` to associate disk activity with the block device. There are two major drawbacks with this approach:

- major:minor numbers are not consistent across reboots and sar may associate given disk activity with the different block device after reboot

- major:minor are resolved locally and hence portability of the files is problematic. IOW, displaying them with sar on a different machine is close to pointless

I am opening this to start the discussion. Unfortunately, I am not quite sure what other identifiers we could use.
**Environment**

Debian stretch 
sysstat version 11.6.1 (Debian package version 11.6.1-1)

**Description**

With kernel 4.17 and 4.18-rc8 I'm seeing unexpected statistics with iostat -x. What I see with AWS EC2 instances (r5/m5.large) using EBS backed volumes is that small writes spike the %util to 40-80%. On kernel 4.16 and earlier similar writes would show as zero or single digits.

e.g. on kernel 4.9 running "iostat 1 -x" I'm seeing statistics like this:

```
avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.00    0.00    0.00    2.51    0.00   97.49

Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util
nvme1n1          0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00
nvme0n1          7.00  130.00     28.00  25060.00     0.00     3.00   0.00   2.26    2.86   13.66   1.80     4.00   192.77   0.50   6.80

```

On the same instance with new kernels I'm instead seeing spikes like this in %util:

```
avg-cpu:  %user   %nice %system %iowait  %steal   %idle
           0.50    0.00    0.50    0.00    0.00   99.00

Device            r/s     w/s     rkB/s     wkB/s   rrqm/s   wrqm/s  %rrqm  %wrqm r_await w_await aqu-sz rareq-sz wareq-sz  svctm  %util
nvme0n1          0.00    0.00      0.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.00     0.00     0.00   0.00   0.00
nvme1n1          2.00    0.00      8.00      0.00     0.00     0.00   0.00   0.00    0.00    0.00   0.84     4.00     0.00 418.00  83.60

```

Device performance seems to be the same regardless of the kernel used.

I went through the changes in kernel between 4.16 and 4.17 and found this one commit that touches the statistics. Reverting it seems to get iostat to report %util like it did before, but I haven't done extensive testing with this.

https://www.mail-archive.com/linux-block@vger.kernel.org/msg20916.html

I'm not familiar with the internals to say where the problem is or if this is actually expected. It also seems like not all instance types are showing this behaviour, so it could have something to do with the new EBS volumes that appear as NVMe devices.

Environment: Debian 3.16.39-1
sysstat version 11.0.1
Cores in the system: 4
root@ip-172-31-19-70:/home/admin/load_ststs# lscpu
Architecture:          x86_64
CPU(s):                4
On-line CPU(s) list:   0-3
Thread(s) per core:    2
Core(s) per socket:    2
Socket(s):             1
Model name:            Intel(R) Xeon(R) CPU E5-2686 v4 @ 2.30GHz

Linux 3.16.0-4-amd64 (ip-172-31-19-70)  03/07/2018      _x86_64_        (4 CPU)

07:02:05 AM   UID       PID    %usr %system  %guest    %CPU   CPU  Command
07:02:06 AM     0     23974    6.00    0.00    0.00    6.00     0  server
07:02:07 AM     0     23974    5.00    2.00    0.00    7.00     0  server
07:02:08 AM     0     23974    2.00    0.00    0.00    2.00     0  server
07:02:09 AM     0     23974    4.00    1.00    0.00    5.00     0  server
07:02:10 AM     0     23974    6.00    1.00    0.00    7.00     0  server
07:02:11 AM     0     23974    5.00    1.00    0.00    6.00     0  server
07:02:12 AM     0     23974    3.96    0.99    0.00    4.95     0  server
07:02:13 AM     0     23974    9.00    1.00    0.00   10.00     0  server
07:02:14 AM     0     23974    4.00    1.00    0.00    5.00     0  server
07:02:15 AM     0     23974    4.00    0.00    0.00    4.00     0  server
07:02:16 AM     0     23974    4.00    1.00    0.00    5.00     0  server
07:02:17 AM     0     23974    3.00    2.00    0.00    5.00     0  server
07:02:18 AM     0     23974    2.00    1.00    0.00    3.00     0  server
07:02:19 AM     0     23974    3.00    0.00    0.00    3.00     0  server
07:02:20 AM     0     23974    5.00    0.00    0.00    5.00     0  server
07:02:21 AM     0     23974    3.00    1.00    0.00    4.00     0  server
07:02:22 AM     0     23974    2.00    1.00    0.00    3.00     0  server
07:02:23 AM     0     23974    3.00    0.00    0.00    3.00     0  server
07:02:24 AM     0     23974    4.00    1.00    0.00    5.00     0  server
07:02:25 AM     0     23974    2.00    0.00    0.00    2.00     0  server
07:02:26 AM     0     23974    1.00    0.00    0.00    1.00     0  server
07:02:27 AM     0     23974    1.00    0.00    0.00    1.00     0  server
07:02:28 AM     0     23974    2.00    0.00    0.00    2.00     0  server
07:02:29 AM     0     23974    4.00    1.00    0.00    5.00     0  server
07:02:30 AM     0     23974    0.00    1.00    0.00    1.00     0  server
07:02:31 AM     0     23974    1.00    1.00    0.00    2.00     0  server
07:02:32 AM     0     23974    3.00    0.00    0.00    3.00     0  server
07:02:33 AM     0     23974    4.00    1.00    0.00    5.00     0  server
07:02:34 AM     0     23974    2.00    1.00    0.00    3.00     0  server
07:02:35 AM     0     23974    4.00    0.00    0.00    4.00     0  server
07:02:36 AM     0     23974    2.00    0.00    0.00    2.00     0  server
07:02:37 AM     0     23974    1.00    0.00    0.00    1.00     0  server
07:02:38 AM     0     23974    2.00    1.00    0.00    3.00     0  server
07:02:39 AM     0     23974    3.00    1.00    0.00    4.00     0  server
07:02:40 AM     0     23974    5.00    1.00    0.00    6.00     0  server
07:02:41 AM     0     23974    5.00    0.00    0.00    5.00     0  server
07:02:42 AM     0     23974    0.00    2.00    0.00    2.00     0  server
07:02:43 AM     0     23974    3.00    1.00    0.00    4.00     0  server
07:02:44 AM     0     23974    3.00    0.00    0.00    3.00     0  server
07:02:45 AM     0     23974    1.00    0.00    0.00    1.00     0  server
07:02:46 AM     0     23974    3.00    1.00    0.00    4.00     0  server
07:02:47 AM     0     23974    6.00    1.00    0.00    7.00     0  server
07:02:48 AM     0     23974    1.00    0.00    0.00    1.00     0  server
07:03:33 AM     0     23974    9.00    1.00    0.00   10.00     0  server
07:03:34 AM     0     23974   31.00    0.00    0.00   31.00     0  server
07:03:35 AM     0     23974   21.00    0.00    0.00   21.00     0  server
07:03:36 AM     0     23974   22.00    0.00    0.00   22.00     0  server
07:03:37 AM     0     23974   12.00    0.00    0.00   12.00     0  server
07:03:38 AM     0     23974  298.00    0.00    0.00  298.00     0  server
07:03:39 AM     0     23974  200.00    0.00    0.00  200.00     2  server
07:03:40 AM     0     23974  194.00    0.00    0.00  194.00     0  server
07:03:41 AM     0     23974  202.00    0.00    0.00  202.00     2  server
07:03:42 AM     0     23974  228.00    0.00    0.00  228.00     0  server
07:03:43 AM     0     23974  225.00    0.00    0.00  225.00     2  server
07:03:44 AM     0     23974    0.00    0.00    0.00    0.00     1  server
**07:03:45 AM     0     23974  449.00    0.00    0.00  449.00     1  server**
**07:03:46 AM     0     23974    0.00    0.00    0.00    0.00     1  server
07:03:47 AM     0     23974  464.00    0.00    0.00  464.00     2  server
07:03:48 AM     0     23974    0.00    0.00    0.00    0.00     2  server
07:03:49 AM     0     23974  491.00    0.00    0.00  491.00     2  server
07:03:50 AM     0     23974    0.00    0.00    0.00    0.00     2  server
07:03:51 AM     0     23974  494.00    0.00    0.00  494.00     0  server
07:03:52 AM     0     23974    0.00    0.00    0.00    0.00     3  server
07:03:53 AM     0     23974  505.05    0.00    0.00  505.05     3  server
07:03:54 AM     0     23974    0.00    0.00    0.00    0.00     1  server
07:03:55 AM     0     23974  498.02    0.00    0.00  498.02     1  server
07:03:56 AM     0     23974    0.00    0.00    0.00    0.00     3  server
07:03:57 AM     0     23974  493.00    0.00    0.00  493.00     3  server
07:03:58 AM     0     23974    0.00    0.00    0.00    0.00     3  server
07:03:59 AM     0     23974  589.42    0.00    0.00  589.42     3  server
07:04:00 AM     0     23974    0.00    0.00    0.00    0.00     3  server
07:04:01 AM     0     23974  509.80    0.00    0.00  509.80     0  server
07:04:02 AM     0     23974    0.00    0.00    0.00    0.00     2  server
07:04:03 AM     0     23974  547.00    0.00    0.00  547.00     1  server
07:04:04 AM     0     23974    0.00    0.00    0.00    0.00     1  server
07:04:05 AM     0     23974  542.00    0.00    0.00  542.00     3  server**
07:04:06 AM     0     23974    0.00    0.00    0.00    0.00     2  server
07:04:07 AM     0     23974  474.00    0.00    0.00  474.00     0  server





Please check and suggest .