## Pull Request (PR) description
Fix an issue where SafeAttachments and Safe Links properties were not all extracted.

#### This Pull Request (PR) fixes the following issues
- Fixes #330 
- Fixes #331

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/microsoft/office365dsc/338)
<!-- Reviewable:end -->


#### Details of the scenario you tried and the problem that is occurring
I created some safe links policies at https://protection.office.com/safelinksconverged . it appears as if not everything regarding the corresponding rules is loaded. I can see that the schema has these properties defined, and the configured rule data is visible in the security and compliance admin portal, but it is not extracted.
![image](https://user-images.githubusercontent.com/13213802/72350988-c2add300-36df-11ea-85e5-bae99a8b3b06.png)

#### Verbose logs showing the problem

#### Suggested solution to the issue

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)

#### The operating system the target node is running

#### Version of the DSC module that was used ('dev' if using current dev branch)


#### Details of the scenario you tried and the problem that is occurring
I created some safe attachment policies at https://protection.office.com/safeattachment . it appears as if not everything regarding the corresponding rules is loaded. I can see that the schema has these properties defined, and the configured rule data is visible in the security and compliance admin portal, but it is not extracted.
![image](https://user-images.githubusercontent.com/13213802/72350103-0c95b980-36de-11ea-92bc-7e9f5673e4a7.png)

#### Verbose logs showing the problem

#### Suggested solution to the issue

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)

#### The operating system the target node is running

#### Version of the DSC module that was used ('dev' if using current dev branch)

Several DSC modules do have VSCode launch settings in place. With these settings it's a lot easier to have reproducible actions for all developers.
There should be settings for running unit tests and generating unit test coverage reports. This would lower the need of CI runs within this repo as code changes could be testes locally with ease.
<!--
    Your feedback and support is greatly appreciated, thanks for contributing!

    ISSUE TITLE:
    Please prefix the issue title with the resource name, e.g.
    'ResourceName: Short description of my issue'

    ISSUE DESCRIPTION (this template):
    Please provide information regarding your issue under each header below.
    Write N/A under any headers that do not apply to your issue, or if the
    information is not available.

    NOTE! Sensitive information should be obfuscated.

    PLEASE KEEP THE HEADERS.

    You may remove this comment block, and the other comment blocks,
    but please keep the headers.
-->
#### Details of the scenario you tried and the problem that is occurring
Running a Test-DscConfiguration against spam settings returns an error.
#### Verbose logs showing the problem
```
PowerShell DSC resource MSFT_EXOHostedContentFilterPolicy  failed to execute Test-TargetResource functionality with
error message: Cannot validate argument on parameter 'EndUserSpamNotificationCustomFromAddress'. The argument "" does
not match the "^[a-zA-Z0-9.!Â£#$%&'^_{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" pattern. Supply an argument that
matches "^[a-zA-Z0-9.!Â£#$%&'^_{}~-]+@[a-zA-Z0-9-]+(?:\.[a-zA-Z0-9-]+)*$" and try the command again.
    + CategoryInfo          : InvalidOperation: (root/Microsoft/...gurationManager:String) [], CimException
    + FullyQualifiedErrorId : ProviderOperationExecutionFailure
    + PSComputerName        : localhost
```
#### Suggested solution to the issue

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)


#### The operating system the target node is running
<!--
    Please provide as much as possible about the target node, for example
    edition, version, build and language.
    On OS with WMF 5.1 the following command can help get this information.

    Get-ComputerInfo -Property @(
        'OsName',
        'OsOperatingSystemSKU',
        'OSArchitecture',
        'WindowsVersion',
        'WindowsBuildLabEx',
        'OsLanguage',
        'OsMuiLanguages')
-->

#### Version of the DSC module that was used ('dev' if using current dev branch)

**Steps to reproduce**
- Configure the O365 tenant to have at least one Distribution List
- Create the DSC files and compile the mof file
- run a Test-DscConfiguration against the mof file

**Details**
The Test-DscConfiguration will return that a non-complaint setup was found as it expects the DL members property to by non-empty:

```
Current Values: Description=; DisplayName=DL_o365test; Ensure=Present; GlobalAdminAccount=System.Management.Automation.PSCredential; MailNickName=dl_o365test; ManagedBy=(); **Members=$null**
Target Values: Description=; DisplayName=DL_o365test; Ensure=Present; GlobalAdminAccount=System.Management.Automation.PSCredential; MailNickName=dl_o365test; ManagedBy=(); **Members=()**; Verbose=True
Expected to find an array value for property Members in the current values, but it was either not present or was null. This has caused the test method to return false.
Detected Drifted Parameter [MSFT_O365Group]Members
```

No changes have been made to the tenant btw. pulling the reference configuration and running the Test-DscConfiguration command.
#### Details of the scenario you tried and the problem that is occurring
I created some custom categories and subcategories in the compliance center: https://protection.office.com/retentionlabels.
It seems that subcategories of custom categories are not handled correctly and not extracted.
The extraction process completes and everything can be compiled, but some of the subcategories are missing.
#### Verbose logs showing the problem
```
Get-TargetResource : Cannot bind argument to parameter 'Category' because it is an empty string.
At C:\GitProjects\Office365DSC\Modules\Office365DSC\DSCResources\MSFT_SCFilePlanPropertySubCategory\MSFT_SCFilePlanProp
ertySubCategory.psm1:201 char:38
+         $result = Get-TargetResource @params
+                                      ~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Get-TargetResource], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorEmptyStringNotAllowed,Get-TargetResource
```


#### Suggested solution to the issue
The issue seems to be that the parent categories are matched by id and the id of custom categories is something like 
`FFO.extest.microsoft.com/Microsoft Exchange Hosted Organizations/M365x233468.onmicrosoft.com/Configuration/category1 ` and not` CN={guidThatIsTheSameAsParentId}` that the current code seems to expect.

I think that it would be better to match by the `Guid` or the `ExchangeObjectId` of the parent category since these appear to correspond wit `$subcategory.ParentId`.

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)

#### The operating system the target node is running

#### Version of the DSC module that was used ('dev' if using current dev branch)
dev


#### Details of the scenario you tried and the problem that is occurring
I added some custom domains to my tenant and there seems to be an issue with the extraction process here.
I added a domain and i also added a subdomain. this causes problems for the extraction process since the match operator is used(MSFT_EXOAcceptedDomain.ps1:50)
The bug could also manifest if I had two custom domains ie. mydomain.com and  something-mydomain.com
#### Verbose logs showing the problem

#### Suggested solution to the issue
Get-AcceptedDomain has an Identity paramer, so this could be used directly to single out the accepted domain instead of filtering the retrieved accepted domains list.

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
```powershell
 EXOAcceptedDomain e5e3b23b-3f5a-4c99-aa1f-68c5c1e27ff0
        {
            DomainType           = @("Authoritative","Authoritative");
            Ensure               = "Present";
            GlobalAdminAccount   = $Credsglobaladmin;
            Identity             = @("test1env.testing.io","testing.io");
            MatchSubDomains      = @(FalseFalse);
            OutboundOnly         = @(FalseFalse);
        }
```

#### The operating system the target node is running

#### Version of the DSC module that was used ('dev' if using current dev branch)
dev
#### Details of the scenario you tried and the problem that is occurring
On one of our enviroments the SPOSiteAuditSettings resource is causing problems because it has different AuditFlags than what is defined in the schema.
#### Verbose logs showing the problem
```
Office365DSC\SPOSiteAuditSettings : At least one of the values '15291' is not supported or valid for property
'AuditFlags' on class 'SPOSiteAuditSettings'. Please specify only supported values:
All, None.
At C:\ProgramData\SysKit\Trace\DSC-WORK\7e0dfc89-accc-4003-8803-1eac268bd532 - Copy\Office365TenantConfig.ps1:61 char:9
+         SPOSiteAuditSettings 53e46226-80c5-45d4-8b0d-6dc91ae15522
+         ~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [Write-Error], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : UnsupportedValueForProperty,Office365DSC\SPOSiteAuditSettings
```

#### Suggested solution to the issue
When i go to `_layouts/15/AuditSettings.aspx` is the following message:
>We no longer support choosing specific events to edit. Audit Log Reports will still be available as usual but powered by the Unified Audit Pipeline. Please refer to this document for complete list of audited events. Please note that we do not support list items as of now.

Maybe this resource is no longer required if not configurable? 
Alternatively, add support for other values except All, None if it's possible. 

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
```powershell
 SPOSiteAuditSettings 06fbf20f-9a0b-4bed-ad5d-00633cb487b6
        {
            AuditFlags           = "4952";
            GlobalAdminAccount   = $Credsglobaladmin;
            Url                  = "https://demo.sharepoint.com/";
        }
  SPOSiteAuditSettings b5586912-cc55-499c-8230-d28d488a366e
        {
            AuditFlags           = "15291";
            GlobalAdminAccount   = $Credsglobaladmin;
            Url                  = "https://demo.sharepoint.com/search";
        }
```
#### The operating system the target node is running
<!--
    Please provide as much as possible about the target node, for example
    edition, version, build and language.
    On OS with WMF 5.1 the following command can help get this information.

    Get-ComputerInfo -Property @(
        'OsName',
        'OsOperatingSystemSKU',
        'OSArchitecture',
        'WindowsVersion',
        'WindowsBuildLabEx',
        'OsLanguage',
        'OsMuiLanguages')
-->

#### Version of the DSC module that was used ('dev' if using current dev branch)

#### Details of the scenario you tried and the problem that is occurring
We noticed that exporting the configuration on some of our tenants generates invalid powershell. 
```powershell
  O365Group 45724fce-76c3-4c8d-b327-d599fce5774a
        {
            Description          = "";
            DisplayName          = "Cash";
            Ensure               = "Present";
            GlobalAdminAccount   = $Credsglobaladmin;
            MailNickName         = "ash";
            ManagedBy            = @("jsmith@syskitd.onmicrosoft.com","msummers@syskitd.onmicrosoft.com","stockham.stenseth@syskitd.onmicrosoft.com","diestel.schirpke@syskitd.onmicrosoft.com","suell.shadrick@syskitd.onmicrosoft.com");
            Members              = ;
        }
```

The problem is in the members field.

After some analysis we came to the conclusion that the problem occurs because the group has another group in the members collection.
When calling Get-TargetResource for the group we get the following:
```powershell
Name                           Value
----                           -----
ManagedBy                      {jsmith@syskitd.onmicrosoft.com, msummers@syskitd.onmicrosoft.com, stockham.stenseth@...
DisplayName                    Cash
Ensure                         Present
Description
MailNickName                   ash
GlobalAdminAccount             System.Management.Automation.PSCredential
Members                        {$null, annebelle.cala_outlook.com#EXT#@syskitd.onmicrosoft.com, AdeleV_M365x887491.O...
```

The $null in the members collection then kills everything. $null is here because the object in the actual members of the group is a group and does not have the UPN property.

```
DeletionTimestamp            :
ObjectId                     : 32338f51-d3f2-48bb-9197-f70c6291985c
ObjectType                   : Group
Description                  :
DirSyncEnabled               :
DisplayName                  : Accrued Expenses
LastDirSyncTime              :
Mail                         :
MailEnabled                  : False
MailNickName                 : ccruedxpenses
OnPremisesSecurityIdentifier :
ProvisioningErrors           : {}
ProxyAddresses               : {}
SecurityEnabled              : True
```


#### Verbose logs showing the problem
```
VERBOSE: Setting configuration of Office 365 Group Cash
VERBOSE: Found Existing Instance of Group {Cash}
VERBOSE: Found Members for Group {Cash}
VERBOSE: Found Owners for Group {Cash}
VERBOSE: Retrieved the following instance of the Group:
VERBOSE: ManagedBy = jsmith@syskitd.onmicrosoft.com msummers@syskitd.onmicrosoft.com
stockham.stenseth@syskitd.onmicrosoft.com diestel.schirpke@syskitd.onmicrosoft.com
suell.shadrick@syskitd.onmicrosoft.com
VERBOSE: DisplayName = Cash
VERBOSE: Ensure = Present
VERBOSE: Description =
VERBOSE: MailNickName = ash
VERBOSE: GlobalAdminAccount = System.Management.Automation.PSCredential
VERBOSE: Members =  annebelle.cala_outlook.com#EXT#@syskitd.onmicrosoft.com
AdeleV_M365x887491.OnMicrosoft.com#EXT#@syskitd.onmicrosoft.com
AldoM_M365x887491.onmicrosoft.com#EXT#@syskitd.onmicrosoft.com albares.latzke@syskitd.onmicrosoft.com
You cannot call a method on a null-valued expression.
At C:\Program Files\WindowsPowerShell\Modules\ReverseDSC\2.0.0.0\ReverseDSC.Core.psm1:276 char:17
+ ...         if ($array.Length -gt 0 -and ($array[0].GetType().Name -eq "S ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull
```

#### Suggested solution to the issue
Add support for groups as members of groups. Or, filter out the groups if only users are to be supported. In any case, i believe that some changes to the setter logic will also be required.
 
#### The DSC configuration that is used to reproduce the issue (as detailed as possible)


#### The operating system the target node is running


#### Version of the DSC module that was used ('dev' if using current dev branch)
dev
