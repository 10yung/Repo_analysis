<!-- Thanks for taking the time to submit a thorough issue report for Terasology! :-)
Please fill out whichever details below seem relevant to your issue.
Note that suggestions, general questions & support should go in the forum:
* http://forum.terasology.org/forum/suggestions.21
* http://forum.terasology.org/forum/support.20/
Bug reports and crashes likely resulting from bugs in the engine go here on GitHub. -->

### What you were trying to do
I was attempting to use the NUI Screen Editor to edit a screen.

### What actually happened
The game crashed when certain widgets were added.

### How to reproduce
 - Open Terasology and start a new game.
 - Open the NUI Screen editor through the `In-Game Menu->Extras->Developer Tools->NUI Screen Editor` option.
 - Try adding one of the following widgets to a UI Screen (right-click on a "contents" button and select "Add Widget"):
    - `engine:DebugProperties`
    - `engine:UIRadialSection`
    - `engine:UIRadialRing`
    - `engine:HudToolbar`
    - `engine:BehaviorEditor`
 - There may be more widgets that cause these crashes, although most of the affected ones inherit from `CoreHudWidget`/`CoreScreenLayer`.
 - If a `UIRadialSection` was added, then the NUI editor may crash when re-opened after re-opening the game. You will need to delete the file `nuiEditorAutosave.json` in order to stop the crashes.
### Log details and game version
##### `CoreScreenLayer` Exception
```
java.lang.NullPointerException
	at org.terasology.rendering.nui.CoreScreenLayer.iterateThrough(CoreScreenLayer.java:132)
	at org.terasology.rendering.nui.CoreScreenLayer.iterateThrough(CoreScreenLayer.java:133)
	at org.terasology.rendering.nui.CoreScreenLayer.iterateThrough(CoreScreenLayer.java:133)
	at org.terasology.rendering.nui.CoreScreenLayer.iterateThrough(CoreScreenLayer.java:133)
	at org.terasology.rendering.nui.CoreScreenLayer.iterateThrough(CoreScreenLayer.java:133)
	at org.terasology.rendering.nui.CoreScreenLayer.update(CoreScreenLayer.java:223)
	at org.terasology.rendering.nui.internal.NUIManagerInternal.update(NUIManagerInternal.java:524)
	at org.terasology.engine.modes.StateIngame.updateUserInterface(StateIngame.java:236)
	at org.terasology.engine.modes.StateIngame.update(StateIngame.java:183)
	at org.terasology.engine.TerasologyEngine.tick(TerasologyEngine.java:462)
	at org.terasology.engine.TerasologyEngine.mainLoop(TerasologyEngine.java:425)
	at org.terasology.engine.TerasologyEngine.run(TerasologyEngine.java:401)
	at org.terasology.engine.Terasology.main(Terasology.java:156)
```
##### `UIRadialRing` Exception
```
java.lang.IndexOutOfBoundsException: Index: 0, Size: 0
	at java.util.ArrayList.rangeCheck(ArrayList.java:653)
	at java.util.ArrayList.get(ArrayList.java:429)
	at org.terasology.rendering.nui.widgets.UIRadialRing$1.onMouseOver(UIRadialRing.java:60)
	at org.terasology.rendering.nui.internal.CanvasImpl.processMousePosition(CanvasImpl.java:192)
	at org.terasology.rendering.nui.internal.NUIManagerInternal.update(NUIManagerInternal.java:519)
	at org.terasology.engine.modes.StateIngame.updateUserInterface(StateIngame.java:236)
	at org.terasology.engine.modes.StateIngame.update(StateIngame.java:183)
	at org.terasology.engine.TerasologyEngine.tick(TerasologyEngine.java:462)
	at org.terasology.engine.TerasologyEngine.mainLoop(TerasologyEngine.java:425)
	at org.terasology.engine.TerasologyEngine.run(TerasologyEngine.java:401)
	at org.terasology.engine.Terasology.main(Terasology.java:156)
```
##### `UIRadialSection` Exception:
```
java.lang.NullPointerException
	at org.terasology.rendering.nui.internal.Line.relativeToAbsolute(Line.java:319)
	at org.terasology.rendering.nui.internal.CanvasImpl.relativeToAbsolute(CanvasImpl.java:758)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawTextureRaw(CanvasImpl.java:618)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawTextureRaw(CanvasImpl.java:613)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawTextureRaw(CanvasImpl.java:596)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawTexture(CanvasImpl.java:470)
	at org.terasology.rendering.nui.widgets.UIRadialSection.onDraw(UIRadialSection.java:88)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawStyledWidget(CanvasImpl.java:425)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawWidget(CanvasImpl.java:411)
	at org.terasology.rendering.nui.layouts.relative.RelativeLayout.onDraw(RelativeLayout.java:85)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawStyledWidget(CanvasImpl.java:425)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawWidget(CanvasImpl.java:411)
	at org.terasology.rendering.nui.CoreScreenLayer.onDraw(CoreScreenLayer.java:211)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawStyledWidget(CanvasImpl.java:425)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawWidget(CanvasImpl.java:411)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawWidget(CanvasImpl.java:387)
	at org.terasology.rendering.nui.widgets.UIBox.onDraw(UIBox.java:41)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawStyledWidget(CanvasImpl.java:425)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawWidget(CanvasImpl.java:411)
	at org.terasology.rendering.nui.layouts.miglayout.MigLayout.onDraw(MigLayout.java:128)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawStyledWidget(CanvasImpl.java:425)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawWidget(CanvasImpl.java:411)
	at org.terasology.rendering.nui.CoreScreenLayer.onDraw(CoreScreenLayer.java:211)
	at org.terasology.rendering.nui.editor.layers.AbstractEditorScreen.onDraw(AbstractEditorScreen.java:160)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawStyledWidget(CanvasImpl.java:425)
	at org.terasology.rendering.nui.internal.CanvasImpl.drawWidget(CanvasImpl.java:411)
	at org.terasology.rendering.nui.internal.NUIManagerInternal.render(NUIManagerInternal.java:509)
	at org.terasology.engine.modes.StateIngame.renderUserInterface(StateIngame.java:231)
	at org.terasology.engine.modes.StateIngame.render(StateIngame.java:215)
	at org.terasology.engine.subsystem.lwjgl.LwjglGraphics.postUpdate(LwjglGraphics.java:166)
	at org.terasology.engine.TerasologyEngine.tick(TerasologyEngine.java:471)
	at org.terasology.engine.TerasologyEngine.mainLoop(TerasologyEngine.java:425)
	at org.terasology.engine.TerasologyEngine.run(TerasologyEngine.java:401)
	at org.terasology.engine.Terasology.main(Terasology.java:156)
```
This has been reproduced on the commit https://github.com/MovingBlocks/Terasology/commit/4e95d495f21d5a687a48d1edb0f389fb66d7e1cc.

<!-- Thanks for submitting a pull request for Terasology! :-)
Please fill in some details about the PR, below.
If the PR contains source code please make sure to run Checkstyle on it first.
If you add unit tests we'll love you forever! 

You might also want to read "How to Work on a PR Efficiently":
https://github.com/MovingBlocks/Terasology/wiki/How-to-Work-on-a-PR-Efficiently
-->

### Contains

Adds a `RunsAfter` annotation that indicates one rasterizer must be run after another.

### How to test

Add the annotation to a rasterizer. E.g.
```
@RegisterPlugin
@RunsAfter(CaveRasterizer.class)
public class SomeRasterizer implements WorldRasterizerPlugin {
```
During world generation you can place a breakpoint at `WorldBuilder` line 108. When it hits the breakpoint inspect the `orderedRasterizers` list and confirm that `SomeRasterizer` is after `CaveRasterizer`.

<!--
### Outstanding before merging

If anything. You can use neat checkboxes! Feel free to delete if not needed

- [ ] Need to consider use case x
- [ ] Still have to adjust the wiki doc
- [ ] Will need translation work
-->
<!-- Thanks for submitting a pull request for Terasology! :-)
Please fill in some details about the PR, below.
If the PR contains source code please make sure to run Checkstyle on it first.
If you add unit tests we'll love you forever! 

You might also want to read "How to Work on a PR Efficiently":
https://github.com/MovingBlocks/Terasology/wiki/How-to-Work-on-a-PR-Efficiently
-->

### Contains

This PR deals with errors thrown during directory detection, specifically giving a chance to run the game again if the default directory detection fails.
In case of headless servers we have defaulted to choosing the home path as the current directory.
Fixes https://github.com/MovingBlocks/Terasology/issues/3566

### How to test

Run the game on Windows XP. If you can find something with XP on it or a wierd OS that throws our directory detection out of the window.

### Outstanding before merging

If anything. You can use neat checkboxes! Feel free to delete if not needed

- [ x ] Still have to adjust the wiki doc 
The doc has to be updated if in case we hit any such OSes in the future.

Simple fix for the game UI: on the Game Select and Game Details screens, the world generator will be shown as its display name (i.e. "Perlin") rather than its code name (i.e. "facetedperlin"). If the world generator's display name cannot be found, such as if the generator was moved or deleted, it will instead display a warning and the code name.
I was working on a fix to address discord RPC. The RPC thread spends a majority of its time spinning on sleep. this does not seem to work on my linux machine and the RPC library is marked as depreciated by discord. The problem is ```Thread.sleep(1)``` is sleeping for 1 ms between calls. 
<!-- Thanks for taking the time to submit a thorough issue report for Terasology! :-)
Please fill out whichever details below seem relevant to your issue.
Note that suggestions, general questions & support should go in the forum:
* http://forum.terasology.org/forum/suggestions.21
* http://forum.terasology.org/forum/support.20/
Bug reports and crashes likely resulting from bugs in the engine go here on GitHub. -->

### What you were trying to do
Er... trying to find a bug to see if something would break.
### What actually happened
I succeeded and something broke (game crashed).
### How to reproduce

* Step 1 - Press Esc, then Tab on an in-game screen (highlight Back)
* Step 2 - Click/Press enter to use the highlighted Back button 

Followed by a game crash + crash report pop-up.

(Might be related to this issue: https://github.com/MovingBlocks/Terasology/pull/3581)

### Log details and game version
```20:08:16.739 [main] ERROR o.terasology.engine.TerasologyEngine - Uncaught exception, attempting clean game shutdown
java.lang.NullPointerException: null
        at org.terasology.rendering.nui.TabbingManager.unfocusWidget(TabbingManager.java:95)
        at org.terasology.rendering.nui.AbstractWidget.onLoseFocus(AbstractWidget.java:211)
        at org.terasology.rendering.nui.internal.NUIManagerInternal.setFocus(NUIManagerInternal.java:547)
        at org.terasology.rendering.nui.internal.CanvasImpl.postRender(CanvasImpl.java:172)
        at org.terasology.rendering.nui.internal.NUIManagerInternal.render(NUIManagerInternal.java:514)
        at org.terasology.engine.modes.StateIngame.renderUserInterface(StateIngame.java:231)
        at org.terasology.engine.modes.StateIngame.render(StateIngame.java:215)
        at org.terasology.engine.subsystem.lwjgl.LwjglGraphics.postUpdate(LwjglGraphics.java:166)
        at org.terasology.engine.TerasologyEngine.tick(TerasologyEngine.java:471)
        at org.terasology.engine.TerasologyEngine.mainLoop(TerasologyEngine.java:425)
        at org.terasology.engine.TerasologyEngine.run(TerasologyEngine.java:401)
        at org.terasology.engine.Terasology.main(Terasology.java:156)
20:08:16.748 [main] INFO  o.terasology.engine.TerasologyEngine - Shutting down Terasology...
20:08:16.946 [main] INFO  o.t.p.i.ReadWriteStorageManager - Saving - Creating game snapshot
20:08:17.022 [main] INFO  o.t.p.i.ReadWriteStorageManager - Saving - Snapshot created: Writing phase starts
20:08:17.059 [main] INFO  o.t.n.internal.NetworkSystemImpl - Client disconnected: Player68267
20:08:17.063 [main] INFO  o.t.logic.console.ConsoleImpl - [NOTIFICATION] Player "Player68267" has left the game
```

### Computer details
Running Windows 10, 
<!-- Thanks for submitting a pull request for Terasology! :-)
Please fill in some details about the PR, below.
If the PR contains source code please make sure to run Checkstyle on it first.
If you add unit tests we'll love you forever! 

You might also want to read "How to Work on a PR Efficiently":
https://github.com/MovingBlocks/Terasology/wiki/How-to-Work-on-a-PR-Efficiently
-->

### Description
This pull request fixes #2307 by extracting NUI into a separate library (TeraNUI). It will break any modules which rely on NUI APIs, as the namespace used has been changed to `org.terasology.nui` (the `org.terasology.rendering.nui` namespace is used for internal NUI-related code).

Some changes have been made to NUI to ensure greater portability, although asset-loading classes remain within the Terasology codebase.

### How to test
 - Clone https://github.com/BenjaminAmos/TeraNUI and switch to the `nui-extraction-merge` branch
 - Run the command `gradlew publishToMavenLocal` in the cloned project
 - Clone this pull request and run the game (use `gradlew game` or run it from an IDE)
##### Main Menu UI
 - Run the game until it reaches the main menu
 - Verify that the menu renders correctly
 - Explore the sub-menus, especially the input and video screens
 - Verify that these sub-screens render correctly
##### BuilderSampleGameplay
 - Run the game until it reaches the main menu
 - Choose the `New Game` option
 - Set the Gameplay Template to `Builder Sample Gameplay` and press the `Start Playing` button
 - Verify that the UI renders correctly (there should be a crosshair in the centre of the screen)
##### Console UI
 - Open the console
 - Enter the text `help` into the console
 - Verify that the text entered is visible, as well as the results of the console command
 - Use the `showScreen` command with various built-in screens
 - Verify that these screens render correctly
##### NUI Editor UI
 - Open the `Extras->Developer Tools->NUI Screen Editor` menu on the in-game menu.
 - Verify that the NUI Editor renders correctly
 - View each screen using the editor
 - Verify that these screens render correctly

### Outstanding before merging
 - Remove the `mavenLocal` repository
 - The extracted NUI code is moved to https://github.com/MovingBlocks/TeraNUI or a similar location
 - Update modules to use the new `org.terasology.nui` namespace
 - Ensure that this pull request does not break any existing UI assets
 - Ensure that this pull request does not cause any additional crashes
 - Resolve most introduced `TODO` comments

### Outstanding Issues
- All of the dependent classes are currently included within the nui package for testing purposes (many of them need to be moved to TeraMath and other related repositories)
- Tabbing functionality is non-functional for now (it requires changes to the NUI packages which would be Terasology-specific, so I will need to find a way of abstracting that)
- Most of the CoreRegistry or Assets usages have been replaced with constructor parameters, however there are some instances where no replacement has been made
- BindableButton has a classpath conflict currently with Terasology's main codebase, which is why I inserted the SimpleUri and Uri classes (it will not accept any other method descriptors). Changing the input namespace may resolve this, or removing the duplicate input classes from Terasology. The classes were copied and modified as previously they depended heavily on the entity-component system, which NUI is supposed to be independent of.
- The UIFormat and UISkinFormat are gson de-serialisers, which are implementation specific classes. Porting them would imply that a gson-based JSON backend would need to be used for UI files. They are instances of AbstractAssetFileFormat, which is used by gestalt to separate asset implementation from asset data. As such, I though it best to leave these in the Terasology codebase and not move them.
- Translator is present as an abstraction over Terasology's TranslationSystem, which is used for translating strings. With this, the built-in NUI widgets can retain internationalisation support. At the moment the interface does not do anything though, as the ToStringTextRenderer, which is the only place where it is used, is never initialised with a translator.
- PropertyProvider still needs to be extracted, although it relies heavily on Terasology's reflection infastructure, which will need to be moved into a seperate package as well

### Notes
 - This also relates to https://github.com/MovingBlocks/DestinationSol/issues/455.
 - This depends on https://github.com/MovingBlocks/TeraMath/pull/63.
#### API Changes:
- Font has been changed from an asset class to an interface
- Texture has been removed and TextureRegion has been re-named to UITextureRegion
<!-- Thanks for taking the time to submit a thorough issue report for Terasology! :-)
Please fill out whichever details below seem relevant to your issue.
Note that suggestions, general questions & support should go in the forum:
* http://forum.terasology.org/forum/suggestions.21
* http://forum.terasology.org/forum/support.20/
Bug reports and crashes likely resulting from bugs in the engine go here on GitHub. -->

### What I did
You can activate a module by either clicking the Activate button or by double clicking the module name. Generally modules cannot be activated if they haven't been downloaded, since the activate button is grayed out, **but** you can still double click them (**if** you haven't activated/deactivated a module from the list yet). This broke quite some features of the UI
### What happened
The activate button changed it's text from "Deactivated" to "Activated" despite the module not being present locally.
![unknown](https://user-images.githubusercontent.com/41499871/71632063-630ced80-2c32-11ea-84d3-110a25ea335c.png)

This also caused the module highlight feature to break. Activated modules no longer showed a green color.
![unknown (1)](https://user-images.githubusercontent.com/41499871/71632094-8a63ba80-2c32-11ea-90ee-1497765df588.png)
Also, the activated modules could no longer be (apparently) deactivated.
### How to reproduce

* Open Terasology and try making a new world
* Double click on a module which has not been downloaded yet
* Notice how the activate button changes text but remains grayed out
* Try activating a downloaded module and notice how it does not change it's color.
* Try deactivating any downloaded and activated module, it would not work.

<!-- Thanks for taking the time to submit a thorough issue report for Terasology! :-)
Please fill out whichever details below seem relevant to your issue.
Note that suggestions, general questions & support should go in the forum:
* http://forum.terasology.org/forum/suggestions.21
* http://forum.terasology.org/forum/support.20/
Bug reports and crashes likely resulting from bugs in the engine go here on GitHub. -->

### What you were trying to do
Playing around with some NUI, I tried to change a parameter in a .ui file I created then loading the changes in-game followed by pressing the escape key to exit the UI.
### What actually happened
The UI did not close.
### How to reproduce

* Step 1: Launch Terasology and load a world, preferably with a module like the [TutoralNui](https://github.com/Terasology/TutorialNui).
* Step 2: Try opening a UI, and then close it. (it should)
* Step 3: Update something in the corresponding .ui file in IntelliJ (something like the "text" parameter)
* Step 4: Open the UI again.
* Step 4: Try to close the UI by pressing the escape key. It should throw an error.

### Log details
The error that is thrown on pressing the escape key: https://pastebin.com/gmdLeNvw

### Contains

Fixes some Checkstyle errors in `math`
