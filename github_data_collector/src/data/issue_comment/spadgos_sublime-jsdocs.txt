Is it possible to add support for parsing entire files or even folders and automatically inserting the DocBlock for all functions and classes? While it is obviously better to document as one writes code, some code bases do not have DocBlocks at all. Unfortunately these code bases include thousands of functions so manually using this plugin would take a great deal of time.

My idea would be to have something similar to [This Project ](https://github.com/agentile/PHP-Docblock-Generator) where multiple files can be parsed and automatically DocBlocked at once. The problem with the project listed above is that it only supports old versions of PHP (versions before 5.4 it looks like, which is very out of date). 
As u add comment in php on top of function Like that
add comment on tag close
\<div class="xyz" id="pqr">
\</div><!-- /.xyz /#pqr -->

\"\<!-- /.xyz /#pqr -->\"    
This line will be auto generated on shortcut key press
`@return` is being added to functions that don't have a `return` e.g. void. We practice not documenting `@return` unless it actually returns something:

```
	/**
	 * [sanitize_frontend_value description]
	 *
	 * @author Aubrey Portwood <aubrey@webdevstudios.com>
	 * @since  NEXT
	 *
	 * @return [type] [description]
	 */
	public function sanitize_frontend_value() {
		wp_send_json_success( $this->sanitize( filter_input( INPUT_POST, 'to' ) ) );
	}
```

I often have to delete the two lines (the `@return` and the one above it) on these, which makes for more work. Is there a way to configure jsdoc to not add a `@return` unless it returns something (PHP)?
"Base File.sublime-settings"  -  User
```json
{
    "mid_line_tabs": true,
    "alignment_space_chars": [],
}
```

Hi, when do you support the documentation for SassDoc? This scss documentation library is growing and I would like your plugin to support this.
Ref: http://sassdoc.com/annotations/
I have an instance method like this
```
class C {
   m ( foo : any, bar : any){
       //do things
   }
}
```

what I get with the DocBlockr is this:
```
class C {
   /**
   * @param {any}
   * @param {any}
   */
   m ( foo : any, bar : any){
       //do things
   }
}
```
that is: no param names (`foo` and `bar`).
Am I doing something wrong?
![qq 20180723113958](https://user-images.githubusercontent.com/11498058/43056209-648cf4b6-8e6d-11e8-8fd3-076856c95200.jpg)
Traceback (most recent call last):
  File "D:\Program Files\Sublime Text-3176\sublime_plugin.py", line 1072, in run_
    return self.run(edit)
  File "D:\Program Files\Sublime Text-3176\Data\Installed Packages\DocBlockr.sublime-package\jsdocs.py", line 163, in run
  File "D:\Program Files\Sublime Text-3176\Data\Installed Packages\DocBlockr.sublime-package\jsdocs.py", line 358, in parse
  File "D:\Program Files\Sublime Text-3176\Data\Installed Packages\DocBlockr.sublime-package\jsdocs.py", line 426, in formatFunction
  File "D:\Program Files\Sublime Text-3176\Data\Installed Packages\DocBlockr.sublime-package\jsdocs.py", line 501, in parseArgs
  File "D:\Program Files\Sublime Text-3176\Data\Installed Packages\DocBlockr.sublime-package\jsdocs.py", line 509, in getArgInfo
  File "D:\Program Files\Sublime Text-3176\Data\Installed Packages\DocBlockr.sublime-package\jsdocs.py", line 798, in getArgType
TypeError: Can't convert 'NoneType' object to str implicitly
JavaScript ES6 classes have `constructor` which seems to get a `@return` this tag isn't needed on the constructor():


```js
class Foo {
     constructor() {}
}
```

I have change user setting in **Base File.sublime-settings**
```
{
	"jsdocs_extra_tags_go_after": true,
	"jsdocs_extra_tags":["@Author Author","@DateTime {{datetime}}"]
}
```
but when i opened any .cpp file and type /**+Enter, it only shows:
```
/**
 * 
 */
```
who can tell me how to fix it?
PS: I have tried to re-install sublime and docblockr