Hello.

We are developing business central apps using docker containers on a Kubernetes cluster (16 developers, avg. 3 containers per developer and review environment containers per branch. That are 80 containers in total running at the same time). Containers live until branch merge. This is the main reason why we are using Kubernetes.

The current business central images are built with navcontainerhelper in mind (for setup and convenience). Unfortunately it is not possible for us to use navcontainerhelper in a Kubernetes environment, because we can not just run commands inside containers with powershell.

However this issue is not limited to a Kubernetes setting. It also applies to any other container orchestration environment.

It would be great if you could provide different images for different usages e.g. a test image (with test DLLs already setup) and a regular. Or atleast an environment variable like `includeTestDependencies`.

App deployment is not an issue, we managed to do it over dev endpoint.
I do not believe this is a duplication of issue #252  but rather...an extension of it. i am not sure if this is a bug or i have set something up incorrectly. The below function creates a container successfully...and i can ping the ip as well the hostname. We can connect using our domain users as this is setup using gmsa. 

I can connect to this from the Webclient, windows client, and development environment....but not using what NAV THINKS is the correct address.for example, the listing in the "server Instances" of the developer environment  will display container.domain.local which never works while trying to run an object. i have to manually remove the .domain.local portion and then it will connect. This also means that if i already have the client running, i can't run an object after making changes without it opening an entirely new instance of the windows client which is the main frustration. 

`New-NavContainer 
-containerName $ContainerName 
-accept_eula 
-accept_outdated 
-additionalParameters $additionalParameters 
-memoryLimit 12g 
-auth Windows 
-databaseCredential $databasecredential 
-databaseInstance $databaseInstance 
-databaseName $databaseName 
-databaseServer $databaseServer 
-doNotExportObjectsToText 
-imageName microsoft/dynamics-nav:2018-cu4-na 
-updateHosts 
-PublicDnsName $dnsName`

my Additional parameters are listed below. the $dnsName variable  is [containerName].domain.local and i have also tried just using the $ContainerName without domain.local attached to the end.

`$additionalParameters = @("--publish 8080:8080",
"--publish 443:443",
"--publish 7046-7049:7046-7049",
"--env publicFileSharePort=8080",
"--env PublicDnsName=$dnsName",
"--security-opt credentialspec=file://$ContainerName.json",
"--network=tlan"`

if any information about my network (it's a transparent one i believe) setup is needed please let me know. i followed instructions someone posted in either #252 or similar issue report that i can no longer locate. 

It appears that the NAV Server Event provider is not registered during setup in the latest nav docker image. 

PS C:\Program Files\Microsoft Dynamics NAV\110\Service> Get-WinEvent -ListProvider 'Microsoft-DynamicsNAV-Server'
Get-WinEvent : There is not an event provider on the localhost computer that matches "Microsoft-DynamicsNAV-Server".

https://docs.microsoft.com/en-us/dynamics-nav/microsoft-dynamics-nav-server-trace-events
