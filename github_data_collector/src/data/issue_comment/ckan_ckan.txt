* Provide `cli` fixture for testing CLI (https://click.palletsprojects.com/en/master/testing/)
* Update behavior of `-c` option

| Command  | Before | After |
| ------------- | ------------- | ------|
| ckan -c config.ini not real command  | Missing config  | No such command |
| ckan -c config.ini -h | Missing config  | Help message |
| ckan -c config.ini  | Missing command  | Missing command(not changed) |
If a package had an extra field and this field was deleted, there is no way of adding the same extra field with the same value again. Actually, CKAN just marks field as deleted(we are expecting real deletion, as there are no revisions anymore and one can check old values via activity stream instead) and when the extra field is `re-added`, CKAN just doesn't restore state back to `active`.

When revisioned workflow was removed for packageExtras, `core.StatefulObjectMixin` was added as the parent class for `PackageExtra`. It has a `delete` method that set `state` column to `deleted` instead of real erasing.
We are expecting `domain_object.DomainObject::delete` to be called instead, which would delete a row, but it shadowed by `core.StatefulObjectMixin::delete`. This PR uses `session.delete` directly, so there will be no such mistakes in the future
### CKAN Version if known (or site URL)

2.6

### Please describe the expected behaviour

- to have an openapi.yaml specification

### Please describe the actual behaviour

- there's no one

### NOTE

Here you can find a superset OAS3 spec for ckan 2.2

https://app.swaggerhub.com/apis/EU-Open-Data-Portal/eu-open_data_portal/0.8.0

**Note:** Are you submitting a security related issue that could be a potential vulnerability? Please send it to security@ckan.org instead.


### CKAN Version if known (or site URL)
ALL

### Please describe the expected behaviour
We should provide additional way to the users so they can delete the resource view. Maybe add a delete button on the resource_views_list page (specifically on resource_view_list_item) and add a delete button, so the user is able to delete the view, without having to go to the view form page.
It would be nice if we can also somehow limit the creation of incorrect views, that cause a Server Error, during resource creation.

### Please describe the actual behaviour
Sometimes users create wrong views for the resource, and CKAN doesn't let them know during creation that something is wrong with the view that they are creating. Instead CKAN creates the view for the resource and gives a Server Error for the view.
If the user wants to delete the view, that is not possible since deleting is only available in the view edit form, which can't be opened since there is a Server Error.
The only option that the users have is to go directly to the database and delete the view. 

### What steps can be taken to reproduce the issue? 
Create a dataset
Add a resource to the dataset
Add a view to the resource (something that you know is not correct, and it would cause a Server Error)
Try deleting the view

While completing #5110, I'm creating tests for new click CLI commands and found an error in `ckan jobs` command.


### CKAN Version if known (or site URL)

https://github.com/EvgeniiaVak/ckan/commit/a3cbca96505aae0398534e02da7ed9ac60b03a72

### Expected behaviour

(Probably) `ckan jobs cancel` for a not existing job exits with non-zero code.

### Actual behaviour

The [new TestJobsCancel.test_cancel_not_existing test](https://github.com/EvgeniiaVak/ckan/blob/fix/remove-paster-cli/ckan/tests/test_cli.py#L249) shows that it exits with code 0. This test was created as an update from [the old paster test](https://github.com/EvgeniiaVak/ckan/blob/fix/remove-paster-cli/ckan/tests/lib/test_cli.py#L258). 
At the same time, the [new TestJobsCancel.test_cancel_missing_id](https://github.com/EvgeniiaVak/ckan/blob/fix/remove-paster-cli/ckan/tests/test_cli.py#L259) passes ok - the command does exit with a non-zero code if it's not given a job id at all.

### Steps to reproduce 

1. checkout my branch: https://github.com/EvgeniiaVak/ckan/tree/fix/remove-paster-cli
2. run  
```bash
pytest --ckan-ini=test.ini ckan/tests/test_cli.py::TestJobsCancel
```

### CKAN latest version


I's my first issue here in Github. I was installing Ckan latest version with Docker Compose (This is the documentation: https://docs.ckan.org/en/latest/maintaining/installing/install-from-docker-compose.html). When I reach the step 3 (Datastore and datapusher) and I have to edit the file "production.ini" (sudo vim $VOL_CKAN_CONFIG/production.ini) I get the error "No file or directory". It seems that the file doesn't exist (even directories), so vim can't reach destination and modify the file. 

How can I solve this problem? Thank you so much
Fixes #
Set default license as `notspecified` when creating dataset via API. Currently, it's `None` if not provided and will be changed on first entity from select box after package update from UI. This behaviour may not be obvious for some users.

### Features:

- [ ] includes tests covering changes
- [ ] includes updated documentation
- [ ] includes user-visible changes
- [X] includes API changes
- [ ] includes bugfix for possible backport

Please [X] all the boxes above that apply

Fix typo in nl messages 
 'U kan hiet ...'  -> 'U kan hier  ...'

Fixes # 
typo in nl messages 

### Proposed fixes:
ckan/i18n/nl/LC_MESSAGES/ckan.po >  'U kan hiet ...'  -> 'U kan hier  ...'

### Features:

- [ ] includes tests covering changes
- [ ] includes updated documentation
- [ ] includes user-visible changes
- [ ] includes API changes
- [ ] includes bugfix for possible backport

Please [X] all the boxes above that apply

Provide a unified workflow for:

* creating core migrations
* creating extension's migrations
* applying/reverting extension's migrations

There is one new command - `ckan generate migration -p PLUGIN -m Message` (create migration script and initialize migration repository inside extension, if used for first time) and new option `-p/--plugin` to `db upgrade`, `db downgrade` and `db version`, that uses plugin's migration scripts instead of core ones, when provided
Correct wrong filename: production.ini -> development.ini

Fixes #

### Proposed fixes:



### Features:

- [ ] includes tests covering changes
- [X] includes updated documentation
- [X] includes user-visible changes
- [ ] includes API changes
- [ ] includes bugfix for possible backport

Please [X] all the boxes above that apply
