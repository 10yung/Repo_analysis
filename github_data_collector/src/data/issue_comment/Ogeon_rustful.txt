Example code to reproduce:

```rust
let mut router = TreeRouter::new();
insert_routes! {
    &mut router => {
        "graph" => Get: Box::new(move |_: Context, _: Response| {}) as Box<Handler>,
    }
};
```
which expands to:
```rust
let mut router = TreeRouter::new();
{
    use ::router::Router;
    let mut router = &mut router;
    {
        let method =
        {
            #[allow(unused_imports)]
            use ::Method::*;
            Get
        };
        let path = &["graph"];
        router.insert(method, path,
                      Box::new(move |_: Context, _: Response| { }) as
                      Box<Handler>);
        { };
    };
    router
};
```
And the actual warning message:
```
warning: variable does not need to be mutable
  --> src/lib.rs:8:5
   |
8  | /     insert_routes! {
9  | |         &mut router => {
10 | |             "graph" => Get: Box::new(move |_: Context, _: Response| {}) as Box<Handler>,
11 | |         }
12 | |     };
   | |______^
   |
   = note: #[warn(unused_mut)] on by default
   = note: this error originates in a macro outside of the current crate
```
I'm expecting this to involve some design choices, so it's more of a tracking issue than something for anyone to pick up (unless you are confident enough).
Currently the documentation links points towards what's in the master branch, which will quite soon diverge after a release. The links should be changed to point to https://docs.rs/rustful/X/rustful/, where X is the released version, and the version script should be changed to update them as well.
For example `foo[]=bar1&foo[]=bar2`. This is useful enough to be supported, I think, even though it's non-standard. I don't yet have a specific design in mind, so it's wide open for suggestions, but I would like it to fit nicely into how parameters works today.

Having a `'static` lifetime requirement on `Handler`s seriously cripples handlers. This means you cannot have any `&T`s in `Handler`s that aren't static also. I encountered this problem today while trying to integrate [ivanceras/rustorm](https://github.com/ivanceras/rustorm) today with rustful with [this](https://gist.github.com/andor44/79aca5a802fcf8e5aa7d) code snippet. This doesn't work because `ApiHandler` stores a `&Database`, which isn't `'static`. I work around this issue by diving a bit lower and passing around the r2d2 connection pool instead, but that heavily bloats my code.

**tl;dr**: please make `Handler` not require `'static`, it would make it a _lot_ more flexible

This is currently blocked by some variant of rust-lang/cargo#1592 .
