## Feature request summary

In my view, the embedded Resource Picker is the most valuable component from the perspective of an embedded app developer. It provides a native feeling experience and saves us rebuilding a core piece of functionality that would be otherwise tedious to rebuild if you consider how much goes into it (pagination, API calls, variants, multiple types of resources etc.) 

In addition, there are other scenarios (non-modal experiences) where a resource picker would be useful. Such as a popover, or on a page. 

## Rationale

The ResourcePicker exists in the AppBridge but if I am honest 90% of my own bugs have something to do with this weird iframe experience —  the latest cookie / params complications have probably pushed me over the edge, and into the "not worth it" basket. The amount of issues here stemming from embedded experiences is an indicator of that. 

## Sidebar

If this idea is a non-starter I'd love to hear how I might tackle jerry-rigging the existing ResourcePicker to work outside of the AppBridge.
### WHY are these changes introduced?

While rumbling through #2625 I found a bunch of cases where our components exported types that either weren't needed outside of that component, or could be made so with a bit of refactoring, and pushing usage towards referencing something living on a Props interface.

This shrinks the amount of exports in a few components.

Note that this has no effect on the types we export publicly - they all remain the same.

### WHAT is this pull request doing?

Stop exporting a handful of types that weren't used outside that the file they are defined in.

Perform some refactoring so that some types are no longer used outside of the file they are defined in.

A common example is that instead of importing and using `PreferredPosition` from `src/components/PositionedOverlay`, instead import `PositionedOverlayProps` and reference `PositionedOverlay['preferredPosition']`, at which point `PreferredPosition` no longer needs to be exported.

### How to 🎩

Tests and type-checking pass
Note that src/components/index.ts is unmodified so our public APIs are unaffected.


## Issue summary

When using a standard `create-react-app` template and attempting to create a production build, you get a compile error with the `styles.css` file.

## Expected behavior

No errors when running a production build.

## Actual behavior

Running a `yarn build` (or the npm equivalent) on a standard `create-react-app` using the latest Polaris (4.11.0) you get the following error:

```console
Creating an optimized production build...
Failed to compile.

./node_modules/@shopify/polaris/styles.css
ParserError: Syntax Error at line: 1, column 34


error Command failed with exit code 1.
```

This appears to be due to the `browserslist` definition for the production build, though this worked in previous versions of Polaris. (4.10.2 and under). This doesn't happen in more recent create-react-app development builds because there's now a difference between the product and development build in the `package.json`:

```package.json
"browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
 }
```

If you copy the array of values from `production` into the `development` key, you'll be able to reproduce it when simply running `yarn start`.

## Steps to reproduce the problem

1. Create a standard create-react-app: `yarn create react-app testing`
1. Add the latest version of Polaris (4.11.0): `yarn add @shopify/polaris`
1. Install the style script at the top of the `index.js` file as specified by the Polaris install docs.
1. Run a production build: `yarn build`

## Reduced test case

I can't seem to create a codesandbox that reproduces it, but the App.js can be any standard Polaris app:

```jsx
import React from 'react';
import enTranslations from '@shopify/polaris/locales/en.json';
import { AppProvider, Page, Card, Button } from '@shopify/polaris';

function App() {
    return (
        <AppProvider i18n={enTranslations}>
            <Page title="Example app">
                <Card sectioned>
                    <Button onClick={() => alert('Button clicked!')}>Example button</Button>
                </Card>
            </Page>
        </AppProvider>
    );
}

export default App;
```

## Specifications

- Are you using the React components? (Y/N): Y
- Polaris version number: 4.11.0
- Browser: None needed
- Device: MacBook Pro
- Operating System: macOS Catalina 10.15.2
### WHY are these changes introduced?

Fixes https://github.com/Shopify/polaris-react/issues/2605. (You can find all context in the issue)

`PopoverOverlay` changing the container's `display` from `block` to `flex` when it's measuring on subtree change (those changes happen to take place on scroll when a library like react-virtualized is used). This then seems to cause some browsers to stop the scrolling.
The Popover switches its container `display` from `block` to `flex` and vice versa when measuring. 

### WHAT is this pull request doing?
We wondered why we are switching `display` from `flex` to `block` when measuring and couldn't come up with a good explanation. So in this PR we are attempting to remove it. We did a pairing session with @chloerice where we also tried the custom build in web (looked at user menu and some autocomplete lists) and everything seemed fine. However, we are aware that we might be missing something crucial and were hoping that someone could chime in if they have any ideas. 

<details>
  <summary>Summary of your gif(s)</summary>
    <img src="https://user-images.githubusercontent.com/474248/72628161-c463da80-391b-11ea-9c21-b12bd52eca8b.gif" alt="scrolling behavior before change. Does not work when scrollbar is used" />
    <img src="https://user-images.githubusercontent.com/474248/72627831-21ab5c00-391b-11ea-8a17-78ecc76d0cd8.gif" alt="scrolling behavior after change. works when scrollbar is used" />
</details>


## <!-- ℹ️ Delete the following for small / trivial changes -->

### How to 🎩

🖥 [Local development instructions](https://github.com/Shopify/polaris-react/blob/master/README.md#development)
🗒 [General tophatting guidelines](https://github.com/Shopify/polaris-react/blob/master/documentation/Tophatting.md)
📄 [Changelog guidelines](https://github.com/Shopify/polaris-react/blob/master/documentation/Versioning%20and%20changelog.md)

<!--
  Give as much information as needed to experiment with the component
  in the playground.
-->

<details>
<summary>Copy-paste this code in <code>playground/Playground.tsx</code>:</summary>

```jsx
import React from 'react';
import {Button, Page, Popover, Banner} from '../src';

export function Playground() {
  const [counter, setCounter] = React.useState(30);

  return (
    <Page title="Playground">
      <Banner>Scroll using the scrollbar</Banner>
      <br />
      <Popover
        active
        activator={
          <Button>
            I am <s>groot</s> button
          </Button>
        }
        onClose={() => {}}
      >
        <div
          style={{height: '200px', width: '100px', overflow: 'auto'}}
          onScroll={() => {
            setCounter((counter) => counter + 1);
          }}
        >
          <div style={{height: '1000px'}}>
            {Array.from({length: counter}).map((_, i) => (
              <div style={{height: '50px'}} key={i}>
                item {i}
              </div>
            ))}
          </div>
        </div>
      </Popover>
    </Page>
  );
}


```

</details>

### 🎩 checklist

* [ ] Tested on [mobile](https://github.com/Shopify/polaris-react/blob/master/documentation/Tophatting.md#cross-browser-testing)
* [ ] Tested on [multiple browsers](https://help.shopify.com/en/manual/intro-to-shopify/shopify-admin/supported-browsers)
* [ ] Tested for [accessibility](https://github.com/Shopify/polaris-react/blob/master/documentation/Accessibility%20testing.md)
* [ ] Updated the component's `README.md` with documentation changes
* [ ] [Tophatted documentation](https://github.com/Shopify/polaris-react/blob/master/documentation/Tophatting%20documentation.md) changes in the style guide
* [ ] For visual design changes, pinged one of @ HYPD, @ mirualves, @ sarahill, or @ ry5n to update the Polaris UI kit

<!--
  When tophatting, please check the UNRELEASED entry for consistency, as per the [guidelines](https://github.com/Shopify/polaris-react/blob/master/documentation/Versioning%20and%20changelog.md).
-->

<!--
  If you don't have access to Percy, please request access in the #polaris Slack channel.
-->

## Feature request summary

- It would be lovely for the `Filters` component to be able take a prop for autoComplete, and simply pass this boolean on to the TextField it renders. 

## Rationale

- As part of the Reactification of our admin `ProductIndex`, we need a way to enable autoComplete within the `Filters` component, in order to mirror Rails behaviour. (https://github.com/Shopify/store/issues/12362) 
- AutoComplete suggestions under a Filter TextField can facilitate convenience for merchants, as they are likely to type the same few filters often. 💫
- Being able to mirror the Rails behaviour would make the Reactification of the admin interface seamless for merchants! ✨

---

🌟 Feature requests that are not yet planned will be closed. We then use the issue’s [:+1: upvotes](https://help.github.com/articles/about-conversations-on-github/) to track and set priorities. See the [contribution guidelines](https://github.com/Shopify/polaris-react/blob/master/.github/CONTRIBUTING.md) for more information.

### WHY are these changes introduced?

This adds a context control to our details page. Allowing quick comparison from the theme provider logo (present on the frame story page) and context control

## <!-- ℹ️ Delete the following for small / trivial changes -->

### How to 🎩

You just need to checkout the details page and make sure the context control looks good from within the nav on small screens, and in the top bar on larger screens

### 🎩 checklist

* [x] Tested on [mobile](https://github.com/Shopify/polaris-react/blob/master/documentation/Tophatting.md#cross-browser-testing)
* [x] Tested on [multiple browsers](https://help.shopify.com/en/manual/intro-to-shopify/shopify-admin/supported-browsers)
* [ ] Tested for [accessibility](https://github.com/Shopify/polaris-react/blob/master/documentation/Accessibility%20testing.md)
* [ ] Updated the component's `README.md` with documentation changes
* [ ] [Tophatted documentation](https://github.com/Shopify/polaris-react/blob/master/documentation/Tophatting%20documentation.md) changes in the style guide
* [ ] For visual design changes, pinged one of @ HYPD, @ mirualves, @ sarahill, or @ ry5n to update the Polaris UI kit

<!--
  When tophatting, please check the UNRELEASED entry for consistency, as per the [guidelines](https://github.com/Shopify/polaris-react/blob/master/documentation/Versioning%20and%20changelog.md).
-->

<!--
  If you don't have access to Percy, please request access in the #polaris Slack channel.
-->

## Feature request summary

When we use the DropZone component into the React and set the `allowMultiple={false}` so that the user can upload only 1 image.
Now if the user by mistake selected the wrong image from the file upload window and wants to change the uploaded images then they are not able to open the file upload window to update or change the previously uploaded image.


## Rationale

In `allowMultiple={true}` mode we can be able to select the image even after selecting the images previously and still able to click on drop zone div.


## Feature request summary

<!--
Write a short description of the feature here ↓
-->

`Modal` supports a `larger` prop to stretch the modal dialog wider, but offers no similar `smaller` prop to squish the dialog slimmer.

## Rationale

<!--
Explain the benefit of this feature
-->

This can be particularly desirable when a modal is used for form entry and the expected field inputs are relatively small, this allows us to avoid a lot of wasted horizontal space.

---

🌟 Feature requests that are not yet planned will be closed. We then use the issue’s [:+1: upvotes](https://help.github.com/articles/about-conversations-on-github/) to track and set priorities. See the [contribution guidelines](https://github.com/Shopify/polaris-react/blob/master/.github/CONTRIBUTING.md) for more information.

### WHY are these changes introduced?

We have incorrect custom properties

### WHAT is this pull request doing?

Adding utilities and tests for custom properties

## <!-- ℹ️ Delete the following for small / trivial changes -->

### How to 🎩

🖥 [Local development instructions](https://github.com/Shopify/polaris-react/blob/master/README.md#development)
🗒 [General tophatting guidelines](https://github.com/Shopify/polaris-react/blob/master/documentation/Tophatting.md)
📄 [Changelog guidelines](https://github.com/Shopify/polaris-react/blob/master/documentation/Versioning%20and%20changelog.md)

<!--
  Give as much information as needed to experiment with the component
  in the playground.
-->

<details>
<summary>Copy-paste this code in <code>playground/Playground.tsx</code>:</summary>

```jsx
import React from 'react';
import {Page} from '../src';

export function Playground() {
  return (
    <Page title="Playground">
      {/* Add the code you want to test in here */}
    </Page>
  );
}

```

</details>

### 🎩 checklist

* [ ] Tested on [mobile](https://github.com/Shopify/polaris-react/blob/master/documentation/Tophatting.md#cross-browser-testing)
* [ ] Tested on [multiple browsers](https://help.shopify.com/en/manual/intro-to-shopify/shopify-admin/supported-browsers)
* [ ] Tested for [accessibility](https://github.com/Shopify/polaris-react/blob/master/documentation/Accessibility%20testing.md)
* [ ] Updated the component's `README.md` with documentation changes
* [ ] [Tophatted documentation](https://github.com/Shopify/polaris-react/blob/master/documentation/Tophatting%20documentation.md) changes in the style guide
* [ ] For visual design changes, pinged one of @ HYPD, @ mirualves, @ sarahill, or @ ry5n to update the Polaris UI kit

<!--
  When tophatting, please check the UNRELEASED entry for consistency, as per the [guidelines](https://github.com/Shopify/polaris-react/blob/master/documentation/Versioning%20and%20changelog.md).
-->

<!--
  If you don't have access to Percy, please request access in the #polaris Slack channel.
-->

## Feature request summary

It would be really nice to have the `autoFocus` option on the `Select` component as well. The same way as it's working on the `TextField` component.


## Rationale

Increases User Experience - gives users the ability to tab through forms.

---

🌟 Feature requests that are not yet planned will be closed. We then use the issue’s [:+1: upvotes](https://help.github.com/articles/about-conversations-on-github/) to track and set priorities. See the [contribution guidelines](https://github.com/Shopify/polaris-react/blob/master/.github/CONTRIBUTING.md) for more information.
