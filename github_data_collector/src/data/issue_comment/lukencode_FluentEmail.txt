Updated razorlight to beta-4, the web sample to .net core 3.1 and added a full framework console app to demonstrate full-framework implementation.
When calling RazzoRender on .Net Core 3.0 I get the following error message 
Could not load type 'Microsoft.AspNetCore.Mvc.Razor.Extensions.NamespaceDirective' from assembly 'Microsoft.AspNetCore.Mvc.Razor.Extensions, Version=3.0.0.0,

Any possible solutions?
This setting is needed, if you want to connect to the Office 365 SMTP service. The existing `UseSSL` flag does not work in this case.

```csharp
new SmtpClientOptions
{
    Server = emailSettings.Host,
    Port = emailSettings.Port,
    User = emailSettings.Username,
    Password = emailSettings.Password,
    SocketOptions = SecureSocketOptions.StartTls,
    RequiresAuthentication = true
};
```
Itâ€™s needed for to be able to inline image in the e-mail body, as in the SmtpSender.
There is currently an Smtp sender which will support AWS SES Smtp connections, however this is not the prefered way to send emails to the service.

Can there be an AWS SES API sender added to the list of sender packages. This can use the AWSSDK.SimpleEmail Nuget package to make the API Request.
Added support for `;` in Adding multiple cc's #176
I have added ElasticEmailSender for ElasticEmail service.
Hi, I was testing FluentEmail with RazorRender and .netfx 4.7.1, but is always reported exception. Am I missing something to get it worked well with .netfx 4.7.1?
My FluentEmail version was 2.7.0.
Btw, I also tried it with .net core 2.2, the RazorRenderer worked well with it.
Thanks in advance.

![image](https://user-images.githubusercontent.com/21193224/67463331-d06d3280-f673-11e9-82cc-80bfe2756c95.png)


```c#
using FluentEmail.Core;
using FluentEmail.Smtp;
using FluentEmail.Razor;
using RazorLight.Razor;
using Microsoft.Extensions.DependencyInjection;
using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Net.Mail;
using System.Text;
using System.Threading.Tasks;
using Xunit;

namespace GeneralTest
{
    public class FluntEmailTest
    {
        public FluntEmailTest()
        {
            Email.DefaultRenderer = new RazorRenderer();
        }

        [Fact]
        public void Test1()
        {
        }
    }
}

```
`To(string emailAddress)` supports multiple addresses (allows multiple splitting on ';').

`CC` should support this too (same for `BCC`).
Send grid has it's own templates system. I've added support 