This is a feature request for pagination support for endpoints like https://api.slack.com/methods/users.list and https://api.slack.com/methods/conversations.list. This would involve the relevant methods changing to accept an optional cursor argument, and then also providing the response_metadata.next_cursor value to the success handler closure.

I have some local changes that achieve this for these two endpoints, and I could take a stab at a proper PR for this, but I wanted to get your thoughts on it first.

Thanks!
The dependency story for SlackKit can be simplified by migrating to SwiftNIO. This has the additional benefit of using frameworks that have the backing support of Apple.

https://github.com/apple/swift-nio
https://github.com/apple/swift-nio-transport-services

In Slack there's a limit for length of messages (4000 bytes). I'd been banging my head against the wall trying to figure out why my message is not being printed in chat when everything ran perfectly on console before guessing there might be a limit. No error was shown for that. Would it be a good idea to throw this kind of error? 
I'm working on a Slash command that needs access to information from the `WebhookRequest` to help determine the response.

My initial thought was to subclass `Middleware` in order to do this. While this will suit my needs, I wonder if it is better to generalize this approach.

Is there a reason the current implementation exists? Would there be interest in adding new middleware that supports this case?


- Based on [this tutorial](https://api.slack.com/tutorials/slack-apps-hello-world)
- [Docs: Enterprise Grid](https://api.slack.com/enterprise-grid#what_is_enterprise_grid)
- [Docs](https://api.slack.com/docs/presence-and-status#custom_status)
- [Blog](https://medium.com/slack-developer-blog/beyond-busy-87b18b7eda48)
