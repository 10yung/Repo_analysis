hi,
thank you for the great work,
But does it support computation graph optimization for pytorch?
Hi all,
i'm trying to test the "Read a Photo" example on the [turial](http://libccv.org/tutorial/)
but i get this error on building

```
.../liuliu-ccv-07fc691/lib/ccv.h:474: error: expected identifier before numeric constant
         ccv_read_n(in, x, type, ##__VA_ARGS__, 0, 0, 0)
                                                ^
```

I'm using Qt,
the pro file content is

```
#CCV SWT
INCLUDEPATH += "/home/andomp/Documenti/liuliu-ccv-07fc691/lib/"
LIBS += -L"/home/andomp/Documenti/liuliu-ccv-07fc691/lib" -lccv -lm -lpng -ljpeg -ltesseract
```
Any idea where to go from here? Just curious if you have any insight as to the reason for this (or what it means to "relink" a shared library). For some context, I'm running Solus which is notable for its architectural differences to other OSs like Ubuntu. Any ideas for a quick fix like recompiling FORTRAN or something? I'm dying to get my hands on some `libccv` code :)

Hello,

I have been comparing this library's implementation of Stroke Width Transform with another one. Yours seems to be sensitive to the orientation of the text (I cannot display the images but in one the text is vertical and in the other one it is horizontal [rotated by 90 degrees], in the case of vertical text it doesn't detect it)

However the other implementation did not have this issue (that implementation however performs poorly if the size of the text is small compared to the size of the image)

I was wondering why your method is sensitive to text orientation.

Building libccv went fine, but running make in serve failed to link:

```
liuliu-ccv-07fc691/serve> make
make -C ../lib
make[1]: "/usr/home/nvx/ccv/liuliu-ccv-07fc691/lib/makefile" line 30: warning: duplicate script for target "%.o" ignored
make[1]: "/usr/home/nvx/ccv/liuliu-ccv-07fc691/lib/makefile" line 27: warning: using previous script for "%.o" defined here
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c serve.c -o serve.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c uri.c -o uri.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c parsers.c -o parsers.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c bbf.c -o bbf.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c dpm.c -o dpm.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c icf.c -o icf.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c scd.c -o scd.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c sift.c -o sift.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c swt.c -o swt.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c tld.c -o tld.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c convnet.c -o convnet.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c async.c -o async.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c ebb.c -o ebb.o
clang -O3 -Wall -I"../lib" -msse2 -D HAVE_SSE2 -I/usr/local/include -c ebb_request_parser.c -o ebb_request_parser.o
ebb_request_parser.c:68:18: warning: unused variable 'ebb_request_parser_en_ChunkedBody' [-Wunused-const-variable]
static const int ebb_request_parser_en_ChunkedBody = 233;
                 ^
ebb_request_parser.c:69:18: warning: unused variable 'ebb_request_parser_en_ChunkedBody_chunk_chunk_end' [-Wunused-const-variable]
static const int ebb_request_parser_en_ChunkedBody_chunk_chunk_end = 243;
                 ^
ebb_request_parser.c:70:18: warning: unused variable 'ebb_request_parser_en_main' [-Wunused-const-variable]
static const int ebb_request_parser_en_main = 1;
                 ^
3 warnings generated.
clang -o ccv serve.o uri.o parsers.o bbf.o dpm.o icf.o scd.o sift.o swt.o tld.o convnet.o async.o ebb.o ebb_request_parser.o -L"../lib" -lccv -lev -ldispatch -L/usr/local/lib -lm
parsers.o: In function `string_parser_execute':
parsers.c:(.text+0x8d2): undefined reference to `ccv_get_cli_output_levels'
parsers.o: In function `param_type_parser_execute':
parsers.c:(.text+0x147d): undefined reference to `ccv_get_cli_output_levels'
bbf.o: In function `uri_bbf_detect_objects_parse':
bbf.c:(.text+0x56): undefined reference to `ccv_bbf_default_params'
bbf.c:(.text+0x64): undefined reference to `ccv_bbf_default_params'
bbf.o: In function `uri_bbf_detect_objects_init':
bbf.c:(.text+0xec): undefined reference to `ccv_bbf_read_classifier_cascade'
bbf.o: In function `uri_bbf_detect_objects_destroy':
bbf.c:(.text+0x18e): undefined reference to `ccv_bbf_classifier_cascade_free'
bbf.o: In function `uri_bbf_detect_objects':
bbf.c:(.text+0x239): undefined reference to `ccv_read_impl'
bbf.c:(.text+0x2f9): undefined reference to `ccv_resample'
bbf.c:(.text+0x302): undefined reference to `ccv_matrix_free'
bbf.c:(.text+0x323): undefined reference to `ccv_bbf_detect_objects'
bbf.c:(.text+0x34f): undefined reference to `ccv_matrix_free'
bbf.c:(.text+0x5c0): undefined reference to `ccv_array_free'
dpm.o: In function `uri_dpm_detect_objects_parse':
dpm.c:(.text+0x56): undefined reference to `ccv_dpm_default_params'
dpm.o: In function `uri_dpm_detect_objects_init':
dpm.c:(.text+0xde): undefined reference to `ccv_dpm_read_mixture_model'
dpm.c:(.text+0xef): undefined reference to `ccv_dpm_read_mixture_model'
dpm.o: In function `uri_dpm_detect_objects_destroy':
dpm.c:(.text+0x19e): undefined reference to `ccv_dpm_mixture_model_free'
dpm.c:(.text+0x1a7): undefined reference to `ccv_dpm_mixture_model_free'
dpm.o: In function `uri_dpm_detect_objects':
dpm.c:(.text+0x255): undefined reference to `ccv_read_impl'
dpm.c:(.text+0x30d): undefined reference to `ccv_resample'
dpm.c:(.text+0x316): undefined reference to `ccv_matrix_free'
dpm.c:(.text+0x335): undefined reference to `ccv_dpm_detect_objects'
dpm.c:(.text+0x365): undefined reference to `ccv_matrix_free'
dpm.c:(.text+0x727): undefined reference to `ccv_array_free'
icf.o: In function `uri_icf_detect_objects_parse':
icf.c:(.text+0x55): undefined reference to `ccv_icf_default_params'
icf.c:(.text+0x62): undefined reference to `ccv_icf_default_params'
icf.o: In function `uri_icf_detect_objects_init':
icf.c:(.text+0xec): undefined reference to `ccv_icf_read_classifier_cascade'
icf.o: In function `uri_icf_detect_objects_destroy':
icf.c:(.text+0x18e): undefined reference to `ccv_icf_classifier_cascade_free'
icf.o: In function `uri_icf_detect_objects':
icf.c:(.text+0x239): undefined reference to `ccv_read_impl'
icf.c:(.text+0x2f9): undefined reference to `ccv_resample'
icf.c:(.text+0x302): undefined reference to `ccv_matrix_free'
icf.c:(.text+0x321): undefined reference to `ccv_icf_detect_objects'
icf.c:(.text+0x34d): undefined reference to `ccv_matrix_free'
icf.c:(.text+0x5c0): undefined reference to `ccv_array_free'
scd.o: In function `uri_scd_detect_objects_parse':
scd.c:(.text+0x55): undefined reference to `ccv_scd_default_params'
scd.c:(.text+0x62): undefined reference to `ccv_scd_default_params'
scd.o: In function `uri_scd_detect_objects_init':
scd.c:(.text+0xec): undefined reference to `ccv_scd_classifier_cascade_read'
scd.o: In function `uri_scd_detect_objects_destroy':
scd.c:(.text+0x18e): undefined reference to `ccv_scd_classifier_cascade_free'
scd.o: In function `uri_scd_detect_objects':
scd.c:(.text+0x239): undefined reference to `ccv_read_impl'
scd.c:(.text+0x2f9): undefined reference to `ccv_resample'
scd.c:(.text+0x302): undefined reference to `ccv_matrix_free'
scd.c:(.text+0x321): undefined reference to `ccv_scd_detect_objects'
scd.c:(.text+0x34d): undefined reference to `ccv_matrix_free'
scd.c:(.text+0x5c0): undefined reference to `ccv_array_free'
sift.o: In function `uri_sift_parse':
sift.c:(.text+0xf6): undefined reference to `ccv_sift_default_params'
sift.c:(.text+0x104): undefined reference to `ccv_sift_default_params'
sift.o: In function `uri_sift':
sift.c:(.text+0x1df): undefined reference to `ccv_read_impl'
sift.c:(.text+0x22e): undefined reference to `ccv_sift'
sift.c:(.text+0x237): undefined reference to `ccv_matrix_free'
sift.c:(.text+0x527): undefined reference to `ccv_array_free'
sift.c:(.text+0x530): undefined reference to `ccv_matrix_free'
swt.o: In function `uri_swt_detect_words_parse':
swt.c:(.text+0xfa): undefined reference to `ccv_swt_default_params'
swt.o: In function `uri_swt_detect_words':
swt.c:(.text+0x1db): undefined reference to `ccv_read_impl'
swt.c:(.text+0x292): undefined reference to `ccv_resample'
swt.c:(.text+0x29b): undefined reference to `ccv_matrix_free'
swt.c:(.text+0x2b5): undefined reference to `ccv_swt_detect_words'
swt.c:(.text+0x509): undefined reference to `ccv_matrix_free'
swt.c:(.text+0x538): undefined reference to `ccv_matrix_free'
swt.c:(.text+0x540): undefined reference to `ccv_array_free'
tld.o: In function `uri_tld_track_object_init':
tld.c:(.text+0x36): undefined reference to `ccv_array_new'
tld.o: In function `uri_tld_track_object_destroy':
tld.c:(.text+0xae): undefined reference to `ccv_array_free'
tld.o: In function `uri_tld_track_object_parse':
tld.c:(.text+0x131): undefined reference to `ccv_tld_default_params'
tld.c:(.text+0x13e): undefined reference to `ccv_tld_default_params'
tld.c:(.text+0x14c): undefined reference to `ccv_tld_default_params'
tld.c:(.text+0x15a): undefined reference to `ccv_tld_default_params'
tld.c:(.text+0x168): undefined reference to `ccv_tld_default_params'
tld.o:tld.c:(.text+0x176): more undefined references to `ccv_tld_default_params' follow
tld.o: In function `uri_tld_track_object':
tld.c:(.text+0x294): undefined reference to `ccv_read_impl'
tld.c:(.text+0x303): undefined reference to `ccv_read_impl'
tld.c:(.text+0x3aa): undefined reference to `ccv_tld_track_object'
tld.c:(.text+0x3bb): undefined reference to `ccv_matrix_free'
tld.c:(.text+0x3c4): undefined reference to `ccv_matrix_free'
tld.c:(.text+0x5db): undefined reference to `ccv_array_push'
tld.c:(.text+0x6e7): undefined reference to `ccv_tld_new'
tld.c:(.text+0x6ff): undefined reference to `ccv_matrix_free'
tld.c:(.text+0x812): undefined reference to `ccv_matrix_free'
tld.c:(.text+0x81b): undefined reference to `ccv_matrix_free'
tld.o: In function `uri_tld_track_object_free':
tld.c:(.text+0x907): undefined reference to `ccv_tld_free'
convnet.o: In function `uri_convnet_classify_init':
convnet.c:(.text+0x1e): undefined reference to `ccv_convnet_read'
convnet.c:(.text+0x5b): undefined reference to `ccv_convnet_read'
convnet.o: In function `uri_convnet_words_read':
convnet.c:(.text+0x15c): undefined reference to `ccv_array_new'
convnet.c:(.text+0x26b): undefined reference to `ccv_array_push'
convnet.o: In function `uri_convnet_classify_destroy':
convnet.c:(.text+0x2bf): undefined reference to `ccv_convnet_free'
convnet.c:(.text+0x2f5): undefined reference to `ccv_array_free'
convnet.c:(.text+0x2fe): undefined reference to `ccv_convnet_free'
convnet.c:(.text+0x335): undefined reference to `ccv_array_free'
convnet.o: In function `uri_convnet_classify':
convnet.c:(.text+0x4b6): undefined reference to `ccv_read_impl'
convnet.c:(.text+0x4e7): undefined reference to `ccv_convnet_input_formation'
convnet.c:(.text+0x4f0): undefined reference to `ccv_matrix_free'
convnet.c:(.text+0x520): undefined reference to `ccv_convnet_classify'
convnet.c:(.text+0x6ec): undefined reference to `ccv_array_free'
convnet.c:(.text+0x6f5): undefined reference to `ccv_matrix_free'
clang: error: linker command failed with exit code 1 (use -v to see invocation)
*** Error code 1

Stop.
make: stopped in /usr/home/nvx/ccv/liuliu-ccv-07fc691/serve
```
Hey guys, can someone help me compiling for iOs. The old Klaus version works, but ccv version used looks quite different from the current one. Unfortunately I’m unable to compile on iOs with the latest ccv version.

Here is what I do: I drop the lib folder in my code and click copy if needed. Then, #include <ccv.h> doesn’t work but #include “lib/ccv.h” does.

Then however, when i try to call ccv_read (like is done in Klaus) the code doesn’t compile anymore and throws this error: 
Undefined symbols for architecture i386:
  "_ccv_read_impl", 

Any pointers would be appreciated. Thanks a lot !
There has been an update in libavutil renaming some constants.

http://stackoverflow.com/questions/38847745/cannot-resolve-variable-pix-fmt-rgb24-ffmpeg-source-code-install-with-the-newes

Can be found looking in /usr/include/libavutil/pixfmt.h
Hello, guys,

When compile ccv,  I get the Error message:  

cuda/cwc_convnet.cu -o cuda/cwc_convnet.o -c -O3 --use_fast_math -arch=sm_30 -D HAVE_CBLAS -D HAVE_LIBPNG -D HAVE_LIBJPEG -D HAVE_FFTW3 -D HAVE_LIBLINEAR -D HAVE_AVCODEC -D HAVE_AVFORMAT -D HAVE_SWSCALE -D HAVE_SSE2 -D HAVE_GSL -D HAVE_CUDA
cuda/cwc_convnet.cu: 6: cuda/cwc_convnet.cu: extern: not found
cuda/cwc_convnet.cu: 15: cuda/cwc_convnet.cu: Syntax error: "}" unexpected
makefile:30: recipe for target 'cuda/cwc_convnet.o' failed
make: *** [cuda/cwc_convnet.o] Error 2

My system:
ubuntu 16.04
cuda 8.0

What is the problem? Could you help me?
Thank you!
@antimatter15 
@liuliu 
In the final stages of training a model I receive one of the following errors from gsl
gsl: svd.c:285: ERROR: svd of MxN matrix, M<N, is not implemented
gsl: init_source.c:29: ERROR: matrix dimension n1 must be positive integer

I think these conditions should be checked for so that the program exits cleanly (rather than crashing with a core dump).

Also, what can I do to try and prevent these errors from occurring?
Hi guys. I'm a newbie in programming. I figured it out how to compile the library with clang (with libjpeg and libpng) and I'm able to run the example read/write programm in Getting Started section. Anyway I couldnt find the .deps file and I cannot compile any of the examples in the bin directory because missing links. For example the dpmdetect code gives me :

Compile:
clang -I/home/yasen/Documents/ccv2/lib -L/home/yasen/Documents/ccv2/lib icfdetect.c -lccv -ljpeg -lpng -o dpmdetect

Result:

/usr/bin/ld: /home/yasen/Documents/ccv2/lib/libccv.a(ccv_icf.o): undefined reference to symbol '__log_finite@@GLIBC_2.15'
//lib/x86_64-linux-gnu/libm.so.6: error adding symbols: DSO missing from command line
clang: error: linker command failed with exit code 1 (use -v to see invocation)