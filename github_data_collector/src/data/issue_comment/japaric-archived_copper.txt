Hi,

I am following the Copper book, and I am currently having problems with the very first program (http://japaric.github.io/copper/first/build.html).

The program compiles, but the objdump output is the following:

```
$arm-none-eabi-objdump -CD target/thumbv7m-none-eabi/debug/app

target/thumbv7m-none-eabi/debug/app:     file format elf32-littlearm


Disassembly of section .text:

00000000 <_reset-0x8>:
   0:	20010000 	andcs	r0, r1, r0
   4:	00000009 	andeq	r0, r0, r9
```

For some reason the main function is optimized away at some point.
If I make rustc emit the assembly file, I can see the function is there, with the right symbol (`_reset`), so I guess that the problem comes while linking.

the source code parts are still dual licensed under the MIT/Apache-2.0
licenses

---

Hey all,

I'd like to relicense the non source code parts (the "documentation") of this
repository under the CC-BY 4.0 license as, I understand it, it's a better
license for "prose".

The source code will remain dual licensed under MIT/Apache-2.0.

If you are okay with CC-BY/MIT/Apache-2.0 licensing, can you reply on this
ticket with:

> I license past and future contributions under the triple CC-BY/MIT/Apache-2.0 license, allowing licensees to chose the license at their option.

Thanks, and sorry for making you do this.

cc:

- [ ] @Tiwalun
- [ ] @cwoodall
- [ ] @dzamlo
- [x] @jamesmunns
- [x] @jedireza
- [x] @limeburst

Some steps are common to all platforms




First of all, thanks for writing this book, it was a great help getting Rust code to run on my Cortex M4. :+1: 

While experimenting with my code, I found a way how it can be compiled with optimization, without everything being optimized away.

The following steps have to be done:
- Make `mod vector_table`, `static EXCEPTIONS` and `static RESET` public
- Add the `#[no_mangle]` attribute to `EXCEPTIONS` and `RESET`
- use `core::ptr::read_volatile` and `write_volatile` for peripheral access

If this looks okay, I'll make a pull request with these changes.
