## Context
* Last green jenkins on master build was #1843
* It seems that later builds are failing because of pytest 5.x is used
and it dropped support for python 2.7 - see  https://github.com/pytest-dev/pytest/issues/5519

## What changes were proposed in this pull request?

* remove pytest-cov as this is (maybe) not essential for the build

## How was this patch tested?

We will test this using jenkins build pipeline


### Describe the bug
Loading multilog after multiple restarts fails.

### How to reproduce the bug?
The test case is:

1. start confluo using data path (e.g. --data-path=/var/db)
2. create multilog and write to it
```java
RpcClient client = new RpcClient(HOST, PORT);
client.createAtomicMultilog(MULTILOG_NAME, "{ msg: STRING(8) }", StorageMode.DURABLE);
client.append("abcdefgh");
client.disconnect();
```
3. stop the confluo server
4. start confluo server using same data path as in step 1
5. check count of items - outputs 1
```java
RpcClient client = new RpcClient(HOST, PORT);
client.loadAtomicMultilog(MULTILOG_NAME);
System.out.println(client.numRecords());
client.disconnect();
```
6. stop the confluo server
7. start confluo server using same data path as in step 1
8. retry step 5 - it fails with Floating point exception

### Expected behavior
Step 8 should not fail and should output 1

### Detailed logs
Error log: `Floating point exception`


Dear professor 
                         I have pasted the code I write for testing performace such as ops and throughput。I test the ops about 223566 packet per second。 The packet size is about 100 bytes. I want to seek your help for testing the performance.
                                                                                                                                    
                                                                                                                                                   
                                                                                                                                         Thanks

GC data log buckets after archiving them for durable and durable relaxed modes so that we're not using 2x the disk space.
## What changes were proposed in this pull request?
1. provide a producer and consumer implement for confluo as a pub/sub system in java
2. also include a simple produce/consume benchmark test

## How was this patch tested?
 TestPubSub class provide  unit tests

related issue #123 ,#125 
[An extra null pointer check is not needed in functions](https://isocpp.org/wiki/faq/freestore-mgmt#delete-handles-null "Do I need to check for null before delete p?") like the following.
* [byte_string](https://github.com/ucbrise/confluo/blob/5d813245952b2fbd7b103a1ca70e5869d92d1498/libconfluo/src/types/byte_string.cc#L96 "Destructor for byte_string")
* [delta_encoded_array](https://github.com/ucbrise/confluo/blob/7aa7ed5ccba3ecf6d07f160a5dce2880f314c830/libconfluo/confluo/container/bitmap/delta_encoded_array.h#L43 "Destructor for delta_encoded_array")
* [string_map](https://github.com/ucbrise/confluo/blob/7aa7ed5ccba3ecf6d07f160a5dce2880f314c830/libconfluo/confluo/container/string_map.h#L89 "Destructor for string_map")
Initial sketch-related API additions to `atomic_multilog`:
```C++
  void add_sketch(sketch_name : str, field_name : str, filter_name : Optional[str]);
  void remove_sketch(sketch_name : str);
  size_t estimate_frequency(sketch_name : str, value : str);
  map<val : freq> get_heavy_hitters(sketch_name : str);
  double evaluate_metric(sketch_name : str, metric: enum);
```

## How was this patch tested?

WIP

We are interesting at the performance of Confluo especially the comparison with Kafka. 
Can confluo provide detailed test example to help user better understanding of that so we can make better use of confluo. 

Or
1.  is there any suggestion for the comparison testing with Kafka?
2. doese confluo support HA?
Thanks a lot! 
Hi there,

I see there's been some activity in a branch called `chain-replication` but it'd be nice to know what you folks have in mind for scale-out architecture. :)
The User Guide at https://ucbrise.github.io/confluo/ could use a full Python version. At this time it's completely unclear how to use Confluo from Python.