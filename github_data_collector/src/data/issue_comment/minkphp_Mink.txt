If DriverInterface::getValue() can return null, so does this method.
This adds travis testing of php73 and php74 and fixes the only problem we have detected with php74 so far.

Before: https://travis-ci.org/stronk7/Mink/builds/614672369
After: https://travis-ci.org/stronk7/Mink/builds/614678756

For your consideration, ciao :-)
#hackdayparis

This allows projects using Mink to create their Named and Partial
selectors, and then to add additional replacements and selectors to be
registered for subsequent use.

This is particularly useful in projects with a distributed plugin
architecture which make use of replacements and selectors
without abusing Reflection to do so.

This is something that we currently do in Moodle for Behat for exactly this reason:
Our hack with Reflection to access the properties to allow proper translation: https://github.com/andrewnicols/moodle/blob/MDL-66559-master/lib/behat/classes/named_selector.php#L48
Registration of plugin replacements and selectors: https://github.com/andrewnicols/moodle/blob/MDL-66559-master/lib/tests/behat/behat_hooks.php#L743

There is some discussions happening on various driver repos about dropping PH 5.3 support. This issue is about discussing a consolidated plan for the whole set of Mink repos, to be consistent.

Arguments to drop support:

- all PHP versions < 7.1 are unmaintained (and PHP 7.1 reaches that point at the end of the year)
- Travis supports only PHP 5.6+ on their xenial infrastructure, forcing to use trusty for 5.4 and 5.5 and precise for 5.4. And they announced that the precise infrastructure will be decommissioned in the future, forbidding us to run tests on 5.3 at that point (and so to officially support it)
- PHPUnit is dropping support for unmaintained PHP versions regularly, which forces us to support a wide range of PHPUnit versions to run our testsuite, which becomes more painful over time. For now, we need these versions:
    - 4.8 for PHP 5.3 to 5.5
    - 5.7 for PHP 5.6
    - 6.5 for PHP 7.0
    - 7.4 for PHP 7.1+
    - we are currently not yet compatible with the new PHPUnit 8, but it supports PHP 7.2+
- PHPUnit 8 is adding `void` return type in many places. Making our testsuite compatible with PHPUnit 8 will be a pain if we need to keep support for PHP < 7.1
- Symfony 5 will add return types on a some interfaces, which will force us to do the same in our testsuite implementation (for BrowserKitDriver), which will require dropping support for PHP 5.x (or do crazy stuff to keep 2 implementations). One of the methods affecting us will use the `object` type, which requires PHP 7.2
- our new driver based on facebook/webdriver will require at least PHP 5.6+ (due to the min requirement of the library and they plan to make it PHP 7.1+ in the next version). This is not a strict requirement to match the other parts of Mink (it would have this requirement even without this min version bump on Mink), but it is nice to take that into account in the thinking.

As we start dropping support for old versions, I suggest dropping more than just 5.3, to benefit from a cleanup (as we don't do it often). I suggest to at least drop 5.3 to 5.5, which will free us from old Travis infrastructure and from PHPUnit 4.8. Then, multiple suggestions are possible:

- 7.2+, to make it easy to add support for Symfony 5 (but this is mostly things happening in the testsuite, so we could deal with it otherwise)
- 7.1+, to make it easy to migrate to PHPUnit 8 (while keeping support for PHPUnit 7.4 due to our needs), which also aligns with the min requirement of Symfony LTS, and with the current maintained PHP versions
- 7.0+
- 5.6+

Another thing to take into account is that Mink is currently used as part of the Drupal ecosystem. Here is their support matrix ([source](https://www.drupal.org/docs/8/system-requirements/php-requirements)):
- Drupal 8.6 has PHP 5.5.9 as its min version
- Drupal 8.7 supports PHP 5.5.9+ for existing projects, but requires PHP 7.0.8+ for new projects (enforced by their installer)
- Drupal 8.8 will support only PHP 7.0.8+

As they are currently pinned on a dev version of Mink due to needing unreleased changes, we should avoid dropping support for these versions before the release (so that they can at least switch these branches to use our next stable release). The fact that Drupal 8.8 will still support PHP 7.0 might be an argument to keep support in Mink if they don't want to allow a range constraint (allowing to use an uptodate Mink on maintained PHP versions and the older release only on PHP 7.0). But we are not strongly tied to the Drupal ecosystem so this argument alone is not a full blocker.

@aik099 what is your mind on the new min version ?
Preliminary.
I'm not sure why, but on PHP 7.1 The `vendor/bin/simple-phpunit` script (part of https://symfony.com/doc/current/components/phpunit_bridge.html) is choosing to use PHPUnit 5.7 version.

Such decision results in a failure, when attempting to download chosen PHPUnit version, because on GitHub there is no PHPUnit 5.7 version, but there is PHPUnit 5.7.0 version.

Not sure if this is bug in Simple PHPUnit or out `.travis.yml` file.

Failing build URL: https://travis-ci.org/minkphp/Mink/jobs/555679617

Failing build Output:

```
PHP Warning:  fopen(https://github.com/sebastianbergmann/phpunit/archive/5.7.zip): failed to open stream: HTTP request failed! HTTP/1.0 404 Not Found
 in /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit on line 41
PHP Stack trace:
PHP   1. {main}() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:0
PHP   2. fopen() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:41
Warning: fopen(https://github.com/sebastianbergmann/phpunit/archive/5.7.zip): failed to open stream: HTTP request failed! HTTP/1.0 404 Not Found
 in /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit on line 41
Call Stack:
    0.0004     416008   1. {main}() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:0
    0.0035     416952   2. fopen() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:41
PHP Warning:  stream_copy_to_stream() expects parameter 1 to be resource, boolean given in /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit on line 41
PHP Stack trace:
PHP   1. {main}() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:0
PHP   2. stream_copy_to_stream() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:41
Warning: stream_copy_to_stream() expects parameter 1 to be resource, boolean given in /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit on line 41
Call Stack:
    0.0004     416008   1. {main}() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:0
    0.3663     422776   2. stream_copy_to_stream() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:41
PHP Warning:  chdir(): No such file or directory (errno 2) in /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit on line 53
PHP Stack trace:
PHP   1. {main}() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:0
PHP   2. chdir() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:53
Warning: chdir(): No such file or directory (errno 2) in /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit on line 53
Call Stack:
    0.0004     416008   1. {main}() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:0
    0.3666     422416   2. chdir() /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge/bin/simple-phpunit:53
No composer.json in current directory, do you want to use the one at /home/travis/build/minkphp/Mink/vendor/symfony/phpunit-bridge? [Y,n]? 
```
The selectors defined in https://github.com/minkphp/Mink/blob/master/src/Selector/NamedSelector.php do a good job of recognising most HTML. E.g. they will find a checkbox by the associated <label for="...">, or a link but the alt text of the icon <img> inside the <a>.

However, at present they do not find e.g. <input type="checkbox" aria-label="Frog">, or using aria-labelled-by="id" on the checkbox, rather than for="id" on the label. It would be nice to fix this.

(This is something we would like in the Moodle project. See https://tracker.moodle.org/browse/MDL-65940.)

Mink is striping out `:` from string example:
`And I fill in "time" with "10:10"` is filled out with `1010`
also
```
When I fill in the following:
    | description  | Some random: test description  |
```
Is filled out with `Some random test description`