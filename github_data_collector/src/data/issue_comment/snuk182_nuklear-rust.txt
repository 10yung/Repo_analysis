At first, I build the gdi demo by `nightly-x86_64-pc-windows-msvc`, all good, but got crash when build by `nightly-i686-pc-windows-msvc`. And I debugged to figure out the crash palce is `nk_init`, relate to `nk_handle`. In nuklear-sys-4.0.4:
```
pub union nk_handle {
    pub ptr: *mut ::std::os::raw::c_void,
    pub id: ::std::os::raw::c_int,
    _bindgen_union_align: u64,   
}
```
this cause nk_handle take 8 bytes in i686 build, but the C def is 
```
typedef union {void *ptr; int id;} nk_handle;
```
it only take 4 bytes in i686 build, so that's the problem!
In future SDL2 backend will be created?
How draw object on background?
Not in windows but on background?

Do You know how do this in C and Rust?


When pulling from Git, there is no issue, it is exclusively when `nuklear-sys` is imported from a Cargo repository.

Panic with trace: https://gist.github.com/khionu/cac71a3176ed42840caa79b53af26bbd

OS: Win 10 Pro (1903)
Compiler: 1.35.0 (3c235d560 2019-05-20)
Toolchain: stable-x86_64-pc-windows-msvc
This makes it possible to do:

```rust
#[macro_use]
extern crate nuklear as nk;

let s = nk_string!("...");
```
Is possible run this in SDL2 or native in linux?
This must be a hidpi issue, but on Mac on a retina display the mouse input positions are all doubled (or equivalently, the output image is doubled).

That is, if you click 1cm to the right the left window edge, the click will be received by the widget 2cm to the right of the window edge. The doubling is relative to the window, not the screen. Hope that's clear!
Ain't help a lot, although hogs resources.

Thanks.