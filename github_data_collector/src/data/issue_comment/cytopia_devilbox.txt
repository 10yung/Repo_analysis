I cannot run any of the containers after update:

Following is the error:

docker-compose up -d mysql

WARNING: The HOST_PATH_SSH_DIR variable is not set. Defaulting to a blank string.
mydevdockers_bind_1 is up-to-date
Creating mydevdockers_php_1 ... error

ERROR: for mydevdockers_php_1  Cannot create container for service php: invalid volume specification: '/host_mnt/home/devilbox/.ssh:ro'

ERROR: for php  Cannot create container for service php: invalid volume specification: '/host_mnt/home/devilbox/.ssh:ro'
ERROR: Encountered errors while bringing up the project.

what is gone wrong. ?
Hello Cytopia,

I've been looking at all these requests people have for new programs, and custom versions, etc...

What if you shipped a version of all the docker files with an alternative docker-compose file so they could use docker-compose's dockerfile building to run their own apt-get installs on top of your base images?

They would have to recompile those images when your base docker images updated, but would otherwise give them the flexibility for versions etc...without burdening more simpler setups with all the dependencies.
<!---
1. Verify first that your feature request is not already reported on GitHub.

2. Verify that your feature is not already implemented: https://devilbox.readthedocs.io

3. PLEASE FILL OUT ALL REQUIRED INFORMATION BELOW! Otherwise it might take more time to properly handle this feature request
-->


#### ISSUE TYPE
<!-- DO NOT CHANGE THIS -->
 - Feature request
<!-- DO NOT CHANGE THIS -->


#### SUMMARY
<!-- Explain your feature idea briefly -->
Adding the `ext-yaml` https://pecl.php.net/package/yaml PHP extension to Devilbox by default so that one can use it without having to install it each time a `docker-compose down` has been run. I'm aware of the fact that running `docker-compose stop` instead of `docker-compose down` will result in not losing the installation of a particular extension but this one seems quite viable to be added by default.

I've looked #263 and #107 and it I guess adding it to the image is the best way to accomplish the goal. Unless I've missed something in the documentation I think there isn't any more convenient way to install custom modules. If someone did succeed in doing so, please respond to this issue.

Thanks in advance.

#### Goal
<!-- Explain what you actually want to accomplish with that feature -->
Using the PHP YAML extension without having to reinstall it on every `docker-compose down`.
### ISSUE TYPE
<!-- DO NOT CHANGE THIS -->
 - Bug Report
<!-- DO NOT CHANGE THIS -->

### OS / ENVIRONMENT
<!-- COMPLETE ALL 6 BULLET POINTS BELOW: -->
1. Host operating system and version:  MacOS Catalina
2. (Windows) Native Docker or Docker Toolbox: Docker Desktop
3. Docker version: Engine: 19.03.5
4. Docker Compose version: Compose: 1.24.1
5. What git commit hash are you on?: Latest master

### SUMMARY
From time to time MySQL got timeout and stops responding. But after some time passes it again comes back.

### STEPS TO REPRODUCE
<!-- Show exactly how to reproduce the problem -->
<!-- Make this as detailed as possible and be sure that others can fully reproduce this issue -->
docker-compose up  httpd php mysql

### EXPECTED BEHAVIOUR
<!-- What is the expected behaviour? -->
It should work always.

### ACTUAL BEHAVIOUR
<!-- What is the actual behaviour? -->
[Warning] Aborted connection 42 to db: 'tbot' user: 'root' host: '172.16.238.10' (Got timeout reading communication packets)

### OTHER INFORMATION

#### Start command
<!-- Add the command you have used to start the devilbox -->
```
$ docker-compose up httpd php mysql
```

#### .env file
<!-- .env File -->
```bash
###
###  ---------------------------------------------------
###  D E V I L B O X   R U N - T I M E   S E T T I N G S
###  ---------------------------------------------------
###
###  All the following settings are applied during
###  $ docker-compose up
###
###  No need to rebuild any docker images!
###
###  IMPORTANT:
###  ----------
###  When changing any values ensure to stop, rm and restart:
###  $ docker-compose stop
###  $ docker-compose rm -f
###  $ docker-compose up
###
###  NOTE:
###  -----
###  For you own custom variables, scroll to the bottom
###

# The following line will disable any shellcheck warnings throughout this file
# shellcheck disable=SC2034,SC2125


###
### Show all executed commands in each
### docker image during docker-compose up?
###
### 1: Yes
### 0: No
DEBUG_COMPOSE_ENTRYPOINT=1


###
### Log to file or Docker logs.
###
### Logging to file means log files are available under log/
### on your host operating system.
### Logging to Docker logs means log files are streamed to
### stdout and stderr.
###
### 1: Log to Docker logs
### 0: Log to file
###
DOCKER_LOGS=0


###
### Relative or absolute path to the devilbox repository.
### (Used as a prefix for all mount paths)
### There is no need to change this.
###
### The only exception is for OSX users wanting to use NFS
### mounts instead of Filesystem mounts due to degraded performance
### on OSX.
###
### Note: When changing this variable you must re-create the container.
###       Simply remove it, it will be auto-created during the next start:
###
### $ docker-compose rm -f
###
DEVILBOX_PATH=.


###
### At what IP address should the docker services listen
### on the Host computer?
###
### The specified default should be fine for Linux and OSX (127.0.0.1:).
### If you are on windows, you will probably have to change
### it to the IP address of the docker machine.
###
### a.) Leave blank, to listen on all interfaces (no trailing colon ':')
###    LOCAL_LISTEN_ADDR=
### b.) If an IP is specified, note the trailing colon ':'
###    LOCAL_LISTEN_ADDR=127.0.0.1:
###
LOCAL_LISTEN_ADDR=


###
### This is the domain suffix your projects will be made available
### with mass-virtual-hosting.
### It is also required for the internal DNS server to be setup.
###
### Note: Only ALPHA ([a-zA-Z]+) characters are supported.
###
### Example:
###   TLD_SUFFIX=loc
### Makes your project available under xxxx.loc
###
### Example:
###   TLD_SUFFIX=local
### Makes your project available under xxxx.local
###
TLD_SUFFIX=loc


###
### Optional DNS configuration
### Allows you to add extra DNS records (above the wildcard entry)
### Useful if your host computer run other Docker services that you want to connect to or reach
### from within the Devilbox network by a custom hostname.
###
### Format:
### -------
### Resolve any custom defined hostname to an IP address (useable inside container and host os)
###     EXTRA_HOSTS=<hostname>=<ip>[,<hostname>=<ip>]
###
### Resolve any custom defined hostname to whatever IP address a CNAME resolves to
### (Useable inside the container and host OS).
### Note: CNAME must be resolvable by Google DNS
###     EXTRA_HOSTS=<hostname>=<CNAME>[,<hostname>=<CNAME>]
###
### Examples:
### ---------
### EXTRA_HOSTS=hostname.loc=1.2.3.4
### EXTRA_HOSTS=host.loc=1.2.3.4,host.example.org=3.4.5.6
EXTRA_HOSTS=


###
### Set your user id and group id
###
### This should be changed to the value of your local
### users uid and gid
###
### Type `id` on the terminal to find out your values
###
NEW_UID=1000
NEW_GID=1000


###
### Timezone for PHP Docker container (system and php.ini)
###
TIMEZONE=UTC



################################################################################
###
### INTRANET SETTINGS
###
################################################################################

###
### TLD_SUFFIX domains are checked if they are set in the
### host computer /etc/hosts or available via attached DNS server.
### Timeout is done on vhosts.php (intranet) via ajax calls.
### In order to keep performance, set this to a low value.
### DNS checks might not succeed in time on slow machines.
### If DNS is valid, but timeout is expired, set this to a higher value.
###
### DNS_CHECK_TIMEOUT value is how many seconds to time out
### Default is to timeout after 1 second (DNS_CHECK_TIMEOUT=1)
###
DNS_CHECK_TIMEOUT=1


###
### Devilbox UI SSL Certificate generation
###
### When using SSL each certificate requires names for which it is responsible:
### Common Name as well as alternative names.
###
### Specify comma separated hostnames below by which you want to access the Devilbox.
### Those hostnames will be included in the SSL certificate for the Devilbox intranet.
### This has nothing to do for SSL certificates for projects, it is just for the intranet
### itself.
###
DEVILBOX_UI_SSL_CN=localhost,*.localhost,devilbox,*.devilbox,httpd


###
### Devilbox UI Password protection enable/disable (1/0)
###
### Set DEVILBOX_UI_PROTECT to 1 in order to password protect the
### intranet.
###
### Example:
###   DEVILBOX_UI_PROTECT=1
###   DEVILBOX_UI_PROTECT=0
###
DEVILBOX_UI_PROTECT=0


###
### Devilbox UI Password
###
### When DEVILBOX_UI_PROTECT=1, use the following password
### to log in. The password can always be changed.
### When changing the password, make sure to restart your
### PHP container.
###
### Example:
###   DEVILBOX_UI_PASSWORD=my-very-secure-password
###   DEVILBOX_UI_PASSWORD=Some pass with spaces
###
### The default username is 'devilbox'
###
DEVILBOX_UI_PASSWORD=password


###
### Enable the Devilbox Intranet?
###
### Example:
###   DEVILBOX_UI_ENABLE=1
###   DEVILBOX_UI_ENABLE=0
###
DEVILBOX_UI_ENABLE=1


###
### Automatically be logged in into phpMyAdmin
###
### Example:
###   DEVILBOX_VENDOR_PHPMYADMIN_AUTOLOGIN=1
###   DEVILBOX_VENDOR_PHPMYADMIN_AUTOLOGIN=0
###
DEVILBOX_VENDOR_PHPMYADMIN_AUTOLOGIN=1


###
### Automatically be logged in into phpPgAdmin
###
### Example:
###   DEVILBOX_VENDOR_PHPPGADMIN_AUTOLOGIN=1
###   DEVILBOX_VENDOR_PHPPGADMIN_AUTOLOGIN=0
###
DEVILBOX_VENDOR_PHPPGADMIN_AUTOLOGIN=1



################################################################################
###
### 1. Choose Images (Version)
###
################################################################################

###
### You can choose any combination of httpd, mysql, postgresql or php.
### Each of them are fully compatible between one another.
###


###
### 1.1 Choose PHP Server Image
###
### Note: PHP 5.2 is not officially supported. Intranet won't work (due to lack of namespace support).
###       PHP 5.2 only works with Apache 2.4, Nginx stable and Nginx mainline.
###       Use at your own risk.
###
#PHP_SERVER=5.2
#PHP_SERVER=5.3
#PHP_SERVER=5.4
#PHP_SERVER=5.5
#PHP_SERVER=5.6
#PHP_SERVER=7.0
#PHP_SERVER=7.1
#PHP_SERVER=7.2
#PHP_SERVER=7.3
PHP_SERVER=7.4
#PHP_SERVER=8.0


###
### 1.2 Choose HTTPD Server Image
###
#HTTPD_SERVER=apache-2.2
#HTTPD_SERVER=apache-2.4
HTTPD_SERVER=nginx-stable
#HTTPD_SERVER=nginx-mainline


###
### 1.3 Choose MySQL Server Image
###
#MYSQL_SERVER=mysql-5.5
#MYSQL_SERVER=mysql-5.6
#MYSQL_SERVER=mysql-5.7
#MYSQL_SERVER=mysql-8.0
#MYSQL_SERVER=mariadb-5.5
#MYSQL_SERVER=mariadb-10.0
#MYSQL_SERVER=mariadb-10.1
#MYSQL_SERVER=mariadb-10.2
MYSQL_SERVER=mariadb-10.3
#MYSQL_SERVER=mariadb-10.4
#MYSQL_SERVER=percona-5.5
#MYSQL_SERVER=percona-5.6
#MYSQL_SERVER=percona-5.7
#MYSQL_SERVER=percona-8.0


###
### 1.4 Choose PostgreSQL Server Image
###
### IMPORTANT: Apline based images might cause issues on Docker Toolbox or OSX
###            https://github.com/docker/toolbox/issues/510
###
#PGSQL_SERVER=9.0
#PGSQL_SERVER=9.1
#PGSQL_SERVER=9.2
#PGSQL_SERVER=9.2-alpine
#PGSQL_SERVER=9.3
#PGSQL_SERVER=9.3-alpine
#PGSQL_SERVER=9.4
#PGSQL_SERVER=9.4-alpine
#PGSQL_SERVER=9.5
#PGSQL_SERVER=9.5-alpine
#PGSQL_SERVER=9.6
#PGSQL_SERVER=9.6-alpine
#PGSQL_SERVER=10.0
#PGSQL_SERVER=10.0-alpine
#PGSQL_SERVER=10.1
#PGSQL_SERVER=10.1-alpine
#PGSQL_SERVER=10.2
#PGSQL_SERVER=10.2-alpine
#PGSQL_SERVER=10.3
#PGSQL_SERVER=10.3-alpine
#PGSQL_SERVER=10.4
#PGSQL_SERVER=10.4-alpine
#PGSQL_SERVER=10.5
#PGSQL_SERVER=10.5-alpine
#PGSQL_SERVER=10.6
#PGSQL_SERVER=10.6-alpine
#PGSQL_SERVER=10.7
#PGSQL_SERVER=10.7-alpine
#PGSQL_SERVER=10.8
#PGSQL_SERVER=10.8-alpine
#PGSQL_SERVER=10.9
#PGSQL_SERVER=10.9-alpine
#PGSQL_SERVER=10.10
#PGSQL_SERVER=10.10-alpine
#PGSQL_SERVER=10.11
#PGSQL_SERVER=10.11-alpine
#PGSQL_SERVER=11.0
#PGSQL_SERVER=11.0-alpine
#PGSQL_SERVER=11.2
#PGSQL_SERVER=11.2-alpine
#PGSQL_SERVER=11.3
#PGSQL_SERVER=11.3-alpine
#PGSQL_SERVER=11.4
#PGSQL_SERVER=11.4-alpine
#PGSQL_SERVER=11.5
#PGSQL_SERVER=11.5-alpine
#PGSQL_SERVER=11.6
#PGSQL_SERVER=11.6-alpine
#PGSQL_SERVER=12.0
#PGSQL_SERVER=12.0-alpine
PGSQL_SERVER=12.1
#PGSQL_SERVER=12.1-alpine
#PGSQL_SERVER=latest
#PGSQL_SERVER=alpine


###
### 1.5 Choose Redis Server Image
###
### IMPORTANT: Apline based images might cause issues on Docker Toolbox or OSX
###            https://github.com/docker/toolbox/issues/510
###
#REDIS_SERVER=2.8
#REDIS_SERVER=3.0
#REDIS_SERVER=3.0-alpine
#REDIS_SERVER=3.2
#REDIS_SERVER=3.2-alpine
#REDIS_SERVER=4.0
#REDIS_SERVER=4.0-alpine
#REDIS_SERVER=5.0
REDIS_SERVER=5.0-alpine
#REDIS_SERVER=latest
#REDIS_SERVER=alpine


###
### 1.6 Choose Memcached Server Image
###
### IMPORTANT: Apline based images might cause issues on Docker Toolbox or OSX
###            https://github.com/docker/toolbox/issues/510
###
#MEMCD_SERVER=1.4
#MEMCD_SERVER=1.4-alpine
#MEMCD_SERVER=1.5
MEMCD_SERVER=1.5-alpine
#MEMCD_SERVER=latest
#MEMCD_SERVER=alpine


###
### 1.7 Choose Mongo Server Image
###
#MONGO_SERVER=2.8
#MONGO_SERVER=3.0
#MONGO_SERVER=3.2
#MONGO_SERVER=3.4
#MONGO_SERVER=3.6
#MONGO_SERVER=4.0
MONGO_SERVER=4.2
#MONGO_SERVER=latest



################################################################################
###
### 2. Host Mounts (Your computer)
###
################################################################################

###
### Global mount options
###
### Note: When adding custom mount options, ensure to start with a
###       leading ',' (comma), as those options are prepended to already
###       existing mount options.
###
### Note: If no mount options are specified, leave this variable empty
###       and do not add a leading ',' (comman).
###
### MOUNT_OPTIONS=,cached
### MOUNT_OPTIONS=
###
### Example: Allow to share mounts accross container with SELINUX enabled
###
### MOUNT_OPTIONS=,z
###
MOUNT_OPTIONS=


###
### Local filesystem path to www projects.
###
### Note: When changing this variable you must re-create the container.
###       Simply remove it, it will be auto-created during the next start:
###
### $ docker-compose rm -f
###
HOST_PATH_HTTPD_DATADIR=./data/www



################################################################################
###
### 3. PHP Docker Settings
###
################################################################################

###
### Enable certain PHP modules which are not enabled by default
###
### Currently the only modules that can be enabled are 'ioncube' and 'blackfire'
### Also ensure to disable xdebug when using any of the above:
### https://xdebug.org/docs/install#compat
###
### PHP_MODULES_ENABLE=ioncube, blackfire
###
PHP_MODULES_ENABLE=


###
### Disable any PHP modules that you don't require
###
### Specify a comma separated list without spaces of modules to disable
###
### PHP_MODULES_DISABLE=xdebug,imagick,swoole
###
PHP_MODULES_DISABLE=oci8,PDO_OCI,pdo_sqlsrv,sqlsrv,rdkafka,swoole


###
### Configure everything else about PHP in
### * cfg/php-ini-X.X/*.ini
### * cfg/php-fpm-X.X/*.conf



################################################################################
###
### 4. HTTPD Docker Settings
###
################################################################################

###
### Expose HTTPD Port to Host
###
HOST_PORT_HTTPD=80
HOST_PORT_HTTPD_SSL=443


###
### Document Root Subdirectory
###
### In your project directory, which subfolder should
### serve your files?
###
### When changing this value, restart the devilbox.
###
HTTPD_DOCROOT_DIR=htdocs


###
### Per vHost Config Subdirectory
###
### In your project directory, which subfolder should
### hold apache, nginx templates for a customized vhost?
###
### When changing this value, restart the devilbox.
###
HTTPD_TEMPLATE_DIR=.devilbox


###
### Webserver timeout (in seconds) to upstream PHP-FPM server
###
### This value should be greater than PHP's max_execution_time,
### otherwise the php script could still run and the webserver will
### simply drop the connection before getting an answer by PHP.
###
HTTPD_TIMEOUT_TO_PHP_FPM=180


###
### NGINX ONLY
###
### Set worker_processes and worker_connections
###
### https://nginx.org/en/docs/ngx_core_module.html#worker_processes
### https://nginx.org/en/docs/ngx_core_module.html#worker_connections
###
HTTPD_NGINX_WORKER_PROCESSES=auto
HTTPD_NGINX_WORKER_CONNECTIONS=1024



################################################################################
###
### 5. MySQL Docker Settings
###
################################################################################

###
### MySQL root user password
###
### The password is required for the initial creation of the MySQL database
### as well as the Devilbox intranet to display schema and configuration settings.
###
### If you change your MySQL root user password via mysql cli, phpMyAdmin or other tools
### after the database has been created, ensure to adjust the value here accordingly as well.
###
### If you only change this value here after the database has been created,
### the MySQL root user password will not actually be changed and the Devilbox intranet
### won't be able to connect to the MySQL service.
###
MYSQL_ROOT_PASSWORD=root


###
### Expose MySQL Port to Host
###
HOST_PORT_MYSQL=3306



################################################################################
###
### 6. PostgreSQL Docker Settings
###
################################################################################

###
### PostgreSQL 'root' user name (usually postgres)
###
PGSQL_ROOT_USER=postgres


###
### PostgreSQL 'root' user password
###
PGSQL_ROOT_PASSWORD=


###
### Expose PostgreSQL Port to Host
###
HOST_PORT_PGSQL=5432



################################################################################
###
### 7. Redis Docker Settings
###
################################################################################

###
### Expose Redis Port to Host
###
HOST_PORT_REDIS=6379


###
### Custom startup arguments
###
### Apply custom startup arguments to redis
###
### Example: Password protection
###   Add password protection to the Redis server by specifying it should
###   require a password.
###   Note: Do not add quotes or spaces to the password
###
###   REDIS_ARGS=--requirepass my-redis-root-password
###
### Example: Verbosity
###
###   REDIS_ARGS=--loglevel verbose
###
REDIS_ARGS=
#REDIS_ARGS=--loglevel verbose --requirepass my-redis-root-password



################################################################################
###
### 8. Memcached Docker Settings
###
################################################################################

###
### Expose Memcached Port to Host
###
HOST_PORT_MEMCD=11211



################################################################################
###
### 9. MongoDB Docker Settings
###
################################################################################

###
### Expose MongoDB Port to Host
###
HOST_PORT_MONGO=27017



################################################################################
###
### 10. Bind Docker Settings
###
################################################################################

###
### Expose Bind Port to Host
###
HOST_PORT_BIND=1053

###
### Add comma separated DNS server from which you want to receive DNS
### You can also add DNS servers from your LAN (if any are available)
###
BIND_DNS_RESOLVER=8.8.8.8,8.8.4.4

###
### Validate DNSSEC
###
### Values:
###  no:    DNSSEC validation is disabled
###  yes:   DNSSEC validation is enabled, but a trust anchor must be manually configured.
###  auto:  DNSSEC validation is enabled, and a default trust anchor for root zone is used.
###
BIND_DNSSEC_VALIDATE=no


###
### Bind timing options (time in seconds)
###
### Leave empty for defaults.
### Only change when you know what you are doing.
###
BIND_TTL_TIME=
BIND_REFRESH_TIME=
BIND_RETRY_TIME=
BIND_EXPIRY_TIME=
BIND_MAX_CACHE_TIME=


###
### Show DNS Queries in Docker logs output?
###
### 1: Yes
### 0: No
BIND_LOG_DNS_QUERIES=0



################################################################################
###
### 11. Custom variables
###
################################################################################

###
### Any variable defined in this file will be available
### as environment variables to your PHP/HHV Docker container.
###
### This might be useful to set application environment and retrieve
### them via: <?php getenv('MY_APPLICATION_ENV'); ?>
###


###
### Example:
### <?php echo getenv('Foo'); ?> would produce: 'some value'
###
#Foo=some value
```


#### File and user permissions (Linux & MacOS)
<!-- User and group information -->
```
$ id
uid=501(abcuser) gid=20(staff) groups=20(staff),12(everyone),61(localaccounts),79(_appserverusr),80(admin),81(_appserveradm),98(_lpadmin),33(_appstore),100(_lpoperator),204(_developer),250(_analyticsusers),395(com.apple.access_ftp),398(com.apple.access_screensharing),399(com.apple.access_ssh),400(com.apple.access_remote_ae),701(com.apple.sharepoint.group.1)
```

<!-- File permissions of the Devilbox directory -->
```
$ ls -al
total 376
drwxr-xr-x  32 abcuser  admin   1088 Dec 30 11:42 .
drwxr-xr-x   7 abcuser  admin    238 Dec 29 19:41 ..
-rw-r--r--@  1 abcuser  admin   8196 Dec 30 11:42 .DS_Store
drwxr-xr-x   4 abcuser  admin    136 Dec 29 19:42 .devilbox
-rw-r--r--   1 abcuser  admin   2502 Dec 29 19:42 .editorconfig
-rw-r--r--   1 abcuser  admin  17143 Dec 29 22:00 .env
drwxr-xr-x  14 abcuser  admin    476 Dec 30 22:13 .git
drwxr-xr-x   6 abcuser  admin    204 Dec 29 19:42 .github
-rw-r--r--   1 abcuser  admin   3612 Dec 29 19:42 .gitignore
drwxr-xr-x   7 abcuser  admin    238 Dec 29 19:42 .tests
-rw-r--r--   1 abcuser  admin  11465 Dec 29 19:42 .travis.yml
-rw-r--r--   1 abcuser  admin   6480 Dec 29 19:42 CHANGELOG.md
-rw-r--r--   1 abcuser  admin   2770 Dec 29 19:42 CONTRIBUTING.md
-rw-r--r--   1 abcuser  admin   1064 Dec 29 19:42 LICENSE.md
-rw-r--r--   1 abcuser  admin  64531 Dec 29 19:42 README.md
-rw-r--r--   1 abcuser  admin   1490 Dec 29 19:42 UPDATING.md
drwxr-xr-x   5 abcuser  admin    170 Dec 29 19:42 autostart
drwxr-xr-x@  4 abcuser  admin    136 Dec 29 20:46 backups
drwxr-xr-x   4 abcuser  admin    136 Dec 29 19:42 bash
drwxr-xr-x@  6 abcuser  admin    204 Dec 29 20:46 ca
drwxr-xr-x  58 abcuser  admin   1972 Dec 29 19:42 cfg
drwxr-xr-x  11 abcuser  admin    374 Dec 29 19:42 compose
drwxr-xr-x   5 abcuser  admin    170 Dec 30 11:42 data
-rw-r--r--   1 abcuser  admin    743 Dec 29 19:42 docker-compose.override.yml-example
-rw-r--r--   1 abcuser  admin  14672 Dec 29 19:42 docker-compose.yml
drwxr-xr-x  40 abcuser  admin   1360 Dec 29 19:42 docs
-rw-r--r--   1 abcuser  admin  17139 Dec 29 19:42 env-example
drwxr-xr-x   8 abcuser  admin    272 Dec 29 22:06 log
drwxr-xr-x  11 abcuser  admin    374 Dec 29 22:06 mod
-rw-r--r--   1 abcuser  admin     86 Dec 29 19:42 shell.bat
-rwxr-xr-x   1 abcuser  admin     59 Dec 29 19:42 shell.sh
-rwxr-xr-x   1 abcuser  admin   2265 Dec 29 19:42 update-docker.sh
```

<!-- File permissions of your projects -->
```
$ ls -al data/www
total 16
drwxr-xr-x@ 5 abcuser  admin   170 Dec 30 11:42 .
drwxr-xr-x  5 abcuser  admin   170 Dec 30 11:42 ..
-rw-r--r--@ 1 abcuser  admin  6148 Dec 30 11:42 .DS_Store
-rw-r--r--  1 abcuser  admin     0 Dec 29 19:42 .keepme
drwxr-xr-x  4 abcuser  admin   136 Dec 30 11:42 tbot
```

logs:
```
$ docker-compose up httpd php mysql
devilbox_bind_1 is up-to-date
Starting devilbox_php_1 ... done
Starting devilbox_httpd_1 ... done
Starting devilbox_mysql_1 ... done
Attaching to devilbox_php_1, devilbox_httpd_1, devilbox_mysql_1
httpd_1  | [INFO] Debug level: 1
php_1    | [INFO] Debug level: 1
httpd_1  | [INFO] Runtime debug: 1
httpd_1  | [INFO] Changing user 'nginx' uid to: 1000
mysql_1  | 2019-12-30 13:16:06+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 1:10.3.21+maria~bionic started.
php_1    | [INFO] Changing user 'devilbox' uid to: 1000
httpd_1  | usermod: no changes
httpd_1  | [INFO] Changing group 'nginx' gid to: 1000
httpd_1  | [INFO] Setting container timezone to: UTC
httpd_1  | [INFO] Docker date set to: Mon Dec 30 13:16:05 UTC 2019
php_1    | usermod: no changes
httpd_1  | [INFO] $WORKER_PROCESSES set to its default value: 'auto'.
httpd_1  | [INFO] Setting worker_connections to: 1024
httpd_1  | [INFO] $DOCKER_LOGS disabled. Logging errors and access to log files inside container.
httpd_1  | [INFO] PHP-FPM: Enabled
httpd_1  | [INFO] PHP-FPM: Server address: php
php_1    | [INFO] Changing group 'devilbox' gid to: 1000
php_1    | [INFO] Setting container timezone to: UTC
httpd_1  | [INFO] PHP-FPM: Server port: 9000
php_1    | [INFO] Setting PHP: timezone=UTC
httpd_1  | [INFO] PHP-FPM: Timeout: 180
httpd_1  | [INFO] Main vhost: Enabled
httpd_1  | [INFO] Main vhost: Setting SSL type to: http and https
httpd_1  | [INFO] Main vhost: Enable automatic generation of SSL certificates
httpd_1  | [INFO] Main vhost: SSL CN: localhost,*.localhost,devilbox,*.devilbox,httpd
httpd_1  | [INFO] $MAIN_VHOST_DOCROOT not specified. Keeping default: htdocs
httpd_1  | [INFO] $MAIN_VHOST_TPL not specified. Keeping default: cfg
httpd_1  | [INFO] Main vhost: Enabling httpd status page
httpd_1  | [INFO] Main vhost: Changing status page alias to: /devilbox-httpd-status
httpd_1  | [INFO] Mass vhost: Enabled
httpd_1  | [INFO] Mass vhost: Setting SSL type to: http and https
httpd_1  | [INFO] Mass vhost: Enable automatic generation of SSL certificates
php_1    | [INFO] Docker date set to: Mon Dec 30 13:16:04 UTC 2019
httpd_1  | [INFO] Mass vhost: changing tld to: .loc
httpd_1  | [INFO] Mass vhost: changing document root to: htdocs
httpd_1  | [INFO] Mass vhost: changing template dir to: .devilbox
httpd_1  | [INFO] vhost-gen: no customized template found
httpd_1  | [WARN] override template not found:  /var/www/default/cfg/nginx.yml
php_1    | [INFO] $DOCKER_LOGS set to 0. Logging to files under: /var/log/php
php_1    | [INFO] Make sure to mount this directory in order to view logs
php_1    | [INFO] $ENABLE_MAIL set to 1. Enabling postfix catch-all
httpd_1  | vhostgen: [2019-12-30 13:16:05] Adding: localhost
httpd_1  | $ openssl req -newkey rsa:2048 -sha256 -nodes -extensions v3_req -config <(echo "[req]
httpd_1  | distinguished_name = req_distinguished_name
httpd_1  | x509_extensions = v3_req
httpd_1  |
httpd_1  | [req_distinguished_name]
httpd_1  |
httpd_1  | [ v3_req ]
httpd_1  | basicConstraints = critical, CA:FALSE
httpd_1  | subjectKeyIdentifier = hash
httpd_1  | keyUsage = critical, digitalSignature, keyEncipherment
httpd_1  | authorityKeyIdentifier = keyid:always,issuer:always
httpd_1  | extendedKeyUsage = serverAuth, clientAuth
httpd_1  | subjectAltName=${ALT_NAMES}") -keyout /etc/httpd/cert/main/localhost.key -subj '/C=DE/ST=Berlin/L=Berlin/O=Devilbox/OU=Devilbox/CN=localhost/emailAddress=admin@localhost' -out /etc/httpd/cert/main/localhost.csr
httpd_1  | $ openssl x509 -req -sha256 -extensions v3_req -extfile <(echo "[req]
httpd_1  | distinguished_name = req_distinguished_name
httpd_1  | x509_extensions = v3_req
httpd_1  |
httpd_1  | [req_distinguished_name]
httpd_1  |
httpd_1  | [ v3_req ]
httpd_1  | basicConstraints = critical, CA:FALSE
httpd_1  | subjectKeyIdentifier = hash
httpd_1  | keyUsage = critical, digitalSignature, keyEncipherment
httpd_1  | authorityKeyIdentifier = keyid:always,issuer:always
httpd_1  | extendedKeyUsage = serverAuth, clientAuth
httpd_1  | subjectAltName=${ALT_NAMES}") -days 825 -in /etc/httpd/cert/main/localhost.csr -CA /ca/devilbox-ca.crt -CAkey /ca/devilbox-ca.key -CAcreateserial -out /etc/httpd/cert/main/localhost.crt
httpd_1  | Certificate:
httpd_1  |     Data:
httpd_1  |         Version: 3 (0x2)
httpd_1  |         Serial Number:
httpd_1  |             2a:29:23:56:42:7d:a1:ee:9a:d0:0c:6a:92:e0:ab:04:88:fd:e4:54
httpd_1  |         Signature Algorithm: sha256WithRSAEncryption
httpd_1  |         Issuer: C = DE, ST = Berlin, L = Berlin, O = Devilbox, OU = Devilbox, CN = Devilbox Root CA, emailAddress = cytopia@devilbox.org, dnQualifier = cTZDjWzJ2nRzJTJ1SemsWBujY1g=
httpd_1  |         Validity
httpd_1  |             Not Before: Dec 30 13:16:06 2019 GMT
httpd_1  |             Not After : Apr  3 13:16:06 2022 GMT
httpd_1  |         Subject: C = DE, ST = Berlin, L = Berlin, O = Devilbox, OU = Devilbox, CN = localhost, emailAddress = admin@localhost
httpd_1  |         Subject Public Key Info:
httpd_1  |             Public Key Algorithm: rsaEncryption
httpd_1  |                 RSA Public-Key: (2048 bit)
httpd_1  |                 Modulus:
httpd_1  |                     00:c9:29:13:2b:76:97:8d:6e:da:f2:6d:e1:11:f2:
httpd_1  |                     ee:5c:e3:08:5e:a8:b8:d6:cc:98:2b:95:c6:63:e6:
httpd_1  |                     58:e2:e7:fc:0e:de:86:4a:c1:70:15:49:92:86:5e:
httpd_1  |                     81:6b:56:59:e2:b2:d4:f8:c3:8d:8d:40:23:77:a8:
httpd_1  |                     e3:b4:29:5e:a6:03:4d:97:fa:65:97:8b:f8:9d:3e:
httpd_1  |                     07:8c:5a:8a:46:b5:1e:0a:5b:14:44:41:07:ba:99:
httpd_1  |                     d5:c7:53:ee:06:0f:6b:8d:6e:7b:64:18:6a:b0:d8:
httpd_1  |                     bf:1e:8a:83:69:55:77:0e:1f:5d:4c:c9:d0:3d:6a:
httpd_1  |                     71:57:9b:d4:29:bb:33:7a:23:7e:0c:84:ac:af:bc:
httpd_1  |                     ff:99:03:c4:b8:65:66:6c:6b:e1:bd:57:20:18:25:
httpd_1  |                     2d:ae:33:57:79:b5:9c:68:4c:9a:a1:d6:ed:d4:04:
httpd_1  |                     5b:87:6e:47:25:e2:1d:5f:10:b2:8b:65:57:1e:34:
httpd_1  |                     c3:10:db:9a:c1:80:07:05:05:33:20:75:a3:44:0a:
httpd_1  |                     4b:3a:54:74:93:25:75:29:b7:78:7e:f6:ab:df:89:
httpd_1  |                     9b:de:a3:e9:bb:2c:b1:3b:1a:ab:36:67:0f:42:83:
httpd_1  |                     76:dc:a8:52:d9:bb:3a:c8:50:9d:8e:9e:21:03:20:
httpd_1  |                     fc:f1:6a:d5:0a:2e:8d:e7:72:f2:5c:5b:24:cb:25:
httpd_1  |                     54:13
httpd_1  |                 Exponent: 65537 (0x10001)
httpd_1  |         X509v3 extensions:
httpd_1  |             X509v3 Basic Constraints: critical
httpd_1  |                 CA:FALSE
httpd_1  |             X509v3 Subject Key Identifier:
httpd_1  |                 D7:DA:4F:FF:10:C5:97:73:AA:6F:E6:10:C1:41:82:DE:03:A9:D6:6B
httpd_1  |             X509v3 Key Usage: critical
httpd_1  |                 Digital Signature, Key Encipherment
httpd_1  |             X509v3 Authority Key Identifier:
httpd_1  |                 keyid:71:36:43:8D:6C:C9:DA:74:73:25:32:75:49:E9:AC:58:1B:A3:63:58
httpd_1  |                 DirName:/C=DE/ST=Berlin/L=Berlin/O=Devilbox/OU=Devilbox/CN=Devilbox Root CA/emailAddress=cytopia@devilbox.org/dnQualifier=cTZDjWzJ2nRzJTJ1SemsWBujY1g=
httpd_1  |                 serial:16:D0:D1:A5:C4:52:56:50:72:2A:87:C9:70:BB:11:C1:28:A6:36:DF
httpd_1  |
httpd_1  |             X509v3 Extended Key Usage:
httpd_1  |                 TLS Web Server Authentication, TLS Web Client Authentication
httpd_1  |             X509v3 Subject Alternative Name:
httpd_1  |                 DNS:localhost, DNS:localhost, DNS:*.localhost, DNS:devilbox, DNS:*.devilbox, DNS:httpd
httpd_1  |     Signature Algorithm: sha256WithRSAEncryption
httpd_1  |          93:ce:a5:48:de:d3:27:49:e6:77:36:7d:8f:c9:3f:d3:99:36:
httpd_1  |          54:df:94:01:07:13:e7:0a:33:31:22:47:0c:fe:a4:a7:2b:b9:
httpd_1  |          ba:dd:37:dd:06:ff:5e:4b:34:cc:1e:70:95:b4:a1:67:21:bd:
httpd_1  |          06:0a:09:39:70:9e:30:5d:21:0b:4e:ae:e5:2b:e3:25:f2:a9:
httpd_1  |          56:49:a6:c5:ae:73:cf:d6:90:4e:b5:80:72:50:cd:d1:5d:43:
httpd_1  |          9f:b1:ce:3b:36:22:6d:aa:5f:c1:3d:23:7a:33:15:3d:dc:1e:
httpd_1  |          e9:a0:02:7b:e7:de:a4:63:26:60:74:7b:18:1c:14:cb:12:fd:
httpd_1  |          af:da:13:aa:e8:2e:ff:32:dc:bc:b9:a4:23:94:c4:8a:f2:42:
httpd_1  |          55:2a:cb:dc:8c:2f:08:8e:fc:05:45:d1:a0:83:ec:2f:ca:b9:
httpd_1  |          55:9b:55:68:a4:e7:94:d4:f3:ab:96:4f:19:4c:ff:8e:02:85:
httpd_1  |          3e:11:81:ba:56:7d:3a:cf:43:a1:7e:d1:33:59:a0:48:a1:f4:
httpd_1  |          9d:eb:ef:33:a2:96:bf:47:c6:d0:54:fc:63:f2:63:9d:70:60:
httpd_1  |          96:a2:7c:34:fa:c1:68:5a:ac:b9:56:1f:f1:6e:d1:29:06:50:
httpd_1  |          4c:8d:cc:53:1e:65:a6:b4:2d:2d:d5:13:02:7b:e8:8f:91:00:
httpd_1  |          0c:ee:8b:ba
httpd_1  | /etc/httpd/cert/main/localhost.crt: OK
php_1    | [INFO] Forwarding httpd:80 to 127.0.0.1:80 inside this docker.
httpd_1  | [INFO] Starting supervisord: 3.3.5
php_1    | [INFO] Forwarding httpd:443 to 127.0.0.1:443 inside this docker.
php_1    | [INFO] Forwarding mysql:3306 to 127.0.0.1:3306 inside this docker.
php_1    | [INFO] Forwarding pgsql:5432 to 127.0.0.1:5432 inside this docker.
httpd_1  | 2019-12-30 13:16:06,785 INFO Set uid to user 0 succeeded
httpd_1  | 2019-12-30 13:16:06,788 INFO supervisord started with pid 1
php_1    | [INFO] Forwarding redis:6379 to 127.0.0.1:6379 inside this docker.
php_1    | [INFO] Forwarding memcd:11211 to 127.0.0.1:11211 inside this docker.
php_1    | [INFO] Forwarding mongo:27017 to 127.0.0.1:27017 inside this docker.
php_1    | [INFO] Enabling 'socat-80-httpd-80' to be started by supervisord
php_1    | [INFO] Enabling 'socat-443-httpd-443' to be started by supervisord
php_1    | [INFO] Enabling 'socat-3306-mysql-3306' to be started by supervisord
mysql_1  | 2019-12-30 13:16:06+00:00 [Note] [Entrypoint]: Switching to dedicated user 'mysql'
mysql_1  | 2019-12-30 13:16:06+00:00 [Note] [Entrypoint]: Entrypoint script for MySQL Server 1:10.3.21+maria~bionic started.
php_1    | [INFO] Enabling 'socat-5432-pgsql-5432' to be started by supervisord
php_1    | [INFO] Enabling 'socat-6379-redis-6379' to be started by supervisord
php_1    | [INFO] Enabling 'socat-11211-memcd-11211' to be started by supervisord
php_1    | [INFO] Enabling 'socat-27017-mongo-27017' to be started by supervisord
php_1    | [INFO] Enabling 'rsyslogd' to be started by supervisord
php_1    | [INFO] Enabling 'postfix' to be started by supervisord
php_1    | [INFO] Enabling 'php-fpm' to be started by supervisord
php_1    | [INFO] $ENABLE_MODULES set, but empty. Not enabling any PHP modules.
php_1    | [INFO] Disabling the following PHP modules: oci8,PDO_OCI,pdo_sqlsrv,sqlsrv,rdkafka,swoole
php_1    | [INFO] $MYSQL_BACKUP_USER set for mysqldump-secure. Changing to 'root'
php_1    | [INFO] $MYSQL_BACKUP_PASS set for mysqldump-secure. Changing to '******'
php_1    | [INFO] $MYSQL_BACKUP_HOST set for mysqldump-secure. Changing to 'mysql'
mysql_1  | 2019-12-30 13:16:07 0 [Note] mysqld (mysqld 10.3.21-MariaDB-1:10.3.21+maria~bionic) starting as process 1 ...
php_1    | Updating certificates in /etc/ssl/certs...
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Using Linux native AIO
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Mutexes and rw_locks use GCC atomic builtins
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Uses event mutexes
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Compressed tables use zlib 1.2.11
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Number of pools: 1
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Using SSE2 crc32 instructions
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Initializing buffer pool, total size = 256M, instances = 1, chunk size = 128M
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Completed initialization of buffer pool
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: If the mysqld execution user is authorized, page cleaner thread priority can be changed. See the man page of setpriority().
httpd_1  | 2019-12-30 13:16:07,792 INFO spawned: 'httpd' with pid 202
httpd_1  | 2019-12-30 13:16:07,795 INFO spawned: 'watcherd' with pid 203
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: 128 out of 128 rollback segments are active.
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Creating shared tablespace for temporary tables
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Setting file './ibtmp1' size to 12 MB. Physically writing the file full; Please wait ...
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: File './ibtmp1' size is now 12 MB.
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Waiting for purge to start
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: 10.3.21 started; log sequence number 21846922; transaction id 14754
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Loading buffer pool(s) from /var/lib/mysql/ib_buffer_pool
mysql_1  | 2019-12-30 13:16:07 0 [Note] Plugin 'FEEDBACK' is disabled.
mysql_1  | 2019-12-30 13:16:07 0 [Note] Server socket created on IP: '::'.
mysql_1  | 2019-12-30 13:16:07 0 [Warning] 'proxies_priv' entry '@% root@mysql' ignored in --skip-name-resolve mode.
mysql_1  | 2019-12-30 13:16:07 0 [Note] InnoDB: Buffer pool(s) load completed at 191230 13:16:07
mysql_1  | 2019-12-30 13:16:07 0 [Note] Reading of all Master_info entries succeeded
mysql_1  | 2019-12-30 13:16:07 0 [Note] Added new Master_info '' to hash table
mysql_1  | 2019-12-30 13:16:07 0 [Note] mysqld: ready for connections.
mysql_1  | Version: '10.3.21-MariaDB-1:10.3.21+maria~bionic'  socket: '/var/run/mysqld/mysqld.sock'  port: 3306  mariadb.org binary distribution
php_1    | 0 added, 0 removed; done.
php_1    | Running hooks in /etc/ca-certificates/update.d...
php_1    | done.
php_1    | [INFO] Starting supervisord
php_1    | 2019-12-30 13:16:08,678 INFO Included extra file "/etc/supervisor/conf.d/php-fpm.conf" during parsing
php_1    | 2019-12-30 13:16:08,679 INFO Included extra file "/etc/supervisor/conf.d/postfix.conf" during parsing
php_1    | 2019-12-30 13:16:08,679 INFO Included extra file "/etc/supervisor/conf.d/rsyslogd.conf" during parsing
php_1    | 2019-12-30 13:16:08,679 INFO Included extra file "/etc/supervisor/conf.d/socat-11211-memcd-11211.conf" during parsing
php_1    | 2019-12-30 13:16:08,680 INFO Included extra file "/etc/supervisor/conf.d/socat-27017-mongo-27017.conf" during parsing
php_1    | 2019-12-30 13:16:08,681 INFO Included extra file "/etc/supervisor/conf.d/socat-3306-mysql-3306.conf" during parsing
php_1    | 2019-12-30 13:16:08,682 INFO Included extra file "/etc/supervisor/conf.d/socat-443-httpd-443.conf" during parsing
php_1    | 2019-12-30 13:16:08,682 INFO Included extra file "/etc/supervisor/conf.d/socat-5432-pgsql-5432.conf" during parsing
php_1    | 2019-12-30 13:16:08,683 INFO Included extra file "/etc/supervisor/conf.d/socat-6379-redis-6379.conf" during parsing
php_1    | 2019-12-30 13:16:08,684 INFO Included extra file "/etc/supervisor/conf.d/socat-80-httpd-80.conf" during parsing
php_1    | 2019-12-30 13:16:08,685 INFO Set uid to user 0 succeeded
php_1    | 2019-12-30 13:16:08,689 INFO supervisord started with pid 1
httpd_1  | 2019-12-30 13:16:08,799 INFO success: httpd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
httpd_1  | 2019-12-30 13:16:08,800 INFO success: watcherd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:09,695 INFO spawned: 'rsyslogd' with pid 1135
php_1    | 2019-12-30 13:16:09,700 INFO spawned: 'socat-3306-mysql-3306' with pid 1136
php_1    | 2019-12-30 13:16:09,705 INFO spawned: 'socat-6379-redis-6379' with pid 1137
php_1    | 2019-12-30 13:16:09,710 INFO spawned: 'postfix' with pid 1138
php_1    | 2019-12-30 13:16:09,714 INFO spawned: 'socat-27017-mongo-27017' with pid 1139
php_1    | 2019-12-30 13:16:09,719 INFO spawned: 'php-fpm' with pid 1140
php_1    | 2019-12-30 13:16:09,722 INFO spawned: 'socat-80-httpd-80' with pid 1141
php_1    | 2019-12-30 13:16:09,726 INFO spawned: 'socat-443-httpd-443' with pid 1142
php_1    | 2019-12-30 13:16:09,729 INFO spawned: 'socat-11211-memcd-11211' with pid 1143
php_1    | 2019-12-30 13:16:09,733 INFO spawned: 'socat-5432-pgsql-5432' with pid 1144
php_1    | rsyslogd: imklog: cannot open kernel log (/proc/kmsg): Operation not permitted.
php_1    | rsyslogd: activation of module imklog failed [v8.1901.0 try https://www.rsyslog.com/e/2145 ]
httpd_1  | watcherd: [2019-12-30 13:16:10] Starting daemon.
php_1    | 2019-12-30 13:16:10,841 INFO success: rsyslogd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,842 INFO success: socat-3306-mysql-3306 entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,842 INFO success: socat-6379-redis-6379 entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,843 INFO success: postfix entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,843 INFO success: socat-27017-mongo-27017 entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,843 INFO success: php-fpm entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,844 INFO success: socat-80-httpd-80 entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,844 INFO success: socat-443-httpd-443 entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,844 INFO success: socat-11211-memcd-11211 entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
php_1    | 2019-12-30 13:16:10,845 INFO success: socat-5432-pgsql-5432 entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
httpd_1  | $ openssl req -newkey rsa:2048 -sha256 -nodes -extensions v3_req -config <(echo "[req]
httpd_1  | distinguished_name = req_distinguished_name
httpd_1  | x509_extensions = v3_req
httpd_1  |
httpd_1  | [req_distinguished_name]
httpd_1  |
httpd_1  | [ v3_req ]
httpd_1  | basicConstraints = critical, CA:FALSE
httpd_1  | subjectKeyIdentifier = hash
httpd_1  | keyUsage = critical, digitalSignature, keyEncipherment
httpd_1  | authorityKeyIdentifier = keyid:always,issuer:always
httpd_1  | extendedKeyUsage = serverAuth, clientAuth
httpd_1  | subjectAltName=${ALT_NAMES}") -keyout /etc/httpd/cert/mass/tbot.loc.key -subj '/C=DE/ST=Berlin/L=Berlin/O=Devilbox/OU=Devilbox/CN=tbot.loc/emailAddress=admin@tbot.loc' -out /etc/httpd/cert/mass/tbot.loc.csr
httpd_1  | $ openssl x509 -req -sha256 -extensions v3_req -extfile <(echo "[req]
httpd_1  | distinguished_name = req_distinguished_name
httpd_1  | x509_extensions = v3_req
httpd_1  |
httpd_1  | [req_distinguished_name]
httpd_1  |
httpd_1  | [ v3_req ]
httpd_1  | basicConstraints = critical, CA:FALSE
httpd_1  | subjectKeyIdentifier = hash
httpd_1  | keyUsage = critical, digitalSignature, keyEncipherment
httpd_1  | authorityKeyIdentifier = keyid:always,issuer:always
httpd_1  | extendedKeyUsage = serverAuth, clientAuth
httpd_1  | subjectAltName=${ALT_NAMES}") -days 825 -in /etc/httpd/cert/mass/tbot.loc.csr -CA /ca/devilbox-ca.crt -CAkey /ca/devilbox-ca.key -CAcreateserial -out /etc/httpd/cert/mass/tbot.loc.crt
httpd_1  | Certificate:
httpd_1  |     Data:
httpd_1  |         Version: 3 (0x2)
httpd_1  |         Serial Number:
httpd_1  |             2a:29:23:56:42:7d:a1:ee:9a:d0:0c:6a:92:e0:ab:04:88:fd:e4:55
httpd_1  |         Signature Algorithm: sha256WithRSAEncryption
httpd_1  |         Issuer: C = DE, ST = Berlin, L = Berlin, O = Devilbox, OU = Devilbox, CN = Devilbox Root CA, emailAddress = cytopia@devilbox.org, dnQualifier = cTZDjWzJ2nRzJTJ1SemsWBujY1g=
httpd_1  |         Validity
httpd_1  |             Not Before: Dec 30 13:16:11 2019 GMT
httpd_1  |             Not After : Apr  3 13:16:11 2022 GMT
httpd_1  |         Subject: C = DE, ST = Berlin, L = Berlin, O = Devilbox, OU = Devilbox, CN = tbot.loc, emailAddress = admin@tbot.loc
httpd_1  |         Subject Public Key Info:
httpd_1  |             Public Key Algorithm: rsaEncryption
httpd_1  |                 RSA Public-Key: (2048 bit)
httpd_1  |                 Modulus:
httpd_1  |                     00:ca:92:5b:6f:e8:18:30:5a:39:44:e1:32:1c:cb:
httpd_1  |                     03:5d:d4:8d:c9:83:92:9d:69:a5:98:b6:8f:67:14:
httpd_1  |                     1a:b4:12:cf:66:8b:05:a5:d7:a1:18:1b:8b:b2:3b:
httpd_1  |                     78:a1:80:b5:4c:89:af:6b:26:6b:a8:7c:e0:6a:76:
httpd_1  |                     90:83:8d:3f:a0:c4:48:cd:7c:2e:35:b6:30:ce:28:
httpd_1  |                     8b:fe:52:af:a0:6d:35:27:33:d5:78:e3:57:32:9d:
httpd_1  |                     94:15:e3:41:d9:56:1f:31:82:b7:04:7d:94:f1:3b:
httpd_1  |                     e4:4c:07:6b:76:77:a3:89:14:78:0e:ac:4f:39:4b:
httpd_1  |                     39:52:0d:03:dd:71:c1:25:b6:86:48:9f:4f:19:85:
httpd_1  |                     c6:22:cf:2d:63:72:2f:cd:70:cd:54:98:8e:fb:8a:
httpd_1  |                     27:ac:dc:45:ac:93:2b:cb:7c:e8:a2:76:b4:15:2f:
httpd_1  |                     ea:cf:4a:9d:ef:63:6c:3e:e0:9b:20:b8:67:1e:29:
httpd_1  |                     9d:00:17:e7:6e:c1:d0:a3:a7:00:a4:91:93:d2:fe:
httpd_1  |                     83:ca:bb:ae:89:51:54:b9:cb:4a:3c:76:f6:c7:37:
httpd_1  |                     78:7c:bd:91:92:44:5d:93:89:ba:ac:4a:9a:b9:45:
httpd_1  |                     bb:c4:33:a3:33:00:5f:fd:ea:a6:79:63:e1:42:6e:
httpd_1  |                     49:f5:8e:09:db:4d:0a:83:f9:2f:39:fc:a7:ed:6d:
httpd_1  |                     72:bf
httpd_1  |                 Exponent: 65537 (0x10001)
httpd_1  |         X509v3 extensions:
httpd_1  |             X509v3 Basic Constraints: critical
httpd_1  |                 CA:FALSE
httpd_1  |             X509v3 Subject Key Identifier:
httpd_1  |                 F2:C9:7A:49:1E:C8:3D:4E:42:28:C3:3E:7B:15:1C:E4:E0:53:DA:7C
httpd_1  |             X509v3 Key Usage: critical
httpd_1  |                 Digital Signature, Key Encipherment
httpd_1  |             X509v3 Authority Key Identifier:
httpd_1  |                 keyid:71:36:43:8D:6C:C9:DA:74:73:25:32:75:49:E9:AC:58:1B:A3:63:58
httpd_1  |                 DirName:/C=DE/ST=Berlin/L=Berlin/O=Devilbox/OU=Devilbox/CN=Devilbox Root CA/emailAddress=cytopia@devilbox.org/dnQualifier=cTZDjWzJ2nRzJTJ1SemsWBujY1g=
httpd_1  |                 serial:16:D0:D1:A5:C4:52:56:50:72:2A:87:C9:70:BB:11:C1:28:A6:36:DF
httpd_1  |
httpd_1  |             X509v3 Extended Key Usage:
httpd_1  |                 TLS Web Server Authentication, TLS Web Client Authentication
httpd_1  |             X509v3 Subject Alternative Name:
httpd_1  |                 DNS:tbot.loc, DNS:*.tbot.loc
httpd_1  |     Signature Algorithm: sha256WithRSAEncryption
httpd_1  |          18:48:c2:c6:de:cf:bb:de:04:3f:64:91:f3:a2:a0:0e:26:c0:
httpd_1  |          0a:65:7c:97:4a:81:08:c0:a8:f8:06:3c:b8:64:4c:5d:7f:71:
httpd_1  |          d4:54:2e:25:21:b2:b0:b7:f8:57:35:67:00:ba:7b:50:17:02:
httpd_1  |          f6:2f:8b:f7:55:41:78:8f:3f:6f:ee:68:cc:d3:00:88:c5:be:
httpd_1  |          52:a5:18:7e:28:5d:b1:52:1a:ed:df:41:98:2a:80:e6:3f:fa:
httpd_1  |          f7:59:25:4e:75:f1:0f:df:3d:28:a0:b8:21:70:af:3b:e5:a6:
httpd_1  |          c4:85:d6:ef:ef:38:d7:12:19:00:54:92:70:83:fa:48:b2:e7:
httpd_1  |          ce:19:b9:d2:4c:63:33:a0:62:f8:08:96:78:dc:74:71:23:49:
httpd_1  |          7e:7d:a2:de:eb:fa:c2:f6:2c:e8:12:5b:b4:4c:19:b3:e7:2e:
httpd_1  |          2c:c5:08:0c:05:19:1a:8d:67:09:92:0e:1c:d1:1b:62:75:99:
httpd_1  |          2d:91:ca:4b:c6:90:17:0f:10:06:a5:99:4c:0a:8e:27:9b:a3:
httpd_1  |          3f:aa:85:9c:38:fa:1f:c7:5c:e2:cf:40:f5:0a:2f:4c:9b:43:
httpd_1  |          2d:89:68:6a:65:d5:bb:c6:22:ca:78:07:b4:17:33:6a:f4:2e:
httpd_1  |          84:ef:47:49:a0:5b:bb:87:81:14:7b:c6:e9:8f:26:53:f7:00:
httpd_1  |          3c:1a:c0:67
httpd_1  | /etc/httpd/cert/mass/tbot.loc.crt: OK
httpd_1  | $ vhost_gen.py -p "/shared/httpd/tbot" -n "tbot" -c /etc/vhost-gen/mass.yml -o "/shared/httpd/tbot/.devilbox/" -s -v -m both
httpd_1  | [WARN] override template not found:  /shared/httpd/tbot/.devilbox/nginx.yml
httpd_1  | vhostgen: [2019-12-30 13:16:11] Adding: tbot.loc
httpd_1  | watcherd: [2019-12-30 13:16:11] [OK]  ADD: succeeded: /shared/httpd/tbot
httpd_1  | 2019/12/30 13:16:11 [notice] 237#237: signal process started
httpd_1  | watcherd: [2019-12-30 13:16:11] [OK]  TRIGGER succeeded: nginx -s stop
httpd_1  | watcherd: [2019-12-30 13:16:11] Using bash loop to watch for changes.
httpd_1  | 2019-12-30 13:16:11,412 INFO exited: httpd (exit status 0; expected)
httpd_1  | 2019-12-30 13:16:12,416 INFO spawned: 'httpd' with pid 254
httpd_1  | 2019-12-30 13:16:13,419 INFO success: httpd entered RUNNING state, process has stayed up for > than 1 seconds (startsecs)
mysql_1  | 2019-12-30 18:22:20 42 [Warning] Aborted connection 42 to db: 'tbot' user: 'root' host: '172.16.238.10' (Got timeout reading communication packets)
mysql_1  | 2019-12-30 18:41:21 65 [Warning] Aborted connection 65 to db: 'tbot' user: 'root' host: '172.16.238.10' (Got timeout reading communication packets)
mysql_1  | 2019-12-30 19:09:01 70 [Warning] Aborted connection 70 to db: 'tbot' user: 'root' host: '172.16.238.10' (Got timeout reading communication packets)
```
I would like to enable a few modules for Apache 2.4.
Entering the container of the image devilbox/apache-2.4:0.30 I can see the following modules.

```
root@httpd:/usr/local/apache2/modules# ls -la
total 5152
drwxr-sr-x 2 root     www-data   4096 Feb 12  2019 .
drwxr-sr-x 1 www-data www-data   4096 Nov 28 15:34 ..
-rw-r--r-- 1 root     src       15727 Feb 12  2019 httpd.exp
-rwxr-xr-x 1 root     www-data  13752 Feb 12  2019 mod_access_compat.so
-rwxr-xr-x 1 root     www-data  13488 Feb 12  2019 mod_actions.so
-rwxr-xr-x 1 root     www-data  22896 Feb 12  2019 mod_alias.so
-rwxr-xr-x 1 root     www-data  13056 Feb 12  2019 mod_allowmethods.so
-rwxr-xr-x 1 root     www-data  13184 Feb 12  2019 mod_asis.so
-rwxr-xr-x 1 root     www-data  22344 Feb 12  2019 mod_auth_basic.so
-rwxr-xr-x 1 root     www-data  50968 Feb 12  2019 mod_auth_digest.so
-rwxr-xr-x 1 root     www-data  36760 Feb 12  2019 mod_auth_form.so
-rwxr-xr-x 1 root     www-data  13136 Feb 12  2019 mod_authn_anon.so
-rwxr-xr-x 1 root     www-data  18464 Feb 12  2019 mod_authn_core.so
-rwxr-xr-x 1 root     www-data  18144 Feb 12  2019 mod_authn_dbd.so
-rwxr-xr-x 1 root     www-data  13560 Feb 12  2019 mod_authn_dbm.so
-rwxr-xr-x 1 root     www-data  13400 Feb 12  2019 mod_authn_file.so
-rwxr-xr-x 1 root     www-data  27736 Feb 12  2019 mod_authn_socache.so
-rwxr-xr-x 1 root     www-data  45440 Feb 12  2019 mod_authnz_fcgi.so
-rwxr-xr-x 1 root     www-data  78960 Feb 12  2019 mod_authnz_ldap.so
-rwxr-xr-x 1 root     www-data  32512 Feb 12  2019 mod_authz_core.so
-rwxr-xr-x 1 root     www-data  18664 Feb 12  2019 mod_authz_dbd.so
-rwxr-xr-x 1 root     www-data  18104 Feb 12  2019 mod_authz_dbm.so
-rwxr-xr-x 1 root     www-data  18416 Feb 12  2019 mod_authz_groupfile.so
-rwxr-xr-x 1 root     www-data  18496 Feb 12  2019 mod_authz_host.so
-rwxr-xr-x 1 root     www-data  13136 Feb 12  2019 mod_authz_owner.so
-rwxr-xr-x 1 root     www-data  13200 Feb 12  2019 mod_authz_user.so
-rwxr-xr-x 1 root     www-data  50160 Feb 12  2019 mod_autoindex.so
-rwxr-xr-x 1 root     www-data  13352 Feb 12  2019 mod_bucketeer.so
-rwxr-xr-x 1 root     www-data  13648 Feb 12  2019 mod_buffer.so
-rwxr-xr-x 1 root     www-data 111720 Feb 12  2019 mod_cache.so
-rwxr-xr-x 1 root     www-data  49496 Feb 12  2019 mod_cache_disk.so
-rwxr-xr-x 1 root     www-data  49576 Feb 12  2019 mod_cache_socache.so
-rwxr-xr-x 1 root     www-data  13488 Feb 12  2019 mod_case_filter.so
-rwxr-xr-x 1 root     www-data  13360 Feb 12  2019 mod_case_filter_in.so
-rwxr-xr-x 1 root     www-data  13872 Feb 12  2019 mod_cern_meta.so
-rwxr-xr-x 1 root     www-data  38536 Feb 12  2019 mod_cgi.so
-rwxr-xr-x 1 root     www-data  57976 Feb 12  2019 mod_cgid.so
-rwxr-xr-x 1 root     www-data  31296 Feb 12  2019 mod_charset_lite.so
-rwxr-xr-x 1 root     www-data  13712 Feb 12  2019 mod_data.so
-rwxr-xr-x 1 root     www-data 132136 Feb 12  2019 mod_dav.so
-rwxr-xr-x 1 root     www-data  71128 Feb 12  2019 mod_dav_fs.so
-rwxr-xr-x 1 root     www-data  23520 Feb 12  2019 mod_dav_lock.so
-rwxr-xr-x 1 root     www-data  28112 Feb 12  2019 mod_dbd.so
-rwxr-xr-x 1 root     www-data  53200 Feb 12  2019 mod_deflate.so
-rwxr-xr-x 1 root     www-data  18256 Feb 12  2019 mod_dialup.so
-rwxr-xr-x 1 root     www-data  18128 Feb 12  2019 mod_dir.so
-rwxr-xr-x 1 root     www-data  17552 Feb 12  2019 mod_dumpio.so
-rwxr-xr-x 1 root     www-data  13760 Feb 12  2019 mod_echo.so
-rwxr-xr-x 1 root     www-data  13520 Feb 12  2019 mod_env.so
-rwxr-xr-x 1 root     www-data  29144 Feb 12  2019 mod_example_hooks.so
-rwxr-xr-x 1 root     www-data  14336 Feb 12  2019 mod_example_ipc.so
-rwxr-xr-x 1 root     www-data  18392 Feb 12  2019 mod_expires.so
-rwxr-xr-x 1 root     www-data  33072 Feb 12  2019 mod_ext_filter.so
-rwxr-xr-x 1 root     www-data  18760 Feb 12  2019 mod_file_cache.so
-rwxr-xr-x 1 root     www-data  26904 Feb 12  2019 mod_filter.so
-rwxr-xr-x 1 root     www-data  29104 Feb 12  2019 mod_headers.so
-rwxr-xr-x 1 root     www-data  13824 Feb 12  2019 mod_heartbeat.so
-rwxr-xr-x 1 root     www-data  33048 Feb 12  2019 mod_heartmonitor.so
-rwxr-xr-x 1 root     www-data 410528 Feb 12  2019 mod_http2.so
-rwxr-xr-x 1 root     www-data  13720 Feb 12  2019 mod_ident.so
-rwxr-xr-x 1 root     www-data  22816 Feb 12  2019 mod_imagemap.so
-rwxr-xr-x 1 root     www-data  71840 Feb 12  2019 mod_include.so
-rwxr-xr-x 1 root     www-data  34856 Feb 12  2019 mod_info.so
-rwxr-xr-x 1 root     www-data  45000 Feb 12  2019 mod_isapi.so
-rwxr-xr-x 1 root     www-data  13056 Feb 12  2019 mod_lbmethod_bybusyness.so
-rwxr-xr-x 1 root     www-data   8960 Feb 12  2019 mod_lbmethod_byrequests.so
-rwxr-xr-x 1 root     www-data   8952 Feb 12  2019 mod_lbmethod_bytraffic.so
-rwxr-xr-x 1 root     www-data  19200 Feb 12  2019 mod_lbmethod_heartbeat.so
-rwxr-xr-x 1 root     www-data 111864 Feb 12  2019 mod_ldap.so
-rwxr-xr-x 1 root     www-data  39552 Feb 12  2019 mod_log_config.so
-rwxr-xr-x 1 root     www-data  18728 Feb 12  2019 mod_log_debug.so
-rwxr-xr-x 1 root     www-data  18336 Feb 12  2019 mod_log_forensic.so
-rwxr-xr-x 1 root     www-data  14280 Feb 12  2019 mod_logio.so
-rwxr-xr-x 1 root     www-data 180016 Feb 12  2019 mod_lua.so
-rwxr-xr-x 1 root     www-data  22960 Feb 12  2019 mod_macro.so
-rwxr-xr-x 1 root     www-data  27416 Feb 12  2019 mod_mime.so
-rwxr-xr-x 1 root     www-data  36720 Feb 12  2019 mod_mime_magic.so
-rwxr-xr-x 1 root     www-data  88104 Feb 12  2019 mod_mpm_event.so
-rwxr-xr-x 1 root     www-data  44008 Feb 12  2019 mod_mpm_prefork.so
-rwxr-xr-x 1 root     www-data  63040 Feb 12  2019 mod_mpm_worker.so
-rwxr-xr-x 1 root     www-data  46776 Feb 12  2019 mod_negotiation.so
-rwxr-xr-x 1 root     www-data   8584 Feb 12  2019 mod_optional_fn_export.so
-rwxr-xr-x 1 root     www-data   8720 Feb 12  2019 mod_optional_fn_import.so
-rwxr-xr-x 1 root     www-data   8656 Feb 12  2019 mod_optional_hook_export.so
-rwxr-xr-x 1 root     www-data   8600 Feb 12  2019 mod_optional_hook_import.so
-rwxr-xr-x 1 root     www-data 177296 Feb 12  2019 mod_proxy.so
-rwxr-xr-x 1 root     www-data  79912 Feb 12  2019 mod_proxy_ajp.so
-rwxr-xr-x 1 root     www-data  72248 Feb 12  2019 mod_proxy_balancer.so
-rwxr-xr-x 1 root     www-data  26920 Feb 12  2019 mod_proxy_connect.so
-rwxr-xr-x 1 root     www-data  17872 Feb 12  2019 mod_proxy_express.so
-rwxr-xr-x 1 root     www-data  41272 Feb 12  2019 mod_proxy_fcgi.so
-rwxr-xr-x 1 root     www-data  13752 Feb 12  2019 mod_proxy_fdpass.so
-rwxr-xr-x 1 root     www-data  67216 Feb 12  2019 mod_proxy_ftp.so
-rwxr-xr-x 1 root     www-data  46848 Feb 12  2019 mod_proxy_hcheck.so
-rwxr-xr-x 1 root     www-data  50280 Feb 12  2019 mod_proxy_html.so
-rwxr-xr-x 1 root     www-data  59624 Feb 12  2019 mod_proxy_http.so
-rwxr-xr-x 1 root     www-data 111560 Feb 12  2019 mod_proxy_http2.so
-rwxr-xr-x 1 root     www-data  28176 Feb 12  2019 mod_proxy_scgi.so
-rwxr-xr-x 1 root     www-data  23576 Feb 12  2019 mod_proxy_uwsgi.so
-rwxr-xr-x 1 root     www-data  26616 Feb 12  2019 mod_proxy_wstunnel.so
-rwxr-xr-x 1 root     www-data  17976 Feb 12  2019 mod_ratelimit.so
-rwxr-xr-x 1 root     www-data  14144 Feb 12  2019 mod_reflector.so
-rwxr-xr-x 1 root     www-data  36536 Feb 12  2019 mod_remoteip.so
-rwxr-xr-x 1 root     www-data  18928 Feb 12  2019 mod_reqtimeout.so
-rwxr-xr-x 1 root     www-data  18248 Feb 12  2019 mod_request.so
-rwxr-xr-x 1 root     www-data  96472 Feb 12  2019 mod_rewrite.so
-rwxr-xr-x 1 root     www-data  53992 Feb 12  2019 mod_sed.so
-rwxr-xr-x 1 root     www-data  28120 Feb 12  2019 mod_session.so
-rwxr-xr-x 1 root     www-data  13792 Feb 12  2019 mod_session_cookie.so
-rwxr-xr-x 1 root     www-data  36232 Feb 12  2019 mod_session_crypto.so
-rwxr-xr-x 1 root     www-data  22832 Feb 12  2019 mod_session_dbd.so
-rwxr-xr-x 1 root     www-data  22648 Feb 12  2019 mod_setenvif.so
-rwxr-xr-x 1 root     www-data  13520 Feb 12  2019 mod_slotmem_plain.so
-rwxr-xr-x 1 root     www-data  23056 Feb 12  2019 mod_slotmem_shm.so
-rwxr-xr-x 1 root     www-data  22688 Feb 12  2019 mod_socache_dbm.so
-rwxr-xr-x 1 root     www-data  18352 Feb 12  2019 mod_socache_memcache.so
-rwxr-xr-x 1 root     www-data  34880 Feb 12  2019 mod_socache_shmcb.so
-rwxr-xr-x 1 root     www-data  18408 Feb 12  2019 mod_speling.so
-rwxr-xr-x 1 root     www-data 349736 Feb 12  2019 mod_ssl.so
-rwxr-xr-x 1 root     www-data  31376 Feb 12  2019 mod_status.so
-rwxr-xr-x 1 root     www-data  30936 Feb 12  2019 mod_substitute.so
-rwxr-xr-x 1 root     www-data  13384 Feb 12  2019 mod_suexec.so
-rwxr-xr-x 1 root     www-data  13512 Feb 12  2019 mod_unique_id.so
-rwxr-xr-x 1 root     www-data  18360 Feb 12  2019 mod_unixd.so
-rwxr-xr-x 1 root     www-data  13720 Feb 12  2019 mod_userdir.so
-rwxr-xr-x 1 root     www-data  18392 Feb 12  2019 mod_usertrack.so
-rwxr-xr-x 1 root     www-data  13240 Feb 12  2019 mod_version.so
-rwxr-xr-x 1 root     www-data  18008 Feb 12  2019 mod_vhost_alias.so
-rwxr-xr-x 1 root     www-data  28488 Feb 12  2019 mod_watchdog.so
-rwxr-xr-x 1 root     www-data  35984 Feb 12  2019 mod_xml2enc.so

```
I tried enabling the module with the Apache conf file using this documentation.
https://devilbox.readthedocs.io/en/latest/configuration-files/apache-conf.html

In the directory `cfg/apache-2.4/` I made a file `devilbox-apache-custom.conf` with this content.

```
#
# Apache 2.4 configuration overwrites
#
# Make sure this file ends by *.conf, otherwise
# the configuration is not sourced by nginx.
#
# The below settings are just examples.
# Copy them, remove them or reset them.
#

LoadModule deflate_module /usr/local/apache2/modules/mod_deflate.so
```
using the path of where I found the modules in the Apache container.

However when I stop, remove and start Devilbox and run a [Lighthouse audit](https://developers.google.com/web/tools/lighthouse/) I always get this result.

![Screenshot_20191128_171858](https://user-images.githubusercontent.com/34193243/69821221-4f213680-1203-11ea-8f98-cd37cdc731e1.png)

Of course I have made sure to include this in the `.htaccess` file of the project.
```
	<IfModule mod_deflate.c>
		# Compress HTML, CSS, JavaScript, Text, XML and fonts
		AddOutputFilterByType DEFLATE application/javascript
		AddOutputFilterByType DEFLATE application/rss+xml
		AddOutputFilterByType DEFLATE application/vnd.ms-fontobject
		AddOutputFilterByType DEFLATE application/x-font
		AddOutputFilterByType DEFLATE application/x-font-opentype
		AddOutputFilterByType DEFLATE application/x-font-otf
		AddOutputFilterByType DEFLATE application/x-font-truetype
		AddOutputFilterByType DEFLATE application/x-font-ttf
		AddOutputFilterByType DEFLATE application/x-javascript
		AddOutputFilterByType DEFLATE application/xhtml+xml
		AddOutputFilterByType DEFLATE application/xml
		AddOutputFilterByType DEFLATE font/opentype
		AddOutputFilterByType DEFLATE font/otf
		AddOutputFilterByType DEFLATE font/ttf
		AddOutputFilterByType DEFLATE image/svg+xml
		AddOutputFilterByType DEFLATE image/x-icon
		AddOutputFilterByType DEFLATE text/css
		AddOutputFilterByType DEFLATE text/html
		AddOutputFilterByType DEFLATE text/javascript
		AddOutputFilterByType DEFLATE text/plain
		AddOutputFilterByType DEFLATE text/xml

		# Remove browser bugs (only needed for really old browsers)
		BrowserMatch ^Mozilla/4 gzip-only-text/html
		BrowserMatch ^Mozilla/4\.0[678] no-gzip
		BrowserMatch \bMSIE !no-gzip !gzip-only-text/html
		Header append Vary User-Agent
	</IfModule>
```
Do I need to go into the Dockerfile here https://github.com/devilbox/docker-apache-2.4/blob/master/Dockerfile and enable the wanted module there or can I do this through the `.conf` file for Apache?
1. Host operating system and version: Windows 10 Pro version 1903 build 18362.418
2. (Windows) Native Docker or Docker Toolbox: Docker Desktop v2.1.0.4 (39773)
3. Docker version: Engine 19.03.04
4. Docker Compose version: 1.24.1
5. (Linux) Is SELinux enabled?:  N/A
6. What git commit hash are you on?: 0543f2da9218661824c64148e07f601f5e99f302


git clone ...
vi .env
select any version of mysql in the .env file

#MYSQL_SERVER=mysql-5.5
#MYSQL_SERVER=mysql-5.6
MYSQL_SERVER=mysql-5.7
#MYSQL_SERVER=mysql-8.0

start container ... docker-compose up

mysql will fail on all versions


EXPECTED BEHAVIOUR
a container with an available version of Mysql


ACTUAL BEHAVIOUR
Cannot use Mysql




# Feature  NodeJS container

NodeJS is the current most popular technology in web development. Even so many PHP projects using NodeJS technology in it. The current way of the devilbox for using NodeJS is not really proper and decent for NodeJS development. I made it much flexible and configurable in a proper way.
# Proper env example name

Chang env-example name to .env.example to make the name proper as it should. Also, some .env extensions require this name for able to work much easier.
I'm trying to log my rewrites...

This is the pertinent part of my nginx.yml override file:

```
###
### Basic vHost skeleton
###
vhost: |
  error_log /var/log/nginx-error.log notice;
  rewrite_log on;
  server {
      listen       __PORT____HTTP_PROTO____DEFAULT_VHOST__;
      server_name  __VHOST_NAME__;

      access_log   "__ACCESS_LOG__" combined;
      error_log    "__ERROR_LOG__" warn;

  __REDIRECT__
  __SSL__
  __VHOST_DOCROOT__
  __VHOST_RPROXY__
  __PHP_FPM__
  __ALIASES__
  __DENIES__
  __SERVER_STATUS__
      # Custom directives
  __CUSTOM__
  }
```

When the server starts up, I see: 

```
httpd_1    | 2019/09/11 16:35:02 [emerg] 268#268: "rewrite_log" directive is duplicate in /etc/httpd/vhost.d/mysite.conf:89
httpd_1    | nginx: [emerg] "rewrite_log" directive is duplicate in /etc/httpd/vhost.d/mysite.conf:89
httpd_1    | watcherd: [2019-09-11 16:35:02] [ERR] TRIGGER failed:    nginx -s stop
```
If I remove the rewrite_log directive from my `nginx.yml` file, it works fine, error message goes away.

I have mailhog installed (per the devilbox docs); could it be possible that it adds its own `rewrite_log` directive? (But there's no override for mailhog: `[WARN] override template not found:  /shared/httpd/mhsendmail/.devilbox/nginx.yml`)

And in general.... how can I just see the final, compiled, finished ;-) `nginx.conf` file (produced by `vhost_gen.py`) that nginx is using?! I can't find it anywhere on the box. That would probably help me spot the cause of this problem immediately. :-\

I'm trying to just get some basic rewrite logging in place with Devilbox and Apache 2.4 and nothing is working at all and I can't even get some logs to help me understand why.

I'm on Apache 2.4 and my apache.yml file is simple:

```
---

#
# The features itself also contain variables to be adjusted in conf.yml
# and will then be replaced in their corresponding feature section
# before being replaced into the vhost section (if enabled):
#
# PHP-FPM:
#    __PHP_ADDR__
#    __PHP_PORT__
# XDomain:
#    __REGEX__
# Alias:
#    __REGEX__
#    __PATH__
# Deny:
#    __REGEX__
# Status:
#    __REGEX__
#
# Variables to be replaced directly in the vhost configuration can also be set
# in conf.yml and include:
#    __VHOST_NAME__
#    __DOCUMENT_ROOT__
#    __INDEX__
#    __ACCESS_LOG__
#    __ERROR_LOG__
#    __PHP_ADDR__
#    __PHP_PORT__
#


###
### Basic vHost skeleton
###

vhost: |
  <VirtualHost __DEFAULT_VHOST__:__PORT__>
      ServerName __VHOST_NAME__
      Protocols  __HTTP_PROTO__
      CustomLog  "__ACCESS_LOG__" combined
      ErrorLog   "__ERROR_LOG__"

  __REDIRECT__
  __SSL__
  __VHOST_DOCROOT__
  __VHOST_RPROXY__
  __PHP_FPM__
  __ALIASES__
  __DENIES__
  __SERVER_STATUS__
      # Custom directives
  __CUSTOM__
  </VirtualHost>
  
    __SERVER_STATUS__
      # Custom directives
  __CUSTOM__
  </VirtualHost>

###
### vHost Type (normal or reverse proxy)
###
vhost_type:
  # Normal vHost (-p)
  docroot: |
    # Define the vhost to serve files
    LogLevel debug rewrite:trace6
    ErrorLog /tmp/apache-error.log

    DocumentRoot "__DOCUMENT_ROOT__"
    <Directory "__DOCUMENT_ROOT__">
        DirectoryIndex __INDEX__

        AllowOverride All
        Options All

        RewriteEngine on
        RewriteBase /

        Order allow,deny
        Allow from all
        Require all granted

        RewriteCond %{REQUEST_FILENAME} !-f
        RewriteCond %{REQUEST_FILENAME} !-d
        # RewriteRule (.*) http://www.google.com/
        RewriteRule ^(.*)$ /path/index.php?args=$1 [L]
    </Directory>
```

The box starts up fine, I see this apache24.yml file being parsed and I know it's being used, because if I REMOVE the comment in front of the command to rewrite everything to google.com ...it works. So we don't have to ask if I have the file in the right place or whatever... we know it's working.

But the _real_ rewrite that I need (you can see it there as `/path/index.php`) is failing. I don't see why so I just need some logging to see why... and those ErrorLog or LogLevel directives seem to be doing NOTHING.

(It's also super frustrating because inside devilbox I can't find anything I expect. `/etc/apache` doesn't exist, `/etc/httpd` doesn't exist... even at startup I see `vhost_gen.py -p "/shared/httpd/chat" -n "chat" -c /etc/vhost-gen/mass.yml -o "/shared/httpd/chat/.devilbox/" -s -v -m both` yet the `/etc/vhost-gen/` path doesn't exist in the box... what is going on?! Where _exactly_ does the Apache 2.4 inside this devilbox get its configuration from, i.e. where is the compiled version of my `apache24.yml` file?)

Please help. Ideally I need this rewrite to work but I'd be happy just getting some detailed logging out of Apache... I keep tweaking things, restarting, no luck. It's driving me up the wall.

Thank you...
