It's possible to instance new middleware for it. But I'll have to instance 2 middleware always together.
I need to do all in one middleware.
Not like this:
Route.get('/Posts', 'PostsController.index').middleware(['auth', 'auth_blocker'])
Like this:
Route.get('/Posts', 'PostsController.index').middleware(['auth'])

There is a good pratice in actual version for it? 
```
  if (validation.fails()) {
            session.withErrors(validation.messages()).flashAll()
            return response.redirect('back')
        }
```

how to achieve this response.redirect('back')
when i get that response, it redirect me to the '/' not in the current path
<!-- CLICK "Preview" FOR INSTRUCTIONS IN A MORE READABLE FORMAT -->

## Prerequisites

We do our best to reply to all the issues on time. If you will follow the given guidelines, the turn around time will be faster.

- Lots of raised issues are directly not bugs but instead are design decisions taken by us.
- Make use of our [forum](https://forum.adonisjs.com/), or [discord server](https://discord.me/adonisjs), if you are not sure that you are reporting a bug.
- Ensure the issue isn't already reported.
- Ensure you are reporting the bug in the correct repo.

*Delete the above section and the instructions in the sections below before submitting*

## Package version
 "version": "4.1.0",
  "adonis-version": "4.1.0",

## Node.js and npm version
nodejs   v12.14.0
npm  6.13.4

## Sample Code (to reproduce the issue)
UserController.js

'use strict'
class UserController {
    index(){
      return 1;
    }
}
module.exports = UserController


const { ioc } = require('@adonisjs/fold');
const instance=ioc.make("App/Controllers/Http/Admin/UserController");
console.log('instance ='+instance);
instance['index'](request,response)

return result:
TypeError
instance['index'] is not a function

instance =   UserController {}

But use model  ioc.make("App/Models/User");   is ok
## BONUS (a sample repo to reproduce the issue)


**Exception format** it's pretty nice while where creating a fullstack app, the problem is when whe use Adonis for **API development**, the error it's kinda unreadable while using tools like Postman. It would be so much readable use the Acept header and return a format dynamic response.

Actually, make a simple handler with  `adonis make:ehandler`  with 
`async handle(error, {response}) {
    response.status(error.status).json({
      message: error.message,
      error: error.name
    })
  }
`
works pretty fine. But I think it would be a better  developement experiencie just done this by default.

Let me hear in what I can help.
## Package version
Adonis ^5.0.9
Lucid ^6.1.3

## Node.js and npm version
Node 13.2.0 and npm 6.13.1

## Sample Code (to reproduce the issue)

So I'm rewriting a Laravel app to an Adonis app and here are my models

```javascript
// A customer can have multiple invoices
class Customer extends Model {
	invoices() {
		return this.hasMany('App/Models/Invoice');
	}

	invoiceItems() {
		return this.manyThrough('App/Models/Invoice', 'items');
	}
}

// An invoice can have multiple invoice items
class Invoice extends Model {
	items() {
		return this.hasMany('App/Models/InvoiceItem');
	}

	customer() {
		return this.belongsTo('App/Models/Customer');
	}
}

// An invoice item belongs to an invoice
class InvoiceItem extends Model {
	product() {
		return this.belongsTo('App/Models/Product');
	}

	invoice() {
		return this.belongsTo('App/Models/Invoice');
	}
}
```

I want to get the sum of invoice items price * qty and here's a sample output of my _/api/customers_

```javascript
Customer.query()
.withCount('invoiceItems as invoice_items_total', builder => {
	builder.select(
	      DB.raw('sum(price * quantity)')
	);
})
.fetch()

[
    {
        "id": 2,
        "account_no": "Solana-2",
        "type": "person",
        "first_name": "Mark",
        "middle_name": "",
        "last_name": "Soriano",
        "company_name": "",
        "address": "Solana",
        "created_at": "2019-12-08 10:22:12",
        "updated_at": "2019-12-08 10:24:09",
        "__meta__": {
            "invoice_items_total": 1, // Still returns total no. of rows instead of sum(product * quantity) ?
        }
    }
]
```

Weird thing here is instead of the value of `DB.raw('sum(price * quantity)')`, I'm still getting the total number of invoice_items  rows which is 1.

My laravel code looks like this and it works:

```php
Customer::withCount([
            'invoice_items as invoice_items_total' => function($query) {
                $query->select(DB::raw('sum(price * quantity)'));
            },
 ])->get();
```

This code returns the sum instead of total number of rows.

Am I missing something here? Or is that out of scope for `withCount` constraints in Adonis? Any help would be much appreciated.
Node-res does not check for transfer encoding when sending the content-length header. Normally you don't need to use chunked encoding for stuff you send in one go, but still...

```
  /**
   * setting up content length as response header
   */
  if (chunk && !headers['content-length']) {
    Response.header(res, 'Content-Length', Buffer.byteLength(chunk))
  }
```
While uploading an image from an android device, then the application crashed and following error generate.


| /app/node_modules/media-typer/index.js:249
|     throw new TypeError('invalid media type')
|     ^
| 
| TypeError: invalid media type
|     at splitType (/app/node_modules/media-typer/index.js:249:11)
|     at Object.parse (/app/node_modules/media-typer/index.js:160:13)
|     at new File (/app/node_modules/@adonisjs/bodyparser/src/Multipart/File.js:147:36)
|     at Multipart.onPart (/app/node_modules/@adonisjs/bodyparser/src/Multipart/index.js:129:26)
|     at Form.<anonymous> (/app/node_modules/@adonisjs/bodyparser/src/Multipart/index.js:171:14)
|     at Form.emit (events.js:210:5)
|     at Object.cb (/app/node_modules/multiparty/index.js:642:10)
|     at flushEmitQueue (/app/node_modules/multiparty/index.js:626:10)
|     at /app/node_modules/multiparty/index.js:602:5
|     at handlePart (/app/node_modules/multiparty/index.js:641:3)
|     at Form.onParseHeadersEnd (/app/node_modules/multiparty/index.js:527:5)
|     at Form._write (/app/node_modules/multiparty/index.js:319:24)
|     at doWrite (_stream_writable.js:431:12)
|     at writeOrBuffer (_stream_writable.js:415:5)
|     at Form.Writable.write (_stream_writable.js:305:11)
|     at IncomingMessage.ondata (_stream_readable.js:726:22)
| Application crashed, make sure to kill all related running process, fix the issue and re-run the app
^CERROR: Aborting.

Hi,

I would like to add some clean-up code when service reload (run with --dev) or shutdown (with Crtl+C or something like kill).  Is there any hook like `beforeShutdown` existing in the framework to gracefully shutdown the server?

If there is no such hook, I can use something like `process.on('SIGTERM', clean_up_function);` but I do not sure what I supposed to call to gracefully stop everything used by adonis

Session files are never deleted since adonis version 2 and it results in no spave left in the server. It would be nice if it made some cleanup every once in a while. A crone-job might be set up for now as a workaround.

## Package version
5.0.13

## Node.js and npm version
node v8.16.0 npm v6.4.1

## Sample Code (to reproduce the issue)
Not applicable

## Package version

```
  "version": "4.1.0",
  "adonis-version": "4.1.0",
    "@adonisjs/ace": "^5.0.2",
    "@adonisjs/antl": "^2.0.6",
    "@adonisjs/auth": "^3.0.5",
    "@adonisjs/bodyparser": "^2.0.3",
    "@adonisjs/cors": "^1.0.6",
    "@adonisjs/fold": "^4.0.8",
    "@adonisjs/framework": "^5.0.7",
    "@adonisjs/ignitor": "^2.0.6",
    "@adonisjs/lucid": "^5.0.4",
    "@adonisjs/mail": "^3.0.8",
    "@adonisjs/session": "^1.0.25",
    "@adonisjs/shield": "^1.0.6",
    "@adonisjs/validator": "^5.0.3",
```

## Node.js and npm version

```
node.js: v10.8.0
npm: 6.4.0
```

## Sample Code (to reproduce the issue)
controller:

` return view.render('pages.confirmation',{status:0})`

or

` return view.render('pages.confirmation',{status:1})`

view:

```
{{status}}
@if(status===1)
  do sth
@elseif(status===0)
  do sth
@endif
```

The view evaluates the value as empty string / null / undefined and prints nothing to screen when status is 0 . If i set status to other than 0, it prints the number to screen properly. Is this a bug? If it is not, it should also print 0 (integer).. I am not sure the problem is about the data sending mechanism or printing data to screen mechanism.
Thank you for your helps.