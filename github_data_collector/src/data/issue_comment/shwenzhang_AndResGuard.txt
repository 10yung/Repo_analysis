如果应用内接入的sdk较多导致白名单较长，会导致配置xml维护麻烦
是否可以对CLI工具添加参数，以一个文件夹下多个子文件、每个子文件中每个规则一行方式提供白名单列表，并提供行头注释

且在xml配置白名单时还需要提供应用包名的方式是否可以优化，比如让CLI工具去读取应用包名自动追加
在阅读源码的过程中发现 RawARSCDecoder 类中的 readLibraryType()方法中 最后会判断  mHeader.type == Header.TYPE_TYPE 时 调用 readTableTypeSpec()方法。但是在  readTableTypeSpec()方法的第一行中 调用了 readSingleTableTypeSpec()方法。在这个方法中对 headerType 做了判断，如果不是 Header.TYPE_SPEC_TYPE 就会报错(而且ResourceType.h中 也没有发现有提到 RES_TABLE_LIBRARY_TYPE 后面会跟 RES_TABLE_TYPE_SPEC_TYPE )。 所以说 是不是这段逻辑是无用逻辑？求解

```
 private void readLibraryType() throws AndrolibException, IOException {
        checkChunkType(Header.TYPE_LIBRARY);
        int libraryCount = mIn.readInt();
       ....
        while (mHeader.type == Header.TYPE_TYPE) {
            readTableTypeSpec();
        }
    }

 private void readTableTypeSpec() throws AndrolibException, IOException {
        readSingleTableTypeSpec();

      .....
    }

    private void readSingleTableTypeSpec() throws AndrolibException, IOException {
        checkChunkType(Header.TYPE_SPEC_TYPE);
       .....
    }
```
distributionUrl=https\://services.gradle.org/distributions/gradle-6.1-milestone-2-all.zip
classpath 'com.android.tools.build:gradle:4.0.0-alpha07'
工程报错：

No such property: variantConfiguration for class: com.android.build.gradle.internal.variant.ApplicationVariantData


目前AndResGuard影响接入AppBundle吗? 混淆后是否影响拆包
你好，windows下（jdk为1.8）直接执行脚本
Java -jar AndResGuard-cli-1.2.12.jar out.apk -config config.xml -out release -zipalign **\zipalign -7zip 7z -signature test.keystore pwd pwd test。
报如下错误，请问是什么问题呢？
![andError](https://user-images.githubusercontent.com/20037928/69146403-bc99dc80-0b0a-11ea-9620-cd4d9b0608ac.png)

请教一下，用 7zip 压缩 mp3 文件会有什么问题吗？
Does this plugin depends on gradle android plugin version?

'com.android.tools.build:gradle:3.5.1'

By default this version is the same as Android Studio version.

Can there be issue with older build tools version or SDK build toolds version?

What are minimum gradle android plugin and SDK build tools version?
![微信截混淆资源4](https://user-images.githubusercontent.com/17539770/65041998-85804100-d98a-11e9-8497-43be750f602f.png)

请问这一段代码应该在哪个配置文件中进行配置？从您的说明文档中我没弄明白

我们项目表情图标名称，带有中文字符，混淆后，中文变成乱码显示，英文不受影响。
在有些windows机器上，gradle还会报错失败
### 预期
resguardUseApk 运行成功
### 实际
resguardUseApk 运行失败

错误信息如下：
```

* Exception is:
org.gradle.api.tasks.TaskExecutionException: Execution failed for task ':app:resguardUseApk'.
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:110)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.execute(ExecuteActionsTaskExecuter.java:77)
	at org.gradle.api.internal.tasks.execution.OutputDirectoryCreatingTaskExecuter.execute(OutputDirectoryCreatingTaskExecuter.java:51)
	at org.gradle.api.internal.tasks.execution.SkipUpToDateTaskExecuter.execute(SkipUpToDateTaskExecuter.java:59)
	at org.gradle.api.internal.tasks.execution.ResolveTaskOutputCachingStateExecuter.execute(ResolveTaskOutputCachingStateExecuter.java:54)
	at org.gradle.api.internal.tasks.execution.ValidatingTaskExecuter.execute(ValidatingTaskExecuter.java:59)
	at org.gradle.api.internal.tasks.execution.SkipEmptySourceFilesTaskExecuter.execute(SkipEmptySourceFilesTaskExecuter.java:101)
	at org.gradle.api.internal.tasks.execution.FinalizeInputFilePropertiesTaskExecuter.execute(FinalizeInputFilePropertiesTaskExecuter.java:44)
	at org.gradle.api.internal.tasks.execution.CleanupStaleOutputsExecuter.execute(CleanupStaleOutputsExecuter.java:91)
	at org.gradle.api.internal.tasks.execution.ResolveTaskArtifactStateTaskExecuter.execute(ResolveTaskArtifactStateTaskExecuter.java:62)
	at org.gradle.api.internal.tasks.execution.SkipTaskWithNoActionsExecuter.execute(SkipTaskWithNoActionsExecuter.java:59)
	at org.gradle.api.internal.tasks.execution.SkipOnlyIfTaskExecuter.execute(SkipOnlyIfTaskExecuter.java:54)
	at org.gradle.api.internal.tasks.execution.ExecuteAtMostOnceTaskExecuter.execute(ExecuteAtMostOnceTaskExecuter.java:43)
	at org.gradle.api.internal.tasks.execution.CatchExceptionTaskExecuter.execute(CatchExceptionTaskExecuter.java:34)
	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter$1.run(EventFiringTaskExecuter.java:51)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:300)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:292)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:174)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)
	at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)
	at org.gradle.api.internal.tasks.execution.EventFiringTaskExecuter.execute(EventFiringTaskExecuter.java:46)
	at org.gradle.execution.taskgraph.LocalTaskInfoExecutor.execute(LocalTaskInfoExecutor.java:42)
	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareWorkItemExecutor.execute(DefaultTaskExecutionGraph.java:277)
	at org.gradle.execution.taskgraph.DefaultTaskExecutionGraph$BuildOperationAwareWorkItemExecutor.execute(DefaultTaskExecutionGraph.java:262)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:135)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker$1.execute(DefaultTaskPlanExecutor.java:130)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.execute(DefaultTaskPlanExecutor.java:200)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.executeWithWork(DefaultTaskPlanExecutor.java:191)
	at org.gradle.execution.taskgraph.DefaultTaskPlanExecutor$ExecutorWorker.run(DefaultTaskPlanExecutor.java:130)
	at org.gradle.internal.concurrent.ExecutorPolicy$CatchAndRecordFailures.onExecute(ExecutorPolicy.java:63)
	at org.gradle.internal.concurrent.ManagedExecutorImpl$1.run(ManagedExecutorImpl.java:46)
	at org.gradle.internal.concurrent.ThreadFactoryImpl$ManagedThreadRunnable.run(ThreadFactoryImpl.java:55)
Caused by: groovy.lang.MissingPropertyException: Could not find productFlavors on com.android.build.gradle.internal.api.ReadOnlyProductFlavor@42c957ab
	at com.android.build.gradle.internal.api.ReadOnlyBaseConfig.propertyMissing(ReadOnlyBaseConfig.java:141)
	at com.tencent.gradle.AndResGuardTask$_run_closure4.doCall(AndResGuardTask.groovy:95)
	at com.tencent.gradle.AndResGuardTask.run(AndResGuardTask.groovy:90)
	at org.gradle.internal.reflect.JavaMethod.invoke(JavaMethod.java:73)
	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.doExecute(StandardTaskAction.java:46)
	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:39)
	at org.gradle.api.internal.project.taskfactory.StandardTaskAction.execute(StandardTaskAction.java:26)
	at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:801)
	at org.gradle.api.internal.AbstractTask$TaskActionWrapper.execute(AbstractTask.java:768)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter$1.run(ExecuteActionsTaskExecuter.java:131)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:300)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor$RunnableBuildOperationWorker.execute(DefaultBuildOperationExecutor.java:292)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.execute(DefaultBuildOperationExecutor.java:174)
	at org.gradle.internal.operations.DefaultBuildOperationExecutor.run(DefaultBuildOperationExecutor.java:90)
	at org.gradle.internal.operations.DelegatingBuildOperationExecutor.run(DelegatingBuildOperationExecutor.java:31)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeAction(ExecuteActionsTaskExecuter.java:120)
	at org.gradle.api.internal.tasks.execution.ExecuteActionsTaskExecuter.executeActions(ExecuteActionsTaskExecuter.java:99)
	... 31 more

```

### 复现步骤

1. 打开 AndResGuard-example 工程，运行 app
2. 在 app 工程的 `build.gradle` 中的 `andResGuard` 闭包中正确配置 `sourceApk`，`sourceFlavor ` 和`sourceBuildType ` 变量。
3. 再次运行 app 中的 `resguardUseApk` task

### 错误原因分析

以 tag 1.2.17 为例：出错位置为 `AndResGuardTask` 类的 95 行，校验 `sourceFlavor `时
```groovy
if (config.flavors.productFlavors.size() > 0 && StringUtil.isBlank(configuration.sourceFlavor)) {
          throw new RuntimeException("Must setup sourceFlavor when flavors exist in build.gradle")
        }
```
其中 `config.flavors` 在 `buildInfo` 创建时，赋值即为 `variant.productFlavors`，此处应该是手误将`config.flavors.size()` 写成了 `config.flavors.productFlavors.size()` 从而导致此问题。

```groovy

buildConfigs << new BuildInfo(
              outputFile,
              variant.variantData.variantConfiguration.signingConfig,
              variant.variantData.variantConfiguration.applicationId,
              variant.buildType.name,
              variant.productFlavors,
              variantName,
              variant.mergedFlavor.minSdkVersion.apiLevel)
        }

```





