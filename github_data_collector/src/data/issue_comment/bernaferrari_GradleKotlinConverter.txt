Can you please provide clear instruction about how to use it
before
`flavorDimensions "env", "moduleEnv"`
after
`flavorDimensions("env", "moduleEnv")`



before
```
productFlavors {
    dev {
        dimension "env"
        resValue "string", "app_name", "Test App DEV"
        buildConfigField "boolean", "IS_DEBUG", "true"
    }
    pub {
        dimension "env"
        buildConfigField "boolean", "IS_DEBUG", "false"
    }
    moduleDev {
        dimension "moduleEnv"
    }
    modulePub {
        dimension "moduleEnv"
    }
}
```

after
```
productFlavors {
    create ("dev") {
        setDimension("env")
        resValue("string", "app_name", "Test App DEV")
        buildConfigField("boolean", "IS_DEBUG", "true")
    }
    create ("pub") {
        setDimension("env")
        buildConfigField("boolean", "IS_DEBUG", "false")
    }
    create ("moduleDev") {
        setDimension("moduleEnv")
    }
    create ("modulePub") {
        setDimension("moduleEnv")
    }
}
```


before
`useLibrary "org.apache.http.legacy"`
after
`useLibrary("org.apache.http.legacy")`

before
```
testOptions {
    unitTests {
        includeAndroidResources = true
    }
}
```

after
```
testOptions {
    unitTests.isIncludeAndroidResources = true
}
```

before
```
sourceSets {
    main.java.srcDirs += "src/main/kotlin"
}
```
after
```
sourceSets.getByName("main") {
    java.srcDir("src/main/kotlin")
}
```
Hi tried to use the tool but after download and run the command  `./gradlekotlinconverter.kts build.gradle` i got the error:

`error: unable to instantiate class Gradlekotlinconverter (gradlekotlinconverter.kts): java.lang.NoClassDefFoundError: kotlin/script/templates/standard/ScriptTemplateWithArgs`

Any suggestion to resolve it? thanks!
While I was adding support for conversion of Groovy's array syntax `[items...]` to Kotlin's `listOf(items...)`, the resultant output didn't look nice because of the later steps.

We should do proper testing of each and every function separately and also as a whole.
```
artifacts {
    archives shadowJar
}
```