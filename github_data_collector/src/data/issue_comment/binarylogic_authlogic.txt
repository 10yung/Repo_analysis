- [x] This is not a usage question.
- [x] This is not a security issue.
- [x] This bug is reproducible with a clean install of authlogic
- [x] I am committed to fixing this in a reasonable amount of time, and
  responding promptly to feedback.

It's ok if the reaction to this issue is "this is actually a usage question," however in that case, I would appreciate some guidance on how to contribute to the repository on how to make it more helpful and clear for others. 

# Expected Behavior

With `ignore_blank_passwords=true` as the (good sane) default, users can happily update their profile, etc, without too much trouble.

Before 5.0, password resets in Authlogic "just worked" even with `ignore_blank_passwords=true`— The [Authlogic example app](https://github.com/binarylogic/authlogic_example/blob/with-password-resets/app/controllers/password_resets_controller.rb#L27-L29) and documentation recommended us to follow this pattern in the controller.

```
    @user.password = params[:user][:password]
    @user.password_confirmation = params[:user][:password_confirmation]
``` 


# Actual Behavior

This behavior began for us with Authlogic > 5 which we migrated to using similar validations as to those provided in the readme.

Using the same code and defaults as before, users can now submit blank passwords to the reset form, which has the result of logging them in without resetting their passwords.

Authlogic 5.0 leaves validations up to the user (providing a example set of validations) but there seems to be no clear migration path, best practice or default for handling password resets. The fact that the password logic is heavily managed by ` ignore_blank_passwords` makes it difficult to know off the bat what the best solution is, and others might be surprised that password resets won't be possible without changing config.

# Options

1. The default is changed to ` ignore_blank_passwords=false` and documentation changed to recommend "don't allow empty password fields to submit in your view, use a different form for password changing"
2. ✨ Internal magic happens, and we create an exception for ` ignore_blank_passwords` (such as, when the only fields being submitted are password fields)
3. We add a manual one-time flag to User to bypass ` ignore_blank_passwords`, ala https://stackoverflow.com/questions/2174082/force-validation-of-blank-passwords-in-authlogic
4. No app changes, but we update the README and UPGRADING to highlight this change in behavior.

For our app, I think we will just set `ignore_blank_passwords=false`, as we actually aren't sending blank passwords up anymore (except on password resets!).

- [x] This is not a usage question.
- [x] This is not a security issue.
- [x] I am committed to implementing this feature in a reasonable amount of
  time, and responding promptly to feedback.

# Current Behavior
User: inexperience developer
when submitting bug / feature request user is obligated to committed on implementing a the fixes in reasonable amount of time. However, it is not possible for inexperience developer who found bugs and don't know how to fix it.

# Proposed Behavior
Inexperience developer may submit **valid**, **usefull for common user**, and **fully described** bug / feature request information but **not obligated to fix it**. Inexperience developer encouraged to write test to to the bugs / feature request, but not required. 

# Proposed Solution
remove
```
I am committed to implementing this feature in a reasonable amount of
  time, and responding promptly to feedback.
```
from issue template.
Because `ActionController::API` does not include `ActionController::Cookies` metal and `ActionDispatch::Cookies` rack module,
Therefore, our controller can not use the `cookies` method.

In this patch, `Authlogic::Session::Base` calls `controller#cookies` only when available.
This ports the `encrypted_cookies` option from the 4-4-stable branch https://github.com/binarylogic/authlogic/pull/660


Namely in the magic columns, there are some counter increments that are done as validations. It'd be nice to refactor these to be callbacks instead.