if i exist multilevel jump:

```javascript
// router array
const routerArr = [
    {
        name: 'a',
        path: '/a',
        children: [
            {
                name: 'b',
                path: '/b',
                children: [
                    {
                        name: 'c',
                        path: '/c'
                    }
                ]
            }
        ]
    }
]
```
use the instantiated 'navigate' cannot jump:
```javascript
const router = createRouter(routerArr, config)
router.navigate('c')
router.navigate('/a/b/c')
router.navigate('a.b.c')
```
none can jump
**Goals of this PR:**
- Maintain repo
- Close some issues

**List (will be updated)**

- [x] Use yarn workspaces
- [x] Update dev dependencies
- [x] Update TypeScript
- [x] Update Node CI version
- [x] Use Jest projects rather than running individual commands
- [x] Remove tslint and use eslint
- [x] Remove types from git history
- [x] Update files included (use files rather than .gitignore list)
- [ ] Use React testing library and remove enzyme
- [x] Maintain search-params package
- [x] Maintain path-parser package
- [ ] Maintain route-node package
I'm using a router instance created in one module and configured in others as follows:
```js
// routing.js
const router = createRouter([
	{ name: 'Not Found', path: '/not-found' },
	{ name: 'root', path: '/', forwardTo: 'Panels' }, // @todo: import the route name
], routerOptions);

router.setRootPath('/');

export const router;

// --------------------
// page.js
import { router } from './routing';
router.add({
	name: 'Page',
	path: 'page?:search',
	encodeParams: (stateParams) => {
		console.debug('encode', { stateParams });
		return {};
	},
	decodeParams: (pathParams) => {
		console.debug('decode', { pathParams });
		return {};
	},
});
```

I never see either encode or decode run, but when I ask the router I get the correct state.

When I dig into the router, I noticed that the router has  `.Page` as the route name, so this lookup is failing:

Digging further, it seems the underlying `route-node` library is building a `fullName` as: https://github.com/troch/route-node/blob/71fd8d9053c223ef9e7e699df2ab677852280332/modules/RouteNode.ts#L151-L154

I made an issue there asking about this behavior in the callback: https://github.com/troch/route-node/issues/27

router5 is putting this full name in its configs:
https://github.com/router5/router5/blob/03a96c62412b558531f0435dd5ab0e47e2ea56cf/packages/router5/modules/core/routes.ts#L18-L32

It seems the route triggering side isn't taking the `router-node` fullName into account for any of its lookups:
https://github.com/router5/router5/blob/03a96c62412b558531f0435dd5ab0e47e2ea56cf/packages/router5/modules/core/routes.ts#L100-L125

The specific bug seems to be caused by `route-node` calling callbacks with name overwritten with `fullName`:
https://github.com/troch/route-node/blob/71fd8d9053c223ef9e7e699df2ab677852280332/modules/RouteNode.ts#L155-L160

Doing `npm ls route-node` yields:
```
└─┬ router5@7.0.2
  └── route-node@3.4.2 
```
Type error on type definition
When I click "live" on any of the links under https://router5.js.org/#examples

I see that router5 version is still 6, the redux example in particular still uses react-redux 5(current is 7)



Hi, i configured routing as follows: 
```javascript
const router = createRouter([
  { name: "home", path: "/home" },
  { name: "client", path: "/client?:roles" }
], {
  defaultRoute: 'home',
  queryParams: {
    arrayFormat: "brackets",
  }
});

router.usePlugin(
  browserPlugin({
    useHash: true,
  })
);

router.navigate('client', {roles: ['a', 'b', 'c']});
``` 
when i navigate trough `router.navigate`, the routing is successfull, but when i reload the page the page returns to `home`.

I don't know if there is something wrong in my configuration. thank you for your help
Hi everyone!

I'm try to run build with `npm run build` but i have an error:

```
[!] (rpt2 plugin) Error: ~/router5/packages/react-router5-hocs/modules/RouterProvider.ts(28,16): semantic error TS2339 Property 'childContextTypes' does not exist on type 'typeof RouterProvider'.
```

The type of [RouterProvider.childContextTypes](https://github.com/router5/router5/blob/master/packages/react-router5-hocs/modules/RouterProvider.ts#L28) is undefined. Any knows the reason why is not defined?

Maybe is necessary create a new typo `childContextTypes`
Setting the directive to `false` is discouraged, but why? What can go wrong? What to be aware of?

*(apologies for early submission of the issue, accidentally hit Enter :) )*
inputMode is not compatible with @types/react@16.9.11
Hi everyone,
we are using mobx-router5 and we have our middleware, and i am wondering if there is any way to cancel execution and redirect?

For example i find that user doesn't have permissions for the route/state i want to call route.navigate("accessDenied"). But current route is always executed.

How would i go about doing this?
Thank you