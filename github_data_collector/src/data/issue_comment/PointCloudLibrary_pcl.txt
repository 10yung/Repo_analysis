<!--- WARNING: This is an issue tracker. Before opening a new issue make sure you read https://github.com/PointCloudLibrary/pcl/blob/master/CONTRIBUTING.md#using-the-issue-tracker. -->

<!--- Provide a general summary of the issue in the Title above -->

## Context
There are several issues such as undefined behavior, memory leaks, etc. that aren't being detected because we have not setup sanitizers and checks. Setting them up in CI is difficult, but using third party tools is easy.

Eg: https://app.codacy.com/manual/kunaltyagi/pcl/dashboard

## Possible Solution
Enable good third party tools (and keep monitoring them, disable them if they stop giving us any benefits). This requires organization ownership to manager. @jspricke

Separating out since it failed tests and I couldn't debug the issue.

Created a PR to keep it on my todo list
I'm working on a changelist, more cleanup is needed.
Needs docopt and dict2xml python modules

* Operating System and version: Linux Mint 19
* PCL Version: latest version

I'm getting the following error message while trying to install PCL

```
[ 41%] Built target pcl_pcd2png
[ 41%] Building CXX object surface/CMakeFiles/pcl_surface.dir/src/3rdparty/poisson4/marching_cubes_poisson.cpp.o
[ 41%] Built target pcl_ply2vtk
[ 41%] Linking CXX executable ../bin/pcl_tiff2pcd
MakeFiles/pcl_surface.dir/src/3rdparty/poisson4/geometry.cpp.o
[ 41%] Built target pcl_pcd2png
[ 41%] Building CXX object surface/CMakeFiles/pcl_surface.dir/src/3rdparty/poisson4/marching_cubes_poisson.cpp.o
[ 41%] Built target pcl_ply2vtk
[ 41%] Linking CXX executable ../bin/pcl_tiff2pcd
[ 20%] Building CXX object visualization/CMakeFiles/pcl_visualization.dir/src/common/shapes.cpp.o
[ 21%] Building CXX object visualization/CMakeFiles/pcl_visualization.dir/src/common/ren_win_interact_map.cpp.o
[ 21%] Building CXX object visualization/CMakeFiles/pcl_visualization.dir/src/cloud_viewer.cpp.o
^Cvisualization/CMakeFiles/pcl_visualization.dir/build.make:179: recipe for target 'visualization/CMakeFiles/pcl_visualization.dir/src/cloud_viewer.cpp.o' failed
sample_consensus/CMakeFiles/pcl_sample_consensus.dir/build.make:218: recipe for target 'sample_consensus/CMakeFiles/pcl_sample_consensus.dir/src/sac_model_registration.cpp.o' failed
make[2]: *** [visualization/CMakeFiles/pcl_visualization.dir/src/cloud_viewer.cpp.o] Interrupt
make[2]: *** [sample_consensus/CMakeFiles/pcl_sample_consensus.dir/src/sac_model_registration.cpp.o] Interrupt
CMakeFiles/Makefile2:387: recipe for target 'sample_consensus/CMakeFiles/pcl_sample_consensus.dir/all' failed
make[1]: *** [sample_consensus/CMakeFiles/pcl_sample_consensus.dir/all] Interrupt
CMakeFiles/Makefile2:1142: recipe for target 'visualization/CMakeFiles/pcl_visualization.dir/all' failed
make[1]: *** [visualization/CMakeFiles/pcl_visualization.dir/all] Interrupt
Makefile:162: recipe for target 'all' failed
make: *** [all] Interrupt
```


when run example from here http://pointclouds.org/documentation/tutorials/correspondence_grouping.php  
visual studio output:
“pcl/features/board.h”: No such file or directory



## Development Environment

* win10 64bit
* Compiler: vs 10
* PCL Version: All-in-one installers 1.6.0







* Provides a `pcl::shared_ptr`
* Converts all references to `boost::shared_ptr` to `pcl::shared_ptr`
* Fixes headers for successful compilation

This PR will allow for 2 PCL releases: 1.10 (with boost::shared_ptr) and 1.11 (with std::shared_ptr) with just 1 commit in the changelog.

Results achieved by:
1. Provide the alias
2. Copy the file in backup location
3.
    ```
    for dir in `ls */ -d`; do
      grep 'boost::shared_ptr' $dir -lr | xargs sed 's/boost::shared_ptr/shared_ptr/' -i;
    done
    ```
4. Copy the file back
5. Fix compilation errors
Fix the headers as per Include-What-You-Use.

Forgot to mark the PR as draft. Sorry for the noise.
I work with a CropHull class and I would like to access to the removed point indices after filter. But I can't access at the constructor inherited class FilterIndices to set the boolean "extract_removed_indice". Is there a reason why in CropHull class the boolean is unavailable?

<!--- WARNING: This is an issue tracker. Before opening a new issue make sure you read https://github.com/PointCloudLibrary/pcl/blob/master/CONTRIBUTING.md#using-the-issue-tracker. -->

<!--- Provide a general summary of the issue in the Title above -->

## Context
Some sanitizers need to be run using instrumented binaries (like UBSan) and creating workloads is difficult (sort of). This will provide additional benefits to any test added by making sure we don't introduce bad behaviors.

[Related discussion: #3176 (comment)](https://github.com/PointCloudLibrary/pcl/issues/3176#issuecomment-503919410)

## Possible Solution
* CI could `address,pointer-subtract,leak,undefined` in some job. Might increase runtime and compile time.
* CI could created instrumented binaries for express purpose of sanity checks. Doesn't sound like it would scale since the workloads will be synthetic, similar to tests