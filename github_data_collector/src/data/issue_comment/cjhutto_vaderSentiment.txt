Hi, I am working on an twitter sentiment classification task. I think the ```compound``` method does not work well in cases like the following:

text: "I am at ping chi street bus stop."

The result is like the following:

```Shell
{'pos': 0.0, 'neg': 0.268, 'compound': -0.296, 'neu': 0.732}
```
The ```stop``` here just means the bus stop. But the sentiment analyzer regards this as a negative notation...
In vaderSentiment.py, line 287:

  if item_lowercase == "no" and words_and_emoticons[i + 1].lower() in self.lexicon:
                valence = 0.0


This errors out on the edge case where the last word is no. Like in the following example:

Overall
Food: 1-5
Drink: 3-5 (beer)
Service: 1-5
Come back: no

Would probably need to update the line to check if its the last word.

Can some one update the repository on pypi to reflect the changes done recently to the code please. It seems to have bug of older version where the degree modifier is working incorrectly on line 265 ( vaderSentiment 3.2.1).
Very minor nit: the `requests` module is not actually used except in running as application in CLI. To limit dependency complexity, I would like to use `vaderSentiment` without having to also require `requests` - which is, in fact, totally not necessary in the context I'm working in.

Propose to move `import requests` to `vaderSentiment.py:668`. Although local imports are not ideal, there is already a local import of `nltk` in that block
I noticed a bug that VADER does not recognize emojis when it is attached to words or it is used without space. 

The codes shown in below link gives reproducible example. 
https://stackoverflow.com/questions/52110025/unable-to-predict-sentiment-of-emoticons

Hope this behavior is fixed soon. 
Updated lexicon of words to include common expresions used in CryptoTwitter. Sentiment scored by 10 independent users who are familiar with the expresions. 


I am running a sentiment analysis on amazon product reviews (1000 reviews). I noticed that when I run VADER sentiment analysis on all the reviews, I am obtaining different sentiment polarity and intensity as compared to running each review separate. An example is shown below.
if I run all the reviews: 
"It is all but perfection."
------------------------------------- {'neg': 0.0, 'neu': 1.0, 'pos': 0.0, 'compound': 0.0}
"I also like the ease of operating the answering machine as well."
 {'neg': 0.0, 'neu': 0.667, 'pos': 0.333, 'compound': 0.6124}
"I was resistant to buying an Amazon Fire because I thought my smart TV and cable box were doing a great job."
 {'neg': 0.089, 'neu': 0.595, 'pos': 0.316, 'compound': 0.7269}
"it is really helpful for browsing and basic activities"
-------- {'neg': 0.0, 'neu': 0.721, 'pos': 0.279, 'compound': 0.4754}
"Parental control on this is great, both us as parents and my son love this device."
 {'neg': 0.0, 'neu': 0.628, 'pos': 0.372, 'compound': 0.8519}
"I also love the fact that you added a memory slot."
------------ {'neg': 0.0, 'neu': 0.682, 'pos': 0.318, 'compound': 0.6369},...…………………………………....

If I run each review separately: 
It is all but perfection.---------------------------------------- {'neg': 0.0, 'neu': 0.442, 'pos': 0.558, 'compound': 0.7227}
Any suggestions why this problem is happening?

​

while installing "pip install python-openstackclient " with python 2.7 it's failed with below error:

  Downloading warlock-1.3.2.tar.gz
  Running setup.py (path:/tmp/pip_build_root/warlock/setup.py) egg_info for pack                                                                                                                                                             age warlock
    Traceback (most recent call last):
      File "<string>", line 17, in <module>
      File "/tmp/pip_build_root/warlock/setup.py", line 37, in <module>
        long_description=read("README.md"),
      File "/tmp/pip_build_root/warlock/setup.py", line 28, in read
        os.path.join(os.path.dirname(__file__), fname), "r", encoding="utf-8"
    TypeError: 'encoding' is an invalid keyword argument for this function
    Complete output from command python setup.py egg_info:
    Traceback (most recent call last):

  File "<string>", line 17, in <module>

  File "/tmp/pip_build_root/warlock/setup.py", line 37, in <module>

    long_description=read("README.md"),

  File "/tmp/pip_build_root/warlock/setup.py", line 28, in read

    os.path.join(os.path.dirname(__file__), fname), "r", encoding="utf-8"

TypeError: 'encoding' is an invalid keyword argument for this function


I guess limits of compound values to categorize positive, negative and neutral should be like ``compound`` score >=0.5, (``compound`` score < 0.5 and ``compound`` score > -0.5) and ``compound`` score <=-0.5. I don't find proper result with above mentioned limits could you please check on that.