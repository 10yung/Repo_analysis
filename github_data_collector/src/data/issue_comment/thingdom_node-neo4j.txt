
Are planning to bring any support async/await syntax? Saying this, neo4j queries are not concurrent but is there any alternate solution to that ctx.body gets to be populated by data. 

Ex: 

```javascript
const showAll = async function(ctx, next) {
    await db.cypher({query: .. }, (err, results) => ctx.body = results)
}
```

This example probably does not make much sense but his does: 

```javascript
const showAll = async function(ctx, next) {
    const results  = await db.cypher({query: .. });
    ctx.body = results;
}
```

EDIT: #164 has an alternative for this, wrapping db.cypher with Promise.promisify. But still an upgrade needed.
Resolves conflicts with default JS Error class. fixes #211
Hi, when I query using attribute filter, it'll work fine. For example:
```
const query = [
   'MATCH (user:User {email: {email}})',
   'RETURN user'
].join('\n')

const params = {
   email: 'user@example.com' // assume email exists
}
```

But when I passed inside `WHERE` statement, it doesn't seem to work:
```
const query = [
   'MATCH (user:User)',
   'WHERE email = {email}',
   'RETURN user'
].join('\n')

const params = {
   email: 'user@example.com' // assume email exists
}
```

I needed this because I need to create query to find node by id.
At the moment, my workaround is to concat directly to the query, which is not recommended:
```
const query = [
   'MATCH (user:User)',
   'WHERE id(user) = ' + id,
   'RETURN user'
].join('\n')
```

Just wondering is this behavior expected? Because I read the documentation this should be supported.
Refer: [http://neo4j.com/docs/developer-manual/current/cypher/syntax/parameters/](http://neo4j.com/docs/developer-manual/current/cypher/syntax/parameters/)

Hi,

I have been working with the REST API client interface for Neo4J. i am getting issue while fetching (or) inserting data to the neo4j through REST API client interface,
it causes problem in node_modules/neo4j/graphdatabase.js line 204 
for (i = _i = 0, _len = results.length; _i < _len; i = ++_i) {
....
}
It causes error as cannot read property length of undefined
Do u have any idea ?
I get this error after upgrading the Nodejs version from `v6.9.2` to `v7.0.1`

```
TypeError: Error.captureStackTrace is not a function
    at ClientError.Error [as constructor] (/Users/kde/Workspace/icservice/node_modules/neo4j/lib-new/errors.coffee:9:15)
    at new ClientError (/Users/kde/Workspace/icservice/node_modules/neo4j/lib-new/errors.js:81:48)
    at Function.__dirname.Error.Error._fromObject (/Users/kde/Workspace/icservice/node_modules/neo4j/lib-new/errors.coffee:95:13)
    at /Users/kde/Workspace/icservice/node_modules/neo4j/lib-new/GraphDatabase.coffee:332:29
    at Request._callback (/Users/kde/Workspace/icservice/node_modules/neo4j/lib-new/GraphDatabase.coffee:100:24)
    at Request.self.callback (/Users/kde/Workspace/icservice/node_modules/request/request.js:186:22)
    at emitTwo (events.js:106:13)
    at Request.emit (events.js:191:7)
    at Request.<anonymous> (/Users/kde/Workspace/icservice/node_modules/request/request.js:1081:10)
    at emitOne (events.js:96:13)
    at Request.emit (events.js:188:7)
    at IncomingMessage.<anonymous> (/Users/kde/Workspace/icservice/node_modules/request/request.js:1001:12)
    at IncomingMessage.g (events.js:292:16)
    at emitNone (events.js:91:20)
    at IncomingMessage.emit (events.js:185:7)
    at endReadableNT (_stream_readable.js:974:12)
```

It might be the V8 issue (bumped up version in Nodejs 7 to v8 5.4)

```
this.Error = (function(_super) {
    __extends(Error, _super);

    function Error(message, neo4j) {
      this.message = message != null ? message : 'Unknown error';
      this.neo4j = neo4j != null ? neo4j : {};
      this.name = 'neo4j.' + this.constructor.name;
      Error.captureStackTrace(this, this.constructor);
    }
...
```
I guess we should call the global one `global.Error.captureStackTrace(this, this.constructor);`
Here I've upgraded the dependencies and fix things broken in Neo4j 3.x.
I tried a sample code piece, executing in the same file as my mocha/chai calls, but placed before the describe/it sequences in mocha.  That returned a console.log that places as the first line in the callback.  But the pieces that were nested within mocha commands would not show the console.log statements from the callback.

I am using node 6.2 and Neo4j 3.0.4. 

sample code is below... mostly lifted straight off example page.

thanks.

```

db.cypher({
                    query: 'MATCH (u:User {email: {email}}) RETURN u',
                    params: {
                    email: 'alice@example.com', 
                    },
                    }, 
                    (err, results)=> {
                        console.log(' the only')
                        log.info(' my thought')
                    if (err) throw err;
                    var result = results[0];
                    if (!result) {
                        console.log('No user found.');
                    } else {
                        var user = result['u'];
                        console.log(JSON.stringify(user, null, 4));
                    }
                    }
                );
```

this patch enhances the library by allowing use of the ’graph’ format
the REST API support (passed in via the resultDataContents field).
please note I’ve added a test but am not clever enough to make it pass
