
I have started using CMake to manage my game project since seeing that DirectXTK now supports CMake, however I have noticed that DirectXTK does not use pre-compiled headers when generated using CMake, and is a bit slow to build.

I am happy to generate a PR if you're not up for it?

Merry Christmas Chuck!
There is now a [NuGet package](https://www.nuget.org/packages/Microsoft.XAudio2.Redist/) for using XAudio 2.9 down-level on Windows 7 Service Pack 1, Windows 8.0, and Windows 8.1. See [Microsoft Docs](https://aka.ms/XAudio2Redist) for details.

I should provide instructions and updates needed to use this configuration.
Can use PostProcess passthrough to do this for Feature Level 10.0 or better very easily.
VS 2015 supports ``alignas``, but does not support aligned new. VS 2017 in the 15.5 update added support for C++17 aligned new, which when present we could use instead of the ``AlignedNew.h`` helper.

See [this speclet](http://www.open-std.org/jtc1/sc22/wg21/docs/papers/2016/p0035r4.html)
The XINPUT / Windows.Gaming.Input vibration control is very basic. It would be useful to have some helper for common timed functions to provide a little of what was supported back in DirectInput effects.
* Add textures to simple rendering

* Multistream and instancing simple rendering

* SpriteBatch with 3D lighting, reflection, refraction using normal maps

* SpriteBatch with color-keying shader (emulate old-school colorkey textures)

* Simple shadows (drop, projected)

* Basics of deferred rendering

* Fullscreen exclusive swapchains

* Multimonitor rendering

* Split-screen rendering
I find your ContantBuffer class very useful for managing constant buffers in my game but as it's located in Src (implying it's internal use only?), I have to add that directory to my include paths.

I think it would be better in Inc, signalling that it can be freely used by all.
Is targeting framework version 4.5 ok?
This change marginally reduces efficiency while significantly improving packing performance. Generating a spritefont of 65k glyphs for the entire the Basic Multilingual Plane (BMP) could take as little as a couple minutes. The majority of time is now taken up by importing and writing to disk. The packing portion literally takes a second.