In `*BotAPI.MakeRequest`, ResponseParameters is populated in the error when present:

https://github.com/go-telegram-bot-api/telegram-bot-api/blob/aa124ef1e84ecc14654ad242f3cf3bd2b0d5956c/bot.go#L90-L96

This is not being done in `*BotAPI.UploadFile`:

https://github.com/go-telegram-bot-api/telegram-bot-api/blob/aa124ef1e84ecc14654ad242f3cf3bd2b0d5956c/bot.go#L228-L230

This commit makes `*BotAPI.UploadFile behave similarly`.
Added a field `max_connections` to the `WebhookInfo` struct, which is returned by the `getWebhookInfo` method.

Is there any possibility to send bot commans, using InlineKeyboard? For example, i want create something like below:
`tgbotapi.NewInlineKeyboardMarkup(
     tgbotapi.NewInlineKeyboardRow(
		tgbotapi.NewInlineKeyboardButtonData("4","/some_cmd"),		
    ),
)`

And when i press the button, i could be handle such update as bot command
`              
               if update.CallbackQuery.Message.IsCommand(){
                 //do something
              }
`
Is there any possibility?
Adds NewInlineQueryResultCachedSticker() and InlineQueryResultCachedSticker which are similar to to the other inline query responses, I guess this one was just missing for some reason. 
I think it's better to point out the `username` of `NewMessageToChannel` should be in the form of `@username`, and this could save some time for others :)
I cannot find this one, so it doesn't supported right now?
Good afternoon!
I need to know that an error occurred in the condition of the "GetUpdatesChan" function. Otherwise, when using a proxy, there is no way to determine if the current proxy is working or you need to change the proxy.

Tell me how to implement this. At the moment, the problem is here:
updates, err: = bot.GetUpdates (config) // there is no access to this error from my code.
if err! = nil {
log.Println (err)
log.Println ("Failed to get updates, retrying in 3 seconds ...")
time.Sleep (time.Second * 3)

continue
There are ParseMode in InlineQueryResultCached*, but not in InlineQueryResult
const (
	// APIEndpoint is the endpoint for all API methods,
	// with formatting for Sprintf.
	APIEndpoint = "https://api.telegram.org/telegramBot%s/%s"
	APIEndpoint2 = "https://api.telegram.org/bot%s/%s"
	// FileEndpoint is the endpoint for downloading a file from Telegram.
	FileEndpoint = "https://api.telegram.org/file/telegramBot%s/%s"
)
the APIEndpoint2 is new endpoint.
APIEndpoint Response.StatusCode =404
