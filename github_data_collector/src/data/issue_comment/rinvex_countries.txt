First of all, thanks for the great package.
It would be great to have the currency symbol included in the currency information you get with methods like "getCurrency".

I'm referencing [this line](https://github.com/rinvex/countries/blob/e3bef1d28578e04f8ae0fd328f1b648cfa17d6f6/src/Country.php#L281)

It should be `mb_strtolower` instead of `mb_strtoupper`
I want to add an Arabic translation name for all countries. Where is the right file to put it?
This popped up in production for us:

Some japanese users type their adresses using latin characters instead of katakana, and per the recommendations (https://www.post.japanpost.jp/int/use/writing/ems_en.html) such addressing should be reversed (ie the traditional "western" addressing system, ie name, followed by street, followed by zip and city etc).

It also gets quite confusing when westernized addresses are used since the JP format looks like this:
`ã€’{{postalcode}}\n{{region_short}}{{city}}{{street}}\n{{recipient}}\n{{country}}`
ie, no separator between region, city and street.

So maybe we need a jp-westernized.json file, with a format something along the lines of
`{{recipient}}\n{{street}}\n{{postalcode}}{{city}}\n{{region_short}}\n{{country}}`

As to how we would select that format instead of the official JP one I'm not sure. A helper function to analyze if the address contains mostly latin characters or not maybe? Or just a flag to pass (westernized=true)?

Any chance of implementing [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) codes instead of [ISO 639-2](https://en.wikipedia.org/wiki/ISO_639-2) codes?
PHP plays better with [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes) codes: http://php.net/manual/en/locale.getdisplaylanguage.php

At the moment I'm resorting to a helper class just to convert [ISO 639-2](https://en.wikipedia.org/wiki/ISO_639-2) to [ISO 639-1](https://en.wikipedia.org/wiki/List_of_ISO_639-1_codes).
```
$languages = [
    ['ab', 'abk'],
    ['aa', 'aar'],
    ['af', 'afr'],
    ['ak', 'aka'],
    ['sq', 'sqi'],
    ...
];
```

Some countries has multiple currencies, but mostly only one is used or at least there's a default currency, but this package returns the first currency regardless, which make it weird. 

We need to sort currencies and change the default behavior to return the official/default currency of the country, and if needed all other currencies will be returned optionally. Related issue #52
Currently all JSON files are compressed, which make it difficult to review PRs and check differences between revisions or even read source files humanly, it's compressed for the sake of size saving on production, but we can do better.

We'll convert all JSON files into well formatted source files, and will add command line tool to compile these files for production usage (optional).

```
.PHP Fatal error:  Class 'Rinvex\Country\CountryLoaderException' not found in E:\www\labs\shipment-tracking\vendor\rinvex\country\src\Loader.php on line 219
```
Version: 2.0.0

I know its has been fixed in v3;  because of my php version, i can only use v2; will you relase a fix version for v2?