Hi,
 I create a PR for adding the support of json output format for the 'status' command run from the TextWrapper utility extension.

Please review and accept if considered useful.
https://github.com/cakephp/phinx/pull/1695

Let me know any consideration.

Thanks.
With this simple PR we grant the TextWrapper status command the support for json output format
for ease of use.
Looking quickly at the official docs we can found on the beginning of the description this phrase:

>  It is preferred that you write your migrations using the Phinx PHP API, but raw SQL is also supported.

[Phynx Migrations](https://book.cakephp.org/phinx/0/en/migrations.html)

But if in my migration folder I put files containing SQL code, like:

```
20200101120000_create.sql
20200101120000_additional.sql
```

and then run 

`phynx migrate
`

I found in the database just being generating the table for the `phynx migration log `(empty) but none of the sql files are being executed. I also get a correct output from terminal but without any migration listed.

My configuration it's ok, either for db connection data and for folder paths.

What does exactly raw SQL support means and how to make it work? Thanks.
```php
$smallSerial = (new \Phinx\Db\Table\Column())->setName('id')
	->setType(\Phinx\Db\Adapter\AdapterInterface::PHINX_TYPE_SMALL_INTEGER)
	->setIdentity(TRUE);

$this->table('test', ['id' => FALSE, 'primary_key' => ['id']])
	->addColumn($smallSerial)
	->create();
```
The result table contains column ```id``` with type ```integer``` instead ```smallint```.
This is because of [this](https://github.com/cakephp/phinx/blob/master/src/Phinx/Db/Adapter/PostgresAdapter.php#L1132) code:
```php
$buffer[] = $column->getType() == 'biginteger' ? 'BIGSERIAL' : 'SERIAL';
```

Can any one fix this? 

I seem to be unable to use the external variables [as mentioned here](https://book.cakephp.org/phinx/0/en/configuration.html#external-variables)

When running `vendor/bin/phinx status` I get the connection error where the variables have not been replaced with values.
E.g. `There was a problem connecting to the database: SQLSTATE[HY000] [1045] Access denied for user '%%PHINX_DBUSER%%'@'localhost' (using password: YES)`

I'm using Docker with a separate database container.

When using the hardcoded values for the db connection in `phinx.yml` I am able to connect.
Fix #1690
There is an error in **SQLiteAdapter** that creates the columns as NULL despite having indicated the field as NOT NULL. _Currently, the only way to create a NOT NULL field is to specify a DEFAULT value for that column._

With this change, it is allowed to create a NOT NULL column without indicating its DEFAULT value.

In order to allow for backward compatibility, this change will cause SQLiteAdapter continue to create a column as NULL by default when it is not specified whether it is null or not.
Per the [docs](https://dev.mysql.com/doc/refman/8.0/en/spatial-type-overview.html), you can now do the following:
```
CREATE TABLE geom (
    p POINT SRID 0,
    g GEOMETRY NOT NULL SRID 4326
);
```
Where now those columns have a set SRID. This was not available prior to 8.0. 
The `getColumns` function for the PostgresAdapter does not handle geometric or geographic types very well, missing in capturing the defined shape, as well as set coordinate system. This is due to the fact that this information is not set in the `information_schema.columns` table, but rather Postgis defines two secondary tables `geometry_columns` and `geography_columns` tables. While cycling through each column, if the type is `geography` or `geometry`, query the above tables as appropriate (e.g. `SELECT * FROM public.geography_columns WHERE f_table_schema = %s AND f_table_name = %s`). 
Hello,

On some DBMS (like PostgreSQL) it is possible to have deferrable constraints.
This is useful and we use this feature for almost all of our Foreign Key constraints.

It seems that it is not possible to have this feature when using the "addForeignKey" function.

It there something that I missed or it is not implemented in Phinx?
If it is not implemented, is there any chance to have this feature supported in Phinx?