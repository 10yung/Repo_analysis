###### JerryScript revision
71d4e121

###### Build platform
Linux-4.15.0-72-generic-x86_64-with-Ubuntu-18.04-bionic

###### Build steps
```
./tools/build.py --clean --debug --compile-flag=-fsanitize=address \
--compile-flag=-m32 --compile-flag=-fno-omit-frame-pointer \
--compile-flag=-fno-common --compile-flag=-g \
--strip=off --system-allocator=on --logging=on \
--linker-flag=-fuse-ld=gold --error-messages=on --profile=es2015-subset
```

###### Test case
```javascript
function $({
    $: {
        [$.$]
    }
}) {}
```


###### Output
```text
ICE: Assertion '(literal_p->status_flags & ~(LEXER_FLAG_SOURCE_PTR | LEXER_FLAG_LATE_INIT)) == 0' failed at jerryscript/jerry-core/parser/js/js-parser.c(parser_compute_indicies):166.
Error: ERR_FAILED_INTERNAL_ASSERTION
```



###### Backtrace
```text
bt
#0  0xf7fd5079 in __kernel_vsyscall ()
#1  0xf77fc832 in raise () from /lib/i386-linux-gnu/libc.so.6
#2  0xf77fdcc1 in abort () from /lib/i386-linux-gnu/libc.so.6
#3  0x5657d197 in jerry_port_fatal (code=ERR_FAILED_INTERNAL_ASSERTION) at jerryscript/jerry-port/default/default-fatal.c:30
#4  0x566504cd in jerry_fatal (code=ERR_FAILED_INTERNAL_ASSERTION) at jerryscript/jerry-core/jrt/jrt-fatals.c:58
#5  0x5665050e in jerry_assert_fail (assertion=0x566e9340 "(literal_p->status_flags & ~(LEXER_FLAG_SOURCE_PTR | LEXER_FLAG_LATE_INIT)) == 0", file=0x566e9260 "jerryscript/jerry-core/parser/js/js-parser.c", function=0x566c4960 <__func__.5597.lto_priv.41> "parser_compute_indicies", line=166) at jerryscript/jerry-core/jrt/jrt-fatals.c:82
#6  0x5660385f in parser_compute_indicies (context_p=0xffffc490, ident_end=0xffffbe20, const_literal_end=0xffffbde0) at jerryscript/jerry-core/parser/js/js-parser.c:166
#7  0x56605161 in parser_post_processing (context_p=0xffffc490) at jerryscript/jerry-core/parser/js/js-parser.c:949
#8  0x5660e6b9 in parser_parse_function (context_p=0xffffc490, status_flags=6) at jerryscript/jerry-core/parser/js/js-parser.c:2416
#9  0x565b0242 in parser_parse_function_statement.lto_priv.223 (context_p=0xffffc490) at jerryscript/jerry-core/parser/js/js-parser-statm.c:719
#10 0x565701e5 in parser_parse_statements (context_p=0xffffc490) at jerryscript/jerry-core/parser/js/js-parser-statm.c:2774
#11 0x5660bcfe in parser_parse_source (arg_list_p=0x0, arg_list_size=0, source_p=0x56734560 <buffer.lto_priv> "function g ( { [ \"y\" ] : { [ Symbol .toPrimitive ] = 5 } } ) { } \n ", source_size=67, parse_opts=0, error_location_p=0xffffc6a0) at jerryscript/jerry-core/parser/js/js-parser.c:2116
#12 0x5660f341 in parser_parse_script (arg_list_p=0x0, arg_list_size=0, source_p=0x56734560 <buffer.lto_priv> "function g ( { [ \"y\" ] : { [ Symbol .toPrimitive ] = 5 } } ) { } \n ", source_size=67, parse_opts=0, bytecode_data_p=0xffffc760) at jerryscript/jerry-core/parser/js/js-parser.c:2639
#13 0x566a134c in jerry_parse (resource_name_p=0xffffcd7d "/home/reni/.fuzzinator_31942//jerryscript/picireny/63327936987741173392446431556505935214.js", resource_name_length=92, source_p=0x56734560 <buffer.lto_priv> "function g ( { [ \"y\" ] : { [ Symbol .toPrimitive ] = 5 } } ) { } \n ", source_size=67, parse_opts=0) at jerryscript/jerry-core/api/jerry.c:445
#14 0x5669dfc4 in main (argc=2, argv=0xffffcb04) at jerryscript/jerry-main/main-unix.c:741
```


<sup>Found by [Fuzzinator](http://fuzzinator.readthedocs.io/) with [grammarinator](https://github.com/renatahodovan/grammarinator). </sup>
Jerry version:

Rev: 71d4e121
Build command: tools/build.py --profile=es2015-subset ---error-messages ON

OS:
Mac OS 10.14.2

**Code sample:**
```
class Base
{
    constructor()
    {
    this.x = [0, 0];
    }

    sampeFunc()
    {
        this.x[0]++; // crash here
        return this.x;
    }
}

class Extended extends Base
{
    sampeFunc()
    {
        var s = super.sampeFunc(); 
        return s;  // ok if change to "return super.sampleFunc()"
    }
}
var s = new Extended();
s.sampeFunc(); // :( oops

```

**ER:**
No crash shouldn't appear.

**AR**
Crash:  _TypeError: Cannot read property '0' of undefined_

Comments:
This issue can be related to [this issue](https://github.com/jerryscript-project/jerryscript/issues/2671)
As far as I understand line "var s = super.sampleFunc()" should emit "CBC_EXT_SUPER_PROP_CALL". But it doesn't pass this condition "!LEXER_IS_BINARY_LVALUE_TOKEN (context_p->stack_top_uint8)" : js-parser-expr.c:1470
Only direct eval calls propagate the "new.target" information.
In any other eval cases the "new.target" invocation is a syntax error.

Added test cases also.
JerryScript-DCO-1.0-Signed-off-by: Adam Szilagyi aszilagy@inf.u-szeged.hu
JerryScript-DCO-1.0-Signed-off-by: Daniel Balla dballa@inf.u-szeged.hu
Added steps 6-8 from ECMA-262 v6, 22.2.2.1.1

JerryScript-DCO-1.0-Signed-off-by: Adam Szilagyi aszilagy@inf.u-szeged.hu

Zephyr 2.2 removed some deprecated compatibility headers, use the new
location.

JerryScript-DCO-1.0-Signed-off-by: Paul Sokolovsky paul.sokolovsky@linaro.org

###### JerryScript revision
51efba40


###### Build platform
Linux-4.15.0-62-generic-x86_64-with-Ubuntu-18.04-bionic


###### Build steps
```
./tools/build.py --clean --debug --compile-flag=-fsanitize=address \
--compile-flag=-m32 --compile-flag=-fno-omit-frame-pointer \
--compile-flag=-fno-common --compile-flag=-g \
--strip=off --system-allocator=on --logging=on \
--linker-flag=-fuse-ld=gold --error-messages=on --profile=es2015-subset
```

###### Test case
```javascript
function i($, b = (eval("var x"))) {
    function x() {}
    eval()
}
i()
```


###### Output
```text
ICE: Assertion 'ecma_find_named_property (frame_ctx_p->lex_env_p, name_p) == NULL' failed at jerryscript/jerry-core/vm/vm.c(vm_init_loop):996.
Error: ERR_FAILED_INTERNAL_ASSERTION
```


###### Backtrace
```text
bt
#0  0xf7fd5079 in __kernel_vsyscall ()
#1  0xf77fc832 in raise () from /lib/i386-linux-gnu/libc.so.6
#2  0xf77fdcc1 in abort () from /lib/i386-linux-gnu/libc.so.6
#3  0x5657b5c9 in jerry_port_fatal (code=ERR_FAILED_INTERNAL_ASSERTION) at jerryscript/jerry-port/default/default-fatal.c:30
#4  0x566458b6 in jerry_fatal (code=ERR_FAILED_INTERNAL_ASSERTION) at jerryscript/jerry-core/jrt/jrt-fatals.c:58
#5  0x566458f7 in jerry_assert_fail (assertion=0x566d2e40 "ecma_find_named_property (frame_ctx_p->lex_env_p, name_p) == NULL", file=0x566d2c80 "jerryscript/jerry-core/vm/vm.c", function=0x566b5900 <__func__.6352.lto_priv.448> "vm_init_loop", line=996) at jerryscript/jerry-core/jrt/jrt-fatals.c:82
#6  0x565d108d in vm_init_loop (frame_ctx_p=0xffffc470) at jerryscript/jerry-core/vm/vm.c:996
#7  0x565d42f8 in vm_loop (frame_ctx_p=0xffffc470) at jerryscript/jerry-core/vm/vm.c:1435
#8  0x565e3290 in vm_execute (frame_ctx_p=0xffffc470) at jerryscript/jerry-core/vm/vm.c:4079
#9  0x565e3910 in vm_run (bytecode_header_p=0xf4f031d0, this_binding_value=4126149459, lex_env_p=0xf5d00570, arg_list_p=0xffffc700, arg_list_len=0) at jerryscript/jerry-core/vm/vm.c:4208
#10 0x5665ef06 in ecma_op_function_call (func_obj_p=0xf5f00820, this_arg_value=72, arguments_list_p=0xffffc700, arguments_list_len=0) at jerryscript/jerry-core/ecma/operations/ecma-function-object.c:854
#11 0x565cfe1f in opfunc_call (frame_ctx_p=0xffffc6d0) at jerryscript/jerry-core/vm/vm.c:699
#12 0x565e32f4 in vm_execute (frame_ctx_p=0xffffc6d0) at jerryscript/jerry-core/vm/vm.c:4085
#13 0x565e3910 in vm_run (bytecode_header_p=0xf5300e10, this_binding_value=4126149459, lex_env_p=0xf5d007b0, arg_list_p=0x0, arg_list_len=0) at jerryscript/jerry-core/vm/vm.c:4208
#14 0x5662cea4 in vm_run_global (bytecode_p=0xf5300e10) at jerryscript/jerry-core/vm/vm.c:286
#15 0x56693b06 in jerry_run (func_val=4126148691) at jerryscript/jerry-core/api/jerry.c:595
#16 0x56690273 in main (argc=2, argv=0xffffcb14) at jerryscript/jerry-main/main-unix.c:740
```


<sup>Found by [Fuzzinator](http://fuzzinator.readthedocs.io/) with [grammarinator](https://github.com/renatahodovan/grammarinator). </sup>
Strict mode functions are not allowed to access property `arguments`. However, when running this testcase blow, the output is  `[object Object] `.

###### JerryScript revision
[996bf76](https://github.com/jerryscript-project/jerryscript/commit/996bf76f5956c65342c1726d3f629fbea41320ab)

###### Build platform
    Ubuntu 16.04.6 LTS (Linux 4.15.0-55-generic x86_64)

###### Build steps
    python tools/build.py --clean --debug --logging=on --line-info=on --error-messages=on --cpointer-32bit=on --mem-heap=1572864 --profile=es2015-subset

###### Test case
```
var NISLFuzzingFunc = function() {
    print(Object.getOwnPropertyDescriptor(new Function("'use strict';"), "arguments"));
};
NISLFuzzingFunc();
```

###### Execution steps
    build/bin/jerry testcase.js

###### Output
    [object Object]

###### Expected behavior
    undefined
Changes:
- Import tests with actual expectations from https://github.com/kangax/compat-table
- Add --kangax-tests option to tools/run-tests.py test runner
- Run Kangax tests on Travis CI

JerryScript-DCO-1.0-Signed-off-by: Csaba Osztrogon√°c oszi@inf.u-szeged.hu
