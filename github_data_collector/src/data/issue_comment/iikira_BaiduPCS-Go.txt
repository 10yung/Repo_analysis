目前百度对第三方客户端进行了限速。对于baidupcs-go ，即使是开了SVIP，一样没速度，报错。
建议开了SVIP的，直接把问题反馈给百度。百度网页版右上角有一个意见反馈按钮，点击进入，写下意见和要求，填好邮箱，发送给他们。一般第二天就会有反馈，但短期内基本不会有结果，需要持续不断反映。

这是我最近一次反馈：
我是超级用户，用linux下第三方客户端，原来下载一直没问题，最近下载被限速了，应该是被你们公司限速了。我想知道怎么解决以及什么时候解决？
跟你们公司网盘管理人员和技术人员反映一下，了解一下。这种情况怎么解决，总得给个办法，不能一封了之。 

这是他们的答复：
您好，百度网盘正不懈努力优化产品，请多给我们工程师gg们一点时间，一定会让您享受更快速的使用体验，感谢您对百度网盘的支持！ 


下载文件错误, 下载单个文件: 遇到错误, 远端服务器返回错误, 代码: 31626, 消息: user is not authorized, hitcode:122

./BaiduPCS-Go config set -enable_https="true" 和 ./BaiduPCS-Go config set -user_agent="" 
都没有效果。求大佬指导
狠心购买了一年的SVIP，平时需要在vps上使用，但是发现虽然开通了SVIP在这个工具上使用，依旧速度非常慢，有时候还报
“遇到错误, 远端服务器返回错误, 代码: 31326, 消息: user is not authorized, hitcode:117,”
的错误。

基本上不能用
我用 tree 命令输出整个目录树时，遇到了目录递归无限深入的情况。经过排查，我发现目录名是 '\u3000'（全角空格）时可以稳定复现，进入这个目录之后列出的内容是它的父目录内容，所以会导致无限递归。

我没有测试其他特殊字符是否会导致相同的问题。

虽然这是一个比较特殊的边界情况，但还是希望可以修复。

我的文件比较多，获取整个目录树需要跑很多个小时（至今还没有完整跑完过一次），每次发现无限递归时，我都要找到导致问题的目录并且重命名掉，然后重新运行 tree 命令，现在重试了几次还是没有处理完所有包含特殊字符的目录。
我在尝试用 tree 命令列出网盘所有文件的目录树，然后自己写程序处理。
但是在 tree 命令的执行过程中，偶尔会出现网络错误，错误信息类似：
```
获取目录下的文件列表: 网络错误, Get https://pcs.baidu.com/rest/2.0/pcs/file?app_id=266719&by=name&limit=0-2147483647&method=list&order=asc&path=这里删去了路径: read tcp 192.168.1.100:37624->140.249.34.53:443: read: connection reset by peer
```
也有些错误是 `net/http: timeout awaiting response headers`
这导致了在输出的目录树中，出错的目录内容为空。
我的网络环境还算稳定，但平均列出大约 50000 个文件就会出现一个上述错误。出错后手工去补全目录内容非常不方便。
我希望在发生上述错误的时候，可以自动重试，直到成功获取目录内容。

另外，我希望 tree 命令可以提供选项，在输出中包含文件的元信息，例如文件大小、修改时间等。输出格式可以是每个文件一行，包含文件大小（字节数）、修改时间、文件路径，这样方便自己写程序进行处理。我知道 export 命令可以导出文件大小（仍然没有修改时间），但 export 命令似乎需要对每个文件都发一个请求获取（是这样吗？），所以非常慢，无法用于列出网盘所有文件。
BaiduPCS-Go meta 显示md5
本地执行md5sum
1.两者不一致，
2.远程下载到本地，检查MD5和源文件又是相同的？？
为什么远程会不一致 怎么解

怎么知道上传文件完整？
下载文件时报错：x509: failed to load system roots and no roots provided
错误代码: 50035, 消息: 系统繁忙，请稍候再试(50035)
Linux小白一个，想在openwrt上装来挂机，把存在网盘上的东西拿回来，但是运行后发现出现如下提示信息，不知是什么原因，以及怎么解决，希望得到帮助，谢谢！！

fatal error: runtime: cannot reserve arena virtual address space
runtime: panic before malloc heap initialized

runtime stack:
runtime.throw(0x50dbd6, 0x33)
        /usr/local/go1.10.8/src/runtime/panic.go:616 +0x60 fp=0xbeb4abcc sp=0xbeb4abc0 pc=0x3b510
runtime.mallocinit()
       /usr/local/go1.10.8/src/runtime/malloc.go:360 +0x2fc fp=0xbeb4ac10 sp=0xbeb4abcc pc=0x1f7c0
runtime.schedinit()
        /usr/local/go1.10.8/src/runtime/proc.go:490 +0x58 fp=0xbeb4ac40 sp=0xbeb4ac10 pc=0x3dcf0
runtime.rt0_go(0xbeb4ad97, 0x0, 0xbeb4adac, 0xbeb4adbe, 0xbeb4add3, 0xbeb4addf, 0xbeb4adff, 0xbeb4ae13, 0xbeb4ae1d, 0xbeb4ae34, ...)
        /usr/local/go1.10.8/src/runtime/asm_arm.s:159 +0x7c fp=0xbeb4ac80 sp=0xbeb4ac40 pc=0x63c78
version:
`3.6.1`
command:
`fixmd5 "/2016/*.*"`
