hi,

I want add a special directive to input.
**sample:**
```
<input AutoSizeInput 
       [includeBorders]="false"
       [includePlaceholder]="sec"
       (keyup)="onKeyup($event.target)">
```

**above attributes** i want add to the
  ```
<div class="ng-input">
      <input role="combobox" type="text">
   </div>
```

https://stackblitz.com/edit/angular-nbkvfs edit in this stackblitz link
how i can do it.. please help me..
There is a lot of templates for multiple aspects but I found nothing to customize the color and look of the group header.
**Describe the bug**
Assume you've created a page with the ng-select component that has **[addTag]** option. When you render a page using angular universal, type new tag and press enter or click on _add item_, nothing happens. The new tag is not created.

If you run the same page with **ng serve**, it works perfectly.  

**To Reproduce** 
1. Configure angular universal
2. Add simple ng-select component with  [addTag] option to page
3. Build & run ssr
4. type new tag 
5. click on add item or press enter

**Expected behavior**
New tag should be created on press enter or on click add item in angular universal

**Screenshots**

demo of a problem with angular universal
https://www.loom.com/share/78a767317e1345079909811a0e790a79

demo of working perfectly with ng serve:
https://www.loom.com/share/b673bc126b704445b3d1fae592b40976


**Desktop (please complete the following information):**
 - OS: Windows 10
 - Browser chrome 
 - Version 79

I am using **v3.7.1**

Issue: On mobile devices, if a selection is cleared and new selection is done then the selected option isn't visible. This problem doesn't occur while doing responsive testing in Chrome.

The screen recording of the ng-select website is available [here](https://drive.google.com/file/d/1stFyWIywRu-oAfM8Vyuo4qEDGLXXFdOB/view?usp=sharing).

Possible Reason: The option statys invisble due to `visibility:hidden` on `.ng-select.ng-select-single.ng-select-filtered .ng-select-container .ng-value-container .ng-value` classes when inspected.

Workaround and it's issue: I tried setting `visibility:visible`, which made it work but then the pre-selected option and new search is overlapping.
Hello,
We are using ng-select dropdown, so when label size is big it get cut, it does not wrap automatically, below images is shown where label gets cutted.

![Capture](https://user-images.githubusercontent.com/59446200/71809894-0d539d80-3097-11ea-8554-d188ac898f59.PNG)

https://ng-select.github.io/ng-select#/data-sources

If you keep the cursor in the middle of the text and start typing, the cursor moves to the end.
It doesn't happen on other browsers though. 
provide some solutions please.

@varnastadeus Hi! I created Issue https://github.com/ng-select/ng-select/issues/1455 some time ago. And you suggested solution, but it doesn't work. Using `[keyDownFn]` improves ng-select's behaviour but doesn't solve issue completely. The issue is infinite scroll navigation. I think it should be configurable. When I code `[keyDownFn]`  handler it **work only when mouse cursor is inside of dropdown**. But **when I use keyboard only navigation - mark disapering on the last item and then put to the first item**.  So I suggested PR to solve this problem. But I think it won't be merged or accepted. I tried to hack ng-select but I have no clue what to do with private method (how to replace it). Unfortunately project I work with hardly depends on ng-select, so the only way to solve the problem is making corporative fork of ng-select :( . Thanks for your attention.
**Describe the bug**
when you focus the dropdown in material theme in rtl direction, the floating indent inside more then ltr.

**Describe the bug**
For the calculation of **optionHeight**, `clientHeight` is used in `ng-dropdown-panel.component.ts`:

```typescript
return Promise.resolve().then(() => {
    const option = this._dropdown.querySelector(`#${first.htmlId}`);

    const optionHeight = option.clientHeight; // <-- here

    this._virtualPadding.style.height = `${optionHeight * this.itemsLength}px`;
    const panelHeight = this._scrollablePanel.clientHeight;
    this._panelService.setDimensions(optionHeight, panelHeight);

    return this._panelService.dimensions;
});
```
The Problem with `clientHeight` is, it ignores the border of the option elements. If I add a `border-bottom` style and also use `virtualScroll` and filter then the item list, so that only one element remains, the height of `<div class="total-padding">` is then too small by the border width from the `<div class="ng-option">` element.

A possible solution could be to use `offsetHeight` instead of `clientHeight`.

**Expected behavior**
`optionHeight` includes also border width.

Hi there,

I really love ng-select but I have one problem to set the value of the input element. I'm searching on a list (list of objects) of people like shown in the code, which works perfectly.

Doing the search is via a typeahead that is stored in listinput$ which is initialized via

	this.listinput$ = new BehaviorSubject(this.fullname);

The expected behaviour is that ng-select is doing the REST-request and when an object is found that it is selected. Works great!

If the search fails or it returns an empty result I'd like to see the original input value still in the ng-select input field. But unfortunately the field is cleared. How can I prevent this?

	<ng-select [items]="list$ | async"
		bindLabel="fullname"
		[placeholder]="placeholder"
		[loading]="listLoading"
		[typeahead]="listinput$"
		[virtualScroll]="true"
		[(ngModel)]="item"
		[disabled]="disabled"
		appendTo="body"
		(change)="selectSearch($event)"
		(focus)="onFocus($event)"
		(clear)="clear($event)"
	>

	this.list$ = concat(
		of([]), // default items
		this.listinput$.pipe(
			debounceTime(200),
			distinctUntilChanged(),
			tap(() => this.listLoading = true),
			switchMap(term => this.searchService.search(term, this.gender, this.nationality)
						 .pipe(
					  		tap(response => console.log(response) ),
					  		catchError(() => of([])), // empty list on error
					  		tap(() => this.listLoading = false)
						)
			)
		)
	);
