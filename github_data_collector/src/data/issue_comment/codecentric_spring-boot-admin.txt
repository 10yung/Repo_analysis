<!--
Thanks for raising a Spring Boot Admin issue. Please take the time to review the following
categories as some of them do not apply here.

** Question **
STOP!! Please ask questions about how to use something, or to understand why something isn't
working as you expect it to, on Stack Overflow using the spring-boot-admin tag.

** Enhancement **
Please start by describing the problem that you are trying to solve. There may already
be a solution, or there may be a way to solve it that you hadn't considered.
-->

Hi all,

though one of my issues might not be a bug i am hoping to find a solution here.
I am on SBA 2.2.1, non-reactive server.
I have ~40 caches in my spring boot app.
I have two issues:

1) When on page insights>details where all the nice graphs are drawn there are also ~40 graphs for my caches. Because of that the app gets literally overwhelmed with requests for current hit/miss numbers. I see a huge cpu usage when on that details page. Otherwise not. Can i increase the interval those request are done ?
2) All requests for cache size (.../instances/.../actuator/metrics/cache.size?tag=name:...) get a 404 from SBA server as i can see in browser console.

Thanx alot, Cheers, JJ
spring-boot: 2.2.2.RELEASE
spring-boot-admin: 2.2.0-SNAPSHOT

I try to add my own custom-view ("cc")
I followed https://github.com/codecentric/spring-boot-admin/tree/master/spring-boot-admin-samples/spring-boot-admin-sample-custom-ui

Loading seems to work
2020-01-06 14:37:02.072  INFO 6588 --- [           main] b.a.s.u.c.AdminServerUiAutoConfiguration : Loaded Spring Boot Admin UI Extension: UiExtension(resourcePath=cc/js/cc.ca1ba42b.js, resourceLocation=file:target/vue-dist/cc/js/cc.ca1ba42b.js)
2020-01-06 14:37:02.073  INFO 6588 --- [           main] b.a.s.u.c.AdminServerUiAutoConfiguration : Loaded Spring Boot Admin UI Extension: UiExtension(resourcePath=cc/css/cc.4992ea56.css, resourceLocation=file:target/vue-dist/cc/css/cc.4992ea56.css)

But then the real ui is not showing the new views

I see only 2 errors in chrome

Refused to apply style from 'http://localhost:8080/cc/css/cc.4992ea56.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.
details:1 Refused to execute script from 'http://localhost:8080/cc/js/cc.ca1ba42b.js' because its MIME type ('text/html') is not executable, and strict MIME type checking is enabled.
A bad HTTP response code (404) was received when fetching the script.

![image](https://user-images.githubusercontent.com/548214/71821711-20646e80-3093-11ea-936b-59ea91e1961c.png)

```
2020-01-03 04:51:44.539  WARN 17485 --- [     parallel-3] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

2020-01-03 05:20:14.543  WARN 17485 --- [     parallel-2] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

2020-01-03 05:48:44.547  WARN 17485 --- [     parallel-1] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

2020-01-03 06:17:14.568  WARN 17485 --- [     parallel-4] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

2020-01-03 06:45:44.576  WARN 17485 --- [     parallel-3] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

2020-01-03 07:14:14.587  WARN 17485 --- [     parallel-2] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

2020-01-03 07:42:44.597  WARN 17485 --- [     parallel-1] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

2020-01-03 08:11:14.624  WARN 17485 --- [     parallel-4] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)

2020-01-03 08:39:44.644  WARN 17485 --- [     parallel-3] d.c.b.a.server.services.IntervalCheck    : Unexpected error in status-check

reactor.core.Exceptions$OverflowException: Could not emit tick 56 due to lack of requests (interval doesn't support small downstream requests that replenish slower than the ticks)
        at reactor.core.Exceptions.failWithOverflow(Exceptions.java:231)
        at reactor.core.publisher.FluxInterval$IntervalRunnable.run(FluxInterval.java:130)
        at reactor.core.scheduler.PeriodicWorkerTask.call(PeriodicWorkerTask.java:59)
        at reactor.core.scheduler.PeriodicWorkerTask.run(PeriodicWorkerTask.java:73)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.runAndReset(FutureTask.java:308)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$301(ScheduledThreadPoolExecutor.java:180)
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:294)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
        at java.lang.Thread.run(Thread.java:748)
```
We have custom actuator endpoints providing more information about caches, schedules,... Using UI extensions, we are able to add new views for these. 

However with custom extensions, we end up having them in the menu twice (original and custom one). Is there a way to remove or replace original one (during view installation), so that only one shows up?
To be able to select one of the "preferred" network interface which InetAddress doesn't allow.

Add the support of spring InetUtils to levrage the 
"spring.cloud.inetutils.[...]" configurations in DefaultApplicationFactory.getLocalHost()

```
private final Optional<org.springframework.cloud.commons.util.InetUtils> inetUtils

protected InetAddress getLocalHost() {
  try {
    inetUtils.map(InetUtils::findFirstNonLoopbackAddress).orElse(InetAddress.getLocalHost());
    }
    catch (final UnknownHostException ex) {
      throw new IllegalArgumentException(ex.getMessage(), ex);
    }
}
```

I'm curious about who is using the Spring Boot Admin. Would be nice if you make a short comment in this issue with your company name (and a approximate numbers of services you monitor)
Using Spring Boot Admin 2.1.6 with a Spring Boot 2 applications (Spring Cloud Greenwich; Spring Boot 2.1.x). On one of my application the Http Traces gives me only the following error:  Fetching traces failed. Cannot read property 'map' of undefined

Developer console shows:
Fetching traces failed: TypeError: Cannot read property 'map' of undefined
    at o.<anonymous> (index.vue:218)
    at M (runtime.js:62)
    at Generator._invoke (runtime.js:288)
    at Generator.t.<computed> [as next] (runtime.js:114)
    at a (asyncToGenerator.js:5)
    at s (asyncToGenerator.js:27)

Unfortunately, JavaScript style web apps are incomprehensible to me, so I am not able to debug much more myself. 

Not sure if it is related, but on the same application I also get the following errors, althought this is for sure a Spring Boot 2 application.
* Metrics are not supported for Spring Boot 1.x applications.
* Mappings are not supported for Spring Boot 1.x applications.
<!--
Thanks for raising a Spring Boot Admin issue. Please take the time to review the following
categories as some of them do not apply here.

** Question **
STOP!! Please ask questions about how to use something, or to understand why something isn't
working as you expect it to, on Stack Overflow using the spring-boot-admin tag.

** Enhancement **
Please start by describing the problem that you are trying to solve. There may already
be a solution, or there may be a way to solve it that you hadn't considered.
-->
I want to get the length of response and show in Spring Admin . But  Why the Length tab don't show data? 
![67256824-365e8c00-f4b3-11e9-9f1c-f9e26c112e7d](https://user-images.githubusercontent.com/32038840/67256968-e3d19f80-f4b3-11e9-9b24-bb55f0e9833e.png)

My config: 
```
management.endpoints.web.exposure.include=*
management.security.enabled = false
endpoints.health.sensitive = false
management.endpoint.health.show-details=always
management.health.consul.enabled=false

spring.boot.admin.client.username=***
spring.boot.admin.client.password=***
```