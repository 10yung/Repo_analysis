
How can I produce an expression such as `x.y(z).w(q)`? It seems to be missing: https://github.com/JunSuzukiJapan/macro-lisp/blob/5359b385c793d63ec6c83337f50de3f8b60c008b/src/lib.rs#L363-L365
There is almost no documentation.
Some assumptions:
-The lispcode gets expanded to rust code without runtime overhead.
-All rust functions can be called as lisp functions.
-All rust macros can be called from lisp, but without the `!`.
-Other rust special forms like threads and methods get called as in rust, and don't have corresponding lisp-macros.
-There are some lisp-macros which espand to rust special forms (defun, defvar, defconstant).
-Functions defined in lisp can be used in rust code.
Some other questions:
-are there more lisp macros (maybe also defmacro)?
-if there is defmacro, can these macros be used in rust code?
-can all rust code be written in this lisp-macro and how?

It would be nice, if you add my correct assumptions and the answers to my questions to the readme.