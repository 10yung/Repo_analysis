Hello

This pull request improves the build script of this project.
Specifically, it adds missing Make dependencies so that the targets of the project are re-generated correctly whenever there are updates to any of the dependent source files.

In this way, the project is incrementally built.

Note that this fix follows the best practices for tracking dependencies automatically (through gcc -MD)

For more details, see here.
https://www.gnu.org/software/make/manual/html_node/Automatic-Prerequisites.html
What do I need to do for him to run on IOS? pleaseÔºÅ
Are these headers supposed to be used? If so could we add them to the CMakeLists.txt
https://github.com/google/zopfli/blob/ef109ddf164911cf1e5612e90b4a619839a1e3ca/src/zopfli/deflate.c#L692


Value stored to 'detect_block_size' during its initialization is never read
Enables automatic builds of ZopfliPNG for x86-64 Windows.

AppVeyor only needs to be enabled on https://ci.appveyor.com/project/google/zopfli
Adds continuous integration with Travis. Builds both zopfli and zopflipng with both gcc and clang.
Is anyone aware of a golang binding for the library? I tried the pure golang version (go-zopfli) but it is significantly slower and slightly less effective. 

In some textures for 3d graphics it doesn't matter what some channels are.
For example red doesn't matter for [metallicRoughnessTexture](https://github.com/KhronosGroup/glTF/blob/master/specification/2.0/README.md#pbrmetallicroughnessmetallicroughnesstexture) in gltf.
Would it help for better compression if you could modify values in those channels?
When compiling zopfli for Win64 using MINGW-W64, I got a warning about invalid typecasting and a malloc value being out of potential range.  I fixed this issue with a patch I'm proving.  Please feel free to use it.  The thing is that in Win64, malloc takes an 8-byte unsigned value while in Win32, it takes a 4-byte value

.  Int is always 4 bytes even in  Win64.  That effects OptimizeHuffmanForRle mostly.

[win32-fixes.patch.txt](https://github.com/google/zopfli/files/2305976/win32-fixes.patch.txt)

This is 360 CodeSafe Team, we found a unused value in `zopfli`. See https://github.com/google/zopfli/blob/ae43a8b73827577c4b19b005b6eed81f5cf9bbac/src/zopfli/deflate.c#L692, the value assigned to `detect_block_size` seeme unused and it will be overwrite at https://github.com/google/zopfli/blob/master/src/zopfli/deflate.c#L729.

Since I'm unfamiliar with `zopfli`, please forgive me if there is anything wrong with my description.

Qihoo360 CodeSafe Team