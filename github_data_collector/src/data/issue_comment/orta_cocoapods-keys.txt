### Command

```
/usr/local/bin/pod install
```

### Report

* What did you do?
Every time I run `pod install` I get this error
* What did you expect to happen?
Generate Objective-C classes

### Stack

```
   CocoaPods : 1.8.4
        Ruby : ruby 2.6.3p62 (2019-04-16 revision 67580) [universal.x86_64-darwin19]
    RubyGems : 3.0.3
        Host : Mac OS X 10.15.2 (19C57)
       Xcode : 11.2.1 (11B500)
         Git : git version 2.21.0 (Apple Git-122.2)
Ruby lib dir : /System/Library/Frameworks/Ruby.framework/Versions/2.6/usr/lib
Repositories : master - git - https://github.com/CocoaPods/Specs.git @ b1226b5c2c7cd5253d94edb74495a7a5b851d924
               Pods-Specs-Master - git - git@github.com:mvg06/Pods-Specs-Master.git @ 4d54e0963dbe56a8686f41cc2684f422418343e7
               trunk - CDN - https://cdn.cocoapods.org/
```

### Plugins

```
cocoapods-deintegrate : 1.0.4
cocoapods-keys        : 2.1.0
cocoapods-plugins     : 1.0.0
cocoapods-search      : 1.0.0
cocoapods-stats       : 1.1.0
cocoapods-trunk       : 1.4.1
cocoapods-try         : 1.1.0
```

### Podfile

```ruby
# Uncomment the next line to define a global platform for your project
platform :ios, '11.0'

target 'WisePlatform' do
  # Comment the next line if you don't want to use dynamic frameworks
  use_frameworks!

  # Pods for WisePlatform
  pod 'SwiftLint'
  pod 'AWSCore', '~> 2.12.0'
  pod 'AWSMobileClient', '~> 2.12.0'  

  target 'WisePlatformTests' do
    inherit! :search_paths
    # Pods for testing
  end

  target 'WisePlatformUITests' do
    inherit! :search_paths
    # Pods for testing
  end

end

plugin 'cocoapods-keys', {
  :project => 'WisePlatform',
  :keys => [
    'CognitoPoolIdDev',
    'CognitoAppClientIdDev',
    'CognitoRegionDev'
  ]}
```

### Error

```
NoMethodError - undefined method `upcase' for nil:NilClass
Did you mean?  case
/Library/Ruby/Gems/2.6.0/gems/cocoapods-keys-2.1.0/lib/keyring.rb:22:in `block in code_name'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-keys-2.1.0/lib/keyring.rb:22:in `map'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-keys-2.1.0/lib/keyring.rb:22:in `code_name'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-keys-2.1.0/lib/key_master.rb:13:in `initialize'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-keys-2.1.0/lib/plugin.rb:39:in `new'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-keys-2.1.0/lib/plugin.rb:39:in `setup'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-keys-2.1.0/lib/plugin.rb:11:in `block in singleton class'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/hooks_manager.rb:122:in `block (3 levels) in run'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/user_interface.rb:145:in `message'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/hooks_manager.rb:116:in `block (2 levels) in run'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/hooks_manager.rb:115:in `each'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/hooks_manager.rb:115:in `block in run'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/user_interface.rb:145:in `message'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/hooks_manager.rb:114:in `run'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/installer.rb:599:in `run_plugins_pre_install_hooks'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/installer.rb:219:in `block in prepare'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/user_interface.rb:145:in `message'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/installer.rb:215:in `prepare'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/installer.rb:155:in `install!'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/command/install.rb:52:in `run'
/Library/Ruby/Gems/2.6.0/gems/claide-1.0.3/lib/claide/command.rb:334:in `run'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/lib/cocoapods/command.rb:52:in `run'
/Library/Ruby/Gems/2.6.0/gems/cocoapods-1.8.4/bin/pod:55:in `<top (required)>'
/usr/local/bin/pod:23:in `load'
/usr/local/bin/pod:23:in `<main>'
```
When removing keys from the Podfile, a runtimeerror has occured.

### Command

```
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/bin/pod update
```

### Report

* What did you do?
  - Remove keys from Podfile
* What did you expect to happen?
  - Updated with the key being deleted
* What happened instead?
  - RuntimeError - A key/value pair in the application keychain is nil.

### Stack

```
   CocoaPods : 1.6.1
        Ruby : ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin18]
    RubyGems : 2.7.6
        Host : Mac OS X 10.14.4 (18E226)
       Xcode : 10.0 (10A255)
         Git : git version 2.11.0
Ruby lib dir : /Users/dev/.rbenv/versions/2.5.1/lib
Repositories : master - https://github.com/CocoaPods/Specs.git @ 2deaac58ebf43e68153f3bc2bc0b5b629d275cf5
```

### Plugins

```
cocoapods-deintegrate : 1.0.4
cocoapods-keys        : 2.1.0
cocoapods-plugins     : 1.0.0
cocoapods-search      : 1.0.0
cocoapods-stats       : 1.1.0
cocoapods-trunk       : 1.3.1
cocoapods-try         : 1.1.0
```

### Podfile

```ruby
source 'https://github.com/CocoaPods/Specs.git'

platform :ios, '9.0'
swift_version = '3.0'

def pods
    pod 'AcknowList', '1.2'
    pod 'AdGeneration', '2.13.0'
    pod 'Alamofire', '4.5.1'
    pod 'AppsFlyerFramework', '4.8.9'
    pod 'Compass', '4.0.0'
    pod 'Crashlytics', '3.12.0'
    pod 'Fabric', '1.9.0'
    pod 'Firebase', '5.20.1'
    pod 'Firebase/AdMob'
    pod 'Firebase/Auth'
    pod 'Firebase/DynamicLinks'
    pod 'Firebase/Messaging'
    pod 'Firebase/RemoteConfig'
    pod 'GoogleAnalytics', '3.17.0'
    pod 'GoogleIDFASupport'
    pod 'GoogleTagManager', '~>7.1.1'
    pod 'RealmSwift', '2.10.2'
    pod 'RxSwift', '3.6.1'
    pod 'SDWebImage', '4.4.4'
    pod 'SwiftyUserDefaults', '3.0.0'
    pod 'Unbox', '2.5.0'
end

def testing_pods
    pod 'Nimble', '7.0.2'
    pod 'Quick', '1.2.0'
end

target 'project' do
    use_frameworks!

    pods
    pod 'FBAudienceNetwork'
    pod 'GoogleMobileAdsMediationFacebook', '5.1.0.0'
end

target 'projectTests' do
    use_frameworks!

    pods
    testing_pods
end

post_install do |installer|
    installer.pods_project.build_configurations.each do |config|
        config.build_settings['PROVISIONING_PROFILE_SPECIFIER'] = ''
    end

    installer.pods_project.targets.each do |target|
        target.build_configurations.each do |config|
            config.build_settings['SWIFT_VERSION'] = '3.0'
        end
    end
end

plugin 'cocoapods-keys', {
    :project => "project",
    :keys => [
        "AppsFlyerDevKey",
        "AppleAppID",
        "Debug_GoogleAnalyticsTrackingID",
        "Release_GoogleAnalyticsTrackingID",
        "Debug_APIKey",
        "Release_APIKey",
        "Debug_AdMobNativeAdUnitID",
    ]
}
```

### Error

```
RuntimeError - A key/value pair in the application keychain is nil.
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-keys-2.1.0/lib/key_master.rb:75:in `verify_keychain_integrity'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-keys-2.1.0/lib/key_master.rb:28:in `generate_data'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-keys-2.1.0/lib/key_master.rb:20:in `initialize'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-keys-2.1.0/lib/plugin.rb:39:in `new'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-keys-2.1.0/lib/plugin.rb:39:in `setup'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-keys-2.1.0/lib/plugin.rb:11:in `block in singleton class'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:122:in `block (3 levels) in run'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/user_interface.rb:145:in `message'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:116:in `block (2 levels) in run'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:115:in `each'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:115:in `block in run'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/user_interface.rb:145:in `message'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:114:in `run'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/installer.rb:468:in `run_plugins_pre_install_hooks'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/installer.rb:159:in `block in prepare'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/user_interface.rb:145:in `message'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/installer.rb:155:in `prepare'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/installer.rb:135:in `install!'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/command/update.rb:97:in `run'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/command.rb:52:in `run'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/gems/cocoapods-1.6.1/bin/pod:55:in `<top (required)>'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/bin/pod:23:in `load'
/Users/dev/builds/221b080e/0/project/vendor/gems/ruby/2.5.0/bin/pod:23:in `<top (required)>'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/cli/exec.rb:74:in `load'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/cli/exec.rb:74:in `kernel_load'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/cli/exec.rb:28:in `run'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/cli.rb:463:in `exec'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/vendor/thor/lib/thor/command.rb:27:in `run'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/vendor/thor/lib/thor/invocation.rb:126:in `invoke_command'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/vendor/thor/lib/thor.rb:387:in `dispatch'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/cli.rb:27:in `dispatch'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/vendor/thor/lib/thor/base.rb:466:in `start'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/cli.rb:18:in `start'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/exe/bundle:30:in `block in <top (required)>'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/lib/bundler/friendly_errors.rb:124:in `with_friendly_errors'
/Users/dev/.rbenv/versions/2.5.1/lib/ruby/gems/2.5.0/gems/bundler-2.0.1/exe/bundle:22:in `<top (required)>'
/Users/dev/.rbenv/versions/2.5.1/bin/bundle:23:in `load'
/Users/dev/.rbenv/versions/2.5.1/bin/bundle:23:in `<main>'
```
Hey!

We're having an issue with a key that contains a `$` sign. We configure our keys through the `.env` file.

The key is this one:

`Xb19iJGhq$o$sdfjSflshdD`

Configuration in `.env`:

```
MyApiKey = "Xb19iJGhq$o$sdfjSflshdD"
```

And this is the output:

`Xb19iJGhq`

Is there any way to fix this?

Thanks,

Mauro
Everytime I do a pod install or a pod update, the order of the keys change in the header randomly. Is there a way to avoid that? Perhaps by giving it some kind of sorting? 

We check in our pods and thus it's creating a lot of redundant key.h/m pushes and polluting the history. 
I tried `pod install` and it gives me

CocoaPods-Keys has detected a keys mismatch for your setup.
What is the key for DevelopmentAppKey
value

――― MARKDOWN TEMPLATE ―――――――――――

### Command

```
/usr/local/bin/pod install
```

### Report

* What did you do?

* What did you expect to happen?

* What happened instead?


### Stack

```
   CocoaPods : 1.6.1
        Ruby : ruby 2.5.1p57 (2018-03-29 revision 63029) [x86_64-darwin16]
    RubyGems : 2.7.6
        Host : Mac OS X 10.14 (18A391)
       Xcode : 9.4.1 (9F2000)
         Git : git version 2.15.2 (Apple Git-101.1)
Ruby lib dir : /usr/local/Cellar/ruby/2.5.1/lib
Repositories : master - https://github.com/CocoaPods/Specs.git @ bdeafd39da58cdebb6ce150ec0e13ffd80cdfa6a
               voda-ios-cocoapods - https://df84987aaacb902dbb7582e79ce5cd60195bd13c@github.voda.com/TSS-MyVoda-CoreApp/iOS-CocoaPods.git @ 56d002e4de7980dfb78776ef5de6d8e33459a39e
               voda-ios-cocoapods-4.2 - https://df84987aaacb902dbb7582e79ce5cd60195bd13c@github.voda.com/TSS-MyVoda-CoreApp/iOS-CocoaPods-4.2.git @ 8a4513657bf9c59ab388e7c2011480a54f5963c7
```

### Plugins

```
cocoapods-deintegrate : 1.0.2
cocoapods-keys        : 2.1.0
cocoapods-plugins     : 1.0.0
cocoapods-search      : 1.0.0
cocoapods-stats       : 1.0.0
cocoapods-trunk       : 1.3.1
cocoapods-try         : 1.1.0
```

### Podfile

```ruby
# platform :ios, '9.0'
source 'https://github.com/CocoaPods/Specs.git'
source 'https://df84987aaacb902dbb7582e79ce5cd60195bd13c@github.voda.com/TSS-MyVoda-CoreApp/iOS-CocoaPods-4.2.git'

target 'MyVoda' do
    use_frameworks!
    pod 'Fabric'# , '~> 1.6.11'
    pod 'Crashlytics'#, '~> 3.8.4'
    pod 'R.swift'#, '~> 3.3.0'
    pod 'Alamofire'#, '~> 4.5.0' # is elegant HTTP Networking
    pod 'Log'#, '~> 1.0.0' # is an extensible logging framework
    pod 'YLProgressBar'#, '~> 3.10.1'
    pod 'ObjectMapper'#, '~> 2.2'
    pod 'SearchTextField'#, '1.1.8'
    pod 'IncrementableLabel' #, '~> 1.2.0'
    pod 'SkeletonView' #, '1.2.1'
end

plugin 'cocoapods-keys', {
    :project => "MyVoda-Gold",
    :target => "MyVoda-Gold",
    :keys => [
    "UrbanAirShipDevelopmentAppKey",
    "UrbanAirShipProductionAppKey",
    "UrbanAirShipProductionAppSecret",
    "UrbanAirShipDevelopmentAppSecret",
    "MPluseApiKey",
    "MintApiKey",
    "ContentType",
    "xapikeySt",
    "xapikeySit",
    "xapikeyEnv03",
    "xapikeyEnv05",
    "WebUser",
    "channel",
    ]
}
```

### Error

```
RuntimeError - Can't store password in Keychain
/usr/local/lib/ruby/gems/2.5.0/gems/osx_keychain-1.0.2/lib/osx_keychain.rb:10:in `set'
/usr/local/lib/ruby/gems/2.5.0/gems/osx_keychain-1.0.2/lib/osx_keychain.rb:10:in `[]='
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-keys-2.1.0/lib/keyring.rb:34:in `save'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-keys-2.1.0/lib/pod/command/keys/set.rb:46:in `run'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-keys-2.1.0/lib/preinstaller.rb:65:in `block in setup'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-keys-2.1.0/lib/preinstaller.rb:43:in `each'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-keys-2.1.0/lib/preinstaller.rb:43:in `setup'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-keys-2.1.0/lib/plugin.rb:17:in `setup'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-keys-2.1.0/lib/plugin.rb:11:in `block in singleton class'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:122:in `block (3 levels) in run'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/user_interface.rb:145:in `message'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:116:in `block (2 levels) in run'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:115:in `each'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:115:in `block in run'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/user_interface.rb:145:in `message'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/hooks_manager.rb:114:in `run'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/installer.rb:468:in `run_plugins_pre_install_hooks'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/installer.rb:159:in `block in prepare'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/user_interface.rb:145:in `message'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/installer.rb:155:in `prepare'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/installer.rb:135:in `install!'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/command/install.rb:48:in `run'
/usr/local/lib/ruby/gems/2.5.0/gems/claide-1.0.2/lib/claide/command.rb:334:in `run'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/lib/cocoapods/command.rb:52:in `run'
/usr/local/lib/ruby/gems/2.5.0/gems/cocoapods-1.6.1/bin/pod:55:in `<top (required)>'
/usr/local/bin/pod:23:in `load'
/usr/local/bin/pod:23:in `<main>'
```

――― TEMPLATE END ――――――――――――

ERROR:  While executing gem ... (Gem::FilePermissionError)
    You don't have write permissions for the /Library/Ruby/Gems/2.3.0 directory.
In `spec/functional_spec.rb`:

```
 11         podfile.puts <<-PODFILE
 12           platform :ios, '7'
 13           install! 'cocoapods', :integrate_targets => false
 14
 15           plugin 'cocoapods-keys', {
 16               :project => 'TestProject',
 17               :keys => [
 18                   'KeyWithData',
 19                   'AnotherKeyWithData',
 20                   # This is not included!
 21                   # 'UnusedKey'
 22               ]
 23           }
 24         PODFILE
```

I think the tests don't fail because they're not actually trying to integrate with the targets (which would fail).
I think resolve if merged https://github.com/seattlerb/osx_keychain/pull/2
But not yet, any idea?

``` ruby
bundle exec rspec spec/*_spec.rb
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:45:20: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                   strlen(service), service,
                   ^~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:46:31: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                   username ? strlen(username) : 0, username,
                              ^~~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:51:22: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                     strlen(service), service,
                     ^~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:53:33: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                     username ? strlen(username) : 0, username,
                                ^~~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:90:20: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                   strlen(service), service,
                   ^~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:91:43: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                   username == NULL ? 0 : strlen(username), username,
                                          ^~~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:97:24: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                       strlen(password), password);
                       ^~~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:102:24: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                       strlen(service), service,
                       ^~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:103:47: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                       username == NULL ? 0 : strlen(username), username,
                                              ^~~~~~~~~~~~~~~~
/Users/travis/build/orta/cocoapods-keys/vendor/bundle/ruby/2.0.0/gems/osx_keychain-1.0.1/lib/osx_keychain.rb:104:24: warning: implicit conversion loses integer precision: 'unsigned long' to 'UInt32' (aka 'unsigned int') [-Wshorten-64-to-32]
                       strlen(password), password,
                       ^~~~~~~~~~~~~~~~
10 warnings generated.
```
There's problem with `KeyringLiberator.get_keyring_at_path`/`KeyringLiberator. get_all_keyrings ` — it works pretty fine when all the files in the `keys_dir` folder are in exact format library needs, but in  case *any* of them deviates from unwritten scheme all gets broken.

For example, our team had situation when one of YAML files in `~/.cocoapods/keys` became empty(for unknown reasons), and when we tried to do `pod install` we had this:

```
NoMethodError - undefined method '[]' for false:FalseClass
~/.rvm/gems/ruby-2.4.1/gems/cocoapods-keys-2.0.0/lib/keyring.rb:14:in 'from_hash'
~/.rvm/gems/ruby-2.4.1/gems/cocoapods-keys-2.0.0/lib/keyring_liberator.rb:66:in 'get_keyring_at_path'
~/.rvm/gems/ruby-2.4.1/gems/cocoapods-keys-2.0.0/lib/keyring_liberator.rb:60:in 'block in get_all_keyrings'
~/.rvm/gems/ruby-2.4.1/gems/cocoapods-keys-2.0.0/lib/keyring_liberator.rb:59:in 'each'
~/.rvm/gems/ruby-2.4.1/gems/cocoapods-keys-2.0.0/lib/keyring_liberator.rb:59:in 'get_all_keyrings'
~/.rvm/gems/ruby-2.4.1/gems/cocoapods-keys-2.0.0/lib/keyring_liberator.rb:28:in 'get_current_keyring'
~/.rvm/gems/ruby-2.4.1/gems/cocoapods-keys-2.0.0/lib/preinstaller.rb:23:in 'setup'
… // rest of the callstack is not so important
``` 
And it crashes with this because `YAML.load`(in `get_keyring_at_path`) for empty file/string returns `false`, and in `Keyring.from_hash` there's attempt to perform subscript operator ([]) with `false` in `hash` parameter, because there's no checks on this parameter, neither type or keys are validated.

So, it is recommended to add some checks in `Keyring.from_hash` and similar methods to prevent such nuisance from happening.
Now any random invalid `.yml` file in the folder easily breaks plugin work. 
When I started to use cocoapods-keys, for the first try I used the sample code to test, so I added Eidolon as project name. 

    plugin 'cocoapods-keys', {
        :project => "Eidolon",
        :keys => [
        "SomeTestKey"
        ]}

Then a class was generated, correctly named "EidolonKeys" . Later I wanted to use the real name of my project so I changed it in the podfile:

    plugin 'cocoapods-keys', {
        :project => "MyProject",
        :keys => [
        "SomeTestKey"
        ]}

After running either "pod install" or "pod update" still "EidolonKeys" class is generated instead of "MyProjectKeys". I would expect that the name of the generated class is always generated depending on the name which is defined in the podfile, in order to keep consistency with the ci and with other colleges who might be working on the same project. Am I doing something wrong, is it somehow possible to fix this issue? 