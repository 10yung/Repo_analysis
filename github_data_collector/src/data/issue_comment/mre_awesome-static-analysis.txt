Insider is the OSS CLI project from the Insider Application Security Security Team for the community. This project have a simplified version of the proprietary Static Application Security Testing engine developed internally by us ðŸ˜„, to make source code analysis to find vulnerabilities right in the source code, focused on a agile and easy to implement software inside your DevOps pipeline.
import java.util.Random;
Would adding IDEs as a separate section be useful? For example IDEs like Jetbrains IDEA and Android Studio comes bundled with tools like idea-inspector and android lint. They also provide a lot of tools functionality for refactoring, extracting, reordering of methods, auto-formatting - using static analysis.  Can create a PR for it if you think it is a good idea.


https://github.com/JetBrains/inspection-plugin can be used in Java, Kotlin and Android projects and includes all the inspections that are available in the IntelliJ IDE.  Where is the appropriate section for this tool? 

It is applied to any gradle project, so i guess the Multiple languages section would be appropriate?
I started compiling a list of SAST tools as part of a research assignment, only to stumble upon this awesome list. I noted that several of the tools I found are not yet listed, however I have no idea whether the tools I found are 'awesome'... For some of them I could find some objective proof (e.g. the Gartner Magic Quadrant for SAST tools), and so I created some PRs already.

### PRs created for:
- AppScan Source HCL #277 
- WhiteHat Sentinel Source #279 
- Synopsys Coverity #280 
- Checkmarx CxSAST #278 

### Not sure if awesome:
- [Appknox](https://www.appknox.com/products) (Online scanner)
- [bugScout](https://bugscout.io/en/source-code-analyzer/) (multiple languages such as Java, PHP, .NET and classic ASP)
- [Code Dx Enterprise](https://codedx.com/code-dx-enterprise/) (Correlation engine bundled with SAST/DAST/IAST/other tools)
- [Devknox](https://devknox.io/) (Android, will become open source soon, no longer supported officially)
- [Jtest](https://www.parasoft.com/products/jtest) (Java)
- [Ripstech](https://www.ripstech.com/)
- [Snappy Tick](https://snappycodeaudit.com/)
- [Sparrow SAST](http://sparrowfasoo.com/product/sast) (Support over 20 languages including Java, JSP, C/C++, C#, Python, Swift, ASP(.NET), ABAP, Object C, etc)
- [ThunderScan](https://www.defensecode.com/thunderscan.php) (Multilanguage)
- [TrueCode](https://www.palcomonline.com/sitelock-security/truecode-static-application-security-testing/)
- [Virtual Forge Security Suite](https://www.virtualforge.com/en/security-suite) (SAP)
- [VisualCodeGrepper](https://github.com/nccgroup/VCG) (VCG is an automated code security review tool that handles C/C++, Java, C#, VB and PL/SQL)
- [Xanitizer]() (Java/Scala)
- [ZeroNorth](https://www.zeronorth.io/product/)

Any feedback on the above tools is welcome. If any of the tools is found to be awesome, let me know and I will create PRs. 
- oelint-adv is a linter for bitbake files accroding to
  OpenEmbedded style guide
- Systemdlint is a linter for systemd unit files and overall
  system setup
Pyscent is the only wrapper that detects Python-specific code smells and generates an intuitive output report.

At least `:warning:`, `:copyright:` and so on are not rendered on the website.