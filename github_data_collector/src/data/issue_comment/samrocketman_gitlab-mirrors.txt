 ./add_mirror.sh --git --project-name github-gitlab-mirrors --mirror https://github.com samrocketman/gitlab-mirrors.git
Resolving gitlab remote.
Creating new project github-gitlab-mirrors
Traceback (most recent call last):
  File "lib/manage_gitlab_project.py", line 144, in <module>
    found_project=createproject(project_name)
  File "lib/manage_gitlab_project.py", line 111, in createproject
    git.projects.create(project_options)
  File "/usr/lib/python2.7/site-packages/gitlab/exceptions.py", line 259, in wrapped_f
    return f(*args, **kwargs)
  File "/usr/lib/python2.7/site-packages/gitlab/mixins.py", line 204, in create
    server_data = self.gitlab.http_post(path, post_data=data, files=files, **kwargs)
  File "/usr/lib/python2.7/site-packages/gitlab/__init__.py", line 691, in http_post
    **kwargs
  File "/usr/lib/python2.7/site-packages/gitlab/__init__.py", line 575, in http_request
    response_body=result.content,
gitlab.exceptions.GitlabAuthenticationError: 401: 401 Unauthorized
There was an unknown issue with manage_gitlab_project.py

SSH key is OK and gitlab authentication is as well OK.
Tested by
GIT_TRACE=1 GIT_SSH_COMMAND="ssh -vvv" git clone git@gitlab.terminus.cz:group-name/project-name.git

actually the group name already exist in gitlab-ce system, but when I use the add_remote.sh script, the log show the group not exist.
In my gitlab-ce system, there are over 100 groups. maybe the script should list the all groups in gitlab-ce system.
* behaviour is different when mirror user is admin
  https://docs.gitlab.com/ce/api/groups.html
* Group cannot be found in some circumstances when "all_available = true" which is the default when a user with admin rights uses the script
The original `true` or `false` setting for public used to set to repository visibility to private or public.
This does exactly the same thing keeping the `public=false/true` configuration setting.
Removing `public` configuration in favor of full `visibility` support (public, private, internal) will require additional work so for now this is a stop gap for #118

to replace #119 
#90 has reared it's head again.

Please take a look but new projects are being created as Private even with `public=true` being set.

Confirmed with checking out 0.6.1 this is still the setting in config.sh.SAMPLE
I have two project with the same name, but in different group. When I run "delete_mirror.sh --delete xxxx",  the project which in another group not Mirror group is deleted.

I see when you run delete_mirror.sh script, you only find project by project name without group name. 

https://github.com/samrocketman/gitlab-mirrors/blob/75483cd906e0588200a7dcf4e1ff555e190b965a/lib/manage_gitlab_project.py#L154
In some cases, some projects use nested paths (not groups) for repositories (FreeBSD, Android...). I would like to be able to use gitlab-mirrors for pull mirroring but so far I have not found conclusive documentation on how to implement this.


Hi, i hope this will not make someone angry posting this here.
For a while i was using this project, but in the end it was inappropriate for the job:
* Cron mirroring is just not a best way, i need mirroring start ASAP push is done
* Codebase is just kinda weird mix of bash+python
* No simple release -> update system

So i created my **~much better** [project](https://github.com/Salamek/gitlab-tools), doing same stuff properly and more:

* Supports pull mirroring (Git, SVN, Mercurial,...)
* Supports push mirroring (yes GitLab 10.8 added this to GitLab CE but it was already done, so why remove it...)
* No cron, all tasks run on background (celery) triggered by web hook
* Build on flask+python3
* Supports mutiple users
* Uses GitLab OAuth2 for sign in
* It connect to GitLab API to fetch groups and projects
* Supports nested groups (Solves #99  and #73)
* Installable via APT from my deb repository
* Installable via Archlinux pacman from my repositry
* It is web APP so nice UI to manage your mirrors (Solves #62 and #44)
* Manages fingerprints properly for SSH, so no ugly hacks to ignore fingerprint checks
* Autocreates repository and writtable deploy key for pull mirrors in GitLab
* Autocreates webhook and deploy key for push mirrors in GitLab

Only disadvantage is, that it requires working database server:
* PostgreSQL (recommended, tested)
* MySQL (Should be OK to use)
* SQLite (Works but i'm unable to provide database migrations in future versions)

Url to project with more info and some docs is on https://github.com/Salamek/gitlab-tools




Hi,
Now that we have [nested group](https://docs.gitlab.com/ce/user/group/subgroups/) in gitlab since v9 it would be very interesting to implement it in gitlab-mirrors.
Would be super useful, as we could mirror several git repositories of a unique project to a unique sub group in a base "gitlab-mirrors" group (wow!)

Cheers
I believe it wouldn't be very hard to add this although gitlab mirror seems to have a long discussion about it as well. Maybe the 90% success simplistic case would suffice?