Works on Xcode 9.x.


Due to alleged errors with the valueForKey method such as "Too many arguments to function call, expected 0, have 3", around this line: https://github.com/domesticcatsoftware/DCIntrospect/blob/9555122e94e0f61375e5b375b906b81d6d5b1e6e/DCIntrospect/DCIntrospect.m#L127

XCode 5.1.1 refuses to compile this under iOS SDK 8.2 targeting iOS 7.0, after installing DCIntrospect 0.0.2 with cocoapods 0.37.2.

Any ideas?

I'm not sure if this is an issue with the library or my XCode installation, but my builds have been failing recently due to the DEBUGGER instruction on line 624 of DCIntrospect.m.

I receive 2 (duplicate) errors which say "Instruction requires: Not 64-bit mode".


[returns a 404](https://camo.githubusercontent.com/21d7afbbbad6d4798e3dea26b5234dc10e0f0dfe/687474703a2f2f646f6d65737469636361742e636f6d2e61752f70726f6a656374732f696e74726f73706563742f696e74726f737065637464656d6f2e706e67)

DCIntrospect.m Line 624:
Expanded from macro 'DEBUGGER' from the following:

```
    else if ([string isEqualToString:kDCIntrospectKeysEnterGDB])
    {
        UIView *view = self.currentView;
        view.tag = view.tag;    // suppress the xcode warning about an unused variable.
        NSLog(@"DCIntrospect: access current view using local 'view' variable.");
        DEBUGGER;
        return NO;
    }
```

In some cases, if classes were traversed in a particular order, the class's superclass would already have had `valueForKey` swizzled. In that case, `originalValueForKey` would be set to `UITextInputTraits_valueForKey`. This leads to an infinite loop in `UITextInputTraits_valueForKey`.

The fix is to traverse the class's heritage until a suitable `valueForKey:` implementation is found.

To make it easier to read debug logs, add this category and make it so that when you tap on a view, it displays the tag name along with the class name.  Also, the debug output should display these tags.

e.g.

[myview setNametag:@"My main view"]

when you tap on it, DCIntrospect should display "UIView - My main view   {{0,0},{320,568}}" on the top status bar.  Without this, you would only see "UIView" which is not helpful when you have many views and subviews!

Category code:

@interface UIView (NameTags)
- (NSString *)nametag;
- (void)setNametag:(NSString *)theNametag;
- (NSString *)objectIdentifier;
  @end

@implementation UIView (NameTags)
- (NSString *)nametag {
  return (NSString *)objc_getAssociatedObject(self, @selector(nametag));
  }

// Nametag setter
- (void)setNametag:(NSString *)theNametag {
  objc_setAssociatedObject(self, @selector(nametag), theNametag, OBJC_ASSOCIATION_RETAIN_NONATOMIC);
  }

// Return 'Class description : hex memory address'
- (NSString *)objectIdentifier {
  return [NSString stringWithFormat:@"%@:0x%0x", self.class.description, (int) self];
  }

@end
