Hi,

As described in issue https://github.com/const-ae/ggsignif/issues/6, annotation that contain duplicate contents does not work for grouped plots.

Let's start by some reproducible examples.

Demo data and plot:

```r
library(ggplot2)
library(ggsignif)
p <- ggplot(ToothGrowth, aes(supp, len)) +
    geom_boxplot(aes(color = dose))
  s <- stat.test <- data.frame(
    stringsAsFactors=FALSE,
    p.adj = c(0.000176, 3.96e-06, 0.0392, 1.36e-06, 1.4e-07, 9.16e-05),
    signif = c("****", "****", "****", "****", "****", "****"),
    signif2 = c("a", "b", "c", "d", "e", "f"),
    y_position = c(31.827, 33.5295, 35.232, 34.917, 37.1445, 39.372),
    xmin = c(0.7, 0.7, 1, 1.7, 1.7, 2),
    xmax = c(1, 1.3, 1.3, 2, 2.3, 2.3),
    group = rep(1:2, each = 3),
    supp = as.factor(rep(c("OJ", "VC"), each = 3))
  )
s
```

<pre>
     p.adj signif signif2 y_position xmin xmax group supp
1 1.76e-04   ****       a    31.8270  0.7  1.0     1   OJ
2 3.96e-06   ****       b    33.5295  0.7  1.3     1   OJ
3 3.92e-02   ****       c    35.2320  1.0  1.3     1   OJ
4 1.36e-06   ****       d    34.9170  1.7  2.0     2   VC
5 1.40e-07   ****       e    37.1445  1.7  2.3     2   VC
6 9.16e-05   ****       f    39.3720  2.0  2.3     2   VC
</pre>

Th following R code works because all annotation contents are distinct:

```r
p + geom_signif(
    aes(xmin = xmin, xmax = xmax, y_position = y_position, annotations = signif2),
    data = stat.test, manual = TRUE, tip_length = 0
    )
```
![Rplot05](https://user-images.githubusercontent.com/3313355/59051540-69e6a400-888d-11e9-9a1d-7e8d7b1a3ed6.png)


This one does not work because annotation contents are duplicated:

```r
p + geom_signif(
    aes(xmin = xmin, xmax = xmax, y_position = y_position, annotations = signif),
    data = stat.test,
    manual = TRUE, tip_length = 0
    )
````
![Rplot06](https://user-images.githubusercontent.com/3313355/59051628-a3b7aa80-888d-11e9-9d0a-14319a153660.png)

A workaround has been provided in discussion: https://github.com/const-ae/ggsignif/issues/6

```r
p + geom_signif(
  xmin = s$xmin, xmax = s$xmax, 
  y_position = s$y_position, annotation = s$signif,
  tip_length = 0
)
```

![Rplot07](https://user-images.githubusercontent.com/3313355/59051728-dfeb0b00-888d-11e9-98ad-1aad572831c4.png)

**My problem is that, the above solution does not work when facet is used**:

```r
p + geom_signif(
  xmin = s$xmin, xmax = s$xmax, 
  y_position = s$y_position, annotation = s$signif,
  tip_length = 0
) +
  facet_wrap(~supp)
````

![Rplot08](https://user-images.githubusercontent.com/3313355/59051883-2b051e00-888e-11e9-9198-860d6242fb45.png)

Aesthetic mapping is better for faceting but annotations are not displayed correctly:

```r
p + geom_signif(
    aes(xmin = xmin, xmax = xmax, y_position = y_position, annotations = signif),
    data = stat.test,
    manual = TRUE, tip_length = 0
    )+
  facet_wrap(~supp)
````
![Rplot09](https://user-images.githubusercontent.com/3313355/59051969-57209f00-888e-11e9-988e-0fdf18ee29d5.png)

Any suggestions?
Hello, when I try to plot a bar chart, I'm finding that the annotations disappear when I try to use add scale_x_discrete to switch around the order of the groups on the x-axis. 

Here's the data I'm trying to plot:
```
df <- structure(list(contrast = structure(c(1L, 1L, 1L), .Label = "near / far", class = "factor"), 
    trtmt = structure(1:3, .Label = c("constant", "pulsed_food", 
    "pulsed_nofood"), class = "factor"), ratio = c(5.07099352737315, 
    11.1731879523668, 1.3312513851146), SE = c(1.58712441846575, 
    8.31899028952686, 0.914462455274322), df = c(124, 124, 124
    ), lower.CL = c(2.72933986134215, 2.55958508525054, 0.34181466728037
    ), upper.CL = c(9.42168313989854, 48.773580428445, 5.18476946723847
    )), class = "data.frame", row.names = c(NA, 3L))
```
And here is the code and the plot without the scale_x_discrete active: 
```
ggplot(df, aes(x=trtmt, y=ratio)) + 
  geom_bar(stat="identity", size=0.7, fill="gray", color="black") +
  geom_errorbar(aes(ymin=lower.CL, ymax=upper.CL), width=.2) +
  labs(y="Difference of Estimated Marginal Mean\nwith 95% Confidence Intervals", x="Treatment") + 
  theme_bw() + 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(), axis.line = element_line(colour="black")) + 
  theme(text = element_text(size=15)) + 
  scale_y_continuous(limits=c(-2,49), breaks=seq(-2,49,5)) + 
  #scale_x_discrete(limits = c("pulsed_nofood","pulsed_food","constant"), 
   #                labels=c("pulsed_nofood" = "Pulsed (No Food)", "constant" = "Constant","pulsed_food" = "Pulsed (Food)")) + 
  geom_signif(y_position = c(25, 26), xmin = c(1,1), xmax = c(2,3),tip_length = 0, annotation = "*")
```
producing this plot: 
![image](https://user-images.githubusercontent.com/42630011/58586255-a4669600-8228-11e9-920a-563b04a89e07.png)

When I un-comment the scale_x_discrete(), then the lines and asterisks go away:
![image](https://user-images.githubusercontent.com/42630011/58586298-c19b6480-8228-11e9-9db2-d35aa2a3e6b3.png)

This is very confusing because on another dataset, almost identical to this one, the scale_x_discrete doesn't seem to interfere: 
```
df <- structure(list(contrast = structure(c(1L, 1L, 1L), .Label = "near / far", class = "factor"), 
    trtmt = structure(1:3, .Label = c("pulsed_nofood", "constant", 
    "pulsed_food"), class = "factor"), ratio = c(1.92122356321414, 
    5.23797787647802, 10.4941901194222), SE = c(0.878061062639006, 
    1.45350877127748, 4.46193848439194), df = c(123, 123, 123
    ), lower.CL = c(0.77747406435774, 3.02421834016281, 4.52311316079063
    ), upper.CL = c(4.74755384013795, 9.07223260639184, 24.3478379487034
    )), class = "data.frame", row.names = c(NA, 3L))

ggplot(df, aes(x=trtmt, y=ratio)) + 
  geom_bar(stat="identity", size=0.7, fill="gray", color="black") +
  geom_errorbar(aes(ymin=lower.CL, ymax=upper.CL), width=.2) +
  labs(y="Estimated Marginal Mean\nwith 95% Confidence Intervals", x="Treatment") + 
  theme_bw() + 
  theme(panel.border = element_blank(), panel.grid.major = element_blank(),
        panel.grid.minor = element_blank(), axis.line = element_line(colour="black")) + 
  theme(text = element_text(size=15)) + 
  scale_y_continuous(limits=c(0,26), breaks=seq(0,26,1)) + 
  scale_x_discrete(limits = c("pulsed_nofood","pulsed_food","constant"), 
                   labels=c("pulsed_nofood" = "Pulsed (No Food)", "constant" = "Constant","pulsed_food" = "Pulsed (Food)")) + 
  geom_signif(y_position = c(25, 26), xmin = c(1,1), xmax = c(2,3),tip_length = 0, annotation = "*")
```
![image](https://user-images.githubusercontent.com/42630011/58586465-1a6afd00-8229-11e9-8191-c9601c420c4e.png)

Hello,
I met some questions when used this packages.Could you help me?
This is my codeï¼š

my_comparisons <- list(c("A", "B"), c("B", "C"), c("C", "D"))
ggplot(distance, aes(x=Group,y=Distance, color=Method,shape=Method)) +
  geom_boxplot(fill="cornflowerblue",
               color="black", notch=TRUE) +
  geom_point(position = "jitter", color="blue", alpha=.5) +
  geom_rug(side="1", color="black")+theme_bw()+
  geom_signif(comparisons = my_comparisons,test = "t.test")+
  facet_grid(.~Method)

This is my data structures:
Group Distance Method
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
A 0 Hamming distance
B 162 Hamming distance
B 151 Hamming distance
B 90 Hamming distance
B 150 Hamming distance
B 131 Hamming distance
B 107 Hamming distance
B 145 Hamming distance
B 87 Hamming distance
B 103 Hamming distance
B 96 Hamming distance
B 114 Hamming distance
B 102 Hamming distance
B 103 Hamming distance
B 91 Hamming distance
B 71 Hamming distance
B 77 Hamming distance
B 77 Hamming distance
B 67 Hamming distance
B 40 Hamming distance
C 179 Hamming distance
C 167 Hamming distance
C 109 Hamming distance
C 152 Hamming distance
C 152 Hamming distance
C 152 Hamming distance
C 152 Hamming distance
C 152 Hamming distance
C 152 Hamming distance
C 152 Hamming distance
C 129 Hamming distance
C 89 Hamming distance
C 86 Hamming distance
C 109 Hamming distance
C 86 Hamming distance
C 93 Hamming distance
C 89 Hamming distance
C 80 Hamming distance
C 55 Hamming distance
D 275 Hamming distance
D 250 Hamming distance
D 193 Hamming distance
D 241 Hamming distance
D 235 Hamming distance
D 186 Hamming distance
D 240 Hamming distance
D 174 Hamming distance
D 183 Hamming distance
D 193 Hamming distance
D 171 Hamming distance
D 182 Hamming distance
D 169 Hamming distance
D 159 Hamming distance
D 141 Hamming distance
D 131 Hamming distance
D 122 Hamming distance
D 111 Hamming distance
D 94 Hamming distance
I want to draw a picture like this:
![42407858-33b43f68-81c3-11e8-8668-67c916b007d3](https://user-images.githubusercontent.com/35647271/55275461-65e45600-5321-11e9-8e56-ad3288ab4b96.png)


But I used above data and code can't get similar picture.
![Rplot03](https://user-images.githubusercontent.com/35647271/55275464-6ed52780-5321-11e9-81cb-30dfe7841ea4.png)


And I got some warning messages:
Warning messages:
1: Computation failed in stat_signif():
missing value where TRUE/FALSE needed
2: Computation failed in stat_signif():
missing value where TRUE/FALSE needed
3: Computation failed in stat_signif():
missing value where TRUE/FALSE needed
Could you help me ? Thank you !
Hi,
I really love this package and have been using it extensively of late. I've recently written a piece of code that allows you to run a test like a two-factor anova followed by a post-hoc like a TukeyHSD and then automatically passes those values to geom_signif using the manual override. The x and y values are all calculated without user input. It relies on broom. I've been using it for large numbers of graphs at once. I was wondering if I'd be able to contribute to the package to save some other folks the work? 
Best,
Margot
Hi,

I am using this wonderful package, which I found very useful to my work, and I am faced with a little problem here.
I am trying to do a violin plot using Seurat package.
``` R
library(Seurat)
library(ggsignif)
fig <- VlnPlot(object = pbmc_small, features.plot = 'PC1', do.return = TRUE)
fig  + geom_signif(xmin = 3, xmax = 4, y_position = 8 , annotations="**")
```
![plot1](https://user-images.githubusercontent.com/11786671/45478251-0d2ee080-b776-11e8-9ef0-4fa86fa6b2d3.png)

It needs a bit of refinement because the annotation overlaps other part of the plot, so I set y_position from 8 to 9
``` R
library(Seurat)
library(ggsignif)
fig <- VlnPlot(object = pbmc_small, features.plot = 'PC1', do.return = TRUE) +
coord_cartesian(ylim = c(-4,15))
fig  + geom_signif(xmin = 3, xmax = 4, y_position = 9 , annotations="**")
```
![plot2](https://user-images.githubusercontent.com/11786671/45478259-10c26780-b776-11e8-846d-f9c55d0b9725.png)

However, the annotation disappeared, and I do not know how to fix this. 
Thank you very much in advance!

Hi Constantin,

Thank you for your work in developing the geom_signif extension to ggplot. It is a great tool.

I want to bring to your attention an issue I have run into using geom_signif, specifically, that the geom_signif layer will not render in the plot if factor levels are reassigned within ggplot. I found this while using geom_signif to annotate some bar plots

Here is an example:

    library(plyr)
    library(ggplot2)
    library(ggsignif)

    #generate some data

    mtcars.meanMPG <- 
      ddply(
        mtcars,
        .(carb, am),
        summarize,
        meanMPG = round(mean(mpg),3)
      )

This works:

    ggplot(
      data=mtcars.meanMPG,
      aes(
        x=factor(carb),
        y=meanMPG,
        fill=am,
        group=am
      )
    )+
      geom_bar(
        stat = "identity",
        position = position_dodge(preserve = "single")
      )+
      geom_signif(
        annotation="p = 0.01",
        y_position=29,
        xmin=1.7,
        xmax=2.3,
        tip_length = c(0.01, 0.01)
      )

This does not:

    ggplot(
      data=mtcars.meanMPG,
      aes(
        x=factor(carb, levels = unique(rev(mtcars.meanMPG$carb))),
        y=meanMPG,
        fill=am,
        group=am
      )
    )+
      geom_bar(
       stat = "identity",
        position = position_dodge(preserve = "single")
      )+
      geom_signif(
        annotation="p = 0.01",
        y_position=29,
        xmin=1.7,
        xmax=2.3,
        tip_length = c(0.01, 0.01)
      )

Nor does this:

    mtcars.meanMPG$carb <- 
    factor(mtcars.meanMPG$carb, levels = unique(rev(mtcars.meanMPG$carb)))

    ggplot(
      data=mtcars.meanMPG,
      aes(
        x=carb,
        y=meanMPG,
        fill=am,
        group=am
      )
    )+
      geom_bar(
        stat = "identity",
        position = position_dodge(preserve = "single")
      )+
      geom_signif(
        annotation="p = 0.01",
        y_position=29,
        xmin=1.7,
       xmax=2.3,
       tip_length = c(0.01, 0.01)
     )

I often find myself reassigning factor levels in order to get figures to rendering correctly. Just letting you know in case this is something you want to look into.

Thanks,
-Joe
Dear Constantin

Thank you very much for your package ggsignif, I very appreciate it.
I try to add results from chi-square test to a ggplot and it was mentioned, that I could use ggsignif:

https://stackoverflow.com/questions/51886623/compare-dependent-proportions-in-a-ggplot

Moreover I found your adivce to use geom_signif

https://github.com/const-ae/ggsignif/issues/23

However, If i add this to my plot:
```
geom_signif(data = annotation_df,
              aes(annotations = annotations, xmin = xmin, xmax = xmax, y_position = y_position),
              manual = TRUE)

```

```
df <- data.frame(timepoint=rep(0:2, each=10),response=c("A","B","A","A","A","A","A","A","B","B","A","A","A","A","A","A","A","B","B","B","A","B","B","B","B","B","A","B","B","B"),variable=rep(c("var1","var2"),each=5, 3), subject=rep(1:5,6))
df$timepoint <- factor(df$timepoint, level=c(1,0,2), labels=c("method_A","baseline","method_B"))

df %>% add_count(timepoint,variable,response) %>% add_count(timepoint,variable) %>% mutate(freq=n/nn*100) %>% mutate(total=1) -> df

stats <-data.frame(xmax=c(rep(c("baseline","method_B"),2)))
stats %>% mutate(xmin=as.factor(c(rep(c("method_A","baseline"),2)))) %>% 
  mutate(annotations=c("1","0.2","1","0.5")) %>% 
  mutate(y_position=5) %>% 
  mutate(variable=as.factor(c("var1","var1","var2","var2"))) -> annotation_df

ggplot(df,
       aes(x = timepoint, stratum = response, alluvium = subject,
           y = total, 
           fill = response, label = paste(freq,"%") )) +
  geom_flow() +
  geom_stratum(alpha = .5) +
  geom_text(stat = "stratum", size = 3) +
  theme(legend.position = "none") +
  geom_signif(data = annotation_df,
              aes(annotations = annotations, xmin = xmin, xmax = xmax, y_position = y_position),
              manual = TRUE) +
  facet_wrap(~variable) 
```
I get this error: 
_Warning: Ignoring unknown aesthetics: annotations, xmin, xmax, y_position
Error in FUN(X[[i]], ...) : object 'response' not found_

If i leave out geom_signif(...) everything works.
Thank you for any advice,
Jacob
When using coord flip, one usually wants to put the labels at the right of the bracket. Is there any way to do this?
Great library, thanks!

Is there a way to rotate the labels?
When using `geom_signif` on a `ggplot` plot that has color aesthetics, I get the error below. However, it works if the color aesthetics are specified in another geom. It took me a bit to find the cause and workaround for the problem, not sure if I was using `ggplot` not correctly here.

The minimal example test data:
```R
require(ggplot2)
require(ggsignif)

df <- data.frame(
    'data' = c(1,2,3,4,5,6,7,8,9,10),
    'group' = c(rep('group 1', 5), rep('group 2', 5))
)
```

This results in an error
```R
p <- ggplot(df, aes(y = data, x = group, group = group, color = group)) + geom_boxplot()
p + geom_signif(comparisons = list(c('group 1', 'group 2')), y_position = 11)

Error in check.length(gparname) : 
  'gpar' element 'fontsize' must not be length 0
In addition: Warning message:
In is.na(colour) : is.na() applied to non-(list or vector) of type 'NULL'
```

while this works as expected
```R
p <- ggplot(df, aes(y = data, x = group, group = group)) + geom_boxplot(color = group)
p + geom_signif(comparisons = list(c('group 1', 'group 2')), y_position = 11)
```