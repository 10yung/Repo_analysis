I am new to using nginx VOD module and have some videos I want to have a continues live stream from my videos 

this my nginx.conf file 
-------------------------------------------------------------------------
`
#user  nobody;
worker_processes  1;

error_log  logs/error.log;
error_log  logs/error.log  notice;
error_log  logs/error.log  info;
error_log  logs/debug.log  debug;


events {
    worker_connections  1024;
}

http {
	upstream jsonupstream {
		server 18.219.142.125:80;
	}

	server {
		# vod settings
		vod_mode mapped;
		vod_upstream_location /json;
		vod_remote_upstream_location /proxy;
		vod_upstream_extra_args "pathOnly=1";
		vod_last_modified 'Sun, 19 Nov 2000 08:52:00 GMT';
		vod_last_modified_types *;

		# vod caches
		vod_metadata_cache metadata_cache 512m;
		vod_response_cache response_cache 128m;
		vod_mapping_cache mapping_cache 5m;

		# gzip manifests
		gzip on;
		gzip_types application/vnd.apple.mpegurl;

		# file handle caching / aio
		open_file_cache	  max=1000 inactive=5m;
		open_file_cache_valid    2m;
		open_file_cache_min_uses 1;
		open_file_cache_errors   on;
		#aio on;

		location ^~ /json/hls/ {
			internal;
			proxy_pass http://jsonupstream/;
			proxy_set_header Host $http_host;
		}

		location ~ /proxy/([^/]+)/(.*) {
			internal;
			proxy_pass $1://$2;
			resolver 8.8.8.8;
		}
		
		
		location /hls/  {
                        #secure_link $arg_md5,$arg_expires;
                        #secure_link_md5 "$secure_link_expires 12345";
                        
                        #if ($secure_link = "") {
                        #        return 403;
                        #}
                        #if ($secure_link = 0) {
                        #        return 410;
                        #}
                        
			vod hls;
                        alias /usr/local/nginx/html/;
                        
                        vod_secret_key "mukkaukk$vod_filepath";
			vod_hls_encryption_method aes-128;
			
			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
			add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
			add_header Access-Control-Allow-Origin '*';
			expires 100d;
		}

		location ~ ^/hls/ {
			vod hls;

			add_header Access-Control-Allow-Headers '*';
			add_header Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range';
			add_header Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
			add_header Access-Control-Allow-Origin '*';
			expires 100d;
		}
		
		location ~* \.php$ {
		  fastcgi_index   index.php;
		  fastcgi_pass    127.0.0.1:9000;
		  #fastcgi_pass   unix:/var/run/php-fpm/php-fpm.sock;
		  include         fastcgi_params;
		  fastcgi_param   SCRIPT_FILENAME    $document_root$fastcgi_script_name;
		  fastcgi_param   SCRIPT_NAME        $fastcgi_script_name;
		}
		location ~ /\.ht {
            deny  all;
        }
		location / {
            root   html;
            index  index.php index.htm;
        }
	}
}


`

and this is my playlist.php file 

https://github.com/kaltura/nginx-vod-module/blob/master/test/playlist.php

when I try to access http://18.219.142.125/playlist.php show the bellow error

`
Fatal error: Uncaught Error: Call to undefined function apc_fetch() in /usr/local/nginx/html/playlist.php:71 Stack trace: #0 /usr/local/nginx/html/playlist.php(102): getDurationMillis('101_1.mp4') #1 {main} thrown in /usr/local/nginx/html/playlist.php on line 71
`

please help me how can I solve this issue 

best Regards 
1 Please show me samples of configs servers, using for streaming video (VOD), also how much online visitors in same time this config supported?

2 Can you tell me about IOPS on stremaing server (VOD)? How mush same time connections on different video supported and how much IOPS needed (1 SSD, or RAID 5, 10 SSD)?

3 I want use config nginx with cache, and HDD (~10-20TB) use for storage video files, and second drive is SSD (1 TB) use for nginx cache. This solution will work with nginx-vod-module? I need solution for not high cost.
Hello everyone, i'm facing an issue here trying to generate the durations of multiple files that i want to run in live mode.

I thank you all in advance!

Since the files are not equal i'm using:
`$discontinuity = true;`
`$playlistType = 'live';`

The problem is:

```
$filePaths = array(
	 array(
		"/path/to/file/video1.mp4"
         ),
         array(
		"/path/to/file/video2.mp4"
         )
);
```
When i use `playlistType = vod`, both videos appears in the JSON output, if i try live, only one of them. **That's problem nº 1.**
OUTPUT:

> {"firstClipTime":1577000056000,"initialClipIndex":1,"initialSegmentIndex":1,"discontinuity":1,"playlistType":"live","durations":[269686],"sequences":[{"clips":[{"type":"source","path":"/path/to/file/video1.mp4"}]}]}

The workaround i found was to put all videos in the same array, such as:

```
$filePaths = array(
	 array(
		"/path/to/file/video1.mp4",
                "/path/to/file/video2.mp4"
         )
);
```
Doing that it would output both files, **BUT not their respective durations, only of the first video!** And i'm pretty sure this isn't the only issue, i just don't know what's going on...
OUTPUT:

>"firstClipTime":1577001199000,"initialClipIndex":1,"initialSegmentIndex":1,"discontinuity":true,"playlistType":"live","durations":[269686],"sequences":[{"clips":[{"type":"source","path":"/path/to/file/video1.mp4"}]},{"clips":[{"type":"source","path":"/path/to/file/video2.mp4"}]}]}


**Problem nº 2 is:** 

The video always start like 20-30% ahead of it's beginning (and i have 0 clue on that).


**Problem nº 3 is:** 

When video1 it's over it doesn't load video2, it just keeps loading forever **`(i already triple checked, both files are not corrupted!)`**

I just want to live stream 2 or 3 videos, one after another. Thanks again! Any clarification or tips would help!


When i set value for this params (on any place) 
nginx do nothing, works only vod_expires. Remove vod_expires remove all Cache-Control header

How to add Cache-Control: no-cache for all not segments ?!
@erankor , hello!
We are going to deliver 4k VOD to PSP; we have tested all formats, and the best are two modes of DASH: with template segments (which is available via vod_module), and list with ranges (not available in vod_module).
The problem is that PSP player ignores **SegmentTemplate.startNumber** and counts segments from **0**.
As a workaround, nginx-side URI rewrite with lua works.
How complicated is it, in your opinion, to implement arbitary **startNumber**? Say, make it configurable via json...
Any update for kaltura-nginx and kaltura-ffmpeg on Centos 8?

Thanks!
Hi, i trying this module on many mp4 files h264, aac, and have some errors on some files, this videos work fine on local mp4 player (5kplayer on mac), there are:
[error] 8887#8887: *373 ngx_http_vod_validate_streams: no matching streams were found while reading media header, client: 127.0.0.1, server: site.com, request: "GET /1574629202z199u.mp4/index.m3u8 HTTP/1.1", host: "site.com"
this file (warning adult file): https://mega.nz/#!IdUz3Y6b!tEBch9O0gAUidyx4DKF4MVCSc5ch6p-7PtFsSU2p5E8

another error:  [error] 31456#31456: *25 mp4_parser_parse_stsc_atom: chunk index 1 is smaller than the previous index 1 (1) while reading media header, client: 127.0.0.1, server: site.com, request: "GET /15000149776elvg.mp4/Frag-3-v1-a1.ts HTTP/1.1", host: "site.com"
this file (warning adult file): https://mega.nz/#!BYch2CgJ!OUVcDVzrS-gHb4nWd0HlsxO-SZSINh11xjDUP-q-iEE

another error: [error] 31465#31465: *49 mp4_to_annexb_write: zero size packet while processing frames, client: 127.0.0.1, server: site.com, request: "GET /1564603166cmplj.mp4/Frag-4-v1-a1.ts HTTP/1.1", host: "site.com"
this file (warning adult file):https://mega.nz/#!0ZNjkIwJ!uYDnEHyzsXtW7jiB60DK_g8n8OZqoMmx8ZnAkUivacE

                # vod settings
                vod_mode local;
                vod_fallback_upstream_location /fallback;
                vod_last_modified 'Sun, 19 Nov 2000 08:52:00 GMT';
                vod_last_modified_types *;
                vod_segment_duration 20000;
                vod_hls_absolute_master_urls off;
                vod_hls_absolute_index_urls off;
                vod_hls_container_format mpegts;
                vod_hls_absolute_iframe_urls off;
                vod_force_playlist_type_vod on;
                vod_hls_segment_file_name_prefix Frag;
                vod_open_file_thread_pool default_pool;
                # vod caches
                vod_metadata_cache metadata_cache 4096m;
                vod_response_cache response_cache 128m;
                vod_cache_buffer_size 512k;
Hy, little help.

Current nginx.conf

`load_module modules/ngx_http_vod_module.so;
worker_processes  4;

error_log  /usr/local/nginx/logs/error_log;

pid		/usr/local/nginx/logs/nginx.pid;

events {
	worker_connections  1024;
	multi_accept on;
	use epoll;
}

http {
	upstream remoteupstream {
		server srv-file5.gofile.io;
		server cdn-35.anonfile.com;
                server cdn-34.anonfile.com;
server cdn-10.anonfile.com;
server cdn-11.anonfile.com;
server cdn-12.anonfile.com;
server cdn-13.anonfile.com;
server cdn-14.anonfile.com;
server cdn-15.anonfile.com;
server cdn-16.anonfile.com;
server cdn-17.anonfile.com;
server cdn-18.anonfile.com;
server cdn-19.anonfile.com;
server cdn-20.anonfile.com;
server cdn-21.anonfile.com;
server cdn-22.anonfile.com;
server cdn-23.anonfile.com;
server cdn-24.anonfile.com;
server cdn-25.anonfile.com;
server cdn-26.anonfile.com;
server cdn-31.anonfile.com;
server cdn-32.anonfile.com;
server cdn-33.anonfile.com; 
server index1-int.indavideo.hu;
	}

	server {
		listen 8888 ssl;

ssl_certificate /usr/local/nginx/cert.crt;
ssl_certificate_key /usr/local/nginx/cert.key;

		# vod settings
		vod_mode remote;
		vod_upstream_location /remoteupstream;
		vod_last_modified 'Sun, 19 Nov 2000 08:52:00 GMT';
		vod_last_modified_types *;

		# vod caches
		vod_metadata_cache metadata_cache 2048m;
		vod_response_cache response_cache 1024m;
		
		# gzip manifests
		gzip on;
		gzip_types application/vnd.apple.mpegurl;

location ~ /remoteupstream/([^/]+)/([^/]+)/(.*) {
			resolver 8.8.8.8;
			internal;
			proxy_pass $2://$3?$args;
			
		}
		


		location ~* ^/stream/(.*) {
			vod hls;
			vod_segment_duration 4000;
			vod_bootstrap_segment_durations 3500;
			vod_align_segments_to_key_frames on;
			
			
			add_header Last-Modified "Sun, 19 Nov 2000 08:52:00 GMT";
			add_header Access-Control-Allow-Headers "origin,range,accept-encoding,referer";
			add_header Access-Control-Expose-Headers "Server,range,Content-Length,Content-Range";
			add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
			add_header Access-Control-Allow-Origin "*";
			expires 1d;


		}
	
	}
}
`
New nginx conf

`load_module modules/ngx_http_vod_module.so;
load_module modules/ngx_http_secure_token_filter_module.so;


worker_processes  4;

error_log  /usr/local/nginx/logs/error_log;

pid		/usr/local/nginx/logs/nginx.pid;

events {
	worker_connections  1024;
	multi_accept on;
	use epoll;
}

http {
	upstream remoteupstream {
		server srv-file5.gofile.io;
		server cdn-35.anonfile.com;
                server cdn-34.anonfile.com;
server cdn-10.anonfile.com;
server cdn-11.anonfile.com;
server cdn-12.anonfile.com;
server cdn-13.anonfile.com;
server cdn-14.anonfile.com;
server cdn-15.anonfile.com;
server cdn-16.anonfile.com;
server cdn-17.anonfile.com;
server cdn-18.anonfile.com;
server cdn-19.anonfile.com;
server cdn-20.anonfile.com;
server cdn-21.anonfile.com;
server cdn-22.anonfile.com;
server cdn-23.anonfile.com;
server cdn-24.anonfile.com;
server cdn-25.anonfile.com;
server cdn-26.anonfile.com;
server cdn-31.anonfile.com;
server cdn-32.anonfile.com;
server cdn-33.anonfile.com; 
server index1-int.indavideo.hu;
	}
	
	server {
		listen 8888 ssl;

ssl_certificate /usr/local/nginx/cert.crt;
ssl_certificate_key /usr/local/nginx/cert.key;

		# vod settings
		vod_mode remote;
		vod_upstream_location /remoteupstream;
		vod_last_modified 'Sun, 19 Nov 2000 08:52:00 GMT';
		vod_last_modified_types *;

		# vod caches
		vod_metadata_cache metadata_cache 2048m;
		vod_response_cache response_cache 1024m;
		
		# gzip manifests
		gzip on;
		gzip_types application/vnd.apple.mpegurl;

location ~ /remoteupstream/([^/]+)/([^/]+)/(.*) {
			resolver 8.8.8.8;
			internal;
			proxy_pass $2://$3;
			
		}
		
			
		
	location ~ ^/stream/(.*)/{
			vod hls;

		secure_token_encrypt_uri on;
		secure_token_encrypt_uri_key 000102030405060708090a0b0c0d0e0f101112131415161718191a1b1c1d1e1f;
		secure_token_encrypt_uri_iv 00000030000090000008000004000030;
		secure_token_encrypt_uri_part $3;

     secure_token_types application/vnd.apple.mpegurl;

			
			     vod_segment_duration 4000;
                        vod_bootstrap_segment_durations 3500;
                        vod_align_segments_to_key_frames off;

                        add_header Access-Control-Allow-Headers "origin,range,accept-encoding,referer";
                        add_header Access-Control-Expose-Headers "Server,range,Content-Length,Content-Range";
                        add_header Access-Control-Allow-Methods "GET, HEAD, OPTIONS";
                        add_header Access-Control-Allow-Origin "*";
                 

 }
	
	}
}
`

Url encrypt php generate And open /index.m3u8 504/400 and loop not show and download m3u8 :( 

Please help

Hello,
i have some videos converted by ffmpeg.

For example:
> https://transfer.sh/goxC1/video-540p.mp4
https://transfer.sh/kBCvM/video-720p.mp4

these videos seems good (in any video players, included ffprobe..)
but this repackager returning some problematic ts segments like this:

(Bad segment without video data, other video segments are ok.)
> (wrong segment) https://hls.ondrej.it/7eH0U4OeauK2uNu5hY4VrQ==,1605524400/hls/2019/11/15/3/3c80910c94634bbab81a4b08b251b5a0/video-,540,720,p.mp4.urlset/seg-35-f1-v1-a1.ts

> (healthy segment) https://hls.ondrej.it/7eH0U4OeauK2uNu5hY4VrQ==,1605524400/hls/2019/11/15/3/3c80910c94634bbab81a4b08b251b5a0/video-,540,720,p.mp4.urlset/seg-30-f1-v1-a1.ts)

> (current hls playlist..) https://hls.ondrej.it/7eH0U4OeauK2uNu5hY4VrQ==,1605524400/hls/2019/11/15/3/3c80910c94634bbab81a4b08b251b5a0/video-,540,720,p.mp4.urlset/master.m3u8
https://hls.ondrej.it/7eH0U4OeauK2uNu5hY4VrQ==,1605524400/hls/2019/11/15/3/3c80910c94634bbab81a4b08b251b5a0/video-,540,720,p.mp4.urlset/iframes-f1-v1-a1.m3u8

This problematic segment crashing hls implementation in video.js or hls.js when browser downloaded problematic segment.

> https://ctrlv.cz/shots/2019/11/15/p20C.png

Here is my plugin settings:
>movies/;
      vod hls;
      vod_mode local;
      vod_segment_duration 10000; # 10s
      vod_hls_absolute_master_urls off;
      vod_hls_absolute_index_urls off;
      vod_hls_absolute_iframe_urls off;
      vod_align_segments_to_key_frames on;
    }

Any idea for my problem?
Thank you.
The following configuration below, are able to make request to files directly using `/files/.....` but was unsucessful for`/hls/.....` and `dash`, I received 502 Bad Gateway

I am using Minio as my storage service with `kaltura/nginx-aws-auth-module` as s3 connector and can confirm that object is accessible
**bucket**: faroseacademy
**key**: media/6e/9a/6e9a77615e67f4e3769d2cd84512815e.mp4

so to access the files directly the url would be `/files/faroseacademy/media/6e/9a/6e9a77615e67f4e3769d2cd84512815e.mp4`

however this does not work for hls

this is the url i've tried
`/hls/faroseacademy/media/6e/9a/6e9a77615e67f4e3769d2cd84512815e.mp4/master.m3u8`

This is the nginx server log
[PasteBin](https://pastebin.com/sKY2rBc1)

**conf.d/s3.conf**
```
aws_auth $aws_token {
    access_key                  ${AWS_ACCESS_KEY};
    secret_key                  ${AWS_SECRET_KEY};
    service                     ${AWS_SERVICE};
    region                      ${AWS_REGION};
}

upstream s3 {
    server                      minio:9000;
}

server {
    listen 80;
    server_name _;

    include                     /etc/nginx/vhost.d/vod.conf;
    include                     /etc/nginx/vhost.d/hls.conf;
    include                     /etc/nginx/vhost.d/dash.conf;
    include                     /etc/nginx/vhost.d/authentication.conf;
    
    location ~ ^/media(?:/(.*))?$ {  # ^/media/
        internal;
        rewrite ^/media(?:/(.*))?$ /$1 break;

        proxy_set_header        X-Amz-Date $aws_auth_date;
        proxy_set_header        X-Amz-Content-SHA256 e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855;
        proxy_set_header        Authorization $aws_token;

        proxy_set_header        Host $http_host;
        proxy_pass              http://s3;
    }
    

    location ~ ^/files(?:/(.*))?$ {
        auth_request            /auth/lesson/video;
        rewrite                 ^/files(?:/(.*))?$ /$1 break;
        
        proxy_set_header        X-Amz-Date $aws_auth_date;
        proxy_set_header        X-Amz-Content-SHA256 e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855;
        proxy_set_header        Authorization $aws_token;
        proxy_set_header        Host $http_host;
        proxy_pass              http://s3;
    }

    include                     /etc/nginx/vhost.d/healthcheck.conf;
}
```

**vhost.d/vod.conf**
```
vod_mode                            remote;
vod_upstream_location               /media;
vod_last_modified                   'Sun, 19 Nov 2000 08:52:00 GMT';
vod_last_modified_types             *;

# vod caches
vod_metadata_cache metadata_cache   512m;
vod_response_cache response_cache   128m;

# gzip manifests
gzip                                on;
gzip_types                          application/vnd.apple.mpegurl;
```

**vhost.d/dash.conf**
```
location ~ ^/dash/ {
    auth_request    /auth/lesson/video;
    vod             dash;
    
    add_header      Access-Control-Allow-Headers '*';
    add_header      Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range,Authorization';
    add_header      Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
    add_header      Access-Control-Allow-Origin '*';
    expires         7d;
}
```

**vhost.d/hls.conf**
```
location ~ ^/hls/ {
    auth_request            /auth/lesson/video;
    vod             hls;
    
    add_header      Access-Control-Allow-Headers '*';
    add_header      Access-Control-Expose-Headers 'Server,range,Content-Length,Content-Range,Authorization';
    add_header      Access-Control-Allow-Methods 'GET, HEAD, OPTIONS';
    add_header      Access-Control-Allow-Origin '*';
    expires         7d;
}
```