Upgrading firebase-tools version to [^7.11](https://github.com/firebase/firebase-tools/releases).

This should solve the "Unexpected error has occurred" issues.
https://travis-ci.community/t/permission-denied-apply2files-when-unlinking-c-users-travis-npmrc-in-windows/6682

Includes a cherry-picked unrelated fix from https://github.com/travis-ci/dpl/pull/1145, otherwise tests fail.
https://travis-ci.community/t/npm-deploy-failed-missing-api-key-but-i-have-set-it/6624
This is a possible solution to speed up the GCS provider (closes #1142) by passing the local_dir and `-m` to gsutil instead of copying each file individually. I don't expect this to get merged given the breaking changes, but I wanted to share this solution.

#### Breaking Changes
This introduces the following **breaking** changes for the user but makes the provider usable for users wanting to upload more than a handful of files.

`--dot_match` 
Not available with gsutil by wildcards...

> Per standard Unix behavior, the wildcard "*" only matches files that don't start with a "." character (to avoid confusion with the "." and ".." directories present in all Unix directories). gsutil provides this same behavior when using wildcards over a file system URI https://cloud.google.com/storage/docs/gsutil/addlhelp/WildcardNames

`--detect_encoding` -> `--compress_extensions` This allows using the `-z <ext, >`.
>-z  Applies gzip content-encoding to any file upload whose extension matches the -z extension list. https://cloud.google.com/storage/docs/gsutil/commands/cp#options

`--glob` was removed since the user can pass wildcard into local_dir which unfortunately is unable to match current functionality since gsutil [flattens wildcard directory structure](https://github.com/GoogleCloudPlatform/gsutil/issues/465)

#### Timing and Logs
The following timing results are run over 1.2k objects and 2.2 MiB.

Current - 1039.00s - [Build](https://travis-ci.org/googlemaps/js-samples/builds/623838218)
This PR - 34.00s - [Build](https://travis-ci.org/googlemaps/js-samples/builds/623911094)

It would be great to remove the the iteration of file uploads and allow gsutil `gsutil -m cp -r dir gs://my-bucket` to be used instead. Right now I am waiting many minutes for what should take a few seconds.
https://travis-ci.community/t/cannot-publish-npm-package-env-to-no-such-file-or-directory/5880
When running the following on Windows:
```bash
dpl heroku --api_key xxxxxxxxx-xxxx-xxxx-xxxx-xxxxxxxxxxx --app fesfse-test-staging-1
```

It results in an error from `tar`:

```
tar (child): Cannot connect to C: resolve failed
tar: Child returned status 128
tar: Error is not recoverable: exiting now
```

This error is raised because tar handles the path as a remote path because of the `:` sign. This behaviour can be prevented via passing the `--force-local` flag. [Source](https://stackoverflow.com/a/37996249/2019689)

I wonder if this flag can be added to support deployment on windows or not. 

Looking at the API It might be possible to trigger a recipe build after an import
https://api.launchpad.net/1.0.html#source_package_recipe
The `requestBuild` Custom POST method seems like it will trigger the build but I'm not sure how it would interact with waiting for the triggered import to complete.
This fixes #1105.

On "Git Bash" on Windows, the `dpl` executable runs `cmd.exe`, which does not play well with the `bash` syntax. Thus, I added a check to be on Windows and then execute `bash.exe`. 

This required 

- new dependency on `os` to check for Windows
- reroute calls from `Kernel.system` to `shell`

I also fixed the `setup` phase. The `git config` command was called inside the source directory (which typically is not a `.git` directory) and not in the target directory (which is the git repository being pushed).

Tested on Windows with a GitHub repository.

Minor fix: typo