Hi! 

I installed according to the instructions, then copied and pasted one of the examples, and I get the error below.

I am compiling with gcc, and I am on MacOS.
Any help is greatly appreciated!


Undefined symbols for architecture x86_64:
  "_myhtml_attribute_add", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_attribute_by_key", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_attribute_delete", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_attribute_value", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_collection_destroy", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_create", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_destroy", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_get_nodes_by_name", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_init", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_parse_fragment", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_serialization_tree_callback", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_tree_create", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_tree_destroy", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_tree_get_node_html", referenced from:
      _main in hello-7f1bec.o
  "_myhtml_tree_init", referenced from:
      _main in hello-7f1bec.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
When fuzzing the AddressSanitizer hardened `callback_tree_node_high_level`, we found several vulnerabilities/crashes due to multithreading.
A sample proof-of-crash (poc) file (zipped) is:

[NPE_r__mchar_async.c:656_1.html.zip](https://github.com/lexborisov/myhtml/files/3684507/NPE_r__mchar_async.c.656_1.html.zip)


with the error message like:

```
AddressSanitizer:DEADLYSIGNAL
=================================================================
==12692==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000000504b39 bp 0xcdce30adcdcf51b8 sp 0x7ffff30fdb20 T2)
==12692==The signal is caused by a READ memory access.
==12692==Hint: address points to the zero page.
    #0 0x504b38 in mchar_async_cache_delete /home/hongxu/fuzzing/Targets/myhtml/myhtml-asan/source/mycore/utils/mchar_async.c:656:44
    #1 0x506694 in mchar_async_malloc /home/hongxu/fuzzing/Targets/myhtml/myhtml-asan/source/mycore/utils/mchar_async.c:414:24
    #2 0x500cdb in mycore_string_init /home/hongxu/fuzzing/Targets/myhtml/myhtml-asan/source/mycore/./mystring.c:30:21
    #3 0x4cc912 in myhtml_parser_worker /home/hongxu/fuzzing/Targets/myhtml/myhtml-asan/source/myhtml/./parser.c:232:9
    #4 0x4fcf88 in mythread_function_queue_batch /home/hongxu/fuzzing/Targets/myhtml/myhtml-asan/source/mycore/./thread_queue.c:549:17
    #5 0x7ffff781f6da in start_thread (/lib/x86_64-linux-gnu/libpthread.so.0+0x76da)
    #6 0x7ffff6f2488e in clone /build/glibc-OTsEL5/glibc-2.27/misc/../sysdeps/unix/sysv/linux/x86_64/clone.S:95

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /home/hongxu/fuzzing/Targets/myhtml/myhtml-asan/source/mycore/utils/mchar_async.c:656:44 in mchar_async_cache_delete
Thread T2 created by T0 here:
    #0 0x47da3a in pthread_create (/home/hongxu/fuzzing/Targets/myhtml/myhtml-asan/bin/myhtml/callback_tree_node_high_level+0x47da3a)
    #1 0x4f997c in mythread_thread_create /home/hongxu/fuzzing/Targets/myhtml/myhtml-asan/source/myport/posix/mycore/./thread.c:39:8

==12692==ABORTING
```

In case it is not easily reproducible, we use the following command:
```bash
for i in `seq 1 1000`; do ./callback_tree_node_high_level $FILE &>/tmp/error_msg; grep AddressSanitizer /tmp/error_msg >/dev/null; if [[ $? -eq 0 ]];  then cat /tmp/error_msg; echo "\n$i: 
 $f"; break; fi; done
```

We will provide other pocs later.

I read that one of the things you wanted to support was javascript parsing, and DOM changes during processing, etc.  Could you please elaborate, or tell me if this was supported in the release?  I couldn't find javascript whatsoever searching although it may be plausible that I need to check V8 API and everything will be supported with some glue.  I just figured I'd ask since someone else may read the same information so it cannot hurt.

I want to disable the automatically applied URL encodings in `myhtml_attribute_add`. To be more specific, please check the following example:

```c++
#include <myhtml/api.h>

int main(int argc, const char * argv[])
{
    char html[] = "<img/>";

    // basic init
    myhtml_t* myhtml = myhtml_create();
    myhtml_init(myhtml, MyHTML_OPTIONS_DEFAULT, 1, 0);

    // init tree
    myhtml_tree_t* tree = myhtml_tree_create();
    myhtml_tree_init(tree, myhtml);

    // parse html
    myhtml_parse_fragment(tree, MyENCODING_UTF_8, html, strlen(html), MyHTML_TAG_DIV, MyHTML_NAMESPACE_HTML);

    // get first img from index
    myhtml_collection_t *div_list = myhtml_get_nodes_by_name(tree, NULL, "img", 3, NULL);
    myhtml_tree_node_t *node = div_list->list[0];

    // add an attr
    const char* srcValue = "custom_protocol://resource?id=1&name=apple";
    myhtml_attribute_add(node, "src", 3, srcValue, strlen(srcValue), MyENCODING_UTF_8);

    mycore_string_raw_t str = {0};
    myhtml_serialization_tree_buffer(myhtml_tree_get_document(tree), &str);
    printf("%s", str.data);

    // release resources
    myhtml_collection_destroy(div_list);
    myhtml_tree_destroy(tree);
    myhtml_destroy(myhtml);

    return 0;
}
```

The output is as follows:

```html
<html><img src="custom_protocol://resource?id=1&amp;name=apple"></img></html>
```

As you can see, the `&` between `id=1` and `name=apple` was automatically URL-encoded, which is not what I want. I want it to be the same as the one passed by me, in other words, I want the following result:

```html
<html><img src="custom_protocol://resource?id=1&name=apple"></img></html>
```

Is there anyway to do this?
When using the parser in MyHTML_OPTIONS_PARSE_MODE_SINGLE mode, it is initialized in myhtml_init like this:

```
        case MyHTML_OPTIONS_PARSE_MODE_SINGLE:
            if((status = myhtml_create_stream_and_batch(myhtml, 0, 0)))
                return status;
```

As this call specify that is need 0 stream, the `myhtml->thread_stream` is initialized to NULL.

```
myhtml->thread_stream = NULL;
```

But then, when parsing CDATA (in `myhtml_tokenizer_state_markup_declaration_open()`), the parser try to call `myhtml_tree_wait_for_last_done_token()`, which try to access unconditionally `tree->myhtml->thread_stream->timespec` and obviously it crashes (`thread_stream` is NULL).


Backtrace: 
```
  myhtml_tree_wait_for_last_done_token(tree=., token_for_wait=.) at tree.c:2457
  myhtml_tokenizer_state_markup_declaration_open(tree=., token_node=., html="…", html_offset=413, html_size=378555) at tokenizer.c:943
  myhtml_tokenizer_chunk_process(tree=., html="…", html_length=378555) at tokenizer.c:88
  myhtml_tokenizer_chunk(tree=., html="…", html_length=378555) at tokenizer.c:104
  myhtml_tokenizer_begin(tree=., html="…", html_length=378555) at tokenizer.c:42
  myhtml_parse_fragment(tree=., encoding=MyENCODING_DEFAULT, html="…") at main.c
```

set(CMAKE_DEBUG_POSTFIX d)
Hi all,
There is a redundant check against null issue found by Qihoo360 CodeSafe Team.
Details as bellow:

https://github.com/lexborisov/myhtml/blob/097039f1c71c9f34bb9177c378cb00fe69ecafa1/source/mycore/mystring.c#L78
if str_raw is a null pointer, function will return.

and 
https://github.com/lexborisov/myhtml/blob/097039f1c71c9f34bb9177c378cb00fe69ecafa1/source/mycore/mystring.c#L81
the pointer str_raw is dereferenced.

https://github.com/lexborisov/myhtml/blob/097039f1c71c9f34bb9177c378cb00fe69ecafa1/source/mycore/mystring.c#L86
there is no need to check pointer str_raw here.

Cheers
Qihoo360 CodeSafe Team
Environment：
cmake version 3.12.1
vs2017 x86

The C compiler identification is MSVC 19.15.26726.0
The CXX compiler identification is MSVC 19.15.26726.0
Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/bin/Hostx86/x86/cl.exe
Check for working C compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/bin/Hostx86/x86/cl.exe -- works
Detecting C compiler ABI info
Detecting C compiler ABI info - done
Detecting C compile features
Detecting C compile features - done
Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/bin/Hostx86/x86/cl.exe
Check for working CXX compiler: C:/Program Files (x86)/Microsoft Visual Studio/2017/Community/VC/Tools/MSVC/14.15.26726/bin/Hostx86/x86/cl.exe -- works
Detecting CXX compiler ABI info
Detecting CXX compiler ABI info - done
Detecting CXX compile features
Detecting CXX compile features - done
Looking for pthread.h
Looking for pthread.h - not found
Found Threads: TRUE  
CMake Error at CMakeLists.txt:21 (message):
  Could NOT find pthreads (missing: CMAKE_USE_PTHREADS_INIT)


Configuring incomplete, errors occurred!
See also "D:/Project/C++/myhtml-4.0.5-vs2017-build/CMakeFiles/CMakeOutput.log".
See also "D:/Project/C++/myhtml-4.0.5-vs2017-build/CMakeFiles/CMakeError.log".
1.program code,test.c

```C
#include <stdio.h>
#include <stdlib.h>
#include <myhtml/api.h>
#include "example.h"
struct res_html {
    char  *html;
    size_t size;
};
struct res_html load_html_file(const char* filename)
{
    FILE *fh = fopen(filename, "rb");
    if(fh == NULL) {
        fprintf(stderr, "Can't open html file: %s\n", filename);
        exit(EXIT_FAILURE);
    }
    
    if(fseek(fh, 0L, SEEK_END) != 0) {
        fprintf(stderr, "Can't set position (fseek) in file: %s\n", filename);
        exit(EXIT_FAILURE);
    }
    
    long size = ftell(fh);
    
    if(fseek(fh, 0L, SEEK_SET) != 0) {
        fprintf(stderr, "Can't set position (fseek) in file: %s\n", filename);
        exit(EXIT_FAILURE);
    }
    
    if(size <= 0) {
        fprintf(stderr, "Can't get file size or file is empty: %s\n", filename);
        exit(EXIT_FAILURE);
    }
    
    char *html = (char*)malloc(size + 1);
    if(html == NULL) {
        fprintf(stderr, "Can't allocate mem for html file: %s\n", filename);
        exit(EXIT_FAILURE);
    }
    
    size_t nread = fread(html, 1, size, fh);
    if (nread != size) {
        fprintf(stderr, "could not read %ld bytes (" MyCORE_FMT_Z " bytes done)\n", size, nread);
        exit(EXIT_FAILURE);
    }

    fclose(fh);
    
    struct res_html res = {html, (size_t)size};
    return res;
}

int main(int argc, const char * argv[])
{
    const char* path;
    const char* path_insert;

    if (argc == 3) {
        path = argv[1];
        path_insert = argv[2];
    }
    else {
        printf("Bad ARGV!\nUse: serialization_high_level <path_to_html_file>\n");
        exit(EXIT_FAILURE);
    }
    
    struct res_html res = load_html_file(path);
    struct res_html res_insert = load_html_file(path_insert);
    
    // basic init
    myhtml_t* myhtml = myhtml_create();
    mystatus_t status =  myhtml_init(myhtml, MyHTML_OPTIONS_DEFAULT, 1, 0);
    printf("status[%d]\n\n",status); 
    // init tree
    myhtml_tree_t* tree = myhtml_tree_create();
    myhtml_tree_init(tree, myhtml);
    
    // parse html
    myhtml_parse(tree, MyENCODING_UTF_8, res.html, res.size);
    
    mycore_string_raw_t str_raw;
    mycore_string_raw_clean_all(&str_raw);


    myhtml_tree_node_t* node_insert = NULL;
    myhtml_t* myhtml_insert = myhtml_create();
    myhtml_init(myhtml_insert, MyHTML_OPTIONS_DEFAULT, 1, 0);

    // init tree
    myhtml_tree_t* tree_insert = myhtml_tree_create();
    myhtml_tree_init(tree_insert, myhtml_insert);

    // parse html
    myhtml_parse(tree_insert, MyENCODING_UTF_8, res_insert.html, res_insert.size);
    node_insert = myhtml_tree_get_node_html(tree_insert);

    myhtml_tree_node_t* root = myhtml_tree_get_node_html(tree); 

    myhtml_tree_node_t* node_a = myhtml_node_create(tree, MyHTML_TAG_DIV, MyHTML_NAMESPACE_HTML);
    
    myhtml_tree_node_add_child(node_a,node_insert);

    myhtml_collection_t *collection = myhtml_get_nodes_by_tag_id(tree, NULL, MyHTML_TAG_FRAMESET, NULL);
    //printf("collection[%p],length[%d]\n",collection,collection->length);
    if(collection && collection->list && collection->length){
        printf("----------------------------------------\n");
        myhtml_tree_node_t *frame = collection->list[0];
        myhtml_tree_node_insert_before(frame,node_a);
        myhtml_node_delete(frame);
    }

    if(MyHTML_STATUS_OK == myhtml_serialization_tree_buffer(myhtml_tree_get_document(tree), &str_raw)) {
        printf("%s", str_raw.data);
    }
    
    mycore_string_raw_destroy(&str_raw, false);
    // release resources
    myhtml_tree_destroy(tree);
    myhtml_destroy(myhtml);
    
    free(res.html);
    
    return 0;
}
```

2.mk.sh
```bash
gcc test.c -g -o test -lmyhtml_static -lpthread -I/home/haima/myhtml/include -L/home/haima/myhtml/lib
```

3. main.html,red.html code
3.1 main.html
```HTML
<html lang="en">
<head>
    <meta http-equiv="Content-Type" content="text/html;charset=utf-8"/>
    <base target="_blank">
    <title>框架</title>
</head>
<frameset cols="50%,50%">
    <frame src="red.html" name="redFrame">
</frameset>
<body>
test code test code test code
</body>
</html>

3.2 red.html
<html>
<head>
<title>redFrame</title>
<style>
    body{ background-color: red; }
</style>
</head>
<body>
test content
</body>
</html>
<!--24256869360382548490090719-->
```

4.run parameter
issue description: `./test main.html red.html`

program crash to `myhtml_serialization_tree_buffer`, when deleting the red.html last line(24256869360382548490090719-->),the program is running normally
The program crashes when the last action of the html page is commented


Hi 
I am using myhtml to parse following html code
```HTML
<html>
<span class="c3">
<span class="sonne" title="Sonnenscheindauer"><img width="20" height="20" src="whatever1.img" alt="sun" />0.0 h</span>
<span class="regen" title="Niederschlagsmenge"><img width="20" height="20" src="whatever2.img" alt="rain" />0 mm</span>
</span>
</html>
```

I expect to get: the 0.0h and 0 mm

my understaning of the tree is:
tag:span class c3
 - tag: span 
    - attrib class
    - attrib title
 - tag: img
    - attrib width
    - attrib height
    - attrib src
 - 0 mm

I use:

node: span with class c3
subnode1: the tags span, img and the required text

pseudo code:
```C
subNode1 = myhtml_node_child(node);
while (subNode1 != NULL) {
  if (subNode1 != NULL) {printf("child: of %lu -> %s\n", myhtml_node_tag_id(node), myhtml_node_text( subNode1,&len ) );
  subNode1 = myhtml_node_next(subNode1 );
}
```
the compete source code is attached as well as the html file

I am able to parse e.g. the tags span class=regen, the img with it's attributes but not the text: "0 mm"
do you havea suggestion?
```