you guys still going to add image search on screen?

i'm waiting it for so long, it would make this code to the next level

i mean something like this: https://www.autohotkey.com/docs/commands/ImageSearch.htm
C:\Windows\system32>npm install robotjs

> robotjs@0.6.0 install C:\Windows\system32\node_modules\robotjs
> prebuild-install || node-gyp rebuild

prebuild-install WARN install No prebuilt binaries found (target=13.6.0 runtime=node arch=x64 libc= platform=win32)

C:\Windows\system32\node_modules\robotjs>if not defined npm_config_node_gyp (node "C:\Program Files\nodejs\node_modules\npm\node_modules\npm-lifecycle\node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js" rebuild )  else (node "C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\bin\node-gyp.js" rebuild )
MSBUILD : error MSB1009: Project file does not exist.
Switch: build/binding.sln
gyp ERR! build error
gyp ERR! stack Error: `C:\Program Files (x86)\Microsoft Visual Studio\2017\BuildTools\MSBuild\15.0\Bin\MSBuild.exe` failed with exit code: 1
gyp ERR! stack     at ChildProcess.onExit (C:\Program Files\nodejs\node_modules\npm\node_modules\node-gyp\lib\build.js:194:23)
gyp ERR! stack     at ChildProcess.emit (events.js:321:20)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:275:12)
gyp ERR! System Windows_NT 10.0.18362
gyp ERR! command "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\node_modules\\node-gyp\\bin\\node-gyp.js" "rebuild"
gyp ERR! cwd C:\Windows\system32\node_modules\robotjs
gyp ERR! node -v v13.6.0
gyp ERR! node-gyp -v v5.0.5
gyp ERR! not ok
npm WARN enoent ENOENT: no such file or directory, open 'C:\Windows\system32\package.json'
npm WARN system32 No description
npm WARN system32 No repository field.
npm WARN system32 No README data
npm WARN system32 No license field.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! robotjs@0.6.0 install: `prebuild-install || node-gyp rebuild`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the robotjs@0.6.0 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\ImChl\AppData\Roaming\npm-cache\_logs\2020-01-11T02_22_24_529Z-debug.log

C:\Windows\system32>

<!--- Provide a general summary of the issue in the Title above. -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen. -->
<!--- If you're suggesting a change/improvement, tell us how it should work. -->
robot.scrollMouse(50, 50);
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior. -->
<!--- If suggesting a change/improvement, explain the difference from current behavior. -->
It not work;
## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change. -->
when I replaced 
	SendInput(2, mouseScrollInputs, sizeof(mouseScrollInputs));
with
        SendInput(1, &mouseScrollInputs[0], sizeof(mouseScrollInputs[0]));
        SendInput(1, &mouseScrollInputs[1], sizeof(mouseScrollInputs[1]));
It work;

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in. -->
* RobotJS version:0.6.0
* Operating System:win10


The scrollMouse does not work, or maybe I doing something wrong?

<!--- Provide a general summary of the issue in the Title above. -->

## Expected Behavior
I'm trying to type a string such as 'AaBbCc!@#$%^' expecting all characters to show up in the VM. (I'm on Mac, typing in an Ubuntu VM through VMWare Fusion).

## Current Behavior
The typeString function only prints the letter a for every character that you type
The keyTap function works for lowercase letters but doesn't work for uppercase letter and symbols.

I tried it on a Windows 10 VM, same thing.

I tried holding the shift key then typing the key before releasing the shift key, same result.

Am i doing something wrong or do the typeString function and modifier keys not work in other OSes when RobotJS is compiled for a specific system? I would assume VM software interprets and converts any codes to the child OS.

Tried on VMWare Fusion and VirtualBox with the exact same result. The chars '*' and '+' seem to be working though which is weird.

I tried doing what someone said worked for them [here](https://www.bountysource.com/issues/44049938-typestring-and-keytap-write-semicolon-for-colon-on-ubuntu-vbox) but it didn't work for me, the modifier keys aren't triggering.

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in. -->
* RobotJS version: 0.5.1
* Node.js version: 8.16.2
* npm version: 6.4.1
* Operating System: MacOS Mojave

add signed support and virtual screen mapping to moveMouseSmooth. add small distance based delay modifier.

Fixed merge conflicts from https://github.com/octalmage/robotjs/pull/356 
`robot.setKeyboardDelay(1);
robot.typeString('*cough');
`

is much slower than having *cough set in the clipboard and doing

`	robot.keyToggle('control','down')
	robot.keyTap('v');`

I think it could be the blocking nature of the module, and the fact that my PC is very slow. 
Hi All,

Thx in advance !

I tried :
`npm install git+https://git@github.com/octalmage/robotjs`

I get the following errors :
`> robotjs@0.5.1 install /home/osboxes/node_modules/robotjs
> prebuild-install || node-gyp rebuild

make : on entre dans le répertoire « /home/osboxes/node_modules/robotjs/build »
  CXX(target) Release/obj.target/robotjs/src/robotjs.o
cc1plus: warning: command line option ‘-Wbad-function-cast’ is valid for C/ObjC but not for C++
In file included from ../src/robotjs.cc:2:
../../nan/nan.h: In function ‘void Nan::AsyncQueueWorker(Nan::AsyncWorker*)’:
../../nan/nan.h:2298:62: warning: cast between incompatible function types from ‘void (*)(uv_work_t*)’ {aka ‘void (*)(uv_work_s*)’} to ‘uv_after_work_cb’ {aka ‘void (*)(uv_work_s*, int)’} [-Wcast-function-type]
 2298 |     , reinterpret_cast<uv_after_work_cb>(AsyncExecuteComplete)
      |                                                              ^
In file included from ../src/robotjs.cc:1:
../src/robotjs.cc: At global scope:
/home/osboxes/.cache/node-gyp/13.1.0/include/node/node.h:603:43: warning: cast between incompatible function types from ‘void (*)(Nan::ADDON_REGISTER_FUNCTION_ARGS_TYPE)’ {aka ‘void (*)(v8::Local<v8::Object>)’} to ‘node::addon_register_func’ {aka ‘void (*)(v8::Local<v8::Object>, v8::Local<v8::Value>, void*)’} [-Wcast-function-type]
  603 |       (node::addon_register_func) (regfunc),                          \
      |                                           ^
/home/osboxes/.cache/node-gyp/13.1.0/include/node/node.h:637:3: note: in expansion of macro ‘NODE_MODULE_X’
  637 |   NODE_MODULE_X(modname, regfunc, NULL, 0)  // NOLINT (readability/null_usage)
      |   ^~~~~~~~~~~~~
../src/robotjs.cc:907:1: note: in expansion of macro ‘NODE_MODULE’
  907 | NODE_MODULE(robotjs, InitAll)
      | ^~~~~~~~~~~
In file included from /home/osboxes/.cache/node-gyp/13.1.0/include/node/node.h:63,
                 from ../src/robotjs.cc:1:
/home/osboxes/.cache/node-gyp/13.1.0/include/node/v8.h: In instantiation of ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = node::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)]’:
/home/osboxes/.cache/node-gyp/13.1.0/include/node/node_object_wrap.h:84:78:   required from here
/home/osboxes/.cache/node-gyp/13.1.0/include/node/v8.h:10100:16: warning: cast between incompatible function types from ‘v8::WeakCallbackInfo<node::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<node::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
10100 |                reinterpret_cast<Callback>(callback), type);
      |                ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
/home/osboxes/.cache/node-gyp/13.1.0/include/node/v8.h: In instantiation of ‘void v8::PersistentBase<T>::SetWeak(P*, typename v8::WeakCallbackInfo<P>::Callback, v8::WeakCallbackType) [with P = Nan::ObjectWrap; T = v8::Object; typename v8::WeakCallbackInfo<P>::Callback = void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)]’:
../../nan/nan_object_wrap.h:65:61:   required from here
/home/osboxes/.cache/node-gyp/13.1.0/include/node/v8.h:10100:16: warning: cast between incompatible function types from ‘v8::WeakCallbackInfo<Nan::ObjectWrap>::Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<Nan::ObjectWrap>&)’} to ‘Callback’ {aka ‘void (*)(const v8::WeakCallbackInfo<void>&)’} [-Wcast-function-type]
../src/robotjs.cc: In function ‘Nan::NAN_METHOD_RETURN_TYPE keyToggle(Nan::NAN_METHOD_ARGS_TYPE)’:
../src/robotjs.cc:592:17: warning: ‘down’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  592 |    toggleKeyCode(key, down, flags);
      |    ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~
  CC(target) Release/obj.target/robotjs/src/deadbeef_rand.o
  CC(target) Release/obj.target/robotjs/src/mouse.o
  CC(target) Release/obj.target/robotjs/src/keypress.o
../src/keypress.c: In function ‘typeString’:
../src/keypress.c:274:16: warning: ‘n’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  274 |  unsigned long n;
      |                ^
  CC(target) Release/obj.target/robotjs/src/keycode.o
  CC(target) Release/obj.target/robotjs/src/screen.o
  CC(target) Release/obj.target/robotjs/src/screengrab.o
  CC(target) Release/obj.target/robotjs/src/snprintf.o
../src/snprintf.c: In function ‘portable_vsnprintf’:
../src/snprintf.c:557:35: warning: operand of ?: changes signedness from ‘long int’ to ‘size_t’ {aka ‘long unsigned int’} due to unsignedness of other operand [-Wsign-compare]
  557 |       size_t n = !q ? strlen(p) : (q-p);
      |                                   ^~~~~
../src/snprintf.c:704:42: warning: operand of ?: changes signedness from ‘long int’ to ‘size_t’ {aka ‘long unsigned int’} due to unsignedness of other operand [-Wsign-compare]
  704 |             str_arg_l = !q ? precision : (q-str_arg);
      |                                          ^~~~~~~~~~~
../src/snprintf.c:943:62: warning: comparison of integer expressions of different signedness: ‘int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
  943 |             fast_memset(str+str_l, (zero_padding?'0':' '), (n>avail?avail:n));
      |                                                              ^
../src/snprintf.c:372:35: note: in definition of macro ‘fast_memset’
  372 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:943:75: warning: operand of ?: changes signedness from ‘int’ to ‘size_t’ {aka ‘long unsigned int’} due to unsignedness of other operand [-Wsign-compare]
  943 |             fast_memset(str+str_l, (zero_padding?'0':' '), (n>avail?avail:n));
      |                                                                           ^
../src/snprintf.c:372:35: note: in definition of macro ‘fast_memset’
  372 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:960:47: warning: comparison of integer expressions of different signedness: ‘int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
  960 |             fast_memcpy(str+str_l, str_arg, (n>avail?avail:n));
      |                                               ^
../src/snprintf.c:365:35: note: in definition of macro ‘fast_memcpy’
  365 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:960:60: warning: operand of ?: changes signedness from ‘int’ to ‘size_t’ {aka ‘long unsigned int’} due to unsignedness of other operand [-Wsign-compare]
  960 |             fast_memcpy(str+str_l, str_arg, (n>avail?avail:n));
      |                                                            ^
../src/snprintf.c:365:35: note: in definition of macro ‘fast_memcpy’
  365 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:969:43: warning: comparison of integer expressions of different signedness: ‘int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
  969 |             fast_memset(str+str_l, '0', (n>avail?avail:n));
      |                                           ^
../src/snprintf.c:372:35: note: in definition of macro ‘fast_memset’
  372 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:969:56: warning: operand of ?: changes signedness from ‘int’ to ‘size_t’ {aka ‘long unsigned int’} due to unsignedness of other operand [-Wsign-compare]
  969 |             fast_memset(str+str_l, '0', (n>avail?avail:n));
      |                                                        ^
../src/snprintf.c:372:35: note: in definition of macro ‘fast_memset’
  372 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:981:27: warning: comparison of integer expressions of different signedness: ‘int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
  981 |                         (n>avail?avail:n));
      |                           ^
../src/snprintf.c:365:35: note: in definition of macro ‘fast_memcpy’
  365 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:981:40: warning: operand of ?: changes signedness from ‘int’ to ‘size_t’ {aka ‘long unsigned int’} due to unsignedness of other operand [-Wsign-compare]
  981 |                         (n>avail?avail:n));
      |                                        ^
../src/snprintf.c:365:35: note: in definition of macro ‘fast_memcpy’
  365 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:992:43: warning: comparison of integer expressions of different signedness: ‘int’ and ‘size_t’ {aka ‘long unsigned int’} [-Wsign-compare]
  992 |             fast_memset(str+str_l, ' ', (n>avail?avail:n));
      |                                           ^
../src/snprintf.c:372:35: note: in definition of macro ‘fast_memset’
  372 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:992:56: warning: operand of ?: changes signedness from ‘int’ to ‘size_t’ {aka ‘long unsigned int’} due to unsignedness of other operand [-Wsign-compare]
  992 |             fast_memset(str+str_l, ' ', (n>avail?avail:n));
      |                                                        ^
../src/snprintf.c:372:35: note: in definition of macro ‘fast_memset’
  372 |   { register size_t nn = (size_t)(n); \
      |                                   ^
../src/snprintf.c:564:19: warning: variable ‘starting_p’ set but not used [-Wunused-but-set-variable]
  564 |       const char *starting_p;
      |                   ^~~~~~~~~~
../src/snprintf.c:369:48: warning: ‘str_arg’ may be used uninitialized in this function [-Wmaybe-uninitialized]
  369 |       for (ss=(s), dd=(d); nn>0; nn--) *dd++ = *ss++; } }
      |                                                ^
../src/snprintf.c:573:19: note: ‘str_arg’ was declared here
  573 |       const char *str_arg;      /* string address in case of string argument */
      |                   ^~~~~~~
  CC(target) Release/obj.target/robotjs/src/MMBitmap.o
  CC(target) Release/obj.target/robotjs/src/xdisplay.o
../src/xdisplay.c: In function ‘setXDisplay’:
../src/xdisplay.c:53:16: warning: implicit declaration of function ‘strdup’ [-Wimplicit-function-declaration]
   53 |  displayName = strdup(name);
      |                ^~~~~~
../src/xdisplay.c:53:16: warning: incompatible implicit declaration of built-in function ‘strdup’
  SOLINK_MODULE(target) Release/obj.target/robotjs.node
`


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in. -->
* RobotJS version: current master
* Node.js version: v13.1.0
* npm version: 6.12.1
* Operating System: Ubuntu 19.10

This should replace https://github.com/octalmage/robotjs/pull/357