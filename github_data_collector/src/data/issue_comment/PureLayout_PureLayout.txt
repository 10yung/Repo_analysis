The script described here https://github.com/PureLayout/PureLayout/wiki/App-Extensions used to work perfectly until some recent changes on CocoaPods. On CocoaPods 1.8.0 ~ 1.8.4 the script fails to enter the conditional block, meaning that the `GCC_PREPROCESSOR_DEFINITIONS` are never set. 

While debugging the script, I found out that the `APPLICATION_EXTENSION_API_ONLY` flag value is not set during the execution (it's blank). 

If I revert the CocoaPods version to 1.7.5, the script works fine.

Any ideas?

Bumps [nokogiri](https://github.com/sparklemotion/nokogiri) from 1.8.2 to 1.8.5.
<details>
<summary>Changelog</summary>

*Sourced from [nokogiri's changelog](https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md).*

> ## 1.8.5 / 2018-10-04
> 
> ### Security Notes
> 
> [MRI] Pulled in upstream patches from libxml2 that address CVE-2018-14404 and CVE-2018-14567. Full details are available in [#1785](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1785). Note that these patches are not yet (as of 2018-10-04) in an upstream release of libxml2.
> 
> 
> ### Bug fixes
> 
> * [MRI] Fix regression in installation when building against system libraries, where some systems would not be able to find libxml2 or libxslt when present. (Regression introduced in v1.8.3.) [#1722](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1722)
> * [JRuby] Fix node reparenting when the destination doc is empty. [#1773](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1773)
> 
> 
> ## 1.8.4 / 2018-07-03
> 
> ### Bug fixes
> 
> * [MRI] Fix memory leak when creating nodes with namespaces. (Introduced in v1.5.7) [#1771](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1771)
> 
> 
> ## 1.8.3 / 2018-06-16
> 
> ### Security Notes
> 
> [MRI] Behavior in libxml2 has been reverted which caused CVE-2018-8048 (loofah gem), CVE-2018-3740 (sanitize gem), and CVE-2018-3741 (rails-html-sanitizer gem). The commit in question is here:
> 
> > https://github.com/GNOME/libxml2/commit/960f0e2
> 
> and more information is available about this commit and its impact here:
> 
> > [flavorjones/loofah#144](https://github-redirect.dependabot.com/flavorjones/loofah/issues/144)
> 
> This release simply reverts the libxml2 commit in question to protect users of Nokogiri's vendored libraries from similar vulnerabilities.
> 
> If you're offended by what happened here, I'd kindly ask that you comment on the upstream bug report here:
> 
> > https://bugzilla.gnome.org/show_bug.cgi?id=769760
> 
> 
> ### Dependencies
> 
> * [MRI] libxml2 is updated from 2.9.7 to 2.9.8
> 
> 
> ### Features
> 
> * Node#classes, #add_class, #append_class, and #remove_class are added.
> * NodeSet#append_class is added.
> * NodeSet#remove_attribute is a new alias for NodeSet#remove_attr.
> * NodeSet#each now returns an Enumerator when no block is passed (Thanks, [@&#8203;park53kr](https://github.com/park53kr)!)
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`e28fa4b`](https://github.com/sparklemotion/nokogiri/commit/e28fa4bb2ed6844c3c63f58062d034e7b99fc90c) version bump to v1.8.5
- [`712edef`](https://github.com/sparklemotion/nokogiri/commit/712edef8a8c7fa593e09517891d336758af42cba) update changelog
- [`7feb4c1`](https://github.com/sparklemotion/nokogiri/commit/7feb4c167a9ae1ba4e87923597ba7e7b309b1713) Merge branch 'fix-1773'
- [`7cc6cf6`](https://github.com/sparklemotion/nokogiri/commit/7cc6cf6a74bd718b46182f0e646b63ff0a00f728) Organize imports in XmlNode.java.
- [`1697442`](https://github.com/sparklemotion/nokogiri/commit/169744261c5c023dff40de0811a826ad4d1fcc05) Allow reparenting nodes to be a child of an empty document.
- [`7b8cd0f`](https://github.com/sparklemotion/nokogiri/commit/7b8cd0f5b15a926e92c869b450dd6f71cdd17b61) Merge pull request [#1786](https://github-redirect.dependabot.com/sparklemotion/nokogiri/issues/1786) from sparklemotion/1785-canonical-usns
- [`5bff4bb`](https://github.com/sparklemotion/nokogiri/commit/5bff4bb3f1692069c617f4333b2ccc5570f0f414) pull in upstream libxml2 patches
- [`c232226`](https://github.com/sparklemotion/nokogiri/commit/c232226448a44bb81220d3750a6453a0aef88fb1) changelog
- [`862b88f`](https://github.com/sparklemotion/nokogiri/commit/862b88f39264b7b5e223a63e3d4d0eeade4db9ff) changelog
- [`b3750eb`](https://github.com/sparklemotion/nokogiri/commit/b3750eb71e101287aa0e7a231232222c7213b3f3) remove `-Wextra` CFLAG
- Additional commits viewable in [compare view](https://github.com/sparklemotion/nokogiri/compare/v1.8.2...v1.8.5)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nokogiri&package-manager=bundler&previous-version=1.8.2&new-version=1.8.5)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/PureLayout/PureLayout/network/alerts).

</details>
Hi,

I've created a custom view that contains 2 labels and a button. When I set the custom view to be auto centered in its superview, I can no longer tap the button.

Here's the code I'm using to init the view and add it to a view controller inside the viewDidLoad function:
```
let errorView = ErrorView(frame: CGRect(x: 120, y: 150, width: 100, height: 100))
self.view.addSubview(errorView)
errorView.autoCenterInSuperview() // ---> This is the problematic line.
```

This is the custom view class:
```
import UIKit
import PureLayout

class ErrorView: UIView {
    
    var contentView: UIView!
    
    var titleLabel: UILabel!
    var subTitleLabel: UILabel!
    var tryAgainButton: UIButton!
    
    required init?(coder aDecoder: NSCoder) {
        super.init(coder: aDecoder)
        setup()
    }
    
    override init(frame: CGRect) {
        super.init(frame: frame)
        setup()
    }
    
    public func setup() {
        contentView = UIView()
        contentView.backgroundColor = .red
        contentView.widthAnchor.constraint(lessThanOrEqualToConstant: 300).isActive = true
        contentView.heightAnchor.constraint(lessThanOrEqualToConstant: 200).isActive = true
        self.addSubview(contentView)
        contentView.autoCenterInSuperview()
        
        titleLabel = UILabel()
        titleLabel.backgroundColor = .green
        titleLabel.font = UIFont.preferredFont(forTextStyle: .title2)
        titleLabel.adjustsFontForContentSizeCategory = true
        titleLabel.text = "Failed to load this screen"
        contentView.addSubview(titleLabel)
        titleLabel.textAlignment = .center
        titleLabel.autoAlignAxis(.vertical, toSameAxisOf: contentView)
        titleLabel.autoPinEdge(.top, to: .top, of: contentView, withOffset: 16)
        titleLabel.autoPinEdge(.left, to: .left, of: contentView, withOffset: 16)
        titleLabel.autoPinEdge(.right, to: .right, of: contentView, withOffset: -16)
        
        subTitleLabel = UILabel()
        subTitleLabel.backgroundColor = .cyan
        subTitleLabel.font = UIFont.preferredFont(forTextStyle: .body)
        subTitleLabel.adjustsFontForContentSizeCategory = true
        subTitleLabel.text = "Please contact support."
        contentView.addSubview(subTitleLabel)
        subTitleLabel.textAlignment = .center
        subTitleLabel.autoAlignAxis(.vertical, toSameAxisOf: contentView)
        subTitleLabel.autoPinEdge(.top, to: .bottom, of: titleLabel, withOffset: 16)
        subTitleLabel.autoPinEdge(.left, to: .left, of: titleLabel, withOffset: 16)
        subTitleLabel.autoPinEdge(.right, to: .right, of: titleLabel, withOffset: -16)
        
        tryAgainButton = UIButton(type: .system)
        tryAgainButton.titleLabel?.font = UIFont.preferredFont(forTextStyle: .headline)
        tryAgainButton.titleLabel?.adjustsFontForContentSizeCategory = true
        tryAgainButton.frame = CGRect(x: 0, y: 0, width: 10, height: 50)
        tryAgainButton.backgroundColor = .white
        tryAgainButton.setTitle("Try again", for: .normal)
        tryAgainButton.addTarget(self, action: #selector(buttonAction), for: .touchUpInside)
        contentView.addSubview(tryAgainButton)
        tryAgainButton.autoAlignAxis(.vertical, toSameAxisOf: contentView)
        tryAgainButton.autoPinEdge(.top, to: .bottom, of: subTitleLabel, withOffset: 16)
    }
    
    @objc func buttonAction() {
        print("****** clickable")
    }
    
}
```

What could be the issue here? Is this a library bug? Or did I configured anything wrong?
This is how the view looks:

![Screenshot 2019-08-12 at 15 34 23](https://user-images.githubusercontent.com/8367143/62877529-c0051700-bd16-11e9-9fe1-9eaa3e6ec8c4.png)

Opening a pull request to see if the pr build still works. 
Hello! First of all, thanks for this awesome lib!

I noticed a bug regarding `autoCreateConstraintsWithoutInstalling`

## Description
I'm using `ARSCNView`. Unfortunately, if I allow rotation, it makes an ugly effect. That's why I'm manually rotating the view. I use PureLayout for achieving constraints.

I'm using this piece of code to fake the landscapeLeft orientation:
![screen shot 2018-10-01 at 12 13 21](https://user-images.githubusercontent.com/12101394/46297587-6919a780-c573-11e8-8a90-ae62c6a554ac.png)


## Bug
What I want to do is change the constraints of the container view while maintaing the constraints of the inner view. However, when I tried to to this :
![screen shot 2018-10-01 at 12 08 00](https://user-images.githubusercontent.com/12101394/46297477-235cdf00-c573-11e8-89d6-7cc24cf21fc0.png)

The outcome is this:
![img_0103](https://user-images.githubusercontent.com/12101394/46297646-89e1fd00-c573-11e8-97e1-53bd4ab3624c.PNG)

## Expected result
I commented that piece of code and the outcome is the desired:
### code
![screen shot 2018-10-01 at 12 08 31](https://user-images.githubusercontent.com/12101394/46297683-a716cb80-c573-11e8-804e-dd89f4a8b09e.png)

### outcome
![img_0104](https://user-images.githubusercontent.com/12101394/46297670-9d8d6380-c573-11e8-8359-608a032dbe2a.PNG)

So, maybe you can help me understand how `autoCreateConstraintsWithoutInstalling` affect this?

Thanks!!




I have NSCollectionView in my app and its items have a border. When I use PureLayout for stretching NSCollectionView, items' border disappears. But the strange part is when I resize a window to make it very small and resize it back to normal size - border appears in some items.

Also, if I try to set a breakpoint and print `view.layer?.borderWidth` it will be `nil`:

![image](https://user-images.githubusercontent.com/20713191/45564521-244efa80-b86a-11e8-81f2-351c06beac19.png)


ViewController:
```swift
import PureLayout

class ViewController: NSViewController {
    let collectionView = NSCollectionView()
    
    let cardId = NSUserInterfaceItemIdentifier("cardId")
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let flowLayout = NSCollectionViewFlowLayout()
        flowLayout.minimumInteritemSpacing = 0
        flowLayout.minimumLineSpacing = 0
        
        collectionView.collectionViewLayout = flowLayout
        
        collectionView.frame = NSRect(x: 0, y: 0, width: view.frame.width, height: view.frame.height)
        collectionView.delegate = self
        collectionView.dataSource = self
        
        let nib = NSNib(nibNamed: NSNib.Name(rawValue: "Card"), bundle: nil)
        collectionView.register(nib, forItemWithIdentifier: cardId)
        
        view.addSubview(collectionView)
        
        collectionView.autoPinEdge(toSuperviewEdge: .top)
        collectionView.autoPinEdge(toSuperviewEdge: .right)
        collectionView.autoPinEdge(toSuperviewEdge: .bottom)
        collectionView.autoPinEdge(toSuperviewEdge: .left)
    }
}

extension ViewController: NSCollectionViewDataSource, NSCollectionViewDelegate, NSCollectionViewDelegateFlowLayout {
    func collectionView(_ collectionView: NSCollectionView, numberOfItemsInSection section: Int) -> Int {
        return 6
    }
    
    func collectionView(_ collectionView: NSCollectionView, itemForRepresentedObjectAt indexPath: IndexPath) -> NSCollectionViewItem {
        let card = collectionView.makeItem(withIdentifier: cardId, for: indexPath) as! Card

        return card
    }
    
    func collectionView(_ collectionView: NSCollectionView, layout collectionViewLayout: NSCollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> NSSize {
        return CGSize(width: 226, height: 226)
    }
}
```

Card.swift:
```swift
import PureLayout

class Card: NSCollectionViewItem {
    
    // some other code

    override func viewDidAppear() {
        super.viewDidAppear()
        
        view.layer?.borderWidth = 1
        view.layer?.borderColor = .black
    }
}
```

How initially app looks like:
![image](https://user-images.githubusercontent.com/20713191/45564049-a4746080-b868-11e8-8358-037ddda9b707.png)
Then we resize it to make it bigger:
![image](https://user-images.githubusercontent.com/20713191/45564057-a9391480-b868-11e8-84c1-93d258dcc874.png)
Then we resize it to make it smaller:
![image](https://user-images.githubusercontent.com/20713191/45564059-ad653200-b868-11e8-853a-ab436764e8c1.png)
Then we again resize it to make it bigger and woohoo, some borders are visible:
![image](https://user-images.githubusercontent.com/20713191/45564069-b1914f80-b868-11e8-8ee4-fecc907f94ef.png)

https://github.com/PureLayout/PureLayout/blob/637812ea5845ab346456e2a5e830757c38a8330e/PureLayout/PureLayout/ALView%2BPureLayout.m#L343-L360

should most probably be changed as the other similar methods were changed in #212.
So in the case of:

```obj-c
[view1 autoConstrainAttribute:ALAttributeLeading toAttribute:ALAttributeTrailing ofView:view2];
```

it would set `translatesAutoresizingMaskIntoConstraints` to `NO` for `view2` too, instead of only setting it for `view1` only.
I try to use swift package manager to resolve PureLayout, but a "no manifest error" occur.
I wonder is is possible to support swift package manager?