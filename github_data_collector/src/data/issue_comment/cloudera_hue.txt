Is the issue already present in https://github.com/cloudera/hue/issues or discussed in the forum https://discourse.gethue.com?
no

What is the Hue version or source? (e.g. open source 4.5, CDH 5.16, CDP 1.0...)
4.5

Is there a way to help reproduce it?
In spark/conf.py here- https://github.com/cloudera/hue/blob/master/apps/spark/src/spark/conf.py#L89
the value for USE_SASL is set to false by default and is not logically computed based on hiveserver2's auth config.

Above value is referenced here- https://github.com/cloudera/hue/blob/master/apps/beeswax/src/beeswax/server/dbms.py#L199 in beeswax. This results in broken integration when hiveserver2 is using kerberos.

I would like to know if we can default this to the value we get from HIVE_USE_SASL.get()
Or was there a reasoning around not doing this in first place?

@jdesjean @romainr 
When displaying a Spark Job in the Job Browser (_http://localhost:8888hue/jobbrowser/#!id=application..._) the properties table is empty :
<img width="1437" alt="Capture d’écran 2020-01-07 à 19 08 57" src="https://user-images.githubusercontent.com/5543433/71917816-436d4c00-3181-11ea-80f4-fbc37a4f80e9.png">

It comes from a templating error : 
`knockout-latest.js:79 Uncaught TypeError: Unable to process binding "with: function(){return $root.job() }"
Message: Unable to process binding "if: function(){return mainType() =='jobs' }"
Message: Unable to process binding "template: function(){return { name:'job-page'} }"
Message: Unable to process binding "if: function(){return type() =='SPARK' }"
Message: Unable to process binding "template: function(){return { name:'job-spark-page',data:$root.job()} }"
Message: Unable to process binding "foreach: function(){return properties['metadata'] }"
Message: Unable to process binding "template: function(){return { name:'link-or-text',data:{ name:name(),value:value()}} }"
Message: name is not a function`

This bug is new un hue 4.6.0. It might be related to knockout upgrade from [3.4.2](https://github.com/cloudera/hue/blob/branch-4.5.0/package.json#L39) to [3.5.1](https://github.com/cloudera/hue/blob/branch-4.6.0/package.json#L47)
Including impala string function in the sql will get a syntax error
![image](https://user-images.githubusercontent.com/14886044/71613613-7bedb280-2be2-11ea-80cb-55517746a96d.png)

version 4.6

modal-backdrop in front of modal form
![Screen Shot 2019-12-26 at 8 27 42 AM](https://user-images.githubusercontent.com/6674285/71482874-b0640780-27b9-11ea-8a98-67930c5a4c83.png)

modal-backdrop z-index - 1040
![Screen Shot 2019-12-26 at 8 10 16 AM](https://user-images.githubusercontent.com/6674285/71482954-37b17b00-27ba-11ea-8471-c87720902c60.png)

input box z-index - 1050
![Screen Shot 2019-12-26 at 8 31 09 AM](https://user-images.githubusercontent.com/6674285/71482980-4dbf3b80-27ba-11ea-8daa-5228ec5c8d31.png)

if i move the z-index of the modal-backdrop to 1009 then everything works, but it defeats the purpose of the backdrop since everything is interactive
![Screen Shot 2019-12-26 at 8 34 05 AM](https://user-images.githubusercontent.com/6674285/71483020-91b24080-27ba-11ea-9afa-c00663807a49.png)

So what is 1010 you ask?  it is the banner which has a position:relative.  by removing its z-index everything works normally.

![Screen Shot 2019-12-26 at 8 51 35 AM](https://user-images.githubusercontent.com/6674285/71483525-20c05800-27bd-11ea-9632-223589dd03a9.png)

I have no idea how you want to deal with this, but these are the repo steps.

When connecting presto through sqlalchemy, each query will generate a new uuid and save all previous results, which is not reasonable.

```
def execute(self, notebook, snippet):
    guid = uuid.uuid4().hex
    LOG.info("FDD_sql_alchemy guid is %s" % guid)
    engine = self._create_engine()
    connection = engine.connect()
    result = connection.execution_options(stream_results=True).execute(snippet['statement'])
    cache = {
      'connection': connection,
      'result': result,
      'meta': [{
          'name': col[0] if (type(col) is tuple or type(col) is dict) else col.name if hasattr(col, 'name') else col,
          'type': 'STRING_TYPE',
          'comment': ''
        } for col in result.cursor.description]
    }
    CONNECTION_CACHE[guid] = cache
```


change guid = self.user.username Is it better？
Table Browser does not display column descriptions and errors occur when manually adding comments.

version:cdh hue4.3.0

![image](https://user-images.githubusercontent.com/19286291/70844551-f0ec8880-1e7d-11ea-8f8c-e7ba91e0c098.png)

/var/log/hue/runcpserver.log：

1:34:07 PM	ERROR	exception	
Internal Server Error: /hue/
Traceback (most recent call last):
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/build/env/lib/python2.7/site-packages/Django-1.11-py2.7.egg/django/core/handlers/exception.py", line 41, in inner
    response = get_response(request)
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/build/env/lib/python2.7/site-packages/Django-1.11-py2.7.egg/django/core/handlers/base.py", line 249, in _legacy_get_response
    response = self._get_response(request)
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/build/env/lib/python2.7/site-packages/Django-1.11-py2.7.egg/django/core/handlers/base.py", line 187, in _get_response
    response = self.process_exception_by_middleware(e, request)
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/build/env/lib/python2.7/site-packages/Django-1.11-py2.7.egg/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/build/env/lib/python2.7/site-packages/Django-1.11-py2.7.egg/django/utils/decorators.py", line 185, in inner
    return func(*args, **kwargs)
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/desktop/core/src/desktop/views.py", line 97, in hue
    'cluster': clusters[0]['type'] if clusters else None
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/desktop/core/src/desktop/lib/django_util.py", line 223, in render
    return render_json(data, request.GET.get("callback"), status=status)
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/desktop/core/src/desktop/lib/django_util.py", line 298, in render_json
    json = encode_json(data, indent)
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/desktop/core/src/desktop/lib/django_util.py", line 270, in encode_json
    return json.dumps(data, indent=indent, cls=Encoder)
  File "/usr/lib64/python2.7/json/__init__.py", line 250, in dumps
    sort_keys=sort_keys, **kw).encode(obj)
  File "/usr/lib64/python2.7/json/encoder.py", line 209, in encode
    chunks = list(chunks)
  File "/usr/lib64/python2.7/json/encoder.py", line 434, in _iterencode
    for chunk in _iterencode_dict(o, _current_indent_level):
  File "/usr/lib64/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib64/python2.7/json/encoder.py", line 408, in _iterencode_dict
    for chunk in chunks:
  File "/usr/lib64/python2.7/json/encoder.py", line 442, in _iterencode
    o = _default(o)
  File "/opt/cloudera/parcels/CDH-6.2.0-1.cdh6.2.0.p0.967373/lib/hue/desktop/core/src/desktop/lib/django_util.py", line 76, in default
    return json.JSONEncoder.default(self, o)
  File "/usr/lib64/python2.7/json/encoder.py", line 184, in default
    raise TypeError(repr(o) + " is not JSON serializable")
TypeError: <desktop.appmanager.DesktopModuleInfo object at 0x7f54ba035310> is not JSON serializable
Is the issue already present in https://github.com/cloudera/hue/issues or discussed in the forum https://discourse.gethue.com?

No.

What is the Hue version or source? (e.g. open source 4.5, CDH 5.16, CDP 1.0...)

CDH 6.3.1 Hue4.2

Is there a way to help reproduce it?

No.

Our team have met a problem when using hue recently, that the active requests is running very high and directly let hue cannot use and strangely we do not use it very busy. I have search hue document but I have not find the meaning of active requests and why it sometimes running so high, anyone know this?

![image](https://user-images.githubusercontent.com/14816130/70488881-03408c80-1b35-11ea-8cc6-b81cf7d20799.png)

So currently, there isn't anything that contains the result container so it overflows.  this code limits it to 400px when not in full screen and 800px when in full screen so that the scrollbar shows up.  It also works much better with browser zoom.

Notes:  the best way to do this is to have the window sizes calc'd in the view model so that I don't need to hard code this.  If they were there, we could just reference them, currently the $(window).resize() event is distributed all over the codebase.

![Screen Shot 2019-12-08 at 9 51 24 AM](https://user-images.githubusercontent.com/6674285/70398294-c6f31c00-19ce-11ea-970e-6e04b8ac56df.png)

Is the issue already present in https://github.com/cloudera/hue/issues or discussed in the forum https://discourse.gethue.com?

no

What is the Hue version or source? (e.g. open source 4.5, CDH 5.16, CDP 1.0...)

n/a

Is there a way to help reproduce it?

n/a
Assign the hiveserver2 address according to the hash value of the username. When the connected hiveserver2 is down, it will automatically find other available hiveserver2 for reconnection