The only way I've found so far is to grep for this line 
`# Based on romkatv/powerlevel10k/config/p10k-lean.zsh, checksum 33624.`
in the `~/p10k.zsh` file.

```zsh
local lines=( "${(@f)"$(<$__p9k_cfg_path)"}" )
if [[ ${(@M)lines:#(#b)*p10k-(*).zsh*} ]]; then
  echo $match[1]
fi
```

But I'm wondering if there isn't an easier way to do it. Thanks!
Requires https://github.com/romkatv/gitstatus/issues/89

This would be really useful for the reasons I went into [here](https://fahn.co/posts/a-better-pull-request-workflow-with-git-push-branches.html), basically because it makes things much simpler when using the GitHub Pull Request workflow.

### Workaround

In case this is useful to anyone else, I currently work around it by adding the following lines to my `p10k.zsh`:

```sh

    local -a push_behind_ahead=(${(ps:\t:)"$(command git rev-list --left-right --count HEAD...@{push} 2>/dev/null)"})
    local VCS_STATUS_PUSH_COMMITS_AHEAD="${push_behind_ahead[1]}"
    local VCS_STATUS_PUSH_COMMITS_BEHIND="${push_behind_ahead[2]}"

    # â‡ 42 if behind the @{push} branch.
    (( VCS_STATUS_PUSH_COMMITS_BEHIND )) && res+=" ${clean}â‡ ${VCS_STATUS_PUSH_COMMITS_BEHIND}"
    (( VCS_STATUS_PUSH_COMMITS_AHEAD && !VCS_STATUS_PUSH_COMMITS_BEHIND )) && res+=" "
    # â‡¢42 if ahead of the @{push} branch; no leading space if also behind: â‡ 42â‡¢42.
    (( VCS_STATUS_PUSH_COMMITS_AHEAD  )) && res+="${clean}â‡¢${VCS_STATUS_PUSH_COMMITS_AHEAD}"

```

You want to add them under this line:

```sh
    (( VCS_STATUS_COMMITS_AHEAD  )) && res+="${clean}â‡¡${VCS_STATUS_COMMITS_AHEAD}"
```

I tried to make it match the existing code as much as possible, to the point where if the gitstatus PR was shipped and the variables defined, in theory the second chunk could be PR'd directly against the repo.
Hi,

I'm packaging p10k for NixOS and we would much prefer packaging released tags than pinning a random version from master. While one can easily monitor releases the same cannot be said for a whole upstream git history. Also there is the point of compatibility between p10k and gitstatus versions, that might break once in a while. I'm pretty sure other package maintainers feel the same way.

Would you mind considering doing releases once in a while? This affects p10k and gitstatus (& your libgit2 fork). 

P.S.: What is the chance of your libgit2 changes going upstream? I didn't find an answer to this question anywhere.
timewarrior is a cli time tracker, see https://timewarrior.net/

I created this simple user-defined segment:
https://gist.github.com/real-or-random/6c789a436ec6ef391a48c910b1d6f147

It shows the current tracking status, i.e., it shows the tags such as "work", "gaming", etc. If there's interest to create a full segment, I'd be willing to help. I think showing the active tags is useful and what most timewarrior users would need. Possible extensions are options to display the current interval length for example.
Hey,
I found out about https://github.com/starship/starship#-features today, and I wanted to check if powerlevel10k could display my package versions the same way:

![image](https://user-images.githubusercontent.com/201897/64684482-7c243f80-d485-11e9-985d-5decaf9f080f.png)

[Turns out it can](https://github.com/romkatv/powerlevel10k/blob/master/config/p10k-classic.zsh#L48-L60) ðŸ™Œ , with support for pyenv, nodeenv, rbenv, etc.
Now, I replaced all of these package managers with [asdf](https://asdf-vm.com/).

Would it be possible to add support for asdf? I'm no dev, but happy to take a look if I can get some pointers.
See https://github.com/romkatv/powerlevel10k/issues/208#issuecomment-529478357 for macOS implementation.