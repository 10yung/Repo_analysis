Hello, 
Iam running zUMIS now with the option of detecting the barcodes automatically and I have this error: 

During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
 You provided these parameters:
 YAML file: /data/scratch/taniach/zumis_loba1.yaml
 zUMIs directory: /data/scratch/taniach/zUMIs
 STAR executable STAR
 samtools executable samtools
 pigz executable pigz
 Rscript executable Rscript
 RAM limit:   256
 zUMIs version 2.5.6b 


Thu Jan 16 14:27:31 CET 2020
Counting...
During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
[1] "2020-01-16 14:27:38 CET"
Error in fread(paste0(opt$out_dir, "/zUMIs_output/", opt$project, "kept_barcodes.txt")) : 
  File '/data/scratch/taniach/lobaria_pulmonaria_experiment/zumis_testrun//zUMIs_output/Example_experimentkept_barcodes.txt' does not exist or is non-readable. getwd()=='/data/scratch/taniach/lobaria_pulmonaria_experiment/zumis_testrun'
Execution halted
Thu Jan 16 14:27:38 CET 2020
Descriptive statistics...
During startup - Warning message:
Setting LC_CTYPE failed, using "C" 
[1] "I am loading useful packages for plotting..."
[1] "2020-01-16 14:27:38 CET"
Error in fread(gtf, select = 1:2, header = F) : 
  File '/data/scratch/taniach/lobaria_pulmonaria_experiment/zumis_testrun//Example_experiment.final_annot.gtf' does not exist or is non-readable. getwd()=='/data/scratch/taniach/lobaria_pulmonaria_experiment/zumis_testrun'
Calls: getUserSeq -> fread
Execution halted
Thu Jan 16 14:27:39 CET 2020


This is the yaml file information
project: lobaria_experiment1
sequence_files:
  file1:
    name: /data/scratch/taniach/lobaria_pulmonaria_experiment/rawdata/_Werth_1_i1.fq.gz
    base_definition: BC(1-8)
  file2:
    name: /data/scratch/taniach/lobaria_pulmonaria_experiment/rawdata/_Werth_1_r1.fq.gz
    base_definition: 
    - BC(1-6)
    - UMI(7-16)
  file3:
    name:/data/scratch/taniach/lobaria_pulmonaria_experiment/rawdata/_Werth_1_r2.fq.gz 
    base_definition: cDNA(1-50)
reference:
  STAR_index: /data/scratch/taniach/lobaria_pulmonaria_experiment/star_index_scottland_genome/Lobpul1_scotland_V1_STAR_index/
  GTF_file: /data/scratch/taniach/lobaria_pulmonaria_experiment/star_index_scottland_genome/Lobpul1_all_genes_20170213.gtf
  additional_STAR_params: ''
  additional_files: ~
out_dir: /data/scratch/taniach/lobaria_pulmonaria_experiment/zumis_testrun/
num_threads: 48
mem_limit: 256
filter_cutoffs:
  BC_filter:
    num_bases: 1
    phred: 20
  UMI_filter:
    num_bases: 1
    phred: 20
barcodes:
  barcode_num: null
  barcode_file: null 
  automatic: yes
  BarcodeBinning: 0
  nReadsperCell: 100
counting_opts:
  introns: yes
  downsampling: '0'
  strand: 0
  Ham_Dist: 0
  velocyto: no
  primaryHit: yes
  twoPass: yes
make_stats: yes
which_Stage: Filtering
Rscript_exec: Rscript
STAR_exec: STAR
pigz_exec: pigz
samtools_exec: samtools
zUMIs_directory: /data/scratch/taniach/zUMIs/
read_layout: SE


Thanks so much for your help

Best,

Tania





Hello, cziegenhain,

Thank you for developing so nice software!

I have error in running the program.

Any hint or help will be appreciated!

Thank you!

Yue


```
Error in (function (cl, name, valueClass)  : 
  assignment of an object of class “numeric” is not valid for @‘Dim’ in an object of class “dgTMatrix”; is(value, "integer") is not TRUE
Calls: convert2countM -> .makewide -> <Anonymous> -> <Anonymous>
```

Would it be possible to have an option in the YAML file for additional or custom FeatureCounts parameters, similar to the current additional_STAR_params option? In particular, it may be helpful (well, for me at least) to have some more options for handling multimappers (for example, fractional counting or, in the particularly weird niche usage I have, counting every single mapping). Others may also find usage here if there are additional FeatureCounts parameters they want to include. Not sure how easily this works with the R implementation but figured I'd ask!
Please see the following discussion:
https://stackoverflow.com/questions/9502003/ggplot-scale-y-log10-issue

Hi all, I thought this might be useful for someone (the code is a bit rough) - a proof of concept for converting zUMIs outputs to be dicts of dicts containing dense pandas dataframes. I'm not sure if you all would consider a helper function to perform such a task.

```
import rpy2.robjects as robjects
from rpy2.robjects import pandas2ri
pandas2ri.activate()
from rpy2.robjects.packages import STAP

def zumis_output2pandas(filename):
    mfunc = 'to_df <- function(dobj){return(as.data.frame(as.matrix(dobj)))}'
    rsparse2pandas = STAP(mfunc, "to_df")

    readRDS = robjects.r['readRDS']
    zumis_data = readRDS(filename)
    zd = dict(zip(zumis_data.names, list(zumis_data)))
    for key in ['umicount', 'readcount']:
        zd[key] = dict(zip(zd[key].names, list(zd[key])))
        zd[key]['exon'] = dict(zip(zd[key]['exon'].names, list(zd[key]['exon'])))
        zd[key]['exon']['all'] = rsparse2pandas.to_df(zd[key]['exon']['all']).transpose()
        zd[key]['exon']['downsampling'] = dict(zip(zd[key]['exon']['downsampling'].names, list(zd[key]['exon']['downsampling'])))
        for k in zd[key]['exon']['downsampling'].keys():
            zd[key]['exon']['downsampling'][k] = rsparse2pandas.to_df(zd[key]['exon']['downsampling'][k]).transpose()
    return zd
```