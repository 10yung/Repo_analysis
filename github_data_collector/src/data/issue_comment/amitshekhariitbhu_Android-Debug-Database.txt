I found out about this library in a sad way. I found tons of devices with it exposed on :8080 on shodan, and tracked down a couple of (big) apps using it in production. (read here: https://deletescape.ch/posts/how-to-leak-all-user-data/)

My suggestion here would be to actually prevent the library from working at all in non-debug builds (potentially adding an override flag for locally debugging prod builds), so this cannot happen by accident. I know that the docs in this repo make it very clear to use it only on debug builds and how to achieve that, and I put no blame on you, but I think it is important to try and prevent this from happening again in every way possible.
The library is awesome but doesn't work with an emulator. The browser page is loading for a while and then says "This site can’t be reached". I use the last version of the emulator Pixel 2 API 28.
com.amitshekhar.debug.DebugDBInitProvider: java.lang.NullPointerException: Attempt to invoke virtual method 'int android.net.wifi.WifiInfo.getIpAddress()' on a null object reference
at android.app.ActivityThread.installProvider(ActivityThread.java:5841)
at android.app.ActivityThread.installContentProviders(ActivityThread.java:5430)
at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5369)
at android.app.ActivityThread.-wrap2(ActivityThread.java)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1532)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:154)
at android.app.ActivityThread.main(ActivityThread.java:6104)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:865)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)
Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'int android.net.wifi.WifiInfo.getIpAddress()' on a null object reference
at com.amitshekhar.utils.NetworkUtils.getAddressLog(NetworkUtils.java:38)
at com.amitshekhar.DebugDB.initialize(DebugDB.java:62)
at com.amitshekhar.debug.DebugDBInitProvider.onCreate(DebugDBInitProvider.java:44)
at android.content.ContentProvider.attachInfo(ContentProvider.java:1786)
at android.content.ContentProvider.attachInfo(ContentProvider.java:1761)
at com.amitshekhar.debug.DebugDBInitProvider.attachInfo(DebugDBInitProvider.java:83)
at android.app.ActivityThread.installProvider(ActivityThread.java:5838)
at android.app.ActivityThread.installContentProviders(ActivityThread.java:5430)
at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5369)
at android.app.ActivityThread.-wrap2(ActivityThread.java)
at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1532)
at android.os.Handler.dispatchMessage(Handler.java:102)
at android.os.Looper.loop(Looper.java:154)
at android.app.ActivityThread.main(ActivityThread.java:6104)
at java.lang.reflect.Method.invoke(Native Method)
at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:865)
at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)
com.amitshekhar.debug.DebugDBInitProvider: java.lang.NullPointerException: Attempt to invoke virtual method 'int android.net.wifi.WifiInfo.getIpAddress()' on a null object reference
        at android.app.ActivityThread.installProvider(ActivityThread.java:5841)
        at android.app.ActivityThread.installContentProviders(ActivityThread.java:5430)
        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5369)
        at android.app.ActivityThread.-wrap2(ActivityThread.java)
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1532)
        at android.os.Handler.dispatchMessage(Handler.java:102)
        at android.os.Looper.loop(Looper.java:154)
        at android.app.ActivityThread.main(ActivityThread.java:6104)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:865)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755)
     Caused by: java.lang.NullPointerException: Attempt to invoke virtual method 'int android.net.wifi.WifiInfo.getIpAddress()' on a null object reference
        at com.amitshekhar.utils.NetworkUtils.getAddressLog(NetworkUtils.java:38)
        at com.amitshekhar.DebugDB.initialize(DebugDB.java:62)
        at com.amitshekhar.debug.DebugDBInitProvider.onCreate(DebugDBInitProvider.java:44)
        at android.content.ContentProvider.attachInfo(ContentProvider.java:1786)
        at android.content.ContentProvider.attachInfo(ContentProvider.java:1761)
        at com.amitshekhar.debug.DebugDBInitProvider.attachInfo(DebugDBInitProvider.java:83)
        at android.app.ActivityThread.installProvider(ActivityThread.java:5838)
        at android.app.ActivityThread.installContentProviders(ActivityThread.java:5430) 
        at android.app.ActivityThread.handleBindApplication(ActivityThread.java:5369) 
        at android.app.ActivityThread.-wrap2(ActivityThread.java) 
        at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1532) 
        at android.os.Handler.dispatchMessage(Handler.java:102) 
        at android.os.Looper.loop(Looper.java:154) 
        at android.app.ActivityThread.main(ActivityThread.java:6104) 
        at java.lang.reflect.Method.invoke(Native Method) 
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:865) 
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:755) 

Update build tools to the latest version 3.5.2 break library functionality.
Downgrading to 3.4.0 solves the problem.

![Screenshot from 2019-11-28 15-45-12](https://user-images.githubusercontent.com/18407727/69815296-4b3ae780-11f6-11ea-8575-055ce8b52059.png)

When some table is clicked, "Query executed successfully" message appears on the bottom of the screen, but no information is shown.
Library should provide consumer Proguard rules. Our QA builds are shrinked but still use utilities such as this one. I didn't pinpoint which rules are required specifically and just use `-keep class com.amitshekhar.** { *; }` as the library never touches release builds. Without these rules inspection tool can only see the shape of the database but not its content.

Is it something that you would consider adding into the library? If so, are these broad rules fine or do you think something more specific should be provided?



Great lib for developer. 