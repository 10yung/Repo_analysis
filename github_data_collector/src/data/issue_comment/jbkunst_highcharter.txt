    library(highcharter)
    x <- cbind(mdeaths, fdeaths)
    hchart(x)
In this simple example, there are two line charts. I'd like to know how to edit the Y-axises for each plot. Specifically, I want to add `%` to the Y-axis.

I have tried to add the following codes but it puts them into one chart:

    hchart(x) %>%
      hc_yAxis_multiples(list(title = list(text = "A"),labels=list(format = '{value}%'),
        opposite = FALSE),
        list(title = list(text = "B"),labels = list(format = "{value}%"),
        showLastLabel = FALSE, opposite = TRUE))

Also, I have tried:

    hchart(x) %>%
    hc_yAxis(list(labels=list(format = '{value}%')))

This returns 

    Error: All arguments must be named list
Plot.ly has already supported Cross talk.

https://rstudio.github.io/crosstalk/
The example below does not work, while in other charts I'm able to disable the legendItemClick in the same manner. Also in highcharts itself it is working (https://codepen.io/hanswesterbeek/pen/oNgMXdg):  

highchart(type = 'map') %>%
    hc_plotOptions(
      series = list(joinBy = c("a", "b"))
      , map = list(events = list(legendItemClick = JS("function(){return false}")))
    ) %>%
    hc_add_series(mapData = map, data = data, name = seriesName) %>% 
    hc_colorAxis(dataClasses = dataClasses)
I want to plot a different chart type for drilldowns with different plot options. For example: Primary Chart would be a line chart by group and drilldown chart would be a column chart.

There is a solution given in Highcharts (Highcharts, Can you change the chart type for drilldowns?) but I'm not able to translate it to R.

PFB the code.

```
library("dplyr")
library("purrr")

df <- data_frame(
  car_brand = c("Hyundai","Hyundai","Hyundai", "Benz","Benz","Benz", "Tesla","Tesla","Tesla"),
  units_sold = c(10,15,20,11,8,13,6,5,7),
  date = c("2019-01-01", "2019-02-01","2019-03-01","2019-01-01","2019-02-01","2019-03-01","2019-01-01","2019-02-01","2019-03-01")
)

df$units_sold <- as.numeric(df$units_sold)
df$date <- as.Date(df$date)
df$drilldown <- paste(df$car_brand, ",", df$date)
carBrands<- df %>%
  select(date, car_brand)

getCarDetails<- function(brands){

  carList <- list()
  listofdfs <- list() #Create a list in which you intend to save your df's.

  for(i in 1:nrow(brands)){ #Loop through the numbers of ID's instead of the ID's

    #You are going to use games[i] instead of i to get the ID
    BrandCarData <- data_frame(
      car = c("H1","H2","H3","H4","H5"),
      units = c(1,2,3,4,5)
    )
    BrandCarData$units <- as.numeric(BrandCarData$units)
    dsCar <- list_parse2(BrandCarData)
    listofdfs[[i]] <- dsCar
    carList[[i]] <- list (name = brands[[2]][i],
                          type = "column",
                          id = paste(brands[[2]][i], ",", brands[[1]][i]),
                          data = listofdfs[[i]])
  }

  return(carList) #Return the list of dataframes.
}

listCar <- getCarDetails(brands = carBrands)

hc <- hchart(df,"line", hcaes(x=date, y =
                                units_sold, group
                                       = car_brand )) %>%
  hc_xAxis(categories = dfDates$date, title = list(text = "<b>Date</b>"), type = "datetime") %>%
  hc_plotOptions(column = list(dataLabels = list(enabled = FALSE), enableMouseTracking = TRUE))%>%
  hc_tooltip(borderWidth = 1.5,
             pointFormat = paste('<span style="color:{series.color}">{series.name}</span>: <b>{point.y}</b><br/>')) %>%
  hc_legend(enabled = TRUE) %>%
  hc_title(text = "Brand Units Sold Monthy Trend",
           style = list(fontSize = "12px", fontWeight = "bold")) %>%
  hc_yAxis(title = list(text = "<b>Units <br>(In Thousands)</br></b>"))
hc

hc1 <- hc %>%
  hc_drilldown(allowPointDrilldown = TRUE,
               series = listCar)
hc1
```
I want to change the title of the second chart, change the x-axis type to category from DateTime.
this example works for any N<=45, for larger values the nodes become painted black and no label is shown.

```r
library(igraph)
library(highcharter)

N <- 46

net <- sample_gnp(N, p = 2/N)
wc <- cluster_walktrap(net)

V(net)$label <- seq(N)
V(net)$name <- paste("I'm #", seq(N))
V(net)$page_rank <- round(page.rank(net)$vector, 2)
V(net)$betweenness <- round(betweenness(net), 2)
V(net)$degree <- degree(net)
V(net)$size <- V(net)$degree
V(net)$comm <- membership(wc)
V(net)$color <- colorize(membership(wc))

hchart(net, layout = layout_with_fr)
```
Hi,

I made donut pie chart for visualization and my chart seems like error.

This is my code.


```
data = data.frame(
        name = c('a', 'b', 'c', 'd', 'e', 'f'),
        y = c(4668, 3152, 1530, 452, 103, 104)
    )

hc <- highchart() %>%
    hc_chart(type="pie") %>%
    hc_add_series(
      data = list_parse(data),
      innerSize = '50%'
    ) %>%
    hc_plotOptions(
      pie = list(
        dataLabels =
          list(enabled = TRUE,
               distance = '-25%',
               allowOverlap = FALSE)
      )
    )
  
hc
```

This is my result. The dataLabel is located far from chart.

![image](https://user-images.githubusercontent.com/46894313/71453664-b4028900-27cf-11ea-9c8a-b13fdb8a6271.png)


I tested same chart in JS Fiddle with Highcharts.js(refer to this link : https://jsfiddle.net/wzr8q7ac/2/#). This works fine.

Is this R wrapper's problem?

Thank you


I asked a [question](https://stackoverflow.com/questions/59392118/clear-chart-by-click-in-highcharts) on stackoverflow about the possibility of hiding all series on the chart by clicking in highcharts. I was given an answer that fits (here it is on [JSFIddle](https://jsfiddle.net/8gzb5yd1/))

But in highcharter, hiding series doesn't work. Here's my code:

```
library(highcharter)

df <- data.frame(Wr.Hnd = c(18.5, 18, 19, 20, 21, 23, 4, 7, 5),
                 NW.Hnd = c(10, 12, 14, 9, 15, 12, 20, 23, 25),
                 Clap = rep(c("Right", "Left", "Center"), each = 3),
                 stringsAsFactors = FALSE)

f1 <- JS("function() {
          for(let i = 0; i < chart.series.length; i++){
                     		chart.series[i].hide()
                     }
                  }")
f2 <- JS("function(event) {
                    if (!this.visible)
                        return true;
                    
                    var seriesIndex = this.index;
                    var series = this.chart.series;
                    
                    for (var i = 0; i < series.length; i++)
                    {
                        if (series[i].index != seriesIndex)
                        {
                            
                            series[i].visible ? series[i].hide() : series[i].show();
                        } 
                    }                    
                    return false;
                }")
highchart() %>%
  hc_add_series(df, 'line', hcaes(x = Wr.Hnd, y = NW.Hnd, group = Clap)) %>%
  hc_chart(series = list(
    events = list(
      click = f1))) %>%
  hc_plotOptions(series = list(
    events = list(
      click = f1,
      legendItemClick = f2
    )
  ))
```
The second function, which in plotOptions, works. Tell me what is the error? Thanks
Hey there.

I think there's a problem with setting labels for the z axis in a 3D column chart. When I specify min, max and categories for the z axis via hc_zAxis() only zeros get printed as labels instead of the specified ones. I observed this behaviour for versions 0.5.0, 0.7.0, and the current dev version (0.7.0.9001).

I've included a fiddle, as well as a reproducible example in R.

https://jsfiddle.net/4qkfw619/

    library(shiny)
    library(highcharter)
    
    shinyApp(
      
      ui <- fluidPage(
        fluidRow(
          highchartOutput('chart')
        )
      ),
      
      server <- function(input, output, session) {
        
        df <- data.frame(
          Z1 = c(1, 2, 1, 4),
          Z2 = c(2, 3, 2, 7),
          Z3 = c(6, 3, 7, 4),
          Z4 = c(3, 4, 1, 5)
        )
        
        dta <- lapply(seq(ncol(df)), function(x) {
          list(
            name = colnames(df)[x], 
            data = df[, x]
          ) 
        })
        
        output$chart <- renderHighchart({
          
          highchart() %>%
            hc_chart(
              type = "column", 
              options3d = list(
                enabled = TRUE,
                beta = 20,
                alpha = 30,
                depth = 400,
                viewDistance = 10
              )
            ) %>%
            hc_xAxis(categories = paste0("X", 1:4)) %>%
            hc_zAxis(
              min = 0,
              max = 3,
              categories = colnames(df)
            ) %>%
            hc_plotOptions(
              series = list(
                depth = 100,
                grouping = FALSE,
                groupZpadding = 10
              )
            ) %>%
            hc_add_series_list(dta)
        })
      })


Keep up the good work and thanks in advance!
```
✔  checking examples (32s)
   Examples with CPU or elapsed time > 5s
                  user system elapsed
   hc_boost     13.712  0.027  13.743
   hc_colorAxis  5.029  0.579   4.617
```
```
> devtools::test()
Loading highcharter
Registered S3 method overwritten by 'xts':
  method     from
  as.zoo.xts zoo 
Registered S3 method overwritten by 'quantmod':
  method            from
  as.zoo.data.frame zoo 
Highcharts (www.highcharts.com) is a Highsoft software product which is
not free for commercial and Governmental use
Testing highcharter
√ |  OK F W S | Context
√ |   2       | demos
√ |  20   4   | hchart [2.5 s]
--------------------------------------------------------------------------------
test-hchart.R:9: warning: hchart has a valid class after valid data input
group_by_() is deprecated. 
Please use group_by() instead

The 'programming' vignette or the tidyeval book can help you
to program with group_by() : https://tidyeval.tidyverse.org
This warning is displayed once per session.

test-hchart.R:9: warning: hchart has a valid class after valid data input
select_() is deprecated. 
Please use select() instead

The 'programming' vignette or the tidyeval book can help you
to program with select() : https://tidyeval.tidyverse.org
This warning is displayed once per session.

test-hchart.R:9: warning: hchart has a valid class after valid data input
rename_() is deprecated. 
Please use rename() instead

The 'programming' vignette or the tidyeval book can help you
to program with rename() : https://tidyeval.tidyverse.org
This warning is displayed once per session.

test-hchart.R:106: warning: hchart returns a valid matrix plot after valid data input
mutate_() is deprecated. 
Please use mutate() instead

The 'programming' vignette or the tidyeval book can help you
to program with mutate() : https://tidyeval.tidyverse.org
This warning is displayed once per session.
--------------------------------------------------------------------------------
√ |   1       | Testing utils
√ |   2       | highchart
√ |   5       | showcase [4.1 s]
√ |   2       | themes [0.1 s]

== Results =====================================================================
Duration: 6.7 s

OK:       32
Failed:   0
Warnings: 4
Skipped:  0
```