
haven't seen this started yet, trying to capture the low-hanging fruit

this isn't finished


I observe that throughput for a simple 'Hello, world' server drops by about 10x when the client does not use or support HTTP keep-alive.  My 8-core i7 manages about ~28k req/s with keep-alive and ~2.4k req/s without.

I expected some TCP setup/teardown overhead but, according to `perf record`, most CPU time can be traced back to the spawn() call in src/http/server/mod.rs.  I see expensive system calls to clone(), mmap(), mprotect(), and so on, all originating from imp::thread::create() from the standard library.  A thread pool would probably help alleviate that.

Callers can pass in informative descriptions of what went wrong for better debugging.

The source code comment says:

> > If you wish to send a request body (e.g. POST requests), I'm sorry to have to tell you that there is
> > not _good_ support for this yet. However, it can be done; here is an example:

Please update the readme and/or documentation with a description of these limitations.
The comments say that there are, but it's unclear what they are.

See #83 

While [`from_str` in method.rs currently mentions that it is case insensitive](https://github.com/chris-morgan/rust-http/blob/master/src/http/method.rs#L23), the code reads otherwise. This probably should be fixed.

Additionally, the rules for extension methods probably should match the token production given [here](http://tools.ietf.org/html/rfc2616/#section-5.1.1), and fail or return None otherwise.

(I'll try my hand at this)

I'm working on a library in Rust for use with the UPnP discovery protocol SSDP. This uses HTTP-ish over UDP.

No longer requires a specific TcpStream in the BufferedStream so it's possible to use your MemReaderFakeStream.  

FYI - these changes are working here: https://github.com/davbo/rust-ssdp/blob/master/src/lib.rs#L36

What do you think of adding Rust to the [Web Framework Benchmarks](http://www.techempower.com/benchmarks/) using `rust-http`?  I actually started the work already, but was curious what's your opinion.
