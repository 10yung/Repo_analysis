Not sure if this is the best place to put this, but I believe the schema should be valid, however when running the tools supplied I see that it is not.

```
schemas/interagent-hyper-schema.json: #/definitions/identity: failed schema #/properties/definitions/additionalProperties: "definitions", "description", "links", "title", "type" weren't supplied.
schemas/interagent-hyper-schema.json: #/definitions/link/properties/href: failed schema #/definitions/resource/properties/properties/patternProperties/^[a-z0-9][a-zA-Z0-9_]*[a-zA-Z0-9]$: No subschema in "anyOf" matched.
schemas/interagent-hyper-schema.json: #/definitions/link/properties/schema: failed schema #/definitions/resource/properties/properties/patternProperties/^[a-z0-9][a-zA-Z0-9_]*[a-zA-Z0-9]$: No subschema in "anyOf" matched.
schemas/interagent-hyper-schema.json: #/definitions/link: failed schema #/properties/definitions/additionalProperties: "definitions", "description", "links", "title", "type" weren't supplied.
schemas/interagent-hyper-schema.json: #/definitions/ref: failed schema #/properties/definitions/additionalProperties: "definitions", "description", "links", "title", "type" weren't supplied.
schemas/interagent-hyper-schema.json: #/definitions/resource/properties/links: failed schema #/definitions/resource/properties/properties/patternProperties/^[a-z0-9][a-zA-Z0-9_]*[a-zA-Z0-9]$: No subschema in "anyOf" matched.
schemas/interagent-hyper-schema.json: #/definitions/resource/properties/properties: failed schema #/definitions/resource/properties/properties/patternProperties/^[a-z0-9][a-zA-Z0-9_]*[a-zA-Z0-9]$: No subschema in "anyOf" matched.
schemas/interagent-hyper-schema.json: #/definitions/resource/properties/strictProperties: failed schema #/definitions/resource/properties/properties/patternProperties/^[a-z0-9][a-zA-Z0-9_]*[a-zA-Z0-9]$: No subschema in "anyOf" matched.
schemas/interagent-hyper-schema.json: #/definitions/resource: failed schema #/properties/definitions/additionalProperties: "definitions", "description", "links", "title", "type" weren't supplied.
schemas/interagent-hyper-schema.json: #/definitions/resourceDefinition: failed schema #/properties/definitions/additionalProperties: "definitions", "description", "links", "title", "type" weren't supplied.
schemas/interagent-hyper-schema.json: #/definitions/resourceProperty: failed schema #/properties/definitions/additionalProperties: "definitions", "description", "links", "title", "type" weren't supplied.
schemas/interagent-hyper-schema.json: #/properties/definitions: failed schema #/properties/properties/additionalProperties: "additionalProperties" is not a permitted key.
schemas/interagent-hyper-schema.json: #/properties/definitions: failed schema #/properties/properties/additionalProperties: "$ref" wasn't supplied.
schemas/interagent-hyper-schema.json: #/properties/links: failed schema #/properties/properties/additionalProperties: "additionalProperties" is not a permitted key.
schemas/interagent-hyper-schema.json: #/properties/links: failed schema #/properties/properties/additionalProperties: "$ref" wasn't supplied.
schemas/interagent-hyper-schema.json: #/properties/properties: failed schema #/properties/properties/additionalProperties: "additionalProperties" is not a permitted key.
schemas/interagent-hyper-schema.json: #/properties/properties: failed schema #/properties/properties/additionalProperties: "$ref" wasn't supplied.
schemas/interagent-hyper-schema.json: #: failed schema #: "description", "links", "type" weren't supplied.
```
I have a plan to apply JSON-schema to my project testing stuff, then use `prmd` to generate my  API documentation, but it's ironic that my documentation is using `.apib` instead of `.md`, so I just curious that is there any way to support `.apib` with `doc` command, based on our codebase, I guess the answer is NO, isn't it?

I'm willing to give a PR for supporting another documentation format if you guys want.
rvm ruby-head bundle bundler 2.0.1.
bundler version in gemspec is just development_dependency so I think this is safe and ok.
Thank you.
For me, It is useful that I can choose to use detail tag or not.
I hope you agree but It is just request.

Thank you.
relate to https://github.com/interagent/prmd/pull/331

Some toc links doesn't work on github.
I couldn't find the exact cause but I think some github function changing markdown file make the problem.

If we use name attribute of a tag in markdown file, github add `user-content` prefix and downcase words.

example
```
# before
link-GET-shop-/api/shops

# after
user-content-link-get-shop-/api/shops
```

I tried some cases.

```
# work
<a href="#link-GET-shop-/api/shops">GET /api/shops</a>
<a name="user-content-link-get-shop-/api/shops">Shop Shop Search API</a>

# not work
<a href="#link-GET-shop-/api/shops/{(%23%2Fdefinitions%2Fshop%2Fdefinitions%2Fid)}">GET /api/shops/{shop_id}</a>
<a name="user-content-link-get-shop-/api/shops/{(%23%2fdefinitions%2fshop%2fdefinitions%2fid)}">Shop Shop Detail API</a>

# work
<a href="#link-GET-shop-/api/shops/{shop_id}">GET /api/shops/{shop_id}</a>
<a name="user-content-link-get-shop-/api/shops/{shop_id}">Shop Shop Search API</a>
```

I don't know the cause but this fix work well and I think more simple than before.
I tested generating documentation using `const` keyword of `JSON Schema Draft-06`,  but it doesn't reflect to docs. (`prmd verify schema.json` was passed)

For instance,  `Description` and `Example` are auto generated if using `enum` keyword like this.


[schema.json]
```
...
""
"enum": ["THIS-IS-A-CONSTANT"]
...
```

and `$ prmd doc schema.json > schema.md`

↓

|Description|Example|
|:-:|:-:|
|__one of__:"THIS-IS-A-CONSTANT"|"THIS-IS-A-CONSTANT"|

In case of `const` keyword:

|Description|Example|
|:-:|:-:|
|||

It'd be nice if it support by default.
 
Thank you.
I am working with a schema that has recursive references (eg. comments on comments) and the document generator fails with the following error:
```
/Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/schema.rb:103:in `merge': stack level too deep (SystemStackError)
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/schema.rb:103:in `each'
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/schema.rb:103:in `inject'
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/schema.rb:103:in `dereference'
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/templates/schemata/helper.erb:86:in `block in extract_schemata_refs'
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/templates/schemata/helper.erb:84:in `each'
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/templates/schemata/helper.erb:84:in `extract_schemata_refs'
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/templates/schemata/helper.erb:88:in `block in extract_schemata_refs'
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/templates/schemata/helper.erb:84:in `each'
	 ... 9814 levels...
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/lib/prmd/cli.rb:95:in `run'
	from /Library/Ruby/Gems/2.3.0/gems/prmd-0.13.0/bin/prmd:6:in `<top (required)>'
	from /usr/local/bin/prmd:22:in `load'
	from /usr/local/bin/prmd:22:in `<main>'
```
Is there any support planned for recursive schemas?
### Description

TOC link is very usefull, but link with `{hoge}` parameter is not valid.
So I changed link target from link url to title of api description part.

### Sample

please click each toc link on these .md files.

**before**
https://github.com/ginkouno/md_link_sample/blob/master/schema_toc_link_before.md

**after**
https://github.com/ginkouno/md_link_sample/blob/master/schema_toc_link_after.md

### TODO

- [x] Fix test
I had a property that looked like this:

```yaml
  channel:
    type:
    - object
    properties:
      id:
        "$ref": "/schemata/channel#/definitions/id"
      name:
        "$ref": "/schemata/channel#/definitions/name"
```

which was raising the error:

    schema/schema.json: #/definitions/approval/properties/channel: failed schema #/definitions/resource/properties/properties/patternProperties/^[a-z0-9][a-zA-Z0-9_]*[a-zA-Z0-9]$: No subschema in "anyOf" matched.

This error was not very helpful at explaining what the problem actually was. After much trial and error, it was the fact that the `description` was missing. i.e. this fixed it:

```yaml
  channel:
    description: THIS IS THE FIX
    type:
    - object
    properties:
      id:
        "$ref": "/schemata/channel#/definitions/id"
      name:
        "$ref": "/schemata/channel#/definitions/name"
```

Can we please have a better error message for this?

*prmd 0.13.0*
I use command line in Usage, but combine into a single schema error.
who can help me？

- unable to parse schemata/app.json (#<JSON::ParserError: 822: unexpected token at '��{'>)
- unable to parse schemata/user.json (#<JSON::ParserError: 822: unexpected token at '��{'>)
- Somes files have failed to parse. If you wish to continue without them,please enable faulty_load using --faulty-load