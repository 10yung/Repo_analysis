**Describe the bug**
when I filter my records and need first 10 it gave me 5 and the count is more than 17000 and in my DB I only have 3000 records!!!

**To Reproduce**
make this query
![image](https://user-images.githubusercontent.com/47532216/72434546-90b27480-37a4-11ea-935e-2c7782677a8e.png)

**Expected behavior**
I expected to filter my records and gave me the first 10
**Screenshots**
If applicable, add screenshots to help explain your problem.

**Versions (please complete the following information):**
 - Connector: [ `MongoDB`]
 - Prisma Server: [e.g. `1.34.0`]
 - `prisma` CLI: [e.g. `prisma/1.34.0 (darwin-x64) node-v10.4.0`]
 - OS: [ `Ubuntu 16.04`] 
 - other dependencies: `prisma-client`, `prisma-binding`, gave me same results with the both

**Describe the bug:**
Embedded fields in MongoDB are not included in the result of a Prisma query.

The question is: What is the point in having embedded fields if it takes another query to fetch them?

Btw. this behavior was already mentioned in #3706, but no action was taken and the issue is closed. The suggested workaround by using $fragment is not feasable with the Golang binding. Please take care of this.

**To Reproduce:**
I will use the example project `docker-mongodb` in the following description. The relevant part of the data model is:
```
type Post @db(name: "posts") {
  id: ID! @id
  wasCreated: DateTime! @createdAt
  wasUpdated: DateTime! @updatedAt
  title: String!
  content: String
  published: Boolean! @default(value: false)
  author: User!
  comments: [Comment!]!
}

type Comment @embedded {
  text: String!
  writtenBy: User!
}
```

1. Clone `https://github.com/prisma/prisma-examples` and switch to `master` branch (I assume this branch contains the latest examples for Prisma 1.x)
2. Enter `go/docker-mongodb` subfolder
3. Deploy Prisma and MongoDB with
```
docker-compose -f docker-compose.yml up -d
```
4. Run `prisma deploy` to populate the database
5. Init the Go module with
```
go mod init github.com/prisma/prisma-examples/go/docker-mongodb
```
6. Build the application with `go build`
7. Run the created binary by entering `./docker-mongodb`

The first part of the output should look like this (formatted for better readability):
```
Retrieved all published posts: : 
[
  {
    ID:5e1c447d24aa9a0007e241c8
    WasCreated:2020-01-13T10:20:45.368Z
    WasUpdated:2020-01-13T10:20:45.368Z
    Title:Join us for Prisma Day 2019 in Berlin
    Content:0xc0001543b0
    Published:true
  }
  {
    ID:5e1c447d24aa9a0007e241ca
    WasCreated:2020-01-13T10:20:45.427Z
    WasUpdated:2020-01-13T10:20:45.427Z
    Title:Subscribe to GraphQL Weekly for community news
    Content:0xc000154600
    Published:true
  }
]
```

The embedded fields are clearly missing.

When looking into the database I can see that the embedded fields are present:

![image](https://user-images.githubusercontent.com/10214295/72252946-a0915380-3600-11ea-939f-1c5def22cf98.png)

**Expected behavior:**
Regarding the Golang binding: the embedded fields should be part of the parent struct to avoid a second query.

**Versions:**
 - Connector: `MongoDB` _(only applies to MongoDB; embedded types do not exist in MySQL or PostgreSQL)_
 - Prisma Server: `1.34.10` (tested on latest docker container)
 - `prisma` CLI: `prisma/1.34.10 (linux-x64) node-v12.14.0`
 - OS: `Ubuntu 18.04` 
**Describe the bug:**
The generated prisma.go file is missing `Or` and `Not` fields in every `WhereInput` struct when using MongoDB as database.

This error was introduced in **Prisma 1.26.0**.

**To Reproduce**
1. Clone `https://github.com/prisma/prisma-examples` and switch to `master` branch (I assume this branch contains the latest examples for Prisma 1.x)
2. Enter `go/cli-app` subfolder
3. Run `prisma generate` with the latest Prisma CLI (1.34.10) and rename `prisma-client/prisma.go` to `prisma-client/prisma_sql.go`
4. Open `prisma/prisma.yml` and add the following line:
```
databaseType: document
```
5. Run `prisma generate` again
6. Create a diff between the two generated files: `diff -Nurd prisma-client/prisma_sql.go prisma-client/prisma.go`

The result should read like this:
```
--- prisma-client/prisma_sql.go	2020-01-11 16:59:54.064199299 +0100
+++ prisma-client/prisma.go	2020-01-11 16:59:27.682916923 +0100
@@ -302,8 +302,6 @@
 	TextEndsWith      *string          `json:"text_ends_with,omitempty"`
 	TextNotEndsWith   *string          `json:"text_not_ends_with,omitempty"`
 	And               []TodoWhereInput `json:"AND,omitempty"`
-	Or                []TodoWhereInput `json:"OR,omitempty"`
-	Not               []TodoWhereInput `json:"NOT,omitempty"`
 }
 
 type TodoCreateInput struct {
@@ -326,8 +324,6 @@
 	UpdatedFieldsContainsSome  []string                     `json:"updatedFields_contains_some,omitempty"`
 	Node                       *TodoWhereInput              `json:"node,omitempty"`
 	And                        []TodoSubscriptionWhereInput `json:"AND,omitempty"`
-	Or                         []TodoSubscriptionWhereInput `json:"OR,omitempty"`
-	Not                        []TodoSubscriptionWhereInput `json:"NOT,omitempty"`
 }
 
 type TodoExec struct {
```

**Expected behavior**
Fields for `Or` and `Not` are available in `WhereInput` struct as described in:

[Basic filters for lists](https://www.prisma.io/docs/prisma-client/basic-data-access/reading-data-GO-go05/#basic-filters-for-lists)

**Versions:**
 - Connector: `MongoDB` _(only applies to MongoDB; MySQL and PostgreSQL are not affected)_
 - Prisma Server: `1.34.10` (tested on latest docker container)
 - `prisma` CLI: `prisma/1.34.10 (linux-x64) node-v12.14.0`
 - OS: `Ubuntu 18.04` 

When i filter [tutorials](https://www.prisma.io/tutorials/) by "deploy" i get the following error:

<img width="970" alt="Bildschirmfoto 2019-12-23 um 14 18 47" src="https://user-images.githubusercontent.com/192557/71360204-42d49300-258f-11ea-907f-de24d6349c8f.png">

**Describe the bug**
I changed enums.prisma and deploy.
I could see the deployment success messages in the console and in the deployment history.
Document content and queries are intermittently successful.

**To Reproduce**
before change
enum RequestLogType {
  REQUEST_REFUND
  REQUEST_TRACKING
}

after change
enum RequestLogType {
  REQUEST_REFUND
  REQUEST_AUTO_REFUND
  CANCEL_REFUND
  CANCEL_AUTO_REFUND
  REQUEST_TRACKING
}

**Expected behavior**
working!!

**Screenshots**
prisma deployment history
<img width="399" alt="스크린샷 2020-01-08 오후 12 42 34" src="https://user-images.githubusercontent.com/6640453/71948760-744a9100-3214-11ea-9a40-b19b39954905.png">

docs in playground - 1
<img width="293" alt="스크린샷 2020-01-08 오후 12 46 03" src="https://user-images.githubusercontent.com/6640453/71948874-e7540780-3214-11ea-8a80-4d24f11b9800.png">

docs in playground - 2
<img width="295" alt="스크린샷 2020-01-08 오후 5 28 54" src="https://user-images.githubusercontent.com/6640453/71962505-ed5dde80-323c-11ea-9ba5-194317391842.png">

excute query in playground - success
<img width="1457" alt="스크린샷 2020-01-08 오후 5 39 59" src="https://user-images.githubusercontent.com/6640453/71962994-0b780e80-323e-11ea-94a4-0c0f88376bf4.png">

excute query in playground - error
<img width="1818" alt="스크린샷 2020-01-08 오후 5 40 14" src="https://user-images.githubusercontent.com/6640453/71963004-103cc280-323e-11ea-8caa-b3bc3cbf0a8d.png">

**Versions (please complete the following information):**
 - Connector: `MySQL`
 - Prisma Server: `1.30.0`
 - `prisma` CLI: `prisma/1.30.0 (darwin-x64) node-v12.8.1`
 - OS: `Ubuntu 18.04`

**Describe the bug:**
The generated prisma.go file contains errors if a type named `Client` exists.

**To Reproduce:**
Example `datamodel.prisma`:
```
type Client {
  _id: ID! @id
  clientid: String! @unique
  clientkey: String!
}
```
Error message after running `go build`:
```
generated/prisma-client/prisma.go:59:2: not enough arguments to return
generated/prisma-client/prisma.go:65:6: type Client has both field and method named Client
generated/prisma-client/prisma.go:124:17: cannot use edge.Node (type Client) as type Client in append
generated/prisma-client/prisma.go:134:17: cannot use &item.Node (type *Client) as type *Client in append
generated/prisma-client/prisma.go:1858:6: Client redeclared in this block
	previous declaration at generated/prisma-client/prisma.go:37:6
```
To me it looks like a namespace overlap (see error message for line 65).

I can create a complete example if it helps to debug the issue.

**Versions:**
 - Connector: `MongoDB` (should not depend on the connector)
 - Prisma Server: `1.34.10` (tested on latest docker container)
 - `prisma` CLI: `prisma/1.34.10 (linux-x64) node-v12.14.0`
 - OS: `Ubuntu 18.04` 

Hi!

I'm trying to export data from my Prisma 1.34 server running on Prisma Cloud. I created the app back when a default MySQL database was included (before it became Heroku or bring-your-own), but now I don't seem to have any way to export the data without knowing the management API secret of the server. And I'm not sure if the was ever exposed to me, so is there any way to obtain this? I'm logged in via the CLI as well.

For the record I'm getting the following output from `prisma export`:

`  client {"fileType":"nodes","cursor":{"table":0,"row":0,"field":0,"array":0}} +0ms
  Exporter {
  Exporter   errors: [
  Exporter     {
  Exporter       message: 'Your token is invalid. It might have expired or you might be using a token from a different project.',
  Exporter       code: 3015,
  Exporter       requestId: ''
  Exporter     }
  Exporter   ]
  Exporter } +0ms`

Note that I hadn't deployed in several months, so I am behind on the latest changes.

I ran
$ prisma deploy

and received the following warning:

  Global
    ! You are migrating from the old datamodel syntax to the new one. Make sure that you understand the listed changes because the semantics are different now. Then perform the deployment with the `--force` flag.

So if I force a deployment, will my server calls still work? I have not changed the code in my server.js file recently.
Not loading: https://slack.prisma.io/

Slack invite form doesn't work: https://www.prisma.io/community/