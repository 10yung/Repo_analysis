In relation to [LUCENENET-640](https://issues.apache.org/jira/projects/LUCENENET/issues/LUCENENET-640?filter=allopenissues)
Switching IdentityWeakReference from a class inheriting from the WeakReference class to a struct wrapping the GCHandle directly to avoid garbage collection bottleneck.
Lots of changes here (still a WIP)

* [x] Updates docs home page with up to date list of packages and links
* [x] Updates api docs Toc with up to date list of packages
* [x] Ensures that all converted `package.md` files for each namespace are included in the docs, previously this was not the case
* [ ] Ensures there are correct headers/titles for non-namespace overview.md files (such as Lucene.Net, Lucene.NetAnalysis.Common, etc...)
* [x] Much better handling of namespace detection for package.md files
* [x] One sln file to manage the documentation tools
* [x] Updates website docs links to point to new docs URLs with versions (i.e. http://lucenenet.apache.org/docs/4.8.0-beta00006/Index.html)
* [ ] Get the TestFramework project docs working
* [ ] Add lucene in action books and links in docs site https://www.amazon.com/s?k=lucene&ref=nb_sb_noss_1 (and/or on the website too)
* [ ] Fix download page "Be sure to check out the download page documentation. We are supposed to be linking to Apache's mirrors, as the repo is not setup for high traffic volume: http://www.apache.org/dev/release-download-pages.html"
* [ ] updates code snippet on homepage, see https://github.com/apache/lucenenet/pull/229#issuecomment-522809141
* [ ] Git branch per docs release - so the Improve this doc works
* [ ] deal with @lucene.experimental tags in places it's not working (i.e. conceptual files, override files and others)

(There's more stuff i'll add here, just need to remember it all)
1. Currently the code sample won't compile in Lucene.NET it's still the java syntax. I have updated to and tested this in C#
2. Also some formatting had been lost in translation, I have corrected the formatting
1. Fixing broken links referring to Lucene.Net.Search.Join. Namespace is Lucene.Net.Join in the other docs.
2. Breaking what looks like it was supposed to be bullets into bullets rather than a single bullet
3. Making code sample render as code sample
See https://issues.apache.org/jira/projects/LUCENENET/issues/LUCENENET-469 for background.

This is an early stage proposal for implementing IEnumerable<T> on various "Enum" types. To enable `foreach` and linq style operators.

This prototype provides `EnumEnumerator<T>` as a helper. It can be used in various ways to make the implementation of `IEnumerable<T>` more straightforward.

I have modified `IBytesRefIterator` and `TermsEnum` to add `IEnumerable<BytesRef>` and therefore to all of it's descendants.

The test (such as it is) demonstrates retrieving a `TermsEnum` from a reader. Then using `foreach` and a simple `.Count()` linq operator.

If this approach is acceptable it ought to be adaptable to other Enum types
Patch for QueryParser to avoid throwing lots of exceptions as part of main control flow.
When called very often, it slowed down a lot the
execution time when the visual studio debugger was attached.
This patch enhance the performance of the QueryParser under a debugger.
