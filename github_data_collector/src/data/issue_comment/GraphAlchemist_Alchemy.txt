
how to set node size (philosopher and normal node) from json source,
i try to use size: int, but no luck
Hi, 

I have filed this issue as recommended in README as I am interested in maintaining this project further. In my journey so far with Alchemy.js I have found this to be great at what it was designed for and it would be an absolute waste to abandon this project.

Thanks. 
how to centralize the graph being generated
while accessing http://cdn.graphalchemist.com/alchemy.min.js
it is responded: 
403 Forbidden
Request forbidden by administrative rules.

how to solve this problem?
Hi, i'm trying to use provided examples, but it looks like the tutorial is actually broken :

http://graphalchemist.github.io/Alchemy/#/examples


Hi,

i have a neo4j dataset i'd like to play with within Alchemy, do you have any guidelines to do that...the same way linkurious does for example ?
I've seen that Alchemy supports Graphjson format, but it does not mention how to easily get this out of neo4J for example, from a simple command line.
Like i have manually built a quite consequent dataset, i need something pretty automatic ;-p

Thank you in advance for your help, i really would like to see my datas displayed with your library !

https://github.com/adriens/neo4j-cuisine-nicoise

Kind Regards,

Adrien

On http://graphalchemist.github.io/Alchemy/#/ in the COntribute section, the link "Quick Start docs" targets http://graphalchemist.github.io/Alchemy/docs/#quick-start which does not seem to exist ;-(


GitHub changed the way Markdown headings are parsed, so this change fixes it.

See [bryant1410/readmesfix](https://github.com/bryant1410/readmesfix) for more information.

Tackles bryant1410/readmesfix#1

This code below:

Alchemy.prototype.generateLayout = function(instance) {
    var a;
    a = instance;
    return function(start) {
      var conf;
      if (start == null) {
        start = false;
      }
      conf = a.conf;
      a.layout = new Layout(a);

```
  return a.force = d3.layout.force().size([conf.graphWidth(), conf.graphHeight()]).theta(1.0).gravity(a.layout.gravity()).friction(a.layout.friction()).nodes(a.elements.nodes.d3).links(a.elements.edges.d3).linkDistance(function(link) {
    return a.layout.linkDistancefn(link);
  }).linkStrength(function(link) {
    return a.layout.linkStrength(link);
  }).charge(a.layout.charge()).chargeDistance(a.layout.chargeDistance());
};
```

 };

Throws the following exception:

Uncaught TypeError: d3.layout.force(...).size(...).theta(...).gravity(...).friction(...).nodes(...).links(...).linkDistance(...).linkStrength(...).charge(...).chargeDistance is not a function

After tinkering around I narrowed it down to:

```
  }).charge(a.layout.charge()).   >>> chargeDistance <<<   (a.layout.chargeDistance());
```
