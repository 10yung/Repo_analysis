Setting `.pathExtension` replaces any possible path extension on the Path, even if it doesn't actually have one (e.g. a file named "Image 2019-09-18 19.43.38.067"). Path needs `append(extension: String)` or some such.
Is there no way to get file base name (filename without extension)?
If yes then what the path that should be used and what changes are required for xcode project to support icloud on macOS
When adding a `String` to a `Path`, if the `Path` ends with `/` and the `String` starts with `/` then the results include `AnySequence` garbage.

```swift
import FileKit

print(Path("/Foo/bar/") + "/wat")
// prints:
// /Foo/bar/AnySequence<Path>(_box: Swift._SequenceBox<Swift._DropFirstSequence<FileKit.DirectoryEnumerator>>)
```

Tested with the latest `develop` (7521741d10b9e4c9b3eb1501191652f821eb3142) on Swift 4.1.2.
It would be great to have a way to add/remove extended file attributes. For example, If I wanted to associate different display name for file rather than original name of file. In such case, extended file attributes can come in handy.
Hi,
When I build your component with carthage I have these warnings:
```
../Sources/Carthage/Checkouts/FileKit/Sources/Path.swift:1066:17: warning: 'ExpressibleByStringInterpolation' is deprecated: it will be replaced or redesigned in Swift 4.0.  Instead of conforming to 'ExpressibleByStringInterpolation', consider adding an 'init(_:String)'
../Sources/Carthage/Checkouts/FileKit/Sources/TextFile.swift:231:21: warning: conditional downcast from 'NSString?' to 'String' is a bridging conversion; did you mean to use 'as'?
```
I just tried building this on an linux machine running Ubuntu 16.04 with swift 3.0.1 and there were several build errors.

[failures.txt](https://github.com/nvzqz/FileKit/files/778986/failures.txt)

I will attempt running this on my macOS laptop to see if I get the same failures
It's have a easy method to get relative path?

When testing FileKit, testWatch() will sometimes fail on the first attempt. I'm not familiar with GCD, so I don't necessarily know why this occurs.
