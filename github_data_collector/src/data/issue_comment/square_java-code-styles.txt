 Arrangements rule in Android Studio 3.5

[Android Studio Issue](https://issuetracker.google.com/issues/139793887)

Fixed #69
code style: SquareAndroid
When I reformat the xml, it change the tags order in xml. But the Square won't do this.

```
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical">

  <com.xxx.widget.ItemView
      android:id="@+id/first"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_60" />

  <View
      android:id="@+id/divider1"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_0_5"
      android:layout_marginStart="@dimen/dp_25"
      android:background="#eeeeee" />

  <com.xxx.widget.ItemView
      android:id="@+id/second"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_60"
      android:visibility="gone" />

  <View
      android:id="@+id/divider2"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_0_5"
      android:layout_marginStart="@dimen/dp_25"
      android:background="#eeeeee" />

  <com.xxx.widget.ItemView
      android:id="@+id/third"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_60"
      android:visibility="gone" />

</LinearLayout>
```
After reformat :

```
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:orientation="vertical">

  <View
      android:id="@+id/divider1"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_0_5"
      android:layout_marginStart="@dimen/dp_25"
      android:background="#eeeeee" />

  <View
      android:id="@+id/divider2"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_0_5"
      android:layout_marginStart="@dimen/dp_25"
      android:background="#eeeeee" />

  <com.xxx.widget.ItemView
      android:id="@+id/second"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_60"
      android:visibility="gone" />

  <com.xxx.widget.ItemView
      android:id="@+id/first"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_60" />

  <com.xxx.widget.ItemView
      android:id="@+id/third"
      android:layout_width="match_parent"
      android:layout_height="@dimen/dp_60"
      android:visibility="gone" />

</LinearLayout>
```

The option's not perfect, and often results in too much indentation (indent multiline parenthesized expressions would be better), but it's a lot better than having &&'s and ||'s at the same alignment regardless of parens.
Hi,

What do you think about supporting `.editorconfig` file format? It looks like pretty interesting project and it's independent from the IDE. I suppose, such support would require writing 2 new `.editorconfig` files basing on `config/codestyles/Square.xml` and `config/codestyles/SquareAndroid.xml`.

Reference link: https://editorconfig.org/

By the way: thanks for providing great code styles. I'm using it in all of my java, kotlin and android open-source projects :).

Regards,
Piotr
https://confluence.jetbrains.com/display/IDEADEV/New+project+code+style+settings+format+in+2017.3
This is some historical baggage or accident. It shouldn't be too hard to converge on a single style.
There're two advantages for adding an Eclipse configuration:
- The coding style can be shared and using across a team use Eclipse, Intellij and Netbeans.
- Intellij doesn't play well with non-javadoc comment. But in practice, we need that kind of comments to explain the background behind the code, something that helpful for maintainer, but can not be put into Javadoc. Eclipse Formatter handle this very well.

Known issues:
- There're no porting version for `SquareAndroid.xml`, as I don't think it's necessary. 
- Line breaks between annotation and method is not kept.

``` java
// input
interface HttpBinService {
  @GET("/ip")
  MyCall<Ip> getIp();
}

// Intellij won't change it. But Eclipse Formatter will remove the line break.
interface HttpBinService {
  @GET("/ip") MyCall<Ip> getIp();
}
```

Also, see #31 

I love Intellij IDEA, except the part that it's not handle non-javadoc comments nicely. Some time we need that type of comment to explain why we wrote code like  that. and not other way. 
Beside that, this repo is not only about Android. And lots of people still prefer Eclipse or Netbeans  for their java development. There are Eclipse Formmater plugins for [Intellij](https://github.com/krasa/EclipseCodeFormatter#instructions) and [Netbeans](http://plugins.netbeans.org/plugin/50877/eclipse-code-formatter-for-java). So, adding only one more xml file may help lots of people.

I plan to make a pull request for this. But I'm not sure if it worth doing that.

I like your code style. However, when reformatting my code using your style I am encountering various checkstyle violations for either [Sun's](https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/sun_checks.xml) or [Google's](https://github.com/checkstyle/checkstyle/blob/master/src/main/resources/google_checks.xml) default rules. It mostly complains about whitespaces before/after curly braces, line length and such stuff.

So my question is, if there exists a particular checkstyle-rules.xml for this style? Maybe it's a good idea to have both in place, code style along with dedicated check.

I've looked into the ones you are using in your projects, for instance [Dagger](https://github.com/square/dagger/blob/master/checkstyle.xml), but actually it just omits some rules.

Thanks in advance.
