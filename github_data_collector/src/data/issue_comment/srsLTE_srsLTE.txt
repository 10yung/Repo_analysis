Hi everyone.I am using **USRP B210** for srsLTE, how ever both EPC and eNB seems to be working fine (constant red LED on Tx+ constant Green on Rx of RF0) still am unable to detect any signal on my mobile. could anyone pls suggest any solution.n_prb is set as 50.
pls help out.thanks.




---  Software Radio Systems EPC  ---
Reading configuration file /home/esb3283/.config/srslte/epc.conf...
HSS Initialized.
MME S11 Initialized
MME GTP-C Initialized
MME Initialized. MCC: 0xf404, MNC: 0xff64
SPGW GTP-U Initialized.
SPGW S11 Initialized.
SP-GW Initialized.
Received S1 Setup Request.
S1 Setup Request - eNB Name: srsenb01, eNB id: 0x19b
S1 Setup Request - MCC:404, MNC:64, PLMN: 324678
S1 Setup Request - TAC 7, B-PLMN 0
S1 Setup Request - Paging DRX 2
Sending S1 Setup Response

-----------------------------------------------------------------------------------------------
Built in Release mode using commit 0e89fa9f on branch master.
---  Software Radio Systems LTE eNodeB  ---

Reading configuration file /home/esb3283/.config/srslte/enb.conf...
Opening 1 RF devices with 1 RF channels...
[INFO] [UHD] linux; GNU C++ version 8.3.0; Boost_106700; UHD_3.14.1.0-release
[INFO] [LOGGING] Fastpath logging disabled at runtime.
Opening USRP with args: type=b200,master_clock_rate=23.04e6
[INFO] [B200] Detected Device: B210
[INFO] [B200] Operating over USB 2.
[INFO] [B200] Initialize CODEC control...
[INFO] [B200] Initialize Radio control...
[INFO] [B200] Performing register loopback test... 
[INFO] [B200] Register loopback test passed
[INFO] [B200] Performing register loopback test... 
[INFO] [B200] Register loopback test passed
[INFO] [B200] Asking for clock rate 23.040000 MHz... 
[INFO] [B200] Actually got clock rate 23.040000 MHz.
Setting frequency: DL=2145.0 Mhz, UL=1745.0 MHz
Setting Sampling frequency 11.52 MHz

**==== eNodeB started ===**
Type <t> to view trace



I have had many difficulties getting LimeSDR mini to work with srsLTE. None of the online guides worked for me.

I now have a tested setup that works, for me, which I would like to share with others. Apologies for sharing on the 'issues' list, but this is where most people will look for solutions. Admins, feel free to close - unless others repeat this sequence and have issues, I will be happy to assist resolving.

Setup
===

My system is an Intel i7-3770T CPU, 8GB RAM, 128GB SSD. 
I am running Ubuntu 18.04.3 in a dual boot configuration. The setup described below follows from a fresh installation of the OS, as I wanted a reproducible setup from a clean install. Having worked on this for days, I have got the time for the sequence of "erase old OS, install new OS, build system, get srsLTE running" down to a 25 minute 48 seconds process. I'm sure this time could be improved :)

This setup was created by following and then adjusting the steps from the following two links:

https://docs.srslte.com/en/latest/general/source/1_installation.html
https://en.dlyang.me/limesdr-mini-on-ubuntu/

Setup steps.
========

Start with the LimeSDR mini not plugged into the PC.

Install Ubuntu 18.04.3 64 bit desktop OS.
Wait for the OS to advise of updates; install these and reboot.

Open a terminal shell. Enter the following commands, one at a time:

sudo add-apt-repository -y ppa:pothosware/framework
sudo add-apt-repository -y ppa:pothosware/support
sudo add-apt-repository -y ppa:myriadrf/drivers
sudo apt-get update
sudo apt-get install pothos-all -y
sudo apt-get install python-pothos -y
sudo apt-get install python3-pothos -y
sudo apt-get install pothos-python-dev -y
sudo apt-get install soapysdr-tools -y
sudo apt-get install python-soapysdr python-numpy -y
sudo apt-get install python3-soapysdr python3-numpy -y
sudo apt-get install soapysdr-module-remote soapysdr-server -y
sudo apt remove limesdr0.6-module-audio -y
sudo apt install soapysdr-module-all -y
sudo add-apt-repository -y ppa:myriadrf/drivers
sudo apt-get update
sudo apt-get install limesuite liblimesuite-dev limesuite-udev limesuite-images -y
sudo apt-get install soapysdr soapysdr-module-lms7 -y

Now plug your LimeSDR mini into a USB3 port, and run the command:

SoapySDRUtil --probe

In the output displayed, confirm the SDR is detected, and that it is on a USB3 port. If not, try another USB port.

Now enter the following commands, one at a time:

sudo apt-get install libsoapysdr-dev cmake libfftw3-dev libmbedtls-dev libboost-program-options-dev libconfig++-dev libsctp-dev git build-essential -y

git clone https://github.com/srsLTE/srsLTE.git
cd srsLTE
mkdir build
cd build
cmake ../
make
sudo make install
sudo ldconfig
sudo srslte_install_configs.sh user

That completes the installation. Before running the code, I edited the enb config file to get the transmission on a frequency (band20) that is used by my phone in Europe.

In the file ~/.config/srslte/enb.conf change the [rf] section to say
[rf]
dl_earfcn = 6200
tx_gain = 56
rx_gain = 38
device_name = soapy
device_args = rxant=LNAH,txant=BAND2

Now open up two terminal windows. In one, run the command
sudo srsepc

In the other, run
sudo srsenb

In the output of the above you should see the SDR is detected. The final output should be calibration completed and, in my case, a single "[WARNING] L" message. From this point, I have confirmed on a spectrum analyser that the enb is transmitting. 

I have yet to confirm cell information detection by an actual mobile phone, but those are next steps, followed by full connectivity with a test SIM.

SDR configuration
============

The configuration of the LimeSDR mini used in the tests above can been seen below.

SoapySDRUtil --probe

# resulting output:

######################################################
##     Soapy SDR -- the SDR abstraction library     ##
######################################################

Probe device 
[INFO] Make connection: 'LimeSDR Mini [USB 3.0] 1D4976B5C14D1A'
[INFO] Reference clock 40.00 MHz
[INFO] Device name: LimeSDR-Mini
[INFO] Reference: 40 MHz
[INFO] LMS7002M calibration values caching Disable

----------------------------------------------------
-- Device identification
----------------------------------------------------
  driver=FT601
  hardware=LimeSDR-Mini
  boardSerialNumber=0x1d4976b5c14d1a
  firmwareVersion=6
  gatewareVersion=1.30
  hardwareVersion=2
  protocolVersion=1

----------------------------------------------------
-- Peripheral summary
----------------------------------------------------
  Channels: 1 Rx, 1 Tx
  Timestamps: YES
  Sensors: clock_locked, lms7_temp
  Registers: BBIC
  GPIOs: MAIN

----------------------------------------------------
-- RX Channel 0
----------------------------------------------------
  Full-duplex: YES
  Supports AGC: NO
  Stream formats: CF32, CS12, CS16
  Native format: CS16 [full-scale=2048]
  Stream args:
     * Buffer Length - The buffer transfer size over the link.
       [key=bufferLength, units=samples, default=0, type=int]
     * Link Format - The format of the samples over the link.
       [key=linkFormat, default=CS16, type=string, options=(CS16, CS12)]
     * Skip Calibration - Skip automatic activation calibration.
       [key=skipCal, default=false, type=bool]
  Antennas: NONE, LNAH, LNAL_NC, LNAW, Auto
  Corrections: DC removal, DC offset, IQ balance
  Full gain range: [-12, 61] dB
    TIA gain range: [0, 12] dB
    LNA gain range: [0, 30] dB
    PGA gain range: [-12, 19] dB
  Full freq range: [0, 3800] MHz
    RF freq range: [30, 3800] MHz
    BB freq range: [-10, 10] MHz
  Tune args:
     * LO Offset - Tune the LO with an offset and compensate with the baseband CORDIC.
       [key=OFFSET, units=Hz, default=0.0, type=float, range=[-1e+07, 1e+07]]
     * BB - Specify a specific value for this component or IGNORE to skip tuning it.
       [key=BB, units=Hz, default=DEFAULT, type=float, range=[-1e+07, 1e+07], options=(DEFAULT, IGNORE)]
  Sample rates: [0.1, 65] MSps
  Filter bandwidths: [1.4, 130] MHz
  Sensors: lo_locked
  Other Settings:
     * TSP DC Level - Digital DC level in LMS7002M TSP chain.
       [key=TSP_CONST, type=int, range=[0, 32767]]

----------------------------------------------------
-- TX Channel 0
----------------------------------------------------
  Full-duplex: YES
  Supports AGC: NO
  Stream formats: CF32, CS12, CS16
  Native format: CS16 [full-scale=2048]
  Stream args:
     * Buffer Length - The buffer transfer size over the link.
       [key=bufferLength, units=samples, default=0, type=int]
     * Link Format - The format of the samples over the link.
       [key=linkFormat, default=CS16, type=string, options=(CS16, CS12)]
     * Skip Calibration - Skip automatic activation calibration.
       [key=skipCal, default=false, type=bool]
  Antennas: NONE, BAND1, BAND2, Auto
  Corrections: DC offset, IQ balance
  Full gain range: [-12, 64] dB
    PAD gain range: [0, 52] dB
    IAMP gain range: [-12, 12] dB
  Full freq range: [0, 3800] MHz
    RF freq range: [30, 3800] MHz
    BB freq range: [-10, 10] MHz
  Tune args:
     * LO Offset - Tune the LO with an offset and compensate with the baseband CORDIC.
       [key=OFFSET, units=Hz, default=0.0, type=float, range=[-1e+07, 1e+07]]
     * BB - Specify a specific value for this component or IGNORE to skip tuning it.
       [key=BB, units=Hz, default=DEFAULT, type=float, range=[-1e+07, 1e+07], options=(DEFAULT, IGNORE)]
  Sample rates: [0.1, 65] MSps
  Filter bandwidths: [5, 40], [50, 130] MHz
  Sensors: lo_locked
  Other Settings:
     * TSP DC Level - Digital DC level in LMS7002M TSP chain.
       [key=TSP_CONST, type=int, range=[0, 32767]]







Can someone please help out.
I am trying to connect my commercial phone to **srsLTE build using USRP B210.**
Am **not getting any LTE signal on my phone,** even though **SRS enb and epc 
are both running on pc.** can anyone pls let know where am going wrong?

kindly help out . thanks.
With the last set of fixes I have VoLTE registration succeeding.

Dedicated Bearers seem to be the last hurdle for VoLTE calls.  Since there is already some support in UE would it be possible to get them on the ENB roadmap?

Before filing an issue, search for solutions here:
- srsLTE users mailing list (http://www.softwareradiosystems.com/mailman/listinfo/srslte-users)

## Issue Description ##
As soon as I connect with my sysmocom custom SIM(using an iPhone SE), srsenb establishes a connection. Instead it throws the error "get_npucch(): Invalid parameters". After ~3-5 minutes srsenb just stops/crashes. I used the current master branch tag/release_19_09.

## Setup Details ##
[Specify details of the test setup. This would help us reproduce the problem reliably]
The setup is as follows:
Running srsenb over Ettus Research B210 (driver: UHD_3.14.1.HEAD-0-g98c7c986)
OS: Ubuntu 18.04.3 LTS
UE is an iPhone SE with a programmable SIM from sysmocom 
I use ip-forwarding and nat to connect the connected phone to the internet.

## Expected Behavior ##
[What you expect to happen]
No get_npucch(): Invalid parameters exception in the console.

## Actual Behaviour ##
[What happens instead e.g. error message]
Spamming "get_npucch(): Invalid parameters" in the terminal I run srsenb from and srsenb stops/crashes after 3-5 minutes of spamming.


## Steps to reproduce the problem ##
[Tell us how to reproduce this issue e.g. RF setup, application config files]
Configs:
I added the SIM entry of my sysmocom SIM in user_db.csv.
I changed the in the mme section of enb.conf and epc.conf the values of mcc to 901 and the value of mnc to 70. I also changed the value of dl_earfcn in enb.conf to 1300.

Steps:
1. start sudo srsepc
2. start sudo srsenb
3. switch phone either on/off or turn flight mode on/off so your phone looks for a network
4. as soon as the phone connects to the enb, the terminal throws "get_npucch(): Invalid parameters" multiple times.

## Additional Information ##
[Any additional information, configuration or data that might be necessary to reproduce the issue]
To verify I didn't do anything wrong, I used the tag/release_19_06 to check if it works. It works fine there, with no "get_npucch(): Invalid parameters" exception thrown. The outputs of the terminal, log as well as pcap are attached.

[Outputs.zip](https://github.com/srsLTE/srsLTE/files/3890829/Outputs.zip)

The PR includes the rrc and nas standalone decoder for fuzzing the decoder libs.
Before filing an issue, search for solutions here:
- srsLTE users mailing list (http://www.softwareradiosystems.com/mailman/listinfo/srslte-users)

## Issue Description ##
When configuring `srsenb` with the DL EARFCN 66886, a B66 EARFCN, the console message shows `Setting frequency: DL=2155.0 Mhz, UL=2065.0 Mhz`.  The DL frequency is correct but the UL frequency is incorrect as it should be 1755.0 Mhz.  I am able to see the DL transmission on 2155.0 Mhz but no other device can sees the transmission as a valid ENB carrier. Does the latest release of `srsenb` support ENB transmission in LTE band 66 and has it been validated? 

`user@linux:~$ **sudo srsenb --rf.dl_earfcn 66886**

Built in RelWithDebInfo mode using 19.6.0.

---  Software Radio Systems LTE eNodeB  ---

Reading configuration file /home/user/.config/srslte/enb.conf...
Opening 1 RF devices with 1 RF channels...
[INFO] [UHD] linux; GNU C++ version 8.2.0; Boost_106700; UHD_3.13.1.0-3
[INFO] [LOGGING] Fastpath logging disabled at runtime.
Opening USRP with args: type=b200,master_clock_rate=23.04e6
[INFO] [B200] Detected Device: B210
[INFO] [B200] Operating over USB 3.
[INFO] [B200] Initialize CODEC control...
[INFO] [B200] Initialize Radio control...
[INFO] [B200] Performing register loopback test... 
[INFO] [B200] Register loopback test passed
[INFO] [B200] Performing register loopback test... 
[INFO] [B200] Register loopback test passed
[INFO] [B200] Asking for clock rate 23.040000 MHz... 
[INFO] [B200] Actually got clock rate 23.040000 MHz.
Setting frequency: DL=2155.0 Mhz, **UL=2065.0 MHz**
Setting Sampling frequency 11.52 MHz
The condition lb <= n <= ub (1 <= 66 <= 64) was not met
[/build/srslte-ttj7IH/srslte-19.06/lib/src/asn1/rrc_asn1.cc][20093] Encoding failure.
[/build/srslte-ttj7IH/srslte-19.06/lib/src/asn1/rrc_asn1.cc][20393] Encoding failure.
[/build/srslte-ttj7IH/srslte-19.06/lib/src/asn1/rrc_asn1.cc][20273] Encoding failure.
[/build/srslte-ttj7IH/srslte-19.06/lib/src/asn1/rrc_asn1.cc][20423] Encoding failure.

==== eNodeB started ===
Type <t> to view trace`

I also tried setting the DL and UL EARFCN directly but encounter the same issue:

`user@linux:~$ **sudo srsenb --rf.dl_earfcn 66886 --rf.ul_earfcn 132422**

Built in RelWithDebInfo mode using 19.6.0.

---  Software Radio Systems LTE eNodeB  ---

Reading configuration file /home/user/.config/srslte/enb.conf...
Opening 1 RF devices with 1 RF channels...
[INFO] [UHD] linux; GNU C++ version 8.2.0; Boost_106700; UHD_3.13.1.0-3
[INFO] [LOGGING] Fastpath logging disabled at runtime.
Opening USRP with args: type=b200,master_clock_rate=23.04e6
[INFO] [B200] Detected Device: B210
[INFO] [B200] Operating over USB 3.
[INFO] [B200] Initialize CODEC control...
[INFO] [B200] Initialize Radio control...
[INFO] [B200] Performing register loopback test... 
[INFO] [B200] Register loopback test passed
[INFO] [B200] Performing register loopback test... 
[INFO] [B200] Register loopback test passed
[INFO] [B200] Asking for clock rate 23.040000 MHz... 
[INFO] [B200] Actually got clock rate 23.040000 MHz.
Setting frequency: DL=2155.0 Mhz, **UL=2065.0 MHz**
Setting Sampling frequency 11.52 MHz
The condition lb <= n <= ub (1 <= 66 <= 64) was not met
[/build/srslte-ttj7IH/srslte-19.06/lib/src/asn1/rrc_asn1.cc][20093] Encoding failure.
[/build/srslte-ttj7IH/srslte-19.06/lib/src/asn1/rrc_asn1.cc][20393] Encoding failure.
[/build/srslte-ttj7IH/srslte-19.06/lib/src/asn1/rrc_asn1.cc][20273] Encoding failure.
[/build/srslte-ttj7IH/srslte-19.06/lib/src/asn1/rrc_asn1.cc][20423] Encoding failure.

==== eNodeB started ===
Type <t> to view trace`

I also tried setting the UL and DL frequency with the console output showing the frequencies as
`Setting frequency: DL=0.0 Mhz, UL=0.0 MHz`

I configured the `srsenb` for a B30 DL EARFCN and the frequencies are calculated correctly.

## Setup Details ##
I am running the latest release of `srsepc` and `srsenb` on a local Ubuntu 19.04 LTS OS  with an attached USRP B210 using UHD_3.13.1.0-3.

## Expected Behavior ##
The `srsenb` transmitting a LTE B66 carrier that is visible to a UE.

## Actual Behaviour ##
`srsenb` indicates it is transmitting a LTE carrier but the frequencies do not match what is expected

## Steps to reproduce the problem ##

In `~/.conf/enb.conf`, set `dl_earfcn` to 66886
Run `sudo srsenb`
See console output for `Setting frequency` and that the UL frequency is incorrect.

## Additional Information ##
Based on the this output `The condition lb <= n <= ub (1 <= 66 <= 64) was not met`, do I assume that the highest LTE band supported is 64?



Hi guys,

I would like to know if the srsLTE support multiple cells within the eNB, i would like to install a configuration with two BladeRF (one for each cell) in order to test the intra-eNB Handover,

Thanks,



in estimate_noise_pilots function,if nsymbols > 3 sum_power need sum all the symbols ? right now is sum_power / (float) count * sqrtf(weight + 4.0f) 