See https://codesandbox.io/s/tinymce-vue-bootstrap-vue-modal-focusin-zxfjn

Use [official workaround](https://www.tiny.cloud/docs/integrations/bootstrap/#usingtinymceinabootstrapdialog) for bootstrap-vue modal not works. The Tinymce dialog are not editable.

```js
// Prevent Bootstrap dialog from blocking focusin
$(document).on('focusin', function(e) {
  if ($(e.target).closest(".tox-tinymce-aux, .moxman-window, .tam-assetmanager-root").length) {
    e.stopImmediatePropagation();
  }
});
```

Seems works with native Bootstrap 4 https://codesandbox.io/s/bootstrap-tinymce-mxi9f
how to use the 'images_upload_base_path'?

I tried 

`init: {
				convert_urls: false,
				images_upload_base_path: '/../../',
				relative_urls: false,
			},`

and not work
Hello, 

I’m trying to integrate the tiny mce vue component in a Bootsrap modal.  

The first load of Tiny Mce component works fine. Then if I close the modal, it becomes impossible to edit the body of the Tiny Mce component. It is totally blank. 
If I take a look at the Dom, I can see the `<body>` tag of Tiny Mce component is empty. And if I click in the editor my mouse pointer cannot get the focus in the iframe.  

I have tried to implement different solutions to fix that problem but I haven’t found any solutions working.  

Can someone help me to solve that problem ?  
**I use TinyMCE Vue with component and build into an app successfully. But When I leave the component,TinyMCE Vue starts to report error**

this error is:
`[Vue warn]: Error in beforeDestroy hook: "TypeError: element.dom(...).removeEventListener is not a function"

found in
<Editor>
       <TinymceEditor> at src/components/Editor/TinymceEditor.vue


`

Element not found
`
var unbind = function (element, event, handler, useCapture) {
      element.dom().removeEventListener(event, handler, useCapture);
    };
`

**Please tell me why does this happen?**
Good morning.

I'm uses tiny in a vue project and my editor open but return this message: "The API key you have entered is invalid. Please review your API key here."

My api-key is correct and i verify in my tiny account.

**Info**
1 - In the first render the tiny editor open normaly but when updated started to return the error.
2 - I have more of one editor in my page.
3 - My account is free.

How can i solve?
Thanks for your attention.
Hey, in the 'normal' tinymce, aparently there is a directory "tinymce/jscripts/tiny_mce/plugins", where you can edit and add new custom plugins by dropping on this directory, as It says on the installation of this plugin https://github.com/moonwave99/TinyMCELaTeXPlugin
But on this vue-accessible version I can't find this directory, am I being dumb or is there no way to add this custom plugin to the editor?
**What is the current behavior?**
I wrote button, which is changes the tag which is wrapping inline editor (h1, h2, etc,).
And when I change tag. Tag is changing, but editor has no content in it.
This is component HTML init:
`<tinymce-editor inline :id="getAtomTagId()" ref="editorLink" :class="getTinyClasses()" :initial-value="getInitialValue" :style="getStyle" :tag-name="tagName" :init="tinyMCEOptions" @onInit="onInitTinyMCE" @onBlur="onBlurTinyMCE"></tinymce-editor>`

data(){
  return {
    tagName: 'h1'
  }
}


Tag is dynamically string in component. I change h1 to h2 and etc.
This is the button which is have change function:
```
tinyMCEOptions: {
                menubar: false,
                language: 'ru',
                plugins: [
                    'link',
                    'lists',
                    'autolink'
                ],
                toolbar: [
                    'bold italic underline fontselect fontsizeselect link unlink forecolor backcolor selectTags'
                ],
                fontsize_formats: '10px 12px 14px 16px 18px 20px 22px 24px 26px 28px 30px 32px 34px 36px 38px 40px 42px 44px 46px 48px 50px 52px 54px 56px 58px 60px 62px 64px 66px 68px 70px',
                setup: (editor) => {
                    let data = this.getData(); //Object with tags
                    editor.ui.registry.addMenuButton('selectTags', {
                        text: data.tag.toString().toLocaleUpperCase(),
                        fetch: (callback) => {
                            let data = this.getData();
                            let tags = ['h1', 'h2', 'h3'];  // ['h1', 'h2', 'h3']
                            let items = [];

                            //Пропишем смену тегов
                            tags.forEach((tag) => {
                                items.push({
                                    type: 'menuitem',
                                    text: tag.toString().toLocaleUpperCase(),
                                    onAction: async () => {
                                       this.tagName = tag;
                                    }
                                })
                            });
                            callback(items);
                        }
                    });
                }
            }
```

**What is the expected behavior?**
content must to been showed with new tag.

**Which versions of TinyMCE, and which browser / OS are affected by this issue? Did this work in previous versions of TinyMCE or tinymce-vue?**
5.0.14, Window 8

I am using the images_upload_handler and returning the following image path:

`https://firebasestorage.googleapis.com/v0/b/highlevel-backend.appspot.com/o/company%2FYuTUZlUtrwBtvmgByZDW%2Fusers%2FleHuax7bLBJIpnZdJzHV%2Fee41801e-7c87-46b0-8188-6930a88c0edb?alt=media&token=f40d04a5-3793-4100-af5a-8e9da8be95da`

After returning the string if I do a view code in the tinymce editor I see the following string has been set as the src:

https://firebasestorage.googleapis.com/v0/b/highlevel-backend.appspot.com/o/company%2FYuTUZlUtrwBtvmgByZDW%2Fusers%2FleHuax7bLBJIpnZdJzHV%2F25568b99-92de-483e-bb6f-a0ca615c9f89?alt=media&amp;token=86f74d7a-ecf6-4d47-8635-b36a662fcfb7

Notice the "&amp;" in the second url, this is causing it to break when sending this URL through gmail do to the encoding, is this a bug or is there an option to change this? Thank you!
I use TinyMCE Vue and build into an app successfully. But I can't build into a web component.

I mean : 
https://cli.vuejs.org/guide/build-targets.html#web-component

Is it possible to do? or I make some mistake I don't realize.

Thanks.
Hi I am trying to achieve changing the tinymce configuration (passed in on :init) dynamically at runtime.
I am not using cloud - but have made tinymce globally available by import "tinymce/tinymce"  in main.js etc..

So far I got this working with:

**In the template the relevant stuff is:**
A)  a selector (drop-down based on vue bootstrap - not relevant) calling the reInit() function 
B) The Vue Tinymce editor:


  <b-form-select id="configselector" v-model="configselector.selected"
                                       :options="configselector.options" @change="reInit()"/>
      <editor ref="tinyMceEditor" v-model="content" :init="this.configselector.selected" @onChange="handlerfunction"></editor>


**and in the data section of the Vue file:**

` data() {
      return {
       content: '<b>content here</b>',
        configselector:{
                        selected: tinyMceDefaultConfig,
                        options: [
                            {value: tinyMceDefaultConfig, text: 'default'},
                            {value: tinyMceMiniConfig, text: 'mini'},
                        ]
                    },
tinyMceDefaultConfig = {
    height: '100%',
  // other settings...
},
tinyMceMiniConfig{
  height: 200,
}
      }
}`

**and in the methods section of the Vue file:**

`methods:{
 reInit: function () {
               this.$refs.tinyMceEditor.editor.remove();
               this.$refs.tinyMceEditor.editor = new tinymce.Editor(this.$refs.tinyMceEditor.editor.id, this.configselector.selected, tinymce.EditorManager);
               this.$refs.tinyMceEditor.editor.render();
            }
}`

Now this approach apparently works - **BUT** the editor is no longer reactive - and the v-model property no longer gets updated. The id of the  $refs.tinyMceEditor.editor appears to be the same after - but having {{content}} in the template no longer gets updated.

Does anyone have any idea how to change the tinymce config properly (dynamically) - using Vue tinymce - AND "staying reactive" / keeping the v-model bound??

Perhaps this should be a feature request - having a  this.$refs.tinyMceEditor.editor.setSettings(newConfig) that would automatically call a "refresh on the ui" or something - if this is not at all possible in todays version ("@tinymce/tinymce-vue": "^2.0.0").


PS: I have even tried a dirty hack of having 2  <editor> instances, each wrapped in a conditional div v-if="condition" (with different :init configs from start) and switching between them (by changing condition true/false) - but this doesn't either work because of how the toolbar gets rendered - it just doesnt work the way you would expect- the toolbar gets rendered - despite being inside the false condition div... What??

**Any help would be greatly appreciated.** 
Please let me know if I can assist in any way by providing more info if anything is unclear.
Hope some tinymce genius out there will be able to assist. :-)

Best regards,
H


