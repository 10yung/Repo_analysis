**Expected behaviour:**

PiHole starts to serve as a DNS server

**Actual behaviour:**

I can ping, traceroute, access admin panel through IP and SSH into the machine, but no machine in the network would use it as a DNS server. BUT when inputing direct queries into SSH for DNS resolver I get instant responses and the machine is able to download its updates, and resolves queries made by itself.

**Steps to reproduce:**

Connect the Rasp with clean Rasbian Buster Lite, install PiHole, restart it even for good measure after install process and set it's IP as a DNS server by either router or computer directly.

`{Steps of what you have done to fix this}`

Restarted the machine, restarted resolver, reinstalled pihole 3 times, tried switching on/off wonky router settings (like security settings or DNS Overrride/Relay), setting Rasp as a DNS in either router settings or in PC network adapter settings, somewhat tested also setting raspberry as a DHCP also, but for some reason the adresses didn't change.
FYI cmd commands or settings/whole pc restart on Win10 machine also doesn't make a difference and nslookup just finishes in timeout or unknown.
Modem/Router is an Arris TG2492S
**In raising this issue, I confirm the following:** `{please fill the checkboxes, e.g: [X]}`

- [x] I have read and understood the [contributors guide](https://github.com/pi-hole/pi-hole/blob/master/CONTRIBUTING.md).
- [x] The issue I am reporting can be *replicated*.
- [x] The issue I am reporting isn't a duplicate (see [FAQs](https://github.com/pi-hole/pi-hole/wiki/FAQs), [closed issues](https://github.com/pi-hole/pi-hole/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), and [open issues](https://github.com/pi-hole/pi-hole/issues)).

**How familiar are you with the the source code relevant to this issue?:**

`0`

---
**Expected behaviour:**

Gravity gathers domains and stores efficiently in the sqlite3 database with no need for duplicate entries.

**Actual behaviour:**

Gravity gathers domains and stores duplicate domains as they are technically "unique" in terms of which adlist they appear in (`adlist_id`).

I understand that this would be potentially a lot more involved and may affect things like joins (my db knowledge isn't fantastic), but would it not make sense to try storing ids in `adlist_id` in the following format: `1,2,5,6`?

This may not be an issue so much for users with a small amount of blocklists (e.g. the default ones), but so many people seem to see "bigger is better" when it comes to this kind of thing and it's not uncommon to see people with millions of domains across many blocklists.

I have seen instances of 4M+ unique domains where the gravity table grows to be in excess of 8M+ entries because of how things are currently stored. This must have some form of performance impact somewhere, seeing as the processing is mostly done on small devices like Raspberry Pis.

**Steps to reproduce:**

1. Have an accumulation of blocklists that have many of the same domains between them
2. Run gravity update
**In raising this issue, I confirm the following:** `{please fill the checkboxes, e.g: [X]}`

- [x] I have read and understood the [contributors guide](https://github.com/pi-hole/pi-hole/blob/master/CONTRIBUTING.md).
- [x] The issue I am reporting can be *replicated*.
- [x] The issue I am reporting isn't a duplicate (see [FAQs](https://github.com/pi-hole/pi-hole/wiki/FAQs), [closed issues](https://github.com/pi-hole/pi-hole/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), and [open issues](https://github.com/pi-hole/pi-hole/issues)).

**How familiar are you with the the source code relevant to this issue?:**

1

---
**Expected behaviour:**

Not relevant.

**Actual behaviour:**

I don't think this is implemented yet, although it may be possible by editing config files?

**Steps to reproduce:**

N/A

**Debug token provided by [uploading `pihole -d` log](https://discourse.pi-hole.net/t/the-pihole-command-with-examples/738#debug):**

N/A

**Troubleshooting undertaken, and/or other relevant information:**

N/A

Title is fairly self explanatory, however here is a more in-depth explanation.

I have configured PiHole to be the DHCP server for my local network. It appears to be working and is assigning IPs dynamically to hosts.

I have several devices on this network, each with a unique hostname.

I would like to be able to configure Pi-Hole so that it acts as a DNS server for these local hostnames.

Is this possible?

If it is possible, does this require that I configure my devices with static IP addresses, or can this be done in conjunction with DHCP?

Possibly such a thing would require me to write some new software which sends hostnames to PiHole after an IP is obtained via DHCP. I could possibly do such a thing, although it may take me a while to figure out how.

Regarding expected behaviour, from the computer I am currently using, I would anticipate being able to do 

```
ssh username@pc2020
or possibly
ssh username@pc2020.mydomain
```
**In raising this issue, I confirm the following:** `{please fill the checkboxes, e.g: [X]}`

- [x] I have read and understood the [contributors guide](https://github.com/pi-hole/pi-hole/blob/master/CONTRIBUTING.md).
- [x] The issue I am reporting can be *replicated*.
- [x] The issue I am reporting isn't a duplicate (see [FAQs](https://github.com/pi-hole/pi-hole/wiki/FAQs), [closed issues](https://github.com/pi-hole/pi-hole/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), and [open issues](https://github.com/pi-hole/pi-hole/issues)).

**How familiar are you with the the source code relevant to this issue?:**

`4`

---
**Expected behaviour:**

When **Use DNSSEC** under Settings>DNS, pihole should have this feature enabled.

**Actual behaviour:**

Upon initially enabling **Use DNSSEC**, pihole functions as it should, logging codes like "SECURE" and "INSECURE" as queries are sent to it.  The bug I am seeing occurs on a reboot of the pihole box.  Despite the **Use DNSSEC** having a check mark on it, I do not get the expected annotations in the log.  As well, if I run `dig +dnssec debian.org` on the freshly booted pihole, I do not get the expected **ad** flag in the output

**Steps to reproduce:**

To fix the behavior, I need to uncheck **Use DNSSEC** and hit **save**  then check it and hit **save**, the behavior returns to normal both with respect to the query log and to assing the **ad** flag in the `dig` output.  Again, this only happens if I reboot pihole, it stays enabled for weeks until that reboot.

I cannot provide the debug token as this is running from the unsupported Arch Linux packages
* https://aur.archlinux.org/packages/pi-hole-server/
* https://aur.archlinux.org/packages/pi-hole-ftl/


Here are some logs on a fresh boot:
* [pihole.log](https://gist.github.com/graysky2/9902a46806b3435662f8ec0dd008e021)
* [pihole-ftl.log](https://gist.github.com/graysky2/4a80932e5c7ba53b09cc39f6f31f41f9)

The next two are after I uncheck, save, check, save the **Use DNSSEC** option:
* [pihole.log](https://gist.github.com/graysky2/fd53cfd3f8923e0c21bb94a19d2fc638)
* [pihole-ftl.log](https://gist.github.com/graysky2/1f3fe31b1e3ffdea118312f934b1533e)

What exactly happens when a user checks the **Use DNSSEC** box and hits **save**?  Perhaps something in the Arch packaging is not doing all the steps? 
**In raising this issue, I confirm the following:** `{please fill the checkboxes, e.g: [X]}`

- [X] I have read and understood the [contributors guide](https://github.com/pi-hole/pi-hole/blob/master/CONTRIBUTING.md).
- [X] The issue I am reporting can be *replicated*.
- [X] The issue I am reporting isn't a duplicate (see [FAQs](https://github.com/pi-hole/pi-hole/wiki/FAQs), [closed issues](https://github.com/pi-hole/pi-hole/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), and [open issues](https://github.com/pi-hole/pi-hole/issues)).

**How familiar are you with the the source code relevant to this issue?:** 1

---
**Expected behaviour:**
On restarting the server, pi-hole should resume operation and all devices will have access to the local network and internet via the pi-hole DNS service.

**Actual behaviour:**
Following any server restart (forced / unexpected / etc.), pi-hole is started and running but no device can access any internal / external resources.

Devices already on the network (i.e. have IP addresses) can still be reached via the IP address.

On SSH into the server and running a command such as sudo pihole status, everything starts working again.

**Steps to reproduce:**
1. Install pi-hole and confirm it is running as expected.
2. Restart the server.
3. Check for network availability.

**Debug token provided by [uploading `pihole -d` log](https://discourse.pi-hole.net/t/the-pihole-command-with-examples/738#debug):**
qad3l8g5v2

**Troubleshooting undertaken, and/or other relevant information:**
Only basic checking to discover where the problem was in terms of overall network failure following the restart and discovering the "fix".

A cron command `@restart sleep 30 && /usr/local/bin/pihole status` ensures DNS is recovered following a restart event.

This is a setup on Debian 10. Not a typical Pi-Hole setup as I'm trying to remove the need to have the Raspberry Pi running. I appreciate this may in itself cause issues.
**In raising this issue, I confirm the following:** `{please fill the checkboxes, e.g: [X]}`

- [x] I have read and understood the [contributors guide](https://github.com/pi-hole/pi-hole/blob/master/CONTRIBUTING.md).
- [x] The issue I am reporting can be *replicated*.
- [x] The issue I am reporting isn't a duplicate (see [FAQs](https://github.com/pi-hole/pi-hole/wiki/FAQs), [closed issues](https://github.com/pi-hole/pi-hole/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), and [open issues](https://github.com/pi-hole/pi-hole/issues)).

**How familiar are you with the the source code relevant to this issue?:**

1

--
**Expected behaviour:**

The Tutorial for setting up OpenVPN in parallel suggested to switch the interface-listening mode into "all interfaces". Probably so the "tun" interface could be listened aswell.

**Actual behaviour:**

However as soon as the listening interface is switched, not a single DNS query could reach the pihole. Its also not query-logging anything, even though the device is still ping-able from the network.

**Steps to reproduce:**

I am running OpenVpn in parallel with Pihole on a Raspberry Pi Zero Wireless.
The Pihole is located in a local network behind a DS-Lite router (Fritz-Box) and hence has ipv6 support enabled to be reachable. The router does provide a DNS forwarding which is not used. Instead Dhcp is used to directly push the pihole ipv4 as DNS.

**Debug token provided by [uploading `pihole -d` log](https://discourse.pi-hole.net/t/the-pihole-command-with-examples/738#debug):**

t9vo8y9ruk

NOTE: the debug was created the the time of listening on interface wlan0. However this probably doesnt have any value at all since localhost querys never fail to resolve. Its just the external ones...

**Troubleshooting undertaken, and/or other relevant information:**

tried switching interface listening to "allow all origins" - with no success.

switched back to wlan0 interface - connectivity was restored.

Edit: I do have the usb0 ethernet interface enabled so I could still connect it to my pc and shh into it without Wlan. Perhaps this might be causing an issue..

Thanks in advance.
Better to use command -v

**By submitting this pull request, I confirm the following:** 
*please fill any appropriate checkboxes, e.g: [X]*

- [x] I have read and understood the [contributors guide](https://github.com/pi-hole/pi-hole/blob/master/CONTRIBUTING.md), as well as this entire template.
- [x] I have made only one major change in my proposed changes.
- [ ] I have commented my proposed changes within the code.
- [x] I have tested my proposed changes, and have included unit tests where possible.
- [x] I am willing to help maintain this change if there are issues with it later.
- [x] I give this submission freely and claim no ownership.
- [x] It is compatible with the [EUPL 1.2 license](https://opensource.org/licenses/EUPL-1.1)
- [ ] I have squashed any insignificant commits. ([`git rebase`](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html))

Please make sure you [Sign Off](https://github.com/pi-hole/pi-hole/wiki/How-to-signoff-your-commits.) all commits. Pi-hole enforces the [DCO](https://github.com/pi-hole/pi-hole/wiki/Contributing-to-the-project).

---
**What does this PR aim to accomplish?:**
*A detailed description, screenshots (if necessary), as well as links to any relevant GitHub issues*


**How does this PR accomplish the above?:**
*A detailed description (such as a changelog) and screenshots (if necessary) of the implemented fix*


**What documentation changes (if any) are needed to support this PR?:**
*A detailed list of any necessary changes*


---
* You must follow the template instructions. Failure to do so will result in your pull request being closed.
* Please respect that Pi-hole is developed by volunteers, who can only reply in their spare time.


There's no way to get the actual name of the process that is holding the port. It's never passed in to the checker function.

https://github.com/pi-hole/pi-hole/blob/e0fde41d879b083164a39e2993b0576451a8aa09/advanced/Scripts/piholeDebug.sh#L711


**In raising this issue, I confirm the following:** 

- [x] I have read and understood the [contributors guide](https://github.com/pi-hole/pi-hole/blob/master/CONTRIBUTING.md).
- [x] The issue I am reporting can be *replicated*.
- [x] The issue I am reporting isn't a duplicate (see [FAQs](https://github.com/pi-hole/pi-hole/wiki/FAQs), [closed issues](https://github.com/pi-hole/pi-hole/issues?utf8=%E2%9C%93&q=is%3Aissue%20is%3Aclosed%20), and [open issues](https://github.com/pi-hole/pi-hole/issues)).

**How familiar are you with the the source code relevant to this issue?:**

1

---
**Expected behaviour:**

Default installation should block `s.youtube.com` 
There is a record:
```
0.0.0.0 s.youtube.com  # Blocking this will interfere with video watching history
```
in `https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts`

**Actual behaviour:**

Default installation does not block `s.youtube.com`
The record is not in gravity.db
```
# sqlite3 /etc/pihole/gravity.db
sqlite> SELECT domain FROM gravity WHERE domain LIKE '%s.youtube.com%'
   ...> 
ads.youtube.com
ads.youtube.com
```

**Steps to reproduce:**

1) Install Pi-hole using official guide
2) `pihole checkout dev`
3) `curl s.youtube.com`
4) `dig @127.0.0.1 s.youtube.com`
5) check query log

**Debug token provided by [uploading `pihole -d` log](https://discourse.pi-hole.net/t/the-pihole-command-with-examples/738#debug):**

9dzt42g24w

**Troubleshooting undertaken, and/or other relevant information:**

None
Relevant: this issue was found when looking into https://github.com/pi-hole/pi-hole/issues/2856
**By submitting this pull request, I confirm the following:** 

- [x] I have read and understood the [contributors guide](https://github.com/pi-hole/pi-hole/blob/master/CONTRIBUTING.md), as well as this entire template.
- [x] I have made only one major change in my proposed changes.
- [x] I have commented my proposed changes within the code.
- [x] I have tested my proposed changes, and have included unit tests where possible.
- [x] I am willing to help maintain this change if there are issues with it later.
- [x] I give this submission freely and claim no ownership.
- [x] It is compatible with the [EUPL 1.2 license](https://opensource.org/licenses/EUPL-1.1)
- [x] I have squashed any insignificant commits. ([`git rebase`](http://gitready.com/advanced/2009/02/10/squashing-commits-with-rebase.html))

---
**What does this PR aim to accomplish?:**

Addresses issues #2195 and #2720 to allow changing the server port and/or host name.

**How does this PR accomplish the above?:**

* `$_SERVER["SERVER_NAME"]` used instead of `$_SERVER["HOST"] (host contains both host name and port causing the query ads script to result in an invalid domain error)
* uses the `VIRTUAL_HOST` if set in the environment to determine whether to redirect to the admin page (in addition to `pi.hole`). This can be set with the following line in `/etc/lighttpd/external.conf`:
```
setenv.add-environment = ("virtual_host" => "your.fqdn.tld")
```
* it is still assumed that lighttpd runs on localhost but the call to *queryAds* now includes the server port
* replaced use of `pi.hole` prefix in path for assets in the html of the blocking page

I don't know if this addresses the issue when running under docker, maybe someone else can confirm this.

**What documentation changes (if any) are needed to support this PR?:**

Document setting the VIRTUAL_HOST in the environment when using a host name other than `pi.hole`.