
I'm sorry to say this but I myself don't have time and motivation to work on Scala 3 (Dotty) migration. We're looking for people that are interested in making necessary efforts for it.
How can I parse a string containing template? Currently only templates in files are supported.

I tried to do the following, but the result is embarrassing:
```scala
class StringTemplateParser {
  private val engine = new TemplateEngine

  def parse(template: String, attributes: Map[String, Any]): String = {
    val source = TemplateSource.fromText("foo.ssp", template)
    engine.layout(source, attributes)
  }
}
```
Here `foo.ssp` is a dummy string - anything having the `.ssp` extension. 

This method `parse` works only on the first invocation. The second invocation in the same test fails with the exception:
```text
  org.fusesource.scalate.util.ResourceNotFoundException: Could not load resource: [foo.ssp]
  at org.fusesource.scalate.util.ResourceLoader.createNotFoundException(ResourceLoader.scala:58)
  at org.fusesource.scalate.util.ResourceLoader.createNotFoundException$(ResourceLoader.scala:58)
  at org.fusesource.scalate.util.FileResourceLoader.createNotFoundException(ResourceLoader.scala:61)
  at org.fusesource.scalate.util.ResourceLoader.resourceOrFail(ResourceLoader.scala:55)
  at org.fusesource.scalate.util.ResourceLoader.resourceOrFail$(ResourceLoader.scala:50)
  at org.fusesource.scalate.util.FileResourceLoader.resourceOrFail(ResourceLoader.scala:61)
  at org.fusesource.scalate.util.ResourceLoader.lastModified(ResourceLoader.scala:41)
  at org.fusesource.scalate.util.ResourceLoader.lastModified$(ResourceLoader.scala:41)
  at org.fusesource.scalate.util.FileResourceLoader.lastModified(ResourceLoader.scala:61)
  at org.fusesource.scalate.TemplateEngine$CacheEntry.$anonfun$isStale$1(TemplateEngine.scala:79)
```

Hi, I am repeated see this message:
```
Cannot introspect on class loader: jdk.internal.loader.ClassLoaders$AppClassLoader@5c29bfd of type jdk.internal.loader.ClassLoaders.AppClassLoader
```
which comes from https://github.com/scalate/scalate/blob/68b3db76c5d3b3ddde46b0121ca90b8477ac713b/scalate-util/src/main/scala/org/fusesource/scalate/util/ClassPathBuilder.scala#L157 when running our app on JDK 11.0.3. Is there a way to fix/disable that?

Thanks
Hi, I was trying to build a simple use case and at first glance Scalate seemed to be the great engine for the job. But when I tried to understand how to use it in my scala code I found it not so easy to use essentially because of the missing documentation.
I had to rely on test use cases which help but not as much as a proper documentation should.

My simple scenario was taking an input file in mustache, passing some tags and outputting a new file.
While using mustache 

``` scala
engine.layout(templatePath, Model(
"imageurl" -> "https://<domain>/<url>?<param1>=<value>&<param2>=<value>"
))
```
As it is a problem caused by registered trademarks, should Scalate's Jade also be changed to pug?

https://www.npmjs.com/package/pug
scala.util.parsing.json.JSON is deprecated.
for prevent a recurrence following problem.

- https://github.com/scalate/scalate/commit/327e0f28a0926f05c0ff0423fce576560da3ccaa#diff-fdc3abdfd754eeb24090dbd90aeec2ceR49
- https://github.com/scalate/scalate/commit/be83a8d3d7cbf4c45c299fb1ad2b0820ff13e404
https://github.com/scalate/scalate/blob/9c1b8062e5b17c76249a463977424425249b6dc1/scala_213_pending_tests.sbt