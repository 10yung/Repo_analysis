As documented in the [wiki](https://github.com/pyenv/pyenv/wiki/Common-build-problems#error-the-python-ssl-extension-was-not-compiled-missing-the-openssl-lib), compiling on Ubuntu 14.04 leads to a failure because of too old openSSL version.
As the wiki points out, the problem can be solved by compiling your own version of openSSL.
I'd like to add to the wiki a conclusive answer on doing so.


You need two steps, one is building your own version of OpenSSL and the second is instructing pyenvto use it.

To install OpenSSL, run the following commands.
```
mkdir openssl 
cd openssl 
wget https://www.openssl.org/source/openssl-1.0.2u.tar.gz 
tar -xzvf openssl-1.0.2u.tar.gz 
cd openssl-1.0.2u 
./config --prefix=$HOME/openssl --openssldir=$HOME/openssl shared zlib 
make 
make
make install
```
This installs the latest version on OpenSSL 1.0.2 (no more patches will be released) to your home directory. Now to install Python 3.7 using pyenv.

After you configure pyenv, run the following command

`PATH="$HOME/openssl:$PATH"  CPPFLAGS="-I$HOME/openssl/include" CFLAGS="-I$HOME/openssl/include/" LDFLAGS="-L$HOME/openssl/lib -Wl,-rpath,$HOME/openssl/lib" LD_LIBRARY_PATH=$HOME/openssl/lib:$LD_LIBRARY_PATH LD_RUN_PATH="$HOME/openssl/lib" CONFIGURE_OPTS="--with-openssl=$HOME/openssl" PYTHON_CONFIGURE_OPTS="--enable-shared" pyenv install 3.7.5`

You may add -O2 if you want faster run times.

# Description
- [ ] Platform information (e.g. Ubuntu Linux 16.04): Ubuntu Linux 14.04
- [ ] OS architecture (e.g. amd64): Irrelevant
- [ ] pyenv version: 1.2.16
- [ ] Python version: 3.7.5
- [ ] C Compiler information (e.g. gcc 7.3): Irrelevant

**The [Mac build environment instructions in the wiki](https://github.com/pyenv/pyenv/wiki#suggested-build-environment) currently read:**

...

When running Mojave or higher (10.14+) you will also [need to install the additional SDK headers:](https://developer.apple.com/documentation/xcode_release_notes/xcode_10_release_notes#3035624)

```
sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
```

**With changes made in macOS Catalina, they should now read something more like:**

When running Mojave (10.14.x) you will also [need to install the additional SDK headers:](https://developer.apple.com/documentation/xcode_release_notes/xcode_10_release_notes#3035624)

```
sudo installer -pkg /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg -target /
```

Installing additional SDK headers is not necessary [when running Catalina (10.15.x)](https://forums.developer.apple.com/thread/122762).
I installed pyenv and virtualenv on my macos and I found the file "box.py" in "/usr/local/var/pyenv/shims/box.py". Open the file it shows 
```
#!/usr/bin/env bash
set -e
[ -n "$PYENV_DEBUG" ] && set -x

program="${0##*/}"
if [[ "$program" = "python"* ]]; then
  for arg; do
    case "$arg" in
    -c* | -- ) break ;;
    */* )
      if [ -f "$arg" ]; then
        export PYENV_FILE_ARG="$arg"
        break
      fi
      ;;
    esac
  done
fi

export PYENV_ROOT="/usr/local/var/pyenv"
exec "/usr/local/Cellar/pyenv/1.1.5/libexec/pyenv" exec "$program" "$@"
```
I cant use python-box at the same time, error show like
```
Traceback (most recent call last):
  File "run/tools/test.py", line 7, in <module>
    from dynaconf import settings
  File "/usr/local/var/pyenv/versions/3.6.1-virtual/lib/python3.6/site-packages/dynaconf/__init__.py", line 1, in <module>
    from dynaconf.base import LazySettings
  File "/usr/local/var/pyenv/versions/3.6.1-virtual/lib/python3.6/site-packages/dynaconf/base.py", line 7, in <module>
    from dynaconf import default_settings
  File "/usr/local/var/pyenv/versions/3.6.1-virtual/lib/python3.6/site-packages/dynaconf/default_settings.py", line 11, in <module>
    from dynaconf.utils.parse_conf import parse_conf_data
  File "/usr/local/var/pyenv/versions/3.6.1-virtual/lib/python3.6/site-packages/dynaconf/utils/parse_conf.py", line 5, in <module>
    from box import BoxKeyError
  File "/usr/local/var/pyenv/shims/box.py", line 3
    [ -n "$PYENV_DEBUG" ] && set -x
                      ^
SyntaxError: invalid syntax
```
It use "/usr/local/var/pyenv/shims/box.py"first not python-box

Make sure you have checked all steps below.

### Prerequisite
* [ ] Please consider implementing the feature as a hook script or plugin as a first step.
  * pyenv has some powerful support for plugins and hook scripts. Please refer to [Authoring plugins](https://github.com/pyenv/pyenv/wiki/Authoring-plugins) for details and try to implement it as a plugin if possible.
* [ ] Please consider contributing the patch upstream to [rbenv](https://github.com/rbenv/rbenv), since we have borrowed most of the code from that project.
  * We occasionally import the changes from rbenv. In general, you can expect changes made in rbenv will be imported to pyenv too, eventually.
  * Generally speaking, we prefer not to make changes in the core in order to keep compatibility with rbenv.
* [x] My PR addresses the following pyenv issue (if any)
  - https://github.com/pyenv/pyenv/issues/969

### Description
- [x] Here are some details about my PR

If there is a better solution like use macro for reusable code plz guide me :)

Just make it works cause it's really annoying when I have to restart the shell with `exec zsh` and the PATH get populated

### Tests
- [ ] My PR adds the following unit tests (if any)


### Description
```pyenv install``` does not understand multi-version **.python-version** files as generated by ```pyenv local 3.5.9 3.6.9 3.7.6 3.8.1```, like:

```
3.5.9
3.6.9
3.7.6
3.8.1
```
Output:

```
$ pyenv install
python-build: definition not found: 3.5.9
3.6.9
3.7.6
3.8.1

The following versions contain `3.5.9
3.6.9
3.7.6
3.8.1' in the name:
  3.5.9
  3.6.9
  3.7.6
  3.8.1

See all available versions with `pyenv install --list'.

If the version you need is missing, try upgrading pyenv:

  cd /home/orpheus/.pyenv/plugins/python-build/../.. && git pull && cd -
```
- Arch Linux (as in 2020.01.05).
- Amd64
- pyenv 1.2.15
- Python 3.8.1
- gcc (GCC) 9.2.0
- Verbose output: https://gist.github.com/ergoithz/da11c71e4c78bd9b4e46fd9c7ea4f55c

For those wondering, setting multiple python versions makes pythonX.Y shims to work on tools like **tox** (which is becoming somewhat standard due setuptools dropping its test command).
Whenever I try to install any module e.g. `pipenv install requests` I get the following error:
```
Installing requestsâ€¦
Traceback (most recent call last):
  File "/home/foo/.pyenv/versions/3.8.1/bin/pipenv", line 8, in <module>
    sys.exit(cli())
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/click/core.py", line 764, in __call__
    return self.main(*args, **kwargs)
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/click/core.py", line 717, in main
    rv = self.invoke(ctx)
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/click/core.py", line 1137, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/click/core.py", line 956, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/click/core.py", line 555, in invoke
    return callback(*args, **kwargs)
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/click/decorators.py", line 64, in new_func
    return ctx.invoke(f, obj, *args, **kwargs)
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/click/core.py", line 555, in invoke
    return callback(*args, **kwargs)
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/click/decorators.py", line 17, in new_func
    return f(get_current_context(), *args, **kwargs)
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/cli/command.py", line 235, in install
    retcode = do_install(
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/core.py", line 1909, in do_install
    pkg_requirement = Requirement.from_line(pkg_line)
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/requirementslib/models/requirements.py", line 1068, in from_line
    if isinstance(line, pip_shims.shims.InstallRequirement):
  File "/home/foo/.pyenv/versions/3.8.1/lib/python3.8/site-packages/pipenv/vendor/pip_shims/shims.py", line 254, in __getattr__
    return super(_shims, self).__getattribute__(*args, **kwargs)
AttributeError: '_shims' object has no attribute 'InstallRequirement'
```
I've tried Python 3.8.1 and 3.7.6 without any success. I've reinstalled pyenv a number of times but can't get past this issue. Any assistance would be really appreciated!

### Prerequisite
* [X] Make sure your problem is not listed in [the common build problems](https://github.com/pyenv/pyenv/wiki/Common-build-problems).
* [X] Make sure no duplicated issue has already been reported in [the pyenv issues](https://github.com/pyenv/pyenv/issues). You should look for closed issues, too.
* [X] Make sure you are not asking us to help solving your specific issue.
  * GitHub issues is opened mainly for development purposes. If you want to ask someone to help solving your problem, go to some community site like [Gitter](https://gitter.im/yyuu/pyenv), [StackOverflow](https://stackoverflow.com/questions/tagged/pyenv), etc.
* [X] Make sure your problem is not derived from packaging (e.g. [Homebrew](https://brew.sh)).
  * Please refer to the package documentation for the installation issues, etc.
* [X] Make sure your problem is not derived from plugins.
  * This repository is maintaining `pyenv` and the default `python-build` plugin only. Please refrain from reporting issues of other plugins here.

### Description
- [X] Platform information (e.g. Ubuntu Linux 16.04):
Void Linux 5.3.18_1 x86_64 GenuineIntel uptodate rFFFFF (rolling distro fully updated)
- [X] OS architecture (e.g. amd64):
amd64
- [X] pyenv version:
pyenv 1.2.15-11-g4e0ba2f4
- [X] Python version:
3.8.1
- [X] C Compiler information (e.g. gcc 7.3):
gcc (GCC) 9.2.0
- [X] Please attach verbose build log as gist
  * You can turn on verbose debug logging using by setting `PYENV_DEBUG=1`, e.g. `env PYENV_DEBUG=1 pyenv install -v 3.6.4`
https://gist.github.com/patoski/b4a4310f301541981b0dd48da24e8051#file-pipenv-install-requests-txt
### Description
This addresses a case I find myself in where aria2c is "present" on a system, but broken due to system libraries being in a bad state.  It replaces the `type cmd` check to see if an executable is present with a `cmd --help` to see if the executable can be executed, and exit non-zero.

### Tests
No new tests added (should still prefer aria2c/curl/wget as before)

Too many issues will kill our team's development velocity, drastically.
Make sure you have checked all steps below.

### Prerequisite
* [x] Make sure your problem is not listed in [the common build problems](https://github.com/pyenv/pyenv/wiki/Common-build-problems).
* [x] Make sure no duplicated issue has already been reported in [the pyenv issues](https://github.com/pyenv/pyenv/issues). You should look for closed issues, too.
* [x] Make sure you are not asking us to help solving your specific issue.
  * GitHub issues is opened mainly for development purposes. If you want to ask someone to help solving your problem, go to some community site like [Gitter](https://gitter.im/yyuu/pyenv), [StackOverflow](https://stackoverflow.com/questions/tagged/pyenv), etc.
* [x] Make sure your problem is not derived from packaging (e.g. [Homebrew](https://brew.sh)).
  * Please refer to the package documentation for the installation issues, etc.
* [x] Make sure your problem is not derived from plugins.
  * This repository is maintaining `pyenv` and the default `python-build` plugin only. Please refrain from reporting issues of other plugins here.

### Description
- [x] Platform information (e.g. Ubuntu Linux 16.04):
- [ ] OS architecture (e.g. amd64): I don't know how to answer this question, but I have intel core i5, 64 bit
- [x] pyenv version: 1.2.15
- [x] Python version: 2.7.15
- [x] C Compiler information (e.g. gcc 7.3):  Apple clang version 11.0.0 (clang-1100.0.33.8)
- [ ] Please attach verbose build log as gist
  * You can turn on verbose debug logging using by setting `PYENV_DEBUG=1`, e.g. `env PYENV_DEBUG=1 pyenv install -v 3.6.4`

When trying to install the additional SDK headers in MacOS Catalina 10.15 i get the following error:
`installer: Error - the package path specified was invalid: '/Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg'.`

Which makes sense, since this is not 10.14. I found [this issue](https://github.com/pyenv/pyenv/issues/1425) and tried to follow the instructions there.
 Running `xcrun --sdk macosx --show-sdk-path` gives `/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk` so then I tried to run the installer with that path:

`sudo installer -pkg /Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk -target /`

But that gives the following error: `installer: Error - the package path specified was invalid: '/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk'.`

The instructions in the guide to setting up the environment does not work on MacOS 10.15, and I can't figure out what to do instead. Am I misunderstanding the instructions that is closing the issue #1425 ? Or are the instructions still wrong?
Too many issues will kill our team's development velocity, drastically.
Make sure you have checked all steps below.

### Prerequisite
* [x] Make sure your problem is not listed in [the common build problems](https://github.com/pyenv/pyenv/wiki/Common-build-problems).
* [x] Make sure no duplicated issue has already been reported in [the pyenv issues](https://github.com/pyenv/pyenv/issues). You should look for closed issues, too.
* [x] Make sure you are not asking us to help solving your specific issue.
  * GitHub issues is opened mainly for development purposes. If you want to ask someone to help solving your problem, go to some community site like [Gitter](https://gitter.im/yyuu/pyenv), [StackOverflow](https://stackoverflow.com/questions/tagged/pyenv), etc.
* [x] Make sure your problem is not derived from packaging (e.g. [Homebrew](https://brew.sh)).
  * Please refer to the package documentation for the installation issues, etc.
* [x] Make sure your problem is not derived from plugins.
  * This repository is maintaining `pyenv` and the default `python-build` plugin only. Please refrain from reporting issues of other plugins here.

### Description
- [x] Platform information (e.g. Ubuntu Linux 16.04): Manjaro 5.4
- [x] OS architecture (e.g. amd64): amd64
- [x] pyenv version:  1.2.15
- [x] Python version: 3.7.5
- [x] C Compiler information (e.g. gcc 7.3):  9.2
- [x] Please attach verbose build log as gist: https://gist.github.com/tbhaxor/a0183b38743aa7040b2c2970eb121d98

### More Information

I had tried the recommended solution from pyinstaller's document i.e setting the LD_LIBRARY_PATH
```
â†’ echo $LD_LIBRARY_PATH 
/home/terabyte/.pyenv/versions/3.7.5/lib
```


Too many issues will kill our team's development velocity, drastically.
Make sure you have checked all steps below.

### Prerequisite
* [x] Make sure your problem is not listed in [the common build problems](https://github.com/pyenv/pyenv/wiki/Common-build-problems).
* [x] Make sure no duplicated issue has already been reported in [the pyenv issues](https://github.com/pyenv/pyenv/issues). You should look for closed issues, too.
* [x] Make sure you are not asking us to help solving your specific issue.
  * GitHub issues is opened mainly for development purposes. If you want to ask someone to help solving your problem, go to some community site like [Gitter](https://gitter.im/yyuu/pyenv), [StackOverflow](https://stackoverflow.com/questions/tagged/pyenv), etc.
* [x] Make sure your problem is not derived from packaging (e.g. [Homebrew](https://brew.sh)).
  * Please refer to the package documentation for the installation issues, etc.
* [x] Make sure your problem is not derived from plugins.
  * This repository is maintaining `pyenv` and the default `python-build` plugin only. Please refrain from reporting issues of other plugins here.

### Description
- [x] Platform information (e.g. Ubuntu Linux 16.04): macOS Catalina 10.15.2 (19C57)
- [ ] OS architecture (e.g. amd64): 
- [x] pyenv version: pyenv 1.2.15
- [ ] Python version: 3.7.0
- [ ] C Compiler information (e.g. gcc 7.3): 
- [ ] Please attach verbose build log as gist
  * You can turn on verbose debug logging using by setting `PYENV_DEBUG=1`, e.g. `env PYENV_DEBUG=1 pyenv install -v 3.6.4`

```
BUILD FAILED (OS X 10.15.2 using python-build 20180424)

Inspect or clean up the working tree at /var/folders/rc/5qdy5tt92y70m0r5kv22gx8h0000gn/T/python-build.20191227105353.40361
Results logged to /var/folders/rc/5qdy5tt92y70m0r5kv22gx8h0000gn/T/python-build.20191227105353.40361.log

Last 10 log lines:
renaming build/scripts-3.7/idle3 to build/scripts-3.7/idle3.7
renaming build/scripts-3.7/2to3 to build/scripts-3.7/2to3-3.7
renaming build/scripts-3.7/pyvenv to build/scripts-3.7/pyvenv-3.7
if test "no-framework" = "no-framework" ; then \
		/usr/bin/install -c python.exe /Users/johann/.pyenv/versions/3.7.0/bin/python3.7m; \
	else \
		/usr/bin/install -c -s Mac/pythonw /Users/johann/.pyenv/versions/3.7.0/bin/python3.7m; \
	fi
install: /Users/johann/.pyenv/versions/3.7.0/bin/python3.7m: Too many levels of symbolic links
make: *** [altbininstall] Error 71
+ [pyenv-install:246] STATUS=1
+ [pyenv-install:249] '[' 1 == 2 ']'
+ [pyenv-install:277] '[' 1 == 0 ']'
+ [pyenv-install:280] cleanup
+ [pyenv-install:239] '[' -z 1 ']'
```