- Go to the definition of a label or reference (in bib file) from `\ref{}` or `\cite{}`
- Open a file from include commands (fixes #420)
- Go to the declaration of a command, for commands defined with and without braces (fixes #164)
- Replaced `PsiNamedElement` with `PsiNamedIdentifierOwner` (a tip from [references and resolve](https://www.jetbrains.org/intellij/sdk/docs/reference_guide/custom_language_support/references_and_resolve.html))
Fix #1188 
### Description



### Stacktrace
```
java.lang.IllegalStateException: containingFile.findRootF…     .containingDirectory must not be null
	at nl.hannahsten.texifyidea.structure.latex.LatexStructureViewElement.addIncludes(LatexStructureViewElement.kt:185)
	at nl.hannahsten.texifyidea.structure.latex.LatexStructureViewElement.getChildren(LatexStructureViewElement.kt:86)
	at com.intellij.ide.util.treeView.smartTree.TreeElementWrapper.initChildren(TreeElementWrapper.java:50)
	at com.intellij.ide.util.treeView.smartTree.CachingChildrenTreeNode.rebuildSubtree(CachingChildrenTreeNode.java:219)
	at com.intellij.ide.util.treeView.smartTree.CachingChildrenTreeNode.ensureChildrenAreInitialized(CachingChildrenTreeNode.java:55)
	at com.intellij.ide.util.treeView.smartTree.CachingChildrenTreeNode.getChildren(CachingChildrenTreeNode.java:47)
	at com.intellij.ide.structureView.newStructureView.StructureViewComponent$MyNodeWrapper.getChildren(StructureViewComponent.java:807)
	at com.intellij.ide.util.treeView.smartTree.SmartTreeStructure.getChildElements(SmartTreeStructure.java:63)
	at com.intellij.ui.tree.StructureTreeModel.getValidChildren(StructureTreeModel.java:382)
	at com.intellij.ui.tree.StructureTreeModel.validateChildren(StructureTreeModel.java:300)
	at com.intellij.ui.tree.StructureTreeModel.getNode(StructureTreeModel.java:294)
	at com.intellij.ui.tree.StructureTreeModel.getChildren(StructureTreeModel.java:314)
	at com.intellij.ui.tree.AsyncTreeModel$CmdGetChildren.getNode(AsyncTreeModel.java:586)
	at com.intellij.ui.tree.AsyncTreeModel$ObsolescentCommand.get(AsyncTreeModel.java:481)
	at com.intellij.ui.tree.AsyncTreeModel$ObsolescentCommand.get(AsyncTreeModel.java:447)
	at com.intellij.util.concurrency.Command$Processor.lambda$process$1(Command.java:48)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:997)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.lambda$runInReadActionWithWriteActionPriority$0(ProgressIndicatorUtils.java:73)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.lambda$runWithWriteActionPriority$1(ProgressIndicatorUtils.java:127)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$2(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:585)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:531)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:59)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:150)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.runWithWriteActionPriority(ProgressIndicatorUtils.java:116)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.runInReadActionWithWriteActionPriority(ProgressIndicatorUtils.java:73)
	at com.intellij.util.concurrency.Invoker.invokeSafely(Invoker.java:191)
	at com.intellij.util.concurrency.Invoker.lambda$offerSafely$0(Invoker.java:158)
	at com.intellij.util.concurrency.Invoker$Background.lambda$offer$0(Invoker.java:473)
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:515)
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)
	at com.intellij.util.concurrency.SchedulingWrapper$MyScheduledFutureTask.run(SchedulingWrapper.java:217)
	at com.intellij.util.concurrency.BoundedTaskExecutor.doRun(BoundedTaskExecutor.java:222)
	at com.intellij.util.concurrency.BoundedTaskExecutor.access$200(BoundedTaskExecutor.java:30)
	at com.intellij.util.concurrency.BoundedTaskExecutor$1.execute(BoundedTaskExecutor.java:201)
	at com.intellij.util.ConcurrencyUtil.runUnderThreadName(ConcurrencyUtil.java:221)
	at com.intellij.util.concurrency.BoundedTaskExecutor$1.run(BoundedTaskExecutor.java:190)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
```
fixes #1171

Let's hope I didn't break anything.

Oh, also fixed #1176 while waiting for Inspect Code to complete, because it takes a long time.
fixes #1170

Duplicate label inspection should appear correctly now even when duplicate labels are in different files.

```latex
\documentclass{article}

\begin{thebibliography}{9}
    \bibitem{knuth}
    \bibitem{knuth}
\end{thebibliography}

\begin{document}
    \input{chapter/section1.tex}
    \input{chapter/section2.tex}
\end{document}
```

section1/2.tex:
```latex
\label{duplicate}
```

Fixes #1166

Example:

```latex
 \documentclass{article}
\usepackage{fontspec}

% Download from https://www.fontsquirrel.com/fonts/computer-modern and put ttf files in /usr/share/fonts/TTF
\setmainfont{CMU Serif}

\begin{document}
    This is a paragraph with a PI (π) in it.
\end{document}
```


Currently

```latex
\begin{definition}\label{def:stuff}
    stuffs
\end{definition}
```

gets reformatted into

```latex 
\begin{definition}
    \label{def:stuff}
    stuffs
\end{definition}
```

#### Cause
The formatter currently inserts a newline before an `ENVIRONMENT_CONTENT` block, moving the `\label` to a new line.

#### Ideas/problems
Only insert a new line when the environment does not start with a command. The downside of this is that we cannot indent the rest of the environment: 
The formatter indents `ENVIRONMENT_CONTENT` blocks that start on a new line relative to its direct parent (`ENVIRONMENT`). In this example, `\label{def:stuff} stuffs` is the `ENVIRONMENT_CONTENT` in the `definition` `ENVIRONMENT`, and does not start on a new line so it would not be indented. 

### Description

0.7-alpha.50, opening old project

### Stacktrace
```
java.lang.NullPointerException
	at nl.hannahsten.texifyidea.run.makeindex.MakeindexRunConfiguration.readExternal(MakeindexRunConfiguration.kt:66)
	at com.intellij.execution.impl.RunnerAndConfigurationSettingsImplKt.deserializeConfigurationFrom(RunnerAndConfigurationSettingsImpl.kt:563)
	at com.intellij.execution.impl.RunnerAndConfigurationSettingsImpl.readExternal(RunnerAndConfigurationSettingsImpl.kt:217)
	at com.intellij.execution.impl.RunConfigurationSchemeManager.readData(RunConfigurationSchemeManager.kt:65)
	at com.intellij.execution.impl.RunConfigurationSchemeManager.createScheme(RunConfigurationSchemeManager.kt:48)
	at com.intellij.execution.impl.RunConfigurationSchemeManager.createScheme(RunConfigurationSchemeManager.kt:22)
	at com.intellij.configurationStore.LazySchemeProcessor.createScheme$default(scheme-impl.kt:62)
	at com.intellij.configurationStore.schemeManager.SchemeLoader.loadScheme(schemeLoader.kt:175)
	at com.intellij.configurationStore.schemeManager.SchemeManagerImpl$loadSchemes$isLoadOnlyFromProvider$2.invoke(SchemeManagerImpl.kt:193)
	at com.intellij.configurationStore.schemeManager.SchemeManagerImpl$loadSchemes$isLoadOnlyFromProvider$2.invoke(SchemeManagerImpl.kt:42)
	at com.intellij.configurationStore.SchemeManagerIprProvider.processChildren(SchemeManagerIprProvider.kt:48)
	at com.intellij.configurationStore.schemeManager.SchemeManagerImpl.loadSchemes(SchemeManagerImpl.kt:191)
	at com.intellij.configurationStore.schemeManager.SchemeManagerImpl.reload(SchemeManagerImpl.kt:252)
	at com.intellij.execution.impl.RunManagerImpl.loadState(RunManagerImpl.kt:638)
	at com.intellij.execution.impl.RunManagerImpl.loadState(RunManagerImpl.kt:64)
	at com.intellij.configurationStore.ComponentStoreImpl.doInitComponent(ComponentStoreImpl.kt:412)
	at com.intellij.configurationStore.ComponentStoreImpl.initComponent(ComponentStoreImpl.kt:363)
	at com.intellij.configurationStore.ComponentStoreImpl.initPersistenceStateComponent(ComponentStoreImpl.kt:130)
	at com.intellij.configurationStore.ComponentStoreImpl.initComponent(ComponentStoreImpl.kt:96)
	at com.intellij.configurationStore.ComponentStoreWithExtraComponents.initComponent(ComponentStoreWithExtraComponents.kt:49)
	at com.intellij.serviceContainer.PlatformComponentManagerImpl.initializeComponent(PlatformComponentManagerImpl.kt:258)
	at com.intellij.serviceContainer.ServiceComponentAdapter.createAndInitialize(ServiceComponentAdapter.kt:56)
	at com.intellij.serviceContainer.ServiceComponentAdapter.access$createAndInitialize(ServiceComponentAdapter.kt:15)
	at com.intellij.serviceContainer.ServiceComponentAdapter$doCreateInstance$$inlined$use$lambda$1.run(ServiceComponentAdapter.kt:44)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:585)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:531)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:59)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeNonCancelableSection(CoreProgressManager.java:191)
	at com.intellij.serviceContainer.ServiceComponentAdapter.doCreateInstance(ServiceComponentAdapter.kt:43)
	at com.intellij.serviceContainer.BaseComponentAdapter.getInstanceUncached(BaseComponentAdapter.kt:110)
	at com.intellij.serviceContainer.BaseComponentAdapter.getInstance(BaseComponentAdapter.kt:72)
	at com.intellij.serviceContainer.BaseComponentAdapter.getInstance$default(BaseComponentAdapter.kt:65)
	at com.intellij.serviceContainer.PlatformComponentManagerImpl.getService(PlatformComponentManagerImpl.kt:288)
	at com.intellij.execution.impl.ProjectRunConfigurationInitializer.requestLoadWorkspaceAndProjectRunConfiguration(ProjectRunConfigurationInitializer.kt:47)
	at com.intellij.execution.impl.ProjectRunConfigurationInitializer.access$requestLoadWorkspaceAndProjectRunConfiguration(ProjectRunConfigurationInitializer.kt:24)
	at com.intellij.execution.impl.ProjectRunConfigurationInitializer$1.projectComponentsInitialized(ProjectRunConfigurationInitializer.kt:30)
	at
### Description



### Stacktrace
```
org.freedesktop.dbus.errors.ServiceUnknown: The name org.gnome.evince.Daemon was not provided by any .service files
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:490)
	at org.freedesktop.dbus.errors.Error.getException(Error.java:157)
	at org.freedesktop.dbus.errors.Error.throwException(Error.java:187)
	at org.freedesktop.dbus.RemoteInvocationHandler.executeRemoteMethod(RemoteInvocationHandler.java:164)
	at org.freedesktop.dbus.RemoteInvocationHandler.invoke(RemoteInvocationHandler.java:228)
	at com.sun.proxy.$Proxy146.FindDocument(Unknown Source)
	at nl.hannahsten.texifyidea.run.linuxpdfviewer.evince.EvinceConversation.findProcessOwner(EvinceConversation.kt:83)
	at nl.hannahsten.texifyidea.run.linuxpdfviewer.evince.EvinceConversation.forwardSearch(EvinceConversation.kt:52)
	at nl.hannahsten.texifyidea.run.linuxpdfviewer.OpenViewerListener$processTerminated$$inlined$runAsync$1.run(promise.kt:306)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
```