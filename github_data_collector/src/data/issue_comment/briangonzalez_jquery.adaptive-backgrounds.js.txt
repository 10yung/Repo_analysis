Preamble: _This issue is not a bug report or a technical query, but rather a generic question to the maintainers and contributors of this repository. I hope it will be in accord your contributing guidelines nevertheless._

While testing this script, I spent some time trying to configure the `shade` settings before finally realizing that it couldn't work as is. Indeed, I had downloaded the [last available release](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js/releases/latest) (13 June 2015) while [this feature has been developed subsequently](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js/pull/41) (20 July 2017).

I wonder why no maintainer has created a new release in order to incorporate these significant new features ([added in the `README`](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js/issues/73) after the [version `1.0.3`](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js/releases/tag/1.0.3)). And if no new release is planned (for whatever reason), I think it might be convenient to indicate in the `README` file that it is better to download files [from the current master branch](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js/archive/master.zip) to use certain features.

**I if use this example image:** 
http://cdn.laprensa.com.ni/wp-content/uploads/2015/09/270915espElChipotephoto05.jpg

Got as dominant color, 

> rgb(255,255,253)


I want specifically detect if the dominant color is white, and this image does not.
Yet I am getting this image as a valid one when is not? 

I used the base-single.html from demo folder.
How this can be solved? 
Hi
The version 1.0.3 has no dist folder
As was asked here https://github.com/cdnjs/cdnjs/pull/12023#issuecomment-340676829, can you build you lib and add to version in order to provide better hosting on cdnjs?
Thanks
The current version has some serious performance issues.

I created a jsfiddle to demonstrate the problem:

https://jsfiddle.net/honsa/e7wjvmLb/3/

After page load the whole page is blocked for more than 3sec.

Here is the developer tools performance report:

https://chromedevtools.github.io/timeline-viewer/?loadTimelineFromURL=https://gist.github.com/honsa/e9ae7b7b008f7ad5a2739061fa0e3a46/raw/0b93e524582e9d206f90f2ffe12dd04828e2b6c6/gistfile1.txt
 
[Profile-20170901T175757.zip](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js/files/1270812/Profile-20170901T175757.zip)

![adaptive](https://user-images.githubusercontent.com/526006/29977908-5d02935a-8f3f-11e7-98e2-c12cf0b15c5e.png)



The current implementation will ignore `opts.parent` [option](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js#default-options) when using the `data-ab-css-background` feature. This behaviour is as per design and explicitly stated as such [in the documentation](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js#using-an-element-with-a-css-background-image).

The proposed enhancement would: 
1. respect `opts.parent` if it has been set _and_ the parent exists.
2. set the background colour of the element with a CSS background image only when a) no 'parent' is set or b) if no parent was found.

The implementation would affect the code around lines [#L117-L130](https://github.com/briangonzalez/jquery.adaptive-backgrounds.js/blob/master/src/jquery.adaptive-backgrounds.js#L117-L130)

Anyone want to chime in on the merits and rulesets?
In order to keep this project on the up and up, we'll need to implement a little process and organization.
## Technical
- [ ] Continuous integration with Circle / Travis
- [ ] Publish npm / bower
- [ ] Increment to version 2.0.0 and then adopt semver
- [ ] Create non-jQuery version *
- [ ] Badges (npm/travis)
## Code
- [ ] eslint (AirBnB)
- [ ] Build pipeline w/ gulp
- [ ] .nvmrc
## Process
- [ ] Block builds using GH status API for code review
- [ ] Block builds using GH status API for unit tests
## Issues / PRs
- [ ] Label all issues w/ { Bug, Code Review, Feature, etc. }
- [ ] Setup ReviewNinja or LGTM
- [ ] Close old / unrelated issues
- Nice to have.

Hello, firstly I want to tell you good job and great component.

But I would like to know which one is the best way to implement in AngularJS.

Thank you!
