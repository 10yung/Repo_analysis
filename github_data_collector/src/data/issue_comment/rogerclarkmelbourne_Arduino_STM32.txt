Hello,

I interfaced a LCD to STM32F103C8T6 board and no matter what I do to circuit it showed garbage text. I kept changing the connection to different ports and pins. but it still remain the same. 

I literally spent 24 hours on this. The LiquidCrystal Library for STM32 published to arduinoIDE is buggy. It shows garbage values.

By using this library https://github.com/SayidHosseini/STM32LiquidCrystal fixed the issue. Please update this in the project, so that other people don't face the same issue.

Thanks
Gunpal Jain

There is a compilation warning generated that we can avoid with a cast.
G'day Roger, I have a CooCox 'Embedded Pi' with the above chip but no matter what I try the Arduino IDE refuses to connect with it - either on my RPi or my iMac. All the resources I have seen seem to point to you as the best source of information. I do hope you can point me in the right direction. Thanks. Oh and I'm not too familiar with this medium so my email is richard.mellersh@gmail.com as that ensures that I get any reply's.
Hi! I found this problem on latest framework.
If if write several times in backup register with command setrtccr() or setbkpdrift() using this library
https://github.com/rogerclarkmelbourne/Arduino_STM32/blob/master/STM32F1/libraries/RTClock/examples/RTCAdj/rtadjust.cpp MCU halts on second write. OR! If i write to backup register with command setrtccr() or setbkpdrift() once AND then set RTC with command rt.setTime(tm) MCU halts.
@ag88 are you not found same problem?
The firmware appears to load successfully in my bluepill (likely a clone or counterfeit).  The LED blinks after the load.  However, all I can get to appear in device manager is "USB Device Not Recognized", Unknown USB Device (Device Descriptor Request Failed).

How should I proceed?  I am not sure how to troubleshoot this?  Is the problem likely in the firmware side or the USB Driver side?
Normally there is no way to edit the dev_flags variable after Wire has been constructed. It is sometimes helpful to do so though. Example: u8g2 uses the builtin Wire instance to communicate with I2C displays which is normally set to the standard pins.

Using the added functions from this PR it is possible to:

```
//during setup():
uint8_t df = Wire.getDevFlags();
df |= I2C_REMAP;
Wire.setDevFlags(df);
```

After that u8g2 will nicely communicate with an I2C display connected to the alternate pins.
helloo,

Code with freeRTOS900 or pubsubclient individually working fine but when I’m using both together the controller hangs unexpectedly…

libraries used: 
1.  https://github.com/rogerclarkmelbourne/Arduino_STM32/tree/master/STM32F1/libraries/FreeRTOS900
2.   https://github.com/knolleary/pubsubclient

Please help me to find reasons for RTOS hanging?

Thanq,
Sankar
From my experimentation, the `for(volatile unsigned int i=0;i<512;i++);` delay loop for the GENERIC_BOOTLOADER setting in /variants/generic_*/wirish/boards_setup.cpp is not long enough for my Raspberry PI 3 to recognize the switch from the bootloader's USB profile to a new USB profile. (I tested this in the context of my USBComposite library, but the issues should be the same in the core.) Replacing 512 with 5120 solves the problem. That's such a slight timing increase, and normally it happens only on startup, that it shouldn't bother anyone.
Folks,
I'm writing after 8 or so hours of tinkering with F103FB and F103RE variants. I have a custom board with STM32F103RET6.  Using blink.ino and STLINK (no maple bootloader), using the STM32F103RB variant, works fine, when I switch to STM32F103RE, blink doesn't start. In fact, after I flash the RE bin, the CPU no longer responds to st-info --probe. I then have to use openocd to unlock the processor.

I've checked the linker scripts to make sure the ram and rom locations and lengths are correct. Verified this in the map file.  

The RE variant defines, MCU_STM32F103RE, which in turn defines
 define STM32_SRAM_END               ((void*)0x20010000)
 define STM32_HIGH_DENSITY

STM32_SRAM_END is correct for 64K ram.


defining STM32_HIGH_DENSITY, affects these files.

cores/maple/HardwareTimer.cpp
cores/maple/HardwareTimer.h
cores/maple/libmaple/adc_f1.c
cores/maple/libmaple/dma_f1.c
cores/maple/libmaple/rcc_f1.c
cores/maple/libmaple/spi_f1.c
cores/maple/libmaple/stm32f1/performance/isrs.S
cores/maple/libmaple/stm32f1/performance/vector_table.S
cores/maple/libmaple/timer.c
cores/maple/libmaple/usart_f1.c
cores/maple/sdio.cpp
cores/maple/tone.cpp
libraries/MapleCoOS116/examples/coos_display_blink/SPICoOS.cpp
libraries/SPI/src/SPI.cpp
system/libmaple/include/libmaple/bkp.h
system/libmaple/include/libmaple/sdio.h
system/libmaple/stm32f1/include/series/adc.h
system/libmaple/stm32f1/include/series/dma.h
system/libmaple/stm32f1/include/series/spi.h
system/libmaple/stm32f1/include/series/stm32.h
system/libmaple/stm32f1/include/series/timer.h
system/libmaple/stm32f1/include/series/usart.h
system/support/doxygen/Doxyfile

I'm now in the process of looking through these files to figure out my problem. Any advice on where to start?

Thanks,
Craig

