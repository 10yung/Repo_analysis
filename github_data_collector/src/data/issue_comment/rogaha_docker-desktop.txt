Why was such a nice project abandoned?

I just want to understand if it was due to time constraints by maintainer or something made this obsolete or something else
Permission denied (publickey,password).why?

_Originally posted by @carocean in https://github.com/rogaha/docker-desktop/issues/37#issuecomment-272232542_
First of all, thank you for the work you've outlined so well here. Your repo and instructions is the only thing I can find on getting an X session working.

But I'm still stuck with the **X11 forwarding failure**. And that's critical to go down this path.
The only change I made is to use Ubuntu 16.04. 

Please help!
System - 
* OS : 64-bit Windows 10 Version 1803 (Build 17134.523)
* Processor : Intel Xeon CPU E3-1505M v6
* Mem : 16GB

Crash report:
```Attempted to perform an unauthorized operation.
   at Docker.WPF.HttpClientHelper.HandleStatusCode(HttpResponseMessage response) in C:\workspaces\stable-18.09.x\src\github.com\docker\pinata\win\src\Docker.WPF\HttpClientHelper.cs:line 82
   at Docker.WPF.HttpClientHelper.<GetAndReadAsync>d__3`1.MoveNext() in C:\workspaces\stable-18.09.x\src\github.com\docker\pinata\win\src\Docker.WPF\HttpClientHelper.cs:line 73
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.WPF.DockerHub.DockerHubApi.<GetTop25OrganizationsAsync>d__3.MoveNext() in C:\workspaces\stable-18.09.x\src\github.com\docker\pinata\win\src\Docker.WPF\DockerHub\Api.cs:line 86
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.WPF.DockerHub.DockerHubApi.<GetAllOrgsAsync>d__4.MoveNext() in C:\workspaces\stable-18.09.x\src\github.com\docker\pinata\win\src\Docker.WPF\DockerHub\Api.cs:line 92
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task)
   at Docker.Systray.DockerHubSystrayGroup.<<LoadAsync>b__15_0>d.MoveNext() in C:\workspaces\stable-18.09.x\src\github.com\docker\pinata\win\src\Docker.Windows\Systray\DockerHubSystrayGroup.cs:line 77
--- End of stack trace from previous location where exception was thrown ---
   at System.Runtime.ExceptionServices.ExceptionDispatchInfo.Throw()
   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
   at System.Windows.Threading.DispatcherOperation.InvokeImpl()
   at MS.Internal.CulturePreservingExecutionContext.CallbackWrapper(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state, Boolean preserveSyncCtx)
   at System.Threading.ExecutionContext.Run(ExecutionContext executionContext, ContextCallback callback, Object state)
   at MS.Internal.CulturePreservingExecutionContext.Run(CulturePreservingExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Windows.Threading.DispatcherOperation.Invoke()
   at System.Windows.Threading.Dispatcher.ProcessQueue()
   at System.Windows.Threading.Dispatcher.WndProcHook(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)
   at MS.Win32.HwndWrapper.WndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam, Boolean& handled)
   at MS.Win32.HwndSubclass.DispatcherCallbackOperation(Object o)
   at System.Windows.Threading.ExceptionWrapper.InternalRealCall(Delegate callback, Object args, Int32 numArgs)
   at System.Windows.Threading.ExceptionWrapper.TryCatchWhen(Object source, Delegate callback, Object args, Int32 numArgs, Delegate catchHandler)
   at System.Windows.Threading.Dispatcher.LegacyInvokeImpl(DispatcherPriority priority, TimeSpan timeout, Delegate method, Object args, Int32 numArgs)
   at MS.Win32.HwndSubclass.SubclassWndProc(IntPtr hwnd, Int32 msg, IntPtr wParam, IntPtr lParam)
   at System.Windows.Forms.UnsafeNativeMethods.DispatchMessageW(MSG& msg)
   at System.Windows.Forms.Application.ComponentManager.System.Windows.Forms.UnsafeNativeMethods.IMsoComponentManager.FPushMessageLoop(IntPtr dwComponentID, Int32 reason, Int32 pvLoopData)
   at System.Windows.Forms.Application.ThreadContext.RunMessageLoopInner(Int32 reason, ApplicationContext context)
   at System.Windows.Forms.Application.ThreadContext.RunMessageLoop(Int32 reason, ApplicationContext context)
   at Docker.Program.Run(IReadOnlyCollection`1 args) in C:\workspaces\stable-18.09.x\src\github.com\docker\pinata\win\src\Docker.Windows\Program.cs:line 216```
Updated the Dockerfile so that it pulls an Ubuntu 16.04 base image and solved a couple of issues with RUN directives, namely:

- X is symlinked to Xorg by default now, so line 35 made the docker build fail;
- the UTF-8 locales your build is looking for is now part of a separate package, so I've included it among the base packages which are installed first and foremost.

Forwarding looks good from my side, so let me know!
is it possible to create a seamless mode or unity mode(vm) on windows?
 [like this he did on WSL](https://nickjanetakis.com/blog/using-wsl-and-mobaxterm-to-create-a-linux-dev-environment-on-windows#comment-3738321961)
Fixing the markdown syntax so it shows up nicer.
As you can note, titles were failing to render correctly, so I fixed them.
Hi,

 

My system is CentOS 7. I build a container by using the image “docker-desktop”.
https://github.com/rogaha/docker-desktop

After the container run successful, I use the follow command to attach to the session,
xpra --ssh="ssh -p 32770" attach ssh:docker@192.168.56.102:10                                              

However, the shell gave back a wrong as follow,
![image](https://user-images.githubusercontent.com/8141873/31313175-2357d986-ac0d-11e7-9496-9ca7fa69f52a.png)
I am sue I use the latest module "gobject" . Can you help me solve the problem?

 

Thanks.
Dear all:
I have meet this problem, every thing is ok follow the "readme", but I can't start a graph interface, could you please give me some advice?
Best regard

>>==============These are the screen log, but there is no graphic=======<<<<
$ xpra --ssh="ssh -p 36665" attach ssh:docker@0.0.0.0:10
2017-08-05 11:26:30,316 cannot use pycups for printing: No module named cups
2017-08-05 11:26:30,371 xpra gtk2 client version 0.15.8 (r11211)
2017-08-05 11:26:30,528 PyOpenGL warning: missing accelerate module
2017-08-05 11:26:30,528 PyOpenGL warning: missing array format handlers: numeric, vbo, vbooffset
2017-08-05 11:26:30,528 OpenGL Version: 3.0 Mesa 17.0.7
2017-08-05 11:26:30,529 OpenGL support could not be enabled:
2017-08-05 11:26:30,529  vendor 'nouveau' is blacklisted!
The authenticity of host '[0.0.0.0]:36665 ([0.0.0.0]:36665)' can't be established.
ECDSA key fingerprint is SHA256:23U5ssLRwESQva1fTh4Jc55129hRgn0l+QEs7M8bvoo.
Are you sure you want to continue connecting (yes/no)? 2017-08-05 11:26:30,605 detected keyboard: rules=evdev, model=pc105, layout=us
2017-08-05 11:26:30,606 desktop size is 1920x1080 with 1 screen(s):
2017-08-05 11:26:30,606   ':0.0' (508x285 mm - DPI: 96x96) workarea: 1855x1056 at 65x24
2017-08-05 11:26:30,606     monitor 1 (509x286 mm - DPI: 95x95)
