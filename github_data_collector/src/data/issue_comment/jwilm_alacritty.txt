The option has some "historical" background, for example it could break
ncurses applications like alsamixer, however the default to `true`
seems strange nowadays, because it makes impossible to draw bold text in
a "normal" color. Some other terminals (e.g. vte, kitty) also started default to
`false` here.

We're not removing the option, but just flipping a bit, and knowing that users
tend to copy paste our config in a past, will likely continue to have it
defaulted to `true` in their configuration files. The only problem is the users
who don't have this option in a config file now or new users, however the change
in color is noticeable and it also stated very clear in our configuration file,
so it shouldn't be a problem to flip things back.

Implements #2779

I think keeping this around isn't a good idea, so let's just push it.
If you double click on an opening bracket `( hello )`, it'll select till the closing bracket, however the opposite isn't true.
TODO:
 - [ ] Bracket selection across lines

Fixes: #3223
Hello,

I'm experiencing poor initialization performance of alacritty on AMD Linux laptop. I'm using a ThinkPad X395 with Ryzen 7 Pro 3700U (w/ Vega 10 Integrated Graphics). The distribution I'm running is Archlinux with the latest kernel `5.4.12-arch1-1`. I'm using `AMDGPU` driver and i3wm on Xorg. My alacritty configuration file contains just basic font and color scheme settings.

The current problem is that alacritty has a significant boot up time (around 600ms for `alacritty -e false`) on my UHD monitor. Meanwhile, when I switch from a workspace to another one which contains a window of alacritty instance, I can feel a significant latency (say, around 300ms). On other applications or terminal emulators (e.g. Kitty, which is also GPU-accelerated), I did not notice a latency either.

A simple annotation for the profiling results using `valgrind --tool=callgrind alacritty -e false` gives a output (I show first couple of lines here):

```
--------------------------------------------------------------------------------
Ir
--------------------------------------------------------------------------------
1,426,121,039  PROGRAM TOTALS

--------------------------------------------------------------------------------
Ir           file:function
--------------------------------------------------------------------------------
401,075,333  ???:0x0000000000359580 [/usr/lib/dri/radeonsi_dri.so]
153,814,876  ???:0x0000000000359630 [/usr/lib/dri/radeonsi_dri.so]
 91,057,400  ???:do_lookup_x [/usr/lib/ld-2.30.so]
 78,226,431  ???:0x00000000003396b0 [/usr/lib/dri/radeonsi_dri.so]
 71,160,050  ???:0x00000000000421b0 [/usr/lib/libGLX_mesa.so.0.0.0]
 65,848,189  ???:0x0000000000334100 [/usr/lib/dri/radeonsi_dri.so]
 42,582,416  ???:0x000000000001d8b0 [/usr/lib/libfontconfig.so.1.12.0]
 36,040,161  ???:0x00000000000251c0 [/usr/lib/libfontconfig.so.1.12.0]
 34,392,992  ???:0x000000000001d790 [/usr/lib/libfontconfig.so.1.12.0]
 30,579,262  ???:_dl_lookup_symbol_x [/usr/lib/ld-2.30.so]
 24,853,048  ???:0x00000000000f4800 [/usr/lib/dri/radeonsi_dri.so]
 21,008,058  ???:0x00000000000bbe10 [/usr/bin/alacritty]
 19,102,831  ???:__strcmp_avx2 [/usr/lib/libc-2.30.so]
 15,620,934  ???:0x0000000000020cc0 [/usr/lib/libfontconfig.so.1.12.0]
 15,322,321  ???:__strchr_avx2 [/usr/lib/libc-2.30.so]
 14,814,312  ???:0x0000000000342100 [/usr/lib/dri/radeonsi_dri.so]
 13,262,421  ???:llvm::PMTopLevelManager::setLastUser(llvm::ArrayRef<llvm::Pass*>, llvm::Pass*) [/usr/lib/libLLVM-9.so]
 11,934,897  ???:0x00000000002c2770 [/usr/bin/alacritty]
 11,289,819  ???:_int_malloc [/usr/lib/libc-2.30.so]
 10,165,223  ???:_dl_relocate_object [/usr/lib/ld-2.30.so]
```
I would like to figure out if this is a configuration error on any part of my system, or a problem with alacritty or the GPU stuff. If you need any more information, please let me know.

Thanks!
Fixes #2983.
OS: Windows
Version: 0.4.1 (4d9253b)
Windows: ConPTY

When using the recently released JetBrains Mono font (https://www.jetbrains.com/lp/mono/) on alacritty, seeing a strange issue where some of the UTF-8 characters are not displayed at all with alacritty.   Other terminals (mintty for example) are able to display this correctly.  First noticed when tmux did not display the borders of the panes.

Tested it with this demo test file: https://www.cl.cam.ac.uk/~mgk25/ucs/examples/UTF-8-demo.txt
Below is a cat of the file in alacritty - notice how only some of the characters are getting printed, and none of the box drawing characters are printed.
![alacritty](https://user-images.githubusercontent.com/5184519/72550239-45f63280-3860-11ea-94c1-8d1cd9234e05.png)

Same in mintty for comparison:
![mintty](https://user-images.githubusercontent.com/5184519/72550825-915d1080-3861-11ea-9442-613505497a4f.png)

Curious to know if it's just me or if others see this as well.
Thank you.
### System

OS: Linux (NixOS)
Version: 0.4.1
Linux/BSD: X11, KDE/XMonad

Trying to run at 5120x1440 results in alacritty hanging for a minute or so, and then opening a blank window (Sometimes black, sometimes yellow), that cant be interacted with at all. Dropping the resolution back to 3840x1080, alacritty works as expected.

`alacritty -vvv`:

```
Created log file at "/tmp/Alacritty-9316.log"
[2020-01-16 05:16] [INFO] Welcome to Alacritty
[2020-01-16 05:16] [INFO] Configuration loaded from "/home/mat/.config/alacritty/alacritty.yml"
[2020-01-16 05:16] [DEBUG] Estimated DPR: 718.4166666666666
[2020-01-16 05:16] [DEBUG] Estimated Cell Size: 5747 x 14357
[2020-01-16 05:16] [DEBUG] Estimated Dimensions: Some((474128.0, 358936.0))
[2020-01-16 05:17] [INFO] Device pixel ratio: 718.4166666666666
[2020-01-16 05:17] [INFO] Initializing glyph cache...
[2020-01-16 05:18] [INFO] ... finished initializing glyph cache in 90.064951741s
[2020-01-16 05:18] [INFO] Cell Size: 5747 x 14357
[2020-01-16 05:18] [INFO] Padding: 7184 x 7184
[2020-01-16 05:18] [INFO] Width: 474128, Height: 358936
[2020-01-16 05:18] [INFO] PTY Dimensions: Line(24) x Column(80)
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 179, g: 177, b: 173 } to Rgb { r: 118, g: 116, b: 114 }
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:204] Deriving dim colors from normal colors
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 1, g: 6, b: 14 } to Rgb { r: 0, g: 3, b: 9 }
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 234, g: 108, b: 115 } to Rgb { r: 154, g: 71, b: 75 }
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 145, g: 179, b: 98 } to Rgb { r: 95, g: 118, b: 64 }
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 249, g: 175, b: 79 } to Rgb { r: 164, g: 115, b: 52 }
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 83, g: 189, b: 250 } to Rgb { r: 54, g: 124, b: 165 }
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 250, g: 233, b: 148 } to Rgb { r: 165, g: 153, b: 97 }
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 144, g: 225, b: 198 } to Rgb { r: 95, g: 148, b: 130 }
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/color.rs:35] Scaling RGB by 0.66 from Rgb { r: 199, g: 199, b: 199 } to Rgb { r: 131, g: 131, b: 131 }
[2020-01-16 05:18] [INFO] Initialisation complete
[2020-01-16 05:18] [DEBUG] New num_cols is 2 and num_lines is 2
[2020-01-16 05:18] [INFO] Width: 20115.334, Height: 28725.334
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1846] Setting attribute: Bold
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1846] Setting attribute: Reverse
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1846] Setting attribute: CancelReverse
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1846] Setting attribute: Bold
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1846] Setting attribute: Reset
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1483] Carriage return
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1483] Carriage return
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1483] Carriage return
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1846] Setting attribute: Reset
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1846] Setting attribute: CancelReverse
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1846] Setting attribute: CancelUnderline
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1753] Clearing screen: Below
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1666] Clearing line: Right
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1877] Setting mode: CursorKeys
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1993] Setting keypad application mode
[2020-01-16 05:18] [TRACE] [alacritty_terminal/src/term/mod.rs:1877] Setting mode: BracketedPaste

```

The minute hang is at "Initializing glyph cache"

Digging around a little more, starting with no configuration crashes outright, narrowing down why, it looks like ommiting `window/dimensions/[columns,lines]` results in:

```
[2020-01-16 05:26] [DEBUG] Estimated DPR: 718.4166666666666
[2020-01-16 05:26] [DEBUG] Estimated Cell Size: 5747 x 14357
[2020-01-16 05:26] [DEBUG] Estimated Dimensions: None
Alacritty encountered an unrecoverable error:

Error creating GL context; Received multiple errors. Errors: [OsError("eglCreateWindowSurface failed"), OsError("Couldn\'t setup vsync: expected interval 1 but got 0")]
```

My settings are 80/24, which results in the hang and then blank window, adjusting them a little results in a hang, adjusting them too much results in the crash above.
Hey, really can't find answer on my questiion, thats why I ask it here. How can I copy from vim, using WSL with Alacritty to system clipboard? On linux I use "*y buffer to do this. How can I do same on WSL?

![image](https://user-images.githubusercontent.com/5683877/72422533-b4b98a00-3793-11ea-8f6c-2c577efe224a.png)

### System

OS: macOS 10.15.2
Alacritty Version: 0.4.1
Alfred Version: 4.0.7
Alacritty config: [alacritty.yml](https://github.com/brandoniffert/computer/blob/master/roles/dotfiles/files/.config/alacritty/alacritty.yml)

### Logs

[Alacritty-040.log](https://github.com/alacritty/alacritty/files/4059362/Alacritty-040.log)
[Alacritty-041.log](https://github.com/alacritty/alacritty/files/4059364/Alacritty-041.log)

There's a mac program called Alfred that has a feature for [auto expanding text snippets](https://www.alfredapp.com/help/features/snippets/) that has worked in all previous alacritty versions I've used but now breaks in 0.4.1.

I have a number of snippets setup, in the logs I'm using the snippet `;cl` to expand to `console.log()`.

In 0.4.0:
`;cl` expands to `console.log()`

In 0.4.1:
`;cl` expands to `v`

Alfred is closed source so I don't know exactly what it is doing but when it auto expands I believe it's 

1. Copying the snippet to the clipboard
2. Sending a series of simulated key presses to do a `CMD-v` paste
3. Repositioning the cursor via simulated key presses
4. Clearing the clipboard/restoring what was previously there

So it looks like it is trying to send the `CMD-v` key event but on 0.4.1 something is happening and it only registers the `v` and leaves that in the output.

I don't know if this is an alacritty or Alfred issue but auto expansion works in Terminal.app and iTerm on macOS.
After building from source, starting from this commit c34ec12
Alacritty crashes on start, using 1 older commit(dd1413e) works normally.

### System

OS: Windows 7 x64
Version: alacritty 0.4.2-dev (c34ec12 )
Windows: WinPTY

### Logs

Running cargo run --release:
```
error: process didn't exit successfully: `target\release\alacritty.exe` (exit code: 0xc0000139, STATUS_ENTRYPOINT_NOT_FOUND)

```
Clicking the exe pop up this error message:
![csrss_2020-01-12_17-36-31](https://user-images.githubusercontent.com/29836494/72217548-1abecb00-3562-11ea-9321-8b17873b5970.png)

Checking msdn API docs it seems `AdjustWindowRectExForDpi` only supported for Windows 10
https://docs.microsoft.com/en-us/windows/win32/api/winuser/nf-winuser-adjustwindowrectexfordpi