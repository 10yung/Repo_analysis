As always a **big thank you** to those who have contributed previously and especially those who make recurring contributions through [BountySource Salt](https://salt.bountysource.com/teams/cefsharp) and [GitHub Sponsors](https://github.com/sponsors/amaitland).

Again I'm asking for funding to continue my work on maintaining/developing `CefSharp`. As some of you may well know I'm currently a stay at home dad and spend a fairly large amount of time (roughly `10-12hrs` per week) developing and supporting the project. Your contributions are the only reason I'm allowed to continue working on the project. Without continued funding the time I currently spend on the project will have to be put into finding other paid work.

There are multiple options for contributing at this time:

- Recurring contribution through [GitHub Sponsors](https://github.com/sponsors/amaitland) - For a limited time `GitHub Sponsors` will match any contribution made as detailed in [About the GitHub Sponsors Matching Fund](https://help.github.com/en/github/supporting-the-open-source-community-with-github-sponsors/about-github-sponsors#about-the-github-sponsors-matching-fund)
- Contribute an amount towards the Bounty on this issue [![Bountysource](https://api.bountysource.com/badge/issue?issue_id=86879149)](https://www.bountysource.com/issues/86879149-funding-request-release-79-0-0?utm_source=86879149&utm_medium=shield&utm_campaign=ISSUE_BADGE)
- A one time contribution through `Paypal` at https://paypal.me/AlexMaitland

If you'd like to made a donation through `Paypal` directly or signup to `GitHub Sponsors`, I'll happily reduce the target.

--- 

## Release 79.0.0-pre01
**When 50% of target reached**
 -  [ ] Update to latest CEF build
  - [ ] Update changelog and create release notes
  - [ ] Create `cefsharp/79` release branch
  - [ ] Release `-pre` pacakges to nuget.org

## Release 79.0.0
**When 100% of target reached**
  - [ ] Resolve remaining issues attached to [79 Milestone](https://github.com/cefsharp/CefSharp/milestone/43)
  - [ ] Update changelog and create release notes
  - [ ] Generate new `API Doc` and upload to http://cefsharp.github.io/api/ 
  - [ ] Release 79.0.0 pacakges to nuget.org

If three additional people signup to `GitHub Sponsors` then I'll look at releasing a new more modern set of `Nuget Packages` which will better support .Net Core 3.x See #2795 for proposed package details.

---

If there's a particular issue you'd like to see resolved and are willing to contribute financial support then I'm happy to discuss the feasibility.

- **What version of the product are you using?**
    - current master

- **What architecture x86 or x64?**
    - both

- **On what operating system?**
    -  Win10

- **Are you using `WinForms`, `WPF` or `OffScreen`?**
    - `WinForms`
- **What steps will reproduce the problem?**
    - Create a new `WinForms` project
    - Change the `Platform target` in the projectsettings to `x86` or `x64`  
![image](https://user-images.githubusercontent.com/19730957/72144905-a76a5d00-3399-11ea-8083-83e7c0693924.png)
    - Try to build the project
    - Error output:
    ```
    CefSharp.Common contains unmanaged resoures, set your project and solution platform to x86 
    or x64. Alternatively for AnyCPU Support see https://github.com/cefsharp/CefSharp/issues/1714		
    ```

- **What is the expected output? What do you see instead?**
    - Project should build because i explicitly set the target to `x86` (even though the compiler-profile is still named `AnyCPU`)

- **Please provide any additional information below.**
    - Related to #1714
- **What version of the product are you using?**
    - I am using the following Setup:
    - CefSharp.OffScreen (75.1.143), CefSharp.Common (75.1.143), cef.redist.x86 and cef.redist.x64 (75.1.14)

    - As this is a little bit of a tapping in the dark (because of no Error been thrown or any indication that anything isn't working as expected)
    - I didn't change anything inside the Code so I think there is a state or a value saved anywhere which is preventing CefSharp or the underlying Chrome from successfully taking a screenshot

- **What architecture x86 or x64?**
x64 with 'x64' as active platform for the whole Project Solution
- **On what operating system?**
    - Win7

- **Are you using `WinForms`, `WPF` or `OffScreen`?**
Offscreen
- **What steps will reproduce the problem?**
    - Please provide detailed information here, enough for someone else to reprodce your problem.
    - Please no binary (zip, etc) links, fork the [MinimalExample](https://github.com/cefsharp/CefSharp.MinimalExample) and push your changes to `GitHub`. (Alternatively use a code sharing service list `Gist` or `Pastebin`).

I am using the Minimal-Example with no real changes inside the Process of taking the Screenshot.

- **What is the expected output? What do you see instead?**
Expected Result: A Task<Bitmap> with a Bitmap as Result returned by ScreenshotAsync
Actual Result: A Task<Bitmap> with a null-Value as Result returned by ScreenshotAsync

- **Please provide any additional information below.**
    - A stack trace if available, any Exception information.
No Error thrown...

    - Does the cef log provide any relevant information? (By default there should be a debug.log file in your bin directory)

> [0105/135535.606:INFO:CONSOLE(0)] "The connection used to load resources from https://localhost used TLS 1.0 or TLS 1.1, which are deprecated and will be disabled in the future. Once disabled, users will be prevented from loading these resources. The server should enable TLS 1.2 or later. See https://www.chromestatus.com/feature/5654791610957824 for more information.", source: https://localhost/path/to/function?minusdays=20 (0)

    - Any other background information that's relevant? Are you doing something out of the ordinary? 3rd party controls?
I am not using any third party control for the browser or screenshot part. All other controls are used after the Screenshot is saved.

- **Does this problem also occur in the `CEF` Sample Application from http://opensource.spotify.com/cefbuilds/index.html?**
I have opened my Page inside the Sample Application and it did shows up as it should. But I can't take a screenshot with the sample application...

    - To compare with WPF/OffScreen run cefclient --multi-threaded-message-loop --off-screen-rendering-enabled --enable-gpu
Same as above...
    - To compare with WinForms run cefclient --multi-threaded-message-loop
Same as above...
    - Please include the version you tested with e.g. `cef_binary_3.3029.1611.g44e39a8_windows64_client.tar.bz2`. It's important to you test with the same version that `CefSharp` is based on. Check the release notes to determine the version (https://github.com/cefsharp/CefSharp/releases) or load `chrome://version` in the browser.
Used Version: cef_binary_79.0.10+ge866a07+chromium-79.0.3945.88_windows64_client

Fixes [issue-number] 
   -  Fixes #1535

**Summary:**
   - Implement PerMonitorV2 dpiAwareness

**Changes:**
   - Add a hook to handle `WM_DPICHANGED` message.
   - Change dpiAwareness to PerMonitorV2 in `app.manifest`.
      
## How Has This Been Tested?
I tested it on a 4k screen with dpi from 100% to 350%, and it works fine.
And I tested it at a computer with two screen which has different dpi, and it also works fine when moving between screens.

## Screenshots (if appropriate):

## Types of changes
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [ ] Updated documentation

**Checklist:**
- [x] Tested the code(if applicable)
- [ ] Commented my code
- [ ] Changed the documentation(if applicable)
- [ ] New files have a license disclaimer
- [x] The formatting is consistent with the project (project supports .editorconfig)

**What version of the product are you using?** `75.1.143`

**What architecture x86 or x64?** `x64`

**On what operating system?** `Win7` & `Win10`

**Are you using `WinForms`, `WPF` or `OffScreen`?** `WPF`

**What steps will reproduce the problem?**

Show Dev Tools
```c#
browser.ShowDevTools();
```
Minimize Dev Tools

> Doesn't minimize to the taskbar it minimizes as an MDI child of the desktop

Restore Dev Tools

> Always on top
> Cannot Alt+Tab to it

Same Problem & Solution : 
[https://github.com/adobe/brackets/issues/7668](https://github.com/adobe/brackets/issues/7668)
The methods will be removed. More details to follow.

Related to #2977
- [x] Move StreamResponseFilter from the example into the main project
- [ ] Add some additional checking
After https://github.com/cefsharp/CefSharp/issues/2921 the best way to handle errors seemed to be using LoadHtml/LoadUrl the problem of this is that it creates an additional history entry that prevents the back button from properly functioning. The back button takes you to the same error site that re-triggers the error.  We could work around this by not showing the error the second time but that would still require hitting the back button twice.   

A temporary solution is to inject JS to call the history.go(-2) if on an error page but isn't great.

Per @amaitland suggestion created an upstream discussion thread about suggested best practice with some suggested options:
https://www.magpcss.org/ceforum/viewtopic.php?f=10&t=17250

Is it possible get Process ID of chrome process? I ask it cause i need to look ram usage of chrome subprocess and if more than X value i need to unload and reload instance. I running many ChromiumWebBrowser than i can't find the right process to unload then reload.
I use Offscreen version, i tried with GetBrowser().Identifier and GetBrowserHost().GetWindowHandle() but is not their purpose.

Thanks
Example of CharSet  at https://stackoverflow.com/questions/16752527/charset-in-data-uri