**Release**: https://github.com/jekyll/github-metadata/releases/tag/v2.13.0
**Diff**: https://github.com/jekyll/github-metadata/compare/v2.12.1...v2.13.0
### Before submitting an issue, please be sure to

- [x] Read [the contributing instructions](https://github.com/github/pages-gem/blob/master/docs/CONTRIBUTING.md#contributing-to-the-github-pages-gem)
- [x] Update to the latest Gem version (run `bundle update github-pages`)

### This issue affects

- [ ] The site generated by GitHub Pages
- [x] Building sites locally

*The GitHub Pages Gem is intended to help users replicate the GitHub Pages build environment locally. If your issue affects both the hosted version and the version previewed locally, you may be better suited reporting [seeking support in other forums](https://github.com/github/pages-gem/blob/master/docs/SUPPORT.md).*

### What did you do (e.g., steps to reproduce)
Create a new repo locally, create a `Gemfile` with `gem "github-pages", group: :jekyll_plugins`, run `bundle install` and finally run `bundle exec Jekyll serve`.

### What did you expect to happen?
The site to be built and served on `localhost:4000`.

### What happened instead?
A build error was shown:
```
jekyll 3.8.5 | Error:  uninitialized constant Faraday::Error::ClientError
Did you mean?  Faraday::ClientError
```

### Additional information
As far as I was able to narrow the issue down, it has something to do with `faraday (1.0.0)` being installed by the above listed steps. After manually lowering the version to `0.17.3` (the last release before `1.0.0`) in `Gemfile.lock` and re-running `bundle install`, everything worked fine.
Hello @benbalter and @parkr! ðŸ‘‹ 

I was wondering if this project/GitHub would whitelist a simple text plugin that added anchor tags to headings, to allow for linking. Right now, there are only the following options:

1. Use Kramdown, which supports this natively
   * Con: GitHub uses Commonmark, so there may be some rendering differences
2. Incorporate https://github.com/allejo/jekyll-anchor-headings
   * Con: Liquid rendering can be a slow process, and for a site with many pages, this adds overhead.
   * Con: you must copy-paste a file into your site, preventing the ability for easy updates
3. Use a JavaScript solution like anchor.js
   * Con: adds unnecessary client-side dependencies

I don't think the plugin I am proposing exists yet, so I'd be happy to write one if it'd be considered for inclusion. Thanks!
## Summary

When `github-pages` is listed under the `group :jekyll_plugins` in the Gemfile, then **on regeneration**, a site has *its **`assets/css/style.css`*** overridden by one bundled with one of the themes in the gem.

This issue came to my notice while investigating `jekyll/jekyll#7854`.

## This issue affects

- [ ] The site generated by GitHub Pages ***`maybe.. maybe not..`***
- [x] Building sites locally

## Steps to reproduce
- Set up a Jekyll site with at least the following:
  - Gemfile
    ```ruby
    source 'https://rubygems.org'
    gem 'github-pages', group: :jekyll_plugins
    ```
  - **`assets/css/style.css`** with the following:
    ```css
    h1 { color: red }
    ```
  - An `index.html` that uses the above stylesheet. (either via a layout or directly)
    ```html
    <!DOCTYPE html>
    <html>
      <head>
        <meta charset="UTF-8"/>
        <title>Test Site</title>
        <link rel="stylesheet" href="/assets/css/style.css" />
      </head>
      <body>
        <h1>Hello World</h1>
      </body>
    </html>
    ```
- Serve the site locally and preview at `http://localhost:4000/`
  ```
  bundle exec jekyll serve
  ```
- Trigger a regeneration by **just adding content to the landing page**.
  ```diff
    <h1>Hello World</h1>
  + <p>Lorem ipsum dolor sit amet</p>
  ```
---

## What did you expect to happen?

Expected the landing page to be rendered with the new content.

## What happened instead?
The following would illustrate better:

### Before regeneration:

![before-regen](https://user-images.githubusercontent.com/12479464/66631078-20cfa380-ec23-11e9-9260-df33d2990496.png)

### After regeneration:

![after-regen](https://user-images.githubusercontent.com/12479464/66630997-e8c86080-ec22-11e9-8dd9-6a89f6723405.png)

[Jekyll 4.0.0 is out](https://jekyllrb.com/news/2019/08/20/jekyll-4-0-0-released/), and brings lots of nice improvements. It would be really nice if `github-pages` gem would add support for Jekyll 4.
Hello, Can someone help me? I am using ['Affilated'](https://www.wowthemes.net/free-jekyll-template-affiliates/) themes. While testing the theme the "archive" function works fine on localhost but not in Github host.  It says "404 file not found".
**Release**: https://github.com/jekyll/jekyll/releases/tag/v3.8.6
**Diff**: https://github.com/jekyll/jekyll/compare/v3.8.5...v3.8.6
Until today, I have been using any of the many github-pages images out there. Today however, I encountered a bug in the latest versions, and I was trying to find where it came from. The bug is still there (something with an {% else %} not being recognised), and already reported, but while looking I also stumbled on this pages-gem repository, and saw the Dockerfile in there. This means there is an official docker image I can use. But it seems this repository is not yet linked to a dockerhub organisation. Would it be possible to link a dockerhub "github" organisation to this repository, so we could always have an up-to-date docker image on dockerhub?

Right now, I have forked this repository, to try and see if it was possible to use the repository as is in dockerhub. And yes, it takes only a few minutes to set up, but once it's there, it's free, needs no maintenance, and will automatically build a new image based on the latest tag, starting with the next tag you'll add to this repository. The setup I use:
```
Source repository: phpqa/pages-gem
Build rule 1:
  Source type: tag
  Source: /^(v[0-9.]+)$/
  Docker Tag: {\1}
  Dockerfile location: Dockerfile
  Build Context (only available on edit): /
  Autobuild: true
  Build caching: true
Build rule 2:
  Source type: tag
  Source: /^(v[0-9.]+)$/
  Docker Tag: {\1}-alpine
  Dockerfile location: Dockerfile.alpine
  Build Context (only available on edit): /
  Autobuild: true
  Build caching: true
```

This will build a docker image every time a new tag is added to the github repository. You can see the example at https://hub.docker.com/r/phpqa/github-pages-gem based on https://github.com/phpqa/pages-gem/releases/tag/v199

I use it with the following `docker-compose.yml` file, that will serve your site with a `docker-compose up -d` to `0.0.0.0:4000` (on a Mac, as there is a $PWD in there):
```
version: '3.7'

volumes:

    website:
        driver: local
        driver_opts:
            o: bind
            type: none
            device: $PWD/

services:
    jekyll:
        image: phpqa/github-pages-gem:v199
        command: jekyll serve -H 0.0.0.0 -P 4000 --watch --force_polling --verbose
        ports:
            - target: 4000
              published: 4000
              protocol: tcp
              mode: host
        volumes:
            - type: volume
              source: website
              target: /src/site
              volume:
                  nocopy: true
```

You could also add some build hooks to also add a latest tag, but that would only be an improvement.
This allows users to explicitly turn off math engine and syntax highlighter of kramdown, following #545.
I also applied the changes requested by @parkr to prevent non-nil values.
I would like to request adding for support [jekyll-furigana](https://github.com/Rolbackse/jekyll-furigana) as a whitelisted plugin. 

This plugin supports displaying Japanese with furigana like [NHK easy news](https://www3.nhk.or.jp/news/easy/).

