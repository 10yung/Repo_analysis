## üêõ Bug Report

SelectElement  does not appear in the namespace OpenQA.Selenium.Support.UI.SelectElement downgrading to 4.0.0-alpha03 makes it show up.

to reproduce

```
class foo {
protected OpenQA.Selenium.Support.UI.SelectElement OldStyleSelect { get; set;}
}
```

OS: Windows 10
Browser: n/a
Browser version: n/a
Browser Driver version: n/a
Language Bindings version: C# netstandard 2.0
Selenium Grid version (if applicable): n/a

Clear actions in ActionChains object after performing

Fixes #7913 

<!--- Provide a general summary of your changes in the Title above -->

### Description
`ActionChains` assigned to a variable does not clear previous actions after `perform` and  `reset_actions` does not solve the issue.

### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Assigning ActionChains to a variable and using it in different actions causes a repetition of all previous actions. The example below, in the second drag and drop, actions will be executed for `element1` and `element2` and not only for the `element2`. Clearing `device.action` in the `perform` method solve the issue.

Not: clearing actions on the remote end with `driver.execute(Command.W3C_CLEAR_ACTIONS)` can be also executed in the `pefrom` method.

```
actions = ActionChains(driver)
actions.drag_and_drop(element1, target).perform()
actions.reset_actions()
actions.drag_and_drop(element2, target).perform()
```


### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

### Checklist
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [ ] I have added tests to cover my changes.
- [ ] All new and existing tests passed.
<!--- Provide a general summary of your changes in the Title above -->

## üêõ Bug Report

When getting this error on the hub : 
```
11:31:20.009 WARN [RequestHandler.process] - The client is gone for session ext. key **432be81a1ecdbe85af6a19db2ef3ba0b**, terminating
```

the node is not closing the browser and leaves it hanging consuming memory
here are the logs on the node:
```
1/16/2020 8:45:35 AM06:45:35.874 INFO [ActiveSessionFactory.apply] - Capabilities are: {
1/16/2020 8:45:35 AM  "browserName": "chrome",
1/16/2020 8:45:35 AM  "goog:chromeOptions": {
1/16/2020 8:45:35 AM    "args": [
1/16/2020 8:45:35 AM      "--start-maximized",
1/16/2020 8:45:35 AM      "--ignore-certificate-errors",
1/16/2020 8:45:35 AM      "--incognito",
1/16/2020 8:45:35 AM      "--test-type --no-sandbox",
1/16/2020 8:45:35 AM      "--enable-strict-powerful-feature-restrictions"
1/16/2020 8:45:35 AM    ],
1/16/2020 8:45:35 AM    "extensions": [
1/16/2020 8:45:35 AM    ],
1/16/2020 8:45:35 AM    "excludeSwitches": [
1/16/2020 8:45:35 AM      "enable-automation"
1/16/2020 8:45:35 AM    ],
1/16/2020 8:45:35 AM    "prefs": {
1/16/2020 8:45:35 AM      "profile.default_content_setting_values": {
1/16/2020 8:45:35 AM        "images": 2
1/16/2020 8:45:35 AM      }
1/16/2020 8:45:35 AM    }
1/16/2020 8:45:35 AM  }
1/16/2020 8:45:35 AM}
1/16/2020 8:45:35 AM06:45:35.875 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)
1/16/2020 8:45:35 AMStarting ChromeDriver 79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}) on port 27522
1/16/2020 8:45:35 AMOnly local connections are allowed.
1/16/2020 8:45:35 AMPlease protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.
1/16/2020 8:45:35 AM[1579157135.896][SEVERE]: bind() failed: Cannot assign requested address (99)
1/16/2020 8:45:36 AM06:45:36.487 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C
1/16/2020 8:45:36 AM06:45:36.492 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session **432be81a1ecdbe85af6a19db2ef3ba0b** (org.openqa.selenium.chrome.ChromeDriverService)
1/16/2020 1:28:23 PM[1579174103.322][SEVERE]: Timed out receiving message from renderer: 27.209
1/16/2020 1:28:23 PM[1579174103.324][SEVERE]: Timed out receiving message from renderer: -0.002
1/16/2020 1:29:38 PM[1579174178.255][SEVERE]: Timed out receiving message from renderer: 25.612
1/16/2020 1:29:38 PM[1579174178.257][SEVERE]: Timed out receiving message from renderer: -0.002
1/16/2020 1:31:20 PM[1579174279.998][SEVERE]: Timed out receiving message from renderer: 27.936
1/16/2020 1:31:20 PM[1579174280.005][SEVERE]: Timed out receiving message from renderer: -0.007
1/16/2020 1:45:07 PM11:45:07.448 INFO [ActiveSessionFactory.apply] - Capabilities are: {
1/16/2020 1:45:07 PM  "browserName": "chrome",
1/16/2020 1:45:07 PM  "goog:chromeOptions": {
1/16/2020 1:45:07 PM    "args": [
1/16/2020 1:45:07 PM      "--start-maximized",
1/16/2020 1:45:07 PM      "--ignore-certificate-errors",
1/16/2020 1:45:07 PM      "--incognito",
1/16/2020 1:45:07 PM      "--test-type --no-sandbox",
1/16/2020 1:45:07 PM      "--enable-strict-powerful-feature-restrictions"
1/16/2020 1:45:07 PM    ],
1/16/2020 1:45:07 PM    "extensions": [
1/16/2020 1:45:07 PM    ],
1/16/2020 1:45:07 PM    "excludeSwitches": [
1/16/2020 1:45:07 PM      "enable-automation"
1/16/2020 1:45:07 PM    ],
1/16/2020 1:45:07 PM    "prefs": {
1/16/2020 1:45:07 PM      "profile.default_content_setting_values": {
1/16/2020 1:45:07 PM        "images": 2
1/16/2020 1:45:07 PM      }
1/16/2020 1:45:07 PM    }
1/16/2020 1:45:07 PM  }
1/16/2020 1:45:07 PM}
1/16/2020 1:45:07 PM11:45:07.450 INFO [ActiveSessionFactory.lambda$apply$11] - Matched factory org.openqa.selenium.grid.session.remote.ServicedSession$Factory (provider: org.openqa.selenium.chrome.ChromeDriverService)
1/16/2020 1:45:07 PMStarting ChromeDriver 79.0.3945.36 (3582db32b33893869b8c1339e8f4d9ed1816f143-refs/branch-heads/3945@{#614}) on port 12856
1/16/2020 1:45:07 PMOnly local connections are allowed.
1/16/2020 1:45:07 PMPlease protect ports used by ChromeDriver and related test frameworks to prevent access by malicious code.
1/16/2020 1:45:07 PM[1579175107.469][SEVERE]: bind() failed: Cannot assign requested address (99)
1/16/2020 1:45:08 PM11:45:08.147 INFO [ProtocolHandshake.createSession] - Detected dialect: W3C
1/16/2020 1:45:08 PM11:45:08.157 INFO [RemoteSession$Factory.lambda$performHandshake$0] - Started new session 7575dc7341a030a61a3c08abf9f697b8 (org.openqa.selenium.chrome.ChromeDriverService)
```

As you can see from the logs the session **432be81a1ecdbe85af6a19db2ef3ba0b** is never terminated on the node and a new session is started even though MAX_INSTANCES is 1.

It seems it occurs when there are lots of:
```
[SEVERE]: Timed out receiving message from renderer: 18.182
1/16/2020 1:26:59 PM[1579174019.827][SEVERE]: Timed out receiving message from renderer: -0.003
```
And the above happens when my website is not responding.

Here is the output of `ps -aux`:
```
USER       PID %CPU %MEM    VSZ   RSS TTY      STAT START   TIME COMMAND
seluser      1  0.0  0.0  21340  3528 pts/0    Ss+  Jan15   0:00 bash /opt/bin/entry_point.sh
seluser     11  0.0  0.0  57732 20780 pts/0    S+   Jan15   0:14 /usr/bin/python /usr/bin/supervisord --configuration /etc/supervisord.conf
seluser     14  0.0  0.0  21340  3456 pts/0    S    Jan15   0:00 bash /opt/bin/start-xvfb.sh
seluser     15  0.0  0.0  21340  3740 pts/0    S    Jan15   0:00 /bin/bash /opt/bin/start-selenium-node.sh
seluser     18  0.4  0.0 1396292 62648 pts/0   Sl   Jan15   3:39 /usr/bin/Xvfb :99.0 -screen 0 1360x1020x24 -dpi 96 -ac +extension RANDR
seluser     48  0.4  0.2 35329040 690852 pts/0 Sl   Jan15   3:46 java -cp /opt/selenium/*:. org.openqa.grid.selenium.GridLauncherV3 -role node -hub http://hub:4444/grid/register -nodeConfig /opt/selenium/config.json
seluser   6770  0.0  0.0 690420 48464 pts/0    Sl   11:18   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  10989  1.0  0.0 111472 18248 pts/0    Sl   12:15   0:31 /opt/selenium/chromedriver-79.0.3945.36 --port=29144
seluser  11000  5.6  0.0 706468 153616 pts/0   Sl   12:15   2:56 /opt/google/chrome/chrome --no-sandbox --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor -
seluser  11005  0.0  0.0   7608   740 pts/0    S    12:15   0:00 cat
seluser  11006  0.0  0.0   7608   788 pts/0    S    12:15   0:00 cat
seluser  11008  0.0  0.0 421008 50640 pts/0    S    12:15   0:02 /opt/google/chrome/chrome --type=zygote --no-sandbox --enable-logging --log-level=0 --user-data-dir=/tmp/.com.google.Chrome.HlA1C6
seluser  11009  0.0  0.0  27508  3140 pts/0    S    12:15   0:00 /opt/google/chrome/nacl_helper --no-sandbox
seluser  11027  1.3  0.0 737808 120936 pts/0   Sl   12:15   0:41 /proc/self/exe --type=gpu-process --field-trial-handle=13791595325161028530,18224374104055467530,131072 --no-sandbox --enable-logging --log-level=0 --user-data
seluser  11029  1.4  0.0 522604 103184 pts/0   Sl   12:15   0:45 /opt/google/chrome/chrome --type=utility --field-trial-handle=13791595325161028530,18224374104055467530,131072 --lang=en-US --service-sandbox-type=network --no
seluser  11084  0.0  0.0 705908 73688 pts/0    Sl   12:15   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  11169 21.3  0.1 1343504 373976 pts/0  Sl   12:15  11:03 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  26431  1.2  0.0 749140 82072 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  26469  4.2  0.0 682544 74880 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  26482  5.6  0.0 679216 73396 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  26495  5.0  0.0 681776 74760 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  26508  1.0  0.0   4628   816 pts/1    Ss+  13:07   0:00 /bin/sh -c TERM=xterm-256color; export TERM; [ -x /bin/bash ] && ([ -x /usr/bin/script ] && /usr/bin/script -q -c "/bin/bash" /dev/null || exec /bin/bash) || e
seluser  26514  0.0  0.0   4628    92 pts/1    S+   13:07   0:00 /bin/sh -c TERM=xterm-256color; export TERM; [ -x /bin/bash ] && ([ -x /usr/bin/script ] && /usr/bin/script -q -c "/bin/bash" /dev/null || exec /bin/bash) || e
seluser  26515  0.0  0.0  22244  2672 pts/1    R+   13:07   0:00 /usr/bin/script -q -c /bin/bash /dev/null
seluser  26516  0.0  0.0   4628   780 pts/2    Ss   13:07   0:00 sh -c /bin/bash
seluser  26517  0.0  0.0  21472  3956 pts/2    S    13:07   0:00 /bin/bash
seluser  26521  5.5  0.0 664808 45680 pts/0    Sl   13:07   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  26534  0.0  0.0  37364  3200 pts/2    R+   13:07   0:00 ps -aux
seluser  29188  0.4  0.0 110448 18088 pts/0    Sl   06:45   1:46 /opt/selenium/chromedriver-79.0.3945.36 --port=27522
seluser  29199  4.5  0.0 978260 186532 pts/0   Sl   06:45  17:16 /opt/google/chrome/chrome --no-sandbox --disable-background-networking --disable-client-side-phishing-detection --disable-default-apps --disable-hang-monitor -
seluser  29204  0.0  0.0   7608   800 pts/0    S    06:45   0:00 cat
seluser  29205  0.0  0.0   7608   772 pts/0    S    06:45   0:00 cat
seluser  29207  0.0  0.0 421008 50340 pts/0    S    06:45   0:02 /opt/google/chrome/chrome --type=zygote --no-sandbox --enable-logging --log-level=0 --user-data-dir=/tmp/.com.google.Chrome.1wO4W4
seluser  29208  0.0  0.0  27508  3160 pts/0    S    06:45   0:00 /opt/google/chrome/nacl_helper --no-sandbox
seluser  29241  2.3  0.0 734604 111260 pts/0   Sl   06:45   9:06 /opt/google/chrome/chrome --type=gpu-process --field-trial-handle=1507455793371754378,10270813205493320603,131072 --no-sandbox --enable-logging --log-level=0 -
seluser  29244  0.7  0.0 531816 121816 pts/0   Sl   06:45   3:02 /opt/google/chrome/chrome --type=utility --field-trial-handle=1507455793371754378,10270813205493320603,131072 --lang=en-US --service-sandbox-type=network --no-
seluser  29308  0.0  0.0 705908 74884 pts/0    Sl   06:45   0:00 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
seluser  29372 57.3  1.1 3602324 2817532 pts/0 Sl   06:45 219:06 /opt/google/chrome/chrome --type=renderer --no-sandbox --enable-logging --disable-webrtc-apm-in-audio-service --log-level=0 --remote-debugging-port=0 --test-ty
```
Here you can see that the browser which started at 6:45 it is still open.

Here is my setup
`
version: '2'
services:
  hub:
    mem_limit: 3145728000
    image: selenium/hub:3.141.59-yttrium
    environment:
      GRID_MAX_SESSION: '1'
      GRID_TIMEOUT: '90'
      GRID_BROWSER_TIMEOUT: '120'
    stdin_open: true
    tty: true
    mem_reservation: 3145728000
  chrome:
    image: selenium/node-chrome:3.141.59-yttrium
    stdin_open: true
    volumes:
    - /dev/shm:/dev/shm
    tty: true
'
This is similar to #2332
## Environment

OS: Linux
Browser: Chrome
Browser version: 79.0.3945.79
Browser Driver version: ChromeDriver 79.0.3945.36
Language Bindings version: java.version: '1.8.0_181'
Selenium Grid version (if applicable): 3.141.59 

## üêõ Bug Report

Firefox 72.0.1 ignores options set by GeckoDriver. via Java. Used to work fine for Firefox 72.0 and older.
This worked all right before I got Firefox 72.0.1. With 72.0.1 the PDF is opened in the pdf view of FireFox. I checked the FireFox option "pdfjs.disabled" in about:config and it is set to false. Any ideas how to fix this? 


## To Reproduce
package manuals_hpesc_test;

import java.io.File;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.firefox.FirefoxDriver;
import org.openqa.selenium.firefox.FirefoxOptions;
import org.openqa.selenium.firefox.FirefoxProfile;

public class Manuals_HPESC_Test {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        Manuals_HPESC_Test m = new Manuals_HPESC_Test();
        m.dowork();
    }

    private void dowork() {
        firefox();
    }

    private void firefox() {
        System.setProperty("webdriver.gecko.driver", "< path to geckodriver.exe >");

        String fileDownloadPath = "< directory >";

        Map<String, Object> prefsMap = new HashMap<String, Object>();
        prefsMap.put("profile.default_content_settings.popups", 0);
        prefsMap.put("download.default_directory", fileDownloadPath);

        FirefoxProfile profile = new FirefoxProfile();
        profile.setPreference("browser.download.folderList", 2);
        File tempfile = new File(fileDownloadPath);
        profile.setPreference("browser.download.dir", tempfile.getAbsolutePath());
        profile.setPreference("browser.helperApps.neverAsk.saveToDisk", "application/zip,application/octet-stream,application/pdf");
        profile.setPreference("pdfjs.disabled", true);
        FirefoxOptions options = new FirefoxOptions();
        WebDriver driver = new FirefoxDriver(options);
        // page contains an iframe for a pdf
        driver.get("https://support.hpe.com/hpsc/doc/public/display?docLocale=en_US&docId=emr_na-a00045838en_us&withFrame");
        driver.manage().timeouts().implicitlyWait(10, TimeUnit.SECONDS);
        driver.manage().window().maximize();
        try {
            Thread.sleep(30000);
        } catch (InterruptedException ex) {
        }
        System.out.println("Downloaded");
        if (driver != null) {
            try {
                driver.quit();
            } catch (Exception e) {
                e.printStackTrace();
            }

        }

    }
}

## Environment

OS: Windows 10 1909 64-bit
Browser: FireFox 64-bit
Browser version: 72.0.1
Browser Driver version: GeckoDriver V026.0
Language Bindings version: Java openjdk version "1.8.0_222"
Selenium Grid version (if applicable): 

<!-- NOTE
Please be aware that the Selenium Grid 3.x is being deprecated in favour of the
upcoming version 4.x. We won't be receiving any PRs related to the Grid 3.x code. Thanks!
-->
### Description
Adding functionality to get data from CDP. 

### Motivation and Context
With the current functionality we can send data to devtools but we cannot get anything. There are a lot of commands where you can get data from devtools: Get cookies, performance metrics, get response bodies and more. See https://chromedevtools.github.io/devtools-protocol/

### Types of changes
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

### Checklist
- [x] I have read the [contributing](https://github.com/SeleniumHQ/selenium/blob/master/CONTRIBUTING.md) document.
- [ ] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [x] I have added tests to cover my changes.
- [ ] All new and existing tests passed.
<!--- Provide a general summary of your changes in the Title above -->

## üöÄ Feature Proposal

sendKeysQuickly implementation could paste the entire text all at once instead of character by character.

## Motivation

sendKeys is too slow if the text is very long.

## Example

```
String value = "...very long text...";
WebElement element = ...
element.sendKeys(value);
```

There should be no need to use an insecure protocol for websocket proxying.
It should be possible to use the Router to proxy websocket traffic to and from the node. This proxying needs to support both binary and text-based frames, since we'll use this for handling VNC traffic as well as CDP requests.
## üêõ Bug Report

I using `.NET Core` with `C#` and I got this error when upgraded to Selenium `4.0.0-alpha04` 

`System.IO.FileNotFoundException : Could not load file or assembly 'netstandard2.0assembly, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null'. The system cannot find the file specified.
`
and the browser didn't open it failed from the beginning. 
## To Reproduce

<!--
Please be sure to include an SSCCE (Short, Self Contained, Correct [compilable] example) http://sscce.org/
If you can't provide a link to the page, consider creating a reproducible page on https://jsfiddle.net/
-->

Detailed steps to reproduce the behavior:

## Expected behavior

The browser should be opened and run the script 

## Test script or set of commands reproducing this issue

```
using NUnit.Framework;
using OpenQA.Selenium;
using OpenQA.Selenium.Chrome;

namespace Selenium4
{
    public class RelativeLocators
    {
        private IWebDriver _driver;

        [SetUp]
        public void Setup()
        {
            _driver = new ChromeDriver();
            _driver.Navigate().GoToUrl("https://the-internet.herokuapp.com/");
            _driver.Manage().Window.Maximize();
        }

        [Test]
        public void ClickLoginLink()
        {
            _driver.FindElement((RelativeBy.
                WithTagName("li")
                .Below(By.LinkText("Forgot Password"))
                .Above(By.LinkText("Frames")))).Click();
            Assert.IsTrue(_driver.Url.Contains("login"));
        }
    }
}
```
## Screenshot
<img width="1320" alt="Screenshot 2020-01-12 at 15 24 50" src="https://user-images.githubusercontent.com/45570191/72220407-a92a5100-3550-11ea-8bd4-4c37b828c1f3.png">


## Environment
OS: OSX 10.14.6
Browser: Chrome
Browser version:  79
Browser Driver version: ChromeDriver 2.37
Language Bindings version: C# 

At line 194, the `ITMLDocument2::geHt_designMode` COM method is called.
That method takes an unique `[out][retval]  BSTR *p parameter`, but the argument provided is a NOT  an empty `CComBSTR`. The actual `BSTR` stored in the smart pointer is leaked.

Suggested FIX:

```
CComBSTR design_mode;
this->script_engine_host_->get_designMode(&design_mode);
if ( design_mode ) {
  design_mode.ToLower();
  if (design_mode == L"on") {
    CComBSTR set_design_mode = L"off";
    this->script_engine_host_->put_designMode(set_design_mode);
  }
}
```

OS: Windows 10
Browser: IE11