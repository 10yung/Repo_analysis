**Describe the bug**


**Reproduction**

[Live Reproduction](codesandbox.io/....)

Steps to reproduce the behavior:

1. Turn on Devtool and open mode screen smaller
2. Drag item
3. Item copy still keeps its initial size

**Expected behavior**
A clear and concise description of what you expected to happen.

**Screenshots**
<img width="1677" alt="Screen Shot 2020-01-17 at 16 14 32" src="https://user-images.githubusercontent.com/33604446/72599524-74e5d480-3944-11ea-8586-dbe35b229dcd.png">

Hello,

I'm having performance issues when starting to drag a source, with multiple drop targets that use monitor.getDifferenceFromInitialOffset(). Reducing the number of drop targets or not using monitor.getDifferenceFromInitialOffset() on them will increase the performance a lot. Using react-virtualized will too. But non of these solutions is ideal in my case.

I was wondering if I may be doing something wrong or if it seems normal to you that such a case has performance issues?

Btw, please note that I'm in version 5 and not planning to upgrade yet (I can't use hooks yet).

Thanks.
**Describe the bug**
DragSourceHookSpec#end is declared as:
**(dropResult: DropResult | undefined, monitor: DragSourceMonitor) => void**
whereas its source documentation presumes that dropResult is obtained via **DragSourceMonitor#getDropResult()** [1]
Documentation page declares signature as **"end(item, monitor)"** [2]
Actual behaviour is as specified in docs and not in source code.
There is also one place [3] that looks like invocation of similar function, but not sure if this is relevant.

**Reproduction**
1. Open links:
https://github.com/react-dnd/react-dnd/blob/master/packages/core/react-dnd/src/interfaces/hooksApi.ts (line 46) [1]
https://react-dnd.github.io/react-dnd/docs/api/use-drag#specification-object-members [2]
https://github.com/react-dnd/react-dnd/blob/master/packages/core/react-dnd/src/hooks/internal/drop.ts (line 50) [3]
2. See.

**Expected behavior**
DragSourceHookSpec#end function must have first argument "item" and not "dragSource"
(Does it really need to have two arguments if both are obtainable via monitor?)

**Screenshots**
Not applicable.

**Desktop (please complete the following information):**

- OS: Any
- Browser: Any
- Version: current master (07.01.2020)

**Additional context**
None.

**Is your feature request related to a problem? Please describe.**
The project I am working on uses an older version of react-dnd (7.7.0) and at the moment it is impossible to upgrade. There is no versioning of the documentation which makes working with older version harder. 

**Describe the solution you'd like**
Would be nice is documentation was either a part of the repository or had the versioning on the website. 


I have included these two packages in package.json of my application

"react-dnd": "10.0.2", "react-dnd-html5-backend": "10.0.2",

Once I add to my component, I get below build error

Module not found : error : Can't resolve '@react-dnd/invariant' in 'D:\code\test\node_modules\react-dnd\dist\esm\common'

Es6 version. Let me know if we need further information to look into the issue.
![image](https://user-images.githubusercontent.com/5847281/71665865-653d8c00-2d99-11ea-997a-7fdcb575322d.png)

I'm doing a project about file-manager,  so just like the pic, the file card can drag use dnd DragSource, and the parent need add feature about selection, draw a box to select files, so I added the "mousedown" and "mousemove" and "mouseup" in parent dom.

![image](https://user-images.githubusercontent.com/5847281/71666124-95395f00-2d9a-11ea-8d81-2868432ee8d5.png)

========================

issue: because of the parent DOM add "mousedown" event , the child DOM(file card) begin can't drag, will also draw selection box.

=============

sorry, I add stopPropagation on mousedown due to can not drag, and i add the e.target in mousedown for file card resolve also  draw selection box issue 

On the docs here https://react-dnd.github.io/react-dnd/docs/overview at the "Higher-Order Components and Decorators" section this code doesn't work

```
import { DragSource, DropTarget } from 'react-dnd'
import flow from 'lodash/flow'

class YourComponent {
  render() {
    const { connectDragSource, connectDropTarget } = this.props
    return connectDragSource(
      connectDropTarget(),
      /* ... */
    )
  }
}

export default flow(DragSource(/* ... */), DropTarget(/* ... */))(YourComponent)
```

The problem being the 
 ```
   return connectDragSource(
      connectDropTarget(),
      /* ... */
```

What did work was nesting the two functions, something like this worked.
```
return connectDropTarget(
        connectDragSource( /* ... */ )
 );  
```
Where /* ... */ represents the jsx code for display

Using the set up in the docs renders nothing on the page but also throws no errors. 
In this section of the docs it refers to the param passed in as `monitor`, when I think it's actually the `item`?  Could you confirm?

https://react-dnd.github.io/react-dnd/docs/api/use-drop
Hi,
I got an issue with **react-dnd** library when I did a drag & drop from a dialog

When I drag the item without scrolling to the end of the dialog every thing works fine ,

But when I scroll to the end of dialog the item can't be dragged

Also another thing strange that the problem doesn't exist in Firefox browser , only in chrome

**Note :**
I did put a console.log in beginDrag and endDrag I found that endDrag is called directly after begin

**ScreenShot**

https://drive.google.com/file/d/1YX2Uxn66luARilVfJXucJgjBzhoaMAkU/view?usp=sharing
Description:

For my project, I have to create a nested sortable list. When the item that is being dragged it cannot move left or right, only top and bottom. Additionally, it can only move top and bottom within its parent container.

I have created a code sandbox for you (sorry this is a work project and can't share any code with you, therefore I have created sandbox)

https://codesandbox.io/s/ecstatic-wood-klhnj

I want to try and make this as a reusable component, so it should be able to handle the dragging constraints as well as single, nested, triple nested scenarios.

The link I have provided works, but I feel it's very laggy and not as smooth as the other react-dnd examples I have seen. Am I doing something wrong? Can I improve? 

In order to deal with nested items, I have created two item types. is this the correct move?

PS I'm sorry this isn't a bug or enhancement, I just wanted to reach out to the react-dnd team for guidance. Thank you very much in advance for any help. Happy holidays!