What I find useful is when exporting in SVG format to use the `skinparam pathHoverColor {color}` for complex diagrams in order to make it easier to follow the arrows. 
What it would be also useful is the ability to increase the path element thickness in order to emphasize the arrow. This I was able to do using some simple css but it would be nicer to have it as a skinparam.

If people are interested I can raise a PR with a suggestion to add it.
I want to convert PlantUML parser to Kotlin, as Kotlin allows you to compile for both JVM and JS (browser or nodejs). One of the reasons, to use own renderer (e.g. jointjs lib) and so on.

In any case, [Kotlin](https://kotlinlang.org/) it is modern language, that fully compatible with Java (e.g. no need to rewrite the whole project — just only needed parts).

I see number of issues and not implemented initiatives, e.g.

https://github.com/plantuml/plantuml/pull/83#issuecomment-366817949
https://github.com/plantuml/plantuml/pull/93#issuecomment-366817979

that makes me wonder — are you interested in community help? Are you interested to accept pull requests and move project forward?

I am author of 8.4K project and know how it is, when you cannot anymore spend time on your project and prefer to spend time on other projects  or with family :) Still, accepting PR in 1-3 weeks will be great.
JHipster is getting more and more traction in the Java world.

https://start.jhipster.tech/jdl-studio/

https://www.jhipster.tech/jdl/

https://www.jhipster.tech/jhipster-ide/
GRAVE: Erreur dans main
java.lang.UnsatisfiedLinkError: Could not load library: gstreamer
	at org.freedesktop.gstreamer.lowlevel.GstNative.load(GstNative.java:56)
	at org.freedesktop.gstreamer.lowlevel.GstNative.load(GstNative.java:46)
	at org.freedesktop.gstreamer.lowlevel.GstAPI.<clinit>(GstAPI.java:36)
	at org.freedesktop.gstreamer.Gst.init(Gst.java:295)
	at com.nccoding.keoplayer.main.Main.main(Main.java:31)
Some problems were encountered while building the effective model for GStreamerVideoPlayer:GStreamerVideoPlayer:jar:0.0.1-SNAPSHOT
'build.plugins.plugin.version' for org.apache.maven.plugins:maven-jar-plugin is missing. @ line 17, column 21

It is highly recommended to fix these problems because they threaten the stability of your build.

For this reason, future Maven versions might no longer support building such malformed projects.

                                                                        
------------------------------------------------------------------------
Building GStreamerVideoPlayer 0.0.1-SNAPSHOT
------------------------------------------------------------------------

--- maven-clean-plugin:2.5:clean (default-clean) @ GStreamerVideoPlayer ---
Deleting C:\Users\dev1k\OneDrive\Documents\NetBeansProjects\Source Code KeoPlayer\GStreamerVideoPlayer\target
------------------------------------------------------------------------
BUILD SUCCESS
------------------------------------------------------------------------
Total time: 0.292 s
Finished at: 2020-01-14T11:35:41+01:00
Final Memory: 6M/24M
------------------------------------------------------------------------
If I create and destroy lifeline several times I will get wrong lifeline display (missing line between fist create and destroy).
Also I found strange that I have a component B present on the bottom after it is being destroyed.
```
@startuml
A -> C
create B
A -> B
A <- B
A <- B
destroy B
A -> C
A -> B **
B --> A
A -> B !!
A -> C
@enduml
```
![Visual bug](https://www.plantuml.com/plantuml/img/SoWkIImgAStDuN9KqBLJSEPABafDB4bLS8BmGPIDBe9AIIqkASglX4axGrKfQ6bnEIde0fcEC155HPWIXzIy5A050000)
@startuml
[*] --> LexTop
LexTop --> LexTop: {{
@enduml
Added support for writing and running unit tests. One "test" unit test included in the PR, more to follow.

Also, added maven wrapper to make the builds more consistent across devs and systems.
```plantuml
@startuml 
skinparam rectangle {
  roundCorner<<App>> 25
  roundCorner<<BSS>> 25
	roundCorner<<OSS>> 25
}

actor 用户 as user
actor 审核员 as checker


rectangle " " <<App>> as App {
	(查看主题包相关内容) as (project_view)
	(复制场景) as (scene_copy)
	
	(scene_copy) .> (project_view) : extends
	user -> (project_view)
}

rectangle " " <<BSS>> as BSS {
	(DataSet管理) as (dataset)
	card 主题包管理 as project {
		(创建主题包) as (project_upload)
		(主题包审核) as (project_verify)
	}
	
	checker -> (dataset)
	user -> (project_upload)
	checker -> (project_verify)
	project .> (dataset) : extends
	(scene_copy) .> (project_upload): includes
}

@enduml
```

<img width="894" alt="WX20191219-154258@2x" src="https://user-images.githubusercontent.com/1890238/71154359-55408b00-2276-11ea-8323-c76b2d1e9bb8.png">


the connection lines look very strange... and  crowd together
Hi,

I'm trying to run plantuml on a pristine MacOS 10.15.2 and I'm facing this issue:
```
$ plantuml
Exception in thread "main" java.awt.HeadlessException
	at java.desktop/java.awt.GraphicsEnvironment.checkHeadless(GraphicsEnvironment.java:165)
	at java.desktop/java.awt.Window.<init>(Window.java:538)
	at java.desktop/java.awt.Frame.<init>(Frame.java:423)
	at java.desktop/javax.swing.JFrame.<init>(JFrame.java:224)
	at net.sourceforge.plantuml.swing.MainWindow2.<init>(MainWindow2.java:159)
	at net.sourceforge.plantuml.Run.main(Run.java:164)
```

I installed it using homebrew which installed `plantuml stable 1.2019.12`.
The java installed has been installed using homebrew too with `brew cask install java`:
```
$ java --version
openjdk 13.0.1 2019-10-15
OpenJDK Runtime Environment (build 13.0.1+9)
OpenJDK 64-Bit Server VM (build 13.0.1+9, mixed mode, sharing)
```

I tried other java versions but am always getting the same error.

Any obvious requirement regarding the java version to install?

Thanks