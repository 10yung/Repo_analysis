Here is my lines:
```
+------------+------+-----+-----+--------------------------------------------------------------------------------------------------------------------------------+
|     IP     | PORT | UID | PID |                                                              CMD                                                               |
+------------+------+-----+-----+--------------------------------------------------------------------------------------------------------------------------------+
| 127.0.0.53 |   53 | 101 | 758 | /lib/systemd/systemd-resolved                                                                                                   |
| 0.0.0.0    |   68 |   0 | 777 | /sbin/dhclient -1 -4 -v -pf /run/dhclient.eth0.pid -lf /var/lib/dhcp/dhclient.eth0.leases -I -df /var/lib/dhcp/dhclient6.eth0.leases eth0  |
+------------+------+-----+-----+--------------------------------------------------------------------------------------------------------------------------------+
```

My code:
```
...
tableString := strings.Builder{}
table := tablewriter.NewWriter(&tableString)
table.SetHeader([]string{"IP", "Port", "UID", "PID", "cmd"})
table.SetCaption(true, "IPv4 TCP listening ports")

...
table.Render()
return tableString.String(), nil
```

Seems like `tablewriter` cant handle long lines well

Needed to address https://github.com/cockroachdb/cockroach/issues/30856.

Prior to this patch, a table without a right border would print
trailing whitespaces upon rendering.

This makes me hard to copy-paste expected outputs in automated tests,
for example the Go `Example_` test mechanism.

This patch adds a new option, which can be configured with
`SetTrimWhiteSpaceAtEOL`.


Replaced 'ALIGN_LEFT' with 'tablewriter.ALIGN_LEFT'
Not much of an error . but I couldn't find documentation for table header formatting. One of my table headers is a path that is getting auto-capitalized. Would prefer optional formatting for table headers.
Users can use a c flag to use the title case instead of Uppercase for the header. **Addressing the issue "Option not to force using upper case" #139**
Table is incorrectly formatted when warning symbol is used ⚠️(U+26A0).  Other symbols such as ✅ (U+2705) are not affected. The problem didn't exist with
`github.com/mattn/go-runewidth` v0.0.3


```
package main

import (
	"os"

	"github.com/olekukonko/tablewriter"
)

func main() {
	table := tablewriter.NewWriter(os.Stdout)
	table.SetHeader([]string{"Test collumn", "Unicode"})
	table.Append([]string{"test", ""})
	table.Append([]string{"test", "⚠️"})
	table.Render()
}
```

go.mod

```
module table

go 1.12

require (
	github.com/mattn/go-runewidth v0.0.4 // indirect
	github.com/olekukonko/tablewriter v0.0.1
)
```

go.sum

```
github.com/mattn/go-runewidth v0.0.4 h1:2BvfKmzob6Bmd4YsL0zygOqfdFnK7GR4QL06Do4/p7Y=
github.com/mattn/go-runewidth v0.0.4/go.mod h1:LwmH8dsx7+W8Uxz3IHJYH5QSwggIsqBzpuz5H//U1FU=
github.com/olekukonko/tablewriter v0.0.1 h1:b3iUnf1v+ppJiOfNX4yxxqfWKMQPZR5yoh8urCTFX88=
github.com/olekukonko/tablewriter v0.0.1/go.mod h1:vsDQFd/mU46D+Z4whnwzcISnGGzXWMclvtLoiIKAKIo=
```

output:

```
+--------------+---------+
| TEST COLLUMN | UNICODE |
+--------------+---------+
| test         |         |
| test         | ⚠️      |
+--------------+---------+
```
Hello, Is it possible to use markdown link in the table. I have seen the example 5 but it look like it is more related to the `tablewriter.Border` object then Markdown. I would like to be able to do something like:
```
data := [][]string{
	[]string{"1/1/2014", "[test1](http://google.com)", "2233", "$10.98"},
	[]string{"1/1/2014", "[test2](http://google.com)", "2233", "$54.95"},
	[]string{"1/4/2014", "[test3](http://google.com)", "2233", "$51.00"},
	[]string{"1/4/2014", "[test4](http://google.com)", "2233", "$30.00"},
}

table := tablewriter.NewWriter(os.Stdout)
table.SetHeader([]string{"Date", "Description", "CV2", "Amount"})
table.SetBorders(tablewriter.Border{Left: true, Top: false, Right: true, Bottom: false})
table.SetCenterSeparator("|")
table.AppendBulk(data) // Add Bulk Data
table.Render()

```
output
```
|   DATE   |       DESCRIPTION        | CV2  | AMOUNT |
|----------|--------------------------|------|--------|
| 1/1/2014 | test1                    | 2233 | $10.98 |
| 1/1/2014 | test2                    | 2233 | $54.95 |
| 1/4/2014 | test3                    | 2233 | $51.00 |
| 1/4/2014 | test4                    | 2233 | $30.00 |
```


Is it possible?
Thanks
IS THERE AN OPTION NOT TO FORCE USING UPPER CASE IN HEADERS?
Hey all!

Would it be possible to create a release/tag with the current master commit?

Currently the latest release v0.0.1 does not contain the `go.mod` and `go.sum` files and that breaks the import for go module enabled projects.

Cheers!
I have added a new function, `ContinuousRender`, which takes a channel as input.
The function appends rows as it receives them from the channel. It then checks
the column widths to see if headers need to be redrawn. 

This may address #46. I have not added any tests yet because I would first like to get some feedback on my approach.

Here is a sample program that uses the new function:

```go
package main

import "github.com/jsanda/tablewriter"
import "os"
import "time"

func main() {
        data := [][]string{
                []string{"A", "The Good", "500"},
                []string{"B", "The Very very Bad Man", "288"},
                []string{"C", "The Ugly", "120"},
                []string{"D", "The Gopher", "800"},
                []string{"E", "The Hound", "800"},
                []string{"F", "A very, very long title", "800"},
                []string{"G", "A somehwat long title", "800"},
                []string{"H", "A short title", "800"},
        }
        rows := make(chan []string)
        //done := make(chan struct{})


        table := tablewriter.NewWriter(os.Stdout)
        table.SetHeader([]string{"Name", "Sign", "Rating"})
        table.SetBorders(tablewriter.Border{Left: true, Top: false, Right: true, Bottom: false})
        table.SetHeaderColor(
            tablewriter.Colors{tablewriter.FgBlueColor},
            tablewriter.Colors{tablewriter.FgBlueColor},
            tablewriter.Colors{tablewriter.FgRedColor})

        go func() {
                table.ContinuousRender(rows)
        }()

        for _, r := range data {
                rows <- r
                time.Sleep(700 * time.Millisecond)
        }
}
```

And the output looks like:

```
$ go run main.go
| NAME |   SIGN   | RATING |
+------+----------+--------+
| A    | The Good |    500 |
| NAME |         SIGN          | RATING |
+------+-----------------------+--------+
| B    | The Very very Bad Man |    288 |
| C    | The Ugly              |    120 |
| D    | The Gopher            |    800 |
| E    | The Hound             |    800 |
| NAME |          SIGN           | RATING |
+------+-------------------------+--------+
| F    | A very, very long title |    800 |
| G    | A somehwat long title   |    800 |
| H    | A short title           |    800 |
```