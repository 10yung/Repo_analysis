I'm using SCCM with MDT integration, added a 'run command line' task to run this script. Initially it was failing saying 'expected Then at line [whatever]'. I threw in  few Thens and it was happy, but now it fails saying.

D:\_SMSTaskSequence\WDPackage\scripts\Config-DisableWindowsStoreUpdates.wsf(45, 4) WshShell.RegDelete: Invalid root in registry key "HKEY_LOCAL_MACHINE\NewOS\Microsoft\Windows\CurrentVersion\WindowsStore\WindowsUpdate\AutoDownload".

It fails here: 

	If oEnvironment.Item("_SMSTSInWinPE") = "true" Then
		oShell.RegDelete "HKEY_LOCAL_MACHINE\NewOS\SOFTWARE\Microsoft\Windows\CurrentVersion\WindowsStore\WindowsUpdate\AutoDownload"  

I cannot work this out. I get the same thing if I try and run the script on my standard Win10 box, even if I manually create the key. 

Any ideas?
Replaced Visual C++2017 with Visual C++ 2019 as it is binary compatible with 2015 and 2017.
Included issue #19 fix from @baardhermansem to silently install 2013 and newer ones
Pull request https://github.com/DeploymentResearch/DRFiles/pull/21
Hi Johan

RE: Install-MicrosoftVisualC++x86x64.wsf

Is there a way to make this compatible with both MDT and SCCM - Or maybe an easy way to switch between the two via commenting?

x86 installs seem to be working, but the x64 installs are being completely ignored. The only changes I have made is the 2017 file name changes, as suggested in #11 
Using the Bunny's ImageFactory to build an 1803 image. I am calling Config-DisableWindowsStoreUpdates.wsf in the same manner as illustrated[ here 
](https://deploymentresearch.com/Research/Post/615/Fixing-why-Sysprep-fails-in-Windows-10-due-to-Windows-Store-updates) but registry changes do not stick. Indeed I can pause the TS in WinPE and make the changes manually. I can see the "c:\windows\system32\config\software" file's modified date is updated but if I mount the hive manually once again the registry values are not present from either the script or my manual changes. To be sure I also check again once in full Windows and they are not there. 

Does anybody find that Config-DisableWindowsStoreUpdates.wsf is working with 1803?
Hello gurus!

Just wanted to let you know that the script for installing VS needs a modification on below lines:

`sSetupFile2017x86 = oUtility.ScriptDir & "\Source\VS2017\mu_visual_cpp_redistributable_for_visual_studio_2017_version_15.3_x86_11100229.exe"
	sSetupFile2017x64 = oUtility.ScriptDir & "\Source\VS2017\mu_visual_cpp_redistributable_for_visual_studio_2017_version_15.3_x64_11100230.exe"
`




They should become:
`sSetupFile2017x86 = oUtility.ScriptDir & "\Source\VS2017\vc_redist.x86.exe"
sSetupFile2017x64 = oUtility.ScriptDir & "\Source\VS2017\vc_redist.x64.exe"`

Since that's their name now on the URL you specify in your script:
[https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads](url)

Scenario 1 (works):
When using the Download Package Content task in a task sequence, if you reference a package directly through the task sequence using this task, OSDDownloadDownloadPackages variable gets set, and CM finds and downloads the correct version of the package.

Scenario 2 (does not work):
When using the Download Packaget Content task in the task sequence, and you set OSDDownloadDownloadPackages variable through a this script during the task sequence, OSDDownloadDownloadPackages is set correctly, however SCCM does not find the correct version of the package.

This is causing issues with 1E Nomad, as it is trying to download the package stored in OSDDownloadDownloadPackages, version 0. instead of the correct version of the package.

Native CM seems to be able to figure this out, but it is not working for alternate downloaders.
![scenario1](https://user-images.githubusercontent.com/26821966/33681092-6898875e-da78-11e7-8e49-dfd933a5df60.png)
![scenario2](https://user-images.githubusercontent.com/26821966/33681096-6b3cad28-da78-11e7-91c1-303254aa80b2.png)



In the task sequence for DC01,does this script change the domain name in the Authorize DHCP step in the State Restore node?
Thanks agian for this.
#starting 192 row
oLogging.CreateEntry oUtility.ScriptName & ": About to install " & sSetupFile**2013**x86, LogTypeInfo
iRetVal = oUtility.RunWithHeartbeat("""" & sSetupFile**2015**x86 & """ " & sArguments)

Must be the same year, I think.
Looks like 2017 is missing from the script as per:
https://support.microsoft.com/en-us/help/2977003/the-latest-supported-visual-c-downloads