Hi,

I'm passing to the sanitizer some allowed tags.

`sanitizer.AllowedTags.Add("Date");
sanitizer.AllowedTags.Add("Time");
`

After applying the sanitizer on self closed tags I have these results:

`var content = @"<Date/><Time/>";`

Default Format:
`<date><time></time></date>`

XhtmlFormat:
`<date><time /></date>`

This was the format I was expecting:
`<Date/><Time/>`
or
`<Date></Date><Time></Time>`
I tried the  same string in both online tool as well as in the .net fiddle both seems to give a different result

html string - "<img alt=\"a\" src=\"a\" title=\"<iframe/foo=&quot><script>alert(document.domain)</script></iframe>\">"

online tool output - "<img alt="\&quot;a\&quot;" src="\&quot;a\&quot;" title="\&quot;&lt;iframe/foo=&quot;">\"&gt;"
![image](https://user-images.githubusercontent.com/56097787/66090320-affbfd80-e537-11e9-9a2e-29f414b60bae.png)

fiddler output - <img alt="a" src="a" title="&lt;iframe/foo=&quot;&gt;&lt;script&gt;alert(document.domain)&lt;/script&gt;&lt;/iframe&gt;">
![image](https://user-images.githubusercontent.com/56097787/66090327-b8543880-e537-11e9-8acc-18be155ae1c9.png)

using the dll in code is also not sanitizing the HTML like the onlinetool, need some info what should be done in code to get an output as onlinetool
When sanitizing an HTML string that contains an "&amp;amp;" this is, as expected unchanged.
However when the same thing is done for "&amp;atilde;" the returned value is Ã£.

This is, from what I can tell incorrect behavior.

I haven't extensively tested this but it also seems to occur for "&amp;deg;" elements and probably for many more items.

![image](https://user-images.githubusercontent.com/18417334/65952175-c45dce80-e441-11e9-9861-79d1b3656528.png)
i don't want to filter  my uediter content !but   after  used htnlsantizer ,  ifram tag block by that
I've seen people discussing something similar in other issue posts, but not exactly.

My question is whether it is safe, particularly in regard to XSS, to allow data URI's within img tags?  

I believe I'm going to allow img's from http and https.  Are img's from a Data URI any less safe than img's from http/https?

How would I go about enabling this behavior of data URI's in img tags?
Not sure why this causes a connection reset one the demo page: 

&username=%3Cscript%3Ealert(%22XSSmattINFOSEC%22)%3C%2Fscript%3E

http://xss.ganss.org/
For `iframe`, img and others tags with URL to make allowed list of domens.
For example I need to allow only `iframes` pointed to youtube and block others.

Or to allow images only from MyDomain.
https://github.com/AngleSharp/AngleSharp/releases/tag/v0.10.0

Please keep in mind that the old .NET 4 and Silverlight targets are dropped. AngleSharp now targets .NET Standard 2.0.

Also you might need to install AngleSharp.Css package.

Migration guide: https://github.com/AngleSharp/AngleSharp/blob/master/doc/Migration.md
hi.

i think just found the following issue in combination with a link and summernote (visit https://summernote.org/ if you don't know what summernote is).

the href in question is:
`http://testsite.test/<script>alert("TEST");</script>`

when you pass that href into summernote by clicking "link" in the toolbar, summernote creates the following html-element:
`<a href="http://testsite.test/&lt;script&gt;alert(&quot;TEST&quot;);&lt;/script&gt;" target="_blank">evil link</a>
`
after POSTing summernote's content to the server it seems like that link doesn't get sanitized by the `Ganss.XSS.HtmlSanitizer.Sanitize`-method.

thanks for HtmlSanitizer btw. it's a great tool! love it! ðŸ˜º 
I'am a bit sad that I have to open this issue (see also #34)

AngleSharp was promising, but:

- It's still not stable
- Too many breaking changes IMO,
- Too many issues related to AngleSharp: https://github.com/mganss/HtmlSanitizer/issues?utf8=%E2%9C%93&q=is%3Aissue+AngleSharp+in%3Atitle+
- the development of AngleSharp stalled. Even critical fixes took ages.

So, I propose to:

- replace AngleSharp with e.g. Html Agility Pack - http://html-agility-pack.net/

     - please note they don't follow semver: https://github.com/zzzprojects/html-agility-pack/issues/74
- and/or make the current implementation Parser independent (so we could inject parsers like HAP or AngleSharp)

Just let me know what you think. 