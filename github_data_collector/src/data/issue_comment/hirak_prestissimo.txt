PHP 5.4 and 5.5 were failing as default Ubuntu distribution was upgraded to xenial.
Before this change - in case of a failure - output was looking like this:
```bash
Updating dependencies (including require-dev)
    Finished: success: 0, skipped: 0, failure: 2, total: 2
Package operations: ...
```
After this change it would look like this:
```bash
Updating dependencies (including require-dev)
    60: SSL certificate problem: unable to get local issuer certificate:        https://codeload.github.com/Ocramius/PackageVersions/legacy.zip/1d32342b8c1eb27353c8887c366147b4c2da673c
    60: SSL certificate problem: unable to get local issuer certificate:        https://codeload.github.com/symfony/event-dispatcher/legacy.zip/b3c3068a72623287550fe20b84a2b01dcba2686f
    Finished: success: 0, skipped: 0, failure: 2, total: 2
Package operations: ...
```


**System information:**
- PHP 7.1, 7.2, 7.3 (tested all three)
- composer 1.9.1
- MacOS Mojave 10.14.5

**How to reproduce:**
- Install PHP 7.1, 7.2 or 7.3 (optionally via Homebrew: `brew tap henkrehorst/homebrew-php && brew install valet-php@7.1`).
- Install composer 1.9.1 (optionally via Homebrew: `brew install composer`)
- Install prestissimo through `composer global require hirak/prestissimo`
- Go to a composer project with multiple modules and run `composer install`.

*Expected result*
1. Parallel downloading of packages for modules.
2. Installing modules through pre-downloaded packages.
e.g: `Installing eloquent/enumeration (5.1.1): Loading from cache`

*Actual result*
1. Individual module download and install.
e.g: `Installing eloquent/enumeration (5.1.1): Downloading (75%)`
Bumps [mixin-deep](https://github.com/jonschlinkert/mixin-deep) from 1.3.1 to 1.3.2.
<details>
<summary>Commits</summary>

- [`754f0c2`](https://github.com/jonschlinkert/mixin-deep/commit/754f0c20e1bc13ea5a21a64fbc7d6ba5f7b359b9) 1.3.2
- [`90ee1fa`](https://github.com/jonschlinkert/mixin-deep/commit/90ee1fab375fccfd9b926df718243339b4976d50) ensure keys are valid when mixing in values
- See full diff in [compare view](https://github.com/jonschlinkert/mixin-deep/compare/1.3.1...1.3.2)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [doowb](https://www.npmjs.com/~doowb), a new releaser for mixin-deep since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=mixin-deep&package-manager=npm_and_yarn&previous-version=1.3.1&new-version=1.3.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hirak/prestissimo/network/alerts).

</details>
Bumps [lodash](https://github.com/lodash/lodash) from 4.17.11 to 4.17.15.
<details>
<summary>Commits</summary>

- [`ddfd9b1`](https://github.com/lodash/lodash/commit/ddfd9b11a0126db2302cb70ec9973b66baec0975) Bump to v4.17.15.
- [`b185fce`](https://github.com/lodash/lodash/commit/b185fcee26b2133bd071f4aaca14b455c2ed1008) Rebuild lodash and docs.
- [`be87d30`](https://github.com/lodash/lodash/commit/be87d303941222b97c482755afc0f4a77ce46c30) Bump to v4.17.14.
- [`a6fe6b1`](https://github.com/lodash/lodash/commit/a6fe6b1e174fd02b5e60eb2664405f4c1262c300) Rebuild lodash and docs.
- [`e371828`](https://github.com/lodash/lodash/commit/e37182845f16715a0d1c391c8662d83c55609cee) Bump to v4.17.13.
- [`357e899`](https://github.com/lodash/lodash/commit/357e899e685872b4af5403ecc4b2a928f961ae63) Rebuild lodash and docs.
- [`fd9a062`](https://github.com/lodash/lodash/commit/fd9a062d57646450b61f74029315abd4cc834b08) Bump to v4.17.12.
- [`e77d681`](https://github.com/lodash/lodash/commit/e77d68121ff00ba86b53eed5893d35adfe94c9dd) Rebuild lodash and docs.
- [`629d186`](https://github.com/lodash/lodash/commit/629d1865793182cd967196716f4beff223aa4a91) Update OpenJS references.
- [`2406eac`](https://github.com/lodash/lodash/commit/2406eac542b2a1282be8d812a6d8a45433ade80a) Fix minified build.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/4.17.11...4.17.15)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.11&new-version=4.17.15)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hirak/prestissimo/network/alerts).

</details>
Is there a possibility to install dependencies parallel from vcs like git? I have like 10+ dependencies and they are definitely not installed async/parallel and it is quite slow.
This may or may not be an actual issue. But composer 1.9 now comes with a `--no-cache` global option which I tried to use for installing prestissimo in docker so that I don't have to call `composer clear-cache` afterwards. I understand the 2 are different but I thought perhaps prestissimo won't do anything yet when it's first installed (excuse my lack of understanding of how composer plugins work).

`composer global require --no-cache hirak/prestissimo -v` gives

```
/app # composer global require --no-cache hirak/prestissimo -v                                                                                                                                                                        Changed current directory to /tmp
Using version ^0.3.9 for hirak/prestissimo
./composer.json has been created
Loading composer repositories with package information
Updating dependencies (including require-dev)
Dependency resolution completed in 0.000 seconds
Analyzed 75 packages to resolve dependencies
Analyzed 46 rules to resolve dependencies
Package operations: 1 install, 0 updates, 0 removals                                                                                                                                                                                  Installs: hirak/prestissimo:0.3.9
  - Installing hirak/prestissimo (0.3.9): Downloading (100%)
 Extracting archivePlugin installation failed, rolling back
  - Removing hirak/prestissimo (0.3.9)

Installation failed, deleting ./composer.json.                                                                                                                                                                                        

  [ErrorException]
  mkdir(): Not a directory  

Exception trace:                                                                                                                                                                                                                       () at /tmp/vendor/hirak/prestissimo/src/CopyRequest.php:103
Composer\Util\ErrorHandler::handle() at n/a:n/a                                                                                                                                                                                       mkdir() at /tmp/vendor/hirak/prestissimo/src/CopyRequest.php:103
Hirak\Prestissimo\CopyRequest->createDir() at /tmp/vendor/hirak/prestissimo/src/CopyRequest.php:89
Hirak\Prestissimo\CopyRequest->setDestination() at /tmp/vendor/hirak/prestissimo/src/CopyRequest.php:39
Hirak\Prestissimo\CopyRequest->__construct() at /tmp/vendor/hirak/prestissimo/src/ParallelizedComposerRepository.php:26
Hirak\Prestissimo\ParallelizedComposerRepository->preloadProviderListings() at /tmp/vendor/hirak/prestissimo/src/ParallelizedComposerRepository.php:39
Hirak\Prestissimo\ParallelizedComposerRepository->prefetch() at /tmp/vendor/hirak/prestissimo/src/Plugin.php:150
Hirak\Prestissimo\Plugin->prefetchComposerRepositories() at /tmp/vendor/hirak/prestissimo/src/Plugin.php:82
Hirak\Prestissimo\Plugin->activate() at phar:///usr/bin/composer/src/Composer/Plugin/PluginManager.php:237
Composer\Plugin\PluginManager->addPlugin() at phar:///usr/bin/composer/src/Composer/Plugin/PluginManager.php:206
Composer\Plugin\PluginManager->registerPackage() at phar:///usr/bin/composer/src/Composer/Installer/PluginInstaller.php:62
Composer\Installer\PluginInstaller->install() at phar:///usr/bin/composer/src/Composer/Installer/InstallationManager.php:173
Composer\Installer\InstallationManager->install() at phar:///usr/bin/composer/src/Composer/Installer/InstallationManager.php:160
Composer\Installer\InstallationManager->execute() at phar:///usr/bin/composer/src/Composer/Installer.php:597
Composer\Installer->doInstall() at phar:///usr/bin/composer/src/Composer/Installer.php:229
Composer\Installer->run() at phar:///usr/bin/composer/src/Composer/Command/RequireCommand.php:218
Composer\Command\RequireCommand->doUpdate() at phar:///usr/bin/composer/src/Composer/Command/RequireCommand.php:175
Composer\Command\RequireCommand->execute() at phar:///usr/bin/composer/vendor/symfony/console/Command/Command.php:245
Symfony\Component\Console\Command\Command->run() at phar:///usr/bin/composer/vendor/symfony/console/Application.php:835
Symfony\Component\Console\Application->doRunCommand() at phar:///usr/bin/composer/vendor/symfony/console/Application.php:185
Symfony\Component\Console\Application->doRun() at phar:///usr/bin/composer/src/Composer/Console/Application.php:267
Composer\Console\Application->doRun() at phar:///usr/bin/composer/vendor/symfony/console/Application.php:117
Symfony\Component\Console\Application->run() at phar:///usr/bin/composer/src/Composer/Console/Application.php:106
Composer\Console\Application->run() at phar:///usr/bin/composer/src/Composer/Command/GlobalCommand.php:101
Composer\Command\GlobalCommand->run() at phar:///usr/bin/composer/vendor/symfony/console/Application.php:835
Symfony\Component\Console\Application->doRunCommand() at phar:///usr/bin/composer/vendor/symfony/console/Application.php:185
Symfony\Component\Console\Application->doRun() at phar:///usr/bin/composer/src/Composer/Console/Application.php:267
Composer\Console\Application->doRun() at phar:///usr/bin/composer/vendor/symfony/console/Application.php:117
Symfony\Component\Console\Application->run() at phar:///usr/bin/composer/src/Composer/Console/Application.php:106
Composer\Console\Application->run() at phar:///usr/bin/composer/bin/composer:61
require() at /usr/bin/composer:24
```

Works fine without the `--no-cache` option. Then trying to install any package with the `--no-cache` option produces the same error which kind of makes sense as prestissimo relies on a cache directory. I guess a more friendly behavior is to fall back to normal composer if cache is disabled. But it's not a biggie.

The question is whether the cache directory is a hard requirement for installing prestissimo for the first time?
Disables the plugin when help is requested via the help command, or the help option.