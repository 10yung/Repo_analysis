Login Succeeded
root@jose-HP-ProBook-440-G5:~/Documentos/EDP/jpinto/testes# docker pull container-registry.oracle.com/middleware/weblogic:12.2.1.3
Error response from daemon: pull access denied for container-registry.oracle.com/middleware/weblogic, repository does not exist or may require 'docker login': denied: requested access to the resource is denied

Hello, 
First off thanks for the great image 
I'm having a couple issue some which i could solve but wanted to report and some  I haven't been able to solve yet.

The container is running on Windows.
First Issue I encountered was once I Stopped the container starting was implossible.
Once I found your website https://geraldonit.com/2017/08/21/creating-an-oracle-database-docker-image/ I noticed the docker stop -t command this wasn't included in the readme but solved it for me.

The other issue is I cannot connect using sqlplus / as sysdba using it results in password request
docker exec -it 1c bash
sqlplus / as sysdba
SQL*Plus: Release 19.0.0.0.0 - Production on Thu Jan 16 07:32:22 2020
Version 19.3.0.0.0

Copyright (c) 1982, 2019, Oracle.  All rights reserved.

ERROR:
ORA-12162: TNS:net service name is incorrectly specified


Enter user-name:

Now this is a small issue as I can connect using 
[oracle@1c06025ba3ab ~]$ $ORACLE_HOME/bin/sqlplus -s system/password@localhost:1521/ORCLCDB as sysdba

select 1 from dual;

         1
----------
         1

without **$ORACLE_HOME/bin/sqlplus -s**  I cannot connect.


My final problem is I cannot seem to be able to change the MAX_STRING_SIZE
Steps taken:
ALTER SESSION SET CONTAINER=CDB$ROOT;
ALTER SYSTEM SET max_string_size=extended SCOPE=SPFILE;
shutdown normal;

Once the DB is shutdown it get the message that SQL PLus is no longer connected. 
Trying to reconnect is impossible:
ORA-12162: TNS:net service name is incorrectly specified

Help would really be appreciated,what am I doing wrong?

Relates to issue #1376 - 
1. If unable to test for supported Docker version, test for supported Podman version
2. If errors are encountered at any stage, exit.

For background of podman/buildah see https://docs.oracle.com/en/operating-systems/oracle-linux/8/relnotes8.0/ol8-features-container.html 

Buildah libs in Podman have had multi-stage build support for some time but improvements were made in 1.6.0 and it's as good a place to start as any. The first podman RPM shipped with OL8 included buildah libs 1.9.0 so it could be raised to that version.

I may have over-complicated it, let me know your thoughts.



Hi, I successfully built the docker image for OracleDatabase 19.3 se2.

The issue is when I start it. I've tried this on 2 different machines (on a Mac and one a Linux system) and in both cases it takes more than 35 minutes to start! 

I started it with `docker run -p 1521:1521 -p 5500:5500 -e ORACLE_SID=xwiki -e ORACLE_PDB=xwikipdb -e ORACLE_PWD=xwiki  oracle/database:19.3.0-se2` (note: I also tried by mapping a local directory for the DB files with the same slow result).

The part that is extremely slow is this part:

```
...
Prepare for db operation
8% complete
Copying database files
31% complete
Creating and starting Oracle instance
32% complete
36% complete
40% complete
43% complete
46% complete
Completing Database Creation
51% complete
54% complete
Creating Pluggable Databases
58% complete
77% complete
Executing Post Configuration Actions
100% complete
...
```

We used to use a Oracle 11g docker image execute test XWiki (https://xwiki.org) on it to validate that we support the Oracle DB and it was working ok (about 2mn to start it). We'd like to validate against a more recent version, which is why I've been trying using version 19.3 for the past 2 days.

However with a startup time of 35+ minutes it's impossible for us to use it for our tests. We start and stop the container hundreds of times across all our test suite (hundreds if not thousands of tests across different modules).

So some questions:
1) Is that startup expected? Is that what everyone is experiencing? I should note that the machines on which I tried it are quite large and beefy machines with lots of CPU and RAM (and I didn't put any resource limits).
2) Is there something that can be done to speed it up so that it starts in about 2-3 minutes?

Thanks a lot
-Vincent
XWiki open source commmitter


Verifying OS Kernel Parameter: semopm ...FAILED
racnode1: PRVG-1205 : OS kernel parameter "semopm" does not have expected
          current value on node "racnode1" [Expected = "100" ; Current = "32";
          Configured = "100"].

Verifying OS Kernel Parameter: aio-max-nr ...FAILED
racnode1: PRVG-1205 : OS kernel parameter "aio-max-nr" does not have expected
          current value on node "racnode1" [Expected = "1048576" ; Current =
          "65536"; Configured = "1048576"].

Verifying Device Checks for ASM ...FAILED
  Verifying ASM device sharedness check ...FAILED
    Verifying Shared Storage Accessibility:/dev/asm_disk2,/dev/asm_disk1
    ...FAILED
    racnode1: 
racnode1: PRVF-7009 : Could not get the type of storage
    racnode1: 
racnode1: PRVF-7009 : Could not get the type of storage


Verifying resolv.conf Integrity ...FAILED
racnode1: PRVG-10048 : Name "racnode1" was not resolved to an address of the
          specified type by name servers o"127.0.0.11".
racnode1: Check for integrity of file "/etc/resolv.conf" failed


  Verifying (Linux) resolv.conf Integrity ...FAILED
  racnode1: PRVG-10048 : Name "racnode1" was not resolved to an address of the
            specified type by name servers o"127.0.0.11".

Verifying DNS/NIS name service ...FAILED
PRVG-1101 : SCAN name "racnode-scan" failed to resolve

It seems silly to say this... but a docker image that requires 10 minutes to start is just plain ridicules. And unusable. Images of MySQL, Aurora, Postgres, etc. all start and are available in seconds.

At the heart of this is the fact that you think it's ok to create/configure the database during "docker run" instead of "docker build". The database should be created and configured during "docker build". I don't understand why you believe this is not an option.

Just use dynamic listener registration instead of a listener.ora file, and the dynamic docker hostname should be detected and used at startup time.
Has it ever been considered to support Oracle read-only home in combination with Docker read only root fs?

- Build the docker image and set ${ORACLE_HOME}/bin/roohctl -enable
- Define tmpfs, bind mounts or volumes for the usual suspects e.g. /var, /tmp, $ORACLE_BASE/homes, $ORACLE_BASE/dbs, $ORACLE_BASE/audit, $ORACLE_BASE/cfgtoollogs
- alternatively adjust the move script to include the dbs, audit and homes folder

Regards
Stefan
After opening [this issue](https://github.com/oracle/docker-images/issues/1459), I have managed to automate anyhow the creation of users and tables during the container startup.

**I understand that my action is not contemplated by the creators of image  database-enterprise:12.2.0.1-slim and I will accept that you do not take in charge this issue.**

The new users are callable if I access the container with `docker exec -it XXXXXXXX bash` and invoke sqlplus from the command line, giving their username and password. The db on the container is working perfectly (as far as I can see).

Things are different starting sqldeveloper from my PC and connecting the db in the container: I cannot manage to create new connections, as the couples username/password that work fine in sqlplus cause an `ORA-01017: invalid username/password; logon denied`. User SYSTEM continues to work flawlessly.

I have created [this question on Stack Overflow](https://stackoverflow.com/questions/59377163/oracle-sqldeveloper-cannot-create-connection-for-user-created-from-setup-script) specifying all the details of my actions, and I would appreciate if you could comment on that.



Test result @ http://wls-jenkins.us.oracle.com/job/weblogic-kubernetes-operator-javatest/3697/
using https://github.com/oracle/weblogic-kubernetes-operator/tree/12-12-2019_develop_OWLS-76552 and https://github.com/qvdang/docker-images