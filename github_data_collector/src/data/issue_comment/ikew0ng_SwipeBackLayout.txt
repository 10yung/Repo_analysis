版本是：
me.imid.swipebacklayout.lib:library:1.3.0
退出的动画：
    @Override
    public void finish() {
        super.finish();
       overridePendingTransition(R.anim.tran_enter_out, R.anim.tran_exit_out);
    }
R.anim.tran_enter_out代码：
<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
    <translate
        android:duration="460"
        android:fromXDelta="-100%p"
        android:interpolator="@android:anim/accelerate_decelerate_interpolator"
        android:toXDelta="0" />
</set>
R.anim.tran_exit_out代码：
<?xml version="1.0" encoding="utf-8"?>
<set xmlns:android="http://schemas.android.com/apk/res/android">
    <translate
        android:duration="460"
        android:fromXDelta="0"
        android:interpolator="@android:anim/accelerate_decelerate_interpolator"
        android:toXDelta="100%p" />
</set>
如果触发侧滑返回（从左边向右轻微拖动，然后再取消）只有R.anim.tran_exit_out的代码块会被执行到，R.anim.tran_enter_out不会执行，如果不触发侧滑返回，则两个都会执行到
测试环境：
oppoR15真机,模拟器都会必现
开发中切换分支报过，但是重新编译就好了，这次线上直接报了，Caused by: java.lang.ClassCastException: android.support.v7.widget.AppCompatTextView cannot be cast to me.imid.swipebacklayout.lib.SwipeBackLayout
I hope it is useful.
APP点击home键放置后台，点击app重启的时候mContentView为null，导致
java.lang.NullPointerException: Attempt to invoke virtual method 'int android.view.View.getWidth()' on a null object reference

麻烦尽快处理

public void scrollToFinishActivity() {
        final int childWidth = mContentView.getWidth();
        final int childHeight = mContentView.getHeight();

        int left = 0, top = 0;
        if ((mEdgeFlag & EDGE_LEFT) != 0) {
            left = childWidth + mShadowLeft.getIntrinsicWidth() + OVERSCROLL_DISTANCE;
            mTrackingEdge = EDGE_LEFT;
        } else if ((mEdgeFlag & EDGE_RIGHT) != 0) {
            left = -childWidth - mShadowRight.getIntrinsicWidth() - OVERSCROLL_DISTANCE;
            mTrackingEdge = EDGE_RIGHT;
        } else if ((mEdgeFlag & EDGE_BOTTOM) != 0) {
            top = -childHeight - mShadowBottom.getIntrinsicHeight() - OVERSCROLL_DISTANCE;
            mTrackingEdge = EDGE_BOTTOM;
        }

        mDragHelper.smoothSlideViewTo(mContentView, left, top);
        invalidate();
    }

ViewDragHelper中的getEdgeTouched方法希望能改进，
这个方法会导致加大滑动区域后其他方向的判定距离也会变大，从而导致识别出来的滑动方向和设置的滑动方向冲突，导致很大部分区域无法滑动。
建议把setEdgeSize设置成四个参数，分为上下左右
快速滑动走的是finish，而慢速滑动到一半触发的事件可以通过onScrollOverThreshold设置，我想让快速滑动的时候也和onScrollOverThreshold中设置的行为一致，怎么做？
类似于今日头条小视频，位于第一条才退出。
java.lang.ArrayIndexOutOfBoundsException: length=1; index=-1
	at me.imid.swipebacklayout.lib.ViewDragHelper.processTouchEvent(ViewDragHelper.java:1228)
	at me.imid.swipebacklayout.lib.SwipeBackLayout.onTouchEvent(SwipeBackLayout.java:378)
	at android.view.View.dispatchTouchEvent(View.java:11916)
	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2982)
	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2656)
	at android.view.ViewGroup.dispatchTransformedTouchEvent(ViewGroup.java:2988)
	at android.view.ViewGroup.dispatchTouchEvent(ViewGroup.java:2670)
	at com.android.internal.policy.DecorView.superDispatchTouchEvent(DecorView.java:531)
	at com.android.internal.policy.PhoneWindow.superDispatchTouchEvent(PhoneWindow.java:1875)
	at android.app.Activity.dispatchTouchEvent(Activity.java:3469)
	at android.support.v7.view.WindowCallbackWrapper.dispatchTouchEvent(WindowCallbackWrapper.java:68)
	at android.support.v7.view.WindowCallbackWrapper.dispatchTouchEvent(WindowCallbackWrapper.java:68)
	at com.android.internal.policy.DecorView.dispatchTouchEvent(DecorView.java:481)
	at android.view.View.dispatchPointerEvent(View.java:12155)
	at android.view.ViewRootImpl$ViewPostImeInputStage.processPointerEvent(ViewRootImpl.java:5361)
	at android.view.ViewRootImpl$ViewPostImeInputStage.onProcess(ViewRootImpl.java:5113)
	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4590)
	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4650)
	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4609)
	at android.view.ViewRootImpl$AsyncInputStage.forward(ViewRootImpl.java:4762)
	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4617)
	at android.view.ViewRootImpl$AsyncInputStage.apply(ViewRootImpl.java:4819)
	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4590)
	at android.view.ViewRootImpl$InputStage.onDeliverToNext(ViewRootImpl.java:4650)
	at android.view.ViewRootImpl$InputStage.forward(ViewRootImpl.java:4609)
	at android.view.ViewRootImpl$InputStage.apply(ViewRootImpl.java:4617)
	at android.view.ViewRootImpl$InputStage.deliver(ViewRootImpl.java:4590)
	at android.view.ViewRootImpl.deliverInputEvent(ViewRootImpl.java:7280)
	at android.view.ViewRootImpl.doProcessInputEvents(ViewRootImpl.java:7254)
	at android.view.ViewRootImpl.enqueueInputEvent(ViewRootImpl.java:7215)
	at android.view.ViewRootImpl$WindowInputEventReceiver.onInputEvent(ViewRootImpl.java:7383)
	at android.view.InputEventReceiver.dispatchInputEvent(InputEventReceiver.java:186)
	at android.view.InputEventReceiver.nativeConsumeBatchedInputEvents(Native Method)
	at android.view.InputEventReceiver.consumeBatchedInputEvents(InputEventReceiver.java:177)
	at android.view.ViewRootImpl.doConsumeBatchedInput(ViewRootImpl.java:7354)
	at android.view.ViewRootImpl$ConsumeBatchedInputRunnable.run(ViewRootImpl.java:7406)
	at android.view.Choreographer$CallbackRecord.run(Choreographer.java:915)
	at android.view.Choreographer.doCallbacks(Choreographer.java:727)
	at android.view.Choreographer.doFrame(Choreographer.java:656)
	at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:901)
	at android.os.Handler.handleCallback(Handler.java:790)
	at android.os.Handler.dispatchMessage(Handler.java:99)
	at android.os.Looper.loop(Looper.java:197)
	at android.app.ActivityThread.main(ActivityThread.java:7022)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:515)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:837)
哈哈哈哈哈哈哈哈哈哈或或或或或或或或