Mostly all functions use 16 bits parameters for values lower than a byte. Why? Highest screen dimension is 128.  
I tried many libs else, but always get noise with nothing 
i dont know why, i tried 4.7k Ohm pull up too but still be

![image](https://user-images.githubusercontent.com/33972583/69909104-3cd41200-1428-11ea-8da4-10187b92f719.png)

Thank you for nice library
I would like to make a running text string (I change the X coordinate in the loop)
but I noticed limit of length text
the text breaks off and starts to be displayed again first on top of other characters
https://yadi.sk/i/w-r8WEAplZ0CRQ
video 64Mb:
https://yadi.sk/i/TEdCnxlTSnkVGg
How I can change limit of length string line for scroll running text ?
p.s. 
I need a string of 100 characters, but right now about 30 characters are correctly displayed, which corresponds to about 256 pixels or 2 screen widths
Add possibility to use this library as component in ESP-IDF.
OLEDDisplay.h has been modified so that all hardware-dependent functions are virtual.  Nonstandard geometry is supported using existing GEOMETRY_RAWMODE.

New files:
PCD8544Spi.h - implements Nokia 5110 display using SPI
WeatherStationDemoWiFiManager.ino
WeatherStationFonts.h
WeatherStationImages.h - these 3 files, taken from the WeatherStation library, have been modified to support PCD8544Spi in addition to the original OLED display types.

None of the new files are required, except as examples of new functionality.

Hello, I'm using this library with my ESP32.

I have used SSD1306 Chip OLED display.
It worked well.

But, When i changed my Display to SH1106, I noticed this library doesn't have autoinit function. So i add copy and paste that functions from SSD1306.

It worked well.
Can i add that function to your library?

this is the Content of SH1106Wire.h


[SH1106Wire.zip](https://github.com/ThingPulse/esp8266-oled-ssd1306/files/3782571/SH1106Wire.zip)

Would anyone care for this? I added this into my own project and am willing to submit a PR back upstream if this is something you guys would like. It requires a little bit of hackery, so we would probably need to work together to find an optimal solution.

Let me know if you're interested and I'll take the time to push something up.
You have done a marvelous job of factoring the UI and display functionalities and I am enjoying using your library.  However, I did notice that by making just a few additional members of OLEDDisplay virtual, it becomes possible to support other displays with different interfaces and geometries.  I have done this on a fork of your project, using the common PCD8544 SPI display as a test case.  I have also modified one of the examples from your Weather Station library to dynamically adjust its output at runtime based on the display geometry.

If you would like to incorporate my changes, you are welcome to do so.  The only library files I have changed are OLEDDisplay.cpp, OLEDDisplay.h and a new file PCD8544Spi.h, which implements the new display type.  The new example is WeatherStationDemoWiFiManager.

My fork can be found at https://github.com/bratoff/esp8266-oled-ssd1306

This isn't an issue as much as a suggested change to the sample code. You have an example of using two different displays with the same I2C address on a single esp8266 but the sample is showing using 4 separate pins (and the esp8266 doesn't have as many GPIO pins as people would like.)

    SSD1306Wire  display(0x3c, D3, D5);
    SSD1306Wire  display2(0x3c, D1, D2);

 But a quick test shows you can actually do it with three pins:

    SSD1306Wire  display(0x3c, D4, D3);
    SSD1306Wire  display2(0x3c, D2, D3);

That setup is working great on a NodeMCU v1.0 board and saved one pin (the project I'm working on was starting to run short on usable GPIO's and I didn't want to start grabbing the TX/RX pins.) Sharing the SDA and using separate SCL pins also works fine. So you may want to show both ways in the example code.
I am using the [128x64 I2C display](https://www.aliexpress.com/item/32896971385.html?spm=2114.search0302.3.1.25b24f77jVKUon&ws_ab_test=searchweb0_0,searchweb201602_0,searchweb201603_0,ppcSwitch_0&algo_pvid=02039d65-9ec5-4f3b-8cf6-f60da2d9e525&algo_expid=02039d65-9ec5-4f3b-8cf6-f60da2d9e525-0) with ThingPulse esp8266-oled-ssd1306 library.

When I display some text or image and then power off the esp32, and then power it on again ( say even after a few seconds ), for a short moment the OLED still displays the old text/image. I am immediately issuing a clear() command after the init() but still the old text/image is VERY noticeable for a short amount of time. Is there any solution to this?

I tried doing a displayOff() immediately after init() and then did a clear() and then displayOn() but that doesn't help either.

This is not a big problem but it would be great if  I could prevent such behavior.