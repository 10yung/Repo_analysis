There have been a few requests to increase the amount of data the Package Phobia is tracking.

- #124 add file count and directory count
- #442 add publish date
- #141 show badge on every cnpm package

Google Analytics shows the current monthly unique users is about 2000 but I suspect this actually much higher considering ad blockers will prevent GA from collecting stats and many developers use ad blockers.

ZEIT currently sponsors the compute but I pay for the database out of pocket (about $85/year). The next tier up with redislabs would be about $170/year.

I would be willing to switch to a different database if a DBaaS wanted to sponsor this project. Otherwise, I will probably apply for the GitHub Sponsors program.

Put a üëç if you would be willing to donate to this project so I can see if this upgrade is feasible.
<img width="335" alt="Zrzut ekranu 2019-11-13 o 21 12 27" src="https://user-images.githubusercontent.com/28870390/68801120-b4015c00-065b-11ea-9684-ea6da527d41b.png">

Details tag could be replaced by component with `position: absolute` and show/hide toggle button
<img width="813" alt="Zrzut ekranu 2019-11-13 o 21 13 01" src="https://user-images.githubusercontent.com/28870390/68800864-27ef3480-065b-11ea-81ff-d32e96eb857e.png">

Labels could appear cropped (e.g. with `text-overflow: ellipsis`) and the full name would appear when you hover over the chart


It seems that currently the results page title, description and all tags are the same as the index page.

It would help if title and description included the scanned package's info
This should allow us to make further optimizations (autoprefixer, minification etc).

Also, we could try moving the results CSS to a separate file so that it's cached, and keep the index page CSS inlined.

Just thinking out loud BTW :)

Another gain will be that we'll have one place to handle the CSS (minus the bars height/width and any other inline styles that cannot be moved of course)
https://help.github.com/en/articles/configuring-npm-for-use-with-github-package-registry

### Proposed look

![image](https://user-images.githubusercontent.com/36894700/65254352-6f928d80-dafc-11e9-9044-c3d835cb33b7.png)

### How to switch?

I suggest two new subdomains:

- npm.packagephobia.now.sh - for the NPM registry
- github.packagephobia.now.sh - for the GitHub registry

packagephobia.now.sh would work the same as npm.packagephobia.now.sh

#### Another solution:

`https://packagephobia.now.sh/result?p=got@9.6.0`
‚¨áÔ∏è 
`https://packagephobia.now.sh/result?package=got@9.6.0&registry=npm`
The node foundation is setting up a [package maintenance team](https://github.com/nodejs/package-maintenance) and we would like to have a point of contact with the package phobia team. 

The node package maintenance team has been tasked with writing the set of rules via which a verified team can step into and assist critical node packages if maintainers request help. 

We are thinking of incorporating the package phobia data into our procedures and would like a point of contact to talk further about it.
scripts["perinstall"] in packages.json could define a command to execute before installing. It will cause a RCE.
Today I noticed some slowness and some intermittent connection issues.

I thought maybe zeit was down but it turns out, the server load has increased quite a bit.

A lot of that is coming from Chinese mirrors.

## npm.taobao.org

![image](https://user-images.githubusercontent.com/229881/46153197-afec6200-c240-11e8-9227-32a6ac97581a.png)

## cnpmjs.org

![image](https://user-images.githubusercontent.com/229881/46153246-bda1e780-c240-11e8-80ff-2285803f1c1a.png)

But these packages don't look real.

## strange logs

![image](https://user-images.githubusercontent.com/229881/46153595-7405cc80-c241-11e8-81e2-6f0d9c123723.png)


So should I attempt to block these based on referrer or maybe add an API key so I know where traffic is coming from?
hey @styfle

would be cool to also show number of files & directories created during `npm i`. this number is often in the 10k+ range, which is nuts. some filesystems are notoriously slow to create huge filesystem trees, as well as deleting them (ehm, Windows).