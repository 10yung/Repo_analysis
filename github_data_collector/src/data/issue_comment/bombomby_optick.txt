File optick_server.cpp has the following code.

`bool Accept()
{
		TcpSocket incomingSocket = ::accept(listenSocket, nullptr, nullptr);
		if (IsValidSocket(incomingSocket))
		{
			std::lock_guard<std::recursive_mutex> lock(socketLock);
			acceptSocket = incomingSocket;
			SetSocketBlockingMode(acceptSocket, true);
		}
		return IsValidSocket(acceptSocket);
}`

Calling accept cause VC debugger output the following message:

> Exception thrown at 0x00007FFE9F9056B8 in ConsoleApp.exe: Microsoft C++ exception: int at memory location 0x000000CE7EB7EC48.

Although this message does not affect the function, VC debugger output it repeatedly.  It's annoying.  I am using Windows 10 and Visual Studio 2017.
When I try to launch a standalone game, on a dedicated server through Unreal Engine, I immediately get the following error after installing Optick. The profiler doesn't have to actually be running for this, it always fails and I'm unable to launch my game (I have it setup to launch a dedicated server and 2 clients. The client launch in the end, but are unable to connect to the server which crashed on below ensure):

I'm running Unreal 4.23.0 with the latest version of Optick from the store. 

```
[2019.11.28-09.31.30:629][  0]OptickLog: Display: OptickPlugin Loaded!
[2019.11.28-09.31.34:114][  0]LogStats: FPlatformStackWalk::StackWalkAndDump -  3.141 s
[2019.11.28-09.31.34:114][  0]LogOutputDevice: Error: === Handled ensure: ===
[2019.11.28-09.31.34:116][  0]LogOutputDevice: Error: 
[2019.11.28-09.31.34:117][  0]LogOutputDevice: Error: Ensure condition failed: !IsRunningGame() [File:D:/Repos/UnrealEngine-4.23.0/Engine/Source/Editor/MainFrame/Private/MainFrameModule.cpp] [Line: 426]
[2019.11.28-09.31.34:118][  0]LogOutputDevice: Error: The MainFrame module should only be loaded when running the editor.  Code that extends the editor, adds menu items, etc... should not run when running in -game mode or in a non-WITH_EDITOR build
[2019.11.28-09.31.34:120][  0]LogOutputDevice: Error: Stack: 
[2019.11.28-09.31.34:120][  0]LogOutputDevice: Error: [Callstack] 0x00007ffeae92f859 UE4Editor-MainFrame.dll!DispatchCheckVerify<bool,<lambda_0d0fafbdaaf6e8546bf728e28869b5b6> >() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Core\Public\Misc\AssertionMacros.h:164]
[2019.11.28-09.31.34:121][  0]LogOutputDevice: Error: [Callstack] 0x00007ffeae91c9d9 UE4Editor-MainFrame.dll!FMainFrameModule::StartupModule() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Editor\MainFrame\Private\MainFrameModule.cpp:426]
[2019.11.28-09.31.34:122][  0]LogOutputDevice: Error: [Callstack] 0x00007ffed697c41f UE4Editor-Core.dll!FModuleManager::LoadModuleWithFailureReason() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Core\Private\Modules\ModuleManager.cpp:550]
[2019.11.28-09.31.34:123][  0]LogOutputDevice: Error: [Callstack] 0x00007ffed697b5cd UE4Editor-Core.dll!FModuleManager::LoadModuleChecked() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Core\Private\Modules\ModuleManager.cpp:375]
[2019.11.28-09.31.34:124][  0]LogOutputDevice: Error: [Callstack] 0x00007ffeb79453a3 UE4Editor-LevelEditor.dll!FLevelEditorModule::StartupModule() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Editor\LevelEditor\Private\LevelEditor.cpp:234]
[2019.11.28-09.31.34:127][  0]LogOutputDevice: Error: [Callstack] 0x00007ffed697c41f UE4Editor-Core.dll!FModuleManager::LoadModuleWithFailureReason() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Core\Private\Modules\ModuleManager.cpp:550]
[2019.11.28-09.31.34:127][  0]LogOutputDevice: Error: [Callstack] 0x00007ffed697b5cd UE4Editor-Core.dll!FModuleManager::LoadModuleChecked() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Core\Private\Modules\ModuleManager.cpp:375]
[2019.11.28-09.31.34:128][  0]LogOutputDevice: Error: [Callstack] 0x00007ffedd491a4b UE4Editor-OptickPlugin-0008.dll!FOptickPlugin::StartupModule() [C:\Users\Ivo\Documents\Repos\Vire\Plugins\OptickPlugin\Source\Private\OptickPlugin.cpp:232]
[2019.11.28-09.31.34:129][  0]LogOutputDevice: Error: [Callstack] 0x00007ffed697c41f UE4Editor-Core.dll!FModuleManager::LoadModuleWithFailureReason() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Core\Private\Modules\ModuleManager.cpp:550]
[2019.11.28-09.31.34:130][  0]LogOutputDevice: Error: [Callstack] 0x00007fff4fe48e87 UE4Editor-Projects.dll!FModuleDescriptor::LoadModulesForPhase() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Projects\Private\ModuleDescriptor.cpp:596]
[2019.11.28-09.31.34:131][  0]LogOutputDevice: Error: [Callstack] 0x00007fff4fe59283 UE4Editor-Projects.dll!TryLoadModulesForPlugin() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Projects\Private\PluginManager.cpp:938]
[2019.11.28-09.31.34:131][  0]LogOutputDevice: Error: [Callstack] 0x00007fff4fe48c4e UE4Editor-Projects.dll!FPluginManager::LoadModulesForEnabledPlugins() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Projects\Private\PluginManager.cpp:1003]
[2019.11.28-09.31.34:132][  0]LogOutputDevice: Error: [Callstack] 0x00007ff7b035d5da UE4Editor.exe!FEngineLoop::LoadStartupModules() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Launch\Private\LaunchEngineLoop.cpp:3344]
[2019.11.28-09.31.34:132][  0]LogOutputDevice: Error: [Callstack] 0x00007ff7b0364483 UE4Editor.exe!FEngineLoop::PreInit() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Launch\Private\LaunchEngineLoop.cpp:2738]
[2019.11.28-09.31.34:133][  0]LogOutputDevice: Error: [Callstack] 0x00007ff7b035a227 UE4Editor.exe!GuardedMain() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Launch\Private\Launch.cpp:131]
[2019.11.28-09.31.34:134][  0]LogOutputDevice: Error: [Callstack] 0x00007ff7b035a5ba UE4Editor.exe!GuardedMainWrapper() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Launch\Private\Windows\LaunchWindows.cpp:147]
[2019.11.28-09.31.34:135][  0]LogOutputDevice: Error: [Callstack] 0x00007ff7b036b2ac UE4Editor.exe!WinMain() [D:\Repos\UnrealEngine-4.23.0\Engine\Source\Runtime\Launch\Private\Windows\LaunchWindows.cpp:279]
[2019.11.28-09.31.34:139][  0]LogOutputDevice: Error: [Callstack] 0x00007ff7b036dd8a UE4Editor.exe!__scrt_common_main_seh() [d:\agent\_work\3\s\src\vctools\crt\vcstartup\src\startup\exe_common.inl:288]
[2019.11.28-09.31.34:140][  0]LogOutputDevice: Error: [Callstack] 0x00007fff660a7bd4 KERNEL32.DLL!UnknownFunction []
[2019.11.28-09.31.34:141][  0]LogOutputDevice: Error: [Callstack] 0x00007fff663cced1 ntdll.dll!UnknownFunction []
[2019.11.28-09.31.34:142][  0]LogOutputDevice: Error: 
[2019.11.28-09.31.34:152][  0]LogStats:                SubmitErrorReport -  0.000 s
[2019.11.28-09.31.35:573][  0]LogStats:                    SendNewReport -  1.421 s
[2019.11.28-09.31.35:573][  0]LogStats:             FDebug::EnsureFailed -  4.600 s

```
I was wondering if there is any way to export values recorded on Optick to CSV or some data form to create charts. For example a list of functions with their average times in the recorded session. It would be incredibly helpful for my research project in which I will be recording many different sessions to compare the results. 

Thanks! 
In the picture below, the tag pathCost is incorrectly associated with an event that is already out of scope.
![optick-bad-tag-association](https://user-images.githubusercontent.com/18198295/63230198-b7767a00-c209-11e9-88f7-6fc3d07af366.png)

Pseudocode:
```c++
void pathfinding()
{
	OPTICK_EVENT("pathfinding");
	OPTICK_TAG("estDist", "a number");
	OPTICK_TAG("estCost", "a number");
	{
		OPTICK_EVENT("AStar");
		OPTICK_TAG("expandedNodes", "a number");
		OPTICK_TAG("largestQueue", "a number");
	}
	{
		OPTICK_EVENT("reconstruct");
	}
	OPTICK_TAG("pathCost", "a number");
	OPTICK_TAG("pathNodes", "a number");
}
```

Tested with commit tagged 1.2.5.0.

It took several attempts to make it happen, so I guess it is some sort of a race condition?
I'm using https://github.com/RichieSams/FiberTaskingLib throughout my code, and am trying to integrate Optick into the application.

Previously, I was using the OPTICK_THREAD macro when the worker threads started, but Optick seems to get confused when you resume a function on another thread after a switch where there is an OPTICK_EVENT at the beginning of that function (e.g. the scoped event starts and stops on two different threads).

This prompted me to go looking, and I found Optick::RegisterFiber, but there is no documentation on this function. How should one use this? Should it be used in addition to OPTICK_THREAD on the workers? What about combined with OPTICK_EVENT, OPTICK_CATEGORY, and OPTICK_TAG?
Hi,

We recently started integrating optick in our engine and figured that the optick viewer would provide a good framework for integrating/visualizing the snapshots generated by our memory allocation tracker.

Are there any plans to add instrumentation of memory allocations ?
Assuming someone would be willing to contribute, would you be interested in this feature ?
If so, would you be be willing to provide suggestions for what the API should look like as well as a few pointers regarding the integration ?

Thanks,
扩展Optick::EventDescription::CreateShared功能特性
link: 213300d799d0eff2c99b23b2da0cbeaaf24d2fcf
Accepting the fact that the application is only capable of working with few hundred frames, it would be nice to have an option to run the profiler continuously and discard frames older than some configuration (time, frames or MB). This would allow to monitor the game for a long time and after experiencing problems to quickly stop the recording.
In the current setup, I have to start recording and hope that something bad happens in the game in the next few seconds only.
I hope this feature suggestion makes sense :D
Hi,
the wiki page makes no mention of OPTICK_FRAME, which is rather unfortunate since this is the one required macro to make the profiler work.

Also what is the difference between OPTICK_THREAD  and OPTICK_FRAME?

I have multiple threads each dedicated to a specific task. (I know that this does not scale, but lets leave that aside for now.) One thread is rendering as fast as possible. One thread updates sound buffers at a fixed rate and one thread updates game logic and passes the state to be used by other threads. How should I use the two aforementioned macros in such situation? How do I control which of the frame sequences will be shown in the upper timeline?

When I use just one OPTICK_FRAME, I cannot see details from other threads.
When I use one OPTICK_FRAME in each of the threads, I cannot control which of the threads should be in the upper timeline.

Thanks