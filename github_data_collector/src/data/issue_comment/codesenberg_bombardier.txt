This is an example of what a **bug report** can look like. Please, feel free to also provide any other information relevant to the issue.

### What version of bombardier are you using?

1.2.4

### What operating system and processor architecture are you using (if relevant)?
all

### What did you do?

run this command:

```bash
bombardier -n 10000 -c 1000 "http://127.0.0.1:8080/to?url=http://10.100.99.41:38667"
```

### What you expected to happen?

start benchmark

### What actually happened?

it outputs:

```
"http://127.0.0.1:8080/to?url=http://" is not an acceptable protocol (http, https): http://127.0.0.1:8080/to?url=http://10.100.99.41:38667
```
feat: Add parameter to disable HTTP keep alives (-a and --disableKeepAlives)

    * It is only compatible with --http1 and --http2 (not with fasthttp)
    * Add `disableKeepAlives` (boolean) to args_parser.go and config.go
    * Set parameter to clientOpts (bombardier.go)
    * Configure http client transport with `DisableKeepAlives` (clients.go)

When i run this command "go get -u -v github.com/codesenberg/bombardier" i get error 

```
package github.com/codesenberg/bombardier/vendor/golang.org/x/net/http2:
vendor/golang.org/x/net/http2/pipe.go:1:1: expected 'package', found 'EOF'
```
Please give me a solution, thanks you so much|
[From MacOS]
How much system resource(CPU, RAM, storage, bandwidth etc.) I need to spawn 2 millions concurrent users?
Hi,

I want to know if there is a meaning of putting a higher amount of connections than the rate limit?

if I am running with c 500 and r 100 I will get a different result than if I run c 100 and r 100.

What is the meaning of it?

Thanks.
becuase there is caching enabled on my sites and i want to test different urls.,
as if url gets requested twice it gets cached.

so it would be great if we could provide txt file containing list of urls.

thanks
The output produced by `bombardier` cannot be consumed by Prometheus.

It would be nice to have metrics like this:

![image](https://user-images.githubusercontent.com/3826416/35421558-e5d41754-0211-11e8-96f0-8b1d4acd1564.png)

Prometheus' [node_exporter](https://github.com/prometheus/node_exporter) has [`textfile`](https://github.com/prometheus/node_exporter#textfile-collector) collector. The collector scans directory for `.prom` files and adds the metrics found in the file to its own metrics set.

This way, I can run `bombardier` every minute, output results to `bombardier.prom` file and the metrics will be picked up by Prometheus server.

I would like to come up with a number of metrics and have an option to output results as a Prometheus metric.

For example, the following output:

```
Statistics        Avg      Stdev        Max
  Reqs/sec      6607.00     524.56       7109
  Latency       29.86ms     5.36ms   305.02ms
```

would result in the following metrics:

* `bombardier_http_request_rate_avg`
* `bombardier_http_request_rate_max`
* `bombardier_http_request_rate_stdev`
* `bombardier_http_latency_avg`
* `bombardier_http_latency_stdev`
* `bombardier_http_latency_max`

Each metric could have one or more labels associated with it.

For example, the following command:

```
bombardier -c 200 -d 10s -l http://ya.ru
```

would result in the following metrics:

```
conn: 200
duration: 10
url: http://ya.ru
```

Further, it would be helpful to output UUID associated with each test.