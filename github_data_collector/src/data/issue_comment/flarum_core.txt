## Bug Report

**Current Behavior**

    app(UrlGenerator::class)->to('forum')->route('discussion', ['id' => 1]);
    // http://flarum.localhost/d/1

    app(UrlGenerator::class)->to('forum')->route('discussion', ['id' => 1, 'near' => 5]);
    // http://flarum.localhost/d/1

**Expected Behavior**

    app(UrlGenerator::class)->to('forum')->route('discussion', ['id' => 1]);
    // http://flarum.localhost/d/1

    app(UrlGenerator::class)->to('forum')->route('discussion', ['id' => 1, 'near' => 5]);
    // http://flarum.localhost/d/1/5

**Possible Solution**

This feature can probably be implemented without too many troubles inside `RouteCollection`.

Currently all variations of the route (first with a single parameter, then with two parameters) are parsed by `fast-route`, and added to both the routing and the `$reverse` array.

The limitation is that we currently always take the first route matching the name from the `$reverse`, whereas the one with the optional parameter is likely in second place.

https://github.com/flarum/core/blob/d492579638fb52dafbfe65f1f36a95eb6047f7f3/src/Http/RouteCollection.php#L91

We should probably try replacing the parameters in each of the `$this->reverse[$name]` matches, then return the one where we were able to replace the most tokens.

Or alternatively, index the reverse array based not only on name, but also on the parameter names or count in order to pick the correct reverse route in a single access.

Once implemented, we should use the route builder in places where it's currently skipped for this very reason https://github.com/flarum/subscriptions/blob/master/views/emails/newPost.blade.php#L6

**Additional Context**

Discussed on the forum here https://discuss.flarum.org/d/22573-how-to-navigate-to-a-particular-post-in-flarum
<!--
IMPORTANT: We applaud pull requests, they excite us every single time. As we have an obligation to maintain a healthy code standard and quality, we take sufficient time for reviews. Please do create a separate pull request per change/issue/feature; we will ask you to split bundled pull requests.
-->

**Fixes #1957**

**Changes proposed in this pull request:**
<!-- fill this out, mention the pages and/or components which have been impacted -->
- Implements the remove, insertBefore, insertAfter and replace functionality for middlewares
- Changed the original `flarum.{frontend}.middleware` container to array
- Moved middleware piping to `flarum.{frontend}.handler` container

**Reviewers should focus on:**
<!-- fill this out, ask for feedback on specific changes you are unsure about -->
- General code style (hopefully StyleCI catches most of it)
- Variable names (could we name them better?)
- Does anyone see a better way to handle the foreach loops?

**Confirmed**

- [x] Backend changes: tests are green (run `composer test`).

**Fixes #1781**

This extender implements several methods for extending the new error
handling stack implemented in #1843.

Most use-cases should be covered, but I expect some challenges for more
complex setups. We can tackle those once they come up, though. Basic
use-cases should be covered.

**Confirmed**

- [x] Tested on a local Flarum installation.
- [x] Backend changes: tests are green (run `composer test`).

### Feature Request

I feel this request is pretty small. I think it would be better if,  the left menu (having all the tags) is kept stationary , even when the page is being scrolled.
## Bug Report

**Current Behavior**
As of now, if a discussion has say 25 posts with 5 of them deleted, the number of unread posts in total should be 20. But the number of unread posts still show 25.

**Steps to Reproduce**
1. Go to 'https://beta.flarum.site'
2. Create an account and add a discussion.
3. Add a couple of replies and delete a few of those replies them.
4. Register a new user and note the number of unread posts before opening the discussion.

**Expected Behavior**
I expect the number of unread discussions to be excluding the deleted posts.

**Screenshots**

The image bellow shows that I created a few posts and deleted 2 of them. A total of 8 posts (including the deleted):

![Screenshot from 2020-01-16 13-22-09](https://user-images.githubusercontent.com/53521400/72504783-85bf1900-3864-11ea-8e9e-51cc16478e56.png)


This image shows the number of unread posts for a new user *Test Discussion*:

![Screenshot from 2020-01-16 13-23-37](https://user-images.githubusercontent.com/53521400/72504864-b56e2100-3864-11ea-9626-3dc344c0302f.png)


This image shows the total number of actual posts when the new user clicks the discussion:

![Screenshot from 2020-01-16 13-23-50](https://user-images.githubusercontent.com/53521400/72504925-d9c9fd80-3864-11ea-906e-06964dbcbc84.png)



I have been unable to get the admin checkbox to work, even though it exactly resembles the one from the Tag extension. Help appreciated.

For reviewers:

- Is this approach okay? Alternative suggestions?

**Fixes #845**

- added permission
- changed serializer
- created column
- modified policy

**Confirmed**

- [ ] Frontend changes: tested on a local Flarum installation.
- [x] Backend changes: tests are green (run `composer test`).

**Required changes:**

- [ ] Related core extension PRs: (TODO)


## Feature Request

I've found that quite a few users on my forum (soft)delete posts by mistake and sometimes don't even realize they do that.

I think this could be improved by asking for confirmation when deleting/hiding a post. I don't think it would be annoying, since deleting a post is not something you do very often.

It could also be an option, actually, depending on how people feel this issue.
## Bug Report

**Current Behavior**
If a moderator is assigned with the permission to edit users, the user is also able to make itself admin by editing and assigning the administrator role to itself.

**Expected Behavior**
Only administrators should be able to assign or remove the admin role on a user.

**Environment**
- Flarum version: 0.1.0-beta.11.1

After https://github.com/flarum/core/pull/1963 Flarum will start using the Laminas namespace in beta.12 instead of Zend, as a temp solution to backwards compatibility the zend-bridge was [added to composer](https://github.com/flarum/core/blob/master/composer.json#L52). This bridge should be removed in beta.13 as beta.12 deprecates the Zend namespace.

This follows the discussion from #1774 in which @franzliedke mentions some missing feature regarding the fallback language.

The fallback locale is currently hard-coded here https://github.com/flarum/core/blob/f31f02d4cc0739c4c778a77f786d769634c32e10/src/Locale/LocaleServiceProvider.php#L62 as English.

It's already possible to customize it via `extend.php` by adding a `resolving` function to the container (I think). But it's not ideal.

We need to make it customizable in a user-friendly manner.

Use case: as Flarum becomes more and more international, we might start seeing extensions developed without any English language files. If, for example, many extensions were developed in Chinese only, Chinese forums that enabled multiple languages might want to set their default locale to Chinese so that the text from those extensions default to Chinese.

It seems to be possible to define multiple default locales, so we might want to allow setting multiple ones, maybe always including English as the last fallback.

Implementation ideas: we could start by making the default locale a customizable setting inside `config.php`. It could also be added to the admin panel.

If we can indeed set multiple fallback languages, we could set the default language chosen by the user as the first fallback language, followed by English. However this could have unintended side effects if users expect the English text to show up for untranslated texts. For example, a forum in French (default) and German might want English used for all extensions not translated in German instead of French.

So in my opinion English should always be the default fallback unless another locale has been explicitly set via a dedicated setting.