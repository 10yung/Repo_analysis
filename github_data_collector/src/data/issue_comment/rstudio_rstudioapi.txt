With a proxied header like: `X-RStudio-Username: rstudio-user/display-name`

We'd like to have access to at least the second half (the display name). Perhaps we should also expose the first name, as well?

Could look something like:

```
rstudioapi::getCurrentUser()
$display
[1] “display-name”

$system
[1] “rstudio-user”
```

One caveat to consider: in the case of collaborative editing, this call will need to return different values depending on which user executed it in the R session -- these values are not global to the session.
`rstudioapi::documentOpen()`: Instruct the IDE to open a source file.
`rstudioapi::documentRead()`: Read the contents of a document open (and perhaps unsaved?) in the IDE.
`rstudioapi::consoleHistory()`: Read the history of commands sent to the R console.
`rstudioapi::consoleSend()`: Send code to the R console.
On RStudio Server on Ubuntu, I am getting "Message too long for RSA" when I try to use a long password. This is a problem for storing things like access tokens, api keys, etc. 
![image](https://user-images.githubusercontent.com/11964090/70838090-6e9b9000-1dbb-11ea-8d90-97251d5c9f24.png)

From what I can tell, the methods for getting the terminal buffers don't extend to their neighbor in RStudio, the R console itself. Thus if I want to do something like pull out the full text of the console (the R header, the input history, the output, the error messages, all of it) I can't presently do that.

(Well, not without hacking the HTML that powers RStudio apart...)
Well, I'm not using the very latest daily preview of RStudio but it's new enough (2 week ago) and the issue exists.

**System requirement** You need to run this on Windows.

```r
rstudioapi::showQuestion("中文", enc2utf8("中文"))
```

![image](https://user-images.githubusercontent.com/8368933/66698137-e1ca4c80-ed0d-11e9-8a57-ff14ec27f065.png)

May related to #68

Add possibility to open RStudio snippets editor programmatically. It would be nice if a tab with snippet type of interested (R, Markdown, Python, etc.) could be opened. Additionally, functionality to programmatically create a file with currently default RStudio snippets would be appreciated.

Possibly related issues: https://stackoverflow.com/q/58137336/4783029, r-lib/usethis#885. 

From https://community.rstudio.com/t/stopping-a-local-job-via-rstudioapi/39366 -- it could be useful to have an API to explicitly stop (kill) a currently-running job.
I'd like to be able to access the document outline visible via `Code` > `Show Document Outline`. Is this possible? 
I don't know if I'm using the right language. I'd like to select an attached environment for the user to view. 

![image](https://user-images.githubusercontent.com/14003618/64133819-ef072980-cda6-11e9-8c68-5c9c4a039b51.png)


```r
x <- system.file("demo/recursion.R", package = "base")

source(x, local = attach(NULL, name = "demo"))
```

For context, I have a package to debug `shiny` that converts reactive objects to static objects in the global environment and I know this approach won't pass checks when submitting to CRAN. I'm not sure if this type of solution gets around the problem so if it isn't an acceptable work-around, there is no need to pursue this issue.

Hello, I am trying to use openml with RStudio and retrieve dataset with id=41291. However, it gives following error:
 d = getOMLDataSet(41291)
Downloading from 'http://www.openml.org/api/v1/data/41291' to 'C:\Users\dell\AppData\Local\Temp\RtmpIRXggz\cache\datasets\41291\description.xml'.
Error in doHTTRCall(method, url = url, query = list(api_key = conf$apikey),  : 
  API call failed. The OpenML server 'http://www.openml.org/api/v1' is currently not available, try again later.


This command worked perfectly on rstudio instance of docker. Unfortunately, it doesn't work in RStudio installed locally on windows platform. Please, I look forward to your kind support.