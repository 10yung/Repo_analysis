The command "caniuse elementsFromPoint" return "elementsfrompoint: not found"
This project uses a fork of yargs with a `config-booleans` branch.

https://github.com/sgentle/caniuse-cmd/blob/fa1b41880c8a45979b63c4bf6aab3795abdc52c9/package.json#L32

It looks like the new yargs-parser has changes related to default booleans, and this fork may no longer be required.

-----

Snippet of some of the changes:

https://github.com/sgentle/yargs/blob/7be15b84049f00e6a0c11827c5b16496aeaddd19/lib/parser.js#L316..L344

```js
    Object.keys(flags.configs).forEach(function (configKey) {
...
            // setting arguments via CLI takes precedence over
            // values within the config file.
            if (argv[key] === undefined || (flags.defaulted[key])) {
              delete argv[key]
              setArg(key, config[key])
            }
          })
        } catch (ex) {
          if (argv[configKey]) error = Error(__('invalid json config file: %s', configPath))
        }
      }
    })
  }
```

Snippet of some of current yargs-parser code:

https://github.com/yargs/yargs-parser/blob/82f4ea5810ca36dbe934de593eb0d45cdcc724c2/index.js#L498..L519

```js
    Object.keys(config).forEach(function (key) {
...
        // setting arguments via CLI takes precedence over
        // values within the config file.
        if (!hasKey(argv, fullKey.split('.')) || (flags.defaulted[fullKey]) || (flags.arrays[fullKey] && configuration['combine-arrays'])) {
          setArg(fullKey, value)
        }
      }
    })
  }
```

References #18.

I would say this PR is indicative at the moment and will require some rework, which I'm happy to do.

E.g. I have included two variations of automatic conversion from coffee-script to JS, using:
- https://decaffeinate-project.org/repl/
- http://js2.coffee/

I have also left most of the indentation alone in order to simplify diffs. The finished code would require proper formatting.

The PR builds on the decaffeinate conversion as I preferred its output.

This package will let you publish the latest caniuse in the Ubuntu store, and from there reach many users on all the supported Ubuntu versions, and Linux distributions. You just have to go to https://build.snapcraft.io and enable the automated continuous delivery.

It was packaged and released to the store by @DavidResendizz during [google code-in](https://codein.withgoogle.com/). So, when you try to register the name you will find that it is already taken. You just have to fill the form claiming that you are the upstream developer, and we will take care of the transfer.
It would be nice to add support fot the free desktop XDG base directory specification (https://standards.freedesktop.org/basedir-spec/basedir-spec-latest.html), where configurations should be placed in `$XDG_CONFIG_HOME/appname`.
This PR introduces a fix required in #14.

With this changes the output will be like this:
![image](https://user-images.githubusercontent.com/15163823/30036085-1d9a57be-91c1-11e7-953d-d39046109b2f.png)

I also experimented with spaces between versions and supers, but they seem too large:
![image](https://user-images.githubusercontent.com/15163823/30036131-8b278838-91c1-11e7-9b0b-7df964189dce.png)
So I decided to leave a version without spaces between versions and supers.
Sorry but I have to ask about that. As you know, nowadays CoffeeScript is pretty outdated. Want to help out, create pull requests but those CoffeeScript lines makes me really sick (there is no reason to learn that in 2017) and I am quite really sure there are plenty amount of people who don't want to write CoffeeScript. So, converting the project vanilla JavaScript will increase potential contributors.
Era is great, but I'd love to be able to only display browsers and usage percentage for only those browser above 1% or some other configurable threshold. 

Just a feature idea : )
The supers for notes are the same color as the percentage to which they belong making them hard to see. It would be nice if they were all a consistent color (not the red/yellow/green) so I could see the note, and spot which version it applies to easily.

![caniuse let example](https://cloud.githubusercontent.com/assets/91488/15785393/39763d10-2974-11e6-9428-b5b38cb0ef21.png)

Eg. I would like to show browser share for a specific country instead of the global data.
