Hi,

I'm trying to get the addon to work with OF 10.0.1 on Mac OS  Mojave (10.14.6).

All the examples seem to compile fine, but the console gives me this (This is for the blink example ) : 
`2019-09-06 17:17:22.657632+0100 example-blinkDebug[2685:64821] [] CMIO_Unit_ScopeElement.h:200:SafeGetElement Throwing err: -67454
2019-09-06 17:17:22.658557+0100 example-blinkDebug[2685:64821] [] CMIOUnitFigBaseObjectImpl.c:246:CMIOUnitCreateFromDescription Invalid paramater
2019-09-06 17:17:22.672878+0100 example-blinkDebug[2685:64821] [] CMIO_Unit_Input_Device.cpp:244:GetPropertyInfo CMIOUInputFromProcs::GetPropertyInfo() failed for id 102, Error: -67456`

Then it seems like no processing happens ( _tracking not working_ but everything else seem to work fine).

The weird thing is that it worked the very first time i used it then nothing...

I tried : 
* using the nightly builds ( OFxCV uses some conversions macros which are not recognised by the nightly builds ( convert to Gray) );
* using the release tagged 1.1;
* clean and re - run the example;
*  compile for debugg & for release // run executable inside the packages as admin.

None of it has worked so far...

Help?

Thanks for the great work though,

++

P
Cheers
/src/main.cpp:1:
/home/shank/of-workspace/addons/ofxFaceTracker/libs/FaceTracker/include/FaceTracker/IO.h:42:10: fatal error: opencv/opencv.h: No such file or directory
 #include <opencv/cv.h>
          ^~~~~~~~~~~~~~~~~
compilation terminated.
make[1]: *** [/home/shank/of-workspace/libs/openFrameworksCompiled/project/makefileCommon/compile.project.mk:217: obj/linux64/Release/src/main.o] Error 1
make[1]: Leaving directory '/home/shank/of-workspace/addons/ofxFaceTracker/example-blink'
make: *** [/home/shank/of-workspace/libs/openFrameworksCompiled/project/makefileCommon/compile.project.mk:129: Release] Error 2

HI! I'm using OpenFrameworks v0.10.1 in Visual Studio 2017. When I want to try the example: "example-overlay". I find the following error:

1> c: \ of_v0.10.1_vs2017 \ of_v0.10.1_vs2017 \ apps \ myapps \ example-overlay \ src \ FaceOverlay.h (53): error C2039: 'xy': is not a member of 'glm :: tvec3 < float, 0> '(compiling source file src \ main.cpp)
1> c: \ of_v0.10.1_vs2017 \ of_v0.10.1_vs2017 \ libs \ glm \ include \ glm \ detail \ type_vec.hpp (243): note: see declaration of 'glm :: tvec3 <float, 0>' (compiling source file src \ main.cpp)
1> c: \ of_v0.10.1_vs2017 \ of_v0.10.1_vs2017 \ apps \ myapps \ example-overlay \ src \ FaceOverlay.h (53): error C2660: 'FaceOverlay :: determinant': function does not take 1 arguments (compiling source file src \ main.cpp)
1> Distance.cpp

1> c: \ of_v0.10.1_vs2017 \ of_v0.10.1_vs2017 \ apps \ myapps \ example-overlay \ src \ FaceOverlay.h (53): error C2039: 'xy': is not a member of 'glm :: tvec3 < float, 0> '(compiling source file src \ ofApp.cpp)
1> c: \ of_v0.10.1_vs2017 \ of_v0.10.1_vs2017 \ libs \ glm \ include \ glm \ detail \ type_vec.hpp (243): note: see declaration of 'glm :: tvec3 <float, 0>' (compiling source file src \ ofApp.cpp)
1> c: \ of_v0.10.1_vs2017 \ of_v0.10.1_vs2017 \ apps \ myapps \ example-overlay \ src \ FaceOverlay.h (53): error C2660: 'FaceOverlay :: determinant': function does not take 1 arguments (compiling source file src \ ofApp.cpp)


Does anyone know why?

![error](https://user-images.githubusercontent.com/51285574/58759132-85ebed80-84fb-11e9-8b54-6d5ae7172e51.jpg)


Remove more swizzles, see #154 
I see there is a ofxFacetracker IOS repo here https://github.com/kylemcdonald/ofxFaceTracker-iOS, can you add some documentation of how to make this work on IOS? I would like to use it with the current master of OF as well as with some other addons, (so I need to go from scratch with the project generator)
#In some cases where high framerate tracking is not required (e.g. the "main work" is being done on the application's other threads, and you just need a check for faces every half second or so), then with threaded face tracking, it can be very useful to sleep the thread for a few milliseconds in its loop, to effectively make it run at a lower framerate than the main application.

This pull request incorporates an optional `int forceWaitTime` into the `setup` function for the threaded face tracker, without breaking the more usual use case.
It looks like:

```
auto leftEye = tracker.getImageFeature(ofxFaceTracker::LEFT_EYE_TOP).getCentroid2D();
auto rightEye = tracker.getImageFeature(ofxFaceTracker::RIGHT_EYE_TOP).getCentroid2D();
```

they both return the same position.

Also, `tracker.draw()` should draw all the features detected. At the moment is just drawing the nose base and the mouth.

@bakercp , as I've seen that you updated the example recently, does `example-empty` draw all the features, or just the nose and the mouth? 
This example does not compile.
OF 0.10
OS Ubuntu

error:

/Sources/of_v0.10.0_linux64gcc6_release/addons/ofxFaceTracker/example-calibrated/src/ofApp.cpp:59: error: undefined reference to 'convertFromIndices(ofMesh_<glm::tvec3<float, (glm::precision)0>, glm::tvec3<float, (glm::precision)0>, ofColor_<float>, glm::tvec2<float, (glm::precision)0> > const&)'

/Sources/of_v0.10.0_linux64gcc6_release/addons/ofxFaceTracker/example-calibrated/src/ofApp.cpp:61: error: undefined reference to 'buildNormals(ofMesh_<glm::tvec3<float, (glm::precision)0>, glm::tvec3<float, (glm::precision)0>, ofColor_<float>, glm::tvec2<float, (glm::precision)0> >&)'
Hi all,

Is it possible to get the head 3d coordinates, xyz? I would like to use the head position as a 3d particle attractor. Any tips on how to achieve this?

Best,