I'm trying to add the repo using SPM but I get the following error:

<img width="623" alt="Screenshot 2019-10-03 at 06 35 58" src="https://user-images.githubusercontent.com/38089167/66099738-41a35380-e5a8-11e9-8090-4c7da720c23e.png">

I've setup unit tests for my project and want to add View/ViewController instantiation to the tests because the project is modular. When compiling this error message appears when for any methods that came from Reusable.

```
Undefined symbols for architecture x86_64:
  "static (extension in Reusable):Reusable.StoryboardSceneBased< where A: __C.UIViewController>.instantiate() -> A", referenced from:
      implicit closure #1 () throws -> FooProject.HomeViewController? in FooProjectTests.InstantiationTests.testInstantiations() -> () in InstantiationTests.o
ld: symbol(s) not found for architecture x86_64
clang: error: linker command failed with exit code 1 (use -v to see invocation)
```

I'm not sure why this is happening because the other frameworks can be accessed easily. This is a sample code that generates the error

```swift
@testable import FooProject
import Nimble
import XCTest

class InstantiationTests: XCTestCase {
    func testInstantiations() {
        expect(HomeViewController.instantiate()).notTo(raiseException())
    }
}
```

## Possible Faqs

**Is the project enabled for testability**
Yes

**Do you have other tests besides this?**
Yes

**What do you mean by the project being modular?**
The project has multiple Targets and Configurations. ex

Configurations
- Release
- Release Debug
- Staging
- Staging Debug

Targets
- FooProject
- FooProjectV2

We implemented auto-Registration of tableViewCell types. This was done such that it is an optional, non-breaking change. The features is disabled by default, although that could be changed without breaking anything.

When calling dequeueReusableCell(...), one can now specify autoRegister: true, and it will take care of ensuring that the class/nib is registered. Note that in order to get around generic constraints this required duplicating the dequeueReusableCell function for each of Reusable and NibReusable.

Hopefully this is useful to someone!

Are there any intentions to extend Reusable to macOS, specifically `NSTableView`/`NSCollectionView`? The library is obviously focused on iOS/UIKit but I thought I'd still ask :). Thanks!

And setup Circle-CI to run them
