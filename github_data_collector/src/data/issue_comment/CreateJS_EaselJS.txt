### Issue Details
* createJs version 1.0.0


if a Tween is added to some timeline on some target.
    tween = cjs.Tween.get(target);
    timeline.addTween(tween.wait(1));

if target is an instance of createjs.DisplayObject then in below mentioned `_resolveState` function(MovieClip.js) `_addManagedChild`(MovieClip.js) adds that target as a child to owner of the timeline.

Consider `this.removeChild(target)` is called and target is removed from parent 
but child is still there because on next tick target again gets added as child in _resolveState function
and it looks like removeChild  didn't work. 

```
p._resolveState = function() {
		var tl = this.timeline;
		this.currentFrame = tl.position;
		
		for (var n in this._managed) { this._managed[n] = 1; }

		var tweens = tl.tweens;
		for (var i=0, l=tweens.length; i<l; i++) {
			var tween = tweens[i],  target = tween.target;
			if (target === this || tween.passive) { continue; } // TODO: this assumes the actions tween from Animate has `this` as the target. There's likely a better approach.
			var offset = tween._stepPosition;

			if (target instanceof createjs.DisplayObject) {
				// motion tween.
				this._addManagedChild(target, offset);
			} else {
				// state tween.
				this._setState(target.state, offset);
			}
		}

		var kids = this.children;
		for (i=kids.length-1; i>=0; i--) {
			var id = kids[i].id;
			if (this._managed[id] === 1) {
				this.removeChildAt(i);
				delete(this._managed[id]);
			}
		}
	};

p._addManagedChild = function(child, offset) {
		if (child._off) { return; }
		this.addChildAt(child,0);

		if (child instanceof MovieClip) {
			child._synchOffset = offset;
			// TODO: this does not precisely match Adobe Flash/Animate, which loses track of the clip if it is renamed or removed from the timeline, which causes it to reset.
			// TODO: should also reset when MovieClip loops, though that will be a bit tricky to detect.
			if (child.mode === MovieClip.INDEPENDENT && child.autoReset && (!this._managed[child.id])) { child._reset(); }
		}
		this._managed[child.id] = 2;
	};
```


* Mac 10.15.1 Chrome 78.0.3904.108



* Possible solution: 
    setting child._off = true on removing child and 
    setting false on adding child.

     `this.removeChild(target);`
    ` target._off = true;`

    this could be done either outside createjs or can be made part of removeChild and addChild 
    functions.

Is this ok or is there any other solution or any other approach to solve this problem?



https://jsfiddle.net/jaswant0709/mocqfj3s/17/

Bumps [lodash](https://github.com/lodash/lodash) from 0.9.2 to 4.17.15.
<details>
<summary>Release notes</summary>

*Sourced from [lodash's releases](https://github.com/lodash/lodash/releases).*

> ## 4.0.0
> # [lodash v4.0.0](https://github.com/lodash/lodash/wiki/Changelog#v400)
> 
> 2015 was big year! [Lodash](https://lodash.com/) became the [most depended on](https://gist.github.com/anvaka/8e8fa57c7ee1350e3491#file-01-most-dependent-upon-md) npm package, passed [1 billion](http://npm-stat.com/charts.html?package=&author=jdalton) downloads, & its v3 release saw massive adoption!
> 
> The year was also one of collaboration, as discussions began on [merging Lodash & Underscore](https://github-redirect.dependabot.com/underdash/underdash/issues/14). Much of Lodash v4 is proofing out the ideas from those discussions. Lodash v4 **would not be possible** without the collaboration & contributions of the Underscore core team. In the spirit of merging our teams have blended with [several members](https://github.com/orgs/lodash/people) contributing to both libraries.
> 
> For 2016 & [lodash v4.0.0](https://github.com/lodash/lodash/wiki/Changelog#v400) we wanted to cut loose, push forward, & take things up a notch!
> 
> ## Modern only
> 
> With v4 weâ€™re breaking free from [old projects](https://github.com/lodash-archive), old environments, & dropping [old IE < 9 support](https://www.microsoft.com/en-us/WindowsForBusiness/End-of-IE-support)!
> 
> ## 4 kB Core
> 
> Lodashâ€™s kitchen-sink size will continue to grow as new methods & functionality are added. However, we now offer a 4 kB (gzipped) [core build](https://github.com/lodash/lodash/tree/4.0.0/dist) thatâ€™s compatible with [Backbone v1.2.4](https://github-redirect.dependabot.com/jashkenas/backbone/issues/3839) for folks who want Lodash without lugging around the kitchen sink.
> 
> ## More ES6
> 
> Weâ€™ve continued to embrace ES6 with methods like [_.isSymbol](https://lodash.com/docs#isSymbol), added support for cloning & comparing array buffers, maps, sets, & symbols, converting iterators to arrays, & iterable `_(â€¦)`.
> 
> In addition, weâ€™ve published an [es-build](https://github.com/lodash/lodash/tree/4.0.0-es/) & pulled [babel-plugin-lodash](https://github.com/lodash/babel-plugin-lodash) into core to make tree-shaking a breeze.
> 
> ## More Modular
> 
> Pop quiz! ðŸ“£
> 
> What category path does the `bindAll` method belong to? Is it 
> 
> A) `require('lodash/function/bindAll')`
> B) `require('lodash/utility/bindAll')`
> C) `require('lodash/util/bindAll')`
> 
> Donâ€™t know? Well, with v4 it doesnâ€™t matter because now module paths are as simple as
> 
> ``` js
> var bindAll = require('lodash/bindAll');
> ```
> 
> Weâ€™ve also reduced module complexity making it easier to create smaller bundles. This has helped Lodash adoption with libraries like [Async](https://github-redirect.dependabot.com/caolan/async/pull/996) & [Redux](https://github-redirect.dependabot.com/rackt/redux/pull/611)!
> 
> ## 1st Class FP
> 
> With v3 we introduced [lodash-fp](https://github.com/lodash-archive/lodash-fp). We learned a lot & with v4 we decided to [pull it into core](https://github.com/lodash/lodash/wiki/FP-Guide).
> 
> Now you can get immutable, auto-curried, iteratee-first, data-last methods as simply as
> 
> ``` js
> var _ = require('lodash/fp');
> var object = { 'a': 1 };
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`ddfd9b1`](https://github.com/lodash/lodash/commit/ddfd9b11a0126db2302cb70ec9973b66baec0975) Bump to v4.17.15.
- [`b185fce`](https://github.com/lodash/lodash/commit/b185fcee26b2133bd071f4aaca14b455c2ed1008) Rebuild lodash and docs.
- [`be87d30`](https://github.com/lodash/lodash/commit/be87d303941222b97c482755afc0f4a77ce46c30) Bump to v4.17.14.
- [`a6fe6b1`](https://github.com/lodash/lodash/commit/a6fe6b1e174fd02b5e60eb2664405f4c1262c300) Rebuild lodash and docs.
- [`e371828`](https://github.com/lodash/lodash/commit/e37182845f16715a0d1c391c8662d83c55609cee) Bump to v4.17.13.
- [`357e899`](https://github.com/lodash/lodash/commit/357e899e685872b4af5403ecc4b2a928f961ae63) Rebuild lodash and docs.
- [`fd9a062`](https://github.com/lodash/lodash/commit/fd9a062d57646450b61f74029315abd4cc834b08) Bump to v4.17.12.
- [`e77d681`](https://github.com/lodash/lodash/commit/e77d68121ff00ba86b53eed5893d35adfe94c9dd) Rebuild lodash and docs.
- [`629d186`](https://github.com/lodash/lodash/commit/629d1865793182cd967196716f4beff223aa4a91) Update OpenJS references.
- [`2406eac`](https://github.com/lodash/lodash/commit/2406eac542b2a1282be8d812a6d8a45433ade80a) Fix minified build.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/0.9.2...4.17.15)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=0.9.2&new-version=4.17.15)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/CreateJS/EaselJS/network/alerts).

</details>


I have developed a slot game with 5 reels, When played in android chrome it doesn't work good, when i click anywhere on the screen, for no reason the FPS drops, if there is any animation playing at the background they freeze when i click the interactive object or if i click on the screen. This happens only in mobile.

    We have split the canvas and we have less animations in each canvas running everytime, while in android firefox it works perfect, but in android chrome it freezes for a single click.

    I tried to disable stagemousedown/up events, becos they are being triggered when i simply click anywhere in the stage. It brings down the FPS to almost 5 from 20, when we click continuously almost in all PC browsers. In mobiles, android firefox doesn't have this issue, where as in chrome its affecting the animations. Its like of freezing for a second when we click.

    I tried with RAF and RAF_SYNCHED, but still no improvement.

Im sure its because of stagemousedown/up events,

createjs.Ticker.timingMode = createjs.Ticker.TIMEOUT;
createjs.Ticker.maxDelta = 50;
createjs.Ticker.addEventListener("tick", this._update);
this._update = function(event)
{   
    if(main_page_active == false)
    {
        if(reels_page_opened == true)
        {
            s_oStage_reels.update(event);
        }
        if(paytable_page_opened == true)
        {
            s_oStage_paytable.update(event);
        }
        if(gamble_page_opened == true)
        {
            s_oStage_gamble.update(event);
        }
        if(jackpot_page_opened == true)
        {
            s_oStage_jackpot.update(event);
        }
        if(bonus_page_opened == true)
        {
            s_oStage_bonus.update(event);
        }
    }
};


The issue is: the domelement is drawn in the correct x,y location only when the browser inner window aspect ratio exactly matches the aspect ratio of the stage. As the browser window is stretched wider and wider, the DomElement is drawn further offset to the left. Same for stretching the window tall. It appears to me that the base x and y values being used are the top and left edges of the window, rather than the top and left edges of the stage. See my sample video below.

For example, if I set the y value of the Domelement to 18, the element is always drawn 18 pixels from the top of the browser window, even when the window is dragged taller and taller. It fails to translate down as the top of the stage moves down in y.

I put up a live demo to try out: 
http://pokerdev.darkcloud.com/test/videodemo.html

Drag the aspect ratio of the window to something other than 16:9 and you will see the issue.
Is there a release schedule available? It seems the latest release on NPM was pushed 2 years ago, same with release in GH, even though there's been active work.




Hi everyone,

i have a pretty strange bug, when creating a Stage.

`var stage = new createjs.Stage("canvas");
    console.log(stage);`

The constructor immediately causes this error:

[Error] TypeError: undefined is not an object (evaluating 'c.t.addEventListener') â€” createjs.min.js:1393
	Bg (react-dom.production.min.js:117:156)
	callback (react-dom.production.min.js:126)
	Ag (react-dom.production.min.js:116:410)
	zg (react-dom.production.min.js:116:151)
	qi (react-dom.production.min.js:131)
	ui (react-dom.production.min.js:133:323)
	(anonyme Funktion) (react-dom.production.min.js:158:380)
	unstable_runWithPriority (react.production.min.js:27)
	Vc (react-dom.production.min.js:158:363)
	Sc (react-dom.production.min.js:158:147)
	Z (react-dom.production.min.js:156:495)
	ah (react-dom.production.min.js:159:229)
	xf (react-dom.production.min.js:40)
	xf
[Error] TypeError: undefined is not an object (evaluating 'c.t.addEventListener')
	Z (react-dom.production.min.js:157:194)
	ah (react-dom.production.min.js:159:229)
	xf (react-dom.production.min.js:40)
	xf

Its refers to line 1392 in create.min.js:

  for (b in d)
                c = d[b], c.t.addEventListener(b, c.f, !1)

macOS, Safari,
Windows, Internet Explorer 11

Hey folks, the Adobe Animate Export to Canvas has changed slightly over the last version.  It seems that MovieClips are wrapped in MovieClips and when you run these from Animate it all seems to work - but if you instantiate the outer clip with code, going to the labels are not working in the default "independent" mode.  If that is changed to "synched" in the exported code then it works.  If you need the full files I can send them. (Not my code - just passing the issue along).  Thanks!

```
(lib.BoyMC = function(mode,startPosition,loop) {
if (loop == null) { loop = false; }	this.initialize(mode,startPosition,loop,{sad:0,happy:29});

	// timeline functions:
	this.frame_0 = function() {
		this.stop();
	}
	this.frame_29 = function() {
		this.stop();
	}
	this.frame_59 = function() {
		this.___loopingOver___ = true;
	}

	// actions tween:
	this.timeline.addTween(cjs.Tween.get(this).call(this.frame_0).wait(29).call(this.frame_29).wait(30).call(this.frame_59).wait(1));

	// Layer_1_obj_

	/////this is original code that has been replaced////
	////////////////////////////////////////////////
	//this.Layer_1 = new lib.Boy_Layer_1();
	////////////////////////////////////////////////

	this.Layer_1 = new lib.Boy_Layer_1("synched"); // it all works now
	
	this.Layer_1.name = "Layer_1";
	this.Layer_1.parent = this;
	this.Layer_1.setTransform(200,199.5,1,1,0,0,0,200,199.5);
	this.Layer_1.depth = 0;
	this.Layer_1.isAttachedToCamera = 0
	this.Layer_1.isAttachedToMask = 0
	this.Layer_1.layerDepth = 0
	this.Layer_1.layerIndex = 0
	this.Layer_1.maskLayerName = 0

	this.timeline.addTween(cjs.Tween.get(this.Layer_1).wait(60));

}).prototype = p = new cjs.MovieClip();
p.nominalBounds = new cjs.Rectangle(0,0,400,400);
```

Then in our script we might have:

```
var boy = new lib.BoyMC();
stage.addChild(boy);
boy.gotoAndPlay("happy"); // does not work unless we make the change
```
Hey folks - does compositeOperation work on StageGL?  I can't seem to get it working.  It might be related to https://github.com/CreateJS/EaselJS/issues/943.

https://www.createjs.com/docs/easeljs/classes/MovieClip.html#property_timeline

Shows mc.gotoAndPlay("start") but the label defined up top is called myLabel.  So one needs to be changed to the other... I think.
### TODO
- [ ] Is this a question or bug? [Stack Overflow](https://stackoverflow.com/questions/tagged/createjs) is a much better place to ask any questions you may have.

- [x] Did you search the [issues](https://github.com/CreateJS/EaselJS/issues) to see if someone else has already reported your issue? If yes, please add more details if you have any!

- [ ] If you're using an older [version](https://github.com/CreateJS/EaselJS/blob/master/VERSIONS.txt), have you tried the latest?

- [ ] If you're requesting a new feature; provide as many details as you can. Why do you want this feature? Do you have ideas for how this feature should be implemented? Pseudocode is always welcome!


### Issue Details
* Version used (Ex; 1.0): 

EaselJS 1.0.0

* Describe whats happening (Include any relevant console errors, a [Gist](https://gist.github.com/) is preferred for longer errors):

I'm not sure if this is specifially with "imageSmoothingEnabled" or if it's an issue with "snapToPixelEnabled," but as you can see in [this video](https://youtu.be/ljwTKE-QhZ0), using the browser to scale up and down works great, however when I input a scaleX or scaleY it fails. Previously I had used bitmaps for every tile, but I recently switched over to a SpriteSheet & Sprites. It worked perfectly with bitmaps, but it does not work at all with sprites (you can see it gets blurry).


* OS & Browser version *(Please be specific)* (Ex; Windows 10 Home, Chrome 62.0.3202.94):

Microsoft Edge | 75.0.139.1Â (Official build)Â devÂ (64-bit)
Windows 10 OS Version 1809 (Build 17763.437)
(Issue persits in Google Chrome)
Google Chrome | 73.0.3683.103Â (Official Build)Â (64-bit)Â (cohort: Stable)


* Do you know of any workarounds?

Nope, not other than literally scaling/resizing the canvas itself by either zooming or setting its width and height using CSS.


* Provide any extra details that will help us fix your issue. Including a link to a [CodePen.io](https://codepen.io) or [JSFiddle.net](https://jsfiddle.net) example that shows the issue in isolation will greatly increase the chance of getting a quick response.

Unfortunately I can't really provide an example code, just the MP4.