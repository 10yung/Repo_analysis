None
Same as: https://github.com/arangodb/arangodb/pull/10919
Make the react proxy work with test files and not fully build files. 
None
None
__Affected feature__:
Installation + Onboarding

__Size of your Dataset on disk__:
Unknown and variable startup prototype(s)

__Replication Factor & Number of Shards (Cluster only)__:
Unknown but HA is critical for a startups

## Steps to reproduce

1. Try to use arangodb
2. You need to manage servers
3. Try ArangoDB Oasis
4. You need to specify a fixed capacity

__Problem__:
It's hard to get started with ArangoDB for startups because the current solution requires you to guess your capacity needs in advance, run that capacity 24/7 and manually monitor the usage and manually jump through a bunch of hoops to scale the capacity up and down. 

We like the AQL and the technology but the scaling and management is a hassle which prevents us from focusing on our customers, so we would not use Oasis now because we can just use Terraform or AWS Marketplace ... [Oasis page](https://www.arangodb.com/docs/stable/oasis/getting-started.html#in-the-configuration-section) says "managed service" but does not manage the hardest part (scaling) ! 

We would definitely use ArangoDB Oasis if there were a **serverless option with on-demand pricing** like [Amazon DynamoDB On Demand Capacity](https://aws.amazon.com/dynamodb/pricing/on-demand/) or [Microsoft Azure CosmosDB Autopilot](https://azure.microsoft.com/en-us/pricing/details/cosmos-db/) because then we could waste less energy and money for little prototypes while also scaling automatically. 

__Expected result__:
Go to ArangoDB site
Sign up + provide credit card number
Make a graph + get an endpoint & credentials
Pay for what we use

TLDR No one has a great serverless graph database and many customers would use and benefit from an ArangoDB Serverless pricing+scaling option. Can you please manage autoscaling for customers with a more fine-grained pricing model? Then the financial and environmental cost of high availability can be spread across many customers and customers can get started more easily 


## My Environment

* __ArangoDB Version__:        3.60
* __Storage Engine__:             RocksDB
* __Deployment Mode__:       Single Server
* __Deployment Strategy__:   Manual Start
* __Configuration__:               N/A
* __Infrastructure__:               Own
* __Operating System__:        MacOS 10.14.5
* __Total RAM in your machine__:        16GB
* __Disks in use__:        SSD
* __Used Package__:           

## Component, Query & Data

__Affected feature__: Arango Search View

The following hangs and cannot be killed and continues to consume a lot of CPU (the collection has only two records).

```
FOR x IN `test-view`
LIMIT 5
SORT x.`_id`

LET y = ( 
    RETURN { 
      values: x
    } 
) 

RETURN y[0]
```

It works when I return `y` instead of `y[0]`

```
FOR x IN `test-view`
LIMIT 5
SORT x.`_id`

LET y = ( 
    RETURN { 
      values: x
    } 
) 

RETURN y
```

I can return `y[0]` without a `SORT`.

```
FOR x IN `test-view`
LIMIT 5

LET y = ( 
    RETURN { 
      values: x
    } 
) 

RETURN y[0]
```

I can return `y[0]` with a `SORT` if I bypass the view and go straight to the underlying collection.

```
FOR x IN `test`
LIMIT 5
SORT x.`_id`

LET y = ( 
    RETURN { 
      values: x
    } 
) 

RETURN y[0]
```


I crteated the collection and view as follows:

```
db.test.drop()
db._create("test")
db.test.save({ "id": "1", "visits": [{ "city": "Toronto", "country": "Canada" }, { "city": "Vancouver", "country": "Canada" }, { "city": "Paris", "country": "France" }, { "city": "Paris", "country": "Canada" }] })
db.test.save({ "id": "2", "visits": [{ "city": "Paris", "country": "France" }, { "city": "Toronto", "country": "Canada" }] })
db._createView("test-view", "arangosearch", {links: {test: {includeAllFields: true}}})
```


Backport of https://github.com/arangodb/arangodb/pull/10905.
### Scope & Purpose

Fix edge case in VelocyPack when the padding of a 1-byte offsetSize array is removed but the first few entries of the array contain a Slice of type None.

- [ ] Bug-Fix for *devel-branch* (i.e. no need for backports?)
- [x] Bug-Fix for a *released version* (did you remember to port this to all relevant release branches?)
- [x] The behavior in this PR can be (and was) *manually tested* (support / qa / customers can test it)
- [x] The behavior change can be verified via automatic tests

### Testing & Verification

- [x] There are tests in an external testing repository: arangodb/velocypack
- [x] I ensured this code runs with ASan / TSan or other static verification tools

http://172.16.10.101:8080/view/PR/job/arangodb-matrix-pr/8076/
