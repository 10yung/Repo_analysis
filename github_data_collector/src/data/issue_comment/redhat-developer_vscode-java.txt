try paste this into a string, i.e. between two quotes "":

```
SELECT payment_date, amount, sum(amount) OVER (ORDER BY payment_date)
FROM (
  SELECT CAST(payment_date AS DATE) AS payment_date, SUM(amount) AS amount
  FROM payment
  GROUP BY CAST(payment_date AS DATE)
) p
ORDER BY payment_date;
```

in eclipse it becomes a valid java string in vscode it generates non-compilable code.

Would be great if vscode could help here :)

I created a multi-module Maven project and tried to open the root folder in Visual Studio Code. When I try to work with any of the sub-modules, I do not get any linting, formatting, refactoring, etc... I tried `Add Folder to Java Source Path` but that does not work either. I have no issues working with this project in other IDE's, including Eclipse.
 
##### Environment
- Operating System: Windows 10
- JDK version: 1.8.0.201
- Visual Studio Code version: 1.14.1
- Java extension version: 0.55.1

##### Steps To Reproduce
1. Clone example project:
```bash
git clone https://github.com/hashdelta/stix-pattern-evaluator-examples.git
cd stix-pattern-evaluator-examples
git checkout develop
```

2. Open project in VSCode

##### Current Result
The plugin does not recognize the children modules, thus does not provide any kind of Java semantics support - no linting, formatting, refactoring, etc...

##### Expected Result
You should be able to get semantics support for any Java class when you open the parent. It should be one cohesive project.

##### Additional Informations
The only way to work with the sub modules is by opening the module in its own VSCode instance. This does not work for me, as one of my projects consists of over 20+ modules.

I have verified in Eclipse, NetBeans, and IntelliJ that the GitHub project has no issues.
I often want to view the Javadoc in the browser for easier reading, or to read package/module documentation (which afaik isn't easily viewable somehow inside VS Code).

##### Environment
- Operating System: Windows 10
- JDK version: 13.0.1
- Visual Studio Code version: 1.41.1
- Java extension version: 0.55.1

##### Steps To Reproduce
option 1:
1. hover over an element

option 2:
1. trigger autocompletion for an elemention

##### Current Result
option 1:
![image](https://user-images.githubusercontent.com/15714253/72629102-ebd49a80-394f-11ea-83aa-b47fd2f0f9b1.png)

option 2:
![image](https://user-images.githubusercontent.com/15714253/72629205-21798380-3950-11ea-81e4-f932263f7386.png)

##### Expected Result
I'd like for the pop-up dialogs to have an icon which opens the Javadoc of the element in the default browser. I'd already be very happy if this would work for just JDK classes, but ideally this would also work for Maven dependencies.

When moving a class, an error message appears when the target already exists:
![image](https://user-images.githubusercontent.com/16755094/72590189-20d4f300-3938-11ea-8817-87cf74da4a34.png)

Users have to expand to see the real error, and reading the exception is painful.

In this case, a clearer error message could be provided. @testforstephen could you help improve that?
to fix #1236 , limit the searching scope to each workspace root folder


Every time I generate a new class in java, the default javadoc is just a repeated of the class name:
```java
/**
 * NewClass
 */
public class NewClass {

}
```
Can I change this value, e.g. author name
```java
/**
 * @author <author_name>
 */
public class NewClass {

}
```
or completely remove it?

Thank you for your time!
We are running this extension in Gitpod and users start reporting crashes with https://github.com/gitpod-io/gitpod/issues/1073 While trying to investigate we could not find any traces of the extension logging errors during the incident. It only helped to ask a user to enable verbose tracing. 

Would it be possible to use [Window.logMessage](https://microsoft.github.io/language-server-protocol/specifications/specification-current/#window_logMessage) LSP api to log errors always? It would help with diagnostic, probably revealing the output view with an error in the case of a crash would be good too.

At the end a user figured out that an error was: `Error opening zip file or JAR manifest missing : /tmp/vscode-extensions/GabrielBB.vscode-lombok@0.9.9/extension//server/lombok.jar`

Although he does not seem to install such extension in the workspace: https://github.com/gitpod-io/gitpod/issues/1073#issuecomment-575138552

What could be the reason for that? Does java extension automatically expect lombok extension to be installed if a project makes use of lombok?
All code completion, suggestions, definition inspections, etc. are not working because the Java Language Server is returning an empty response on all requests. Important to note is that I'm using VS Code Remote with WSL.

I'm not sure if the problem lies in the extension or the LS. If it becomes obvious that the problem is in the server, I will create a ticket in that repository.

##### Environment
- Operating System: Windows 10 (1903) in combination with WSL 1.0 Ubuntu 18.04.3
- JDK version: 11.0.5 (installed in WSL)
- Visual Studio Code version: 1.41.1
- Java extension version: 0.8.1

##### Steps To Reproduce
1. Create a simple Java file in WSL
2. Open VS Code with the remote extension connected to WSL
3. Open the Java file in VS Code remote
4. Begin typing any Java code, or hover over any existing Java code

##### Current Result
In the case of autocompletion, no suggestions in the context of Java code is given. In the case of definition dialogs, these are not even shown. There is no response from VS Code whatsoever.

##### Expected Result
Autocompletion fields with Java related code is shown; information dialogs when hovering over existing classes is presented. Just generally everything that is shown in the Features GIF in the README.

##### Additional Informations
The Java Runtime is set to the `JDK_HOME` path as set in WSL, and it looks like the extension can find and use the runtime.

The (simple) Java project that I'm using for this ticket is the Apache Flink tutorial project (which can be found [here](https://ci.apache.org/projects/flink/flink-docs-release-1.8/tutorials/datastream_api.html)). When using the completed code as a reference, one would assume that hovering over simple stuff like `StreamExecutionEnvironment` would show a definition. Or on a newline start typing `Math.` would show an autocomplete field with `Math` methods. However, nothing is shown. When I turn on message tracing between the extension and the LS, I can see that requests are made for every action, but on almost all actions the server returns an empty response.

For example, here is a snippet of several actions:

```
[Trace - 3:54:12 PM] Sending request 'java/findLinks - (38)'.
Params: {
    "type": "superImplementation",
    "position": {
        "textDocument": {
            "uri": "file:///home/tt/flink-wiki-tutorial/wiki-edits/src/main/java/wikiedits/WikipediaAnalysis.java"
        },
        "position": {
            "line": 10,
            "character": 27
        }
    }
}


[Trace - 3:54:12 PM] Received response 'java/findLinks - (38)' in 4ms.
Result: []


[Trace - 3:54:12 PM] Sending request 'textDocument/documentHighlight - (39)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tt/flink-wiki-tutorial/wiki-edits/src/main/java/wikiedits/WikipediaAnalysis.java"
    },
    "position": {
        "line": 10,
        "character": 28
    }
}


[Trace - 3:54:12 PM] Received response 'textDocument/documentHighlight - (39)' in 3ms.
Result: []


[Trace - 3:54:12 PM] Sending request 'textDocument/codeAction - (40)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tt/flink-wiki-tutorial/wiki-edits/src/main/java/wikiedits/WikipediaAnalysis.java"
    },
    "range": {
        "start": {
            "line": 10,
            "character": 28
        },
        "end": {
            "line": 10,
            "character": 28
        }
    },
    "context": {
        "diagnostics": []
    }
}


[Trace - 3:54:12 PM] Received response 'textDocument/codeAction - (40)' in 3ms.
Result: []


[Trace - 4:06:35 PM] Sending request 'textDocument/codeAction - (41)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tt/flink-wiki-tutorial/wiki-edits/src/main/java/wikiedits/WikipediaAnalysis.java"
    },
    "range": {
        "start": {
            "line": 16,
            "character": 24
        },
        "end": {
            "line": 16,
            "character": 24
        }
    },
    "context": {
        "diagnostics": []
    }
}


[Trace - 4:06:35 PM] Received response 'textDocument/codeAction - (41)' in 4ms.
Result: []


[Trace - 4:11:10 PM] Sending request 'textDocument/codeAction - (42)'.
Params: {
    "textDocument": {
        "uri": "file:///home/tt/flink-wiki-tutorial/wiki-edits/src/main/java/wikiedits/WikipediaAnalysis.java"
    },
    "range": {
        "start": {
            "line": 6,
            "character": 61
        },
        "end": {
            "line": 6,
            "character": 61
        }
    },
    "context": {
        "diagnostics": []
    }
}


[Trace - 4:11:10 PM] Received response 'textDocument/codeAction - (42)' in 5ms.
Result: []
```

**Edit:** I should note that I've also tried cleaning the LS workspace directory. Unfortunately, this did not solve my problems.
I would like to import all jar files into my vscode project classpath.
If I do this it works, but only for one library of course:

In my case I have almost 100 .jar files to import. If I put them in lib and put try this:
 `<classpathentry kind="lib" path="lib"/>`

Or this:

` <classpathentry kind="lib" path="lib/*.jar"/>`

Or this

`<classpathentry kind="lib" path="lib/*"/>`

Do not work

I also tried putting with changing the settings this way:
```
"java.project.referencedLibraries": [
   "lib/mylib/*.jar"
 ]
```
But it doesnt work either
Any idea?
[provide a description of the issue]

##### Environment
- Operating System:
- JDK version:1.8
- Visual Studio Code version:
- Java extension version:

##### Steps To Reproduce
1. [step 1]

create interface

public interface CustomerService {
    public void someProcess(int customerLevel);

}


2. [step 2]

implmentation 

public class CustomerServiceLogic implements CustomerService {

    @Override 
    public void someProcess(int customerLevel) {
        System.out.println("transaction start");
    }
}
[attach a sample project reproducing the error]
[attach logs](https://github.com/redhat-developer/vscode-java/wiki/Troubleshooting#enable-logging)

##### Current Result
 must override a superclass methodJava(67109487)
##### Expected Result
no warning
##### Additional Informations
