<!--
Please let us know what version of Moya you are using, so we can better pinpoint and/or solve your issue.

Please wrap code blocks in backticks, like so:

```swift
*your code goes here*
```

The code will automatically get its syntax highlighted, and doesn't need to be indented 4 spaces to be shown as code.

When referencing a dependency manager-related issue (think CocoaPods, Carthage, SwiftPM), please add its configuration file and version to the issue.
It would be helpful to put the contents in a code block too, using ```ruby for CocoaPods and ```swift for SwiftPM.

Also please make sure your title describes your problem well. Questions end with a question mark.
-->

I'm trying to install "Moya 14.0.0-beta.6" but failed all.
am I missing something? 

1st try -> Pod install â€¨
     ``` [!] CocoaPods could not find compatible versions for pod "Moya/RxSwift":  In Podfile: Moya/RxSwift (~> 14.0) ```

2nd try -> carthage update 
     ``` No available version for github "Moya/Moya" satisfies the requirement: ~> 14.0.0 ```

3rd try -> SPM
     ``` The package dependency graph can not be resolved; unable find any available tag for the following requirements:	https://github.com/Moya/Moya.git â€” 14.0.0..<15.0.0 ```
â€¨â€¨â€¨

Implements https://github.com/Moya/Moya/issues/1940 ðŸš€ 

To release you will have to use `swift run rocket version`.
Before releasing it will comment all the lines that contains `// dev`.

Possible next steps:
- Use rocket to generate the Moya docs website after the release
- Put danger on the `Package.swift` and make rocket comment it during the release

I've made few tries and looks working well, but I didn't really make a release, then I didn't use the `create_release` task, but the code is not changed then it should work 
<!--
Please let us know what version of Moya you are using, so we can better pinpoint and/or solve your issue.

Please wrap code blocks in backticks, like so:
can  support multi-requests
```swift
func request(_ targets: [Target], completion: @escaping Completions)
```

The code will automatically get its syntax highlighted, and doesn't need to be indented 4 spaces to be shown as code.

When referencing a dependency manager-related issue (think CocoaPods, Carthage, SwiftPM), please add its configuration file and version to the issue.
It would be helpful to put the contents in a code block too, using ```ruby for CocoaPods and ```swift for SwiftPM.

Also please make sure your title describes your problem well. Questions end with a question mark.
-->
<!--
Please let us know what version of Moya you are using, so we can better pinpoint and/or solve your issue.

Please wrap code blocks in backticks, like so:

```swift
*your code goes here*
```

The code will automatically get its syntax highlighted, and doesn't need to be indented 4 spaces to be shown as code.

When referencing a dependency manager-related issue (think CocoaPods, Carthage, SwiftPM), please add its configuration file and version to the issue.
It would be helpful to put the contents in a code block too, using ```ruby for CocoaPods and ```swift for SwiftPM.

Also please make sure your title describes your problem well. Questions end with a question mark.
-->

I try to upload image to the server.

multipart.
but I got a message(console log)

```swift
[boringssl_session_write] SSL_ERROR_SYSCALL(5): operation failed externally to the library
<1> HTTP load failed (error code: -998 [2:0])
```

```swift
  case .editChannel(_, let logo, let banner, let name, let desc):
            var multipartData = [MultipartFormData]()
            if let logoData = logo {
                let logoMultipartData = MultipartFormData(provider: .data(logoData),
                                                          name: "logo",
                                                          fileName: "logo1",
                                                          mimeType: "image/png")
                multipartData.append(logoMultipartData)
            }
            
            if let bannerData = banner {
                let bannerMultipartData = MultipartFormData(provider: .data(bannerData),
                                                            name: "banner",
                                                            fileName: "banner1",
                                                            mimeType: "image/png")
                multipartData.append(bannerMultipartData)
            }
            
            if let nameData = name.data(using: .utf8) {
                let nameMultipartData = MultipartFormData(provider: .data(nameData),
                                                          name: "name")
                multipartData.append(nameMultipartData)
            }
            
            if let descData = desc.data(using: .utf8) {
                let desMultipartData = MultipartFormData(provider: .data(descData),
                                                         name: "desc")
                multipartData.append(desMultipartData)
            }

            return .uploadMultipart(multipartData)
```

what am I do?

Thank you.
Targeting development 5.1 branch
* Updating and resolving conflicts of development-swift-5.1 with development.
* Improving the atomic code follow up of #1952 

cc @BasThomas 
<!--
Please let us know what version of Moya you are using, so we can better pinpoint and/or solve your issue.

Please wrap code blocks in backticks, like so:

```swift
*your code goes here*
```

The code will automatically get its syntax highlighted, and doesn't need to be indented 4 spaces to be shown as code.

When referencing a dependency manager-related issue (think CocoaPods, Carthage, SwiftPM), please add its configuration file and version to the issue.
It would be helpful to put the contents in a code block too, using ```ruby for CocoaPods and ```swift for SwiftPM.

Also please make sure your title describes your problem well. Questions end with a question mark.
-->

Added a resume download case.
This is used when canceling a download and resuming at a later time.

Usually, when using background download, all requests are terminated when a user kills the App. It is possible however, to resume download. When a request is canceled, a task resume data is returned in the error's user info for NSURLSessionDownloadTaskResumeData. Using this data, we can resume the download when the App restarts.

<!--
Thank you for contributing to Moya! ðŸ™Œ


Choosing a base branch:

  master: bug fixes, non breaking API changes, documentation fixes
  development: breaking changes, features for the next version


If your pull request fixes an issue, please reference the issue.
For example, when your pull request fixes issue 10, add the following line:

Fixes #10

This will make sure that when the pull request is merged, the issue will automatically be closed.

-->

Hi there,

I'm experiencing a crash when the app is built using Xcode default generated build configuration called Release, thus I think it may be related to the compiler optimizations.

This is the LLDB log:

```
TestSPM was compiled with optimization - stepping may behave oddly; variables may not be available.
* thread #1, queue = 'com.apple.main-thread', stop reason = EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
    frame #0: 0x000000010a8a6d38 TestSPM`method descriptor for Moya.MoyaProvider.inflightRequests.getter : Swift.Dictionary<Moya.Endpoint, Swift.Array<(Result.Result<Moya.Response, Moya.MoyaError>) -> ()>> + 52
  * frame #1: 0x000000010a82ad76 TestSPM`MoyaProvider.requestNormal(target=<no summary available>, callbackQueue=nil, progress=nil, completion=0x000000010a821590 TestSPM`closure #1 (Result.Result<Moya.Response, Moya.MoyaError>) -> () in TestSPM.AppDelegate.application(_: __C.UIApplication, didFinishLaunchingWithOptions: Swift.Optional<Swift.Dictionary<__C.UIApplicationLaunchOptionsKey, Any>>) -> Swift.Bool at AppDelegate.swift:18, self=<no summary available>) at MoyaProvider+Internal.swift:24:29 [opt]
    frame #2: 0x000000010a831aa4 TestSPM`MoyaProvider.request(target=<no summary available>, callbackQueue=nil, progress=nil, completion=0x000000010a821590 TestSPM`closure #1 (Result.Result<Moya.Response, Moya.MoyaError>) -> () in TestSPM.AppDelegate.application(_: __C.UIApplication, didFinishLaunchingWithOptions: Swift.Optional<Swift.Dictionary<__C.UIApplicationLaunchOptionsKey, Any>>) -> Swift.Bool at AppDelegate.swift:18, self=<no summary available>) at MoyaProvider.swift:124:16 [opt]
    frame #3: 0x000000010a821e6d TestSPM`specialized AppDelegate.application(_:didFinishLaunchingWithOptions:) at AppDelegate.swift:18:32 [opt]
    frame #4: 0x000000010a821785 TestSPM`@objc AppDelegate.application(_:didFinishLaunchingWithOptions:) [inlined] TestSPM.AppDelegate.application(_: __C.UIApplication, didFinishLaunchingWithOptions: Swift.Optional<Swift.Dictionary<__C.UIApplicationLaunchOptionsKey, Any>>) -> Swift.Bool at <compiler-generated>:0 [opt]
    frame #5: 0x000000010a821780 TestSPM`@objc AppDelegate.application(_:didFinishLaunchingWithOptions:) at <compiler-generated>:17 [opt]
    frame #6: 0x0000000118b8c788 UIKitCore`-[UIApplication _handleDelegateCallbacksWithOptions:isSuspended:restoreState:] + 232
    frame #7: 0x0000000118b8e197 UIKitCore`-[UIApplication _callInitializationDelegatesWithActions:forCanvas:payload:fromOriginatingProcess:] + 3980
    frame #8: 0x0000000118b93ce6 UIKitCore`-[UIApplication _runWithMainScene:transitionContext:completion:] + 1281
    frame #9: 0x00000001182ca402 UIKitCore`-[_UISceneLifecycleMultiplexer completeApplicationLaunchWithFBSScene:transitionContext:] + 179
    frame #10: 0x0000000118b90286 UIKitCore`-[UIApplication _compellApplicationLaunchToCompleteUnconditionally] + 59
    frame #11: 0x0000000118b90585 UIKitCore`-[UIApplication _run] + 754
    frame #12: 0x0000000118b95b48 UIKitCore`UIApplicationMain + 1621
    frame #13: 0x000000010a8219b2 TestSPM`main at AppDelegate.swift:13:7 [opt]
    frame #14: 0x000000010f8d4c25 libdyld.dylib`start + 1
    frame #15: 0x000000010f8d4c25 libdyld.dylib`start + 1
```

#### Steps to reproduce

* Create an empty iOS project (Single View Application)
* Add Moya (just the Moya target) as a dependency using SPM (using Xcode GUI), latest version up to the next major, currently 13.0.1
* Add a `TargetType` file and add some basic code as soon as possible, like, for example, the following in your `AppDelegate`'s `application(_:didFinishLaunchingWithOptions:)`
```swift
MoyaProvider<YourTargetType>().request(.yourEndpoint) { result in
    print(result)
}
```
* Edit your Run scheme to use Release build configuration instead of Debug one
* Run and wait for crash to happen

#### More info:
I'm using Xcode Version 11.2.1 (11B500).

I am available if any further clarifications are needed and take the chance to thank you for your great work!
Framework compiled with carthage seems not compatible with bitcode.

Deployment target in the build settings is macOS and bitcode options are not enable.

Can you help me with this issue ?
Currently we use a pretty naive removal of testing dependencies for SwiftPM by setting an environment variable. We should be able to use Rocket and update our `Rakefile` script to just remove testing dependencies on each release, and keep it in the development process thanks to that.

The idea came from this PR that I saw https://github.com/RxSwiftCommunity/RxOptional/pull/83, which sounds really amazing.

cc @f-meloni I know you wanted to play with Rocket here as well, maybe you would like to try this one out? 