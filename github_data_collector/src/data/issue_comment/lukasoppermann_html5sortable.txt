Originates from #519 

## Current behavior:
When `acceptFrom` is used, but no sortable with the selector can be found the sortable freezes.
**Needs validation:** This should be validated with an example on codepen.

**Desired behavior:**
1. Catch error from [isConnected](https://github.com/lukasoppermann/html5sortable/blob/master/src/isConnected.ts) and log to console.
2. Make sure the sortables work as if `acceptFrom` was not present
Sortable not working with iframes:

index.html

```html
<!doctype html>
<head>
	<meta charset="utf-8">
	<title>HTML5 Sortable library</title>
  <link rel="stylesheet" href="basscss.css">
  <script src="https://cdn.polyfill.io/v2/polyfill.min.js"></script>
  <script src="html5sortable.js"></script>
</head>
<body>

	<iframe src="frame.html" width="500" height="600" style="float:left"></iframe>

	<div style="width: 300px; float:left">
    <ul class="o-sortable list flex flex-column list-reset">
      <li class="p1 mb1 border border-white white bg-orange">Item 1</li>
      <li class="p1 mb1 border border-white white bg-orange">Item 2</li>
      <li class="p1 mb1 border border-white white bg-orange">Item 3</li>
    </ul>
  </div>

	<script>
	sortable('.o-sortable', {
		copy: true,
		forcePlaceholderSize: true,
		placeholderClass: 'ph-class',
		hoverClass: 'bg-maroon yellow'
	})
	</script>

</body>
```

frame.html

```html
<!doctype html>
<head>
	<meta charset="utf-8">
	<title>HTML5 Sortable library</title>
  <link rel="stylesheet" href="basscss.css">
  <script src="https://cdn.polyfill.io/v2/polyfill.min.js"></script>
  <script src="html5sortable.js"></script>
</head>
<body>

  <div>
    <ul class="o-sortable2 list flex flex-column list-reset">
      <li class="p1 mb1 border border-white white bg-orange">Item 1</li>
      <li class="p1 mb1 border border-white white bg-orange">Item 2</li>
      <li class="p1 mb1 border border-white white bg-orange">Item 3</li>
    </ul>
  </div>

  <script>
  sortable('.o-sortable2', {
    acceptFrom: '.o-sortable',
    forcePlaceholderSize: true,
    placeholderClass: 'ph-class',
    hoverClass: 'bg-maroon yellow'
  })
  </script>

</body>

```
### I'm opening this issue because:
I am experiencing an issue when dragging images in Firefox. After dragging is complete, I am redirected to URL of the image that was dragged. Works as expected in other browsers.

### supporting information:
- I use sortable version: 0.9.16
- I tested in the following browser (incl. versions): FF 71
- Windows, OS X/macOS, or Linux?: macOS 10.14.6

### How can the issue be reproduce the problem?
I can reproduce this problem given the following:

```
<ul class="sortable images-container" aria-dropeffect="move">
  <li class="uploaded" role="option" aria-grabbed="false">
    <img src="https://www.samplesite.com/image1.jpg" draggable="true">
  </li>
  <li class="uploaded" role="option" aria-grabbed="false">
    <img src="https://www.samplesite.com/image2.jpg" draggable="true">
  </li>
  <li class="uploaded" role="option" aria-grabbed="false">
    <img src="https://www.samplesite.com/image3.jpg" draggable="true">
  </li>
  <li class="uploaded" role="option" aria-grabbed="false">
    <img src="https://www.samplesite.com/image4.jpg" draggable="true">
  </li>
  <li class="uploaded" role="option" aria-grabbed="false">
    <img src="https://www.samplesite.com/image5.jpg" draggable="true">
  </li>
</ul>
```

Forgive me if this specific issue has already been brought up, but i was unable to find it, at least in open issues. Thank you.
Two listeners are added for 'dragenter'. 

One here
<pre>addEventListener(sortableElement, 'dragenter', function (e) {
              var target = getEventTarget(e);
              var sortableContainer = findSortable(target, e);
...
</pre>
and the second here
<pre>addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);</pre>

The callback is stored using the event name
<pre>element.addEventListener(eventName, callback);
store(element).setData("event" + eventName, callback);</pre>
which causes one to overwrite the other.

Now only one callback can be retrieved for removal
<pre>element.removeEventListener(eventName, store(element).getData("event" + eventName));
store(element).deleteData("event" + eventName);</pre>

A fix could be to remove this line altogether.
<pre>addEventListener(listItems.concat(sortableElement), 'dragenter', onDragOverEnter);</pre>
Dragging would still be caught by the 'dragover' event listener in the adjacent line. Is there a reason why we need both 'dragover' and 'dragenter'?


[See issue #512 for background](https://github.com/lukasoppermann/html5sortable/issues/512)
### I'm opening this issue because:
I used wrappers to group some elements, and wanted to re-order the wrappers.
css of `hoverClass` set in config would not show up since most of the time my cursor is on a child element.

It is probably result of this line,
https://github.com/lukasoppermann/html5sortable/blob/e8da2be1b7f571bcabfda4e1ffc32618c81c0240/docs/html5sortable.js#L642
the event.target from a child element will not match item

### supporting information:
- I use sortable version: v0.9.16
- I tested in the following browser (incl. versions): Google Chrome (74.0.3729.169)
- Windows, OS X/macOS, or Linux?: Windows

### How can the issue be reproduce the problem?
Wrap the list content text of the first example provided in a `<p>`, item no longer changes to maroon when hovered.

```
<ul class="ml4 js-sortable sortable list flex flex-column list-reset">
    <li class="mb1 navy bg-yellow" style="position: relative; z-index: 10"><p class="mb0 p1">Item 1</p></li>
    <li class="mb1 navy bg-yellow" style="position: relative; z-index: 10"><p class="mb0 p1">Item 2</p></li>
    <li class="mb1 navy bg-yellow" style="position: relative; z-index: 10"><p class="mb0 p1">Item 3</p></li>
    <li class="mb1 navy bg-yellow" style="position: relative; z-index: 10"><p class="mb0 p1">Item 4</p></li>
    <li class="mb1 navy bg-yellow" style="position: relative; z-index: 10"><p class="mb0 p1">Item 5</p></li>
    <li class="mb1 navy bg-yellow" style="position: relative; z-index: 10"><p class="mb0 p1">Item 6</p></li>
</ul>
```


As a quick fix I modified the html5sortable.js, adding a class to all sortable-list
```
// property to define as sortable
sortableElement.isSortable = true;
sortableElement.classList.add("isSortable");
```
then check if the event.target a descendant of item and if they share the same parent sortable-list
```
if (!item.contains(event.target) || item.closest(".isSortable") !== event.target.closest(".isSortable")) {
    (_a = item.classList).remove.apply(_a, hoverClasses_1);
}
```
Hope this would be helpful, not sure if this will cause any conflicts.
### I'm opening this issue because:

### supporting information:
- I use sortable version:
- I tested in the following browser (incl. versions):
- Windows, OS X/macOS, or Linux?:

### How can the issue be reproduce the problem?
Please add a complete description of how to reproduce the problem.

### Thank you for contributing!
- Please make sure your contribution is in line with the contribution guidelines: 
  https://github.com/lukasoppermann/html5sortable/blob/master/CONTRIBUTING.md

- Participation in this open source project is subject to the Code of Conduct:
  https://github.com/lukasoppermann/html5sortable/blob/master/CODE_OF_CONDUCT.md

Before creating a feature requests, please review the existing feature requests and make sure there isn't one that already describes the feature you are missing:
https://github.com/lukasoppermann/html5sortable/issues?q=is%3Aopen+is%3Aissue+label%3Afeature

#### What's the feature?

#### What problem is the feature intended to solve?

#### Is this feature similar to an existing feature in another project?

In an iFrame with web security flags turned on, the `dragover` event never fires thereby breaking the drag and drop feature of html5sortable.  Apparently the web security settings do this to prevent dragging and dropping content outside the bounds of the iFrame.  Unfortunately I don't have control over the iFrame since that iFrame and the security settings applied to it are controlled by Twitch and my code, a Twitch extension, runs in that iFrame they provide and launch with my page content as the URL source for the iFrame.

Is there a way to fix this, perhaps a workaround involving using some other technique or event that would not conflict with the iFrame's web security settings?
### I'm opening this issue because: improve drag element

### supporting information:
- I use sortable version: 0.9.8
- I tested in the following browser (incl. versions): chrome 72.0.3626.109 (64bit)
- Windows, OS X/macOS, or Linux?: OS X/macOS

The current code uses height values ​​even when moving left and right

and it should be drag over half of element's height

```
// To avoid flicker, determine where to position the placeholder
// based on where the mouse pointer is relative to the elements
// vertical center.
var placeAfter = false;
try {
    var elementMiddle = offset(element).top + element.offsetHeight / 2;
    placeAfter = pageY >= elementMiddle;
}
catch (e) {
    placeAfter = placeholderIndex < thisIndex;
}
if (placeAfter) {
    insertAfter(element, store(sortableElement).placeholder);
} else {
    insertBefore(element, store(sortableElement).placeholder);
}       
```

How about improving drag like this?

if you just get in the rectangle and try to respond.

This way, it does not matter whether you move it to the left or right.

This will help in natural movement for sort

```
// prevY, prevX global
var prevY = 0;
var prevX = 0;
// ...
try {
    placeAfter = (1 >= (prevY - offset(element).top) * (pageY - offset(element).top))
    || (1 >= (prevX - offset(element).left) * (pageX - offset(element).left));
    prevY = pageY;
    prevX = pageX;
}
catch (e) {
    placeAfter = placeholderIndex < thisIndex;
}
if (placeAfter) {
    insertAfter(element, store(sortableElement).placeholder);
} else {
    insertBefore(element, store(sortableElement).placeholder);
}
```

Maybe, adding this way as an argument would be nice
```
// like this
sortable('#some-sortable", {method: halfOfHeight});
sortable('#some-sortable", {method: Rectangle});
```

Thanks for using a good library 👍 


Built a drag and drop webpage builder where users can drag and drop elements onto a template, they can also add a youtube video as a video background. 

Bug

If a user loads a background video before dragging and dropping anything in to the page, this stops the users from being able to add from the drag and drop elements from html5Sortable.  The page does not crash. This has only happened in the latest version of Chrome. All other browsers if works as expected. 

https://codepen.io/TerabitPaul/pen/jXzMOO
### I'm opening this issue because:
- disabled items should never be draggable and sortable

### supporting information:
- I use sortable version: _latest version_
- I tested in the following browser (incl. versions): _Chrome_
- Windows, OS X/macOS, or Linux?: _Windows_

### How can the issue be reproduce the problem?
Steps to reproduce:
- Navigate [to the examples page](https://lukasoppermann.github.io/html5sortable/index.html)
- Go to the third example of *Exclude Items*
- The positive test works - Try dragging the normal enabled list items a few times 
- The negative test fails - Try dragging the disabled item - you can drag it by hard holding the mouse on the item and slightly dragging it left or right - then you can place it anywhere before or after other items
- When you try to drag the disabled item - it allows you to thus drag and move / reorder the item - which as per definition *should not be draggable*

### Thank you for contributing!
- Please make sure your contribution is in line with the contribution guidelines: 
  https://github.com/lukasoppermann/html5sortable/blob/master/CONTRIBUTING.md

- Participation in this open source project is subject to the Code of Conduct:
  https://github.com/lukasoppermann/html5sortable/blob/master/CODE_OF_CONDUCT.md

Before creating a feature requests, please review the existing feature requests and make sure there isn't one that already describes the feature you are missing:
https://github.com/lukasoppermann/html5sortable/issues?q=is%3Aopen+is%3Aissue+label%3Afeature

#### What's the feature?

#### What problem is the feature intended to solve?

#### Is this feature similar to an existing feature in another project?
