In the unreleased modern-base stylesheet, there are [rules to normalize the behavior of replaced elements](https://github.com/sindresorhus/modern-normalize/blob/e811a7e61cea17589f7668335b9edd1f03662fb2/modern-base.css#L124-L140) like `img`, `video`. `svg`, `iframe`, `canvas` and `audio`. According to the [related issue of normalize.css](https://github.com/necolas/normalize.css/pull/166), one of the reasons behind not adopting these rules is that it can "trigger certain bugs in IE 8", which modern-normalize doesn't support.

On the other hand, I would be interested in use-cases where applying `max-width: 100%` causes undesired behavior for replaced elements.
when you have something like `overflow: auto;`, on desktop browsers and Android the scroll is natural. Only on iOS it stops scrolling immediately when you release your finger. According to [mdn](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-overflow-scrolling), `-webkit-overflow-scrolling` is not standard so I feel like this is a missing default feature on iOS.

https://www.zachleat.com/web/font-smooth/
http://usabilitypost.com/2012/11/05/stop-fixing-font-smoothing/

While it can be used to manually fix some light text on dark backgrounds on Macs, it should't be used on the entire page. It often leads to overly thin text with smaller weights, such as this example:

![image](https://user-images.githubusercontent.com/2827047/36073809-ce1130e8-0f36-11e8-8073-c79f87f87ebf.png)

If you look at how DirectWrite and Cocoa work on Windows and Mac native elements, they use subpixel AA on normal DPI screens, and default to greyscale on high DPI screens. The same is true with Chrome, which disable subpixel AA when the device DPR is over 2.  
Twitter did a similar thing on their site:

```css
@media screen and (-webkit-min-device-pixel-ratio: 2), screen and (min-resolution: 2dppx) {
	body {
		-moz-osx-font-smoothing: grayscale;
		-webkit-font-smoothing: antialiased;
	}
}
```
While `modern-normalize.css` is great for ensuring consistency, the default browser styles are not that nice. The goal of `modern-base.css` is to be a better base style that you use in addition to `modern-normalize.css`. This base can afford to be opinionated.

Happy to consider suggestions for what to include, but only essential things.
~[minireset.css](https://github.com/jgthms/minireset.css) is another solid alternative to normalize. I think you should consider adding a section that explains why users choose this one over minireset.~

We should add a comparison table to README to explain the differences over other projects, such as minireset.css, reboot.css and such.
Hey,
first of all, nice project.

I am just wonder why you set the line-height to 115% (https://github.com/sindresorhus/modern-normalize/blob/master/modern-normalize.css#L25)? Is it because the default leading for most browsers is between 110% to 120%?

The line height typically recommended in typography is 120â€“145%. Do you have a special reason? Otherwise I would recommend something like 130%, because it still looks nice, but greater leading is actually a good practise for accessibility. You could even go all the way up to 150% which is the recommended leading by the [W3C accessibility guidelines](https://www.w3.org/TR/UNDERSTANDING-WCAG20/visual-audio-contrast-visual-presentation.html).

I would think if we want to normalize, we could also try to normalize not just to the defaults, but also a little bit in the direction of an overall accessible web. Looking forward to your thoughts. ðŸ‘‹
The goal of this project is to make itself obsolete. We should try to get browsers to fix their own styles so we don't have to work around them indefinitely.

If you want to help out:
- Pick a style in [`modern-normalize.css`](https://github.com/sindresorhus/modern-normalize/blob/master/modern-normalize.css)
- Go to the relevant browser issue trackers ([Chrome](http://dev.chromium.org/for-testers/bug-reporting-guidelines), [Firefox](https://bugzilla.mozilla.org), [Safari](https://webkit.org/reporting-bugs/)), search for an existing issue, and if none, report it (Ensure you follow the guidelines for reporting).
- Comment here with a link to the issue so we can track it, even if it's an existing issue.