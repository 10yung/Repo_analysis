getAll()方法不支持，提示使用AllKeys(),值类型很难确定。怎样遍历获取mmkv文件里的所有数据，并且值类型正确
### The language of MMKV

> java



### The version of MMKV

>  api 'com.tencent:mmkv:1.0.23'



### The platform of MMKV

>  Android



### The installation of MMKV

> Maven



### What's the issue?

> java.lang.UnsatisfiedLinkError: dlopen failed: "/data/app/com.****.space-OSrY7iQtkxPEfoXOhymkrQ==/lib/arm/libc++_shared.so" has bad ELF magic
	at java.lang.Runtime.loadLibrary0(Runtime.java:1016)
	at java.lang.System.loadLibrary(System.java:1657)
	at com.tencent.mmkv.MMKV.a(SourceFile:1098)
	at com.***.space.core.BaseApplication.a(SourceFile:63)
	at com.***.space.ui.****SpaceApplication.a(SourceFile:105)
	at com.***.space.ui.****SpaceApplication.onCreate(SourceFile:88)
	at android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1124)
	at android.app.ActivityThread.handleBindApplication(ActivityThread.java:6004)
	at android.app.ActivityThread.-wrap1(Unknown Source:0)
	at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1813)
	at android.os.Handler.dispatchMessage(Handler.java:106)
	at android.os.Looper.loop(Looper.java:192)
	at android.app.ActivityThread.main(ActivityThread.java:6783)
	at java.lang.reflect.Method.invoke(Native Method)
	at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)
	at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:875)
 系统版本是8.1 这个只是一种一个 
      ndk {
            abiFilters "armeabi"
        }
bool MMKV::appendDataWithKey(const MMBuffer &data, const std::string &key)
//==========================
 writeAcutalSize(m_actualSize + size);
    m_output->writeString(key);
    m_output->writeData(data); // note: write size of data

    auto ptr = (uint8_t *) m_ptr + Fixed32Size + m_actualSize - size;
    if (m_crypter) {
        m_crypter->encrypt(ptr, ptr, size);
    }
    updateCRCDigest(ptr, size, KeepSequence);
//============================

如上段代码，写入顺序为：
1. 加锁
2. 写入文件新大小
3. 写入数据
4. 加密数据
5. 写入crc

是否应该调整为：
1. 拷贝数据到临时缓冲区
2. 加密数据
3. 加锁
4. 写入加密后的数据
5. 修改文件长度和crc

有几点好处：
1. 锁的范围最小
2. 在任何一步崩溃，不影响整个文件

还有一个疑问，如果磁盘满了，在哪一步捕捉错误：mmap？ 写入数据？