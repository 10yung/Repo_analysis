# ISSUE\_TEMPLATE

DBFlow Version: 4.2.4

Bug or Feature Request:

Description:
hi guys 
please help for this
i have a app that contain 5 modules that each module is standalone (development and usage),
each module contain its database and cipher with different cipher-key,
some modules database not encrypted.



DBFlow Version:
4.2.4
Bug or Feature Request:
feature
Description:
Wanna backup my db to google drive and restore from drive?

# ISSUE\_TEMPLATE

DBFlow Version: 4.1.2

Bug or Feature Request:
It is recommended: 
1.Sanitize the data before storing to the database, prefer using of character encoding 
2. Double up any single quotation marks appearing within user input before incorporating that input into a SQL query.
3. Using of parameterized queries with regular expression is recommended 
Description:
There is a potential risk that a Threat Actor can abuse this vulnerability to perform the SQL injection or database enumeration attacks leading information disclosure. 

Below files are affected:
com\raizlabs\android\dbflow\sql\language\BaseQueria ble.java com\raizlabs\android\dbflow\structure\database\Andro idDatabase.java com\raizlabs\android\dbflow\structure\database\Andro idDatabaseStatement.java com\raizlabs\android\dbflow\structure\database\Base DatabaseHelper.java 

![screen_shot_112](https://user-images.githubusercontent.com/58966092/70965767-dea95f00-20b6-11ea-8514-de59b80945b2.png)



Hi!
Is it possible to open sqlcipher database with custom parameters?

I want to use simple algorithms & I need to set some pragma keys:
PRAGMA cipher_default_kdf_algorithm = PBKDF2_HMAC_SHA1;
PRAGMA cipher_hmac_algorithm = HMAC_SHA1;

Thanks in advance!
DBFlow Version: 4.2.2
Getting nearest locations.

obtain a  Sentence for ordering by nearest latitude and longitude coordinates, by my location.

DBFlow Version: 4.2.4

Bug or Feature Request: Bug

Description:
I am getting reports of one of my migrations failing for a very small amount of users with an `SQLiteException` with the message `duplicate column name`. I know this is caused by a previous migration that was done wrong by me, so this in itself isn't the problem.

However, as far as I know the `AlterTableMigration` is meant to only add new columns if they don't exist yet, but apparently that isn't the case, since this exception is raised. So my assumption here is that the check for existing columns doesn't quite work. This is quite a problem for me because I wanted to eliminate these crashes by detecting the column existing before the migration is run using the same logic as the one in `AlterTableMigration` and resetting the app in that case. But since the check not working is the cause of this exception I can't work around it by using the check.

2/3 of the devices impacted by this issue are Android 4, but I also get reports from Android 5-9, so it isn't an exclusive 4 issue.

Stacktrace from one report:
```
Caused by android.database.sqlite.SQLiteException: duplicate column name: [column_name] (code 1): , while compiling: ALTER TABLE `[table_name]` ADD COLUMN `[column_name]` INTEGER
       at android.database.sqlite.SQLiteConnection.nativePrepareStatement(SQLiteConnection.java)
       at android.database.sqlite.SQLiteConnection.acquirePreparedStatement + 1113(SQLiteConnection.java:1113)
       at android.database.sqlite.SQLiteConnection.prepare + 686(SQLiteConnection.java:686)
       at android.database.sqlite.SQLiteSession.prepare + 588(SQLiteSession.java:588)
       at android.database.sqlite.SQLiteProgram.<init> + 58(SQLiteProgram.java:58)
       at android.database.sqlite.SQLiteStatement.<init> + 31(SQLiteStatement.java:31)
       at android.database.sqlite.SQLiteDatabase.executeSql + 1769(SQLiteDatabase.java:1769)
       at android.database.sqlite.SQLiteDatabase.execSQL + 1700(SQLiteDatabase.java:1700)
       at com.raizlabs.android.dbflow.structure.database.AndroidDatabase.execSQL + 26(AndroidDatabase.java:26)
       at com.raizlabs.android.dbflow.sql.migration.AlterTableMigration.migrate + 80(AlterTableMigration.java:80)
       at com.raizlabs.android.dbflow.structure.database.BaseDatabaseHelper.executeMigrations + 171(BaseDatabaseHelper.java:171)
       at com.raizlabs.android.dbflow.structure.database.BaseDatabaseHelper.onUpgrade + 56(BaseDatabaseHelper.java:56)
       at com.raizlabs.android.dbflow.structure.database.DatabaseHelperDelegate.onUpgrade + 79(DatabaseHelperDelegate.java:79)
       at com.raizlabs.android.dbflow.structure.database.FlowSQLiteOpenHelper.onUpgrade + 84(FlowSQLiteOpenHelper.java:84)
       at android.database.sqlite.SQLiteOpenHelper.getDatabaseLocked + 257(SQLiteOpenHelper.java:257)
       at android.database.sqlite.SQLiteOpenHelper.getWritableDatabase + 164(SQLiteOpenHelper.java:164)
       at com.raizlabs.android.dbflow.structure.database.FlowSQLiteOpenHelper.getDatabase + 62(FlowSQLiteOpenHelper.java:62)
       at com.raizlabs.android.dbflow.config.DatabaseDefinition.getWritableDatabase + 257(DatabaseDefinition.java:257)
       at com.raizlabs.android.dbflow.config.DatabaseDefinition.executeTransaction + 280(DatabaseDefinition.java:280)
       at com.raizlabs.android.dbflow.structure.database.transaction.Transaction.executeSync + 121(Transaction.java:121)
       at com.raizlabs.android.dbflow.structure.database.transaction.DefaultTransactionQueue.run + 54(DefaultTransactionQueue.java:54)
```
# ISSUE\_TEMPLATE

DBFlow Version:4.0.0-beta5

Bug or Feature Request:
 android.database.sqlite.SQLiteDatabaseLockedException: database is locked (code 5)
Description:

java.lang.RuntimeException:Unable to create application com.stub.StubApp: android.database.sqlite.SQLiteDatabaseLockedException: database is locked (code 5)
--
2 android.app.ActivityThread.handleBindApplication(ActivityThread.java:4730)
3 ......
4 Caused by:
5 android.database.sqlite.SQLiteDatabaseLockedException:database is locked (code 5)
6 android.database.sqlite.SQLiteConnection.nativeExecuteForLastInsertedRowId(Native Method)
7 android.database.sqlite.SQLiteConnection.executeForLastInsertedRowId(SQLiteConnection.java:782)
8 android.database.sqlite.SQLiteSession.executeForLastInsertedRowId(SQLiteSession.java:788)
9 android.database.sqlite.SQLiteStatement.executeInsert(SQLiteStatement.java:86)
10 android.database.sqlite.SQLiteDatabase.insertWithOnConflict(SQLiteDatabase.java:1471)
11 com.evernote.android.job.JobStorage.store(JobStorage.java)
12 com.evernote.android.job.JobStorage.put(JobStorage.java)
13 com.evernote.android.job.JobManager.schedule(JobManager.java)
14 com.evernote.android.job.JobRequest.schedule(JobRequest.java)
15 com.android.app.job.onetime.ParamsJob.scheduleJob(ParamsJob.java)
16 com.android.app.job.core.JobManagerProxy.scheduleJob(JobManagerProxy.java)
17 com.android.app.job.core.JobManagerProxy.scheduleJobs(JobManagerProxy.java)
18 com.android.app.App.onCreate(App.java)
19 com.taobao.sophix.a.c.b(Sophix)
20 com.taobao.sophix.a.e.a(Sophix)
21 com.taobao.sophix.SophixApplication.onCreate(Sophix)
22 com.stub.StubApp.onCreate(SourceFile:120)
23 android.app.Instrumentation.callApplicationOnCreate(Instrumentation.java:1015)
24 android.app.ActivityThread.handleBindApplication(ActivityThread.java:4727)
25 android.app.ActivityThread.access$1600(ActivityThread.java:165)
26 android.app.ActivityThread$H.handleMessage(ActivityThread.java:1474)
27 android.os.Handler.dispatchMessage(Handler.java:102)
28 android.os.Looper.loop(Looper.java:179)
29 android.app.ActivityThread.main(ActivityThread.java:5509)
30 java.lang.reflect.Method.invoke(Native Method)
31 java.lang.reflect.Method.invoke(Method.java:372)
32 com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:961)
33 com.android.internal.os.ZygoteInit.main(ZygoteInit.java:756)



# DB-Flow

DBFlow Version:  4.2.4

Bug or Feature Request: Bug

Description:

 Caused by: android.database.CursorWindowAllocationException: Cursor window allocation of 2048 kb failed. 
        at android.database.CursorWindow.<init>(CursorWindow.java:108)
        at android.database.AbstractWindowedCursor.clearOrCreateWindow(AbstractWindowedCursor.java:198)
        at android.database.sqlite.SQLiteCursor.fillWindow(SQLiteCursor.java:140)
        at android.database.sqlite.SQLiteCursor.getCount(SQLiteCursor.java:134)
        at android.database.AbstractCursor.moveToPosition(AbstractCursor.java:220)
        at android.database.AbstractCursor.moveToFirst(AbstractCursor.java:265)
        at android.database.CursorWrapper.moveToFirst(CursorWrapper.java:71)
        at com.raizlabs.android.dbflow.sql.queriable.SingleModelLoader.convertToData(SingleModelLoader.java:21)
        at com.raizlabs.android.dbflow.sql.queriable.SingleModelLoader.convertToData(SingleModelLoader.java:32)
        at com.raizlabs.android.dbflow.sql.queriable.ModelLoader.load(ModelLoader.java:72)
        at com.raizlabs.android.dbflow.sql.queriable.ModelLoader.load(ModelLoader.java:60)
        at com.raizlabs.android.dbflow.sql.queriable.ModelLoader.load(ModelLoader.java:53)
        at com.raizlabs.android.dbflow.sql.queriable.ModelLoader.load(ModelLoader.java:36)
        at com.raizlabs.android.dbflow.sql.language.BaseModelQueriable.querySingle(BaseModelQueriable.java:69)
        at com.raizlabs.android.dbflow.sql.language.Where.querySingle(Where.java:249)

# ISSUE\_TEMPLATE

DBFlow Version:

Bug or Feature Request:

Description:
I want to compare the start date and end date to add them to different arrays, i need to format the string to a date and then back again save them to a list<string>. I don't know how to get the init_date info from the table, format it and then save it to another array.

```
List<Events> eventlistI = SQLite.select(Events_Table.init_date).from(Events.class).queryList();
//        List<Events> eventlistE = SQLite.select(Events_Table.end_date).from(Events.class).queryList();

        int size = eventlistI.size();
        System.out.println(eventlistI.size());

        for (int i = 0; i < size; i++) {

            System.out.println(i);

            String s = String.valueOf(SQLite.select(Events_Table.init_date).from(Events.class).where(Events_Table.id.eq(i -1)));
```
DBFlow Version: 4.2.2

Description: 
In the sdk-library, I have a BaseData extends BaseModel, and in app dir, I write a Metadata extends BaseData, and starting build app ,it failed, can't genereate table by extending library's BaseData class ?

