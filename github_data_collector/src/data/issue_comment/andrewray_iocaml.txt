
Hi there,

I tried installing iocaml via opam (i.e. ` opam install iocaml`), but it failed

```
=-=- Gathering sources =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[iocaml] Archive in cache
[iocaml-kernel] Archive in cache

=-=- Processing actions -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[ERROR] The compilation of iocaml-kernel failed at "gmake all".
Processing  1/2: [iocaml-kernel: gmake uninstall]
#=== ERROR while installing iocaml-kernel.0.4.8 ===============================#
# opam-version 1.2.2
# os           freebsd
# command      gmake all
# path         /usr/home/foo/.opam/system/build/iocaml-kernel.0.4.8
# compiler     system (4.02.3)
# exit-code    2
# env-file     /usr/home/foo/.opam/system/build/iocaml-kernel.0.4.8/iocaml-kernel-54283-e7966f.env
# stdout-file  /usr/home/foo/.opam/system/build/iocaml-kernel.0.4.8/iocaml-kernel-54283-e7966f.out
# stderr-file  /usr/home/foo/.opam/system/build/iocaml-kernel.0.4.8/iocaml-kernel-54283-e7966f.err
### stdout ###
# atdgen -t Ipython_json.atd
# atdgen -j Ipython_json.atd
# ocamlfind c iocaml_zmq_stubs.c
### stderr ###
# iocaml_zmq_stubs.c:1:10: fatal error: 'zmq.h' file not found
# #include <zmq.h>
#          ^
# 1 error generated.
# gmake: *** [Makefile:10: stub] Fehler 2
```

Libzmq is installed and `zmq.h` can be found in the directory `/usr/local/include/`. This directory does not seem to get searched when running `ocamlfind c iocaml_zmq_stubs.c`. I haven't found any (quick) fix, otherwise I would have provided a patch/pull request. Thank you for providing an OCaml kernel for Jupyter and I hope this issues gets fixed.

Cheers,
tpltnt
The following error does not allow to install iocaml right now:

    [ERROR] curl: code 404 while downloading http://mjambon.com/releases/biniou/biniou-1.0.6.tar.gz

and in the end:

    [ERROR] The sources of the following couldn't be obtained, aborting:
              - biniou.1.0.6  
		(This may be fixed by running 'opam update')   

but of course it cannot be fixed because `http://mjambon.com/releases` is indeed 404.

As a quick fix (why not) I propose to not bind to that website but instead rewrite the dependency to take the releases from https://github.com/mjambon/biniou/releases

Please, fixing ASAP is much appreciated.. seems like a matter of changing 1 line  :)
```
opam install iocaml
Your request can't be satisfied:
  - conduit.0.13.0 is in conflict with lwt.3.0.0

No solution found, exiting
```
As promised, the first step in the master plan :P

One thing I'm not sure about is what to do about the custom top level. Jbuilder
hasn't gained the ability to create those yet but it seems like it's not
essential to go ahead with this port.
Last year you said you wanted to upgrade the server as well, but wouldn't it work fine to just have the server still use the old protocol (and the old version of the iocaml kernel)? It's only people using jupyter directly that need the new protocol anywayss
I am learning OCaml right now and using a Python notebook for that is awesome, thanks iocaml exists!, so if I am doing something stupid please tell me...

Installed a new ocaml/opam installation, created a new switch for iocaml:
```
opam switch -A 4.03.0 iocaml
eval `opam config env`
opam install iocaml
opam install core
```

To make sure everything is ok, I created a new virtualenv for Python and installed the _supported IPython_:

```
mkvirtualenv iocaml && pip install 'ipython[all]==1.1.0'
```

Followed the instructions at the [wiki](https://github.com/andrewray/iocaml/wiki/ipython_install) and tried the new kernel:

```
ipython notebook --profile=iocaml
```
It runs, it highlights, it evaluates my expressions, nice. Now, it doesn't load/require/use core or anything, so `#use "topfind"` results in 'File not found' error, so `#require "core"` is not going to work because `#require` is not recognised and `open Core.Std` is unbound...

Yes, I created an `~/.iocamlinit` file as suggested by #14 and it looks pretty much like this:

```
(* Added by OPAM. *)
let () =
  try Topdirs.dir_directory (Sys.getenv "OCAML_TOPLEVEL_PATH")
    with Not_found -> ()
    ;;
#use "topfind";;
#thread;;
#camlp4o;;
```

and no, it is not working.

What am I doing wrong?
Hi, I'm having issue installing `iocaml` on ubuntu 16.04:

```
$ opam install iocaml
The following actions will be performed:
  ‚àó  install iocaml 0.4.9

=-=- Gathering sources =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[default] https://opam.ocaml.org/archives/iocaml.0.4.9+opam.tar.gz downloaded

=-=- Processing actions -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
[ERROR] The compilation of iocaml failed at "make all".

#=== ERROR while installing iocaml.0.4.9 ======================================#
# opam-version 1.2.2
# os           linux
# command      make all
# path         /home/tim/.opam/system/build/iocaml.0.4.9
# compiler     system (4.02.3)
# exit-code    2
# env-file     /home/tim/.opam/system/build/iocaml.0.4.9/iocaml-28311-ad8886.env
# stdout-file  /home/tim/.opam/system/build/iocaml.0.4.9/iocaml-28311-ad8886.out
# stderr-file  /home/tim/.opam/system/build/iocaml.0.4.9/iocaml-28311-ad8886.err
### stdout ###
# [...]
# Error: This expression has type
#          int ->
#          Cohttp.Request.t ->
#          (unit -> Websocket_lwt.Frame.t Lwt.t) ->
#          (Websocket_lwt.Frame.t -> unit Lwt.t) -> unit Lwt.t
#        but an expression was expected of type
#          Websocket_lwt.Connected_client.t -> unit Lwt.t
#        Type int is not compatible with type Websocket_lwt.Connected_client.t 
# Command exited with code 2.
# makefile:13: recipe for target 'iocamlserver.byte' failed
### stderr ###
# make: *** [iocamlserver.byte] Error 10



=-=- Error report -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
The following actions failed
  ‚àó  install iocaml 0.4.9
No changes have been performed

```
I have just installed a binary of OPAM with the [official script](https://raw.githubusercontent.com/ocaml/opam/master/shell/opam_installer.sh) on Mac OS X Yosemite 10.10.5, XCode 7.2.1. Now, trying to install iocaml works fine until `make` fails on `ctypes`. Various errors follow. Relaunching the installation produces the following:

```text
MacBook-Air:~ username$ opam install iocaml
The following actions will be performed:
  ‚àó  install iocamljs-kernel 0.4.8            [required by iocaml]
  ‚àó  install ctypes          0.3.4            [required by iocaml]
  ‚àó  install iocaml-kernel   0.4.8            [required by iocaml]
  ‚àó  install iocaml          0.4.8
===== ‚àó  4 =====
Do you want to continue ? [Y/n] Y

=-=- Gathering sources =-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  üê´ 
[ctypes] Archive in cache
[iocaml] Archive in cache
[iocaml-kernel] Archive in cache
[iocamljs-kernel] Archive in cache

=-=- Processing actions -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  üê´ 
[ERROR] The compilation of iocamljs-kernel failed at "make clean min".
[ERROR] The compilation of ctypes failed at "make".
Processing  2/4: [ctypes: ocamlfind remove]
#=== ERROR while installing ctypes.0.3.4 ======================================#
# opam-version 1.2.2
# os           darwin
# command      make
# path         /Users/username/.opam/4.02.1/build/ctypes.0.3.4
# compiler     4.02.1
# exit-code    2
# env-file     /Users/username/.opam/4.02.1/build/ctypes.0.3.4/ctypes-92056-e7966f.env
# stdout-file  /Users/username/.opam/4.02.1/build/ctypes.0.3.4/ctypes-92056-e7966f.out
# stderr-file  /Users/username/.opam/4.02.1/build/ctypes.0.3.4/ctypes-92056-e7966f.err
### stdout ###
# [...]
# ocamlfind ocamlc -c -o _build/src/ctypes-foreign-base/libffi_abi.cmi    -I _build/src/ctypes-foreign-base  -I _build/src/ctypes src/ctypes-foreign-base/libffi_abi.mli
# ocamlfind ocamlc      -c -o _build/src/ctypes-foreign-base/libffi_abi.cmo -I _build/src/ctypes-foreign-base  -I _build/src/ctypes src/ctypes-foreign-base/libffi_abi.ml
# ocamlfind ocamlc -c -o _build/src/ctypes-foreign-base/weakRef.cmi    -I _build/src/ctypes-foreign-base  -I _build/src/ctypes src/ctypes-foreign-base/weakRef.mli
# ocamlfind ocamlc      -c -o _build/src/ctypes-foreign-base/weakRef.cmo -I _build/src/ctypes-foreign-base  -I _build/src/ctypes src/ctypes-foreign-base/weakRef.ml
# ocamlfind ocamlc -c -o _build/src/ctypes-foreign-base/ffi.cmi    -I _build/src/ctypes-foreign-base  -I _build/src/ctypes src/ctypes-foreign-base/ffi.mli
# ocamlfind ocamlc      -c -o _build/src/ctypes-foreign-base/ffi.cmo -I _build/src/ctypes-foreign-base  -I _build/src/ctypes src/ctypes-foreign-base/ffi.ml
# ocamlfind ocamlc      -c -o _build/src/ctypes-foreign-base/foreign_basis.cmo -I _build/src/ctypes-foreign-base  -I _build/src/ctypes src/ctypes-foreign-base/foreign_basis.ml
# ocamlfind ocamlc -a   -cclib -lctypes-foreign-base_stubs -dllib -lctypes-foreign-base_stubs   -o _build/ctypes-foreign-base.cma _build/src/ctypes-foreign-base/closure_properties.cmo _build/src/ctypes-foreign-base/dl.cmo _build/src/ctypes-foreign-base/ffi_stubs.cmo _build/src/ctypes-foreign-base/libffi_abi.cmo _build/src/ctypes-foreign-base/weakRef.cmo _build/src/ctypes-foreign-base/ffi.cmo _build/src/ctypes-foreign-base/foreign_basis.cmo 
# cd _build/src/ctypes-foreign-base && ocamlfind ocamlc -c -ccopt -fPIC -ccopt -Wall -ccopt -O3 -ccopt -I -ccopt /Users/username/src -ccopt -I -ccopt /Users/username/tests -o dl_stubs.o  /Users/username/.opam/4.02.1/build/ctypes.0.3.4/src/ctypes-foreign-base/dl_stubs.c
# cd _build/src/ctypes-foreign-base && ocamlfind ocamlc -c -ccopt -fPIC -ccopt -Wall -ccopt -O3 -ccopt -I -ccopt /Users/username/src -ccopt -I -ccopt /Users/username/tests -o ffi_call_stubs.o  /Users/username/.opam/4.02.1/build/ctypes.0.3.4/src/ctypes-foreign-base/ffi_call_stubs.c
### stderr ###
# /Users/username/.opam/4.02.1/build/ctypes.0.3.4/src/ctypes-foreign-base/ffi_call_stubs.c:21:10: fatal error: 'ffi.h' file not found
# #include <ffi.h>
#          ^
# 1 error generated.
# make: *** [_build/src/ctypes-foreign-base/ffi_call_stubs.o] Error 2


#=== ERROR while installing iocamljs-kernel.0.4.8 =============================#
# opam-version 1.2.2
# os           darwin
# command      make clean min
# path         /Users/username/.opam/4.02.1/build/iocamljs-kernel.0.4.8
# compiler     4.02.1
# exit-code    2
# env-file     /Users/username/.opam/4.02.1/build/iocamljs-kernel.0.4.8/iocamljs-kernel-92056-d8a4ae.env
# stdout-file  /Users/username/.opam/4.02.1/build/iocamljs-kernel.0.4.8/iocamljs-kernel-92056-d8a4ae.out
# stderr-file  /Users/username/.opam/4.02.1/build/iocamljs-kernel.0.4.8/iocamljs-kernel-92056-d8a4ae.err
### stdout ###
# rm -f *.cmis.js
# rm -f *.cm[ioa] iocaml_full.byte iocaml.byte iocaml.js 
# rm -fr *~
# ocamlfind ocamlc -c exec.mli
# ocamlfind ocamlc -c \
# 		-syntax camlp4o -package js_of_ocaml.syntax,optcomp \
# 		-package str,dynlink,js_of_ocaml,js_of_ocaml.compiler,js_of_ocaml.toplevel \
# 		-I /Users/username/.opam/4.02.1/lib/ocaml/compiler-libs \
# 		exec.ml
### stderr ###
# ocamlfind: Package `js_of_ocaml.toplevel' not found
# make: *** [exec.cmo] Error 2



=-=- Error report -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  üê´ 
The following actions were aborted
  ‚àó  install iocaml        0.4.8
  ‚àó  install iocaml-kernel 0.4.8
The following actions failed
  ‚àó  install ctypes          0.3.4
  ‚àó  install iocamljs-kernel 0.4.8
No changes have been performed

=-=- ctypes.0.3.4 troobleshooting -=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=  üê´ 
=> This package relies on external (system) dependencies that may be missing. `opam depext ctypes.0.3.4' may help you find the correct
   installation for your system.
MacBook-Air:~ username$ opam depext ctypes.0.3.4
# Detecting depexts using flags: x86_64 osx
# No extra OS packages requirements found.
```

Any help in solving this would be appreciate!
For example, `Core.Std.printf "Hello world"` results in `Error: Unbound module Core` as expected. However if I then do `#require "core.top"` and then rerun the above, I still get Unbound module Core.

If I restart iocaml and make sure to #require a package first, then it works fine.
