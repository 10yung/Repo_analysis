First of all, thank you for this great code, it is very useful. I wanted to point out a small bug however. Here's a MWE:

``` python
import fuckit
@fuckit
def tmp():
  (print(1), print(2), print(3))
  (print(1), print(a), print(3))
tmp()

1
2
3
1
```

The expected behavior is  that  the last `3` should have been printed. 
https://www.hillelwayne.com/post/divide-by-zero/

Everyone knows that a promise to fuckit when the code is done is worth more than fucking it now.<sup id="a1">[1](#f1)</sup> [The original JavaScript version](https://github.com/mattdiamond/fuckitjs#api) does things that way. Surely Python should be better than JavaScript, so I can write:

```
async def stuff():
    await fuckit('real_stuff')
    return real_stuff.do_it()
```

And yes, I realize that's a future, not a promise, but `fuckit('hoverboard')`, you know what I mean.

---

<sub><sup id="f0">[0](#a0)</sup> ... [but if you should fall...](http://www.metrolyrics.com/no-promises-lyrics-icehouse.html)</sub>

<sub><sup id="f1">[1](#a1)</sup> An acquaintance of mine says "That sentence is exactly why I no longer date fellow programmers", but I don't understand what she means.</sub>
