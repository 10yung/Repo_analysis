Isn't it better to use `rsync --append` to minimize writing ?

Updated the install instructions since the repo supports TLS
Hi,

I'm using Home Assistant and would like to include on the RamDisk another path than /var/log, in my case the Home Asistant db file which is in /config. Is that possible ?
Another question would be how to force dump the memory to disk from command line ?

Thanks for your help

Regards
V.
Systemd has timers which can be an alternative to cron jobs. Thoughts on moving to timers and no longer needing a dependency on cron?
When shutting down or rebooting a machine the log2ram service will sync logs before the  journald service has stopped, causing missed log messages and corrupted or uncleanly shut down errors next boot -

Last few lines that journald saves when log2ram is **not** used (order reversed):
>Jul 26 20:16:06 raspberrypi systemd-journald[103]: Journal stopped
Jul 26 20:16:06 raspberrypi systemd-shutdown[1]: Syncing filesystems and block devices.
Jul 26 20:16:05 raspberrypi kernel: systemd-shutdow: 39 output lines suppressed due to ratelimiting
Jul 26 20:16:05 raspberrypi systemd[1]: Failed to set timeout to 600s: Invalid argument
Jul 26 20:16:05 raspberrypi systemd[1]: Hardware watchdog 'Broadcom BCM2835 Watchdog timer', version 0
Jul 26 20:16:05 raspberrypi systemd[1]: Shutting down.

Last few lines with log2ram (order reversed):
>Jul 26 20:21:10 raspberrypi systemd[1]: systemd-ask-password-wall.path: Succeeded.
Jul 26 20:21:10 raspberrypi systemd[1]: Stopped Dispatch Password Requests to Console Directory Watch.
Jul 26 20:21:10 raspberrypi log2ram[1136]: wtmp
Jul 26 20:21:10 raspberrypi log2ram[1136]: log2ram.log
Jul 26 20:21:10 raspberrypi log2ram[1136]: sending incremental file list
Jul 26 20:21:10 raspberrypi systemd[1]: systemd-ask-password-console.path: Succeeded.
Jul 26 20:21:10 raspberrypi systemd[1]: Stopped target Local Encrypted Volumes.
Jul 26 20:21:10 raspberrypi systemd[1]: Stopping Load/Save Random Seed...
Jul 26 20:21:10 raspberrypi systemd[1]: Stopping Log2Ram...

Then `dmesg` shows these errors at next boot:
>[    9.927387] systemd[1]: Started Log2Ram.
[    9.935257] systemd[1]: Starting Journal Service...
[   10.245285] systemd[1]: Started Journal Service.
[   10.315507] systemd-journald[566]: Received request to flush runtime journal from PID 1
[   10.315898] systemd-journald[566]: File /var/log/journal/d44ed59bf19d41c3aa19611fee7fa666/system.journal corrupted or uncleanly shut down, renaming and replacing.
[   11.469025] random: crng init done
[   11.469041] random: 7 urandom warning(s) missed due to ratelimiting
[   13.751834] bcmgenet fd580000.genet eth0: Link is Up - 1Gbps/Full - flow control off
[   20.691192] systemd-journald[566]: File /var/log/journal/d44ed59bf19d41c3aa19611fee7fa666/user-1000.journal corrupted or uncleanly shut down, renaming and replacing.
I've had the log2ram script running for a few days and I'm concerned that the logs are not being written to /var/log/log2ram. I did modify the cronjob save daily instead of hourly. I used the command from the instructions: `sudo mv /etc/cron.hourly/log2ram.hourly /etc/cron.daily/log2ram.daily` but it said "log2ram.hourly" didn't exist, only "log2ram." So I used the mv command and added daily on the end of the file name.

I have verified that the log is created in ram:
pi@raspberrypi:~ $ df -h
Filesystem      Size  Used Avail Use% Mounted on
/dev/root        58G  1.4G   54G   3% /
devtmpfs        459M     0  459M   0% /dev
tmpfs           464M  3.4M  460M   1% /dev/shm
tmpfs           464M  6.2M  457M   2% /run
tmpfs           5.0M  4.0K  5.0M   1% /run/lock
tmpfs           464M     0  464M   0% /sys/fs/cgroup
/dev/mmcblk0p1   43M   23M   21M  53% /boot
log2ram         100M   24M   77M  24% /var/log
tmpfs            93M     0   93M   0% /run/user/999
tmpfs            93M     0   93M   0% /run/user/1000

pi@raspberrypi:~ $ mount
/dev/mmcblk0p2 on / type ext4 (rw,noatime)
devtmpfs on /dev type devtmpfs (rw,relatime,size=469540k,nr_inodes=117385,mode=755)
sysfs on /sys type sysfs (rw,nosuid,nodev,noexec,relatime)
proc on /proc type proc (rw,relatime)
tmpfs on /dev/shm type tmpfs (rw,nosuid,nodev)
devpts on /dev/pts type devpts (rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000)
tmpfs on /run type tmpfs (rw,nosuid,nodev,mode=755)
tmpfs on /run/lock type tmpfs (rw,nosuid,nodev,noexec,relatime,size=5120k)
tmpfs on /sys/fs/cgroup type tmpfs (ro,nosuid,nodev,noexec,mode=755)
cgroup on /sys/fs/cgroup/systemd type cgroup (rw,nosuid,nodev,noexec,relatime,xattr,release_agent=/lib/systemd/systemd-cgroups-agent,name=systemd)
cgroup on /sys/fs/cgroup/freezer type cgroup (rw,nosuid,nodev,noexec,relatime,freezer)
cgroup on /sys/fs/cgroup/cpu,cpuacct type cgroup (rw,nosuid,nodev,noexec,relatime,cpu,cpuacct)
cgroup on /sys/fs/cgroup/cpuset type cgroup (rw,nosuid,nodev,noexec,relatime,cpuset)
cgroup on /sys/fs/cgroup/blkio type cgroup (rw,nosuid,nodev,noexec,relatime,blkio)
cgroup on /sys/fs/cgroup/memory type cgroup (rw,nosuid,nodev,noexec,relatime,memory)
cgroup on /sys/fs/cgroup/devices type cgroup (rw,nosuid,nodev,noexec,relatime,devices)
cgroup on /sys/fs/cgroup/net_cls type cgroup (rw,nosuid,nodev,noexec,relatime,net_cls)
systemd-1 on /proc/sys/fs/binfmt_misc type autofs (rw,relatime,fd=29,pgrp=1,timeout=0,minproto=5,maxproto=5,direct)
mqueue on /dev/mqueue type mqueue (rw,relatime)
debugfs on /sys/kernel/debug type debugfs (rw,relatime)
sunrpc on /run/rpc_pipefs type rpc_pipefs (rw,relatime)
configfs on /sys/kernel/config type configfs (rw,relatime)
/dev/mmcblk0p1 on /boot type vfat (rw,relatime,fmask=0022,dmask=0022,codepage=437,iocharset=ascii,shortname=mixed,errors=remount-ro)
/dev/mmcblk0p2 on /var/hdd.log type ext4 (rw,noatime)
log2ram on /var/log type tmpfs (rw,nosuid,nodev,noexec,relatime,size=102400k,mode=755)
tmpfs on /run/user/999 type tmpfs (rw,nosuid,nodev,relatime,size=94828k,mode=700,uid=999,gid=996)
tmpfs on /run/user/1000 type tmpfs (rw,nosuid,nodev,relatime,size=94828k,mode=700,uid=1000,gid=1000)

However, when I went to the /var/log/ directory to view the log2ram.log file it was empty with no writes. Please see ls -la below:
pi@raspberrypi:/var/log $ ls -la
total 18572
drwxr-xr-x  6 root     root          640 May 29 00:00 .
drwxr-xr-x 13 root     root         4096 May 27 00:14 ..
-rw-r--r--  1 root     root         1380 May 26 00:10 alternatives.log
drwxr-xr-x  2 root     root          100 May 26 02:45 apt
-rw-r-----  1 root     adm        215760 May 29 00:22 auth.log
-rw-r--r--  1 root     root         1374 May 27 11:17 boot.log
-rw-r--r--  1 root     root            0 Apr  8 11:25 bootstrap.log
-rw-------  1 root     utmp         4224 May 29 00:21 btmp
-rw-r-----  1 root     adm        711630 May 29 00:22 daemon.log
-rw-r-----  1 root     adm         16351 May 27 11:37 debug
-rw-r--r--  1 root     root        42536 May 26 02:45 dpkg.log
-rw-r--r--  1 root     root        24000 May 26 00:10 faillog
-rw-r-----  1 root     adm        211637 May 27 11:37 kern.log
-rw-rw-r--  1 root     utmp       292292 May 29 00:22 lastlog
drwxr-x---  2 www-data www-data       80 May 26 00:10 lighttpd
-rw-r--r--  1 root     root            0 May 27 11:17 log2ram.log
-rw-r-----  1 root     adm        206281 May 28 06:25 messages
drwxr-xr-x  2 pihole   pihole         40 May 26 00:10 pihole
-rw-r--r--  1 pihole   pihole          0 May 29 00:00 pihole-FTL.log
-rw-r--r--  1 pihole   pihole        686 May 29 00:00 pihole-FTL.log.1
-rw-r--r--  1 pihole   pihole       2670 May 28 00:00 pihole-FTL.log.2.gz
-rw-r--r--  1 pihole   pihole       3505 May 27 00:00 pihole-FTL.log.3.gz
-rw-r--r--  1 pihole   pihole     737540 May 29 00:27 pihole.log
-rw-r--r--  1 pihole   pihole   13556102 May 29 00:00 pihole.log.1
-rw-r--r--  1 pihole   pihole    1403259 May 28 00:00 pihole.log.2.gz
-rw-r--r--  1 pihole   pihole     803773 May 27 00:00 pihole.log.3.gz
-rw-r--r--  1 root     root         1587 May 26 03:24 pihole_updateGravity.log
drwxr-x---  2 root     adm            40 Jan 31 22:12 samba
-rw-r-----  1 root     adm         63597 May 29 00:22 syslog
-rw-r-----  1 root     adm        944119 May 28 06:25 syslog.1
-rw-r-----  1 root     adm          4704 May 27 11:37 user.log
-rw-rw-r--  1 root     utmp        27648 May 29 00:22 wtmp

Is it supposed to create a new pihole.log everyday or that's not related? Is this how its supposed to work?

Thank you in advance for your help.

Respectfully,

Chris
I've just set this up on a couple of old Cubox 1's running Arch Linux. If you could add onto the README.md that Arch uses systemd/Timers by default but installing a cronie as a package 'pacman -S cronie' followed by 'systemctl enable cronie', adds cron timers. All works fine.
Thanks for the useful utility.
I asked some questions related to log2ram on the systemd-devel mailing list. The thread starts at https://lists.freedesktop.org/archives/systemd-devel/2019-March/042312.html and there are two main suggestions:

(1) I was asking about how to allow journald to continue logging to the SD card. journald is intelligent about reducing writes but will try its best to write emergency messages during a crash, so these want to be written directly to persistent store, not buffered by log2ram. The suggestion by Colin Guthrie is to use a bind mount. This would be a nice feature to add.

(2) I mentioned the Before=systemd-journald.service dependency and Leonard Poettering advised that it is better to use Before=systemd-journal-flush.service

I also notice the Before=apache2.service dependency and have a question about it. Why is it there? Is it just one example of a service that must not be started until the RAM log directories are prepared? What about other services that write logs, such as redis or mysql? Does the service file need customising on every machine where it is run or is there some other technique could be used?
ZL2R: Enable zram compatibility (false by default). Check the comment on the config file. See https://github.com/StuartIanNaylor/zram-swap-config to configure a zram space on your raspberry before enable this option.

Doesn't require zram-swap-config or shouldn't, but do suggest taking a look at zram-swap-config as zram-config-0.5.deb is so broken its not true.
zram-swap-config just enables zram swaps and is separate from L2R using a zram drive.
Both are aware of any previous zram devices and just make another after the previous.
I just changed the Conflicts as if systemd runs them at exact same time then they both can see no previous and then conflict.
Shouldn't happen now but bet I can run a start boot and check a 100 times with no conflict then 1st time it will happen elsewhere. Having the conflict in zram-swap-config should be optimal as that service has little in the Before= / After sections of the systemd unit config.
Maybe have a look at https://github.com/StuartIanNaylor/log2zram as its a minimal Log2Ram using zram.

log2ram keeps current logs in memory but also keeps old logs from logrotate and vastly increase mem usage via what are essentially old non current logs not in use and already copied to /var/hdd.log

logrotate has an oldlog directive that unfortunately can not be used with different devices.

There is a workaround though as postrotate can call scripts to mv the contents of /oldlog elsewhere
So use the oldlog directive with /var/log/oldlog
postrotate scripts could be used but log2ram has an hourly routine that could equally move old logs form /var/log/oldlog to /var/hdd.log

I am sat here awaiting my next hourly hoping a global oldlog directive in /etc/logrotate.conf will move all old logs to /var/log/oldlogs
via a simple olddir /var/log/oldlog inclusion to /etc/logrotate.conf

My optimism that it maybe that simple is likely just that and expecting it will not capture logs in /etc/logrotate.d
But its an example that really something should and that the oldlog directive can be used as a staging directory for log pruning and moving to /log/hdd.log and not just copying.