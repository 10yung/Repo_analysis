2019-11-27 01:02:11.769952+0800 FitMe[12486:277665] Consumed extension
2019-11-27 01:02:12.443919+0800 FitMe[12486:277373] *** Terminating app due to uncaught exception 'NSInvalidArgumentException', reason: 'MPMoviePlayerViewController is no longer available. Use AVPlayerViewController in AVKit.'
*** First throw call stack:
(
	0   CoreFoundation                      0x00007fff23c4f02e __exceptionPreprocess + 350
	1   libobjc.A.dylib                     0x00007fff50b97b20 objc_exception_throw + 48
	2   CoreFoundation                      0x00007fff23c4ee6c +[NSException raise:format:] + 188
	3   MediaPlayer                         0x00007fff277e0c99 -[MPMoviePlayerViewController initWithContentURL:] + 94
	4   FitMe                               0x0000000100ba263f -[XCDYouTubeVideoPlayerViewController initWithVideoIdentifier:] + 495


iOS13
Some links are returned, but not loaded. For example [this](https://r7---sn-gvnuxaxjvh-3ggl.googlevideo.com/videoplayback?expire=1573085312&ei=IAzDXbK8DZSs7QSnmp2oCg&ip=62.183.124.38&id=o-AEqdKBxnAe7KFL81mbiizKA3o4ahOcrVkL4qckkWMKxS&itag=22&source=youtube&requiressl=yes&mm=31%2C29&mn=sn-gvnuxaxjvh-3ggl%2Csn-n8v7kn7l&ms=au%2Crdu&mv=m&mvi=6&pcm2cms=yes&pl=24&initcwndbps=646250&mime=video%2Fmp4&ratebypass=yes&dur=560.413&lmt=1495166132867568&mt=1573063573&fvip=15&fexp=23842630&c=WEB&sparams=expire%2Cei%2Cip%2Cid%2Citag%2Csource%2Crequiressl%2Cmime%2Cratebypass%2Cdur%2Clmt&sig=ALgxI2wwRQIgDFnQBfvjV7su2QEGXDC0iQ57zw-yBnwEtEwLV7jbW-oCIQDURgkba_uhbXl_XKm8t3M3viJTNS8uPa-Mpv22MvfJpQ%3D%3D&lsparams=mm%2Cmn%2Cms%2Cmv%2Cmvi%2Cpcm2cms%2Cpl%2Cinitcwndbps&lsig=AHylml4wRgIhAIgK1DqbM9ex4J9cSjPmXfqBkJqtvuaN1_5lT68pEPN5AiEA37aGlCtUe2EJpLrpvoYwQOO0EqIzNsUv65ZUlKMKngQ%3D). https://www.youtube.com/watch?v=550S-6XVRsw
The 360p [link](https://r15---sn-n8v7kn7l.googlevideo.com/videoplayback?expire=1573085908&ei=dA7DXYX-I6KEv_IPyu-8-Ag&ip=62.183.124.38&id=o-ABqi50JH5KQxpjR5z8eAgmfEcve-EnN8aS2Wnj8s2hKH&itag=135&aitags=133%2C134%2C135%2C136%2C137%2C160%2C242%2C243%2C244%2C247%2C248%2C278&source=youtube&requiressl=yes&mime=video%2Fmp4&gir=yes&clen=69344090&dur=560.359&lmt=1495283370646857&fvip=15&keepalive=yes&fexp=23842630&c=WEB&sparams=expire%2Cei%2Cip%2Cid%2Caitags%2Csource%2Crequiressl%2Cmime%2Cgir%2Cclen%2Cdur%2Clmt&sig=ALgxI2wwRAIgZIBPQ7ar2wcNXhVgfvW_PVSFcwvXhmI_iU57P4MdCpECIAEJTbKkkJdvNwUlfEGoXQOpfWQSEZYKgFpk0Znvov4_&ratebypass=yes&redirect_counter=1&cm2rm=sn-gvnuxaxjvh-3ggl7k&req_id=8c72c6e90d46a3ee&cms_redirect=yes&mm=29&mn=sn-n8v7kn7l&ms=rdu&mt=1573064230&mv=m&mvi=14&pl=24&lsparams=mm,mn,ms,mv,mvi,pl&lsig=AHylml4wRgIhAP8NvtVcYfH5cI8d8YRJ95XtBz-dQXfosVUOwd2gBwgRAiEAsd1c6hxOsBgT9iD3q-djnYaKHuvxri1ID0OFK2HrHQU=) works well.

The problem with 720p video link only, so i created a workaround for this to fetch 360p video link in that case and in other case use 720p.

```
static func canPlay(url: URL) -> Bool {
        let asset = AVAsset(url: url)
        let length = Float(asset.duration.value) / Float(asset.duration.timescale)
        return length != 0.0
    }

static func getYouTubeURL(
        code: String,
        highQuality: Bool = true,
        completion: @escaping VideoServiceYouTubeLinkFetchHandler) {
        XCDYouTubeClient.default().getVideoWithIdentifier(code) { (video: XCDYouTubeVideo?, error: Error?) in
            guard let streamURLs = video?.streamURLs else { completion(nil); return }
            if highQuality {
                let streamURL = streamURLs[XCDYouTubeVideoQualityHTTPLiveStreaming]
                    ?? streamURLs[YouTubeVideoQuality.hd720]
                    ?? streamURLs[YouTubeVideoQuality.medium360]
                    ?? streamURLs[YouTubeVideoQuality.small240]
                completion(streamURL)
            } else {
                let streamURL = streamURLs[YouTubeVideoQuality.medium360]
                    ?? streamURLs[YouTubeVideoQuality.small240]
                completion(streamURL)
            }
        }
    }

VideoService.getYouTubeURL(code: code) { [weak targetViewController] url in
                if let u = url {
                    if canPlay(url: u) {
                        playerVC.player = AVPlayer(url: u)
                    } else {
                        VideoService.getYouTubeURL(code: code, highQuality: false) { [weak targetViewController] url in
                            if let u = url {
                                playerVC.player = AVPlayer(url: u)
                            } else {
                                targetViewController?.dismiss(animated: true, completion: nil)
                            }
                        }
                    }
                } else {
                    targetViewController?.dismiss(animated: true, completion: nil)
                }
            }
```
Assertion failure in -[XCDYouTubeVideoOperation handleConnectionSuccessWithData:response:requestType:], /Users/ivy/Desktop/workspace/*********/***********/Pods/XCDYouTubeKit/XCDYouTubeKit/XCDYouTubeVideoOperation.m:178
2019-10-16 08:45:07.851330+0800 **********[16586:1046306] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Failed to decode response from https://www.youtube.com/get_video_info?el=detailpage&hl=en&ps=default&video_id=ogalmk6K0zs (response.textEncodingName = (null), data.length = 0)'
*** First throw call stack:
(0x19905a98c 0x198d830a4 0x198f5cd1c 0x1993928f4 0x1007ae3e0 0x1007ae018 0x19c2712cc 0x19c281800 0x19941f61c 0x1993293d8 0x1994218a4 0x199329070 0x19942229c 0x199421d68 0x100dd9298 0x100dcac04 0x100dcd808 0x100dccc88 0x100ddc168 0x100ddca90 0x198d77f64 0x198d7aae0)
libc++abi.dylib: terminating with uncaught exception of type NSException
Should be updated to show newer API's.
With the new Xcode update (version 11) is no longer working. I'm getting this error:

> 'NSInvalidArgumentException', reason: 'MPMoviePlayerViewController is no longer available. Use AVPlayerViewController in AVKit.'

I'm using 'XCDYouTubeKit', '~> 2.8.1'. Checking previous issues seems to be fixed on that version but it's not working.
I've just this evening updated to version 2.8.1 (from 2.6.0) and am now getting the following warning:

XCDYouTubeVideoPlayerViewController.m
@implementation XCDYouTubeVideoPlayerViewController
Implementing deprecated class

Short of turning off or ignoring warnings in XCode can you please advise as to what I need to do to clear this warning? Thank you.

Hi,
Will Youtube know that the video is playing from which bundle id(app_id)?
If youtube knows, than it'll disable its admob or block the video.

Thanks;
hi, some videos some times play, some times can't play
error log is:   Error Domain=XCDYouTubeVideoErrorDomain Code=-2 "(null)" UserInfo={NSURL=https://www.youtube.com/get_video_info?el=detailpage&hl=en&ps=default&video_id=J8IamfOsmjY
hi all 
i have an error, Error Domain=XCDYouTubeVideoErrorDomain Code=-2 "(null)" 

how can i fixe it
When I try to play a Youtube video in my tvOS app (within the simulator) I get the following error:
`[MediaRemote] [MRPlaybackQueueServiceClient] playbackQueueRequest 2E591177-D3D8-4CE8-A18F-FCF83FDA992E PineBoard-21384 /A600.000000x600.000000/R[0:1] responded to asset request with error Error Domain=kMRMediaRemoteFrameworkErrorDomain Code=15 "Operation requires a client data source to have been registered." UserInfo={NSLocalizedDescription=Operation requires a client data source to have been registered.}`

I've set the api key in the YouTubeService object.
And everything runs well until the AVPlayerViewController.player.play() method is called.

I have run the tvOS demo and I get the same error.