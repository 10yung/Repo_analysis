Hi, I'm working with an actual IMU. While generating the error parameters using allan_imu.m, I got inconsistent tau lengths.
From line.176 of allan_imu.m, the for loop repeats 3 times, in the first time, allan_overlap() returns a tau that has 48 items, but in the second time, the allan_overlap() returns a tau that has 48 items. Then the program retuens an error says
`the dimention of left side is 48×1，the dimention of left side is 47×1。 

error allan_imu (line 184)
    imu.fb_tau  (:,i) = tau';`

And I debugged the program, it seems that in line.301 of allan_overlap.m the  program returns 48 and 47 in first and second time.


So is there a walkaround of this problem?


Glad to have your reply:)

The data I used is:
https://github.com/xelmirage/my_allan







Hi Dear Rodralez:
 
I'm using NaveGo to deal with my own IMU data from UAV, during the process, I found the result was ridiculously wrong, after a careful examine, I found the gravity directions are different in my IMU data and the NaveGo code and the  NaveGo simulated example data.

I used both a DJI UAV and an Xsens MTi IMU to collect the original data. Their body coordinate system are all FRD, which are supposed to be the same with NaveGo. But their data are acting differently with the NaveGo   simulated example data:

![dji](https://user-images.githubusercontent.com/52103736/60034151-87fd3280-96dc-11e9-9ab2-63d963dcfa15.png)
↑this is the DJI UAV IMU data  
  
  
  



<img width="344" alt="mti" src="https://user-images.githubusercontent.com/52103736/60060845-2ca36280-9725-11e9-9ec0-758f80b2291b.png">
↑This is the data from an Xsens MTi sensor  
  
  
  






In both case, the body is firstly still and then moving upwards and downwards back. The upwards accelerations are negative, which meets the FRD coordinate definition well. The Z acceleration data is around -9.8,which means the gravity is -9.8 in their FRD coordinate system.

But directly providing these data to NaveGo leads to a messy result. Then I checked the  simulated example data, I found the body acceleration data is like:
<img width="380" alt="imu2" src="https://user-images.githubusercontent.com/52103736/60061697-bbfe4500-9728-11e9-9a55-8aa5c643213c.PNG">




the Z accleration data is around +9.8, initially I thought this may be an inverted axis.But according to the simulated track, the body experienced an upward acceleration, if the axis was inverted ,the upward acceleration should be positive, however the upward acceleration is still negative with the + 9.8 gravity.

So it appears that in NaveGo the gravity is positive in the body FRD coordinate system, unlike conventional sensor's definition. Now I'm working around this problem by making:
`fn_c = fn - coriolis - (g);` 
to
`fn_c = fn - coriolis + (g);`
The results get reasonable but still not perfect. So i'm wondering besides altering  - (g) to + (g), is there anything else I should do to make up for the different gravity direction problem? Will this affect allan regression result?


Dear Rodrigo, 

First of all thank you for your code, it is very helpful. 

However I noticed a strange phenomenon, at the beginning of my simulation the hybridization is actually worse than GPS alone. For almost 3min there is about 35cm of error for the hybride trajectory whereas GPS error is below 2cm. Imu data are generated from the reference trajectory, with error estimated in static with Allan-variance. 

What I do not understand is that since GPS.stdm is of about 1cm for this period, the kalman filter should give more weight to GNSS, and it appears not to be the case ? I have spent days on it, I don't see what I am missing. 
I tried to take only gnss when RTK is received, with no success (kalman filter diverge).
Screenshots are attached. 

Thank you in advance for your answer
Sincerely,

![image](https://user-images.githubusercontent.com/42934775/45734829-29070c00-bbe6-11e8-9fa0-f5f4735e7622.png)

![image](https://user-images.githubusercontent.com/42934775/45734818-22789480-bbe6-11e8-91f6-4febc5317252.png)
(The vehicle starts moving after 15sec)

