compile and test compile keywords are now obsolete in android so they were changed and now the project is compiling and syncing successfully
Stack on Android 4.4 (API 19)
```
03-08 00:38:55.273 14623-14623/uk.ivanc.archimvvm E/MainViewModel: Error loading GitHub repos 
                                                                   javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x53757e30: Failure in SSL library, usually a protocol error
                                                                   error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version (external/openssl/ssl/s23_clnt.c:744 0x5363ad74:0x00000000)
                                                                       at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:449)
                                                                       at okhttp3.internal.io.RealConnection.connectTls(RealConnection.java:239)
                                                                       at okhttp3.internal.io.RealConnection.establishProtocol(RealConnection.java:196)
                                                                       at okhttp3.internal.io.RealConnection.buildConnection(RealConnection.java:171)
                                                                       at okhttp3.internal.io.RealConnection.connect(RealConnection.java:111)
                                                                       at okhttp3.internal.http.StreamAllocation.findConnection(StreamAllocation.java:187)
                                                                       at okhttp3.internal.http.StreamAllocation.findHealthyConnection(StreamAllocation.java:123)
                                                                       at okhttp3.internal.http.StreamAllocation.newStream(StreamAllocation.java:93)
                                                                       at okhttp3.internal.http.HttpEngine.connect(HttpEngine.java:296)
                                                                       at okhttp3.internal.http.HttpEngine.sendRequest(HttpEngine.java:248)
                                                                       at okhttp3.RealCall.getResponse(RealCall.java:243)
                                                                       at okhttp3.RealCall$ApplicationInterceptorChain.proceed(RealCall.java:201)
                                                                       at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.java:163)
                                                                       at okhttp3.RealCall.execute(RealCall.java:57)
                                                                       at retrofit2.OkHttpCall.execute(OkHttpCall.java:174)
                                                                       at retrofit2.adapter.rxjava.RxJavaCallAdapterFactory$RequestArbiter.request(RxJavaCallAdapterFactory.java:171)
                                                                       at rx.Subscriber.setProducer(Subscriber.java:211)
                                                                       at rx.Subscriber.setProducer(Subscriber.java:205)
                                                                       at retrofit2.adapter.rxjava.RxJavaCallAdapterFactory$CallOnSubscribe.call(RxJavaCallAdapterFactory.java:152)
                                                                       at retrofit2.adapter.rxjava.RxJavaCallAdapterFactory$CallOnSubscribe.call(RxJavaCallAdapterFactory.java:138)
                                                                       at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
                                                                       at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
                                                                       at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:50)
                                                                       at rx.internal.operators.OnSubscribeLift.call(OnSubscribeLift.java:30)
                                                                       at rx.Observable.unsafeSubscribe(Observable.java:8666)
                                                                       at rx.internal.operators.OperatorSubscribeOn$1.call(OperatorSubscribeOn.java:94)
                                                                       at rx.internal.schedulers.CachedThreadScheduler$EventLoopWorker$1.call(CachedThreadScheduler.java:220)
                                                                       at rx.internal.schedulers.ScheduledAction.run(ScheduledAction.java:55)
                                                                       at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:422)
                                                                       at java.util.concurrent.FutureTask.run(FutureTask.java:237)
                                                                       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:152)
                                                                       at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:265)
                                                                       at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1112)
                                                                       at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:587)
                                                                       at java.lang.Thread.run(Thread.java:841)
                                                                   	Suppressed: javax.net.ssl.SSLHandshakeException: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x53757e30: Failure in SSL library, usually a protocol error
                                                                   error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version (external/openssl/ssl/s23_clnt.c:744 0x5363ad74:0x00000000)
                                                                   		... 35 more
                                                                   	Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x53757e30: Failure in SSL library, usually a protocol error
                                                                   error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version (external/openssl/ssl/s23_clnt.c:744 0x5363ad74:0x00000000)
                                                                       at com.android.org.conscrypt.NativeCrypto.SSL_do_handshake(Native Method)
                                                                       at com.android.org.conscrypt.OpenSSLSocketImpl.startHandshake(OpenSSLSocketImpl.java:406)
                                                                       		... 34 more
                                                                    Caused by: javax.net.ssl.SSLProtocolException: SSL handshake aborted: ssl=0x53757e30: Failure in SSL library, usually a protocol error
                                                                   error:1407742E:SSL routines:SSL23_GET_SERVER_HELLO:tlsv1 alert protocol version (external/openssl
03-08 00:39:24.683 9240-9240/com.touchtype.swiftkey E/FullInputEventModel: onStartInput event aborted: com.touchtype.keyboard.h.q: could not obtain extracted text (class com.touchtype.keyboard.h.q)
03-08 00:39:24.693 9240-9240/com.touchtype.swiftkey E/FullInputEventModel: onStartInputView event aborted: com.touchtype.keyboard.h.q: Could not create reset composing text event (class com.touchtype.keyboard.h.q)
03-08 00:39:24.713 215-10813/? E/audio_a2dp_hw: adev_set_parameters: ERROR: set param called even when stream out is null
03-08 00:39:24.963 935-1014/system_process E/MediaFocusControl: Error updating focussed RCC to RCD 
                                                                java.util.EmptyStackException
                                                                    at java.util.Stack.peek(Stack.java:57)
                                                                    at android.media.MediaFocusControl.registerRemoteControlDisplay_int(MediaFocusControl.java:2203)
                                                                    at android.media.MediaFocusControl.registerRemoteController(MediaFocusControl.java:217)
                                                                    at android.media.AudioService.registerRemoteController(AudioService.java:4365)
                                                                    at android.media.IAudioService$Stub.onTransact(IAudioService.java:614)
                                                                    at android.os.Binder.execTransact(Binder.java:404)
                                                                    at dalvik.system.NativeStart.run(Native Method)
```

AutoValue should be used in order to prevent boilerplate code of hashcode and equals method
你好，我认真看了你的代码，写的很棒
但是存在一个问题
MainActivity中的 adapter.setRepositories(repositories);
MVP和MVVM中，View和Model都没有完全分离，我认为这样是有问题的，我们无法随意替换View或Model

Hello, I've really read your code, and it's great
But there is a problem
MainActivity中的 adapter.setRepositories(repositories);
In MVP and MVVM, View and Model are not completely separated. I think that's a problem, and we can't replace View or Model at will

Thanks for sharing this repo archi.

This is unlikely related to the MVVM design pattern but just want to make sure I'm not missing anything important.

Why do you do:
MainViewModel.java
```java
private void loadGithubRepos(String username) {
   // ...
   ArchiApplication application = ArchiApplication.get(context);
   // ...
}
```
why not simply:  
MainViewModel.java
```java
private void loadGithubRepos(String username) {
   // ...
   ArchiApplication application = (ArchiApplication) context.getApplicationContext();
   // ...
}
```
(I tried it and the app runs just fine)
Is it to prevent memory leak or sth? I can't seem to get my head around it
Sorry for the noob question
There's a bunch of duplicated code in each of the projects, by moving it into its own library project we can share the common code amongst all three apps.
I'm focused on the app that implements MVVM, using it as an example to help in building my own app, and I see that the list of repositories is not persisted when the activity is killed and recreated when the device is rotated.

How would you accomplish persisting the list of repositories when the device is rotated?

1. I want startactivityforresult or setresult and finish activity, how can handle it in view model of activity ?
2. Same question with view model of recyclerview.viewholder

ItemRepoViewModel exists however is missing and logic is bundled with the RepositoryAdapter.

it would be nice to have a separate ItemRepoPresenter so:
1) the RecyclerView.Adapter is separated form business logic
2) we have clear comparison between viewmodels and presenters

In the MVP example the view directly issues commands on the presenter, for example [the `MainActivity` directly calls `MainPresenter#loadRepositories`](https://github.com/ivacf/archi/blob/master/app-mvp/src/main/java/uk/ivanc/archimvp/view/MainActivity.java#L59) whereas it should rather use a passive callback like `Presenter#onUsernameSubmitted`. The main reason for this is to hand over navigation responsibility to the presenter away from the view (which should be a dumb view).

I've created this issue for discussion, since this is obviously a matter of architecture style and code separation.
