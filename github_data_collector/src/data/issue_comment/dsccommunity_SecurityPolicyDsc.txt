
#### Details of the scenario you tried and the problem that is occurring
I'm trying to use the AccountPolicy resource and if I include any of the Account Lockout settings the application of the resource fails with the error below. The examples don't include these settings, so I am not sure if I got the syntax correct, but it looks the same as other people with issues. I;ve tried the values with and without quotes.

> PowerShell DSC resource MSFT_AccountPolicy  failed to execute Set-TargetResource functionality with error message: Failed to update Account 
Policy Account_lockout_duration,Reset_account_lockout_counter_after. Refer to %windir%\security\logs\scesrv.log for details.

#### Verbose logs showing the problem
The log file in question shows:

> ----Configure Security Policy...
	Configure password information.
Error 87: The parameter is incorrect.
 	Error configuring account lockout information.
Error 1: Incorrect function.
	System Access configuration was completed with one or more errors.


#### Suggested solution to the issue

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
```powershell
# insert configuration here
Configuration PasswordPolicy {
	Import-DscResource -ModuleName PsDesiredStateConfiguration
	Import-DscResource -ModuleName AuditPolicyDsc
	Import-DscResource -ModuleName SecurityPolicyDsc
    AccountPolicy AccountPolicies
		{
			Name										= 'PasswordPolicies'
			Enforce_password_history					= 24
			Maximum_Password_Age						= 42
			Minimum_Password_Age						= 0
			Minimum_Password_Length						= 10
			Password_must_meet_complexity_requirements	= 'Enabled'
			Store_passwords_using_reversible_encryption	= 'Disabled'
			Account_lockout_duration					= '0'
			Account_lockout_threshold					= '5'
			Reset_account_lockout_counter_after			= '30'
		}
}

#### The operating system the target node is running
OsName               : Microsoft Windows Server 2019 Standard
OsOperatingSystemSKU : StandardServerEdition
OsArchitecture       : 64-bit
WindowsVersion       : 1809
WindowsBuildLabEx    : 17763.1.amd64fre.rs5_release.180914-1434
OsLanguage           : en-US
OsMuiLanguages       : {en-US}`

#### Version and build of PowerShell the target node is running
Name                           Value
----                           -----
PSVersion                      5.1.17763.592
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.17763.592
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
#### Version of the DSC module that was used ('dev' if using current dev branch)
master
#### Pull Request (PR) description

This PR adds PowerShell DSC Resource Help Files to this module, generated by the DSCResource.DocumentationHelper `New-DscResourcePowerShellHelp` function from the PowerShellHelp module.

#### This Pull Request (PR) fixes the following issues

None

#### Task list
<!--
    To aid community reviewers in reviewing and merging your PR, please take
    the time to run through the below checklist and make sure your PR has
    everything updated as required.

    Change to [x] for each task in the task list that applies to your PR.
    For those task that don't apply to you PR, leave those as is.
-->
- [x] Added an entry under the Unreleased section of the change log in the CHANGELOG.md.
      Entry should say what was changed, and how that affects users (if applicable).
- [ ] Resource documentation added/updated in README.md.
- [ ] Resource parameter descriptions added/updated in README.md, schema.mof
      and comment-based help.
- [ ] Comment-based help added/updated.
- [ ] Localization strings added/updated in all localization files as appropriate.
- [ ] Examples appropriately added/updated.
- [ ] Unit tests added/updated. See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [ ] Integration tests added/updated (where possible). See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [ ] New/changed code adheres to [DSC Resource Style Guidelines](https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md) and [Best Practices](https://github.com/PowerShell/DscResources/blob/master/BestPractices.md).

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/securitypolicydsc/139)
<!-- Reviewable:end -->

#### Pull Request (PR) description

This PR adds `README.md` description files to each Dsc resource.

#### This Pull Request (PR) fixes the following issues

None

#### Task list
<!--
    To aid community reviewers in reviewing and merging your PR, please take
    the time to run through the below checklist and make sure your PR has
    everything updated as required.

    Change to [x] for each task in the task list that applies to your PR.
    For those task that don't apply to you PR, leave those as is.
-->
- [ ] Added an entry under the Unreleased section of the change log in the CHANGELOG.md.
      Entry should say what was changed, and how that affects users (if applicable).
- [x] Resource documentation added/updated in README.md.
- [ ] Resource parameter descriptions added/updated in README.md, schema.mof
      and comment-based help.
- [ ] Comment-based help added/updated.
- [ ] Localization strings added/updated in all localization files as appropriate.
- [ ] Examples appropriately added/updated.
- [ ] Unit tests added/updated. See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [ ] Integration tests added/updated (where possible). See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [ ] New/changed code adheres to [DSC Resource Style Guidelines](https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md) and [Best Practices](https://github.com/PowerShell/DscResources/blob/master/BestPractices.md).

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/securitypolicydsc/138)
<!-- Reviewable:end -->

#### Pull Request (PR) description

This PR adds descriptions for all properties to the schema MOF files and updates the `README` file with the descriptions in a table layout.

#### This Pull Request (PR) fixes the following issues

None

#### Task list
<!--
    To aid community reviewers in reviewing and merging your PR, please take
    the time to run through the below checklist and make sure your PR has
    everything updated as required.

    Change to [x] for each task in the task list that applies to your PR.
    For those task that don't apply to you PR, leave those as is.
-->
- [x] Added an entry under the Unreleased section of the change log in the CHANGELOG.md.
      Entry should say what was changed, and how that affects users (if applicable).
- [x] Resource documentation added/updated in README.md.
- [x] Resource parameter descriptions added/updated in README.md, schema.mof
      and comment-based help.
- [ ] Comment-based help added/updated.
- [ ] Localization strings added/updated in all localization files as appropriate.
- [ ] Examples appropriately added/updated.
- [ ] Unit tests added/updated. See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [ ] Integration tests added/updated (where possible). See [DSC Resource Testing Guidelines](https://github.com/PowerShell/DscResources/blob/master/TestsGuidelines.md).
- [ ] New/changed code adheres to [DSC Resource Style Guidelines](https://github.com/PowerShell/DscResources/blob/master/StyleGuidelines.md) and [Best Practices](https://github.com/PowerShell/DscResources/blob/master/BestPractices.md).

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/securitypolicydsc/137)
<!-- Reviewable:end -->

Apologies about the syntax below. But I am trying out the dsc resource SecurityTemplate. I am presuming from that I can supply an inf file and it will apply that to the computer.

So that is what I did and I get  an error in the logs saying that task did not complete successfully. (full details below).

I have looked at the inf file and I can see the entry in the inf file and it looks like this:

SeDenyInteractiveLogonRight = *S-1-5-32-546

Is this the correct syntax?  Any help  would be appreciated.

[code]
     { " time " :   " 2019 - 08 - 26T17 : 52 : 50 . 763 + 12 :00 " ,   " type " :   " verbose " ,   " message " :   " [ WIN-TFOSCLO6JKV] :                                      
                   [ [ Security Template ] Direct Resource Access ]   Policy :   SeDeny Interactive LogonRight   not   in   a   desired   state . " } ,
     { " t i m e " :   " 2019 - 08 - 26T17 : 52 : 50 . 763 + 12:00 " ,   " type " :   " error " ,   " message " :   " T ask   did   not   complete   successfully " } , 
 
     { " time " :   " 2019 - 08 - 26T17 : 52:50.779 + 12:00 " ,   " type " :   " verbose " ,   " message " :   " [ WIN-TFOSCLO6JKV ] :   LCM :     [   End         Set
             ]     [ [ Security Template ] Direct Resource Access ]     in   0.6410   seconds . " } 
[/code]
#### Details of the scenario you tried and the problem that is occurring

I am trying to set the value of generatesecurityaudits to two SIDs, however this fails to apply. Force only appears to work when setting a single SID. 

#### Verbose logs showing the problem

Error from the Set-TargetResource:

```
PowerShell DSC resource MSFT_UserRightsAssignment  failed to execute Set-TargetResource functionality with error message: Could not convert Identity: LOCAL 
SERVICE,NETWORK SERVICE to SID 
    + CategoryInfo          : InvalidOperation: (:) [], CimException
    + FullyQualifiedErrorId : ProviderOperationExecutionFailure
    + PSComputerName        : localhost
```

Error from the end of the job:

```
The SendConfigurationApply function did not succeed.
    + CategoryInfo          : NotSpecified: (root/Microsoft/...gurationManager:String) [], CimException
    + FullyQualifiedErrorId : MI RESULT 1
    + PSComputerName        : localhost
```

#### Suggested solution to the issue

Ideally, when specifying Force = $true, it would wipe out any existing values and replace them only with the ones you specify. 

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)

```powershell

Configuration CIS_WindowsServer2016_v110_MS_lvl1 {
    param (
        [string[]]$NodeName ='localhost'
        )

    Import-DscResource -ModuleName 'NetworkingDsc'
    Import-DscResource –ModuleName 'PSDesiredStateConfiguration'
    Import-DscResource -ModuleName 'AuditPolicyDsc'
    Import-DscResource -ModuleName 'SecurityPolicyDsc'

    Node $NodeName {
        # Firewall Configuration - adjust interface alias
        NetConnectionProfile DefaultConnectionProfile {
            InterfaceAlias   = 'Ethernet 3'
            NetworkCategory  = 'Private'
        }
        # 2.2.30 (L1) Ensure 'Generate security audits' is set to 'LOCAL SERVICE,NETWORK SERVICE'
        UserRightsAssignment Generatesecurityaudits {
            Policy   = 'Generate_security_audits'
            Identity = 'LOCAL SERVICE,NETWORK SERVICE'
            Force    = $true
        }
```

#### The operating system the target node is running

OsName               : Microsoft Windows Server 2016 Datacenter
OsOperatingSystemSKU : DatacenterServerEdition
OsArchitecture       : 64-bit
WindowsBuildLabEx    : 14393.3085.amd64fre.rs1_release.190703-1816
OsLanguage           : en-US
OsMuiLanguages       : {en-US}

#### Version and build of PowerShell the target node is running

Name                           Value
----                           -----
PSVersion                      5.1.14393.3053
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.14393.3053
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1

#### Version of the DSC module that was used ('dev' if using current dev branch)

2.9.0.0
Hi,

I'm running into issues with a baseline in windows 2019. 
I receive the following error on multiple securityOptions:

```
Could not infer CimType from the provided .NET object.
    + CategoryInfo          : InvalidOperation: (Microsoft.Manag...InstanceCommand:) [], CimException
    + FullyQualifiedErrorId : New-CimInstance,Microsoft.Management.Infrastructure.CimCmdlets.NewCimInstanceCommand
    + PSComputerName        : localhost
 
The PowerShell DSC resource '[SecurityOption]SecuritySetting(INF): EnableGuestAccount' with SourceInfo ************** threw one or more non-terminating errors while running the Test-TargetResource functionality. These errors ar
e logged to the ETW channel called Microsoft-Windows-DSC/Operational. Refer to this channel for more details.
    + CategoryInfo          : InvalidOperation: (:) [], CimException
    + FullyQualifiedErrorId : NonTerminatingErrorFromProvider
    + PSComputerName        : localhost
```

Does anyone know how to resolve this?

Regards,
Thijs
<!--
    Your feedback and support is greatly appreciated, thanks for contributing!

    ISSUE TITLE:
    Please prefix the issue title with the resource name, e.g.
    'ResourceName: Short description of my issue'

    ISSUE DESCRIPTION (this template):
    Please provide information regarding your issue under each header below.
    Write N/A under any headers that do not apply to your issue, or if the
    information is not available.

    NOTE! Sensitive information should be obfuscated.

    PLEASE KEEP THE HEADERS.

    You may remove this comment block, and the other comment blocks,
    but please keep the headers.
-->
#### Details of the scenario you tried and the problem that is occurring
Trying to use AccountPolicy on Windows 2012R2 with PowerShell 4.0

```
Cannot process argument transformation on parameter 'FilePath'. Cannot convert the "C:\Program 
Files\WindowsPowerShell\Modules\SecurityPolicyDsc\DscResources\MSFT_AccountPolicy\AccountPolicyData.psd1" value of 
type "System.String" to type "System.Collections.Hashtable".
```
#### Verbose logs showing the problem
```
VERBOSE: Perform operation 'Invoke CimMethod' with following parameters, ''methodName' = SendConfigurationApply,'class
Name' = MSFT_DSCLocalConfigurationManager,'namespaceName' = root/Microsoft/Windows/DesiredStateConfiguration'.
VERBOSE: An LCM method call arrived from computer WIN-OQJMU19QPA0 with user sid S-1-5-21-2478489807-2373884848-1657894
518-500.
VERBOSE: [WIN-OQJMU19QPA0]: LCM:  [ Start  Set      ]
VERBOSE: [WIN-OQJMU19QPA0]: LCM:  [ Start  Resource ]  [[AccountPolicy]BaseAccountPolicy]
VERBOSE: [WIN-OQJMU19QPA0]: LCM:  [ Start  Test     ]  [[AccountPolicy]BaseAccountPolicy]
Cannot process argument transformation on parameter 'FilePath'. Cannot convert the "C:\Program 
Files\WindowsPowerShell\Modules\SecurityPolicyDsc\DscResources\MSFT_AccountPolicy\AccountPolicyData.psd1" value of 
type "System.String" to type "System.Collections.Hashtable".
    + CategoryInfo          : InvalidData: (:) [], CimException
    + FullyQualifiedErrorId : ParameterArgumentTransformationError,Get-PolicyOptionData
    + PSComputerName        : localhost
 
Key cannot be null.
Parameter name: key
    + CategoryInfo          : OperationStopped: (:) [], CimException
    + FullyQualifiedErrorId : System.ArgumentNullException
    + PSComputerName        : localhost
 

# Key cannot be null error repeats a lot

VERBOSE: [WIN-OQJMU19QPA0]: LCM:  [ End    Test     ]  [[AccountPolicy]BaseAccountPolicy]  in 0.1250 seconds.
The PowerShell DSC resource MSFT_AccountPolicy threw one or more non-terminating errors while running the 
Test-TargetResource functionality. These errors are logged to the ETW channel called 
Microsoft-Windows-DSC/Operational. Refer to this channel for more details.
    + CategoryInfo          : InvalidOperation: (:) [], CimException
    + FullyQualifiedErrorId : NonTerminatingErrorFromProvider
    + PSComputerName        : localhost
 
The SendConfigurationApply function did not succeed.
    + CategoryInfo          : NotSpecified: (root/Microsoft/...gurationManager:String) [], CimException
    + FullyQualifiedErrorId : MI RESULT 1
    + PSComputerName        : localhost
 
VERBOSE: Operation 'Invoke CimMethod' complete.
VERBOSE: Time taken for configuration job to complete is 0.157 seconds
```
#### Suggested solution to the issue

It looks like ArgumentToConfigurationDataTransformation requires PowerShell 5.x?

Maybe load the hashtable in AccountPolicyData.psd1 without it?
Less preferred: Increase the minimum PowerShell/DSC version for the module.

https://github.com/PowerShell/SecurityPolicyDsc/blob/bf628170a2d51efb282c3b33a10fb29d7bc5af51/Modules/SecurityPolicyResourceHelper/SecurityPolicyResourceHelper.psm1#L435-L447 

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
```powershell
# insert configuration here
Configuration SecurityBaseline {

    # Import the module that contains the resources we're using.
    Import-DscResource -ModuleName SecurityPolicyDsc

    # The Node statement specifies which targets this configuration will be applied to.
    Node 'localhost' {

        AccountPolicy BaseAccountPolicy {
            Name = 'MyAccountPolicy'
  
        }     
    }
}
```

#### The operating system the target node is running
<!--
    Please provide as much as possible about the target node, for example
    edition, version, build and language.
    On OS with WMF 5.1 the following command can help get this information.

    Get-ComputerInfo -Property @(
        'OsName',
        'OsOperatingSystemSKU',
        'OSArchitecture',
        'WindowsVersion',
        'WindowsBuildLabEx',
        'OsLanguage',
        'OsMuiLanguages')
-->
OSName : Windows Server 2012R2
OSArchitecture : 64-bit
WindowsVersion: 6.3 (Build 9600)
OsLanguage: en-us

Patched up to May 2019

#### Version and build of PowerShell the target node is running
<!--
    To help with this information, please run this command:
    $PSVersionTable
-->
                                                                             
PSVersion                      4.0                                                                                   
WSManStackVersion              3.0                                                                                   
SerializationVersion           1.1.0.1                                                                               
CLRVersion                     4.0.30319.42000                                                                       
BuildVersion                   6.3.9600.19170                                                                        
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0}                                                                  
PSRemotingProtocolVersion      2.2                                                                                   

#### Version of the DSC module that was used ('dev' if using current dev branch)
SecurityPolicyDsc 2.8.0.0
#### Validation strings for the item value do not match the strings that apply to registry.
Setting: Domain_controller_LDAP_server_signing_requirements
Correct values (checked on Server 2016): None, Require signing
Current validation strings: `[Write, ValueMap{"None","Require Signature"}, Values{"None","Require Signature"}] String Domain_controller_LDAP_server_signing_requirements;`
Current registry strings: `"Domain_controller_LDAP_server_signing_requirements" = @{
        Value   = "MACHINE\System\CurrentControlSet\Services\NTDS\Parameters\LDAPServerIntegrity"
        Section = 'Registry Values'
        Option  = @{
            'None' = '4,1'
            'Require Signing' = '4,2'
        }
    }`
Commit 8ba0cfe seemed to inadvertently introduce the requirement with the incorrect string:
https://github.com/PowerShell/SecurityPolicyDsc/commit/8ba0cfe4c171e8c689b42275b0c13319ac3475f3#diff-0c166052c748e9bb455bb1181a5d65ca

#### Verbose logs showing the problem
The running command stopped because the preference variable "ErrorActionPreference" or common parameter is set to Stop: At least one of the values 'Require signing' is not supported or valid for property 'Domain_controller_LDAP_server_signing_requirements' on class 'SecurityOption'. Please specify only supported values: 
 None, Require Signature.

#### Suggested solution to the issue
DSCResources/MSFT_SecurityOption/MSFT_SecurityOption.schema.mof
Change Line 30 to:
`[Write, ValueMap{"None","Require Signing"}, Values{"None","Require Signing"}] String Domain_controller_LDAP_server_signing_requirements;`

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
```powershell
SecurityOption 'Domain Controller Security Options' {
    Name = 'Domain Controller Security Options'
    Domain_controller_LDAP_server_signing_requirements = 'Require Signing'
}
```

#### The operating system the target node is running
OsName               :
OsOperatingSystemSKU :
OsArchitecture       :
WindowsBuildLabEx    : 14393.2906.amd64fre.rs1_release_inmarket.190401-180
OsLanguage           :
OsMuiLanguages       :

#### Version and build of PowerShell the target node is running
Name                           Value
----                           -----
PSVersion                      5.1.14393.2879
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.14393.2879
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1

#### Version of the DSC module that was used ('dev' if using current dev branch)
published (master)
<!--
    Your feedback and support is greatly appreciated, thanks for contributing!

    ISSUE TITLE:
    Please prefix the issue title with the resource name, e.g.
    'ResourceName: Short description of my issue'

    ISSUE DESCRIPTION (this template):
    Please provide information regarding your issue under each header below.
    Write N/A under any headers that do not apply to your issue, or if the
    information is not available.

    NOTE! Sensitive information should be obfuscated.

    PLEASE KEEP THE HEADERS.

    You may remove this comment block, and the other comment blocks,
    but please keep the headers.
-->
#### Details of the scenario you tried and the problem that is occurring
I'm having an issue that may or may not be the same as #119. In my case, the mof is being applied by the LocalSystem user on Windows 2016. I've tried using the `PsDscRunAsCredential` parameter but this resource doesn't seem to support it.

#### Verbose logs showing the problem
Here's some relevant logs:
```
secedit arguments: /configure /db C:\Windows\TEMP\DscSecedit.sdb /cfg C:\Windows\TEMP\accountPolicyToAdd.inf
Testing AccountPolicy: Minimum_Password_Length
Current policy: 8 Desired policy: 0
An error occurred running method 'Set' in resource 'AccountPolicy' for resourceID '[AccountPolicy]SetPasswordPolicies': System.Management.Automation.RuntimeException: Failed to update Account Policy Minimum_Password_Length,Enforce_password_history,Maximum_Password_Age,Password_must_meet_complexity_requirements. Refer to %windir%\security\logs\scesrv.log for details.
```

scesrv.log includes:
```
----Configure Security Policy...
Error 87: The parameter is incorrect.
 	Error configuring password information.
Error 1: Incorrect function.
	System Access configuration was completed with one or more errors.

	Configuration of Registry Values was completed successfully.

	Audit/Log configuration was completed successfully.
```

Secedit-OutPut.txt:
```
Completed 1 percent (0/63) 	Process Privilege Rights area        
Completed 25 percent (15/63) 	Process Privilege Rights area        
Completed 25 percent (15/63) 	Process Group Membership area        
Completed 49 percent (30/63) 	Process Group Membership area        
Completed 49 percent (30/63) 	Process Registry Keys area        
Completed 49 percent (30/63) 	Process File Security area        
Completed 49 percent (30/63) 	Process Services area        
Completed 65 percent (40/63) 	Process Services area        
Completed 73 percent (45/63) 	Process Services area        
Completed 73 percent (45/63) 	Process Security Policy area        
Completed 77 percent (48/63) 	Process Security Policy area        
Completed 84 percent (52/63) 	Process Security Policy area        
Completed 88 percent (55/63) 	Process Security Policy area        
Completed 93 percent (58/63) 	Process Security Policy area        
Completed 100 percent (63/63) 	Process Security Policy area        
                                                                           
The parameter is incorrect.


The task has completed with an error.
See log %windir%\security\logs\scesrv.log for detail info.
```

This is the accountPolicyToAdd.inf that it generates:
```
[Unicode]
Unicode=yes
[System Access]
MinimumPasswordLength=0
PasswordHistorySize=0
MaximumPasswordAge=0
PasswordComplexity=0
[Version]
signature="$CHICAGO$"
Revision=1
```

#### Suggested solution to the issue
If the issue is that it's being run by LocalSystem, please support running with PsDscRunAsCredential. I can't really test this as I'm applying it with a service. 

#### The DSC configuration that is used to reproduce the issue (as detailed as possible)
My configuration:
```Powershell
AccountPolicy SetPasswordPolicies {
    Name      = "PasswordPolicies"
    Enforce_password_history = 0
    Maximum_Password_Age     = 0
    Minimum_Password_Age     = 0
    Minimum_Password_Length  = 0
    Password_must_meet_complexity_requirements  = "Disabled"
    Store_passwords_using_reversible_encryption = 'Disabled'
}
```

#### The operating system the target node is running
```
OsName               : Microsoft Windows Server 2016 Standard
OsOperatingSystemSKU : StandardServerEdition
OsArchitecture       : 64-bit
WindowsBuildLabEx    : 14393.2273.amd64fre.rs1_release_1.180427-1811
OsLanguage           : en-US
OsMuiLanguages       : {en-US}
```

#### Version and build of PowerShell the target node is running
```
Name                           Value
----                           -----
PSVersion                      5.1.14393.2273
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.14393.2273
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1
```

#### Version of the DSC module that was used ('dev' if using current dev branch)
2.8.0.0
