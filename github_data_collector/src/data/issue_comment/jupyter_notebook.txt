Hi, could someone help to put 6.0.2 onto conda-forge? I'd really like to have some of the bugfixes from 6.0.2 (particularly https://github.com/jupyter/notebook/pull/4891), but also avoid having to have multiple conda channels in my docker build.
Some of the tests in test_gateway have encoding parameter passed to `json.loads`. This is ignored and deprecated to be removed in Python 3.9.

```
>>> json.loads(json.dumps({1: 1}), encoding='utf-8')
<stdin>:1: DeprecationWarning: 'encoding' is ignored and deprecated. It will be removed in Python 3.9
{'1': 1}
```

https://github.com/jupyter/notebook/blob/7b5248d1cebfaf7661198963fef23823db6604cd/notebook/tests/test_gateway.py#L189
I have installed jupyter notebook with: `pip install jupyterlab`.

When running any code cell the notebook freezes:
```python
a = 'This will freeze the notebook'
```
This error message is present in the notebook's log:
```
[I 09:43:23.477 NotebookApp] Creating new notebook in
[I 09:43:24.666 NotebookApp] Kernel started: 6e1bbdd3-ef57-4e25-9313-7f053859d86f
[W 09:43:24.687 NotebookApp] 404 GET /nbextensions/widgets/notebook/js/extension.js?v=20200117094316 (::1) 18.00ms referer=http://localhost:8888/notebooks/Untitled8.ipynb?kernel_name=python3
```
Hi, i need help with my jupyter notebook. Some how i forgot my password after 1st time setting it. anyone know how to retrieve or change the password? I've tried `jupyter notebook password` on my anaconda powershell, but somehow i cant write anything when it asked me to enter password. there is also method using jupyter_notebook_config.py but i dont really understand how
When running `jupyter notebook` the Signal Desktop client is opened for some reason.

In the screenshot you can see that jupyter outputs Signals logging after startup and Signal opens. `htop` shows process dependencies and startup parameters.

I can access notebook by clicking the link in the console output, so everything else seems to work.

![Bildschirmfoto von 2020-01-15 14-48-37](https://user-images.githubusercontent.com/6961660/72441059-4e8c3180-37aa-11ea-8ce2-f5e25f5b4586.png)

Notebook Version: 6.0.2
(Installed via pip)
Python 3.6.9 (default, Nov  7 2019, 10:44:02) [GCC 8.3.0]
Ubuntu 18.04.3 LTS

Signal is installed via apt repo:
`deb [arch=amd64] https://updates.signal.org/desktop/apt xenial main`
The JSON on the examples here https://jupyter-notebook.readthedocs.io/en/stable/extending/keymaps.html are not valid JSONs; hence they crash notebook opening

```python
[W 11:21:16.965 NotebookApp] Unhandled error
[E 11:21:16.965 NotebookApp] {
      "Host": "localhost:8888",
      "Connection": "keep-alive",
      "Accept": "application/json, text/javascript, */*; q=0.01",
      "Dnt": "1",
      "X-Requested-With": "XMLHttpRequest",
      "X-Xsrftoken": "2|e7bb0960|a74793bc54210f6c5a9d75424375a849|1579077700",
      "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36",
      "Sec-Fetch-Site": "same-origin",
      "Sec-Fetch-Mode": "cors",
      "Referer": "http://localhost:8888/tree",
      "Accept-Encoding": "gzip, deflate, br",
      "Accept-Language": "el,en;q=0.9",
      "Cookie": "_xsrf=2|e7bb0960|a74793bc54210f6c5a9d75424375a849|1579077700; username-localhost-8888=\"2|1:0|10:1579080076|23:username-localhost-8888|44:M2ZjYTU1ZmUwOGM5NDNlN2FhOWU2NGMxNzhjMGIwZWQ=|1ae3bbe91a2bf80569f9766b6362475b26e721b3c6912fdfef5c08ecb4714c29\""
    }
[E 11:21:16.965 NotebookApp] 500 GET /api/config/notebook?_=1579080076596 (127.0.0.1) 3.49ms referer=http://localhost:8888/tree
[E 11:21:19.268 NotebookApp] Uncaught exception GET /notebooks/Get.ipynb (127.0.0.1)
    HTTPServerRequest(protocol='http', host='localhost:8888', method='GET', uri='/notebooks/Get.ipynb', version='HTTP/1.1', remote_ip='127.0.0.1')
    Traceback (most recent call last):
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/tornado/web.py", line 1697, in _execute
        result = method(*self.path_args, **self.path_kwargs)
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/tornado/web.py", line 3174, in wrapper
        return method(self, *args, **kwargs)
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/notebook/notebook/handlers.py", line 96, in get
        get_frontend_exporters=get_frontend_exporters
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/notebook/base/handlers.py", line 519, in render_template
        return template.render(**ns)
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/jinja2/asyncsupport.py", line 76, in render
        return original_render(self, *args, **kwargs)
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/jinja2/environment.py", line 1008, in render
        return self.environment.handle_exception(exc_info, True)
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/jinja2/environment.py", line 780, in handle_exception
        reraise(exc_type, exc_value, tb)
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/jinja2/_compat.py", line 37, in reraise
        raise value.with_traceback(tb)
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/notebook/templates/notebook.html", line 1, in top-level template code
        {% extends "page.html" %}
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/notebook/templates/page.html", line 154, in top-level template code
        {% block header %}
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/notebook/templates/notebook.html", line 114, in block "header"
        {% for exporter in get_frontend_exporters() %}
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/notebook/notebook/handlers.py", line 38, in get_frontend_exporters
        exporter_instance = exporter_class()
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/jupyter_contrib_nbextensions/nbconvert_support/collapsible_headings.py", line 44, in __init__
        collapsible_headings_options = cm.get('notebook').get(
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/notebook/services/config/manager.py", line 25, in get
        recursive_update(config, cm.get(section_name))
      File "/home/sntentos/.installs/jupyter/.venv/lib/python3.7/site-packages/notebook/config_manager.py", line 103, in get
        recursive_update(data, json.load(f))
      File "/usr/lib/python3.7/json/__init__.py", line 296, in load
        parse_constant=parse_constant, object_pairs_hook=object_pairs_hook, **kw)
      File "/usr/lib/python3.7/json/__init__.py", line 348, in loads
        return _default_decoder.decode(s)
      File "/usr/lib/python3.7/json/decoder.py", line 337, in decode
        obj, end = self.raw_decode(s, idx=_w(s, 0).end())
      File "/usr/lib/python3.7/json/decoder.py", line 353, in raw_decode
        obj, end = self.scan_once(s, idx)
    json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 8 column 3 (char 90)
[E 11:21:19.273 NotebookApp] {
      "Host": "localhost:8888",
      "Connection": "keep-alive",
      "Upgrade-Insecure-Requests": "1",
      "Dnt": "1",
      "User-Agent": "Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36",
      "Sec-Fetch-User": "?1",
      "Accept": "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9",
      "Sec-Fetch-Site": "same-origin",
      "Sec-Fetch-Mode": "navigate",
      "Referer": "http://localhost:8888/tree",
      "Accept-Encoding": "gzip, deflate, br",
      "Accept-Language": "el,en;q=0.9",
      "Cookie": "_xsrf=2|e7bb0960|a74793bc54210f6c5a9d75424375a849|1579077700; username-localhost-8888=\"2|1:0|10:1579080076|23:username-localhost-8888|44:M2ZjYTU1ZmUwOGM5NDNlN2FhOWU2NGMxNzhjMGIwZWQ=|1ae3bbe91a2bf80569f9766b6362475b26e721b3c6912fdfef5c08ecb4714c29\""
    }
[E 11:21:19.273 NotebookApp] 500 GET /notebooks/Get.ipynb (127.0.0.1) 155.98ms referer=http://localhost:8888/tree
```

Since it is only `key:dict` syntax, the trailing commas are not allowed.
I am getting this error when typing 'jupyter notebook' in my cmd

C:\Users\geniu\AppData\Local\Programs\Python\Python38-32>jupyter notebook
Traceback (most recent call last):
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\runpy.py", line 193, in _run_module_as_main
    return _run_code(code, main_globals, None,
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\runpy.py", line 86, in _run_code
    exec(code, run_globals)
  File "C:\Users\geniu\AppData\Local\Programs\Python\Python38-32\Scripts\jupyter-notebook.EXE\__main__.py", line 7, in <module>
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\jupyter_core\application.py", line 268, in launch_instance
    return super(JupyterApp, cls).launch_instance(argv=argv, **kwargs)
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\traitlets\config\application.py", line 663, in launch_instance
    app.initialize(argv)
  File "<c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\decorator.py:decorator-gen-7>", line 2, in initialize
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\traitlets\config\application.py", line 87, in catch_config_error
    return method(app, *args, **kwargs)
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\notebook\notebookapp.py", line 1720, in initialize
    self.init_webapp()
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\notebook\notebookapp.py", line 1482, in init_webapp
    self.http_server.listen(port, self.ip)
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\tornado\tcpserver.py", line 152, in listen
    self.add_sockets(sockets)
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\tornado\tcpserver.py", line 165, in add_sockets
    self._handlers[sock.fileno()] = add_accept_handler(
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\tornado\netutil.py", line 279, in add_accept_handler
    io_loop.add_handler(sock, accept_handler, IOLoop.READ)
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\site-packages\tornado\platform\asyncio.py", line 99, in add_handler
    self.asyncio_loop.add_reader(fd, self._handle_events, fd, IOLoop.READ)
  File "c:\users\geniu\appdata\local\programs\python\python38-32\lib\asyncio\events.py", line 501, in add_reader
    raise NotImplementedError
NotImplementedError
This change migrates the test move_multiselect to use selenium as suggested in issue #3335

It can be run using the following command: 
pytest test_move_multiselection.py
JupyterLab has upgraded the Font-Awesome version to 5.12. Maybe we should do the same in Jupyter Notebook.
Find the file `.../notebook/static/notebook/js/textcell.js` (or if you don't have the means to minify all the .js code to re-create `.../notebook/static/notebook/js/main.min.js` then just find the file `.../notebook/static/notebook/js/main.min.js`)

Edit the file you found and search for the string `"rendered.MarkdownCell"`.  There should be only one copy of that string.

Right above where you found that string, change this block of code:

```
// replace attachment:<key> by the corresponding entry
// in the cell's attachments
html.find('img[src^="attachment:"]').each(function (i, h) {
  h = $(h);
  var key = h.attr('src').replace(/^attachment:/, '');

  if (that.attachments.hasOwnProperty(key)) {
    var att = that.attachments[key];
    var mime = Object.keys(att)[0];
    h.attr('src', 'data:' + mime + ';base64,' + att[mime]);
  } else {
    h.attr('src', '');
  }
});

```
to this:
```

// replace attachment:<key> by the corresponding entry
// in the cell's attachments
html.find('img[src^="attachment:"]').each(function (i, h) {
  h = $(h);
  var key = h.attr('src').replace(/^attachment:/, '');

  if (that.attachments.hasOwnProperty(key)) {
    var att = that.attachments[key];
    var mime = Object.keys(att)[0];
    h.attr('src', 'data:' + mime + ';base64,' + att[mime]);

    if (mime == 'application/pdf') {

        var new_element = $("<object />");

        for (var i = 0; i < h[0].attributes.length; i++) {
            var attr = h[0].attributes[i];

            if(attr.name == 'src') {
                $(new_element).attr('data', attr.value);
            } else {
                $(new_element).attr(attr.name, attr.value);
            }
        }

        h.replaceWith(function () {
            return $(new_element);
        });

    }


  } else {
    h.attr('src', '');
  }
});

```

After this restart your Jupyter server.

Now any markdown which would have created HTML with an \<img\> tag having the "src" attribute pointing to an attached PDF file will instead create an \<object\> tag having the "data" attribute pointing to the attachment.  Your browser will now hopefully invoke a fancy JavaScript PDF viewer to render the object tag.  