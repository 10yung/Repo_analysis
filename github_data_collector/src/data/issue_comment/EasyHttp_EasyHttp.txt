â€¦eStream.

New method PutStream to use any generic stream (in addition to PutFile)

Small change for serialization to json.
AddExtraHeader("cookie",somecookie)
but no work
Hello. I'm a member of the Pinguem.ru competition on finding errors in
open source projects. A bug, found using PVS-Studio.

Warnings with medium priority:

[V3117](https://www.viva64.com/en/w/v3117) Constructor parameter 'getResponse' is not used. HttpClient.cs 111
Please add support Mono
For example, how would I make a request like the one below?

```
HTTP GET https://example.com
Content-Type: application/json
Accept: application/json
Authorization: Bearer d352b45d-0e5b-4c2d-a10b-c7be8c7cd3ff
```

I would expect to be able to do something like,

```csharp
using EasyHttp.Http;

var http = new HttpClient();
http.Request.ContentType = "application/json";
http.Request.Accept = "application/json";
http.Request.Authorization = "Bearer d352b45d-0e5b-4c2d-a10b-c7be8c7cd3ff";

var response = http.Get("https://example.com");
```

But there's no `Authorization` field exposed, which is odd. Am I missing it somewhere?
I don't know if this can be set to false but the library is making the decision of upper casing the first letter of each parameter name in all requests.

Json example: ``{"Name":"John", "Age":25}``
While it should look like this: ``{"name":"John", "age":25}``

This gets a different response from what's expected.
Signed assemblies can only load other signed assemblies. On the other hand, unsigned assemblies can load either.
Since EasyHttp is intended to be used in other projects it should be signed in order to be universally usable.
This applies to version 1.7.0:
EasyHttp, Version=1.7.0.0, Culture=neutral, PublicKeyToken=null

My project has to be signed so I can't load it.