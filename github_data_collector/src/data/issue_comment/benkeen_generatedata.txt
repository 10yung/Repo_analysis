Created a data set and set the data type of one column to custom list.  The custom list was relatively short.  The data set was saved and has been run numerous times.

Increased the custom list to 391 KB and saved the data set.  Now unable to load that data set.  The previous version of the data set (which differs only by the custom list) still loads fine.
### Last updated: Jan 12th. 

This a birds-eye view of the v4 rewrite to give a little transparency of how it's going. I'll add more items and below as I address them.

### In-progress design 

I haven't done an actual design yet (fonts, colours, etc. etc), I'm just trying to hammer down the new UI in broad strokes. To simplify the interface, I've moved the Countries + Export Type settings into separate sections, accessible via the buttons at the bottom. But the big new addition is a _preview panel_: a live visualization of the data set you're constructing, in the export type of your choice. The idea is for this to replace the existing current "in-page" generation option where you can see the results in the webpage. Instead I'd like to generate everything as files, which is realistically the only way to guarantee it'll be performant for any size of data set.  

Horizontal mode:
<img width="1440" alt="gd" src="https://user-images.githubusercontent.com/512116/72224687-f8ad5480-3531-11ea-8a34-80043f743f51.png">

Vertical mode:
<img width="1439" alt="gd2" src="https://user-images.githubusercontent.com/512116/72224747-a91b5880-3532-11ea-8d1a-f19ec18fd8bc.png">

## Preview Panel

JSON
- [x] add, dynamically reflect updates to data set

General
- [ ] update all Data Types to have a default value (needed for small responsive size)


## Misc 

- [ ] Data Types table
  - [x] general actions & behaviour, loading of data sets
  - [x] Sorting
  - [ ] Handling large data sets
  - [ ] Get all Data Types working
  - [x] make responsive, and offload hidden items to the dialog 
  - [ ] Help/Help Options dialog
- [ ] Export Types
- [ ] Country selection
- [ ] Data generation
  - [x] initial proof of concept
  - [x] visually show generated data in page
  - [ ] move to web workers
- [ ] New application design
  - [x] Overall layout + simplifying the generator page
  - [x] Responsive
- [ ] Database and backend
- [ ] User accounts
- [ ] Installation script
- [ ] Rest API
- [ ] Documentation
- [ ] Build process
  - [ ] Propertly chunk everything
  - [ ] Prod builds
- [ ] Other site 

### Dev Environment
- [ ] add hot reloading already. 
- [ ] add linting

### CI
- [x] Add travis to run jest tests
- [x] Add (initially) depressing coveralls integration to show how far I have to go

## Unknowns:
- [ ] What database to use
- [ ] What templating language to achieve parity with the existing script (customizable, inline Smarty code)
### This page isnâ€™t working
**generatedata.com is currently unable to handle this request.**

**HTTP ERROR 500**
______________________________________________________________
I am not able to generate 800 records (53 columns) at a time.  Need 100,000 records!

You need to refund contributions.  
Generating field id as Primary Key.. gets added twice causing error with MySQL import
CREATE TABLE `customers` (
  `id` mediumint(8) unsigned NOT NULL auto_increment,
  `id` mediumint,
....

(note: we usually use  int(10) for auto_increment Primary key)



CREATE TABLE `customers` (
  `id` mediumint(8) unsigned NOT NULL auto_increment,
  `id` mediumint,
  `company_name` varchar(255),
  `address` varchar(255) default NULL,
  `town` varchar(255),
  `postcode` varchar(10) default NULL,
  `telephone` varchar(100) default NULL,
  `email` varchar(255) default NULL,
  `contacts` varchar(255) default NULL,
  `billing` varchar(255) default NULL,
  `notes` TEXT default NULL,
  PRIMARY KEY (`id`)
) AUTO_INCREMENT=1;

So, I've started on generatedata v4 at last! Exciting times.

The primary goal of the new version is to improve performance and modernize the script. It's still as useful as it's ever been, but code-wise has gotten very dated (jQuery, requireJS? Yowzers) and above all, generating the data takes far, far longer than it should. Since putting up the generatedata.com website several years ago, my hosting costs skyrocketed due to the server load - and I'm heavily reliant on donations to keep this project going. That has to stop. 

So I'm rewriting it in node and React/Redux and offloading the bulk of the data generation to run right within your browser. By writing it in modern JS, I can still provide both client- and server-side options. You can still use the REST API like now - it'll be exactly the same code ran in your browser as through node. This is a win-win. I'll be able to _remove all limitations_ of the volume of data you can generate through generatedata.com (for anyone who visits - not just people who donate!) - the one caveat being _unless that entails data generation requires backend interaction._  So generating actual Excel, CSV and zipfiles will not longer be available for free unless you donate. *Probably*. Quite honestly, modern browsers can support a huge range of functionality so perhaps I'll be able to do that all in the browser. We'll see. 

But yes, the goal is to significantly improve performance and reduce unnecessary server load. 

I'll keep this up to date with the latest goings on: https://github.com/benkeen/generatedata/blob/master/V4_NOTES.md
I generated 100 entries five or six times with full state names and never got any of the New, North, South, or West states.

Edit: They don't come up using short state names either.
The current versions of SQL RDBMSs all support the `DROP TABLE IF EXISTS` syntax. 

In most systems, if you try to drop a table that doesn't already exist, it will generate an error. Right now, when we select the 'include DROP TABLE' option, Generatedata creates a DROP TABLE statement **without** the 'IF EXISTS' option - which generates an error most current, empty databases.

It would be nice if Generatedata added the 'IF EXISTS' clause by default. If we are concerned about people using legacy systems that might not understand the optional clause, then we could add a checkbox that would allow people to 'omit IF EXISTS' (but that would not be the default). 

Thank you for running and maintaining this amazing and super useful project!
![Screenshot from 2019-09-04 17-09-15](https://user-images.githubusercontent.com/30758641/64251739-d3328d80-cf36-11e9-8ce0-c52a4585163d.png)

The data limit on data generation can be increased by changing the input field value from the source code using Developer tools of the browser.
I've installed the script in my local environment. I've added a few column that need to be generated as Excel file but not able to generate data and ended up at 'http://localhost:81/generatedata-3.3.1/generate.php'

What I missed while installing the script or do I need any further step to perform to get the data generated?
# Setup

![2](https://user-images.githubusercontent.com/5790321/62741523-de7fbf80-ba43-11e9-9e05-4e0507ea1622.png)

# JSON output

```json
[
	{
		"bool": "false"
	},
	{
		"bool": "true"
	}
]
```

# What's wrong

Boolean values in JSON must not be quoted.

From <http://json.org/>:

> A _value_ can be a _string_ in double quotes, or a _number_, or `true` or `false` or `nul`l, or an _object_ or an _array_.