Sorry to bother you with this, but I am not able to change the configuration to fit my needs - I am not sure if this is an issue. 

I want to avoid the extra empty lines before and after regions:

```
    public interface IViewModelContext
    {
        #region Events

        event EventHandler<PrimaryChainChangedArgs> PrimaryChainChanged;
```

As an example, after running reorganization I always get an extra empty line before the region:

```
    public interface IViewModelContext
    {

        #region Events

        event EventHandler<PrimaryChainChangedArgs> PrimaryChainChanged;
```
### Environment
- Visual Studio version: Professional 2019 Version 16.4.2
- CodeMaid version: 11.1
- Code language: VB

### Description
Regarding Format Comment, Could you also include support for the <revisionHostory> block. I use it to track changes.

### Steps to recreate
1. Mark comment section
2. Ctrl + M, N

### My CodeMaid Formatting settings
Wrap comments at column (100)
(true) Skip wrapping on the last word
Extra indent for values inside XML comments (2)
(false) Add spacing around XML tags
(false) Add space inside self closing tags
(false) Keep XML tags together
(false) Align XML param tags
(true) Always split summary tags onto multiple lines
(true) Always split all XML tags onto multiple lines

### Current behavior

    ''' <revisionHistory visible="true">
    '''   <revision date="2019/02/28" version="1.1.1.0" author="coderName" visible="true">Now I can
    '''   Walk.</revision><revision date="2019/02/27" version="1.1.0.0" author="coderName"
    '''   visible="true">Now I can speak.</revision><revision date="2019/02/26" version="1.0.0.0"
    '''   author="coderName" visible="true">Now I Was made.</revision>
    ''' </revisionHistory>


### Expected behavior

    ''' <revisionHistory visible="true">
    '''   <revision date="2019/02/28" version="1.1.1.0" author="coderName" visible="true">
    '''     Now I can Walk.
    '''   </revision>
    '''   <revision date="2019/02/27" version="1.1.0.0" author="coderName" visible="true">
    '''     Now I can speak.
    '''   </revision>
    '''   <revision date="2019/02/26" version="1.0.0.0" author="coderName" visible="true">
    '''     Now I Was made.
    '''   </revision>
    ''' </revisionHistory>
### Environment
- Visual Studio version: Professional 2019 Preview Version 16.5.0 Preview 1.0
- CodeMaid version: 11.2
- Code language: C#

### Description
Is it possible when running code cleanup to make the properties getter and setter join lines?   

### Steps to recreate
1. Create a model from and XML. Edit > Paste Special > Paste XML as Class
2. Sample XML 

`<RootNode>
  <DateSample>2019-12-04</DateSample>
  <LangPref>en-US</LangPref>
  <ChildNode>
    <Org>IBM</Org>
    <Name>Ben</Name>
    <Version>19.10.27-427</Version>
  </ChildNode>
</RootNode>`


3. Extensions >CodeMaid > Cleanup Avtive Documnet


### Current behavior
Nothing happens 


   private string orgField;
  public string Org
        {
            get
            {
                return this.orgField;
            }
            set
            {
                this.orgField = value;
            }
        }


### Expected behavior
Join the Getter and Setter to a single line each 

`  private string orgField;
    public string Org
        {
            get { return this.orgField; }
            set { this.orgField = value; }
        }

`

Tis PR contains a couple of features to improve the user experience when dealing with overcrowded Spade panel of the very large files.

_This PR is a rework/reattempt of https://github.com/codecadwallader/codemaid/pull/671_

* Problem
Spade panel content does great job of showing the exact anatomy of the source code document. However that "exact" may not be always practical as often the spade content has very little code navigation value (e.g. back fields, indexers, ...). The problem becoms particulary difficult to deal with when deailng with the large files like autom-generated ViewModels, when the most of the realestate of the Spade paned is wasted on back fields and the really useful stuff like properties and methods cannot be accessed without scrolling, which needs to be repeated everytime user svitsch the active document to a new file.


* Solution

1. Similarly to the Properties panel of Visual Studio Spade panel now maintains collapsed tree view nodes even when active document is switched to a different file. 
The feature can be enabled/disabled from the user settings dialog. It is enabled by default.

2. User can completely hide some items' types in the tree view of Spade panel. 
The feature can be enabled/disabled from the user settings dialog. It is disabled by default.  

![image](https://user-images.githubusercontent.com/16729806/71580972-2f10ca00-2b57-11ea-80a5-f8bbdc04c06e.png)

----

I also added suppressing UI-Thread warnings in the debug mode since they do not trigger any problems and you decided to not address them anyway (I actually agree with that approach). If it is not what you want it can be easily reverted in the project file.

I have also noticed that users requested some other Spade improvements associated with Spade panel remembering user choices (e.g. zoom) between the sessions: https://github.com/codecadwallader/codemaid/issues/698
### Environment
- Visual Studio version: 2019
- CodeMaid version: 11.1.209

### Feature Request Description

It would be helpful if the Spade zoom level (set using the mousewheel) were saved between VS sessions.

Currently you have to re-zoom every time you close & open VS.
I separate my event handlers and it would be great if codemaid could do this automatically.
### Description
I'd like to see a preview of what changes Cleanup or Reorganize will do. Something like Compare to Unmodified in Solution Explorer, where a new window is generated showing the current document to the proposed changes for a side-by-side comparison.
### Environment
- Visual Studio version: [example 2019 Community]
- CodeMaid version: [example 11.1]

### Description
It will be nice to have Items nesting functionality built into codemaid
Hi,

I added the possibility to include/exclude the ability to sort static classes, methods, etc.

- Include static sort active/inactive in settings
- Extend options/reorganize/types dialog to support changing the static sort behaviour
### Environment
- Visual Studio version: 2019 Professional
- CodeMaid version: 11.1
- Code language: C#

### Description
Verbatim strings are having triling spaces removed

private const string VerbatimString @"Line 1
Line with trailing space 
Line";

### Steps to recreate
Insert above code
Run CodeMaid clean up

### Current behavior
Trailing space at end of second line of constant (line 5 in example code) is removed.

### Expected behavior
Trailing space at end of second line of constant (line 5 in example code) is preserved
Example Test.txt attached (rename to Test.cs)

[Test.txt](https://github.com/codecadwallader/codemaid/files/3845815/Test.txt)