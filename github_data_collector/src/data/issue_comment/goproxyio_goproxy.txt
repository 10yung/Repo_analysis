When I tried to install cobra, `go get -u github.com/spf13/cobra/cobra`
I got `go get: upgrading github.com/coreos/go-systemd@v0.0.0-20190321100706-95778dfbb74e: unexpected status (https://goproxy.io/github.com/coreos/go-systemd/@v/list): 404 Not Found` message.
I had already use the master branch goproxy, but it didn't work.
My go version 1.12.7.
## go version
```
go version go1.12.7 linux/amd64
```
## ```go get sigs.k8s.io/kubebuilder@v2.0.1``` error
```
# export GO111MODULE=on
# export GOPROXY=https://goproxy.io

# go get sigs.k8s.io/kubebuilder@v2.0.1

go: finding sigs.k8s.io/kubebuilder v2.0.1
go: finding sigs.k8s.io v2.0.1
go get sigs.k8s.io/kubebuilder@v2.0.1: unexpected status (https://goproxy.io/sigs.k8s.io/kubebuilder/@v/v2.0.1.info): 410 Gone
```
```
# export GO111MODULE=on
# export GOPROXY=https://goproxy.io

# go mod download -json sigs.k8s.io/kubebuilder@v2.0.1

go: finding sigs.k8s.io/kubebuilder v2.0.1
{
	"Path": "sigs.k8s.io/kubebuilder",
	"Version": "v2.0.1",
	"Error": "unexpected status (https://goproxy.io/sigs.k8s.io/kubebuilder/@v/v2.0.1.info): 410 Gone"
}
```
## When I replace ```export GOPROXY=https://goproxy.io``` to ```export GOPROXY=``` it is no problem
```
# export GO111MODULE=on
# export GOPROXY=

# go mod download -json sigs.k8s.io/kubebuilder@v2.0.1

go: finding sigs.k8s.io/kubebuilder v2.0.1
{
	"Path": "sigs.k8s.io/kubebuilder",
	"Version": "v0.0.0-20190924002324-855513fa7eec",
	"Info": "/go/pkg/mod/cache/download/sigs.k8s.io/kubebuilder/@v/v0.0.0-20190924002324-855513fa7eec.info",
	"GoMod": "/go/pkg/mod/cache/download/sigs.k8s.io/kubebuilder/@v/v0.0.0-20190924002324-855513fa7eec.mod",
	"Zip": "/go/pkg/mod/cache/download/sigs.k8s.io/kubebuilder/@v/v0.0.0-20190924002324-855513fa7eec.zip",
	"Dir": "/go/pkg/mod/sigs.k8s.io/kubebuilder@v0.0.0-20190924002324-855513fa7eec",
	"Sum": "h1:gvvdSnPktCupFgyTkpo6M3BZwNxh/J/V8+HVPskf5dI=",
	"GoModSum": "h1:klSN+b+Jpmih7ZUEzOBQNqo9829nm39eeYnIrl+RKPA="
}

```
- docker build . -t goproxy
- docker run -d -p 8081:8081 goproxy
- Then I wrote a script to test :
````
#!/usr/bin/env bash

export GO111MODULE=on
export GOPROXY='http://127.0.0.1:8081'
export GOPATH=`pwd`

go get -v golang.org/x/crypto
````
- Script output: 

> go: finding golang.org/x/mod v0.1.0
Fetching http://127.0.0.1:8081/golang.org/x/mod/@v/v0.1.0.info
go: finding golang.org/x/crypto v0.0.0-20190701094942-4def268fd1a4
Fetching http://127.0.0.1:8081/golang.org/x/crypto/@v/v0.0.0-20190701094942-4def268fd1a4.info
go: golang.org/x/crypto@v0.0.0-20190701094942-4def268fd1a4: unexpected status (http://127.0.0.1:8081/golang.org/x/crypto/@v/v0.0.0-20190701094942-4def268fd1a4.info): 404 Not Found
go: golang.org/x/mod@v0.1.0: unexpected status (http://127.0.0.1:8081/golang.org/x/mod/@v/v0.1.0.info): 404 Not Found
go: error loading module requirements
- docker logs output:
> docker logs 5eb9215b4acc
0.630s 404 /golang.org/x/mod/@v/v0.1.0.info
0.629s 404 /golang.org/x/crypto/@v/v0.0.0-20190701094942-4def268fd1a4.info
0.614s 404 /golang.org/x/mod/@v/v0.1.0.info
0.612s 404 /golang.org/x/crypto/@v/v0.0.0-20190701094942-4def268fd1a4.info
0.640s 404 /golang.org/x/crypto/@v/v0.0.0-20190701094942-4def268fd1a4.info
0.651s 404 /golang.org/x/mod/@v/v0.1.0.info
0.652s 404 /golang.org/x/crypto/@v/v0.0.0-20190701094942-4def268fd1a4.info
0.660s 404 /golang.org/x/mod/@v/v0.1.0.info

* When I replace `http://127.0.0.1:8081` to `https://goproxy.io` it is no problem.
````
 #!/usr/bin/env bash

export GO111MODULE=on
export GOPROXY='http://goproxy.io'
export GOPATH=`pwd`

go get -v golang.org/x/crypto
````
> `# go version`
> `go version go1.12.7 linux/amd64`
To install goproxy inside Greatwall, mirror is essential.

# Repository mirrors 
Mirrors = [ 
"golang.org/x/(.*) => github.com/golang/$1", 
"google.golang.org/appengine => github.com/golang/appengine", 
"google.golang.org/genproto => github.com/google/go-genproto", 
"google.golang.org/grpc => github.com/grpc/grpc-go", 
"google.golang.org/api => github.com/googleapis/google-api-go-client", 
"cloud.google.com/go => github.com/googleapis/google-cloud-go", 
] 
Please remove go-api from your testdata.