Hey, first of all I have to see i have been using this code for sometime now and it's really great.

I am trying to load PHPmailer into a system and load it from the main system file which will load globally on all the files so i can use and send mails on all files.

So let say the main page loading everything is index.php and i load at the top of the document this code: 

    use PHPMailer\PHPMailer\PHPMailer;
    use PHPMailer\PHPMailer\SMTP;
    use PHPMailer\PHPMailer\Exception;

    require_once("include/phpmailer/autoload.php");

Now inside index.php i include other files that send mails. Let say one of the files is second.php and from there i send the mail.

I found that if i do not reuse this code at the top of second.php file I am keep getting an error:
    use PHPMailer\PHPMailer\PHPMailer;
    use PHPMailer\PHPMailer\SMTP;
    use PHPMailer\PHPMailer\Exception;

Is it possible that i have to keep using it at the top of each file i include even due i load them on the main file "index,php"? seems like it's very inefficient and messy as i have to load them at the top of the document and not with the send mail code. In the older versions of PHPMailer it wasn't required and it was easier to use.

Will appreciate if you can tell  me if there is a way to go around that instead of including the same code over and over again.
Thanks
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\Exception;

require 'vendor/autoload.php';

$mail = new PHPMailer(true);

try {
    $mail->SMTPDebug = 2;
    $mail->isSMTP();
    $mail->Host       = 'mail.wtb.co.mz';
    $mail->SMTPAuth   = true;
    $mail->Username   = 'xxxxxxxx';
    $mail->Password   = 'xxxxxxxxxx';
    $mail->SMTPSecure = 'tsl';
    $mail->Port       = 465;
    $mail->setFrom(xxxx'); //same as username
![w](https://user-images.githubusercontent.com/57064616/72619381-c93d8400-3945-11ea-99ca-df722ac91994.png)

    $mail->addAddress('crackeddcode20@gmail.com');
    $mail->isHTML(true);
    $mail->Subject = 'Subject';
    $mail->Body    = 'HTML message body in <b>bold</b> ';
    $mail->AltBody = 'Body in plain text for non-HTML mail clients';
    $mail->send();

    echo "Mail has been sent successfully!";
} catch (Exception $e) {
    echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
}
![w](https://user-images.githubusercontent.com/57064616/72619274-985d4f00-3945-11ea-8e9a-8b5024e2877b.png)

If non-null value is passed, sets whether exceptions are thrown for errors. Always returns the current exception setting.

I have a system that sends an email to a mailing list, the system is configured with phpmailer and the account is gmail.
My problem is that sometimes it sends me some emails correctly and suddenly it gives SMTP error.

This is the code:

`use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
$mail = new PHPMailer;
$mail->isSMTP();
$mail->SMTPDebug = SMTP::DEBUG_SERVER;
$mail->Host = 'smtp.gmail.com';
$mail->Port = 587;
$mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
$mail->SMTPAuth = true;
$mail->Username = 'example@gmail.com';
$mail->Password = 'XXXXX';
$mail->setFrom('example@gmail.com');
$mail->Subject = 'Test';

while($row = mysqli_fetch_assoc($res))
{
    $email = $row['email'];

    $mail->AltBody = 'Example';

    $mail->addAddress($email);

    if (!$mail->send())
    {
        echo 'Mailer Error: '. $mail->ErrorInfo;
    } 
    else 
    {
        echo 'Message sent!';
    }
}
`

At first it does not work sending only 1 email, but after a while it worked, without changing any of the programming, then I tried to send the whole list and over 50 emails failed again.

I don't know why this happens
Hi, I have a question regarding an issue sending emails from a smartphone. Usually, when I send emails from the desktop it works fine however when I send it from the phone, it keeps sending forever without actually sending. Below my code:

<?php
use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;
require 'phpmailer/src/PHPMailer.php';
require 'phpmailer/src/SMTP.php';
require 'phpmailer/src/Exception.php';


$useExceptions = true;
$mail = new PHPMailer( $useExceptions );
$mail->IsHTML(true);
$mail->IsSMTP();
$mail->CharSet = 'UTF-8';
$mail->SMTPDebug = 0;
$mail->SMTPAuth = TRUE;
$mail->SMTPOptions = ['ssl'=> ['allow_self_signed' => true]];
$mail->SMTPSecure = PHPMailer::ENCRYPTION_STARTTLS;
$mail->Port     = 587;  
$mail->Username = "mail@one.com";
$mail->Password = "*********";
$mail->Host     = "send.one.com";
$mail->Mailer   = "smtp";
$mail->From     = "mail@one.com";
$mail->FromName = ($_POST["userName"]);
$mail->AddReplyTo($_POST["userEmail"], $_POST["userName"]);
$mail->AddAddress("mail@one.com");
$mail->Subject = $_POST["subject"];
$mail->WordWrap   = 80;
$mail->MsgHTML = ($_POST["content"]) . ($_POST["content2"]);
$mail->Body = "<body style='border:1px solid #19282B; margin:0px; box-sizing:border-box; padding:10px 20px; '> <h4 style='color:#19282B; font-size:18px;'>Nombre del Aplicante:</h4> <p style='color:#19282B;font-size:17px;'>" . ($_POST["userName"]) . " </p><br><h4 style='color:#19282B; font-size:18px;'>Email del Aplicante:</h4> <p style='color:#19282B;font-size:17px;'>" . ($_POST["userEmail"]) . "</p><br><h4 style='color:#19282B; font-size:18px;'>Numero Telefonico del aplicante:</h4> <p style='color:#19282B;font-size:17px;'>" . ($_POST["userNumber"]) . "</p><br><h4 style='color:#19282B; font-size:18px;'>" . ($_POST["firstQuestion"]) . ":</h4> <p style='color:#19282B;font-size:17px;'> " . ($_POST["content"]) . "</p><br><h4 style='color:#19282B; font-size:18px;'>" . ($_POST["secondQuestion"]) . ":</h4> <p style='color:#19282B;font-size:17px;'>" . ($_POST["content2"]) . "</p> </body>";


if(is_array($_FILES)) {
$mail->AddAttachment($_FILES['attachmentFile']['tmp_name'],$_FILES['attachmentFile']['name']); 
}





if(!$mail->Send()) {
  echo "<p class='error'>Problem in Sending Mail.</p>";
} else {
  echo "<p class='success'>Contact Mail Sent.</p>";
} 
?>


Since there are many issues reported due to ill configuration of signing, it might be helpful to add some pre-checks during the signing routine and to add a header "X" header indicating problems, in such a way that it is helpful for the developer but not exposing any security details.
Since these headers show up in spam testing reports, even when debug is not active on the server running PHPMailer, it will give an indication 
When I send email with digital signature (SMIME), the signature considered to be not valid

Please check these things before submitting your issue:

- [x] *Read the error message* you're seeing - it often tells you what is wrong, and may contain useful links & instructions
- [x] Make sure you're using the latest version of PHPMailer
- [x] Check that your problem is not dealt with in [the troubleshooting guide](https://github.com/PHPMailer/PHPMailer/wiki/Troubleshooting), especially if you're having problems connecting to Gmail or GoDaddy
- [x] Include sufficient code to reproduce your problem
- [x] If you're having an SMTP issue, include the debug output generated with `SMTPDebug = 2` set
- [x] If you have a question about how to use PHPMailer (rather than reporting a bug in it), tag a question on Stack Overflow with `phpmailer`, but [**search first**](http://stackoverflow.com/questions/tagged/phpmailer)!

# Problem description

# Code to reproduce

`<?php
require __DIR__ . "/vendor/autoload.php";

use PHPMailer\PHPMailer\PHPMailer;
use PHPMailer\PHPMailer\SMTP;
use PHPMailer\PHPMailer\Exception;


$mail = new PHPMailer(true);

try {
    //Server settings
    $mail->SMTPDebug = SMTP::DEBUG_SERVER;                      // Enable verbose debug output
    $mail->isSMTP();                                            // Send using SMTP
    $mail->Host       = "somehost";                    // Set the SMTP server to send through
    $mail->SMTPAuth   = true;                                   // Enable SMTP authentication
    $mail->Username   = "somemail@somehost";                     // SMTP username
    $mail->Password   = "password";                               // SMTP password
    $mail->SMTPSecure = "tls";         // Enable TLS encryption; `PHPMailer::ENCRYPTION_SMTPS` also accepted
    $mail->Port       = 587;                                    // TCP port to connect to

    //Recipients
    $mail->setFrom("somemail@somehost", "somemail");
    $mail->addAddress("taufik@gmail.com", "taufik");     // Add a recipient

    // Content
    $mail->isHTML(true);                                  // Set email format to HTML
    $mail->Subject = "Here is the subject";
    $mail->Body    = "This is the HTML message body <b>in bold!</b>";

    $mail->sign(
      "clcert.pem",
      "key.pem",
      "secret",
      "chain.pem"
    );

    $mail->send();
    echo "Message has been sent";
} catch (Exception $e) {
    echo "Message could not be sent. Mailer Error: {$mail->ErrorInfo}";
}

?>`


# Debug output
![not-valid](https://user-images.githubusercontent.com/2703102/70415347-fbc6a800-1a8e-11ea-855b-91cd1dac0b04.png)

Office365 Business (Authenticated SMTP) gives an error every time.

smtp.office365.com
Port 587
TLS
SMTP Authentication

I am using SuiteCRM 7.11.6, others appear to be having the same issue.

I have updated SMTP.php, OAUTH.php, Exception.php, and PHPMailer.php using this Git.
All other mail servers can be connected to without issues. Tried 3 others without issue.

Many people suggested upgraded to the most recent PHPMailer... this has been done to no avail.

I was hoping someone might guide me.  I am certain this is an Office365 type issue as other mailer servers have zero issues.

Thank you for your time and guidance.
# Problem description
I am trying to test some mail services such as sendinblue or sendgrid using SMTP connection. I have created a test php file, which uses my sendinblue.com or sendgrid.com credentials to send one email message, and it works fine on my local Windows machine, but when I upload it to the
hosting,  it gives the following error on request:
**End of script output before headers**
Similar script works fine, when I connect to smtp server directly.

# Code to reproduce
```
<?php
use PHPMailer\PHPMailer\PHPMailer;

require 'PHPMailer/src/Exception.php';
require 'PHPMailer/src/PHPMailer.php';
require 'PHPMailer/src/SMTP.php';

$mail = new PHPMailer(true);								
$mail->CharSet = 'UTF-8';
$mail->Encoding = 'base64';

//Server settings
$mail->SMTPDebug = 2;									
$mail->isSMTP();										
$mail->Host = 'smtp-relay.sendinblue.com'; 						
$mail->SMTPAuth = true;									
$mail->Username = 'serob45@mail.ru';			//My SendInBlue or SendGrid username		
$mail->Password = '';						
$mail->SMTPSecure = 'tls';							
$mail->Port = '587';	

$mail->setFrom('serob45@mail.ru', 'Serob');
$mail->addAddress('test@gmail.com');
$mail->Subject = 'Test Subject from gmail';
$mail->isHTML(true);
$mail->Body = 'Hello dear Serob';

$success=$mail->send();
```

# Debug output
End of script output before headers: mail_test.php
Reproduce with:
php php-cs-fixer --rules=native_function_invocation fix ./ --allow-risky=yes
(php-cs-fixer from : https://cs.symfony.com/)

Details:
https://veewee.github.io/blog/optimizing-php-performance-by-fq-function-calls/
