Hi everyone,
I managed to install the library for a c++ code I am writing on Visual Studio. I can compile the code without problems, but as soon as I get to the functions of the matplotlibcpp library I get the "cannot find module matplotlib" from the python interpreter. The problem is that I have installed matplotlib for pyhton and everything seems done correctly (also the PYTHONHOME variable links to the Anaconda diretctory and so on) and I do not know what to do.
Thank you in advance.
great iff someone can put example or information on how to lot  time series data like stock data.  x-axis displays time data.  
Is there an option to change the background color of the plot?
I've tried looking through the document, but could not find any.

Thank you.
Hi 
My laptop uses C++98 Visual studio 2008 and WinXP OS. Great if C++98 is supported.
Thanks
Channa
Title says it all. Other than that a bit of extra whitespace got remove, I'm afraid, sorry about that.

I tried to keep with your codestyle best I could, if there's anything you would like changed let me know (or make the change yourself, of course).

Also, I'm not sure I stayed in line with how you like functions to be called, i.e. this could've been done as a template on `Numeric` but I didn't really see any benefit in it, I may be wrong here.

ALSO, and lastly, I would understand if you would prefer I add also `avyline` before merging this. Let me know.
3D line plot function (named plot3) to add Axes3D.plot functionality. Also added zlabel. Tested with my local anaconda 2.7 and 3.7 distributions with and without -DWITHOUT_NUMPY. Example and .png included.
I use CLion,and set configuration like this:
**QT_QPA_PLATFORM_PLUGIN_PATH=D:/ProgramData/Anaconda3/Library/plugins/platforms**
and then everything works just fine.But when I add other environment variables for linking dlls,
for example:
**QT_QPA_PLATFORM_PLUGIN_PATH=D:/ProgramData/Anaconda3/Library/plugins/platforms;PATH=E:/myBin;**
then I got "Process finished with exit code -1073741515 (0xC0000135)".
Any advice is appreciated,thank u.
Some function used PyFloat_FromDouble(num) where num has 'long' type.
I want to plot a 3D set of points. This set is divided in clusters, so I want each cluster to have a diferent color for its points.

I can't figure out how to write the call to the scatter function. I have 4 vectors of doubles, for x, y,z and color of each point. 

So how can I call the scatter function for this situation?





Hello,
I found some tips in asynchronous single-thread programming on dll module, so I'd like to share it.

Those tips might be natural as some veterans.

**Tips**
**1. Use "backend" and specify "Agg" to prevent error message by TK GUI.**

For example, on graph-plotting function:
> bool CreatePyGraphImage(std::vector<double> x, std::vector<double> y, std::string title, std::string filename )
> {
>  **plt::backend("Agg");**
>  plt::clf();
>  plt::plot(x, y, attributes);
>  return true;
> }

and DllMain:


> BOOL APIENTRY DllMain(HMODULE hModule,  DWORD  ul_reason_for_call,  LPVOID lpReserved)
> {
>  switch (ul_reason_for_call)
>  {
>   case DLL_PROCESS_ATTACH:
>    break;
>   case DLL_THREAD_ATTACH:
>    break;    
>   case DLL_THREAD_DETACH:
>    break;                **/// (1)**
>   case DLL_PROCESS_DETACH:
>    break;
>   }
>   return TRUE;
> }

If not use "Agg", we'll find the runtime error by TK GUI after passing **(1)** part as following:
> Exception ignored in: <bound method Image.__ del __ of <tkinter.PhotoImage object at 0x12AD7550>>
>Traceback (most recent call last):
>  File "D:\Program Files\Python36-x86\Lib\tkinter\__init__.py", line 3507, in __ del __
>    self.tk.call('image', 'delete', self.name)
> RuntimeError: main thread is not in main loop

Then, your application will be forced to halt due to access violation.


Refer to know more information:
https://stackoverflow.com/questions/27147300/matplotlib-tcl-asyncdelete-async-handler-deleted-by-the-wrong-thread

**2.We need to _close_ all windows between the span of thread start and end.**

If not close all windows, we'll be suffered from memory leaks.
Be sure to use **"plt::close"** to close windows.

More information:
https://stackoverflow.com/questions/21884271/warning-about-too-many-open-figures

Good luck.