I just installed the solarized theme doing the registry add first, then updated the links, then copied the Set-SolarizedDarkColorDefaults.ps1 to my profile folder, and then added required text to the end of my profile. Everything looked great after running Out-Colors but once I started using it all of the flags for powershell commands are defaulting to the DarkGray for font color. This is making it unreadable for me. I looked in the Set-SolarizedDarkColorDefaults.ps1 but I do not see that being used except for background colors.

![image](https://user-images.githubusercontent.com/5273788/70555752-a9988c00-1b4d-11ea-9a66-5a8661d118f5.png)

`PS C:\WINDOWS\system32> git tfs clone $tfs $/IntraWebForms/AmexReporting --branches=all --workspace="c:\repos"`

![image](https://user-images.githubusercontent.com/5273788/70555510-28d99000-1b4d-11ea-8e0e-770b5a927265.png)

Hi,

Command Update-link is unknown with my PowerShell. Any idea ?
I got this error: " ObjectNotFound: (Update-Link:String) [], CommandNotFoundException".
Adds a 'Shell' parameter to Update-Link. It takes two values 'Windows'
is the default and maintains the existing behaviour. 'Unix' assigns
Solarized colors to the same ANSI color escape codes as the terminal
emulator themes linked to from https://ethanschoonover.com/solarized/.

The Unix option allows Solarized themes for Unix tools like
https://github.com/seebi/dircolors-solarized work correctly and is
designed to be used with Cygwin or WSL.
After using the light theme, enter the following command and the numeric part will not be echoed.
```
eg1

curl 12132132 fsd.exe
```
After upgrade from Windows 1709 to 1803, the Ubuntu bash reverted to the original colors. So I run `Update-Link.cmd  C:\Windows\System32\bash.exe light` again.
But it gave me the following errors.
```
D:\code\other\cmd-colors-solarized>Update-Link.cmd  C:\Windows\System32\bash.exe light
New-Object : Exception calling ".ctor" with "1" argument(s): "Error HRESULT E_FAIL has been returned from a call to a COM component."
At D:\code\other\cmd-colors-solarized\Get-Link.ps1:501 char:4
+    New-Object Huddled.Interop.ShellLink (Convert-Path $Path)
+    ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [New-Object], MethodInvocationException
    + FullyQualifiedErrorId : ConstructorInvokedThrowException,Microsoft.PowerShell.Commands.NewObjectCommand

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:14 char:1
+ $lnk.ConsoleColors[0]="#002b36"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:15 char:1
+ $lnk.ConsoleColors[8]="#073642"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:16 char:1
+ $lnk.ConsoleColors[2]="#586e75"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:17 char:1
+ $lnk.ConsoleColors[6]="#657b83"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:18 char:1
+ $lnk.ConsoleColors[1]="#839496"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:19 char:1
+ $lnk.ConsoleColors[3]="#93a1a1"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:20 char:1
+ $lnk.ConsoleColors[7]="#eee8d5"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:21 char:1
+ $lnk.ConsoleColors[15]="#fdf6e3"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:22 char:1
+ $lnk.ConsoleColors[14]="#b58900"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:23 char:1
+ $lnk.ConsoleColors[4]="#cb4b16"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:24 char:1
+ $lnk.ConsoleColors[12]="#dc322f"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:25 char:1
+ $lnk.ConsoleColors[13]="#d33682"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:26 char:1
+ $lnk.ConsoleColors[5]="#6c71c4"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:27 char:1
+ $lnk.ConsoleColors[9]="#268bd2"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:28 char:1
+ $lnk.ConsoleColors[11]="#2aa198"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

Cannot index into a null array.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:29 char:1
+ $lnk.ConsoleColors[10]="#859900"
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

The property 'PopUpBackgroundColor' cannot be found on this object. Verify that the property exists and can be set.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:38 char:5
+     $lnk.PopUpBackgroundColor=0x0
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'PopUpTextColor' cannot be found on this object. Verify that the property exists and can be set.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:39 char:5
+     $lnk.PopUpTextColor=0x1
+     ~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'ScreenBackgroundColor' cannot be found on this object. Verify that the property exists and can be set.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:40 char:5
+     $lnk.ScreenBackgroundColor=0xf
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

The property 'ScreenTextColor' cannot be found on this object. Verify that the property exists and can be set.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:41 char:5
+     $lnk.ScreenTextColor=0x6
+     ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : PropertyNotFound

You cannot call a method on a null-valued expression.
At D:\code\other\cmd-colors-solarized\Update-Link.ps1:44 char:1
+ $lnk.Save()
+ ~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

Updated C:\Windows\System32\bash.exe to Solarized - light

D:\code\other\cmd-colors-solarized>
```
Please see the commit messages. I'm not sure how we got to this state, maybe Windows changed, but it seems that the notion of "dark" flipped on us. The original color scheme broke down in the Bash on Ubuntu on Windows terminal, as all the colors were mapping to their dark versions, which are used as the Solarized background tones.

This is a work-in-progress, as I've only fixed it for the Dark color-scheme so far. I'll add screenshots of the before and after, and comparison to my MacBook terminal, but I wanted to share this early to see if anyone knows _why_ our colors were so off.
After applying the dark color scheme (including the registry update) when I open cmd and enter a command, then press the up arrow key, I only get a blank line and not the last command. If I open cmd via Win+R everything is working as it should, and the colors are still solarized (I guess for that case it uses the registry settings and not the updated shortcut .lnk). I reproduced this on two Windows 10 machines.
EDIT: On PowerShell this problem does not appear.
When running the script on Windows 7 with the following command:
Update-Link.cmd "c:\users\admin\alias\command.lnk" light

The following error results:
The term '\Get-Link.ps1' is not recognized as the name of a cmdlet, function, script file, or operable program. Check the spelling of the name, or if a path was included, verify that the path is correct and try again.

Adding a '.' to the path in Update-Link.ps1 fixes the issue temporarily:
$lnk = & ("$PSScriptRoot\Get-Link.ps1") $Path
$lnk = & ("$PSScriptRoot.\Get-Link.ps1") $Path

There is probably a better way of doing this or setting PSScriptRoot to '.'
It looks like the color mappings in this repo between powershell's colors and ansi color codes do not match those used by powershell's virtual terminal system. 

For example, when `Write-Host -ForegroundColor Magenta "test"` is executed, powershell's virtual terminal emits `ESC[35;1mtest` (also known as brmagenta or High Intensity Magenta). The mapping in the readme file and code lists the mapping as: magenta -> magenta.

Below are the correct mappings in full:

termcol | Powershell
-- | --
black | Black
red | DarkRed
green | DarkGreen
yellow | DarkYellow
blue | DarkBlue
magenta | DarkMagenta
cyan | DarkCyan
white | DarkWhite
brblack | DarkGray
brred | Red
brgreen | Green
bryellow | Yellow
brblue | Blue
brmagenta | Magenta
brcyan | Cyan
brwhite | White


As title indicates, the REG files cannot be imported. Error is:

Cannot import xxxxx.reg: the script file is not a Registry script. Only binary archives of Registry can be imported via Registry Editor.

I open the file with Sublime Text 3 and found it is encoded with UTF-8 with BOM. I saved it with UTF-8 without BOM and all is fine.

It may has something to do with my OS locale: Spanish (Spain).