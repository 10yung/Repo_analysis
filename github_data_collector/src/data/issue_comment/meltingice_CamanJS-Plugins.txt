Help me please...
https://codepen.io/bradtraversy/pen/qoJZBy
In this example the image is for download. How to send the edited image to the server ???
is it possible to author a plugin in JavaScript and contribute it here ?? I'm capable transpiling to the supported JS version if necessary but coffescript is a total mystery for me 

In my case I'm porting ImageMatigk to webassembly as a JS API that lets you execute convert/identify/compare commands identically than in the command line and would be interesting to see how it behaves as a caman plugin since it has all the features and support all the formats the naive Image magic version does. I
[an example url](https://cancerberosgx.github.io/demos/magica/playground/#state=eyJleGFtcGxlIjp7Im5hbWUiOiJGbHV4IGFuaW0iLCJkZXNjcmlwdGlvbiI6IjxhIGhyZWY9XCJodHRwczovL2ltYWdlbWFnaWNrLm9yZy9Vc2FnZS9jYW52YXMvI3JhbmRvbV9mbHV4XCI+U2VlIEltYWdlTWFnaWNrIGV4YW1wbGVzIHBhZ2UgY2FudmFzLyNyYW5kb21fZmx1eDwvYT4iLCJ0YWdzIjpbImFuaW1hdGlvbiJdLCJpbnB1dEZpbGVzIjpbImJsdWViZWxscy5wbmciXSwic2NyaXB0IjoiPCUgXG5mdW5jdGlvbiBzZXF1ZW5jZShzdGFydCwgc3RlcCwgZW5kKXtcbiAgdmFyIGEgPSBbXVxuICBmb3IodmFyIGkgPSBzdGFydDsgaTw9ZW5kOyBpKz1zdGVwKXtcbiAgICBhLnB1c2goaSlcbiAgfVxuICByZXR1cm4gYVxufSBcbnZhciBzaXplID0gJzEwMHgxMDAnXG52YXIgZGVsYXkgPSAxMlxudmFyIGxpc3QgPSBzZXF1ZW5jZSgwLCAyMCwgMzU5KVxuJT5cbiMgZmlyc3QgZ2VuZXJhdGUgYSByYW5kb20gbm9pc2UgaW1hZ2UuIFdlIHVzZSBtaWZmIGZvcm1hdCB3aGljaCBpcyBmYXN0ZXJcbmNvbnZlcnQgLXNpemUgPCU9IHNpemUgJT4geGM6ICtub2lzZSBSYW5kb20gcmFuZG9tLm1pZmZcbiMgY29weSBpdCBqdXN0IHRvIHNlZSBpdCBpbiB0aGUgYnJvd3NlclxuY29udmVydCByYW5kb20ubWlmZiByYW5kb20uZ2lmIFxuXG4jIE5vdyBnZW5lcmF0ZSBzZXF1ZW5jZSBvZiB2YXJpYXRpb25zIG9mIGl0IHdpdGggZnVuY3Rpb24gU2ludXNvaWRcbjwlIGxpc3QuZm9yRWFjaChpPT57ICU+XG4gIGNvbnZlcnQgcmFuZG9tLm1pZmYgLWNoYW5uZWwgRyAtZnVuY3Rpb24gU2ludXNvaWQgMSw8JT1pJT4gXFxcbiAgICAtdmlydHVhbC1waXhlbCB0aWxlIC1ibHVyIDB4OCAtYXV0by1sZXZlbCBcXFxuICAgIC1zZXBhcmF0ZSBmbHV4XzwlPWklPi5taWZmXG48JX0pJT5cbiMgQW5kIGFwcGVuZCB0aGVtIGFsbCBpbiBhbiBhbmltIGdpZjpcbmNvbnZlcnQgLXNldCBkZWxheSA8JT0gZGVsYXkgJT4gPCU9IGxpc3QubWFwKGk9PmBmbHV4XyR7aX0ubWlmZmApLmpvaW4oJyAnKSAlPiBmbHV4X2FuaW0uZ2lmXG5cbiMgYSB0aHJlc2hvbGQgdmFyaWF0aW9uIG9mIHByZXZpb3VzOlxuY29udmVydCBmbHV4X2FuaW0uZ2lmIC10aHJlc2hvbGQgNzAlIGZsdXhfdGhyZXNfYW5pbS5naWZcblxuIyBBbm90aGVyIFwiZmlsYW1lbnRzXCIgdmFyaWF0aW9uOlxuY29udmVydCBmbHV4X2FuaW0uZ2lmICBcXFxuICAtc2lnbW9pZGFsLWNvbnRyYXN0IDMweDUwJSAtc29sYXJpemUgNTAlIC1hdXRvLWxldmVsIFxcXG4gIC1zZXQgZGVsYXkgPCU9IGRlbGF5ICU+IGZpbGFtZW50c19hbmltLmdpZlxuXG4jIGdlbmVyYXRlIGFub3RoZXIgbGlzdCB0aGlzIHRpbWUgXCJyaXBwbGVzXCJcbjwlIGxpc3QuZm9yRWFjaChpPT57ICU+XG4gIGNvbnZlcnQgcmFuZG9tLm1pZmYgLWNoYW5uZWwgRyBcXFxuICAgIC1mdW5jdGlvbiBTaW51c29pZCAxLDwlPWklPiBcXFxuICAgIC12aXJ0dWFsLXBpeGVsIHRpbGUgLWJsdXIgMHg4IC1hdXRvLWxldmVsIFxcXG4gICAgLWZ1bmN0aW9uIFNpbnVzb2lkIDIuNSw8JT1pKjUlPiBcXFxuICAgIC1zZXBhcmF0ZSArY2hhbm5lbCBmbHV4X3JpcHBsZXNfPCU9aSU+Lm1pZmZcbjwlfSklPlxuY29udmVydCAtc2V0IGRlbGF5IDwlPSBkZWxheSAlPiA8JT0gbGlzdC5tYXAoaT0+YGZsdXhfcmlwcGxlc18ke2l9Lm1pZmZgKS5qb2luKCcgJykgJT4gZmx1eF9yaXBwbGVzX2FuaW0uZ2lmIn0sImZpZWxkcyI6W3siaWQiOiJzcGVlZCIsInZhbHVlIjoiMiJ9LHsiaWQiOiJpbnRlbnNpdHkiLCJ2YWx1ZSI6IjkifSx7ImlkIjoid2lkdGgiLCJ2YWx1ZSI6IjE0In0seyJpZCI6ImhlaWdodCIsInZhbHVlIjoiMjEifV0sImlucHV0RmlsZU5hbWVzIjpbImJsdWViZWxscy5wbmciXSwic2NyaXB0IjoiPCUgXG5mdW5jdGlvbiBzZXF1ZW5jZShzdGFydCwgc3RlcCwgZW5kKXtcbiAgdmFyIGEgPSBbXVxuICBmb3IodmFyIGkgPSBzdGFydDsgaTw9ZW5kOyBpKz1zdGVwKXtcbiAgICBhLnB1c2goaSlcbiAgfVxuICByZXR1cm4gYVxufSBcbnZhciBzaXplID0gJzEwMHgxMDAnXG52YXIgZGVsYXkgPSAxMlxudmFyIGxpc3QgPSBzZXF1ZW5jZSgwLCAyMCwgMzU5KVxuJT5cbiMgZmlyc3QgZ2VuZXJhdGUgYSByYW5kb20gbm9pc2UgaW1hZ2UuIFdlIHVzZSBtaWZmIGZvcm1hdCB3aGljaCBpcyBmYXN0ZXJcbmNvbnZlcnQgLXNpemUgPCU9IHNpemUgJT4geGM6ICtub2lzZSBSYW5kb20gcmFuZG9tLm1pZmZcbiMgY29weSBpdCBqdXN0IHRvIHNlZSBpdCBpbiB0aGUgYnJvd3NlclxuY29udmVydCByYW5kb20ubWlmZiByYW5kb20uZ2lmIFxuXG4jIE5vdyBnZW5lcmF0ZSBzZXF1ZW5jZSBvZiB2YXJpYXRpb25zIG9mIGl0IHdpdGggZnVuY3Rpb24gU2ludXNvaWRcbjwlIGxpc3QuZm9yRWFjaChpPT57ICU+XG4gIGNvbnZlcnQgcmFuZG9tLm1pZmYgLWNoYW5uZWwgRyAtZnVuY3Rpb24gU2ludXNvaWQgMSw8JT1pJT4gXFxcbiAgICAtdmlydHVhbC1waXhlbCB0aWxlIC1ibHVyIDB4OCAtYXV0by1sZXZlbCBcXFxuICAgIC1zZXBhcmF0ZSBmbHV4XzwlPWklPi5taWZmXG48JX0pJT5cbiMgQW5kIGFwcGVuZCB0aGVtIGFsbCBpbiBhbiBhbmltIGdpZjpcbmNvbnZlcnQgLXNldCBkZWxheSA8JT0gZGVsYXkgJT4gPCU9IGxpc3QubWFwKGk9PmBmbHV4XyR7aX0ubWlmZmApLmpvaW4oJyAnKSAlPiBmbHV4X2FuaW0uZ2lmXG5cbiMgYSB0aHJlc2hvbGQgdmFyaWF0aW9uIG9mIHByZXZpb3VzOlxuY29udmVydCBmbHV4X2FuaW0uZ2lmIC10aHJlc2hvbGQgNzAlIGZsdXhfdGhyZXNfYW5pbS5naWZcblxuIyBBbm90aGVyIFwiZmlsYW1lbnRzXCIgdmFyaWF0aW9uOlxuY29udmVydCBmbHV4X2FuaW0uZ2lmICBcXFxuICAtc2lnbW9pZGFsLWNvbnRyYXN0IDMweDUwJSAtc29sYXJpemUgNTAlIC1hdXRvLWxldmVsIFxcXG4gIC1zZXQgZGVsYXkgPCU9IGRlbGF5ICU+IGZpbGFtZW50c19hbmltLmdpZlxuXG4jIGdlbmVyYXRlIGFub3RoZXIgbGlzdCB0aGlzIHRpbWUgXCJyaXBwbGVzXCJcbjwlIGxpc3QuZm9yRWFjaChpPT57ICU+XG4gIGNvbnZlcnQgcmFuZG9tLm1pZmYgLWNoYW5uZWwgRyBcXFxuICAgIC1mdW5jdGlvbiBTaW51c29pZCAxLDwlPWklPiBcXFxuICAgIC12aXJ0dWFsLXBpeGVsIHRpbGUgLWJsdXIgMHg4IC1hdXRvLWxldmVsIFxcXG4gICAgLWZ1bmN0aW9uIFNpbnVzb2lkIDIuNSw8JT1pKjUlPiBcXFxuICAgIC1zZXBhcmF0ZSArY2hhbm5lbCBmbHV4X3JpcHBsZXNfPCU9aSU+Lm1pZmZcbjwlfSklPlxuY29udmVydCAtc2V0IGRlbGF5IDwlPSBkZWxheSAlPiA8JT0gbGlzdC5tYXAoaT0+YGZsdXhfcmlwcGxlc18ke2l9Lm1pZmZgKS5qb2luKCcgJykgJT4gZmx1eF9yaXBwbGVzX2FuaW0uZ2lmIn0=)
If you have any idea about contribute in javascript here is most welcome. thanks

Hello,

Is there any chance of getting a more package-manager-friendly version of this repo with compiled JS and such?  I could help integrate that if you need.

Thanks!
-Eric

The vintage function doesn't return itself if the 'vignette' argument is passed as false, which stops this plugin from working.

I was pretty confused by the existing rotation plugin. It makes sense of 90ยบ rotations, but for anything else, it makes a box thats big enough to house the new image but then doesn't render it in the center. I wasn't sure if preserving the behavior of the original is important or not, so my changes add two new rotation plugins. The first, rotateSquareBox, behaves just like the original should (I think) for non 90ยบ rotations, and for 90ยบ rotations keeps the square-box behavior for consistency. The second, rotateBoundingBox, makes a canvas exactly as big as required to house the rotation and no larger, therefore it behaves like the original for 90ยบ rotations and has a more intuitive behavior for other rotations.

Sorry it's not in coffee!

When I rotate an image and change brightness after that it renders the two images the rotated and the previous(the initial) and the previous looks distorted. It happens when using revert method which is needed when you change brightness etc more than once

Basically -180 degrees behavior is identical to 180
