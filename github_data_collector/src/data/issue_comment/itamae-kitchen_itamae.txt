```rb
define :foo do
  context = params[:name]
  local_ruby_block 'foo' do
    block do
      p context
    end
  end
end

foo 'foo'
foo 'bar'
```

```
$ RBENV_VERSION=2.6.4 itamae local a.rb
 INFO : Starting Itamae...
 INFO : Recipe: /home/k0kubun/tmp/a.rb
"bar"
"bar"
```

The first `"bar"` should be `"foo"`, shouldn't it?
Hi there,
Log: 
```
INFO : Starting Itamae... 
 INFO : Loading node data from /Users/macuser/Development/deploy/nodes/pg.yml...
 INFO : Recipe: /Users/macuser/Development/deploy/cookbooks/app/app_user.rb
ERROR :     stdout | chmod: changing permissions of '/tmp/itamae_tmp/1574202178.8791308': Operation not permitted
ERROR :     Command `sudo -H -u app_user -- /bin/sh -c cd\ \~app_user\ \;\ chmod\ 0600\ /tmp/itamae_tmp/1574202178.8791308` failed. (exit status: 1)
ERROR :   remote_file[/home/app_user/.ssh/authorized_keys] Failed.
```

```ruby
remote_file "/home/app_user/.ssh/authorized_keys" do
  action :create
  user 'app_user'
end
```

```shell
bundle exec itamae ssh  --host pg.myapp.info --user root -i ~/.ssh/id_ed25519 cookbooks/app/app_user.rb  -y nodes/pg.yml
```


Might be similar to this [issue](https://github.com/itamae-kitchen/itamae/issues/214).
-r, --system option of groupadd(8)
Problem
===



`not_if` is confusing when `cwd` is specified with a directory that does not exist.

Minimal reproduce code


```ruby
execute 'echo hello' do
  cwd '/path/to/unknwon/dir'
  not_if 'true'
end
```

```bash
$ itamae local test.rb --dry-run
 INFO : Starting Itamae... (dry-run)
 INFO : Recipe: /tmp/tmp.VzWjtHqt73/test.rb
 INFO :   execute[echo hello] executed will change from 'false' to 'true'
```

It should not be executed always because `true` command returns 0.
But `cd /path/to/unknwon/dir` returns non-zero value, so Itamae guesses it should be executed.





## note

In this case, it will fail without `--dry-run`. Actually the directory will be create with another command.



How should it behave
===


I'm not sure.


I guess warning is a solution. Because I was confused by the behaviour, but I would not like to make it error. But I'm not sure what the error message, and the condition of the warning message.
Itamae is dependent by specinfra that's version is 2.64.0 or greater currently.
Specinfra requires net-ssh gem version 2.7 or greater and net-ssh gem requires ruby version 2.2.6 or greater.
Therefore itamae requires ruby 2.2.6 or greater as practically.
This pull request does specify the required ruby version to gemspec for end-user helpful.


## supplement
My investigation article (ja_JP) :arrow_right: https://note.mu/unasuke/n/n5fe89607c517
# Context
Now, integration test files are very large....

* https://github.com/itamae-kitchen/itamae/blob/v1.10.3/spec/integration/recipes/default.rb : 558 lines
* https://github.com/itamae-kitchen/itamae/blob/v1.10.3/spec/integration/default_spec.rb : 335 lines

# Future
I want to split there into multiple files.

e.g.) mitamae

* https://github.com/itamae-kitchen/mitamae/tree/v1.7.1/spec/recipes
* https://github.com/itamae-kitchen/mitamae/tree/v1.7.1/spec/integration

# Context
Now, CI of Itamae is too complex.

https://travis-ci.org/itamae-kitchen/itamae/builds/481356350

* Ruby 2.3 (Unit test, Integration test(`itamae docker`) and Integration test (`itamae local`) 
* Ruby 2.4 (Unit test, Integration test(`itamae docker`) and Integration test (`itamae local`) 
* Ruby 2.5 (Unit test, Integration test(`itamae docker`) and Integration test (`itamae local`) 
* Ruby 2.6 (Unit test, Integration test(`itamae docker`) and Integration test (`itamae local`) 
* Ruby 2.7-dev (Unit test, Integration test(`itamae docker`) and Integration test (`itamae local`) 

## Problem
* If ruby 2.6 test is failed, we need to find out where the test failed in Unit test, Integration test(`itamae docker`) or Integration test (`itamae local`).
* If Integration test(`itamae docker`) is failed, Integration test (`itamae local`) will not be executed. 
  * We don't know if Integration test (`itamae local`) is normal or not

# Future
Migrate to CircleCI and split jobs.

* Ruby 2.3
  * Unit test
  * Integration test(`itamae docker`)
  * Integration test (`itamae local`) 
* Ruby 2.4 
  * ...
I know the *user* can set `--shell` option on runtime, but whether the recipe necessitates some certain kind of shells or not is usually determined by the recipe itself, not by the environment. So it is natural for itamae to have a method to set default shell.

Or has this product been already abandoned, and does not have any updates plan more?

Fixed the problem that LF is replaced to CR-LF when file resource is used from windows.