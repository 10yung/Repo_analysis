A really good repl would allow redefine classes and functions.

Since boris has a internal handling of error's seems reasonable that we could catch redeclare errors and starting again the session (and re applying), fixing this problem.

 What is your opinions about this?
PHP projects I'm working on lately are adding:

```php
declare(strict_types=1);
```

to the top of every file, but I don't know how or if it's possible to enable this in boris.

This isn't a huge issue assuming you test your code, but it's nice to have the same behavior for things I write in boris as the code I'm working on.

`$ boris`
```php
[1] boris> declare(strict_types=1);
[2] boris> function foo(): int { return '123'; }
// NULL
[3] boris> foo();
// 123
```

`$ php -r "declare(strict_types=1); function foo(): int { return '123'; }; foo();"`
```php
PHP Fatal error:  Uncaught TypeError: Return value of foo() must be of the type integer, string returned in Command line code:1
Stack trace:
#0 Command line code(1): foo()
#1 {main}
  thrown in Command line code on line 1
```
[Composer 1.3.0](https://github.com/composer/composer/releases/tag/1.3.0) now reloads PHP in order to disable XDebug. This results in the following error being generated whenever the library is used:

```
PHP Warning:  Module 'pcntl' already loaded in Unknown on line 0

Warning: Module 'pcntl' already loaded in Unknown on line 0
```

other packages are affected by this too. more info:

https://github.com/Homebrew/homebrew-php/issues/3896#issuecomment-271522581
https://github.com/sensiolabs/SensioDistributionBundle/pull/304/files
How It works:

* Prefix all data sent to EvalWorker with a 1 byte command identifier can be either CMD_EVAL ("\0") or CMD_COMPLETE ("\1").
* completiion function sends CMD_COMPLETE . substr($info['line_buffer'], 0, $info['end']) to eval worker
* eval worker sends back completions as a JSON blob.

Completion function inspired from https://github.com/erikdubbelboer/php-repl/blob/master/repl.php

Remove some dead code, keep eval worker alive if evaluation fails.
Trying out a do/while loop I get this error.

```
[26] boris> do {
[26]     *>   $total += $i++;
[26]     *> } while($i <= 10);
PHP Parse error:  syntax error, unexpected end of file, expecting while (T_WHILE) in /Users/rodrigofigueroa1/.composer/vendor/d11wtq/boris/lib/Boris/EvalWorker.php(152) : eval()'d code on line 3
```

This package is used by Laravel 4.2.19 and, at the time, 1.0.8 was used.

Laravel's version for boris is "d11wtq/boris": "~1.0"

By moving the pcntl extension from a suggestion to a requirement, in a patch release, that change has broken Windows use.

This PR allow people using Boris to import function and constants using the new `use function`, `use const` syntax introduced with PHP 5.6.

I also used a named regexp to make things clearer.

unirest-php, guzzle, and httpful requests may fail silently. 

Below is an example behaviour:
![screen shot 2016-09-19 at 15 48 26](https://cloud.githubusercontent.com/assets/2770895/18632698/773163f2-7e81-11e6-833e-ebcecb766c21.png)

Failing code pieces run fine as a scripts.

Hello
This is my code.

```
phper@phper:~$ boris
[1] boris> $books = ['aaa', 'bbb'];
// array(
//   0 => 'aaa',
//   1 => 'bbb'
// )
[2] boris> function serveBooks() {
[2]     *> global $books;
[2]     *> var_dump($books);
[2]     *> }
[3] boris> serveBooks();
NULL
// NULL
[4] boris>
```

