The changeset 57396dcb69c9b0521bc58f615ccd0bf7c141a544 changes the /messages rest api argument from 'cssClass' to 'messageLevel'. We expected the sync configuration 

```
- command:
  - http://localhost:8080/source/api/v1/messages
  - POST
  - cssClass: info
    tags: ['%PROJECT%']
    text: hello
```

starts to fail, but it pass without any warning.

```
opengrok-sync --config sync.yml -P project1 -l DEBUG
2020-01-17 11:36:41,797    DEBUG opengrok_tools | web application URI = http://localhost:8080/source
2020-01-17 11:36:41,797    DEBUG opengrok_tools | trying JSON
2020-01-17 11:36:41,798    DEBUG opengrok_tools | got exception <class 'ValueError'>
2020-01-17 11:36:41,798    DEBUG opengrok_tools | trying YAML
2020-01-17 11:36:41,803    DEBUG opengrok_tools | Ignored projects: []
2020-01-17 11:36:41,803    DEBUG opengrok_tools | Processing directories: ['project1']
2020-01-17 11:36:41,803    DEBUG opengrok_tools | to process: ['project1']
2020-01-17 11:36:41,885    DEBUG opengrok_tools.utils.restful | Adding header: Content-Type = application/json
2020-01-17 11:36:41,886    DEBUG opengrok_tools.utils.restful | Converting {'cssClass': 'info', 'tags': ['%PROJECT%'], 'text': 'hello'} to JSON
2020-01-17 11:36:41,886    DEBUG opengrok_tools.utils.restful | entity data: {"cssClass": "info", "tags": ["project1"], "text": "hello"}
2020-01-17 11:36:41,886    DEBUG opengrok_tools.utils.restful | POST API call: http://localhost:8080/source/api/v1/messages with data '{"cssClass": "info", "tags": ["project1"], "text": "hello"}' and headers: {'Content-Type': 'application/json'}
2020-01-17 11:36:41,905    DEBUG opengrok_tools | Checking results of project project1
2020-01-17 11:36:41,906    DEBUG opengrok_tools.utils.commandsequence | Output for project 'project1':
2020-01-17 11:36:41,906    DEBUG opengrok_tools.utils.commandsequence | retcodes = {}
```


The problem is on the client side, the REST API returns correct error code:

```
curl -s -w '\n\n%{http_code}\n' \
     -X POST -H "Content-Type: application/json" \
     -d @<(echo '{"cssStyle": "info", "text": "hello"}') \
     http://localhost:8080/source/api/v1/messages | fmt

Unrecognized field "cssStyle" (class
org.opengrok.indexer.web.messages.Message), not marked as ignorable (4
known properties: "tags", "duration", "messageLevel", "text"])
 at [Source:
 (org.glassfish.jersey.message.internal.ReaderInterceptorExecutor$UnCloseableInputStream);
 line: 1, column: 15] (through reference chain:
 org.opengrok.indexer.web.messages.Message["cssStyle"])

400
```
(after change 'cssStyle' to 'messageLevel' the return code is 201)


**Expected behavior**

opengrok-sync should fail and/or report a warning if a REST request failed.
This change fixes bug in timeout properties not being used in mirror.py at all unless configured on project level.

The added tests merely check parameter passing between functions. More robust test would be e.g. to use GitPython in `git.py` (as suggested in #2852), mock it to timeout the pull operation and verify the timeout in tests.
Hi,

This is simple question. I get "Indexer command failed" with return code 1 and/or -9.  Where (docs, source code, and/or web sites) can I see the return code information?
**Describe the bug**
As mentioned in #3009 sometimes `hg incoming` handing in mirror.py does not timeout on our production instance running 1.3.6. The `hg` process seems to be stuck in the `read()` syscall. This happens when `opengrok-mirror` is run from `opengrok-sync`.

**To Reproduce**
Obviously, `-I` is needed for `opengrok-mirror`.

**Expected behavior**
The command should timeout.
The `HistoryGuruTest.testGetRevision` fails in Travis Windows env due to:
```
Jan 13, 2020 8:17:15 AM org.opengrok.indexer.util.Executor exec

WARNING: Non-zero exit status -1 from command [blame Makefile] in directory C:\Users\travis\AppData\Local\Temp\source975669849041833016\rcs_test

[ERROR] Tests run: 7, Failures: 1, Errors: 0, Skipped: 2, Time elapsed: 16.187 s <<< FAILURE! - in org.opengrok.indexer.history.HistoryGuruTest

[ERROR] testGetRevision  Time elapsed: 0.449 s  <<< FAILURE!

java.lang.AssertionError: Failed to get revision 1.1 of C:\Users\travis\AppData\Local\Temp\source975669849041833016\razor\Razor-Simple\SimpleCProgram\main.c

	at org.junit.Assert.fail(Assert.java:88)

	at org.junit.Assert.assertTrue(Assert.java:41)

	at org.junit.Assert.assertNotNull(Assert.java:712)

	at org.opengrok.indexer.history.HistoryGuruTest.testGetRevision(HistoryGuruTest.java:110)

	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

	at java.lang.reflect.Method.invoke(Method.java:498)

	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)

	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)

	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)

	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)

	at org.junit.rules.RunRules.evaluate(RunRules.java:20)

	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)

	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)

	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)

	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)

	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)

	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)

	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)

	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)

	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)

	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)

	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)

	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)

	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)

	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)

	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)

	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)

	at java.util.Iterator.forEachRemaining(Iterator.java:116)

	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)

	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)

	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)

	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)

	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)

	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)

	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)

	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)

	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)

	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)

	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)

	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)

	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)

	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)

	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)

	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)

	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)

	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)

	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)

	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)

Jan 13, 2020 8:17:22 AM org.opengrok.indexer.history.RazorRepository getHistoryGet

SEVERE: getHistoryGet( C:\Users\travis\AppData\Local\Temp\source975669849041833016\razor\Razor-Simple\SimpleCProgram, main.c, 1.1)

java.io.IOException: Invalid RCS file format: 1.1:line::java.lang.NumberFormatException

	at org.opengrok.indexer.history.RCSRepository.wrapInIOException(RCSRepository.java:120)

	at org.opengrok.indexer.history.RCSget.<init>(RCSget.java:70)

	at org.opengrok.indexer.history.RazorRepository.getHistoryGet(RazorRepository.java:245)

	at org.opengrok.indexer.history.Repository.getHistoryGet(Repository.java:228)

	at org.opengrok.indexer.history.HistoryGuru.getRevision(HistoryGuru.java:302)

	at org.opengrok.indexer.history.HistoryGuruTest.testGetRevision(HistoryGuruTest.java:108)

	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)

	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)

	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)

	at java.lang.reflect.Method.invoke(Method.java:498)

	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)

	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)

	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)

	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)

	at org.junit.rules.RunRules.evaluate(RunRules.java:20)

	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)

	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)

	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)

	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)

	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)

	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)

	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)

	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)

	at org.junit.internal.runners.statements.RunBefores.evaluate(RunBefores.java:26)

	at org.junit.internal.runners.statements.RunAfters.evaluate(RunAfters.java:27)

	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)

	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)

	at org.junit.runner.JUnitCore.run(JUnitCore.java:115)

	at org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:40)

	at java.util.stream.ForEachOps$ForEachOp$OfRef.accept(ForEachOps.java:184)

	at java.util.stream.ReferencePipeline$3$1.accept(ReferencePipeline.java:193)

	at java.util.Iterator.forEachRemaining(Iterator.java:116)

	at java.util.Spliterators$IteratorSpliterator.forEachRemaining(Spliterators.java:1801)

	at java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:482)

	at java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:472)

	at java.util.stream.ForEachOps$ForEachOp.evaluateSequential(ForEachOps.java:151)

	at java.util.stream.ForEachOps$ForEachOp$OfRef.evaluateSequential(ForEachOps.java:174)

	at java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)

	at java.util.stream.ReferencePipeline.forEach(ReferencePipeline.java:418)

	at org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)

	at org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:71)

	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:220)

	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:188)

	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:202)

	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:181)

	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)

	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)

	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:120)

	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)

	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)

	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)

	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)

Caused by: org.suigeneris.jrcs.rcs.InvalidFileFormatException: 1.1:line::java.lang.NumberFormatException

	at org.suigeneris.jrcs.rcs.impl.Node.patch(Node.java:580)

	at org.suigeneris.jrcs.rcs.impl.Path.patch(Path.java:178)

	at org.suigeneris.jrcs.rcs.Archive.getRevision(Archive.java:1208)

	at org.suigeneris.jrcs.rcs.Archive.getRevision(Archive.java:1168)

	at org.suigeneris.jrcs.rcs.Archive.getRevision(Archive.java:1092)

	at org.opengrok.indexer.history.RCSget.<init>(RCSget.java:58)

	... 50 more

"

	at java.lang.NumberFormatException.forInputString(NumberFormatException.java:65)

	at java.lang.Integer.parseInt(Integer.java:580)

	at java.lang.Integer.parseInt(Integer.java:615)

	at org.suigeneris.jrcs.rcs.impl.Node.patch(Node.java:576)

	... 55 more
```
In Travis Windows environment all `*XrefTest.java` tests fail, e.g.:
```
AdaXrefTest.sampleTest:38->XrefTestBase.writeAndCompare:62->XrefTestBase.writeAndCompare:90 org.opengrok.indexer.analysis.ada.AdaAnalyzerFactory xref--should have no diffs
```
with:
```
[INFO] Running org.opengrok.indexer.analysis.ada.AdaXrefTest
@@ -1,50 +1,50 @@
- <!DOCTYPE html>

- <html lang="en">

- <head>

- <meta charset="UTF-8">

- <title>sampleFile - OpenGrok cross reference for /sampleFile</title></head><body>

- <a class="l" name="1" href="#1">1</a><span class="c">--</span>

- <a class="l" name="2" href="#2">2</a><span class="c">-- CDDL HEADER START</span>

- <a class="l" name="3" href="#3">3</a><span class="c">--</span>

- <a class="l" name="4" href="#4">4</a><span class="c">-- The contents of this file are subject to the terms of the</span>

- <a class="l" name="5" href="#5">5</a><span class="c">-- Common Development and Distribution License (the &quot;License&quot;).</span>

- <a class="l" name="6" href="#6">6</a><span class="c">-- You may not use this file except in compliance with the License.</span>

- <a class="l" name="7" href="#7">7</a><span class="c">--</span>

- <a class="l" name="8" href="#8">8</a><span class="c">-- See LICENSE.txt included in this distribution for the specific</span>

- <a class="l" name="9" href="#9">9</a><span class="c">-- language governing permissions and limitations under the License.</span>

- <a class="hl" name="10" href="#10">10</a><span class="c">--</span>

- <a class="l" name="11" href="#11">11</a><span class="c">-- When distributing Covered Code, include this CDDL HEADER in each</span>

- <a class="l" name="12" href="#12">12</a><span class="c">-- file and include the License file at LICENSE.txt.</span>

- <a class="l" name="13" href="#13">13</a><span class="c">-- If applicable, add the following below this CDDL HEADER, with the</span>

- <a class="l" name="14" href="#14">14</a><span class="c">-- fields enclosed by brackets &quot;[]&quot; replaced with your own identifying</span>

- <a class="l" name="15" href="#15">15</a><span class="c">-- information: Portions Copyright [yyyy] [name of copyright owner]</span>

- <a class="l" name="16" href="#16">16</a><span class="c">--</span>

- <a class="l" name="17" href="#17">17</a><span class="c">-- CDDL HEADER END</span>

- <a class="l" name="18" href="#18">18</a><span class="c">--</span>

- <a class="l" name="19" href="#19">19</a>

- <a class="hl" name="20" href="#20">20</a><span class="c">--</span>

- <a class="l" name="21" href="#21">21</a><span class="c">-- Copyright (c) 2017, Chris Fraire &lt;cfraire@me.com&gt;.</span>

- <a class="l" name="22" href="#22">22</a><span class="c">--</span>

- <a class="l" name="23" href="#23">23</a>

- <a class="l" name="24" href="#24">24</a><b>with</b> <b>Ada</b>.<b>Text_IO</b>; <b>use</b> <b>Ada</b>.<b>Text_IO</b>;

- <a class="l" name="25" href="#25">25</a><b>procedure</b> <a href="/source/s?defs=Hello" class="intelliWindow-symbol" data-definition-place="undefined-in-file">Hello</a> <b>is</b>

- <a class="l" name="26" href="#26">26</a><b>begin</b>

- <a class="l" name="27" href="#27">27</a>	<b>Put_Line</b>(<span class="s">&quot;Hello, world!&quot;</span>);

- <a class="l" name="28" href="#28">28</a>	<b>Put_Line</b>(<span class="s">&quot;&quot;&quot;</span>

- <a class="l" name="29" href="#29">29</a><span class="s">		Hello?&quot;&quot;&quot;</span>);

- <a class="hl" name="30" href="#30">30</a>	<b>Put_Line</b>(<span class="s">&apos;?&apos;</span>);

- <a class="l" name="31" href="#31">31</a>	<b>Put_Line</b>(<span class="s">&apos;</span>

- <a class="l" name="32" href="#32">32</a><span class="s">&apos;</span>);

- <a class="l" name="33" href="#33">33</a>	<b>Put</b>(<span class="n">0</span>);

- <a class="l" name="34" href="#34">34</a>	<b>Put</b>(<span class="n">12</span>);

- <a class="l" name="35" href="#35">35</a>	<b>Put</b>(<span class="n">123_456</span>);

- <a class="l" name="36" href="#36">36</a>	<b>Put</b>(<span class="n">3.14159_26</span>);

- <a class="l" name="37" href="#37">37</a>	<b>Put</b>(<span class="n">2#1111_1111#</span>);

- <a class="l" name="38" href="#38">38</a>	<b>Put</b>(<span class="n">16#E#E1</span>);

- <a class="l" name="39" href="#39">39</a>	<b>Put</b>(<span class="n">16#F.FF#E+2</span>);

- <a class="hl" name="40" href="#40">40</a>	<b>Put_Line</b>();

- <a class="l" name="41" href="#41">41</a>	<b>Put_Line</b>(<span class="s">&quot;Archimedes said &quot;&quot;&#917;&#973;&#961;&#951;&#954;&#945;&quot;&quot;&quot;</span>);

- <a class="l" name="42" href="#42">42</a><b>end</b> <a href="/source/s?defs=Hello" class="intelliWindow-symbol" data-definition-place="undefined-in-file">Hello</a>;

- <a class="l" name="43" href="#43">43</a>

- <a class="l" name="44" href="#44">44</a><span class="c">-- Test a URL that is not matched fully by a rule using just {URIChar} and</span>

- <a class="l" name="45" href="#45">45</a><span class="c">-- {FnameChar}:</span>

+ <!DOCTYPE html>
+ <html lang="en">
+ <head>
+ <meta charset="UTF-8">
+ <title>sampleFile - OpenGrok cross reference for /sampleFile</title></head><body>
+ <a class="l" name="1" href="#1">1</a><span class="c">--</span>
+ <a class="l" name="2" href="#2">2</a><span class="c">-- CDDL HEADER START</span>
+ <a class="l" name="3" href="#3">3</a><span class="c">--</span>
+ <a class="l" name="4" href="#4">4</a><span class="c">-- The contents of this file are subject to the terms of the</span>
+ <a class="l" name="5" href="#5">5</a><span class="c">-- Common Development and Distribution License (the &quot;License&quot;).</span>
+ <a class="l" name="6" href="#6">6</a><span class="c">-- You may not use this file except in compliance with the License.</span>
+ <a class="l" name="7" href="#7">7</a><span class="c">--</span>
+ <a class="l" name="8" href="#8">8</a><span class="c">-- See LICENSE.txt included in this distribution for the specific</span>
+ <a class="l" name="9" href="#9">9</a><span class="c">-- language governing permissions and limitations under the License.</span>
+ <a class="hl" name="10" href="#10">10</a><span class="c">--</span>
+ <a class="l" name="11" href="#11">11</a><span class="c">-- When distributing Covered Code, include this CDDL HEADER in each</span>
+ <a class="l" name="12" href="#12">12</a><span class="c">-- file and include the License file at LICENSE.txt.</span>
+ <a class="l" name="13" href="#13">13</a><span class="c">-- If applicable, add the following below this CDDL HEADER, with the</span>
+ <a class="l" name="14" href="#14">14</a><span class="c">-- fields enclosed by brackets &quot;[]&quot; replaced with your own identifying</span>
+ <a class="l" name="15" href="#15">15</a><span class="c">-- information: Portions Copyright [yyyy] [name of copyright owner]</span>
+ <a class="l" name="16" href="#16">16</a><span class="c">--</span>
+ <a class="l" name="17" href="#17">17</a><span class="c">-- CDDL HEADER END</span>
+ <a class="l" name="18" href="#18">18</a><span class="c">--</span>
+ <a class="l" name="19" href="#19">19</a>
+ <a class="hl" name="20" href="#20">20</a><span class="c">--</span>
+ <a class="l" name="21" href="#21">21</a><span class="c">-- Copyright (c) 2017, Chris Fraire &lt;cfraire@me.com&gt;.</span>
+ <a class="l" name="22" href="#22">22</a><span class="c">--</span>
+ <a class="l" name="23" href="#23">23</a>
+ <a class="l" name="24" href="#24">24</a><b>with</b> <b>Ada</b>.<b>Text_IO</b>; <b>use</b> <b>Ada</b>.<b>Text_IO</b>;
+ <a class="l" name="25" href="#25">25</a><b>procedure</b> <a href="/source/s?defs=Hello" class="intelliWindow-symbol" data-definition-place="undefined-in-file">Hello</a> <b>is</b>
+ <a class="l" name="26" href="#26">26</a><b>begin</b>
+ <a class="l" name="27" href="#27">27</a>	<b>Put_Line</b>(<span class="s">&quot;Hello, world!&quot;</span>);
+ <a class="l" name="28" href="#28">28</a>	<b>Put_Line</b>(<span class="s">&quot;&quot;&quot;</span>
+ <a class="l" name="29" href="#29">29</a><span class="s">		Hello?&quot;&quot;&quot;</span>);
+ <a class="hl" name="30" href="#30">30</a>	<b>Put_Line</b>(<span class="s">&apos;?&apos;</span>);
+ <a class="l" name="31" href="#31">31</a>	<b>Put_Line</b>(&apos;
+ <a class="l" name="32" href="#32">32</a>&apos;);
+ <a class="l" name="33" href="#33">33</a>	<b>Put</b>(<span class="n">0</span>);
+ <a class="l" name="34" href="#34">34</a>	<b>Put</b>(<span class="n">12</span>);
+ <a class="l" name="35" href="#35">35</a>	<b>Put</b>(<span class="n">123_456</span>);
+ <a class="l" name="36" href="#36">36</a>	<b>Put</b>(<span class="n">3.14159_26</span>);
+ <a class="l" name="37" href="#37">37</a>	<b>Put</b>(<span class="n">2#1111_1111#</span>);
+ <a class="l" name="38" href="#38">38</a>	<b>Put</b>(<span class="n">16#E#E1</span>);
+ <a class="l" name="39" href="#39">39</a>	<b>Put</b>(<span class="n">16#F.FF#E+2</span>);
+ <a class="hl" name="40" href="#40">40</a>	<b>Put_Line</b>();
+ <a class="l" name="41" href="#41">41</a>	<b>Put_Line</b>(<span class="s">&quot;Archimedes said &quot;&quot;&#917;&#973;&#961;&#951;&#954;&#945;&quot;&quot;&quot;</span>);
+ <a class="l" name="42" href="#42">42</a><b>end</b> <a href="/source/s?defs=Hello" class="intelliWindow-symbol" data-definition-place="undefined-in-file">Hello</a>;
+ <a class="l" name="43" href="#43">43</a>
+ <a class="l" name="44" href="#44">44</a><span class="c">-- Test a URL that is not matched fully by a rule using just {URIChar} and</span>
+ <a class="l" name="45" href="#45">45</a><span class="c">-- {FnameChar}:</span>
[ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 0.399 s <<< FAILURE! - in org.opengrok.indexer.analysis.ada.AdaXrefTest
[ERROR] sampleTest  Time elapsed: 0.397 s  <<< FAILURE!
java.lang.AssertionError: org.opengrok.indexer.analysis.ada.AdaAnalyzerFactory xref--should have no diffs
	at org.junit.Assert.fail(Assert.java:88)
	at org.junit.Assert.assertTrue(Assert.java:41)
	at org.opengrok.indexer.util.CustomAssertions.assertLinesEqual(CustomAssertions.java:101)
	at org.opengrok.indexer.analysis.XrefTestBase.writeAndCompare(XrefTestBase.java:90)
	at org.opengrok.indexer.analysis.XrefTestBase.writeAndCompare(XrefTestBase.java:62)
	at org.opengrok.indexer.analysis.ada.AdaXrefTest.sampleTest(AdaXrefTest.java:38)
```
which is caused by extra newline - the generated HTML file has extra new line for each line. This does not happen in AppVeyor builds so it is likely tied to the Travis env, perhaps GitBash plays a role there.
The `test_binaries`/`test_versions` tests fail when run in Windows Travis environment. Initially, the command return value was `None` instead of 0. When I tried to follow the advice on https://stackoverflow.com/questions/5658622/python-subprocess-popen-environment-path and set `env` passed to `Popen` in `Command` to `environ.copy()` (Maven sets the environment to parent environment with the virtual environment binary path) and `shell=True` the return value changed to 1 and the error output contained e.g. `'opengrok-projadm' is not recognized as an internal or external command, operable program or batch file.` so there is still something wrong. I verified that the `PATH` environment variable contains the Python directory - this is often the cure suggested for such problems.

**Describe the bug**
When trying to get Python tests pass in Travis Windows environment, `test_xml_insert()` was failing with:
```
    def test_xml_insert():

        with open(os.path.join(DIR_PATH, "web.xml")) as base_xml:

            out = insert_file(base_xml.read(),

                              os.path.join(DIR_PATH, "insert.xml"))

            with open(os.path.join(DIR_PATH, "new.xml")) as expected_xml:

>               assert out == expected_xml.read()

E               assert '<?xml versio...n\n</web-app>' == '<?xml versio...n\n</web-app>'

E                   <?xml version='1.0' encoding='utf8'?>

E                 - <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee          http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd" version="3.1">

E                 ?                                                                                                                                                                                                                              --------------

E                 + <web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" version="3.1" xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee          http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd">

E                 ?                                                                                                           ++++++++++++++

E                   
```

Clearly, the failure happens because some of the attributes (`version`) were reordered in the output.

**To Reproduce**
run the test in Travis Windows environment.

**Expected behavior**
the test should be robust

**Additional context**
The test should compare XML trees, ala https://stackoverflow.com/questions/24492895/comparing-two-xml-files-in-python
**Is your feature request related to a problem? Please describe.**
I want to add code snippet in Wiki and Confluence page, but it always add a whole file. 

like: url is https://jcat-opengrok/opengrok/snippet/p1/path/Cat.java#10-20
the output only include lines from 10 to 20. No other things. no head. 

**Describe the solution you'd like**
add a function: snippet. 

**Describe alternatives you've considered**
https://jcat-opengrok/opengrok/xref/p1/path/Cat.java#10-20

**Additional context**
Used in the other tools.  or use in Html file, for example in iFrame. 


History content of subdirectories (git repos) of a repoRepo Project is empty

Tested with both opengrok 1.3.3 and 1.3.6
OS: Ubuntu 16
tomcat 8.0.32
java-1.8.0-openjdk-amd64
git version 2.7.4

Reference: fix for bug https://github.com/oracle/opengrok/issues/2937 in 1.3.3. 
Though the history cache is now getting created for the repoRepository, the sub directories which are git repositories are getting empty History content.

I have a repoRepository project with below directory structure:
```
<SRC_ROOT>/project/
<SRC_ROOT>/project/folder1
<SRC_ROOT>/project/folder1/.git
<SRC_ROOT>/project/folder1/folder2/folder3/.git
<SRC_ROOT>/project/folder1/folder2/folder4/.git
<SRC_ROOT>/project/folder1/folder5/folder6/.git
<SRC_ROOT>/project/.repo
```
When I browse to folder1, I see History content correctly but when i click on History link on folder3, folder4, folder 6, it shows empty tables.
Added the option `--depth 6` as well but no luck.

Kindly suggest if there are additional options for nested repositories.
Indexer command used: 
```
opengrok-indexer \
    -J=-Djava.util.logging.config.file=/opengrok_1.3.6/etc/logging.properties \
    -a /opengrok_1.3.6/dist/lib/opengrok.jar -- \
    -c /usr/local/bin/ctags \
    -s /opengrok_1.3.6/src -d /opengrok_1.3.6/data -H -P -S -G \
    -W /opengrok_1.3.6/etc/configuration.xml -U http://localhost:8080/source_1.3.6 \
	--depth 6
```
![image](https://user-images.githubusercontent.com/55794016/71616254-45f90000-2bdb-11ea-9327-8fb057abb891.png)
