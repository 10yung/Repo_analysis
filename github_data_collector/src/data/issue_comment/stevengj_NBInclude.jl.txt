
`@nbinclude("n1.ipynb",softscope=true)`

gives an error on Julia 1.2.0 (and 1.3.0-rc4.1) on Win10:
`ERROR: syntax: invalid keyword argument name "Array{Any, (2,)}[
  :softscope,
  true]"`

Changing to `@nbinclude("n1.ipynb";softscope=true)`    (notice: semi-colon ;)
solves the problem. 

Suggestion: change the README.md to reflect this (or else, change the code)

Consider this attached file (please rename it as "tester.ipynb"): [tester.txt](https://github.com/stevengj/NBInclude.jl/files/3786859/tester.txt). 

It has just 2 cells, with 6 lines of code in total. If you open it in Jupyter, it runs fine. But if you try to read it with the following command, you get an error.
```
@nbinclude("tester.ipynb")
```
The error says,
```
UndefVarError: s not defined

Stacktrace:
 [1] top-level scope at C:\Users\loew\loewCloud\CALO\2019-10\tester.ipynb:In[+2]:4
 [2] include_string(::Module, ::String, ::String) at .\loading.jl:1064
 [3] my_include_string(::Module, ::String, ::String, ::Nothing, ::Bool) at C:\Users\loew\.julia\packages\NBInclude\m4rfj\src\NBInclude.jl:29
 [4] #nbinclude#1(::Bool, ::UnitRange{Int64}, ::Regex, ::typeof(identity), ::Bool, ::typeof(nbinclude), ::Module, ::String) at C:\Users\loew\.julia\packages\NBInclude\m4rfj\src\NBInclude.jl:82
 [5] nbinclude(::Module, ::String) at C:\Users\loew\.julia\packages\NBInclude\m4rfj\src\NBInclude.jl:53
 [6] top-level scope at In[2]:1
```

I have Julia 1.2.0, with IJulia v1.20.0 and NBInclude v2.1.0.

I hope there is enough information here to decide if this is a bug in your package and how to fix it. If the bug is in my understanding/expectations instead, then I will be grateful to learn more. Either way, I have something extra to thank you for ... in addition to this useful module!

Allow nightly failures, and drop 0.6 and 0.7 in favor of 1.1 and 1.2


I think it is viable to make this work with Revise.jl,
so editting another notebook causes it to reinclude it.


I would require writing 
a custom function to do the tracking,
based on applying 
https://github.com/timholy/Revise.jl/blob/dd6e970a23e0b998883f814742723bf53b88f57f/src/Revise.jl#L505-L516

just to the code cells.
but that wouldn't be too hard.
