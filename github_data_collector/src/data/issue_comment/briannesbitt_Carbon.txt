- Allow to construct Carbon/CarbonImmutable instance from DateTime/DateTimeImmutable
- Allow to construct CarbonInterval from DateInterval
- Allow to construct CarbonPeriod from DatePeriod

All using standard constructor:
```php
$date = new Carbon(new DateTime(/* ... */));
$interval = new CarbonInterval(new DateInterval(/* ... */));
$period = new CarbonPeriod(new DatePeriod(/* ... */));
```
<!--
    ðŸ›‘ DON'T REMOVE ME.
    This issue template apply to all
      - bug reports,
      - feature proposals,
      - and documentation requests

    Having all those informations will allow us to know exactly
    what you expect and answer you faster and precisely (answer
    that matches your Carbon version, PHP version and usage).
    
    Note: Comments between <!- - and - -> won't appear in the final
    issue (See [Preview] tab).
-->
Hello,

I encountered an issue with the following code:
```php
echo Carbon::getLocale(); // en
echo Carbon::now()->locale(); // en
echo Carbon::now()->startOfWeek()->dayName; // Monday
Carbon::setLocale('en_US');
echo Carbon::now()->startOfWeek()->dayName; // Monday

echo Carbon::now()->locale('en')->startOfWeek()->dayName; // Sunday
```
Trying to figure out all of the different (apparently competing?) localization settings makes my head spin.  The issue seems to be that "firstWeekDay" will only ever be determined by a local translator, not the default translator:

Carbon\Traits\Localization\Date:928
```php
case $name === 'firstWeekDay':
    return $this->localTranslator ? ($this->getTranslationMessage('first_day_of_week') ?? 0) : static::getWeekStartsAt();
```

I'm not sure what the point of `static::$weekStartsAt` is...backward compatibility?  It conflicts with what the default translator is supposed to return.

As far as I can tell, the only way to solve this is to use the deprecated methods `setWeekStartsAt()` AND `setWeekEndsAt()` (which for some bizarre reason is not calculated automatically), or explicitly include the `locale()` call every single time I use these methods (even though it already is the default).  Am I missing something obvious here?

I would propose removing the default values for `static::$weekStartsAt/EndsAt`, and changing the getters to only use them if they are explicitly set:
```php
case $name === 'firstWeekDay':
    return static::getWeekStartsAt() ?? $this->getTranslationMessage('first_day_of_week', null, 0);
```

This is a simple change and I would be happy to submit a PR if acceptable, but it would technically be breaking, even though it's a bugfix in my opinion.


Carbon version: 2.28.0

PHP version: 7.4.0

<!--
    Run the command `composer show nesbot/carbon`
    to get "versions"
    Use `echo phpversion();`
    to get PHP version.

    Some issues can depends on your context, settings,
    macros, timezone, language. So to be sure the code
    you give is enough to reproduce your bug, try it
    first in:
    https://try-carbon.herokuapp.com/?theme=xcode&export&embed

    You can use the [Options] button to change the version
    then when you get the bug with this editor, you can use
    the [Export] button, copy the link of the opened tab,
    then paste it in the issue. Then we can immediatly get
    your issue.
-->


I expected to get: (with default 'en' or 'en_US' locale)

```
echo Carbon::now()->startOfWeek()->dayName; // Sunday
```
<!--
    Always give your expectations. Each use has their owns.
    You may want daylight saving time to be taken into account,
    someone else want it to be ignored. You may want timezone
    to be used in comparisons, someone else may not, etc.
-->

But I actually get:

```
echo Carbon::now()->startOfWeek()->dayName; // Monday
```
<!--
    If you did not succeed to get the same result in
    https://try-carbon.herokuapp.com/ then precise the
    result you get.
-->

Thanks!

Carbon translations has been checked against CLDR in #1871
http://cldr.unicode.org

Missing translations has been added and some mistakes in Carbon have been spotted.

In the next version, I'll try to spot more possible improvements by checking the revealed differences.
Hello:
    As described in the  in the title, do you plan to translate the documents of the project? Or do you have MD version of the documents of the project? I plan to translate the documents into other languages, because the English version is not convenient for me to read
Resolves #1846

Just threw together a WIP (nothing works atm), taking parts from https://github.com/nunomaduro/larastan/pull/301 and Larastan.

@kylekatarnls is this the direction you want this to go?
<!--
    ðŸ›‘ DON'T REMOVE ME.
    This issue template apply to all
      - bug reports,
      - feature proposals,
      - and documentation requests

    Having all those informations will allow us to know exactly
    what you expect and answer you faster and precisely (answer
    that matches your Carbon version, PHP version and usage).
    
    Note: Comments between <!- - and - -> won't appear in the final
    issue (See [Preview] tab).
-->

I am trying to statically analyse my code with PhpStan and found no mechanism to discover Macros that are registered with Carbon.

```php
Carbon::macro('foo', function() {}));

$now = new Carbon();
$now->foo();
```

When running PhpStan on that code, i get an error message like this:

`'#Call to an undefined method Carbon\\Carbon::foo\(\).#'`

PhpStan allows configuring extension points that extend the analysis capabilities in such a way that Macros can be detected, for example https://github.com/nunomaduro/larastan/blob/master/src/Methods/Pipes/Macros.php

I can champion this feature. Are you willing to add it to Carbon?
Hei!

I haven't been actively developing in PHP since a year or so, but I'm still getting occasional updates from https://github.com/php/php-src. One of the news is that https://github.com/php/php-src/pull/3121 have finally been merged! It'll be available in PHP 7.4 but I'm not sure about the earlier releases.

It may be then a good idea to think about making CarbonPeriod extend the DatePeriod. However, as we had to remake the thing from scratch, I'm not sure about the compatiblity, particularly as I don't know which versions of PHP should be supported by Carbon 2.

In any case I think I should be able to help with the research and refactoring after the sommer if you think that should be done :)
# January 2020

### [2.29](https://github.com/briannesbitt/Carbon/milestone/47)
  - [x] #1969 Fix OPCache pre-loading compatibility
  - [x] #1971 Improve performances (bottleneck in loading translations files).
  - [x] #1980 CarbonPeriod no longer set default locale to iterated date
  - [x] #1989 Allow local setter/getter macros
  - [ ] #1988 Fix creation of Carbon instances using reflection
  - [ ] #1963 Improve compliance of translations with CLDR database (second step, deeper check)

### Documentation
  - [ ] Create a tutorial to show best-practice with Laravel 6 and 7

# February 2020
  - [ ] #1986 Allow constructors to take DateTime/DateTimeImmutable/DateInterval/DatePeriod

### Documentation
  - [ ] Create a tutorial to show best-practice with Symfony 5

# Long term
  - [ ] #1752 Refactor `CarbonPeriod` to extend `DatePeriod`
  - Improve performances.
  - Improve and create more mixins libraries such as https://github.com/kylekatarnls/business-day and https://github.com/kylekatarnls/business-time

A big thank you to [Tidelift subscribers](https://tidelift.com/subscription/pkg/packagist-nesbot-carbon?utm_source=packagist-nesbot-carbon&utm_medium=referral&utm_campaign=roadmap), and [OpenCollective Sponsors](https://opencollective.com/Carbon#sponsor)/[Backers](https://opencollective.com/Carbon#backer) that sustain all this work, allow me to allocate time in advance for next features.