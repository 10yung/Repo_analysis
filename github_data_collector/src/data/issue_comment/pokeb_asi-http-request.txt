留下足迹, 以示怀念和致敬!
I have a project to use it as Network connection, but currently the app update is rejected by Apple because the IPV6-only reason, could you please help me to confirm that the ASIHTTPRequest can work correctly in IPV6-only network?
Dear ,

Thank you for your support.

I just want to know that is this library using any Data Encryption processing (like "AES", "3DES", "RSA", "DH" etc), if yes could you please give some information about it, if possible.

Thanks in advance.
PR includes:

• Fixes from forks by @OpenFibers (#356), @John1261, @gbanfalvikl and @whlsxl (#377).
• Fixes for all build warnings in Xcode 9.2.
• Fixes for all Analyzer warnings in Xcode 9.2.
• Tested to be working on iOS 9.0~11.1.
• Not yet working on macOS.

While this PR will more likely never be merged, anyone can use it by adding `pod 'ASIHTTPRequest', :git => 'https://github.com/codelathe/asi-http-request.git'` to their Podfile.
多好的一个网络库，惋惜！
User & password with special characters are corrupted.
Here is the fix.
ASI  support https ?
I have a web server running Nginx with self-signed certificate installed wich is required client certificate who want to access, but when I use ASIHTTPRequest with my client certificate p12 file to request to this server it always fail with message: 
`@"NSLocalizedDescription" : @"A connection failure occurred: SSL problem (Possible causes may include a bad/expired/self-signed certificate, clock set to wrong date)"`

I'm pretty sure, my client certificate is valid.

Here is my Objective-C code.

```
+ (NSString *)getRequest:(NSString *)urlString
{
    NSURL *url = [NSURL URLWithString:urlString];

    SecIdentityRef identity = NULL;
    SecTrustRef trust = NULL;
    NSData *PKCS12Data = [NSData dataWithContentsOfFile:[[NSBundle mainBundle] pathForResource:@"clientcert" ofType:@"p12"]];
    [Mics extractIdentity:&identity andTrust:&trust fromPKCS12Data:PKCS12Data];

    ASIHTTPRequest *request = [ASIHTTPRequest requestWithURL:url];
    [request setClientCertificateIdentity:identity];
    [request setValidatesSecureCertificate:NO];
    [request startSynchronous];

    NSError *error = [request error];
    if (!error) {
        return [request responseString];
    }

    return HTMLError;
}

+ (BOOL)extractIdentity:(SecIdentityRef *)outIdentity andTrust:(SecTrustRef*)outTrust fromPKCS12Data:(NSData *)inPKCS12Data
{
    OSStatus securityError = errSecSuccess;

    NSDictionary *optionsDictionary = [NSDictionary dictionaryWithObject:@"PasswordOfP12File" forKey:(id)kSecImportExportPassphrase];

    CFArrayRef items = CFArrayCreate(NULL, 0, 0, NULL);
    securityError = SecPKCS12Import((CFDataRef)inPKCS12Data,(CFDictionaryRef)optionsDictionary,&items);

    if (securityError == 0) {
        CFDictionaryRef myIdentityAndTrust = CFArrayGetValueAtIndex (items, 0);
        const void *tempIdentity = NULL;
        tempIdentity = CFDictionaryGetValue (myIdentityAndTrust, kSecImportItemIdentity);
        *outIdentity = (SecIdentityRef)tempIdentity;
        const void *tempTrust = NULL;
        tempTrust = CFDictionaryGetValue (myIdentityAndTrust, kSecImportItemTrust);
        *outTrust = (SecTrustRef)tempTrust;
    } else {
        NSLog(@"Failed with error code %d",(int)securityError);
        return NO;
    }
    return YES;
}
```

I've been trying, and failing, to use [Vienna](http://www.vienna-rss.org) to connect to JIRA's activity log RSS feed.  I've seemingly tracked the problem down to line 1000 of ASIHTTPRequest.m:

```
if ([credentials objectForKey:@"Authentication"]) {
```

Dumping the credentials object shows that it is non-null, but its status is "Failed" (I've replaced the real URL with myjira, and the username and password):

```
2016-08-19 17:59:26.797 Vienna[12876:5863347] credentials = {
    Authentication = "<CFHTTPAuthentication 0x6180001e1f00>{state = Failed; scheme = OAuth, forProxy = false}";
    AuthenticationRealm = "http%3A%2F%2Fmyjira%3A8080";
    AuthenticationScheme = OAuth;
    Credentials =     {
        kCFHTTPAuthenticationPassword = "password";
        kCFHTTPAuthenticationUsername = username;
    };
    URL = "http://myjira:8080/activity?maxResults=500&os_authType=basic&title=undefined";
}
```

So, I've replaced line 1000 of ASIHTTPRequest with:

```
CFHTTPAuthenticationRef auth = (CFHTTPAuthenticationRef)[credentials objectForKey:@"Authentication"];
if (auth && CFHTTPAuthenticationIsValid(auth, nil)) {
```

And it now works - it connects to JIRA fine.  It obviously doesn't do anything with the error yet (I've just passed nil), but is this solution along the right lines?

Many thanks,
James

When I use cocoapod add ASIHTTPRequest to my project, there is some wrong with #import <zlib.h>. I don't know how to fix it.
