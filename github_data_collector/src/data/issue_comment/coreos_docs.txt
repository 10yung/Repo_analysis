I'm trying to disable IPv4 on a system I'm working on to check how a project interacts over purely IPv6.
A no of  changes in these commits are :

1. In docs: add ssh key for vmware doc

2. In docs: update link to /why/#updates

3. In os/guid: add coreos-early-cryptsetup

4. change redis image to use redis:4 (version 4.0.9)

5. Updated Link: Projects using etcd

6. In os/booting...gce: Add section on OS Login

7. In os: add user-docs on how to create and host custom torcx remotes

8. In os: add user-docs on how to use custom torcx remotes and images

9. Final [ImgBot] Optimize images
RedHat is already released quay 3. But the [newest release](https://coreos.com/quay-enterprise/releases/) on CoreOS is 2.9.3, which is more than one year ago. Should we Quay enterprise customer change the vendor from CoreOS to Redhat? Since the Quay 2 lack support for docker manifest 2_2.
I've followed the following guide:
https://coreos.com/os/docs/latest/booting-on-virtualbox.html

This is when using VirtualBox version **6.0.10 r132072**.

Specifically I followed the steps to download and run `create-coreos-vdi`, then I followed the same instructions for `create-basic-configdrive` and used the example arguments and my non-password-protected public key. I also ran the `VBoxManage` commands (though I had to change the one command to `VBoxManage clonehd coreos_production_2135.6.0.vdi my_vm01.vdi` as `coreos_production_stable.vdi` doesn't exist).

Finally I used the GUI to finish creating the machine following the instructions, selecting the new 10GB disk. I then enabled port forwarding using the recommended steps. However, when I attempt to SSH into the machine, I get a password prompt:

```
ssh core@localhost -p2222
```

The expected result is that my public key would satisfy the login attempt.
Hello,

[Here](https://github.com/coreos/docs/blob/master/os/adding-disk-space.md) it says that AWS EBS does not let you resize the block device size on the fly. I guess this documentation is old, needs an update.
This documents how to create and host a custom Torcx remote, and
shows the contents and layout of a sample one.
This adds a walk-through and CLC snippets on how to configure custom
remotes and use addons from there.
What domains are using for auto-updating?

- domains
- ports, unless 443
- protocols, unless HTTPS

They need to be listed here:
https://github.com/coreos/docs/blob/master/os/update-strategies.md

This is required for deployments that have restriction outbound traffic and where domain whitelisting is used.

Add some clarification on this topic.