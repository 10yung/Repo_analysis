Dear Alboukadel Kassambara,

Thanks for your awesome package to visualize results of cluster analysis! 

I have 1 suggestion for enhancement for the fviz_dend method.

At the moment you can only label the records and color them by cluster. It would be nice if one could change the shape and other aspects of the leafs in de dendritic tree according to other factors. For instance, coloring by cluster and shape by a second feature.

Kind regards,
Hanne
Hi!

I would like to know how would it be possible to use a distance matrix as the only input for the different functions of factoextra package such as: fviz_nbclust, fviz_silhouette etc...
Indeed, considering my data, I can not have a classical matrix with samples and descriptors.

Thanks a lot for your answer.

Best regards 

Simon

Hi,

I used the function fviz_pca_biplot() and was wondering if it is possible to change the color of my variable names to be different from the arrows ?

For example, I would like have my arrows to be orange, but the names in black.

Is it feasable?

Thank you very much
I'm reporting 3 different representations for my clustering: colored dendrogram, PCA scatterplot and silhouette thanks to fviz_cluster, fviz_dend and fviz_silhouette respectively. I'm facing the following issue: the clusters aren't colored with the same colors across the plots. More specifically, it seems that the both the PCA and the silhouette plots follow the same color-cluster mapping, but not the dendrogram.

I've been digging in the source code a bit, appears that the dendrogram plot is produced by dendextend while the others by ggplot. I guess the difference of mapping originates from there.

I perform my cut using the `hcut` function, the same hcut object is then passed to the three visualization functions. 

Here is an example screenshot of my output:
![image](https://user-images.githubusercontent.com/26633251/66559740-2e6b2780-eb56-11e9-88ec-4e5be99c3993.png)

As you can see, the smaller cluster is colored red in the dendrogram and blue in the silhouette and scatterplot.

Factoextra is fantastic! I'm trying to draw insight from the `mean.point` calculation feature when using a grouping variable with `fviz_pca_ind`.  

I want to be able to (1) extract the dim1 and dim2 values of the mean point that is calculated for each group shown in the plot below. And from there (2) I'd like to work backwards to see what the "average" values would then be for my original variables. 

Essentially, based on the mock data I've provided below, I want to get a snapshot of the "average" university for group 1 and for group 2 as calculated below, but express it in my original variables. Any assistance in doing so would be greatly appreciated.

Create some mock data
```{r set up uni data}
uni_data <- tibble(institution        = c("Uni A", "Uni B", "Uni C", "Uni D", "Uni E", "Uni F"),
                   group              = c("G2", "G2", "G1", "G2", "G1", "G1"),
                   year               = c("2015", "2015", "2015", "2015", "2015", "2015"),
                   academic_staff     = c(1000, 2000,  1500, 500,  3000,  2000),
                   non_academic_staff = c(750,  2250,  1500, 750,  2600,  2100),
                   ug_completions     = c(3000, 6200,  4400, 1600, 8900,  5000),
                   research_pubs      = c(1750, 1500,  2050, 1200, 3050,  2800),
                   cap_ex             = c(2000000, 1000000, 5000000, 250000, 4000000, 3000000),
                   attrition_rate     = c(0.2, 0.12, 0.15, 0.25, 0.1, .13))
```

Clean up for PCA
```{r clean uni data}
pca_data <- uni_data %>% 
  column_to_rownames(var = "institution") %>% 
  select(-c(year, group)) 
```

Run PCA
```{r run pca}
uni_pca <- PCA(pca_data, scale.unit = T, graph = F)
```

Plot
```{r plot ind options}
fviz_pca_ind(uni_pca, 
             col.ind = uni_data$group,
             addEllipses = T,
             ellipse.type = "confidence",
             ellipse.level = 0.95,
             repel = TRUE )
```
![image](https://user-images.githubusercontent.com/28376537/65318215-95915e00-dbe0-11e9-9c72-22089dcfc19d.png)

Hi there !

First of all I would like toi warmly thank you for this awesome tool.
 
While using it to perform some MFA output explorations (MFA generated with FactoMineR) I notice the following error with fviz_mfa_var().

It is easy to reproduce following the using the code chunk provided in the help page of fviz_mfa().


```
library("FactoMineR")
library("factoextra")

data(wine)
res.mfa <- MFA(wine,
                          group=c(2,5,3,10,9,2),
                          type=c("n",rep("s",5)),
                          ncp=5,
                          name.group=c("orig","olf","vis","olfag","gust","ens"),
                          num.group.sup=c(1,6),
                          graph=FALSE)

# Quantitative variables
fviz_mfa_var(res.mfa,
                     "quanti.var",
                      palette = "jco",
                      col.var.sup = "violet", repel = TRUE)

**Error in `[.data.frame`(X$call$X, rownames(ind), grp, drop = FALSE) : 
  undefined columns selected**

session_info()
- Session info -----------------------------------------------------------------------------------------------------------------------
 setting  value                       
 version  R version 3.6.1 (2019-07-05)
 os       Windows >= 8 x64            
 system   x86_64, mingw32             
 ui       RStudio                     
 language (EN)                        
 collate  French_France.1252          
 ctype    French_France.1252          
 tz       Europe/Paris                
 date     2019-09-05                  

- Packages ---------------------------------------------------------------------------------------------------------------------------
 ! package              * version   date       lib source                                
   assertthat             0.2.1     2019-03-21 [1] CRAN (R 3.6.1)                        
   backports              1.1.4     2019-04-10 [1] CRAN (R 3.6.0)                        
   beeswarm               0.2.3     2016-04-25 [1] CRAN (R 3.6.0)                        
   Biobase              * 2.44.0    2019-05-02 [1] Bioconductor                          
   BiocGenerics         * 0.30.0    2019-05-02 [1] Bioconductor                          
   BiocParallel         * 1.18.1    2019-08-06 [1] Bioconductor                          
   bitops                 1.0-6     2013-08-17 [1] CRAN (R 3.6.0)                        
   callr                  3.3.1     2019-07-18 [1] CRAN (R 3.6.1)                        
   cli                    1.1.0     2019-03-19 [1] CRAN (R 3.6.1)                        
   cluster                2.1.0     2019-06-19 [1] CRAN (R 3.6.1)                        
   codetools              0.2-16    2018-12-24 [1] CRAN (R 3.6.1)                        
   colorspace             1.4-1     2019-03-18 [1] CRAN (R 3.6.1)                        
   corpcor                1.6.9     2017-04-01 [1] CRAN (R 3.6.0)                        
   corrplot               0.84      2017-10-16 [1] CRAN (R 3.6.1)                        
   cowplot                1.0.0     2019-07-11 [1] CRAN (R 3.6.1)                        
   crayon                 1.3.4     2017-09-16 [1] CRAN (R 3.6.1)                        
   curl                   4.0       2019-07-22 [1] CRAN (R 3.6.1)                        
   DelayedArray         * 0.10.0    2019-05-02 [1] Bioconductor                          
   desc                   1.2.0     2018-05-01 [1] CRAN (R 3.6.1)                        
   devtools             * 2.1.0     2019-07-06 [1] CRAN (R 3.6.1)                        
   digest                 0.6.20    2019-07-04 [1] CRAN (R 3.6.1)                        
   doParallel             1.0.15    2019-08-02 [1] CRAN (R 3.6.1)                        
   dplyr                * 0.8.3     2019-07-04 [1] CRAN (R 3.6.1)                        
   ellipse                0.4.1     2018-01-05 [1] CRAN (R 3.6.1)                        
 V factoextra           * 1.0.5     2019-09-05 [1] Github (kassambara/factoextra@8736d0b)
   FactoMineR           * 1.42      2019-07-03 [1] CRAN (R 3.6.1)                        
   flashClust             1.01-2    2012-08-21 [1] CRAN (R 3.6.0)                        
   foreach                1.4.7     2019-07-27 [1] CRAN (R 3.6.1)                        
   fs                     1.3.1     2019-05-06 [1] CRAN (R 3.6.1)                        
   GenomeInfoDb         * 1.20.0    2019-05-02 [1] Bioconductor                          
   GenomeInfoDbData       1.2.1     2019-08-12 [1] Bioconductor                          
   GenomicRanges        * 1.36.0    2019-05-02 [1] Bioconductor                          
   ggbeeswarm             0.6.0     2017-08-07 [1] CRAN (R 3.6.1)                        
   ggplot2              * 3.2.1     2019-08-10 [1] CRAN (R 3.6.1)                        
   ggpubr                 0.2.3     2019-09-03 [1] CRAN (R 3.6.1)                        
   ggrepel                0.8.1     2019-05-07 [1] CRAN (R 3.6.1)                        
   ggsignif               0.6.0     2019-08-08 [1] CRAN (R 3.6.1)                        
   glue                   1.3.1     2019-03-12 [1] CRAN (R 3.6.1)                        
   gridExtra              2.3       2017-09-09 [1] CRAN (R 3.6.1)                        
   gtable                 0.3.0     2019-03-25 [1] CRAN (R 3.6.1)                        
   igraph                 1.2.4.1   2019-04-22 [1] CRAN (R 3.6.1)                        
   IRanges              * 2.18.1    2019-05-31 [1] Bioconductor                          
   iterators              1.0.12    2019-07-26 [1] CRAN (R 3.6.1)                        
   jsonlite               1.6       2018-12-07 [1] CRAN (R 3.6.1)                        
   knitr                  1.24      2019-08-08 [1] CRAN (R 3.6.1)                        
   labeling               0.3       2014-08-23 [1] CRAN (R 3.6.0)                        
   lattice              * 0.20-38   2018-11-04 [1] CRAN (R 3.6.1)                        
   lazyeval               0.2.2     2019-03-15 [1] CRAN (R 3.6.1)                        
   leaps                  3.0       2017-01-10 [1] CRAN (R 3.6.1)                        
   magrittr               1.5       2014-11-22 [1] CRAN (R 3.6.1)                        
   MASS                 * 7.3-51.4  2019-03-31 [1] CRAN (R 3.6.1)                        
   Matrix                 1.2-17    2019-03-22 [1] CRAN (R 3.6.1)                        
   matrixStats          * 0.54.0    2018-07-23 [1] CRAN (R 3.6.1)                        
   memoise                1.1.0     2017-04-21 [1] CRAN (R 3.6.1)                        
   mixOmics             * 6.8.1     2017-02-06 [1] Github (mixOmicsTeam/mixOmics@0754a80)
   MOFA                 * 1.0.0     2019-05-02 [1] Bioconductor                          
   MultiAssayExperiment * 1.10.4    2019-05-20 [1] Bioconductor                          
   munsell                0.5.0     2018-06-12 [1] CRAN (R 3.6.1)                        
   pheatmap             * 1.0.12    2019-01-04 [1] CRAN (R 3.6.1)                        
   pillar                 1.4.2     2019-06-29 [1] CRAN (R 3.6.1)                        
   pkgbuild               1.0.5     2019-08-26 [1] CRAN (R 3.6.1)                        
   pkgconfig              2.0.2     2018-08-16 [1] CRAN (R 3.6.1)                        
   pkgload                1.0.2     2018-10-29 [1] CRAN (R 3.6.1)                        
   plyr                   1.8.4     2016-06-08 [1] CRAN (R 3.6.1)                        
   prettyunits            1.0.2     2015-07-13 [1] CRAN (R 3.6.1)                        
   processx               3.4.1     2019-07-18 [1] CRAN (R 3.6.1)                        
   ps                     1.3.0     2018-12-21 [1] CRAN (R 3.6.1)                        
   purrr                  0.3.2     2019-03-15 [1] CRAN (R 3.6.1)                        
   R6                     2.4.0     2019-02-14 [1] CRAN (R 3.6.1)                        
   rARPACK                0.11-0    2016-03-10 [1] CRAN (R 3.6.1)                        
   RColorBrewer           1.1-2     2014-12-07 [1] CRAN (R 3.6.0)                        
   Rcpp                   1.0.2     2019-07-25 [1] CRAN (R 3.6.1)                        
   RCurl                  1.95-4.12 2019-03-04 [1] CRAN (R 3.6.0)                        
   remotes                2.1.0     2019-06-24 [1] CRAN (R 3.6.1)                        
   reshape              * 0.8.8     2018-10-23 [1] CRAN (R 3.6.1)                        
   reshape2               1.4.3     2017-12-11 [1] CRAN (R 3.6.1)                        
   reticulate             1.13      2019-07-24 [1] CRAN (R 3.6.1)                        
   rhdf5                  2.28.0    2019-05-02 [1] Bioconductor                          
   Rhdf5lib               1.6.0     2019-05-02 [1] Bioconductor                          
   rlang                  0.4.0     2019-06-25 [1] CRAN (R 3.6.1)                        
   rprojroot              1.3-2     2018-01-03 [1] CRAN (R 3.6.1)                        
   RSpectra               0.15-0    2019-06-11 [1] CRAN (R 3.6.1)                        
   rstudioapi             0.10      2019-03-19 [1] CRAN (R 3.6.1)                        
   S4Vectors            * 0.22.0    2019-05-02 [1] Bioconductor                          
   scales                 1.0.0     2018-08-09 [1] CRAN (R 3.6.1)                        
   scatterplot3d          0.3-41    2018-03-14 [1] CRAN (R 3.6.0)                        
   sessioninfo            1.1.1     2018-11-05 [1] CRAN (R 3.6.1)                        
   snow                   0.4-3     2018-09-14 [1] CRAN (R 3.6.0)                        
   stringi                1.4.3     2019-03-12 [1] CRAN (R 3.6.0)                        
   stringr                1.4.0     2019-02-10 [1] CRAN (R 3.6.1)                        
   SummarizedExperiment * 1.14.1    2019-07-31 [1] Bioconductor                          
   testthat               2.2.1     2019-07-25 [1] CRAN (R 3.6.1)                        
   tibble                 2.1.3     2019-06-06 [1] CRAN (R 3.6.1)                        
   tidyr                  0.8.3     2019-03-01 [1] CRAN (R 3.6.1)                        
   tidyselect             0.2.5     2018-10-11 [1] CRAN (R 3.6.1)                        
   usethis              * 1.5.1     2019-07-04 [1] CRAN (R 3.6.1)                        
   vipor                  0.4.5     2017-03-22 [1] CRAN (R 3.6.1)                        
   withr                  2.1.2     2018-03-15 [1] CRAN (R 3.6.1)                        
   xfun                   0.9       2019-08-21 [1] CRAN (R 3.6.1)                        
   XVector                0.24.0    2019-05-02 [1] Bioconductor                          
   yaml                   2.2.0     2018-07-25 [1] CRAN (R 3.6.0)                        
   zlibbioc               1.30.0    2019-05-02 [1] Bioconductor             
```

Thanks a lot and have a nice day !

Pef

How can I draw the confidence ellipses like using FactoMineR::ellipseCA.

I tried to find the option of fviz_ca, but could not find.

Please advice to me.

Please, add the possibility to make variable name labels aligned at the tips of the arrows and rotated according to the angle of the arrows in `fviz_*_var()` and fviz_*_biplot()` type functions, e.g., in `fviz_pca_var()`.
Here are several examples of how the result should look like:

![example-1](https://user-images.githubusercontent.com/12725868/62008474-67068200-b15f-11e9-9bc4-405c713d060a.png)
<sup>(source: https://github.com/vqv/ggbiplot)</sup>

![example-2](https://user-images.githubusercontent.com/12725868/62008401-4f2efe00-b15f-11e9-9a46-afcaad458de8.png)
<sup>(source: https://www.datacamp.com/community/tutorials/pca-analysis-r)</sup>

I was trying to figure out why these two functions from the `factoextra` package, run with seemingly similar parameters (_e.g._ `kmeans`, `gap_stat`, `k.maxandB`), were yielding different results.

I initially [posed this question on Stack Overflow](https://stackoverflow.com/questions/54394604/factoextrafviz-gap-stat-versus-factoextrafviz-nbclustdf-method-gap-st/57168122#57168122) ; however, the response seems to suggest a bug/issue.

```
library(cluster)
library(cluster.datasets)
library(tidyverse)
library(factoextra)

# load data and scale it
data("all.mammals.milk.1956")
mammals <- all.mammals.milk.1956 %>% select(-name)
mammals_scaled <- scale(mammals)

gap_stat <- clusGap(mammals_scaled, FUN = kmeans, K.max = 24, B = 50)

fviz_gap_stat(gap_stat) + theme_minimal() + ggtitle("fviz_gap_stat: Gap Statistic")
fviz_nbclust(mammals_scaled, kmeans, method = "gap_stat", k.max = 24, nboot = 50) + theme_minimal() + ggtitle("fviz_nbClust_gap_stat: Gap Statistic")
```

The `fviz_nbClust` function has a `set.seed(123)` in it while the function `clusGap` does not and since the kmeans algorithm uses a random start the results can be different in repeated runs.

If one set's the seed before running `clusGap` we achieve the same results as `fviz_nbClust`:

```
set.seed(123)  
gap_stat <- cluster::clusGap(mammals_scaled, FUN = kmeans, K.max = 24, B = 50)   
fviz_gap_stat(gap_stat) + theme_minimal() + ggtitle("fviz_gap_stat: Gap Statistic")
fviz_nbclust(mammals_scaled, kmeans, method = "gap_stat", k.max = 24, nboot = 50) + theme_minimal() + ggtitle("fviz_nbClust_gap_stat: Gap Statistic")
```

I suggest including `set.seed(123)` in the `clusGap` function to make the the results of these two functions comparable.