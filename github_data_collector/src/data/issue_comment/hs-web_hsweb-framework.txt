# 环境
java: 1.8.0_131
hsweb: 3.0.11.SNAPSHOT

# 问题说明
https://github.com/hs-web/hsweb-framework/blob/9eb96c4c7e6912253de3783673a922c216b5eec7/hsweb-commons/hsweb-commons-service/hsweb-commons-service-simple/src/main/java/org/hswebframework/web/service/GenericEntityService.java#L101-L105

# BUG 说明
接口自动注入Authorization 获取到的用户为空，
通过Authorization.current().get().getUser()获取当前登录用户有时正确有时不正确，可能获取到的是其他用户
# 运行环境
java: 1.8.0_131
maven: 3.3.9
hsweb: 3.0.9
 
# 复现步骤
登录时传入的token_type:token
# 期望结果
登录获取用户信息一致

# 截图说明

### 运行环境

`hsweb version`:  **3.0.11-SNAPSHOT**
`mybatis`:  **3.5.3**
```yaml
mybatis:
  mapper-locations: classpath:/mapper/**/*.xml
  type-handlers-package: com.xxx.entity.enums
```

### 复现步骤

```java
/**
 * 实体类
 */
public class Student {

    private StatusEnum status
    
    // ignore getter/setter
}
/**
 * 状态枚举
 */
public enum StatusEnum implements EnumDict<Integer> {
    Created(0, "created"),

    Deleted(1, "deleted") 

    private final Integer value;
    private final String key;

     // ignore constructor/getter
}
```

```xml
<!-- Mybatis xml resultMap -->
<result property="status" column="status" jdbcType="TINYINT"/>
```
执行`insert`时报错：`Caused by: java.lang.UnsupportedOperationException: 值Created无法转换为数字`

### 原因分析
https://github.com/hs-web/hsweb-framework/blob/9eb96c4c7e6912253de3783673a922c216b5eec7/hsweb-commons/hsweb-commons-dao/hsweb-commons-dao-mybatis/src/main/java/org/hswebframework/web/dao/mybatis/builder/EasyOrmSqlBuilder.java#L253-L256
https://github.com/hs-web/hsweb-framework/blob/9eb96c4c7e6912253de3783673a922c216b5eec7/hsweb-commons/hsweb-commons-dao/hsweb-commons-dao-mybatis/src/main/java/org/hswebframework/web/dao/mybatis/builder/TypeUtils.java#L32-L36

在此场景下，`status`字段构造的`column`对象满足`TypeUtils.isNumberType(column)`该条件，因此会给该column设置`NumberValueConverter`, 但是此时`column.getJavaType()`的值为`Enum`类型
# 使用hsweb时的常见问题及解决方式
这里只列出了常见问题的解决方式,如果有更多问题,请在下方`留言`或者[提交issues](https://github.com/hs-web/hsweb-framework/issues/new)

##  mybatis报错1
 `There is no getter for property named 'xxxx' in 'class org.hswebframework.web.commons.entity.param.QueryParamEntity'`

检查 Mapper.xml中的配置项:
```xml
 <sql id="config">
 <!--
注意: value值是ognl表达式,因此要使用单引号来声明字符串,例如: 's_organization' 
-->
        <bind name="resultMapId" value="'OrganizationalResultMap'"/>
        <bind name="tableName" value="'s_organization'"/> 
  </sql>
```
## mybatis报错2: 
Invalid bound statement (not found): com.xxxx.Xxxxx.select

1. 检查`Mapper.xml`是否被编译到`target`. 建议将xml都放到`src/resources`目录下
2. 检查`Mapper.xml`所在的包名, 在文件系统里是否为`com/xxx/Xxxx.xml` 而不是 `com.xxx/Xxxx.xml`
3. 检查`application.yml`中是否配置了`mybaits.mapper-locations` 配置,例如:
```yaml
mybatis:
    mapper-locations: com/xxx/**/*.xml
