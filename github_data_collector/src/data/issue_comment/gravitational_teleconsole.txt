The are no instruction how to uninstall teleconsole
Can this be used to gain access to a computer that is unattended? Like remoteing into a computer with out forwarding ports???
Using GitHub identity to share a session does not work for me!

Version: **Teleconsole 0.4.0**

SSH key pair was created with following command (without passphrase) and public key was successfully added to GitHub account:

```bash
ssh-keygen -t rsa -b 2048 -f .ssh/$github_user_key
```

Session was created by running:

```bash
teleconsole -i $github_user
```

When I try to join a previously created session I'm always encountering following error:

```bash
teleconsole -vv -i ~/.ssh/$github_user_key join $session_id

Teleconsole: joining session...
ssh: unsupported key type "OPENSSH PRIVATE KEY"
DEBU[0000] 
ERROR REPORT:
Original Error: *errors.errorString ssh: unsupported key type "OPENSSH PRIVATE KEY"
Stack Trace:
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleport/lib/client/interfaces.go:61 github.com/gravitational/teleport/lib/client.(*Key).AsAgentKey
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleport/lib/client/keyagent.go:62 github.com/gravitational/teleport/lib/client.NewLocalAgent
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleport/lib/client/api.go:334 github.com/gravitational/teleport/lib/client.NewClient
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/clt/clt.go:289 github.com/gravitational/teleconsole/clt.Join
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/clt/main.go:166 github.com/gravitational/teleconsole/clt.(*App).Join
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/main.go:37 main.main
	/usr/lib/go/src/runtime/proc.go:212 runtime.main
	/usr/lib/go/src/runtime/asm_amd64.s:1358 runtime.goexit
User Message: 
  file=teleconsole/main.go:61 func=main.fatalIf
```

If I try to use public key, which btw does not make any sense but I had to try it out :slightly_smiling_face::

```bash
teleconsole -vv -i ~/.ssh/$github_user_key.pub join $session_id

DEBU[0000] Server: https://teleconsole.com:443, Args: [join $session_id]  file=teleconsole/main.go:32 func=main.main
Teleconsole: joining session...
ssh: no key found
DEBU[0000] 
ERROR REPORT:
Original Error: *errors.errorString ssh: no key found
Stack Trace:
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/lib/identity.go:179 github.com/gravitational/teleconsole/lib.loginFromFile
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/lib/identity.go:92 github.com/gravitational/teleconsole/lib.MakeIdentityFromFile
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/clt/clt.go:355 github.com/gravitational/teleconsole/clt.findUserFor
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/clt/clt.go:271 github.com/gravitational/teleconsole/clt.Join
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/clt/main.go:166 github.com/gravitational/teleconsole/clt.(*App).Join
	/home/myusername/.cache/yay/teleconsole/src/go/src/github.com/gravitational/teleconsole/main.go:37 main.main
	/usr/lib/go/src/runtime/proc.go:212 runtime.main
	/usr/lib/go/src/runtime/asm_amd64.s:1358 runtime.goexit
User Message: 
  file=teleconsole/main.go:61 func=main.fatalIf
```
[Currently used](https://github.com/gravitational/teleconsole/blob/master/vendor/github.com/Sirupsen/logrus/CHANGELOG.md) `github.com/sirupsen/logrus` 0.10.0 is from early 2016 -- too old.

Please consider upgrading to more recent release: https://github.com/sirupsen/logrus/releases

teleconsole breaks connection on `docker build` in another terminal - on network interfaces changes 
It looks like the repo still using an alpha version of teleport release.

Using the latest 0.4.0 release on AMD64, joining a session either via teleconsole join or via the web no longer works, but the session is created successfully.

Is posible to have the id session fix it?
Is there a way to specify what port(s) teleconsole should listen on? after running `# teleconsole`
random ports are used. For example: 
```
# netstat -ntlup | grep -i teleconsole
tcp        0      0 127.0.0.1:43119         0.0.0.0:*               LISTEN      1461/teleconsole    
tcp        0      0 127.0.0.1:44529         0.0.0.0:*               LISTEN      1461/teleconsole    
tcp        0      0 127.0.0.1:36695         0.0.0.0:*               LISTEN      1461/teleconsole    
tcp        0      0 127.0.0.1:33596         0.0.0.0:*               LISTEN      1461/teleconsole
```

It would be very handy for systems with firewalls active to be able to always start teleconsole with specific ports so they can be allowed through the firewall.
Sitting on my chromebook and loving termux.   Thought to myself, teleconsole would be awesome.  Can't determine the platform


No worries if this is tossed aside, it would be awesome though

Cheers, keep up the great work