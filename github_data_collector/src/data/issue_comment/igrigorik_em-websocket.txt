```
Error during WebSocket handshake: Sent non-empty 'Sec-WebSocket-Protocol' header but no response was received
```

How can I set the header to be binary?
it's ok when start rails with command: rails s -b0.0.0.0 -p8080.

but start rails with commandï¼šrails s -b0.0.0.0 -p8080 -d
can't connect to websocket

server:
config/initializers/websocket.rb
EM.run {
  EM::WebSocket.run(:host => "0.0.0.0", :port => 8082) do |ws|
    ws.onopen { |handshake|
      puts "WebSocket connection open"

      # Access properties on the EM::WebSocket::Handshake object, e.g.
      # path, query_string, origin, headers

      # Publish message to the client
      ws.send "Hello Client, you connected to #{handshake.path}"
    }

    ws.onclose { puts "Connection closed" }

    ws.onmessage { |msg|
      puts "Recieved message: #{msg}"
      ws.send "Pong: #{msg}"
    }
  end
}


client:
html file
<script> 
 var ws = new WebSocket("ws://*.*.*.*:8082");
 ws.onopen = function() {
 alert("websocket is connected...");
 ws.send('send from browser');
 };
 
 ws.onmessage = function (evt) {
 var msg = evt.data;
 alert("Message is received..." + msg);
 };
 
 ws.onclose = function() {
 alert("Connection is closed...");
 };
</script>

<html>
  websocket test
</html>

Based on https://github.com/faye/permessage-deflate-ruby

I did not implement full header param processing ('client_max_window_bits' is ignored). Basically, I added changes until it started to work for me in my environment with some default hardcoded params for inflate/deflate. 

So it is far from full spec implementation (https://tools.ietf.org/html/draft-ietf-hybi-permessage-compression-28).
I hope that someone will improve this code or replace with a more correct solution.
Hello !

I'm trying to start an encrypted WebSocket server.
I had called the method EM:WebSocket.run(:host => "0.0.0.0", :port => 8080, :secure => True, :tls_options => [.. My key and cert ..]) and got the following error message:
"terminate called after throwing an instance of 'std::runtime_error'
what(): Encryption not available on this event machine"

The key and cert are working fine with the Apache server.
The WebSocket server is working fine without encryption.
I installed libssl-div, uninstalled the gem, reinstalled the gem but it's still not working :(
I'm trying to run the WebSocket server on a BackBox 5 virtual machine running on Ubuntu 16.04 host.

Any suggestions ?
em-websocket wont connect over SSL

When trying to connect on `secure => false` connection is working perfectly
but when we try to include `tls_options` and set secure to true.
server just wont start. 
The EventMachine start but EventMachine::WebSocket start boot and get terminated, but EventMachine is still running as a ruby process. What I mean is that I can find it by running `ps aux | grep ruby`. 

This is the STDOUT we get when we start the process.

```
Server started
Terminating WebSocket Server
```

We are using Ruby on rails , nginx server & Ubuntu 12.04, but we don't think that have any thing to do with this issue.

We are using Ruby 2.2.2
eventmachine (1.2.0.1)
em-websocket (0.5.1)

for testing purposes we are using letsencrypt for certificates
When we setup ssl for https we added these lines to nginx.conf

```
ssl_certificate /etc/letsencrypt/live/domain/fullchain.pem;
ssl_certificate_key    /etc/letsencrypt/live/domain/privkey.pem;

ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
ssl_prefer_server_ciphers on;
ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
```

This is the websocket script

``` ruby
require 'em-websocket'

EventMachine.run {
  EventMachine::WebSocket.start(
    :host => "0.0.0.0",
    :port => 8080,
    :debug => true,
    :secure => true,
    :tls_options => {
      :private_key_file => "/etc/letsencrypt/live/domain/privkey.pem",
      :cert_chain_file => "/etc/letsencrypt/live/domain/cert.pem",
      :cipher_list => "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH"
    }
  ) do |ws|
   puts "Sterting Websocket"
   ws.onopen { |connection|
      puts "onOpen"
    }
  end

  puts "Server started"
}
```

Thanks for looking at this :)
Open issue on https://github.com/eventmachine/eventmachine/issues/733 also, not sure where it  belong.

Here's an example WebSocket connection:

```
[31] pry(main)> wss.getWsList[0]
=> #<EventMachine::WebSocket::Connection:0x00000001f35150
 @close_timeout=nil,
 @debug=false,
 @handler=
  #<EventMachine::WebSocket::Handler13:0x00000001f39ef8 @application_data_buffer="", @close_timer=nil, @connection=#<EventMachine::WebSocket::Connection:0x00000001f35150 ...>, @data="", @debug=false, @frame_type=nil, @state=:connected>,
 @handshake=nil,
 @onclose=#<Proc:0x00000001f36af0@/[REDACTED]>,
 @onerror=#<Proc:0x00000001f366e0@/[REDACTED]>,
 @onmessage=#<Proc:0x00000001f367a8@/[REDACTED]>,
 @onopen=#<Proc:0x00000001f36b90@/[REDACTED]>,
 @options={:host=>"0.0.0.0", :port=>443, :secure=>true, :tls_options=>{:private_key_file=>"privkey.pem", :cert_chain_file=>"cert.pem"}},
 @secure=true,
 @secure_proxy=false,
 @signature=3,
 @tls_options={:private_key_file=>"privkey.pem", :cert_chain_file=>"cert.pem"}>
```

I want to get the IP address of the remote host, so I use remote_ip like in commit 705c9f1436e830309a51d68ba9795d10deb0da4e.

```
[33] pry(main)> wss.getWsList[0].remote_ip
NoMethodError: undefined method `remote_ip' for #<EventMachine::WebSocket::Connection:0x00000001f35150>
from (pry):52:in `cmdLine'
```

However if I use the code inside of the remote_ip method I get this:

```
[34] pry(main)> wss.getWsList[0].get_peername[2,6].unpack('nC4')[1..4].join('.')
=> "[REDACTED_IP]"
```

Why wouldn't I have the remote_ip method? I'm using version 0.5.1 of the gem.

ERROR: Error installing em-websocket:
    invalid gem: package is corrupt, exception while verifying: undefined method 'size' for nil:NilClass

I am looking for a ballpark estimate of the number of websocket connections em-websocket could handle on, say, a standard heroku dyno?  And, if you know, how does it compare to the number of connections a socket.io node server could handle?

Sorry if this is the wrong place to ask, but I couldn't find any info googling.

I need to be able to publish data to specific websockets.
The full gist of it is: https://gist.github.com/AvnerCohen/72540e2dc13a56b4be87

Specifically I do something like:

``` ruby
  ws.onmessage do |msg|
      event_type, *data = msg.split(":")
      if event_type == 'typing'
        PublishMessage.do(WS_CLIENTS[data.first], "typing:#{data.last}")
        elsif event_type == 'connected'
          WS_CLIENTS_NAME_TO_SOCKET[ws.get_pid] = data.first
          WS_CLIENTS[data.first] = ws
        end
      end
```

and so, this line:

``` ruby
          WS_CLIENTS[data.first] = ws
```

Saves the websocket for later reference by username.

this is causing MRI to leak, no idea why, any alternative suggestion to overcome this?

I am wondering if the code that gets executed in onmessage, onopen, etc runs on a new thread every time. I know it isn't an issue was just wondering and didn't know where to post
