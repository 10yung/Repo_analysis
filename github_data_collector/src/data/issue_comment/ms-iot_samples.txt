based on https://github.com/ms-iot/samples/pull/498 with some merging â€¦ thanks eG-dev!
Hi,
I'm working with a Raspberry Pi3 and Windows IoT Core v.10.0.16299.125 and USB Aeon Labs Z-Stick Gen 5 attacched to RPi.
The ZWave Provider works great with all ZWave devices until I reboot RPi, after which I do not receive any signal from sleeper device until they send the message "WAKE_UP_NOTIFICATION", but this could happen after a day.
So every signals sent by these devices in this period are lost.

I think it depends from the provider that does not save the information about the devices, so when I restart it the provider must query them again to discover the implemented classes, which cannot happen for the sleeping devices.

Examining the code I noticed that the saving of this information was explicitly deactivated at samples/AllJoyn/Samples/ZWaveAdapter/AdapterLib/ZWaveAdapter.cpp: 171 "Options::Get()->AddOptionBool("SaveConfiguration", false);".

Could be this the cause?
It's possible to receive signals from sleepers devices after reboot?

Thanks
Best Regards
Marco
You are viewing archived documentation. AllJoyn is no longer supported by Windows 10 IoT. For questions, please open an issue on GitHub or leave us feedback in the comments below.

Would you mind clarifying the above statement posted at: https://docs.microsoft.com/en-us/windows/iot-core/archive/alljoyn.

I the latest version of IOT capable of running AllJoyn OnBoarding and Soft Access Point, what are the other options available for creating a private network between a UWP IoT based device (Application) and a Windows WPF Application via wifi using usb wifi dongles only, ultimately neither device will actually have internet capability.

Wifi Direct seems to do a good job between UWP applications but not between UWP and Wpf Applications. 
Visual studio 2015 crashes when I am trying to debug AppServiceBlinky node.js sample at a Remote Machine (Raspberry pi 3 running windows 10 Iot Core). Initially, I set up the remote machine IP and node arguments (--debug --use-logger) at the project properties. When I start debugging (F5), a message 'This project is out of date' appears and after pressing Yes to proceed, the build process ends successfully. But during deployment VS2015 stops working and restarts.



Following are VS characteristics:
Microsoft Visual Studio Community 2015
Version 14.0.25431.01 Update 3
Microsoft .NET Framework
Version 4.7.02046

Installed Version: Community

Microsoft Visual Studio Tools for Applications 2015   00322-20000-00000-AA607
Microsoft Visual Studio Tools for Applications 2015

Visual Basic 2015   00322-20000-00000-AA607
Microsoft Visual Basic 2015

Visual C# 2015   00322-20000-00000-AA607
Microsoft Visual C# 2015

Visual C++ 2015   00322-20000-00000-AA607
Microsoft Visual C++ 2015

Application Insights Tools for Visual Studio Package   7.14.01128.2
Application Insights Tools for Visual Studio

ASP.NET and Web Tools 2015.1 (Beta8)   14.1.11107.0
ASP.NET and Web Tools 2015.1 (Beta8)

ASP.NET Web Frameworks and Tools 2012.2   4.1.41102.0
For additional information, visit http://go.microsoft.com/fwlink/?LinkID=309563

ASP.NET Web Frameworks and Tools 2013   5.2.40314.0
For additional information, visit http://www.asp.net/

Command Bus, Event Stream and Async Manager   Merq
Provides ICommandBus, IEventStream and IAsyncManager MEF services for loosely coupled Visual Studio extension components communication and integration.

Common Azure Tools   1.8
Provides common services for use by Azure Mobile Services and Microsoft Azure Tools.

GitHub.VisualStudio   2.1.1.4
A Visual Studio Extension that brings the GitHub Flow into Visual Studio.

Java language support for Visual Studio   1.0
Java language tools for Visual Studio includes IntelliSense and more... eventually...

Java project support for Visual Studio   1.0
Java project system for Visual Studio

JavaScript Language Service   2.0
JavaScript Language Service

JavaScript Project System   2.0
JavaScript Project System

Microsoft Azure Mobile Services Tools   1.4
Microsoft Azure Mobile Services Tools

Node.js Tools   1.3.41014.01
Adds support for developing and debugging Node.js apps in Visual Studio

Node.js Tools - Profiling   1.3.41014.01
Profiling support for Node.js projects.

NodejsUwp   1.0
VS package for building Node.js UWP applications

NuGet Package Manager   3.5.0
NuGet Package Manager in Visual Studio. For more information about NuGet, visit http://docs.nuget.org/.

PreEmptive Analytics Visualizer   1.2
Microsoft Visual Studio extension to visualize aggregated summaries from the PreEmptive Analytics product.

SQL Server Data Tools   14.0.60519.0
Microsoft SQL Server Data Tools

TypeScript   1.8.36.0
TypeScript tools for Visual Studio

Visual Studio Tools for Universal Windows Apps   14.0.25527.01
The Visual Studio Tools for Universal Windows apps allow you to build a single universal app experience that can reach every device running Windows 10: phone, tablet, PC, and more. It includes the Microsoft Windows 10 Software Development Kit.

Xamarin   4.2.2.6 (27a9b40)
Visual Studio extension to enable development for Xamarin.iOS and Xamarin.Android.

Xamarin.Android   7.0.2.42 (501e63c)
Visual Studio extension to enable development for Xamarin.Android.

Xamarin.iOS   10.3.1.7 (8b53676)
Visual Studio extension to enable development for Xamarin.iOS.
Hello,
I worked with Alljoyn DSB on Windows 10. Today when I searching something in docs i saw 

> You are viewing archived documentation. AllJoyn is no longer supported by Windows 10 IoT. For questions, please open an issue on GitHub or leave us feedback in the comments below.

When this happen?? Any announcement were made? I can't find any information about that? Can you give us (developers) some clarification? Do we have any alternatives ??
Hi,

I'm working with a Raspberry Pi3 and Windows IoT Core. I've installed OS version 15063 (dowloaded from https://www.microsoft.com/en-us/download/details.aspx?id=55029). I have also a Aeon Labs DSA02203-ZWUS Z-Wave Z-Stick Series 2 USB Dongle attached to RPi. Everything should be set up correctly to run the zwave sample as per https://developer.microsoft.com/en-us/windows/iot/samples/zwaveadapter.

I have IoTOnboarding and ZWaveAdapter headless app running on RPi, anyway I do not see anything on IoT Explorer for Alljoyn app on my Win 10 PC (same network and subnet).


While trying to troubleshoot I've noted these errrors on Alljoyn router service in event viewer (192.168.100.25 is address of RPi)


 AJErrorData 
QStatus 0x8 
 Message trans->Connect(tcp:addr=192.168.100.25,port=9955) failed 
 Module ALLJOYN_OBJ 
 File ..\alljoynobj.cc 
 
AJErrorData 
 QStatus 0x8 
 Message TCPTransport::Connect(): Failed 
  Module TCP 
File ..\tcptransport.cc 
 
AJErrorData 
 QStatus 0xa 
 Message UDPTransport::DoConnectCb(): Connect error 
Module UDP 
  File ..\udptransport.cc 



Thanks

Regards

Marco

Hello,
when I use BackgroundApp (IoT) template I get no values from the pins.
I try it exactly as in Foreground App, but there is no event triggered when pressing the button.
Can someone tell me what I do wrong?

Here is my Code


`namespace BackgroundApplication2
{
    public sealed class StartupTask : IBackgroundTask
    {
        private const int LED_PIN = 6;
        private const int BUTTON_PIN = 5;
        private GpioPin ledPin;
        private GpioPin buttonPin;
        private GpioPinValue ledPinValue = GpioPinValue.High;
      
        public void Run(IBackgroundTaskInstance taskInstance)
        {
            InitGPIO();
          }

        private void InitGPIO()
        {
            var gpio = GpioController.GetDefault();

            // Show an error if there is no GPIO controller
            if (gpio == null)
            {
                Debug.WriteLine( "There is no GPIO controller on this device.");
                return;
            }

            buttonPin = gpio.OpenPin(BUTTON_PIN);
            ledPin = gpio.OpenPin(LED_PIN);

            // Initialize LED to the OFF state by first writing a HIGH value
            // We write HIGH because the LED is wired in a active LOW configuration
            ledPin.Write(GpioPinValue.High);
            ledPin.SetDriveMode(GpioPinDriveMode.Output);

            // Check if input pull-up resistors are supported
            if (buttonPin.IsDriveModeSupported(GpioPinDriveMode.InputPullUp))
                buttonPin.SetDriveMode(GpioPinDriveMode.InputPullUp);
            else
                buttonPin.SetDriveMode(GpioPinDriveMode.Input);

            // Set a debounce timeout to filter out switch bounce noise from a button press
            buttonPin.DebounceTimeout = TimeSpan.FromMilliseconds(50);

            // Register for the ValueChanged event so our buttonPin_ValueChanged 
            // function is called when the button is pressed
            buttonPin.ValueChanged += buttonPin_ValueChanged;

            Debug.WriteLine("GPIO pins initialized correctly.");
        }

        private void buttonPin_ValueChanged(GpioPin sender, GpioPinValueChangedEventArgs e)
        {  
            // toggle the state of the LED every time the button is pressed
            if (e.Edge == GpioPinEdge.FallingEdge)
            {
                ledPinValue = (ledPinValue == GpioPinValue.Low) ?
                    GpioPinValue.High : GpioPinValue.Low;
                ledPin.Write(ledPinValue);
           }
 
       }
    
    }
}`
As discussed in https://github.com/ms-iot/samples/issues/522 and in the comments on https://docs.microsoft.com/en-us/windows-hardware/drivers/hid/virtual-hid-framework--vhf-:
It seems that custom HID reports do not work well with the HID Injector. I could inject the keyboard HID reports from the sample, they seemed to work.

However when I changed the HID reports AND the HID report descriptors [to emulate a radial controller](https://docs.microsoft.com/en-us/windows-hardware/design/component-guidelines/radial-controller-sample-report-descriptors), nothing happened anymore. The wheel tab in the settings app appeared (showing that windows properly recognized the HID report descriptors) but the HID events did not work.

I'll post code later so that it can be reproduced.
The HIDInjector sample cannot be built on x64.

[Line 502 in HidInjectorKd.c](https://github.com/ms-iot/samples/blob/develop/HIDInjector/driver/HidInjectorKd.c#L502) gives an error because size_t is 64 bit on x64 and ULONG is 32 bit.
I'm trying to create a light sensor, but i don't know how to do it working on windows iot core.

Is there a sample or can someone help me with a guideline?