Hi,
I prepared the tests to parse internationalization files. Now tests are the project [Format-Pester](https://github.com/it-praktyk/Format-Pester/blob/dev/tests/Format-Pester-translations.tests.ps1) specific but after small improvements (generalizations of code) can be used generally.

If will you accept pull request of that tests to your repository?

Not sure if the right to place this but couldn't find anything better.

PSHostUserInterface ignores DefaultValue

Details: http://stackoverflow.com/questions/26238881/host-ui-prompt-is-ignoring-the-attribute-defaultvalue-in-fielddescription

in the file Scripting/LanguageandParser/ParameterBinding.Tests.ps1 you haven't put your assertions inside It blocks. This results in tests that don't actually fail, but you also don't have any useful output.

``` Powershell
Invoke-ScriptFunctionTakesObject | Should Be 42
Invoke-ScriptFunctionTakesUInt64 | Should Be 42
Invoke-CSharpCmdletTakesObject | Should Be "passed in null"
Invoke-CSharpCmdletTakesUInt64 | Should Be 0
Invoke-ScriptFunctionTakesObject -Address $null | Should Be 42
Invoke-ScriptFunctionTakesUInt64 -Address $null | Should Be 42
Invoke-CSharpCmdletTakesObject -Address $null | Should Be 42
Invoke-CSharpCmdletTakesUInt64 -Address $null | Should Be 42
```

This [test](https://github.com/PowerShell/PowerShell-Tests/blob/83ec2c1204f33093c5589404483db578e5132f3b/engine/Other/Pester.Engine.Other.InformationStream.Tests.ps1#L16) have two issues:
- If you want to use `$InformationPreference` variable, then you should not use `-InformationAction` parameter.
- The value `Ignore` is not supported for an `ActionPreference` variables, including `$InformationPreference` variable.

https://github.com/PowerShell/PowerShell-Tests/issues/4

<!-- Reviewable:start -->
---
This change isâ€‚[<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/powershell/powershell-tests/5)
<!-- Reviewable:end -->

fix date compare to use correct hour format lower case:
Describing GetDateFormatUpdates
 [+] Verifies that FileDate format works 51ms
 [+] Verifies that FileDateUniversal format works 23ms
 [-] Verifies that FileDateTime format works 27ms
   String lengths are both 19. Strings differ at index 9.
   Expected: {20160107T0004182547}
   But was:  {20160107T1204182547}
   --------------------^
   24:         $actualFormat | Should be $expectedFormat
   at <ScriptBlock>, C:\PowerShell-Tests\Commands\Cmdlets\MiscCmdletUpdates.Tests.ps1: line 24
