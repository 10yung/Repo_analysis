The time to start displaying snippets still is perceptible.

- a cache could be implemented
- initial AWK transformations could be faster
- results could be displayed on demand instead of being shown in a single batch
This project started as just a few lines of code then it gained some traction. More features were introduced. The code became cluttered. Even though I still have a clear vision of everything that is happening, I understand it is a little bit difficult for a newcomer to know where he/she should look at.

The namespaces don't make much sense anymore. In the beginning, everything that resulted into printing something into the screen was located in `ui.sh`. I took some shortcuts and now there are "model" namespaces such as `arg.sh` that call `fzf`, for example.

Considering I don't plan to write this in another programming language in the near future, I'd like to use a more robust design pattern. One that won't allow me to take shortcuts.

In a nutshell, I'd like the following: `ui = f(state)`.

Considering this is bash and there's nothing like react available, I'll need to scratch my head a little bit.

Any suggestions are welcome!
If yum isn't installed, for example, all snippets that start with yum should be hidden

1) this shouldn't impact startup time
2) if --show-all is used, there should be no filtering 
Hi,

Thanks for the project.

I have noticed a bug when I use the binding ctrl+g in bash. 
This command in a cheat fails because it replaces the `\1` by `^A`

In my cheat it's 
```
# Find primary, local IP address
ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/\1/p'
```

The command parsed after the binding is 
`ip -o route get to 8.8.8.8 | sed -n 's/.*src \([0-9.]\+\).*/^A/p'`

Terminal: tilix
bash 5.0.11

Thanks !
First draft at #115
I've been using [skim](https://github.com/lotabout/skim) for a while now, and if I change the commands from `fzf` to `sk`, it invokes fine, but interactive searching doesn't work so well. I'm sure there are some differences between `-i` in both tools, but do not know how to move forward.