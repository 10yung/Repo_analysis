#### What is the problem?

I am trying to create an navigatable index of figures, glossaries, tables in markdown (f.e., by applying some 'scope' syntax, and regenerating the index by looking up all the content with the same scope).

The already working table of contents seems like it could be enhanced to do this.

I'm not sure if it is feasable to do so, but it would be a great addition to be able to do so.

#### How can I reproduce it?

```markdown
# Main Title

(Modified feature 'table of contents': The usual table of contents goes here, but for headlines marked with scope syntax, only the main headline of that section will appear in the TOC, none of it's sub-headlines.)

1. [Section 1](#section-1)
2. [Section 2](#section-2)
3. [Glossary](#glossary)
4. [Resources](#resources)

## Section 1

## Section 2

## Glossary <!-- scope: glossary -->

(New feature: Trying to introduce index/table of contents with scope 'glossary' here. The fragment IDs could  be prefixed with that scope, like the following links simulate.)

1. [Term 1](#glossary-term-1)
2. [Term 2](#glossary-term-2)

### Term 1 <!-- Won't be shown in main TOC, but in the Glossary index. -->

Term definition.

### Term 2 <!-- Neither will this. -->

Term definition.

## Resources

Some additional content.
```

It would be great to be able to call a command "Update all table of contents/indices", of course.
What is the problem?

I would love to be able to differentiate markdown headers with colors like https://marketplace.visualstudio.com/items?itemName=satokaz.vscode-markdown-header-coloring offers but without the unneeded complexity of that extension.


#### How can I reproduce it?

N/A


#### Is there any error message in the console?
<!-- See VSCode Menu Bar -> Help -> Toggle Developer Tools -->

No

<!--
For the problem like "command '...' not found", please try to
1. wait for a few seconds after you open a Markdown file for the first time
2. doesn't work? -> update vscode
3. doesn't work? -> reinstall this extension
4. still doesn't work? 😵 -> please open the developer tools to see whether there is any error message,
and then paste it below.
-->

#### What is the problem?

This is actually a feature request.  Is it possible to add a configuration setting to specify a path for HTML output in lieu of printing to the same path as the Markdown file?  

By the way, thank you for a terrific extension!


#### How can I reproduce it?



#### Is there any error message in the console?
<!-- See VSCode Menu Bar -> Help -> Toggle Developer Tools -->



List autocomplete does not work if there is a code block above with language mark.

Example
```
* Fixed bug
* Fixed bug <- there autocomplete working

-```
SoftwareSerial mainSerial(SERIAL_RX, SERIAL_TX); // RX TX
-```

* List item text
* List item <- there autocomplete working

-```c++
SoftwareSerial serialSensor(SERIAL_RX, SERIAL_TX, false, 512); // RX TX
-```

**.10**
* Fixes
<- there don't working
```

#### Is there any error message in the console?
<!-- See VSCode Menu Bar -> Help -> Toggle Developer Tools -->
There are no errors in the console.


<!--
For the problem like "command '...' not found", please try to
1. wait for a few seconds after you open a Markdown file for the first time
2. doesn't work? -> update vscode
3. doesn't work? -> reinstall this extension
4. still doesn't work? 😵 -> please open the developer tools to see whether there is any error message,
and then paste it below.
-->

Hi,

In our team, we would need to use different styling when printing to HTML. There is currently 2 style sheets added in the HTMLs and that makes difficult to overwrite the styles.

It would be nice to have a setting that allows us to select the css.. maybe either defaults/none or a path entry.

For now we add a css html link at the top of our MD but its not overwriting the previous ones.

Thank you for your time.



Example:
```markdown
# Test

- [Heading 1](#heading-1)
- [Heading 2](#heading-2)

## Heading 1

Something

## Heading 2

See [Heading 1](#heading-1)

```

When I update `## Heading 1` to `## Another Heading` the toc changes to:

```markdown
- [Another Heading](#another-heading)
- [Heading 2](#heading-2)
```

but the link `See [Heading 1](#heading-1)` does not. Would be very nice to see a new feature that will update page links that link to sections when the section header changes.

Similar to #533 but more dynamic.

<!--
For the problem like "command '...' not found", please try to
1. wait for a few seconds after you open a Markdown file for the first time
2. doesn't work? -> update vscode
3. doesn't work? -> reinstall this extension
4. still doesn't work? 😵 -> please open the developer tools to see whether there is any error message,
and then paste it below.
-->

#### What is the problem?

插件自动补全功能使用户自定义的markdown自动补全代码片段失效
this extension stops users' code snippets function.

我创建了一个markdown文件的自动补全文件markdown.json,希望添加一些个性化的补全方案,但是测试之后发现是插件阻止了我的自定义补全行为.

I created an auto-completion file markdown.json for the markdown file. I hope to add some personalized completion schemes, but after the test, I found that the plug-in blocked my custom completion behavior.

#### How can I reproduce it?

希望能在下一版本中不要使用户自定义补全与插件的自定义补全功能冲突,或许可以添加一个自定义补全功能,就像user snippets那样.
It is hoped that in the next version, the user-defined completion will not conflict with the plug-in's self-defined completion function. Perhaps a user-defined completion function can be added, just like user snippets

#### Is there any error message in the console?
<!-- See VSCode Menu Bar -> Help -> Toggle Developer Tools -->

no
<!--
For the problem like "command '...' not found", please try to
1. wait for a few seconds after you open a Markdown file for the first time
2. doesn't work? -> update vscode
3. doesn't work? -> reinstall this extension
4. still doesn't work? 😵 -> please open the developer tools to see whether there is any error message,
and then paste it below.
-->

#### What is the problem?

In previous version 2.5.1 of the plugin, the behavior of TOC generation with inline code was 

```md
- [`code`](#code) 

## `code`
```

With an update to 2.6.0, the behavior is

```md
- [code](#code) 

## `code`
```

Notice the TOC generated does not have the back-tick inline code marker. Since I cannot find specific discussion in the CHANGELOG and in the issues, I would like to ask if the change was intentional, or accidental. 

#### How can I reproduce it?

Install version 2.5.1 and 2.6.0 to see the difference. 




#### What is the problem?

`\global\def` doesn't persist between math expressions as described in [Katex Official Documentation](https://katex.org/docs/supported.html) **unless at least one macro is defined in Settings**.

#### How can I reproduce it?

Delete all entries of `"markdown.extension.katex.macros"` in `settings.json`, reload window, then create a markdown file with content as below:
```markdown
$$
\global\def\ud{\mathrm{d}}
$$

$$
\ud
$$
```
`\ud` is shown red in the preview panel.  

------
Then, add entry in `settings.json`: 
```json
"markdown.extension.katex.macros": {
        "\\whatever":"\\text{whatever}"
}
```
Reload window, and a roman d is shown in preview panel correctly. 

By the way, it seems that defining macros with arguments in `settings.json` isn't supported.

#### Is there any error message in the console?
Seemingly there aren't any error messages related to this plugin in the console.



其实也没多大，超过五百行就已经很明显了，按个backspace都要两三秒才能响应。怀疑是跟 `` ` ` `` 代码块以及表格有关，因为另一个七八百行但 `` ` ` `` 和表格少得多的文件却没有多大感觉。

重现：开个空白的文件，复制粘贴 `` `String s = "s";` `` 个五百次，再编辑试试看……