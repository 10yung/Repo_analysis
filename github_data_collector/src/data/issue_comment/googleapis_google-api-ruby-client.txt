  - OS: osx 10.14.6
  - Ruby version: ruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-darwin18]
  - Gem name and version:   google-api-client (0.36.4)

#### Steps to reproduce

```
require 'google/apis/identitytoolkit_v3'
service = Google::Apis::IdentitytoolkitV3::IdentityToolkitService.new
service.authorization = Google::Auth::ServiceAccountCredentials.new(etc...)

request = Google::Apis::IdentitytoolkitV3::DeleteAccountRequest.new
request.local_id = ['0ocb9dnaFvhrvhC7x0IigXFAddM1']

response = service.delete_account(request)
```

```
Google::Apis::ClientError (invalid: Invalid JSON payload received. Unknown name "localId": Proto field is not repeating, cannot start list.)
```



When the list_events method is invoked with the single_events parameter set to true and a recurring event in Google calendar is deleted, only six months worth of events with the status 'cancelled' is returned leaving additional events that should be deleted in my database.

When adding the option show_deleted combined with single_events set to true and with a sync token set, all events ever deleted are returned which is a huge list if anyone has gone through the process of creating and deleting a few recurring events. Shouldn't only the events deleted since the last sync token be returned?

Is this the intended behavior?
#### Environment details

  - OS: Ubuntu (AWS)
  - Ruby version: google-api-client
  - Gem name and version: google-api-client (0.28.7)

#### Steps to reproduce

the code return error is: `calendar_service.list_events(calendar_id, params)`

#### Code example

```ruby
  def self.list_events_by_key(calendar_id:, key:, time_min:, time_max:)
    calendar_service = Google::Apis::CalendarV3::CalendarService.new
    calendar_service.key = key
    params = {
      time_min: time_min,
      time_max: time_max
    }
    calendar_service.list_events(calendar_id, params)
  end
```

Small formatting improvement to the comment within a Ruby example.
Hi, I am trying to read the body of the email after using new method of gmail API which is

`email = service.get_user_message user_id, id`

But when I try to fetch body using 

`email.payload.body.data`. It gave me nil and even when I try to do the same thing in parts I am not getting the desired results.

I have wasted a lot of time searching for the exact answer and also in the documentation but couldn't find any right answer. Please help.


The documentation for google analytics reporting v4 lacks of practical examples, it only documents the classes and methods, so it's very hard to guess how should we use the gem in real life. For example, I'm trying to obtain all purchases from enhanced ecommerce to see where they came from (Acquisition Channel or Channel Grouping), but im only interested on transactions that took 5 sessions to convert the transaction ( our unconvinced clients).

After a lot of digging, I could achieve what I needed, I wrote a stackoverflow question+answer

https://stackoverflow.com/questions/58976821/how-to-query-google-analytics-api-using-the-google-api-ruby-gem/

Hello,

I have integrated Indexing API V3 via creating separate service account and adding it to the domain property owner in a search console.

But at this moment I'm able to retrieve data for particular pages only.
For example root path and page A are working but page B is not. From a technical perspective, there is no difference between pages A and B.
Please assist.

#### Environment details

  - OS: MacOS
  - Ruby version: 2.5.3
  - Gem name and version: rails v6.0.1; google-api-client v.0.34.1

#### Code example

```
require 'google/apis/indexing_v3'

service = Google::Apis::IndexingV3::IndexingService.new
authorization = Google::Auth::ServiceAccountCredentials.make_creds(
      json_key_io: File.open('path_to_service_account_credentials.json'),
      scope: 'https://www.googleapis.com/auth/indexing'
   )
service.authorization = authorization

Working example:
service.get_url_notification_metadata({url: 'https://mydomain.com'})

Working example:
service.get_url_notification_metadata({url: 'https://mydomain.com/a'})

Not working example:
service.get_url_notification_metadata({url: 'https://mydomain.com/b'}) 

Error - #<Google::Apis::ClientError: notFound: Requested entity was not found. status_code: 404 header
```

I'm having troubles trying to use the Ruby Google API. I can't import the firebase api. Always getting: 
cannot load such file -- google/apis/firebase_v1beta1.

#### Environment details

  - OS: MacOS 10.13.6
  - Ruby version: 2.6.3
  - Gem name and version: google-client-api 0,33

#### Code example

require 'google/apis/firebase_v1beta1'

FirebaseService = Google::Apis::FirebaseV1beta1

