I upgraded a quad from FC SucceX F7 V1 to the SucceX-D V2, nothing else changed and arming it was doing roll of death, after checking everything possible, I found the Gyros alignment incorrect, I verified comparing to the F7 V1 wich their defaults I tested good in 4.1.1 and 4.1.3.

After I fixed manually the alignment of both gyros it worked well.

Here are the diff for the gyros 1 and 2

gyro_1_sensor_align = CW0
Allowed values: DEFAULT, CW0, CW90, CW180, CW270, CW0FLIP, CW90FLIP, CW180FLIP, CW270FLIP, CUSTOM
Default value: CW270

I have to set it to CW0 manually, you can see the default is 270


gyro_2_sensor_align = CW90
Allowed values: DEFAULT, CW0, CW90, CW180, CW270, CW0FLIP, CW90FLIP, CW180FLIP, CW270FLIP, CUSTOM
Default value: DEFAULT

The default value DEFAULT not sure what it means but apparently for the other SucceX F7 V1 is CW90 which is correct.. 

Thanks!
Denis

Rename `FLASH_SIZE` used in build system (which in turn passed to gcc with `-D`) to `TARGET_FLASH_SIZE` to avoid symbol collision with library.
The addition of a driver for an I2C interfaced RTC to the system would be great.  Some suggested devices are preferably the PCF85263, MCP7941x, etc. A reliable battery backed clock which has the actual time and date is a nice addon!
The DPS310 has been out for a couple of years and is an advanced barometris pressure sensor. It has a capacitive sensor rather than a resistive sensor like most ubiquitous barometric sensors (MS5611, BMP280, etc). The capacitive sensor is immune to light sensitivity unlike the resistive sensors. In addition, they have a higher resolution and accuracy.
The BMM150 compass is a solid component, and it has been around for some time yet it is not supported. Would be nice to have.
The Memsic MMC5883A is an advanced version of the ubiquitous HMC5883. It is a newer state-of-the art component. It has much higher data rate capability. However, it's register set is a bit different than the HMC part; similar just uses different locations.
Hi,

Why PPM frame is limited to 12 channels, it is not consistent with iNav and very disturbing ?

#define MAX_SUPPORTED_RC_PPM_CHANNEL_COUNT 12

Possible to set 16 channels ?
Treatment of unused pins are moved to the end of system initialization for F4 (and F1 and F3). This will help peripherals that are sensitive to pin levels being high for a while during power on initialization period.

F7 and H7 actually did not have any pin initialization at the beginning of the system initialization, so this PR will add it.
