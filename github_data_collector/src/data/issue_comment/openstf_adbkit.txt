Hi Team,

I was trying to use Minicap in our project. Iam able to run the Minicap successfully and my device rendered in the browser. But iam unable to perform any action in the device. Also, i read document saying Minitouch is required to control devices. Now, please guide me how i should merge both minicap and minitouch together
![](https://img.alicdn.com/tfs/TB1X3nVhO_1gK0jSZFqXXcpaXXa-2158-668.png)

add product, model, device and transportId parse result return.
Hi @sorccu, this is a separate PR just for converting the Gruntfile from coffeescript to javascript
Hi @sorccu , I saw that your grunt exec:mocha was failing so I thought I would help by fixing it. This just moves the mocha call to the package.json
Hi @sorccu I have tried a different method whereby I have converted the coffeescript files to javascript using grunt. I have removed the coffeescript dependencies from the project and have replaced coffeelint with jshint. How does this one look to you?
Hi @sorccu I started on the conversion of the coffeescript files into javascript. I don't know if every conversion is valid, but I am open to helping out as much as I can.
This can be easily done by adding `-g` option to the installation command (see Google's [documentation](https://developer.android.com/guide/topics/permissions/overview.html#viewing)).

BTW, I use TypeScript a lot and I would like to request for TypeScript support XD.
I set up a adbkit environment on my local PC, there are three devices in my adb connect:
![image](https://user-images.githubusercontent.com/16631352/64484433-6d027f00-d244-11e9-83c1-1175a39e7119.png)
Actually，8B2Y0T3LX and localhost:54321 are one device.
When I run
```
adb -s 8B2Y0T3LX bugreport hello.zip
```
, the command run successfully;
![image](https://user-images.githubusercontent.com/16631352/64484447-c79bdb00-d244-11e9-9f47-ba279c3aa0a6.png)
But when I run
```
adb -s localhost:54321 bugreport hello.zip
```
error occurred:
```
Failed to get bugreportz version: 'bugreportz -v' returned '1.1' (code 0).
If the device does not run Android 7.0 or above, try 'adb bugreport' instead.
```
![image](https://user-images.githubusercontent.com/16631352/64484464-f7e37980-d244-11e9-85d2-b0ae5087eab3.png)
If I adb shell into localhost:54321, bugreport can runs successfully:
![image](https://user-images.githubusercontent.com/16631352/64484484-3e38d880-d245-11e9-9210-0d87629cbf49.png)
So maybe there is any str or other params were added in adbkit commands? I read adb source code and find where the error occurs: https://android.googlesource.com/platform/system/core/+/refs/tags/android-8.1.0_r3/adb/bugreport.cpp
```Java
if (status != 0 \|\| bugz_version.empty()) {
--
  | D("'bugreportz' -v results: status=%d, stdout='%s', stderr='%s'", status,
  | bugz_output.c_str(), bugz_version.c_str());
  | if (argc == 1) {
  | // Device does not support bugreportz: if called as 'adb bugreport', just falls out to
  | // the flat-file version.
  | fprintf(stderr,
  | "Failed to get bugreportz version, which is only available on devices "
  | "running Android 7.0 or later.\nTrying a plain-text bug report instead.\n");
  | return SendShellCommand("bugreport", false);
  | }
  |  
  | // But if user explicitly asked for a zipped bug report, fails instead (otherwise calling
  | // 'bugreport' would generate a lot of output the user might not be prepared to handle).
  | fprintf(stderr,
  | "Failed to get bugreportz version: 'bugreportz -v' returned '%s' (code %d).\n"
  | "If the device does not run Android 7.0 or above, try 'adb bugreport' instead.\n",
  | bugz_output.c_str(), status);
  | return status != 0 ? status : -1;
  | }


```
![image](https://user-images.githubusercontent.com/5714668/63747196-23777300-c8d9-11e9-955c-895bd60a401e.png)

``` js
// if none of the server is started, this starts a adb server on port 5037
const client = adb.createClient({ port: 5038 });

// this fails to connect as it attempts to reach port 5038 and only 5037 is started.
await client.connect("host_ip");
```