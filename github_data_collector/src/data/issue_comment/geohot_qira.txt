Update broken IDA qira plugin from slowly deprecating idaapi and idc to ida_ modules. (ida_modules were introduced in IDA 6.95)
I have fetched and installed all the dependencies that are required because I thought that might be the problem. But then too the following error is coming in the install process. Please improve the install process to completely support fedora. Below is the error :
```
util/memfd.c:43:12: error: static declaration of ‘memfd_create’ follows non-static declaration
   43 | static int memfd_create(const char *name, unsigned int flags)
      |            ^~~~~~~~~~~~
In file included from /usr/include/bits/mman-linux.h:111,
                 from /usr/include/bits/mman.h:34,
                 from /usr/include/sys/mman.h:41,
                 from /home/het/qira-1.3/tracers/qemu/qemu-latest/include/qemu/osdep.h:142,
                 from util/memfd.c:28:
/usr/include/bits/mman-shared.h:50:5: note: previous declaration of ‘memfd_create’ was here
   50 | int memfd_create (const char *__name, unsigned int __flags) __THROW;
      |     ^~~~~~~~~~~~
make: *** [/home/het/qira-1.3/tracers/qemu/qemu-latest/rules.mak:57: util/memfd.o] Error 1
make: *** Waiting for unfinished jobs....

```
Continuing from #234, I used the following script to build and package qira.

```
build() {
  cd ${pkgname}-${pkgver}/qiradb
  python2 setup.py build
}

package() {
  cd ${pkgname}-${pkgver}

  pushd qiradb
  # python2 setup.py install -O1 --single-version-externally-managed --root="${pkgdir}"
  python2 setup.py install -O1 --root="${pkgdir}"
  popd

  mv qiradb/VERSION VERSION
  rm -r qiradb

  install -d "${pkgdir}/opt/${pkgname}"
  cp -r . "${pkgdir}/opt/${pkgname}"

  install -d "${pkgdir}/usr/bin"
  ln -s "/opt/${pkgname}/${pkgname}" "${pkgdir}/usr/bin/${pkgname}"

  virtualenv2 venv
  source venv/bin/activate
  
  install -Dm644 README.md "${pkgdir}/usr/share/doc/${pkgname}/README"
}
```

However, when I run qira, it doesn't seem to import `ipaddr` in Python 2.7.

```
$ qira
Traceback (most recent call last):
  File "/opt/qira/middleware/qira.py", line 6, in <module>
    import ipaddr
ImportError: No module named ipaddr
```

This shouldn't be the case, importing `ipaddr` on a separate process works fine.

```
$ python2.7
Python 2.7.16 (default, Mar 11 2019, 18:59:25) 
[GCC 8.2.1 20181127] on linux2
Type "help", "copyright", "credits" or "license" for more information.
>>> import ipaddr
>>> 
```

I'm currently writing a PKGBUILD on qira for the Arch Linux distribution. Currently, it packages qira using the official `install.sh` script. It attempts to install QEMU even though I have the qemu Arch Linux package and outputs the following error:

```
...
NUMA host support yes
tcmalloc support  no
jemalloc support  no
  GEN   config-host.h
  GEN   trace/generated-tracers.h
  GEN   trace/generated-helpers-wrappers.h
  GEN   trace/generated-tcg-tracers.h
  GEN   trace/generated-helpers.h
	CHK version_gen.h
  LINK  tests/qemu-iotests/socket_scm_helper
  GEN   qemu-doc.html
  GEN   qemu.1
  GEN   qemu-img.1
  CC    qga/commands.o
  CC    qga/guest-agent-command-state.o
  CC    qga/main.o
  CC    qga/commands-posix.o
  CC    qga/channel-posix.o
  CC    qga/qapi-generated/qga-qapi-visit.o
  CC    qga/qapi-generated/qga-qapi-types.o
  CC    qga/qapi-generated/qga-qmp-marshal.o
  CC    qmp-introspect.o
  CC    qapi-types.o
  CC    qapi-visit.o
  CC    qapi-event.o
qga/commands-posix.c: In function ‘dev_major_minor’:
qga/commands-posix.c:668:21: warning: implicit declaration of function ‘major’ [-Wimplicit-function-declaration]
  668 |         *devmajor = major(st.st_rdev);
      |                     ^~~~~
qga/commands-posix.c:668:21: warning: nested extern declaration of ‘major’ [-Wnested-externs]
qga/commands-posix.c:669:21: warning: implicit declaration of function ‘minor’; did you mean ‘mincore’? [-Wimplicit-function-declaration]
  669 |         *devminor = minor(st.st_rdev);
      |                     ^~~~~
      |                     mincore
qga/commands-posix.c:669:21: warning: nested extern declaration of ‘minor’ [-Wnested-externs]
  CC    trace/generated-events.o
  CC    util/memfd.o
  CC    util/error.o
  CC    util/qemu-error.o
util/memfd.c:43:12: error: static declaration of ‘memfd_create’ follows non-static declaration
   43 | static int memfd_create(const char *name, unsigned int flags)
      |            ^~~~~~~~~~~~
In file included from /usr/include/bits/mman-linux.h:111,
                 from /usr/include/bits/mman.h:34,
                 from /usr/include/sys/mman.h:41,
                 from /home/pradana/qira/src/qira-1.3/tracers/qemu/qemu-latest/include/qemu/osdep.h:142,
                 from util/memfd.c:28:
/usr/include/bits/mman-shared.h:50:5: note: previous declaration of ‘memfd_create’ was here
   50 | int memfd_create (const char *__name, unsigned int __flags) __THROW;
      |     ^~~~~~~~~~~~
make: *** [/home/pradana/qira/src/qira-1.3/tracers/qemu/qemu-latest/rules.mak:57: util/memfd.o] Error 1
```

In any case, is it necessary to install QEMU through qemu_build.sh? Is it possible to run qira with a separate installation of QEMU?
As they where broken on the Firefox that shipped with 18.04?

It now works (for me) with Safari, Firefox and Chrome.
The current xcode command line tools do not work since they don't support the standard libc++ anymore. The old one I linked does. It costs you quite a lot of time to find that out. I got everything working aside from tracers/pin_build.sh which still brings up an error while installing on Mac OS.
implements #228
I forgot to add the change to actually use gcc 7 to the github version.
Hi all,

Sorry for posting it here but where do we put/write break points like for example `br *someFunc` function?

Thanks!
Hi.
Currently when tracing with qira, stdout from qira and stdout from the tracee is mixed.
It would be cool to separate them, so we can interact with tracee in an interactive way, for example like this:
```
from pwn import *
io = process(["qira", "-q", "cat"])
io.sendline("kek")
print io.readline()
>> kek
```
If this makes sense and can be considered to be merged, I will be glad to work on such PR ( heres a draft https://github.com/korniltsev/qira/pull/1)