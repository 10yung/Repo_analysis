GetCurrentUserDomain encounter with:
Exception calling "GetCurrentUserDomain" with "0" argument(s): "Current security context is not associated with an Active
Directory domain or forest."
At line:1 char:1
+ [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ActiveDirectoryOperationException

In updated windows and .Net framework now but when changing to GetcomputerDomain while we have logged in with a domain user the problem will be resolved.
Hi,

I am running Powerview.ps1 on a machine which is member of a domain and I have logged with a domain user but unfortunately when I run the _Powerview.ps1_ with "Invoke-ShareFinder" or any argument who run GetCurrentDomain function it encounter with:

Exception calling "GetCurrentDomain" with "0" argument(s): "Current security context is not associated with an Active
Directory domain or forest."
At line:1 char:1
+ [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain()
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : ActiveDirectoryOperationException


I ran  [System.DirectoryServices.ActiveDirectory.Domain]::GetCurrentDomain() in powershell and encountered the same error.
This change restricts access to ADSI object so they're only writting to the ACL.
This fixes an issue writting an ACL when you exclusively have `WriteDacl` permission on a object.


I have run up against this issue in a pentest where it meant I wasn't able to get to DA, but didn't know what was going on. I also came up against it in a HtB machine, so I had time to debug the tool and see what was going on.

This was an issue because if you don't set the security mask to `Dacl`, it will attempt to write the whole object back to LDAP instead of just the ACE. If you only have `WriteDacl` on the object, this will obviously fail.

This change has been tested against a HtB machine, and successfully wrote DCSync privs where the current master failed.
Get-Keystrokes is kind of broken on windows 10 64bit.

Its not logging every letter. I typed "test" and only t t was logged in the log file.

I also noticed that the log file does not continue to log where the last logged text left off. Instead, the log is erased every time you start the script.

It would also be nice to show in the log which window title and or browser tabs each line of text is being entered with.

and lastly, instead of each letter being entered on a new line, could you please make each word be on a new line? Or have two versions of get-keystrokes that we can chose from being one with each letter on a new line and the other with each word being on a new line?
updated mimikatz 2.1 to 2.2 latest (31 oct 2019)
fixed VirtualAlloc issues on Win 10 version 1903 build 18362
### 0x00 error info

```c
Get-ProcAddress : Exception calling "GetMethod" with "1" argument(s): "Ambiguous match found."
At C:\tools\t.ps1:436 char:23
+         $VirtualAllocAddr = Get-ProcAddress kernel32.dll VirtualAlloc
+                             ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Get-ProcAddress], MethodInvocationException
    + FullyQualifiedErrorId : AmbiguousMatchException,Get-ProcAddress
 
```

### 0x01 Get-ProcAddress func details

```c
	#Function written by Matt Graeber, Twitter: @mattifestation, Blog: http://www.exploit-monday.com/
	Function Get-ProcAddress
	{
	    Param
	    (
	        [OutputType([IntPtr])]
	    
	        [Parameter( Position = 0, Mandatory = $True )]
	        [String]
	        $Module,
	        
	        [Parameter( Position = 1, Mandatory = $True )]
	        [String]
	        $Procedure
	    )

	    # Get a reference to System.dll in the GAC
	    $SystemAssembly = [AppDomain]::CurrentDomain.GetAssemblies() |
	        Where-Object { $_.GlobalAssemblyCache -And $_.Location.Split('\\')[-1].Equals('System.dll') }
	    $UnsafeNativeMethods = $SystemAssembly.GetType('Microsoft.Win32.UnsafeNativeMethods')
	    # Get a reference to the GetModuleHandle and GetProcAddress methods
	    $GetModuleHandle = $UnsafeNativeMethods.GetMethod('GetModuleHandle')
	    $GetProcAddress = $UnsafeNativeMethods.GetMethod('GetProcAddress')
	    # Get a handle to the module specified
	    $Kern32Handle = $GetModuleHandle.Invoke($null, @($Module))
	    $tmpPtr = New-Object IntPtr
	    $HandleRef = New-Object System.Runtime.InteropServices.HandleRef($tmpPtr, $Kern32Handle)

	    # Return the address of the function
	    Write-Output $GetProcAddress.Invoke($null, @([System.Runtime.InteropServices.HandleRef]$HandleRef, $Procedure))
	}
```

### 0x02 system info

```c
Windows Server 2019 Datacenter
```

Hello, 
when the 'Out-EncryptedScript.ps1' script is used from "powershell core 6.2.2" the parameter 

 "-Encoding Byte" at ligne 93 no longer exist: 
_[Byte[]] $scriptBytes = Get-Content **-Encoding Byte** -ReadCount 0 -Path $ScriptPath_


it can be replaced with '-AsByteStream' :
_[byte[]] $scriptBytes = Get-Content **-AsByteStream** -ReadCount 0 -Path $ScriptPath_

For the moment, unfortunately the parameter 'AsByteStream' seem not working on a classic windows workstation updated with powershell 5.

Regards

PS: initial message error: Get-Content : Cannot process argument transformation on parameter 'Encoding'. 'Byte' is not a supported encoding name. For information on defining a custom encoding, see the documentation for the Encoding.RegisterProvider method.

Hello, this `Get-NetGroupMember` is not working, I mean it does not take any Group Name argument, again and again it gives the default Domain Admin Group results.

I want to enumerate the group members of this group 'Vulnerable_Group' How can I?

Please help me in that, I have a project pending just because of this?
Fixed #331 
Current version on DEV branch says to use Invoke-AllChecks to run all checks. In the current version however, that functionality is called with Invoke-PrivescAudit 