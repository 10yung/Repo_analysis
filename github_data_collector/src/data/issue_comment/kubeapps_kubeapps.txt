<!--
 Before you open the request please review the following guidelines and tips to help it be more easily integrated:

 - Describe the scope of your change - i.e. what the change does.
 - Describe any known limitations with your change.
 - Please run any tests or examples that can exercise your modified code.

 Thank you for contributing!
 -->

### Description of the change

When adding the atomic flag, I only checked wrong builds so it worked as expected but it seems that when the build should be successful, the connection just hangs. I have opened an issue in Helm (link in the code) but in the meantime, I am disabling the feature.

<!--
 Before you open the request please review the following guidelines and tips to help it be more easily integrated:

 - Describe the scope of your change - i.e. what the change does.
 - Describe any known limitations with your change.
 - Please run any tests or examples that can exercise your modified code.

 Thank you for contributing!
 -->

### Description of the change

After https://github.com/kubeapps/kubeapps/pull/1455/ I introduced a regression. When upgrading, if the repository can be auto-resolved, the properties of `AppUpgrade` are not being updated and the condition I introduced was always `true`, causing an infinity loop.


### Description:

When I go to app, click on upgrade, I get "Sorry! Something went wrong."
### Steps to reproduce the issue:

1. select namespace with dropdown
2. click applications tab
3. click upgrade
4. it fails

### Describe the results you received:

See log in bottom

### Describe the results you expected:

Should be able to upgrade app.

### Additional information you deem important (e.g. issue happens only occasionally):

Error happens consistently.

### Version of Helm, Kubeapps and Kubernetes:

- Output of `helm version`:

```
Client: &version.Version{SemVer:"v2.12.3", GitCommit:"eecf22f77df5f65c823aacd2dbd30ae6c65f186e", GitTreeState:"clean"}
Server: &version.Version{SemVer:"v2.12.3+icp", GitCommit:"", GitTreeState:""}```

- Output of `helm list <kubeapps-release-name>`:

```
kubeapps        32              Fri Dec 20 16:53:06 2019        DEPLOYED        kubeapps-3.2.3  v1.7.2          kubeapps 
```

- Output of `kubectl version`:

```
Client Version: version.Info{Major:"1", Minor:"17", GitVersion:"v1.17.1", GitCommit:"d224476cd0730baca2b6e357d144171ed74192d6", GitTreeState:"clean", BuildDate:"2020-01-15T15:50:38Z", GoVersion:"go1.13.6", Compiler:"gc", Platform:"darwin/amd64"}
Server Version: version.Info{Major:"1", Minor:"13", GitVersion:"v1.13.9+icp-ee", GitCommit:"fccfecc454d446967475ce34d13d3d63d407bf09", GitTreeState:"clean", BuildDate:"2019-08-27T08:46:50Z", GoVersion:"go1.11.13", Compiler:"gc", Platform:"linux/amd64"}```


### Browser-log

```
react-dom.production.min.js:196 YAMLSemanticError: Map keys must be unique; "name" is repeated
    at Object.t.default [as resolve] (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:533068)
    at e.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:355401)
    at e.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:355775)
    at t.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1486271)
    at https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:536736
    at Object.t.default [as resolve] (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:536938)
    at e.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:355401)
    at e.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:355775)
    at t.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1486271)
    at https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:531683
    at Object.t.default [as resolve] (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:532331)
    at e.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:355401)
    at e.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:355775)
    at t.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1486271)
    at https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1481752
    at Array.forEach (<anonymous>)
    at t.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1481602)
    at t.value (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1480354)
    at m (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1455684)
    at Object.parse (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1456175)
    at t.componentDidUpdate (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:2307633)
    at https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1124219
    at t.unstable_runWithPriority (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1143550)
    at Vi (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1068317)
    at Tu (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1120513)
    at gu (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1110811)
    at https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1068607
    at t.unstable_runWithPriority (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1143550)
    at Vi (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1068317)
    at Yi (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1068553)
    at Gi (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1068488)
    at du (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1107379)
    at Object.enqueueSetState (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1073310)
    at u.w.setState (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1017833)
    at u.l.onStateChange (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:412963)
    at Object.notify (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1179340)
    at e.t.notifyNestedSubs (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1178976)
    at u.l.onStateChange (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:412981)
    at Object.notify (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1179340)
    at e.t.notifyNestedSubs (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1178976)
    at u.l.onStateChange (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:412981)
    at Object.notify (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1179340)
    at e.t.notifyNestedSubs (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1178976)
    at u.l.onStateChange (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:412981)
    at Object.notify (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1179340)
    at e.t.notifyNestedSubs (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1178976)
    at u.l.onStateChange (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:412981)
    at v (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:264442)
    at https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:1193977
    at https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:2012326
    at dispatch (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:267824)
    at Object.<anonymous> (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:548980)
    at https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:551079
    at Object.next (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:551184)
    at a (https://kubeapps-global.finods.com/static/js/main.64ae6790.js:1:549889)
ds @ react-dom.production.min.js:196
```

<!--
 Before you open the request please review the following guidelines and tips to help it be more easily integrated:

 - Describe the scope of your change - i.e. what the change does.
 - Describe any known limitations with your change.
 - Please run any tests or examples that can exercise your modified code.

 Thank you for contributing!
 -->

### Description of the change

Follow up of https://github.com/kubeapps/kubeapps/pull/1460

Remove the ChartVersion list from the requests: `/charts/{repo}/{chartName}/versions` and `/charts/{repo}/{chartName}/versions/{version}` as the `chartsvc` does. This reduces the sice of the requests from several MBs to less than 500KB.


### Description:

Make it optional (but default on) to install the CRDs when doing helm install.
The reason for this is to be able to do two kubeapps installs - one for testing, and proper.

### Steps to reproduce the issue:

1. install kubeapps proper install into ns1
2. install kubeapps test install into ns2, disable crd installs

### Describe the results you received:

Be able to run two kubeapps installs

### Describe the results you expected:


### Additional information you deem important (e.g. issue happens only occasionally):

<!-- Any additional information, configuration or data that might be necessary to reproduce the issue. -->

### Version of Helm, Kubeapps and Kubernetes:

- Output of `helm version`:

```
(paste your output here)
```

- Output of `helm list <kubeapps-release-name>`:

```
(paste your output here)
```

- Output of `kubectl version`:

```
(paste your output here)
```

<!--
If you are reporting a new issue, make sure that we do not have any duplicates
already open. You can ensure this by searching the issue list for this
repository. If there is a duplicate, please close your issue and add a comment
to the existing issue instead.

If you suspect your issue is a bug, please edit your issue description to
include the BUG REPORT INFORMATION shown below. If you fail to provide this
information within 7 days, we cannot debug your issue and we'll close it. We
will, however, reopen it if you later provide the information.
-------------------------------
    BUG REPORT INFORMATION
-------------------------------
Use the commands below to provide key information from your environment:
You do NOT have to include this information if this is a FEATURE REQUEST
-->

### Description:

If I attempt to install into a namespace to which I don't have access to install (particularly, I can't even read secrets), kubeapps displays the error: "<release-name> already exists, try a different name", which is incorrect (and a bad experience if you keep trying :P).

The actual issue is shown below:
![409-incorrect-error](https://user-images.githubusercontent.com/497518/72575195-b9ab4480-391f-11ea-8d04-fd8179ff2376.png)


### Steps to reproduce the issue:

1. Login as a normal user and choose a namespace to which you don't have access (ie. easiest to use a user who doesn't have access to read secrets in default)
2. Deploy a chart

ER: An error along the lines of "You do not have access to install in the namespace 'foo'".
Actual result: see above image.

Putting this as low priority because, realistically, we should not be presenting people with namespaces to which they don't have access, the underlying issue there is that we add `default` without knowing if the user has access. Once that is fixed this issue won't be so obvious, though still worth fixing.

<!--
 Before you open the request please review the following guidelines and tips to help it be more easily integrated:

 - Describe the scope of your change - i.e. what the change does.
 - Describe any known limitations with your change.
 - Please run any tests or examples that can exercise your modified code.

 Thank you for contributing!
 -->

### Description of the change

Follow up of https://github.com/kubeapps/kubeapps/pull/1450

With Helm 3, we are currently not doing the pre-validation to check if the user has enough permissions. Because of that, we are currently returning the raw error to the user. That's a regression in the UX since with Helm 2 we give a detailed list of roles needed to perform the requested action.

What this PR proposes is to parse the error returned by Helm and give an user-friendly error (like we do in Helm 2) with the permissions needed.

### Benefits

When trying to do an operation over an application, we are parsing the error returned by the Helm client, returning all the information that we have:

![Screenshot from 2020-01-16 18-01-16](https://user-images.githubusercontent.com/4025665/72545977-3e4b8380-388a-11ea-8b29-dd227b2285da.png)

The good thing about this approach is that we are not assuming anything. We are just leaving Helm do its work and forward its response.

### Possible drawbacks

From the screenshot above, you can notice that we are returning that the user needs permission to `create` PVCs and to `delete` a bunch of things. This is because `helm` stops processing the chart once one element fails to be installed but then it tries to delete everything (even if it has not been created). This can be an issue with Helm because the error message is a bit misleading (and because we are using atomic installations).

In any case, since we are not pre-checking that the user has permissions to do everything that the chart contains, the user may need to iterate several times over the error page (if the admin gives permissions one by one).

### Additional information

Still need to write tests and fix bugs in this PR but wanted to know your thoughts.
<!--
 Before you open the request please review the following guidelines and tips to help it be more easily integrated:

 - Describe the scope of your change - i.e. what the change does.
 - Describe any known limitations with your change.
 - Please run any tests or examples that can exercise your modified code.

 Thank you for contributing!
 -->

### Description of the change

Enable two more builds to run end-to-end tests using Helm 3 (both using MongoDB and PostgreSQL as database back-ends). 

<!--
If you are reporting a new issue, make sure that we do not have any duplicates
already open. You can ensure this by searching the issue list for this
repository. If there is a duplicate, please close your issue and add a comment
to the existing issue instead.

If you suspect your issue is a bug, please edit your issue description to
include the BUG REPORT INFORMATION shown below. If you fail to provide this
information within 7 days, we cannot debug your issue and we'll close it. We
will, however, reopen it if you later provide the information.
-------------------------------
    BUG REPORT INFORMATION
-------------------------------
Use the commands below to provide key information from your environment:
You do NOT have to include this information if this is a FEATURE REQUEST
-->

### Description:

Follow up of https://github.com/kubeapps/kubeapps/pull/1460

To improve performance when requesting charts we can refactor the `Chart` model so we store the `raw_icon` separately in a different column or table and as a byte blob. That way we would return it only when necessary.

<!--
If you are reporting a new issue, make sure that we do not have any duplicates
already open. You can ensure this by searching the issue list for this
repository. If there is a duplicate, please close your issue and add a comment
to the existing issue instead.

If you suspect your issue is a bug, please edit your issue description to
include the BUG REPORT INFORMATION shown below. If you fail to provide this
information within 7 days, we cannot debug your issue and we'll close it. We
will, however, reopen it if you later provide the information.
-------------------------------
    BUG REPORT INFORMATION
-------------------------------
Use the commands below to provide key information from your environment:
You do NOT have to include this information if this is a FEATURE REQUEST
-->

### Description:

When installing/upgrading/deleting an application, the process may fail due to an error in the chart. When this happens, it's not very clear if the error is caused by kubeappss (an internal error) of it's a chart error:

![Screenshot from 2020-01-13 11-31-47](https://user-images.githubusercontent.com/4025665/72248816-560bd900-35f8-11ea-87b8-dd6bfd6b1b59.png)

We should be able to clearly identify chart errors and maybe point the user to the chart maintainers in that case. 

### Steps to reproduce the issue:

1.Deploy bitcoind in a k8s cluster +1.16

### Describe the results you expected:

<!-- What you expect to happen -->

### Additional information you deem important (e.g. issue happens only occasionally):

Related issue: https://github.com/kubeapps/kubeapps/issues/1431

cc/ @fabianschwarzfritz @AlpherJang 