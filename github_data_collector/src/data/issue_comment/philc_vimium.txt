Now works properly with Shadow DOM, ref. discussion at https://github.com/philc/vimium/commit/caf13c2dbfa9b3c5f35aae76dfcffa4cfea14bac#r36859231
I'd like to set up a command like command-shift-k to go to the next tab regardless of if I'm in the text box or not.
Is it possible to set up a find mode command that opens a link in a new window? Alternatively, Saka Key has find mode that opens in a new window, but on chrome I can't seem to use them simultaneously.  On Firefox, I have it set up so Saka literally only has that one keyboard shortcut setup and it works well in sync with vimiumff.  Just not in Chrome, but I'd prefer to use Chrome.
Are there any plans to adopt commands for incremental search and highlighting such as
```
set incsearch
set hlsearch
```
?
The first thing that made me have a happy grin on my face when using vim as text edior was when I learned about the **vim dot repeat** function. It was the first experience of how one can simply **automate tedious, linear and repetetive tasks with a single key**.

As years have passed since, I hereby kindly request to **review request #1785** with the goal of implementing a way to repeat the last action taken using vimium.

This is **quite powerful** for things like going one tab left ( or `previousTab`).
If you want to do that multiple times you could just go on tab left once and then easily navigate through your tabs while just pressing the dot key `.`.

On Chrome the default action of `chrome.tabs.createTab` when `position=null` is to open at the end of tabs, but on Firefox it isn't. So this PR fixes it.

@philc See https://github.com/philc/vimium/issues/2893#issuecomment-572889467. And this PR has been well-tested.

Hey folks,

I plan to modernize the code base by porting it from coffeescript to ES6. This will make the source more accessible to more developers, and remove the complexity of having to transpile.

Major impacts of this:

1. Some hard-to-notice bugs may be introduced by the [decaffeinate](https://github.com/decaffeinate/decaffeinate) conversion. When I've used decaffeinate on large code bases before, I've botched a few cases of removing unnecessary implicit return statements which are on by default on coffeescript.

2. All of the open PRs will become unmergeable and require revision before they can be re-evaluated.

3. Forks of Vimium will no longer be able to cleanly rebase on top of our recent commits.

4. It will become harder to find the history behind each line using git blame and git grep.

I wanted to give a heads up that this is coming, in case anyone has strong objections. The tentative date for the conversion is Jan 20, 2020. I may ship a new release to the store before then, with a few bug fixes.

Regarding the open PRs, I'm going to review the most recent 20-30 and merge those which seem valuable and low-risk. If a change is large and has a strong risk of destabilizing the code base, I'll likely not merge it and ask that it be reworked post the ES6 conversion. In case anyone wants to advocate strongly for an existing open PR to get merged before the conversion, now is the time.

Once the source is converted to ES6, I'd appreciate beta testers using the version on master, to help surface breakages in features that I don't normally use, before this version gets shipped to the chrome store to a wider audience.

Thanks! This should be great!
I am a fan of this incredible extension.
Although we have two keys 
'''
map f LinkHints.activateModeToOpenInNewTab
map F LinkHints.activateMode
'''
But because the link has lots of target attibutes such as _blank, _parent and so on, sometimes we can't know the actual behavior when we hit 'f' or 'F'.
So i think it's a good way to colorize the label on the link whether it will be opend in current tab or new tab? 
Is there a way to add costume action for opening links in new foreground tabs? 

Also, is there a way to disable or modify keyboard shortcuts for existing actions? 