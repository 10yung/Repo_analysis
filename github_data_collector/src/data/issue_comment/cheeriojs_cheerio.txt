The current dependencies of cheerio@1.0.0-rc3 have old dependencies like `css-select` with improper license.
While the new version (already set in the v1.0.0 branch) seems fine.

It's been 9 months since the RC3 so is there any blocker for releasing the final 1.0.0?

Cheerio Version: 1.0.0-rc.3

Would like to be able have .html() function leave script tag attributes w/ out assigning an empty value
```js
const $ = cheerio.load('<script defer type="text/javascript" src="bundle.js"></script>')
// result
$.html(); // => <script defer="" type="text/javascript" src="bundle.js" />
// what I would like to happen
$.html() // => <script defer type="text/javascript" src="bundle.js" />
```
**Cheerio Version:** 1.0.0-rc.3

I'm attempting to create a custom plugin that will return the first child of an element:

```
$.prototype.firstChild = () => {
    return this.children().first();
};
```

I'm getting the following error:
> TypeError: this.children is not a function at initialize.$.firstChild...
Hello, thank you for the great library.

`.serializeArray()` seems to evaluate each value from `.attr()` instead of a value from `.prop()`.
That is, it gets status from only default HTML source.
For example:

```html
<form id="frm1">
  <input type="checkbox" value="check_on" name="chk1" id="chk1">
  <input type="checkbox" value="check_on" name="chk2" id="chk2" checked>
  <input type="checkbox" value="check_on" name="chk3" id="chk3">
</form>
```

```js
const $form = $('#frm1');

console.log('======== Default status');
console.log('#chk1: %s', $('#chk1', $form).prop('checked'));
console.log('#chk2: %s', $('#chk2', $form).prop('checked'));
console.log('#chk3: %s', $('#chk3', $form).prop('checked'));
console.dir($form.serializeArray()); // expected result

console.log('======== Change `prop`');
$('#chk1', $form).prop('checked', true);
$('#chk2', $form).prop('checked', false);
$('#chk3', $form).prop('checked', true);

console.log('#chk1: %s', $('#chk1', $form).prop('checked'));
console.log('#chk2: %s', $('#chk2', $form).prop('checked'));
console.log('#chk3: %s', $('#chk3', $form).prop('checked'));
console.dir($form.serializeArray()); // not expected result

// Workaround
console.log('======== Change `prop` and `attr`');
$('#chk1', $form).prop('checked', true).attr('checked', 'checked');
$('#chk2', $form).prop('checked', false).removeAttr('checked');
$('#chk3', $form).prop('checked', true).attr('checked', 'checked');

console.log('#chk1: %s', $('#chk1', $form).prop('checked'));
console.log('#chk2: %s', $('#chk2', $form).prop('checked'));
console.log('#chk3: %s', $('#chk3', $form).prop('checked'));
console.dir($form.serializeArray()); // expected result
```

Result:

```
======== Default status
#chk1: false
#chk2: true
#chk3: false
[ { name: 'chk2', value: 'check_on' } ]
======== Change `prop`
#chk1: true
#chk2: false
#chk3: true
[ { name: 'chk2', value: 'check_on' } ]
======== Change `prop` and `attr`
#chk1: true
#chk2: false
#chk3: true
[ { name: 'chk1', value: 'check_on' },
  { name: 'chk3', value: 'check_on' } ]
```

The second `.serializeArray()` returns an array as the same as first one, but `checked` of checkboxes were already changed.
That returns correct array if attribute was changed via `.attr()` instead of `.prop()`.

Also, `.serializeArray()` of jQuery returns correct array. That is, the second `.serializeArray()` after changing via `.prop()` returns `[ { name: 'chk1', value: 'check_on' }, { name: 'chk3', value: 'check_on' } ]`.


## The devDependency [nyc](https://github.com/istanbuljs/nyc) was updated from `14.1.1` to `15.0.0`.
This version is **not covered** by your **current version range**.

If you don’t accept this pull request, your project will work just like it did before. However, you might be missing out on a bunch of new features, fixes and/or performance improvements from the dependency update.

---

**Publisher:** [coreyfarrell](https://www.npmjs.com/~coreyfarrell)
**License:** ISC

[Find out more about this release](https://github.com/istanbuljs/nyc).

---

<details>
  <summary>FAQ and help</summary>

  There is a collection of [frequently asked questions](https://greenkeeper.io/faq.html). If those don’t help, you can always [ask the humans behind Greenkeeper](https://github.com/greenkeeperio/greenkeeper/issues/new).
</details>

---


Your [Greenkeeper](https://greenkeeper.io) bot :palm_tree:


<!-- Thanks for your interest in cheerio!

Please note that issues should be primarily used for tracking bugs and feature requests.
If you have a more general question, please consider consulting StackOverflow first:
https://stackoverflow.com/questions/tagged/cheerio

If you think you uncovered a bug, please try to provide a minimal example that triggers the behavior.
Please note that we will not investigate issues that perform HTTP requests, as the source might already have changed.
-->

Scanning with a dependency `article-title` reveals that cheerio is exposing some vulnerabilities via its lodash version.  It might be as simple as updating cheerio's lodash version.

```
  ✗ Prototype Pollution [High Severity][https://snyk.io/vuln/SNYK-JS-LODASH-450202] in lodash@4.17.4
    introduced by article-title@3.1.0 > cheerio@1.0.0-rc.3 > lodash@4.17.4
  This issue was fixed in versions: 4.17.12
  ✗ Prototype Pollution [High Severity][https://snyk.io/vuln/SNYK-JS-LODASH-73638] in lodash@4.17.4
    introduced by article-title@3.1.0 > cheerio@1.0.0-rc.3 > lodash@4.17.4
  This issue was fixed in versions: 4.17.11
  ✗ Regular Expression Denial of Service (ReDoS) [Medium Severity][https://snyk.io/vuln/SNYK-JS-LODASH-73639] in lodash@4.17.4
    introduced by article-title@3.1.0 > cheerio@1.0.0-rc.3 > lodash@4.17.4
  This issue was fixed in versions: 4.17.11
  ✗ Prototype Pollution [Medium Severity][https://snyk.io/vuln/npm:lodash:20180130] in lodash@4.17.4
    introduced by article-title@3.1.0 > cheerio@1.0.0-rc.3 > lodash@4.17.4
  This issue was fixed in versions: 4.17.5
```
Hi Guys,

I have created an iframe. I access this iframe in node js code using :

```
const $ = require('cheerio');
let widget =  $('iframe');
widget.attr('src', 'someURL');
```

The new URL contents does not reflect in the iframe. Is there anything that I am missing out over here ?


Hi, I just tried to scrap html element from a website, but returned ECONNRESET. perhaps they applied in depth security for accessing their site in non-natural ways.
Can you help me to bypass / access that kind of website? or there are some config that I missed?
There are no release notes for 1.0.0-rc3.

## The dependency [css-select](https://github.com/fb55/css-select) was updated from `2.0.2` to `2.1.0`.
This version is **not covered** by your **current version range**.

If you don’t accept this pull request, your project will work just like it did before. However, you might be missing out on a bunch of new features, fixes and/or performance improvements from the dependency update.

---

**Publisher:** [feedic](https://www.npmjs.com/~feedic)
**License:** BSD-2-Clause

[Find out more about this release](https://github.com/fb55/css-select).

---

<details>
  <summary>FAQ and help</summary>

  There is a collection of [frequently asked questions](https://greenkeeper.io/faq.html). If those don’t help, you can always [ask the humans behind Greenkeeper](https://github.com/greenkeeperio/greenkeeper/issues/new).
</details>

---


Your [Greenkeeper](https://greenkeeper.io) bot :palm_tree:

