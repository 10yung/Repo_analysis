https://github.com/mtytel/helm/blob/abdedd527e6e1cf86636f0f1e8a3e75b06ed166a/JUCE/modules/juce_graphics/colour/juce_PixelFormats.h#L116-L119

I'm getting:

../../../JUCE/modules/juce_graphics/colour/juce_PixelFormats.h:116:77: error: cannot bind packed field ‘((juce::PixelARGB*)this)->juce::PixelARGB::<anonymous>.juce::PixelARGB::<unnamed union>::comps[3]’ to ‘juce::uint8&’ {aka ‘unsigned char&’}
  116 |     forcedinline uint8& getAlpha() noexcept           { return comps [indexA]; }

compiling with GCC 9.2.1 20191008

I'd like to build an headless Raspberry PI / Helm machine.   I was happy to find that there's an "--headless" option, but unfortunately, here's the output:  
```
root@debian:~# helm --headless                                                                                   
Failed to connect to the X Server. 
```
Is this even possible?   Thanks in advance.

PS: Installed Helm-x86-64 0.9.0 from the Deb package.  
I have just been writing a TouchOSC front end to use in conjunction with Sonic Pi to select Helm Patches. I noticed that three of the SFX factory presets contents do not match up with their names.
SF whistle1 has contents for Brass Soft Stutter
SF Whistle2 has contents for Whistle_1
SF Whistle3 has contents for Whistle_2

There doesn't actually appear to be a whistle_3
eg here is the beginning content of Whistle 1.helm
```
{
   "license": "Patch (c) by SF.  This patch is licensed under a Creative Commons Attribution 4.0 International License.  You should have received a copy of the license along with this work.  If not, see <http://creativecommons.org/licenses/by/4.0/>.",
  "synth_version": "0.8.6",
  "patch_name": "Brass_Soft_Stutter",
  "folder_name": "Keys",
  "author": "SF",
```
and for Whistle 2.helm
```
{
  "license": "Patch (c) by SF.  This patch is licensed under a Creative Commons Attribution 4.0 International License.  You should have received a copy of the license along with this work.  If not, see <http://creativecommons.org/licenses/by/4.0/>.",
  "synth_version": "0.8.6",
  "patch_name": "Whistle_1",
  "folder_name": "SFX",
  "author": "SF",
```
I wondered why my selector which uses midi cc signals to select patches wasn't working properly until I looked at these contents! IT works fine for everything else. I was using the names index of the patches in the folder to generate the midi cc data to send.
EDIT looks like selecting patches via midi control uses the internal name of the patch to display ,whereas selcting from the in built browser uses the filename? The patches sound the same whichever way you select.
Hello. Wondering if you could clarify how Helm uses the LV2 TimePosition.
In MusE I pass a full complement of all LV2 TimePosition properties including
 bar, beat, barBeat, frame, unit, samplerate etc.
I even correct the info for latency so that it is in sync with the audio output.
But as time goes on, if there is even one tempo change in the song, the sequencer loses sync.
Same result in QTractor.
I'm guessing but it seems that Helm might use the current frame and tempo to
 determine current bar and beat, which I think would be incorrect if a tempo change
 had occurred before a given frame had been reached.
Does that sound correct? Is there anything that we can change host side to correct this?
Thanks.
Tim.

If the app could also remember the volume from last time it was opened that would be neat too. I love this program but every time I open it I'm annoyed by the loud default synth.
Hello,

there are two `helm`s around: the amazing synth, and a Kubernetes package manager.

This creates a conflict in distro package managers, which has been solved by some packagers only in terms of package names (e.g. `helm` and `helm-synth` or `helm` and `kubernetes-helm`), not binaries - so, installing one of the two helms overwrites the other.

I think that it's unlikely that both are installed on the same machine, since they belong to two completely different fields, however it would be nice to make life easier for distro maintainers if they did not conflict.

Since it's much harder to ask a Foundation ran by huge corporations (Google, CoreOS, Mesosphere, Red Hat, Twitter, Huawei, Intel, Cisco, IBM, Docker, Univa, and VMware, according to Wikipedia) and a huge userbase to rename their binaries, maybe this helm could have an executable called `/usr/bin/helm-synth` instead of `/usr/bin/helm`, to make life easier for packagers.

Otherwise packagers should do it themselves, but they might not be aware that another helm exists so they should all be contacted individually.
This pr backports https://github.com/WeAreROLI/JUCE/commit/4e0adb2af8b424c43d22bd431011c9a6c57d36b6 to make helm compile with gcc 9.1 again.
Fixes https://github.com/mtytel/helm/issues/232

Adding stuff like build dependencies etc.
i would like to try helm but compiler said:
![Bildschirmfoto von 2019-08-18 06-50-58](https://user-images.githubusercontent.com/33608674/63220309-af282b80-c184-11e9-9e1d-25b7b05666a0.png)

If you have configured your host to display plugin parameters and you change a preset via the Helm UI, the presets in the host do not update. However, on/off parameters do seem to be propagated.

Observed in the Juce Audio Plugin Host and Ableton 10.
<img width="958" alt="helm_ableton" src="https://user-images.githubusercontent.com/3002263/63147489-9ee64400-bffe-11e9-8cd8-5e9cbfce8cca.png">
<img width="482" alt="helm_juce" src="https://user-images.githubusercontent.com/3002263/63147546-c9380180-bffe-11e9-9173-ab9ec1434827.png">

I'm using AVLinux 2019.4.10 (based on Debian 9.8, kernel 4.16.12-rt5-avl1, 64-bit),, JACK version "jackdmp version 1.9.12 tmpdir /dev/shm protocol 8", and Helm Standalone v0.9.0.
I want to route audio through Calf Studio Gear, so I switch Helm's 'Audio device type' to JACK and choose 'Calf Studio Gear' as output. The appropriate plugin inputs show up under 'Active output channels', but clicking them does nothing.
From here I try connecting from Calf itself. Its 'Available JACK Audio Outputs' include 'Helm:out_1', 'Helm:out_2', and 'Helm:out_3' (sometimes higher numbers, too), but upon selecting any of them Helm segfaults without explanation.