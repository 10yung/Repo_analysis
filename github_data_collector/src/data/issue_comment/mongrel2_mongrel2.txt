At least when request is routed through the default host entry, differentiating log entries by hostname parsed from host header would be very helpful. When a host entry matches other than the "default" host, then the "name" entry from the host table could continue to be used; although, I find that the hostname from the "Host" header is always the most useful, but perhaps we could log both so that it is clear from the logs which host the request was routed through and also what the "Host" header for the request was.
Hi there,

I'm having a fatal error killing completely my mongrel2 server trying to upload a 2.5 GB file. I have replicated this error in mongrel2-master and mongrel2-develop branch. I've attached valgrind log. It seems error appears in http11_parser.c:1108 with 'p' var equals null.

I've tested with other several files, and I didnt found any problem until 2.2 GB files. 

[valgrind_11714.txt](https://github.com/mongrel2/mongrel2/files/3259773/valgrind_11714.txt)
This removes the hard requirement on HAVEGE, and allows using `/dev/urandom` within a chroot.
```
iMac-TMP:~ joe$ brew install -dvs mongrel2
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/mongrel2.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/mbedtls.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/zeromq.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/cmake.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/sphinx-doc.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/asciidoc.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/autoconf.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/docbook-xsl.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/docbook.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/pkg-config.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/xmlto.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/gnu-getopt.rb
/usr/local/Homebrew/Library/Homebrew/brew.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/gettext.rb
/usr/bin/sandbox-exec -f /private/tmp/homebrew20180704-34035-1f9bzvf.sb nice /usr/local/Homebrew/Library/Homebrew/vendor/portable-ruby/2.3.3_2/bin/ruby -W0 -I /usr/local/Homebrew/Library/Homebrew:/usr/local/Homebrew/Library/Homebrew/cask/lib -- /usr/local/Homebrew/Library/Homebrew/build.rb /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/mongrel2.rb --verbose --debug
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FromPathLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/mongrel2.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/mbedtls.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/zeromq.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/cmake.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/sphinx-doc.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/asciidoc.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/autoconf.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/docbook-xsl.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/docbook.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/pkg-config.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/xmlto.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/gnu-getopt.rb
/usr/local/Homebrew/Library/Homebrew/build.rb (Formulary::FormulaLoader): loading /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/Formula/gettext.rb
==> Downloading https://github.com/mongrel2/mongrel2/releases/download/v1.12.0/mongrel2-v1.12.0.tar.bz2
Already downloaded: /Users/joe/Library/Caches/Homebrew/mongrel2-1.12.0.tar.bz2
==> Verifying mongrel2-1.12.0.tar.bz2 checksum
tar xjf /Users/joe/Library/Caches/Homebrew/mongrel2-1.12.0.tar.bz2
==> make all
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/adt/darray.o src/adt/darray.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/adt/dict.o src/adt/dict.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/adt/hash.o src/adt/hash.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/adt/list.o src/adt/list.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/adt/radixmap.o src/adt/radixmap.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/adt/tst.o src/adt/tst.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/bstr/bsafe.o src/bstr/bsafe.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/bstr/bstraux.o src/bstr/bstraux.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/bstr/bstrlib.o src/bstr/bstrlib.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/config/config.o src/config/config.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/config/db.o src/config/db.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/config/module.o src/config/module.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC     -c -o src/http11/http11_parser.o src/http11/http11_parser.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/http11/httpclient_parser.o src/http11/httpclient_parser.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/mem/halloc.o src/mem/halloc.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/task/context.o src/task/context.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/task/fd.o src/task/fd.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/task/net.o src/task/net.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/task/qlock.o src/task/qlock.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/task/rendez.o src/task/rendez.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/task/task.o src/task/task.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/bsd_specific.o src/bsd_specific.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/cache.o src/cache.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/chunked.o src/chunked.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/connection.o src/connection.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/control.o src/control.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/dbg.o src/dbg.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/dir.o src/dir.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/filter.o src/filter.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/handler.o src/handler.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/handler_parser.o src/handler_parser.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/headers.o src/headers.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/host.o src/host.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/io.o src/io.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/log.o src/log.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/logrotate.o src/logrotate.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/mime.o src/mime.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/pattern.o src/pattern.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/proxy.o src/proxy.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/register.o src/register.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/request.o src/request.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/response.o src/response.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/routing.o src/routing.c
clang -g -O2 -Wall -Wextra -I./src -DNDEBUG -D_FILE_OFFSET_BITS=64 -pthread   -fPIC    -c -o src/server.o src/server.c
src/server.c:176:29: error: use of undeclared identifier 'mbedtls_havege_state'; did you mean 'mbedtls_sha512_starts'?
        ctx = calloc(sizeof(mbedtls_havege_state), 1);
                            ^~~~~~~~~~~~~~~~~~~~
                            mbedtls_sha512_starts
/usr/local/include/mbedtls/sha512.h:158:25: note: 'mbedtls_sha512_starts' declared here
MBEDTLS_DEPRECATED void mbedtls_sha512_starts( mbedtls_sha512_context *ctx,
                        ^
src/server.c:177:52: error: expected expression
        mbedtls_havege_init((mbedtls_havege_state *)ctx);
                                                   ^
src/server.c:177:30: error: use of undeclared identifier 'mbedtls_havege_state'; did you mean 'mbedtls_havege_init'?
        mbedtls_havege_init((mbedtls_havege_state *)ctx);
                             ^~~~~~~~~~~~~~~~~~~~
                             mbedtls_havege_init
src/server.c:177:9: note: 'mbedtls_havege_init' declared here
        mbedtls_havege_init((mbedtls_havege_state *)ctx);
        ^
src/server.c:179:25: error: use of undeclared identifier 'mbedtls_havege_random'; did you mean 'mbedtls_havege_init'?
        srv->rng_func = mbedtls_havege_random;
                        ^~~~~~~~~~~~~~~~~~~~~
                        mbedtls_havege_init
src/server.c:177:9: note: 'mbedtls_havege_init' declared here
        mbedtls_havege_init((mbedtls_havege_state *)ctx);
        ^
4 errors generated.
make: *** [src/server.o] Error 1
/usr/local/Homebrew/Library/Homebrew/debrew.rb:11:in `raise'
BuildError: Failed executing: make all
1. raise
2. ignore
3. backtrace
4. irb
5. shell
Choose an action: 
```
... doing as instructed.  :)

Had a mongrel2 hang today with the following messages:

    Mon, 04 Jun 2018 19:26:33 GMT [WARN] (src/connection.c:901: errno: Resource temporarily unavailable) Connection 0x802848880 is not dying, contact jasom

This instance was recently rebuild from FreeBSD ports.  Mongrel2 version 1.11.0, czmq 4.1.1, libzmq 4.2.3.  FreeBSD 11-stable.

Please let me know if I can gather any additional information to help track this down.

i'm trying to build on centos7 (the stable version works) but the develop branch doesn't build. It seems that the include path for mbedtls are different. 

> In file included from src/task/net.c:3:0:
> ./src/server.h:42:25: fatal error: mbedtls/ssl.h: No such file or directory
>  #include <mbedtls/ssl.h>
> 

However when I solve those by symlinking to the needed location it still can't find the mbedtls *.so files.

> /usr/bin/ld: cannot find -lmbedtls                                                                                                                                            
> /usr/bin/ld: cannot find -lmbedx509                                                                                                                                       
> /usr/bin/ld: cannot find -lmbedcrypto            
> 
> 

I can not find how to build those. Is there a fix for this? May be i need to switch to a different branch for mbedtls?

Regards.
The current build logic lacks flexibility
 1) it does not allow arbitrary flags to be passed

Thus arbitrary include directory / library directory for zmq cannot be specified

 2) dependencies are hardcoded (eg. -lzmq)

Thus cannot statically link zmq / sqlite.

 3) compilation & link are not separated.

This make is impossible to statically link C++ library (zmq) to C code.
Hi.
I've tried to run mongrel2 under Debian (3.16.7) with latest libzmq (github master build) and got the same problem already reported before.
Without -sudo everything works fine but when i try to run mongrel2 with -sudo i can't connect to the server anymore.
I've tried the /proc fix but it doesn't work for me.

I would be grateful for any help.
Cheers ...

Even though the output forms of the ragel files are in the repository, the ragel files could end up with newer timestamps than their output counterparts. When I pulled the git repo to a server today, the `tools/m2sh/src/cli.rl` file was newer than `tools/m2sh/src/cli.c`, causing the build process to want to run ragel.

To make this more deterministic, we might consider making the ragel steps an explicit action (e.g. "make ragel").

Even if the user does have ragel installed to compensate for this race condition, the output file might be different than the file in the repo. This may not be an issue, but something to consider.

A command like `m2sh help --on unknown` will cause buggy help text to be displayed.
Additionally, a few other m2sh error messages don't quite explain the problem to the user.

This diff should help address those issues.
