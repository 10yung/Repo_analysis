Hi, I've fixed 16 missing dependencies and 1 excessive dependency reported.
Those issues can cause incorrect results or unnecessary rebuilds when 8cc is incrementally built.
For example, any changes in "main.c" will not cause "main.o" to be rebuilt, which is incorrect. The dependency rule in line 16 of the fixed Makefile can solve the dependence issues of 14 targets, including "vector.o", buffer.o", "path.o" and etc.
"8cc.h" is not read by the process when the target â€œutiltest" is built. Hence, the change of this file can cause an unnecessary rebuild of "utiltest", which slow down the build of the whole project.
I've tested it on my computer, the fixed version worked as expected.
Looking forward to your confirmation.

Thanks
Vemake
The Makefile has no option to install the 8cc compiler onto your system (either under your $HOME/bin directory or a shared install).
Hi, 
First of all, thank you for publishing this project.
I learned a lot about compiler by reading 8cc, and it led me to start writing my own Go compiler. 

When I read the generated assembly code, I've found that `SAVE;`is missing in emitting functions, so I added it to some of them.

To some small functions like `emit_label()` and `emit_jmp()`, I didn't add `SAVE;` intentionally  because it would look a bit redundant.

Let me know if I overlooked something or went too far.
Thanks again!


Remove extra `goto error;` statement,
Free allocated buffer on file read error.
detected by cppcheck.
guest@Base:~/Gits/c-andrewchambers$ make test
-----------
```
make clean
make[1]: Entering directory '/home/guest/Gits/c-andrewchambers'
rm -rf src/panic.o src/cc/cpp.o src/cc/lex.o src/cc/parse.o src/cc/types.o src/cc/foldexpr.o src/cc/error.o src/mem/mem.o src/ds/list.o src/ds/map.o src/ds/vec.o src/ds/strset.o src/cmd/cpp/main.o  src/cmd/6c/emit.o src/cmd/6c/frontend.o src/cmd/6c/main.o  src/cmd/abifuzz/main.o lib bin
make[1]: Leaving directory '/home/guest/Gits/c-andrewchambers'
make all
make[1]: Entering directory '/home/guest/Gits/c-andrewchambers'
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cmd/6c/emit.o -c src/cmd/6c/emit.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cmd/6c/frontend.o -c src/cmd/6c/frontend.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cmd/6c/main.o -c src/cmd/6c/main.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/panic.o -c src/panic.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cc/cpp.o -c src/cc/cpp.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cc/lex.o -c src/cc/lex.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cc/parse.o -c src/cc/parse.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cc/types.o -c src/cc/types.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cc/foldexpr.o -c src/cc/foldexpr.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cc/error.o -c src/cc/error.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/mem/mem.o -c src/mem/mem.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/ds/list.o -c src/ds/list.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/ds/map.o -c src/ds/map.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/ds/vec.o -c src/ds/vec.c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/ds/strset.o -c src/ds/strset.c
ar rcs lib/libcompiler.a src/panic.o src/cc/cpp.o src/cc/lex.o src/cc/parse.o src/cc/types.o src/cc/foldexpr.o src/cc/error.o src/mem/mem.o src/ds/list.o src/ds/map.o src/ds/vec.o src/ds/strset.o
cc  src/cmd/6c/emit.o src/cmd/6c/frontend.o src/cmd/6c/main.o  lib/libcompiler.a -o bin/6c
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cmd/cpp/main.o -c src/cmd/cpp/main.c
cc  src/cmd/cpp/main.o  lib/libcompiler.a -o bin/cpp
cc -std=c89 -g -Wfatal-errors -Wno-unused-parameter -Wall -Wextra -D_DEFAULT_SOURCE -Isrc/ -o src/cmd/abifuzz/main.o -c src/cmd/abifuzz/main.c
cc  src/cmd/abifuzz/main.o lib/libcompiler.a -o bin/abifuzz
make[1]: Leaving directory '/home/guest/Gits/c-andrewchambers'
./test.sh
test/execute/0001-sanity.c PASS
test/execute/0002-global1.c PASS
test/execute/0003-locals1.c PASS
test/execute/0004-operators1.c PASS
test/execute/0004-operators2.c PASS
test/execute/0004-operators3.c PASS
test/execute/0004-operators4.c PASS
test/execute/0004-operators5.c PASS
test/execute/0005-if1.c PASS
test/execute/0006-while1.c PASS
test/execute/0007-dowhile1.c PASS
test/execute/0008-for1.c PASS
test/execute/0009-breakcont1.c PASS
test/execute/0010-goto1.c PASS
test/execute/0011-switch1.c PASS
test/execute/0012-pointers1.c PASS
test/execute/0012-pointers2.c PASS
test/execute/0013-struct1.c PASS
test/execute/0013-struct2.c PASS
test/execute/0013-struct3.c PASS
test/execute/0013-struct4.c PASS
test/execute/0013-struct5.c PASS
test/execute/0013-struct6.c PASS
test/execute/0014-array1.c PASS
test/execute/0015-calls01.c PASS
test/execute/0015-calls02.c PASS
test/execute/0015-calls03.c PASS
test/execute/0015-calls04.c PASS
test/execute/0016-string1.c PASS
test/execute/0017-incdec1.c PASS
test/execute/0018-funcptr1.c PASS
test/execute/0019-condexpr1.c PASS
test/execute/0020-comma1.c PASS
test/execute/0020-comma2.c PASS
test/execute/0021-tentativedefs1.c PASS
test/execute/0022-namespaces1.c PASS
test/execute/0023-incomplete1.c PASS
test/execute/0024-enums1.c PASS
test/execute/0025-duff.c PASS
test/execute/0026-sizeof1.c PASS
test/execute/0027-structcopy.c PASS
test/execute/0028-inits01.c PASS
test/execute/0028-inits02.c PASS
test/execute/0028-inits03.c PASS
test/execute/0028-inits04.c PASS
test/execute/0028-inits05.c PASS
test/execute/0028-inits06.c PASS
test/execute/0028-inits07.c PASS
test/execute/0028-inits08.c PASS
test/execute/0028-inits09.c PASS
test/execute/0028-inits10.c PASS
test/execute/0028-inits11.c PASS
test/execute/0028-inits12.c PASS
test/execute/0028-inits13.c PASS
test/execute/0028-inits14.c PASS
test/execute/0028-inits15.c PASS
test/execute/0029-ptrarith1.c PASS
test/execute/0029-ptrarith2.c PASS
test/cpp/0001-define1.c PASS
test/cpp/0001-define2.c PASS
test/cpp/0001-define3.c PASS
test/bugs/0001.c PASS
test/bugs/0002.c PASS
test/bugs/0004.c PASS
test/bugs/0005.c PASS
test/bugs/0006.c PASS
test/bugs/0008.c PASS
/usr/bin/ld: test/bugs/0012.c.o: relocation R_X86_64_PC32 against symbol `abort@@GLIBC_2.2.5' can not be used when making a shared object; recompile with -fPIC
/usr/bin/ld: final link failed: Bad value
collect2: error: ld returned 1 exit status
test/bugs/0012.c FAIL
Makefile:31: recipe for target 'test' failed
make: *** [test] Error 1
```



A self-hosting compiler involves writing a rudimentary compiler for a language X(Here C) in another language (Suppose assembly), I can't find any assembly or any other language used for compiling a code . I have been googling my wits out to find at least a simple guide to write a compiler in assembly for C language . Your blog is the closest one I found but still I don't see any .
My mail:
Hello Rui
I am Otto.
I have tried your compiler - it looks great!
But I think I found a bug.
I have tried to compile "suckless" project's ubase package
http://git.suckless.org/ubase/
It doesn't compile mount.c - it gives a segfault :(

(libutil/explicit_bzero.c don't compile - gives parse error or internal error)
probably it is not implemented :(

Thank you for your compiler!

[mount.c-gdb-out.txt](https://github.com/rui314/8cc/files/1237230/mount.c-gdb-out.txt)
[mount.c-gdb-out2.txt](https://github.com/rui314/8cc/files/1237231/mount.c-gdb-out2.txt)
[ubase-e3dacbb5_tmp_8cc.tar.gz](https://github.com/rui314/8cc/files/1237233/ubase-e3dacbb5_tmp_8cc.tar.gz)

Hello,
I was using American Fuzzy Lop (afl-fuzz) to fuzz input to the 8cc program on Linux. Is fixing the crashes from these input files something you're interested in? The input files can be found here: https://github.com/rwhitworth/8cc-fuzz.

The files can be executed as `./8cc -c id_filename` to cause seg faults.

Let me know if I can provide any more information to help narrow down this issue.