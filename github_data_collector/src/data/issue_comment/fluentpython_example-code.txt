The toxiproxy settings for localhost:8003 (25% error, 50% delay) are as below.

```
TODO: UPDATE NEXT PARAGRAPH

There is also the XXX script which runs a proxy on port 8003 producing errors in 25% of the responses and a .5 s delay to 50% of the responses. You can also test it with the browser on port 8003, but rememeber that errors are expected.
```

An update for the necessary settings would help a lot. 
According to my understanding of hashing and equality, I tried to enhance the performance of equality checking by ensuring that `__eq__` does not perform component based comparison  only if vectors has the same hash values (if two hashes is different then the two vectors are definitely unequal). because if two vectors has same hash value then:

-        either they equal 
-        they are not equal `Vector(1, 0, -1)`  and  `Vector(1, -1, 0)` will have the same hash value of -2


the 18-asyncio-py3.7 folder doesn't have this file. 
but this file doesn't work in aiohttp3.5.4 with Python3.7.2
the Request object has no attribute 'GET', use query instead.
```
def home(request):
    try:
        query = request.GET.get('query', '').strip()
    except AttributeError:
        query = request.query.get('query', '').strip()
    print('Query: {!r}'.format(query))
```

Open a pull request (in page 463): replace long Vector format with '...' (add '*' in the end of format to show all).
:D
The changes to 17-futures/countries/flags_asyncio.py allow it to work
with Python 3.6.6 and aiohttp 3.4.4.
When running with python 3.6.6, with aiohttp 3.3.2, the 'flags_asyncio.py' script outputs 20 pairs of lines similar to this:
`Unclosed client session`
`client_session: <aiohttp.client.ClientSession object at 0x10ecbfd68>`
followed by 20 tracebacks similar to this:
`Task exception was never retrieved`
`future: <Task finished coro=<download_one() done, defined at flags_asyncio.py:28>` `exception=TypeError("'_SessionRequestContextManager' object is not iterable",)>`
`Traceback (most recent call last):`
` File "flags_asyncio.py", line 30, in download_one`
`    image = yield from get_flag(cc)  # <7>`
`  File "flags_asyncio.py", line 23, in get_flag`
`    resp = yield from aiohttp.request('GET', url)  # <4>`
`TypeError: '_SessionRequestContextManager' object is not iterable`

When I try running the tombola_runner.py in chapter 11, python reports to me that the '_abc_registry' doesn't exist.

I searched in docs, but found that the attribute is not accesible anymore.

The changelog is
"""
bpo-31333: _abc module is added. It is a speedup module with C implementations for various functions and methods in abc. Creating an ABC subclass and calling isinstance or issubclass with an ABC subclass are up to 1.5x faster. In addition, this makes Python start-up up to 10% faster.

Note that the new implementation hides internal registry and caches, previously accessible via private attributes _abc_registry, _abc_cache, and _abc_negative_cache. There are three debugging helper methods that can be used instead _dump_registry, _abc_registry_clear, and _abc_caches_clear.
"""
Should consider "typecode" in __init__ and frombytes
I see the demo:
'''
    >>> d = TransformDict(str.lower)
    >>> d['Foo'] = 5
    >>> d['foo'] == d['FOO'] == d['Foo'] == 5
    True
    >>> set(d.keys())
    {'Foo'}
'''
but , i dont know the object how to maintain the keys.
thanks
