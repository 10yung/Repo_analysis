This speeds up import time from ~5.4s to 0.2s on my machine.
I am using localstack (which uses moto for S3) to test the Perl/Paws AWS sdk implementation. Calling S3 ListParts causes issues as the XML parsing fails to match the expected result.

Template here (I think) https://github.com/spulec/moto/blob/master/moto/s3/responses.py#L1858

a) the StorageClass element exists twice - which causes my parser to return an array of 2 STANDARD values (lines 1863 and 1872 in the link above).
b) NextPartNumberMarker comes out with a number and a space, eg: 

```<NextPartNumberMarker>1 </NextPartNumberMarker>``` 

which I can probably fix my end, however the default XML parser returns it as a string, whereas it correctly parses:

```<MaxParts>1</MaxParts>```

as an integer.

The CloudWatch events service lacks tagging support. This causes Terraform to fail when executing against a running moto server.

This pull request updates the following:
- Adds `TaggingService` (a generic implementation of tagging for easing the adoption of tagging support across moto)
- Implements tagging for CloudWatch events using `TaggingService`
- removes duplicate `test_list_rules` in `test_events.py`
Seems like the EnableIAMDatabaseAuthentication isn't getting read into the IAMDatabaseAuthenticationEnabled field. 

```
@mock_rds
def test_iam_database_authentication_enabled(self):
    print(self.client.create_db_instance(
        DBInstanceIdentifier='db-master-1',
        AllocatedStorage=10,
        Engine='postgres',
        DBInstanceClass='db.m1.small',
        EnableIAMDatabaseAuthentication=True,
        MasterUsername='root',
        MasterUserPassword='hunter2',
        Port=1234,
    ))

```

> {'DBInstance': {'DBInstanceIdentifier': 'db-master-1', 'DBInstanceClass': 'db.m1.small', 'Engine': 'postgres', 'DBInstanceStatus': 'available', 'MasterUsername': 'root', 'Endpoint': {'Address': 'db-master-1.aaaaaaaaaa.us-east-2.rds.amazonaws.com', 'Port': 1234}, 'AllocatedStorage': 10, 'InstanceCreateTime': datetime.datetime(2020, 1, 13, 13, 1, 10, 665000, tzinfo=tzutc()), 'PreferredBackupWindow': '03:50-04:20', 'BackupRetentionPeriod': 1, 'DBSecurityGroups': [], 'VpcSecurityGroups': [], 'DBParameterGroups': [{'DBParameterGroupName': 'default.postgres9.3', 'ParameterApplyStatus': 'in-sync'}], 'PreferredMaintenanceWindow': 'wed:06:38-wed:07:08', 'MultiAZ': False, 'EngineVersion': '9.3.3', 'AutoMinorVersionUpgrade': False, 'ReadReplicaDBInstanceIdentifiers': [], 'LicenseModel': 'general-public-license', 'OptionGroupMemberships': [{'OptionGroupName': 'default.postgres9.3', 'Status': 'in-sync'}], 'PubliclyAccessible': False, 'StatusInfos': [], 'StorageType': 'gp2', 'StorageEncrypted': False, 'DbiResourceId': 'db-M5ENSHXFPU6XHZ4G4ZEI5QIO2U', 'CopyTagsToSnapshot': False, 'DBInstanceArn': 'arn:aws:rds:us-east-2:1234567890:db:db-master-1', 'IAMDatabaseAuthenticationEnabled': False}, 'ResponseMetadata': {'RequestId': '523e3218-afc7-11c3-90f5-f90431260ab4', 'HTTPStatusCode': 200, 'HTTPHeaders': {'server': 'amazon.com'}, 'RetryAttempts': 0}}
```
        vpc_conn = boto3.client("ec2", self.region)
        vpc = vpc_conn.create_vpc(CidrBlock="10.0.0.0/16")["Vpc"]
        subnet = vpc_conn.create_subnet(VpcId=vpc["VpcId"], CidrBlock="10.0.1.0/24")[
            "Subnet"
        ]

        conn = boto3.client("rds", region_name=self.region)
        conn.create_db_subnet_group(
            DBSubnetGroupName="db_subnet1",
            DBSubnetGroupDescription="my db subnet",
            SubnetIds=[subnet["SubnetId"]],
        )
```
This fails with the following traceback

> self = <moto.rds2.models.SubnetGroup object at 0x11e40e550>, subnet_name = 'db_subnet1', description = 'my db subnet', subnets = [], tags = []
> 
>     def __init__(self, subnet_name, description, subnets, tags):
>         self.subnet_name = subnet_name
>         self.description = description
>         self.subnets = subnets
>         self.status = "Complete"
>         self.tags = tags
> >       self.vpc_id = self.subnets[0].vpc_id
> E       IndexError: list index out of range
> 
> ../my-venv/lib/python3.7/site-packages/moto/rds2/models.py:677: IndexError

This report is similar #2492 but a report of all the cases. The output is obtained with `ls -1 **/*py  | xargs -P 4 -I{} python -Wall -m py_compile {} 2>warnings.txt` . I have a patch at https://gitlab.com/snippets/1929405 that automatically converts them to raw strings. I would like to know if such changes are accepted.

```
moto/apigateway/urls.py:16: DeprecationWarning: invalid escape sequence \d
  "{0}/restapis/(?P<function_id>[^/]+)/resources/(?P<resource_id>[^/]+)/methods/(?P<method_name>[^/]+)/responses/(?P<status_code>\d+)$": APIGatewayResponse().resource_method_responses,
moto/apigateway/urls.py:18: DeprecationWarning: invalid escape sequence \d
  "{0}/restapis/(?P<function_id>[^/]+)/resources/(?P<resource_id>[^/]+)/methods/(?P<method_name>[^/]+)/integration/responses/(?P<status_code>\d+)/?$": APIGatewayResponse().integration_responses,
moto/cloudformation/parsing.py:199: DeprecationWarning: invalid escape sequence \$
  to_sub = re.findall('(?=\${)[^!^"]*?}', fn_sub_value)
moto/cloudformation/parsing.py:200: DeprecationWarning: invalid escape sequence \$
  literals = re.findall('(?=\${!)[^"]*?}', fn_sub_value)
moto/cloudformation/parsing.py:205: DeprecationWarning: invalid escape sequence \$
  "Fn::GetAtt": re.findall('(?<=\${)[^"]*?(?=})', sub)[
moto/cloudformation/parsing.py:213: DeprecationWarning: invalid escape sequence \$
  {"Ref": re.findall('(?<=\${)[^"]*?(?=})', sub)[0]},
moto/core/utils.py:98: DeprecationWarning: invalid escape sequence \(
  url_path = re.sub("\(\?P<(.*?)>(.*?)\)", caller, url_path)
moto/dynamodb2/comparisons.py:254: DeprecationWarning: invalid escape sequence \-
  attribute_regex = "(:|#)?[A-z0-9\-_]+"
moto/dynamodb2/comparisons.py:273: DeprecationWarning: invalid escape sequence \.
  "^" + attribute_regex + "(\." + attribute_regex + "|\[[0-9]\])*"
moto/dynamodb2/comparisons.py:273: DeprecationWarning: invalid escape sequence \[
  "^" + attribute_regex + "(\." + attribute_regex + "|\[[0-9]\])*"
moto/dynamodb2/comparisons.py:277: DeprecationWarning: invalid escape sequence \(
  (self.Nonterminal.LEFT_PAREN, re.compile("^\(")),
moto/dynamodb2/comparisons.py:278: DeprecationWarning: invalid escape sequence \)
  (self.Nonterminal.RIGHT_PAREN, re.compile("^\)")),
moto/ec2_instance_connect/urls.py:4: DeprecationWarning: invalid escape sequence \.
  url_bases = ["https?://ec2-instance-connect\.(.+)\.amazonaws\.com"]
moto/ec2/urls.py:5: DeprecationWarning: invalid escape sequence \.
  url_bases = ["https?://ec2\.(.+)\.amazonaws\.com(|\.cn)"]
moto/ecr/models.py:406: DeprecationWarning: invalid escape sequence \.
  pattern = re.compile("^[0-9a-zA-Z_+\.-]+:[0-9a-fA-F]{64}")
moto/elbv2/models.py:587: DeprecationWarning: invalid escape sequence \d
  "1 validation error detected: Value '%s' at 'actions.%s.member.fixedResponseConfig.statusCode' failed to satisfy constraint: \
moto/elbv2/models.py:608: DeprecationWarning: invalid escape sequence \-
  if not re.match("^[a-zA-Z0-9\-]+$", name):
moto/events/models.py:281: DeprecationWarning: invalid escape sequence \d
  "InvalidParameterValue", "Principal must match ^(\d{1,12}|\*)$"
moto/events/responses.py:183: DeprecationWarning: invalid escape sequence \(
  re.match("^cron\(.*\)", sched_exp)
moto/events/responses.py:185: DeprecationWarning: invalid escape sequence \(
  "^rate\(\d*\s(minute|minutes|hour|hours|day|days)\)", sched_exp
moto/packages/httpretty/http.py:137: DeprecationWarning: invalid escape sequence \s
  m = re.match(r"(" + methods + ")\s+(.*)\s+HTTP/(1.[0|1])", s, re.I)
moto/rds/urls.py:4: DeprecationWarning: invalid escape sequence \.
  url_bases = ["https?://rds(\..+)?.amazonaws.com"]
moto/route53/urls.py:16: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<api_version>[\d_-]+)/hostedzone$": Route53().list_or_create_hostzone_response,
moto/route53/urls.py:17: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<api_version>[\d_-]+)/hostedzone/(?P<zone_id>[^/]+)$": Route53().get_or_delete_hostzone_response,
moto/route53/urls.py:18: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<api_version>[\d_-]+)/hostedzone/(?P<zone_id>[^/]+)/rrset/?$": Route53().rrset_response,
moto/route53/urls.py:19: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<api_version>[\d_-]+)/hostedzonesbyname": Route53().list_hosted_zones_by_name_response,
moto/route53/urls.py:20: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<api_version>[\d_-]+)/healthcheck": Route53().health_check_response,
moto/route53/urls.py:21: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<api_version>[\d_-]+)/tags/healthcheck/(?P<zone_id>[^/]+)$": tag_response1,
moto/route53/urls.py:22: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<api_version>[\d_-]+)/tags/hostedzone/(?P<zone_id>[^/]+)$": tag_response2,
moto/route53/urls.py:23: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<api_version>[\d_-]+)/trafficpolicyinstances/*": Route53().not_implemented_response,
moto/s3/utils.py:55: DeprecationWarning: invalid escape sequence \-
  meta_regex = re.compile("^x-amz-meta-([a-zA-Z0-9\-_]+)$", flags=re.IGNORECASE)
moto/secretsmanager/utils.py:92: DeprecationWarning: invalid escape sequence \{
  c = "\{0}".format(c)
moto/sqs/urls.py:10: DeprecationWarning: invalid escape sequence \d
  "{0}/(?P<account_id>\d+)/(?P<queue_name>[a-zA-Z0-9\-_\.]+)": dispatch,
scripts/scaffold.py:135: DeprecationWarning: invalid escape sequence \.
  if any(_ for _ in lines if re.match('^from moto\.{}.*{}_backends.*$'.format(service, service), _)):
tests/test_awslambda/test_lambda.py:1509: DeprecationWarning: invalid escape sequence \d
  "1 validation error detected: Value 'test-iam-role' at 'role' failed to satisfy constraint: Member must satisfy regular expression pattern: arn:(aws[a-zA-Z-]*)?:iam::(\d{12}):role/?[a-zA-Z_0-9+=,.@\-_/]+"
tests/test_core/test_url_mapping.py:17: DeprecationWarning: invalid escape sequence \-
  convert_regex_to_flask_path("/(?P<key_name>[a-zA-Z0-9\-_]+)").should.equal(
tests/test_core/test_url_mapping.py:18: DeprecationWarning: invalid escape sequence \-
  '/<regex("[a-zA-Z0-9\-_]+"):key_name>'
tests/test_core/test_url_mapping.py:21: DeprecationWarning: invalid escape sequence \d
  convert_regex_to_flask_path("(?P<account_id>\d+)/(?P<queue_name>.*)$").should.equal(
tests/test_core/test_url_mapping.py:22: DeprecationWarning: invalid escape sequence \d
  '<regex("\d+"):account_id>/<regex(".*"):queue_name>'
tests/test_ec2/test_key_pairs.py:16: DeprecationWarning: invalid escape sequence \8
  RSA_PUBLIC_KEY_OPENSSH = b"""\
tests/test_ec2/test_tags.py:290: DeprecationWarning: invalid escape sequence \*
  tags = conn.get_all_tags(filters={"value": "*value\*"})
tests/test_ec2/test_tags.py:293: DeprecationWarning: invalid escape sequence \*
  tags = conn.get_all_tags(filters={"value": "*value\*\*"})
tests/test_ec2/test_tags.py:296: DeprecationWarning: invalid escape sequence \*
  tags = conn.get_all_tags(filters={"value": "*value\*\?"})
tests/test_sns/test_publishing_boto3.py:51: DeprecationWarning: invalid escape sequence \d
  "\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z",
tests/test_sns/test_publishing_boto3.py:277: DeprecationWarning: invalid escape sequence \d
  "\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z",
tests/test_sns/test_publishing_boto3.py:310: DeprecationWarning: invalid escape sequence \d
  "\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z",
tests/test_sns/test_publishing.py:57: DeprecationWarning: invalid escape sequence \d
  "\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z",
tests/test_sns/test_publishing.py:101: DeprecationWarning: invalid escape sequence \d
  "\d{4}-\d{2}-\d{2}T\d{2}:\d{2}:\d{2}\.\d{3}Z",
```

Fixes #2626 

LT/GT expressions should evaluate to false if one of the attributes is None, following the official behaviour
I could not find this issue in the forum, but trying to install moto from the command line or from pycharm fails.

Collecting moto
  Using cached https://files.pythonhosted.org/packages/1e/84/6e115b45be00273c7cfad5b9506b7c8a78bc7d2a11afe72517a7f6d01289/moto-1.3.14-py2.py3-none-any.whl
Collecting python-jose<4.0.0 (from moto)
  Using cached https://files.pythonhosted.org/packages/6c/80/5bdf2543fe002dc74429e9360148deb4d9e0b453acdc2b5c6fb1617f4f9d/python_jose-3.1.0-py2.py3-none-any.whl
Collecting python-dateutil<3.0.0,>=2.1 (from moto)
  Downloading https://files.pythonhosted.org/packages/d4/70/d60450c3dd48ef87586924207ae8907090de0b306af2bce5d134d78615cb/python_dateutil-2.8.1-py2.py3-none-any.whl (227kB)
Collecting requests>=2.5 (from moto)
  Using cached https://files.pythonhosted.org/packages/51/bd/23c926cd341ea6b7dd0b2a00aba99ae0f828be89d72b2190f27c11d4b7fb/requests-2.22.0-py2.py3-none-any.whl
Collecting boto3>=1.9.201 (from moto)
  Downloading https://files.pythonhosted.org/packages/43/a6/433564e7b241ecb012c67e6580e302ecdc79c8b5189e3f7efb6e7b0fde45/boto3-1.10.50-py2.py3-none-any.whl (128kB)
Collecting werkzeug (from moto)
  Using cached https://files.pythonhosted.org/packages/ce/42/3aeda98f96e85fd26180534d36570e4d18108d62ae36f87694b476b83d6f/Werkzeug-0.16.0-py2.py3-none-any.whl
Collecting boto>=2.36.0 (from moto)
  Using cached https://files.pythonhosted.org/packages/23/10/c0b78c27298029e4454a472a1919bde20cb182dab1662cec7f2ca1dcc523/boto-2.49.0-py2.py3-none-any.whl
Collecting aws-xray-sdk!=0.96,>=0.93 (from moto)
  Using cached https://files.pythonhosted.org/packages/f1/be/1580b7f224986de2bb328fafcaca0c6f460adb94d521709123ac12b80005/aws_xray_sdk-2.4.3-py2.py3-none-any.whl
Collecting botocore>=1.12.201 (from moto)
  Downloading https://files.pythonhosted.org/packages/24/2d/47bc2f26b9f014998ad5c6ed844424a69f8ea77d26dab22a4e2ddbff20d4/botocore-1.13.50-py2.py3-none-any.whl (5.9MB)
Collecting responses>=0.9.0 (from moto)
  Using cached https://files.pythonhosted.org/packages/3e/0c/940781dd49710f4b1f0650c450c9fd8491db0e1bffd99ebc36355607f96d/responses-0.10.9-py2.py3-none-any.whl
Collecting cfn-lint>=0.4.0 (from moto)
  Using cached https://files.pythonhosted.org/packages/04/11/0aea3979a3f98eabac05e47309aa3e44f7c1f6399a3504e1d51b9893df5c/cfn_lint-0.26.2-py3-none-any.whl
Collecting PyYAML>=5.1 (from moto)
  Using cached https://files.pythonhosted.org/packages/3d/d9/ea9816aea31beeadccd03f1f8b625ecf8f645bd66744484d162d84803ce5/PyYAML-5.3.tar.gz
Collecting xmltodict (from moto)
  Using cached https://files.pythonhosted.org/packages/28/fd/30d5c1d3ac29ce229f6bdc40bbc20b28f716e8b363140c26eff19122d8a5/xmltodict-0.12.0-py2.py3-none-any.whl
Collecting idna<2.9,>=2.5 (from moto)
  Using cached https://files.pythonhosted.org/packages/14/2c/cd551d81dbe15200be1cf41cd03869a46fe7226e7450af7a6545bfc474c9/idna-2.8-py2.py3-none-any.whl
Collecting pytz (from moto)
  Using cached https://files.pythonhosted.org/packages/e7/f9/f0b53f88060247251bf481fa6ea62cd0d25bf1b11a87888e53ce5b7c8ad2/pytz-2019.3-py2.py3-none-any.whl
Collecting sshpubkeys<4.0,>=3.1.0 (from moto)
  Using cached https://files.pythonhosted.org/packages/08/96/b5308537f88df326939006a8331a2edc528f25d920c49dbd9fc2c53c4e68/sshpubkeys-3.1.0-py2.py3-none-any.whl
Collecting Jinja2>=2.10.1 (from moto)
  Using cached https://files.pythonhosted.org/packages/65/e0/eb35e762802015cab1ccee04e8a277b03f1d8e53da3ec3106882ec42558b/Jinja2-2.10.3-py2.py3-none-any.whl
Collecting cryptography>=2.3.0 (from moto)
  Using cached https://files.pythonhosted.org/packages/be/60/da377e1bed002716fb2d5d1d1cab720f298cb33ecff7bf7adea72788e4e4/cryptography-2.8.tar.gz
  Installing build dependencies: started
  Installing build dependencies: finished with status 'done'
  Getting requirements to build wheel: started
  Getting requirements to build wheel: finished with status 'done'
    Preparing wheel metadata: started
    Preparing wheel metadata: finished with status 'done'
Collecting six>1.9 (from moto)
  Using cached https://files.pythonhosted.org/packages/65/26/32b8464df2a97e6dd1b656ed26b2c194606c16fe163c695a992b36c11cdf/six-1.13.0-py2.py3-none-any.whl
Collecting jsondiff==1.1.2 (from moto)
  Using cached https://files.pythonhosted.org/packages/33/0c/ddb17571e061c655871ccbf76cdada55a31569327d21517de779d4887241/jsondiff-1.1.2.tar.gz
Collecting docker>=2.5.1 (from moto)
  Using cached https://files.pythonhosted.org/packages/cc/ca/699d4754a932787ef353a157ada74efd1ceb6d1fc0bfb7989ae1e7b33111/docker-4.1.0-py2.py3-none-any.whl
Collecting mock (from moto)
  Using cached https://files.pythonhosted.org/packages/05/d2/f94e68be6b17f46d2c353564da56e6fb89ef09faeeff3313a046cb810ca9/mock-3.0.5-py2.py3-none-any.whl
Collecting pyasn1 (from python-jose<4.0.0->moto)
  Using cached https://files.pythonhosted.org/packages/62/1e/a94a8d635fa3ce4cfc7f506003548d0a2447ae76fd5ca53932970fe3053f/pyasn1-0.4.8-py2.py3-none-any.whl
Collecting ecdsa<1.0 (from python-jose<4.0.0->moto)
  Using cached https://files.pythonhosted.org/packages/b8/11/4b4d30e4746584684c758d8f1ddc1fa5ab1470b6bf70bce4d9b235965e99/ecdsa-0.15-py2.py3-none-any.whl
Collecting rsa (from python-jose<4.0.0->moto)
  Using cached https://files.pythonhosted.org/packages/02/e5/38518af393f7c214357079ce67a317307936896e961e35450b70fad2a9cf/rsa-4.0-py2.py3-none-any.whl
Collecting chardet<3.1.0,>=3.0.2 (from requests>=2.5->moto)
  Using cached https://files.pythonhosted.org/packages/bc/a9/01ffebfb562e4274b6487b4bb1ddec7ca55ec7510b22e4c51f14098443b8/chardet-3.0.4-py2.py3-none-any.whl
Collecting certifi>=2017.4.17 (from requests>=2.5->moto)
  Using cached https://files.pythonhosted.org/packages/b9/63/df50cac98ea0d5b006c55a399c3bf1db9da7b5a24de7890bc9cfd5dd9e99/certifi-2019.11.28-py2.py3-none-any.whl
Collecting urllib3!=1.25.0,!=1.25.1,<1.26,>=1.21.1 (from requests>=2.5->moto)
  Using cached https://files.pythonhosted.org/packages/b4/40/a9837291310ee1ccc242ceb6ebfd9eb21539649f193a7c8c86ba15b98539/urllib3-1.25.7-py2.py3-none-any.whl
Collecting jmespath<1.0.0,>=0.7.1 (from boto3>=1.9.201->moto)
  Using cached https://files.pythonhosted.org/packages/83/94/7179c3832a6d45b266ddb2aac329e101367fbdb11f425f13771d27f225bb/jmespath-0.9.4-py2.py3-none-any.whl
Collecting s3transfer<0.3.0,>=0.2.0 (from boto3>=1.9.201->moto)
  Using cached https://files.pythonhosted.org/packages/16/8a/1fc3dba0c4923c2a76e1ff0d52b305c44606da63f718d14d3231e21c51b0/s3transfer-0.2.1-py2.py3-none-any.whl
Collecting future (from aws-xray-sdk!=0.96,>=0.93->moto)
  Using cached https://files.pythonhosted.org/packages/45/0b/38b06fd9b92dc2b68d58b75f900e97884c45bedd2ff83203d933cf5851c9/future-0.18.2.tar.gz
Collecting jsonpickle (from aws-xray-sdk!=0.96,>=0.93->moto)
  Using cached https://files.pythonhosted.org/packages/07/07/c157520a3ebd166c8c24c6ae0ecae7c3968eb4653ff0e5af369bb82f004d/jsonpickle-1.2-py2.py3-none-any.whl
Collecting wrapt (from aws-xray-sdk!=0.96,>=0.93->moto)
  Using cached https://files.pythonhosted.org/packages/23/84/323c2415280bc4fc880ac5050dddfb3c8062c2552b34c2e512eb4aa68f79/wrapt-1.11.2.tar.gz
Collecting docutils<0.16,>=0.10 (from botocore>=1.12.201->moto)
  Using cached https://files.pythonhosted.org/packages/22/cd/a6aa959dca619918ccb55023b4cb151949c64d4d5d55b3f4ffd7eee0c6e8/docutils-0.15.2-py3-none-any.whl
Collecting jsonschema~=3.0 (from cfn-lint>=0.4.0->moto)
  Using cached https://files.pythonhosted.org/packages/c5/8f/51e89ce52a085483359217bc72cdbf6e75ee595d5b1d4b5ade40c7e018b8/jsonschema-3.2.0-py2.py3-none-any.whl
Collecting aws-sam-translator>=1.19.1 (from cfn-lint>=0.4.0->moto)
  Using cached https://files.pythonhosted.org/packages/a4/fb/46a67369e4e71cab8e73ca73ca0b938c297767d0ef8cfcad21b4f064ed66/aws-sam-translator-1.19.1.tar.gz
Collecting jsonpatch (from cfn-lint>=0.4.0->moto)
  Using cached https://files.pythonhosted.org/packages/86/7e/035d19a73306278673039f0805b863be8798057cc1b4008b9c8c7d1d32a3/jsonpatch-1.24-py2.py3-none-any.whl
Collecting MarkupSafe>=0.23 (from Jinja2>=2.10.1->moto)
  Using cached https://files.pythonhosted.org/packages/b9/2e/64db92e53b86efccfaea71321f597fa2e1b2bd3853d8ce658568f7a13094/MarkupSafe-1.1.1.tar.gz
Collecting cffi!=1.11.3,>=1.8 (from cryptography>=2.3.0->moto)
  Using cached https://files.pythonhosted.org/packages/2d/bf/960e5a422db3ac1a5e612cb35ca436c3fc985ed4b7ed13a1b4879006f450/cffi-1.13.2.tar.gz
Collecting pypiwin32==223; sys_platform == "win32" and python_version >= "3.6" (from docker>=2.5.1->moto)
  Using cached https://files.pythonhosted.org/packages/d0/1b/2f292bbd742e369a100c91faa0483172cd91a1a422a6692055ac920946c5/pypiwin32-223-py3-none-any.whl
Collecting websocket-client>=0.32.0 (from docker>=2.5.1->moto)
  Using cached https://files.pythonhosted.org/packages/4c/5f/f61b420143ed1c8dc69f9eaec5ff1ac36109d52c80de49d66e0c36c3dfdf/websocket_client-0.57.0-py2.py3-none-any.whl
Requirement already satisfied: setuptools in c:\users\abhalla\pycharmprojects\untitled\venv\lib\site-packages\setuptools-40.8.0-py3.8.egg (from jsonschema~=3.0->cfn-lint>=0.4.0->moto) (40.8.0)
Collecting attrs>=17.4.0 (from jsonschema~=3.0->cfn-lint>=0.4.0->moto)
  Using cached https://files.pythonhosted.org/packages/a2/db/4313ab3be961f7a763066401fb77f7748373b6094076ae2bda2806988af6/attrs-19.3.0-py2.py3-none-any.whl
Collecting pyrsistent>=0.14.0 (from jsonschema~=3.0->cfn-lint>=0.4.0->moto)
  Using cached https://files.pythonhosted.org/packages/90/aa/cdcf7ef88cc0f831b6f14c8c57318824c9de9913fe8de38e46a98c069a35/pyrsistent-0.15.7.tar.gz
Collecting jsonpointer>=1.9 (from jsonpatch->cfn-lint>=0.4.0->moto)
  Using cached https://files.pythonhosted.org/packages/18/b0/a80d29577c08eea401659254dfaed87f1af45272899e1812d7e01b679bc5/jsonpointer-2.0-py2.py3-none-any.whl
Collecting pycparser (from cffi!=1.11.3,>=1.8->cryptography>=2.3.0->moto)
  Using cached https://files.pythonhosted.org/packages/68/9e/49196946aee219aead1290e00d1e7fdeab8567783e83e1b9ab5585e6206a/pycparser-2.19.tar.gz
Collecting pywin32>=223 (from pypiwin32==223; sys_platform == "win32" and python_version >= "3.6"->docker>=2.5.1->moto)

 

  **Could not find a version that satisfies the requirement pywin32>=223 (from pypiwin32==223; sys_platform == "win32" and python_version >= "3.6"->docker>=2.5.1->moto) (from versions: )
No matching distribution found for pywin32>=223 (from pypiwin32==223; sys_platform == "win32" and python_version >= "3.6"->docker>=2.5.1->moto)**

Hi!

This line in `setup.py` prevents me from updating jsondiff to the latest release:
https://github.com/spulec/moto/blob/d596560971ae289f102b9aecb9939b3c49a56ac5/setup.py#L46

Dependency jsondiff was introduced with `==1.1.1` in 0de2e55b1379f3de040485cedbf5c6fdc5a61a2d without any documentation about why `==` rather than `>=` would be needed.  It was then bumped from 1.1.1 to 1.1.2 in 5ca68fbf06adecb0c0478f102a9cc7d331aa36c4, keeping the `==` untouched. So far no signs why 1.1.2 and only 1.1.2 would need to be used. Did I miss any?

It would be great if we could lift `==` to `>=` to play nice with other Python packages in the same virtualenv and allow users to use recent jsondiff. Tests seem to still pass after the change.  Does it take anything more to make this work, from your point of view?

Many thanks, Sebastian
Fixes #2680.

I added minimal tests, I hope it is correct as-is.