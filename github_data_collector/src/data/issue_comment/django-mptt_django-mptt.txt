Hello.
I'm looking for a help with dropdown menu. I asked this question on stackoverflow however no one responed. So maybe here someone will be able to help?

I want to be able to create dropdown menu with subpages using admin panel. At this moment in model I can choose if subpage is children of another and in what order it should be displayed. But I don't know how to implement all of this together in template. 
For example when I set that page2 is child of page3 it looks like this:
[screenshot](http://prntscr.com/ql7hv5)
So page3 is now double and I don't now how to deal with that. Can anyone help please?

models.py
```python

class Subpage(MPTTModel):

    title = models.CharField(max_length=254)
    slug = models.SlugField(unique=True)
    display_order = models.IntegerField(default=1)
    parent = TreeForeignKey('self', verbose_name='is child:', on_delete=models.CASCADE, null=True, blank=True)
```
views.py
```python

def generated_page(request, slug):
    unique_subpage = get_object_or_404(Subpage, slug=slug)
    homepage = Homepage.objects.first()
    subpage_sorted = Subpage.objects.exclude(is_active=False).order_by('display_order')

    context = {
            'unique_subpage': unique_subpage,
            'subpage_sorted': subpage_sorted,
            'homepage': homepage,
        }   

    if unique_subpage.is_active or unique_subpage.slug == 'admin':
        return render(request, 'subpage.html', context)
    else:
        return render(request, '404.html', context)
```

in template
```python

{% recursetree subpage_sorted %}
          <li class="nav-item dropdown">
            {% if not node.is_child_node %}
              <a class="nav-link" href="{% url 'generated_page' node.slug  %}">{% trans node.title %}</a>
            {% elif node.is_child_node %}
              <a class="nav-link dropdown-toggle" href="{% url 'generated_page' node.parent.slug  %}" data-toggle="dropdown"  role="button" aria-haspopup="true" aria-expanded="false">{% trans node.parent.title %}</a>
                  <div class="dropdown-menu">
                    <a class="dropdown-item" href="{% url 'generated_page' node.slug  %}">{% trans node.title %}</a>
            {% endif %}
          </li>
        {% endrecursetree %}
```
- Created an admin for my model using DraggableMPTTAdmin.
- It worked with normal id's 
- when changed the id's from int to hashid object it started breaking. Following is the Stack trace :
Traceback (most recent call last):
File "/usr/local/lib/python3.7/site-packages/django/core/handlers/exception.py", line 34, in inner
response = get_response(request)
File "/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py", line 115, in _get_response
response = self.process_exception_by_middleware(e, request)
File "/usr/local/lib/python3.7/site-packages/django/core/handlers/base.py", line 113, in _get_response
response = wrapped_callback(request, *callback_args, **callback_kwargs)
File "/usr/local/lib/python3.7/site-packages/django/contrib/admin/options.py", line 607, in wrapper
return self.admin_site.admin_view(view)(*args, **kwargs)
File "/usr/local/lib/python3.7/site-packages/django/utils/decorators.py", line 130, in _wrapped_view
response = view_func(request, *args, **kwargs)
File "/usr/local/lib/python3.7/site-packages/django/views/decorators/cache.py", line 44, in _wrapped_view_func
response = view_func(request, *args, **kwargs)
File "/usr/local/lib/python3.7/site-packages/django/contrib/admin/sites.py", line 231, in inner
return view(request, *args, **kwargs)
File "/usr/local/lib/python3.7/site-packages/mptt/admin.py", line 162, in changelist_view
self._tree_context(request), cls=DjangoJSONEncoder
File "/usr/local/lib/python3.7/json/__init__.py", line 238, in dumps
**kw).encode(obj)
File "/usr/local/lib/python3.7/json/encoder.py", line 199, in encode
chunks = self.iterencode(o, _one_shot=True)
File "/usr/local/lib/python3.7/json/encoder.py", line 257, in iterencode
return _iterencode(o, 0)
File "/usr/local/lib/python3.7/site-packages/django/core/serializers/json.py", line 104, in default
return super().default(o)
File "/usr/local/lib/python3.7/json/encoder.py", line 179, in default
raise TypeError(f'Object of type {o.__class__.__name__} '
Currently, mptt tests are failing with Django 3.0, apparently due to this Django commit:
https://github.com/django/django/commit/4122d9d3f198
Suppose I have a `mptt tree` in my database.  Is it possible to query all the tree at once using `Graphene-Python`?
Environment:

Python 3.7.4
Django==2.2.6
mysql-connector-python==8.0.18
django-mptt==0.10.0
django-mptt-admin==0.7.2

(Mysql version  5.7.23)

After adding 1 record in the admin without problems, adding another one gives me  the error:

TypeError at /admin/engineering/domain/add/
**can't multiply sequence by non-int of type 'NoneType'** whe evaluating {{ field.field }} 

Have'nt been able to debug fully but it appears that somehow the **level** attribute of object instance is of NoneType instead of an integer.  All other attributes (fields) like lft , rght,tree_id are integers resp. 1,2,1,. 

Issue doesn't occur with mysql-connector-python versions 8.0.11 and 8.0.12
Issue does occur with mysql-connector-python versions 8.0.13,14,15,16,17 and 18

Hi,

I have a short question I couldn't find answer to. How can I use `get_ancestors` from inside of custom `save` method? It most cases it is working fine, it only fails when `.save` is called during object creation. 

As per documentation, `get_ancestors` in this situation raises ValueError with `Cannot call get_ancestors on unsaved ... instances`.

Is there any way to do so? I basically want to store whole branch of ancestors in a db field so it is accessible for tools that interacts with DB directly.
I created a `CategoryForm` to display a list of nested categories in  a select form using a `TreeNodeChoiceField`

```
from django import forms
from mptt.forms import TreeNodeChoiceField
from .models import *

class CategoryForm(forms.ModelForm):
    class Meta:
        model = Category
        fields = []
    category = TreeNodeChoiceField(queryset=Category.objects.all(), label='')
```
When I render the form in a template, the selected option contains a list of dashes and I so far I could not find a way to change it to a more meaningful name like "Category".

![image](https://user-images.githubusercontent.com/13611311/64812320-46737980-d59f-11e9-98c9-3ed1dcc29c7d.png)
Hi guys,
I'm having trouble with the pagination of a MPTT model's ListView. It seems my issue boils down to this: If the first item on a page is a root node, everything is fine. If the first item on a page is a child node, I get an error: "Node <class 'mptt.querysets.TreeQuerySet'> not in depth-first order". I am using a pretty standard ListView and only have items of level 0 or 1.
I'm under the impression that I am missing something really basic here and would appreciate a nudge in the right direction.

Cheers,
Gunnar

p.s. I'm using Django 2.1.7 and mptt 0.9.1
> mptt version  =  '0.10.0'
> django version = '2.2.4'

I have added this to my `Category` model:
```
parent_category = TreeForeignKey('self', on_delete=models.CASCADE, null=True, blank=True, related_name='children')

class MPTTMeta:
      order_insertion_by = ['name']
```
Now trying to `migrate` complains:

> You are trying to add a non-nullable field 'level' to category without a default; we can't do that (the database needs something to populate existing rows).
> Please select a fix:
>  1) Provide a one-off default now (will be set on all existing rows with a null value for this column)
>  2) Quit, and let me add a default in models.py
> Select an option: 


Since I am inheriting from `MPTTModel`, but not directly using the field: `level`, how can I possibly fix this issue with `level`


E.g. in function get_family the normal filter is used, instead of the _mptt_filter, which breaks compatibility with django-polymorphic-tree.
Is there a reason sometimes _mptt_filter is used, and sometimes the normal filter is used?