Hi, I'm Emanuele Iannone, a master student at University of Salerno.
Since my bachelor's thesis I have been working on a **code smell refactoring plugin** called *aDoctor*, which is able to identify and fix energy-related problems in Android apps.
I launched it on your project, finding different instances of code smells. I chose one of them and let the plugin automatically fix it.
In this case I chose Member Ignoring Method, that is present when a non static method does not use at all instance variables and other non static methods. These kind of smell may have a non trivial impact on energy consumption, as shown in this paper: `https://www.sciencedirect.com/science/article/pii/S0950584918301678`.
Besides, this kind of refactoring does not impact on the functionalities of your app, so it is totally safe. Let me know if you are interested in this refactoring proposal.
Hello all, 
I discovered this amazing app only recently and I love the ability to configure different effects for home and lock screen. The only thing which I'm missing is 3D parallax effect. I found that this feature suggestion was rejected in 2014 due to possible CPU issues, but maybe could be re-evaluated now. I was using another 3D app extensively during past years and it had no visible impact on the battery, so I'd say that it's safe to use with negligible impact on resources (https://play.google.com/store/apps/details?id=opotech.image3Dlwp). Could you please re-consider adding this cool feature?

Thanks in advance!
Muzei is really awesome app. I would love to see it in more languages. Is there any way I could submit a translation into my language, like crowdin.com or similar service? If not, do you think localization support could be added in the future?
Bumps [brace-expansion](https://github.com/juliangruber/brace-expansion) from 1.1.6 to 1.1.11.
<details>
<summary>Release notes</summary>

*Sourced from [brace-expansion's releases](https://github.com/juliangruber/brace-expansion/releases).*

> ## 1.1.11
> No release notes provided.
> 
> ## v1.1.11
> # brace-expansion
> 
> [Brace expansion](https://www.gnu.org/software/bash/manual/html_node/Brace-Expansion.html), 
> as known from sh/bash, in JavaScript.
> 
> [![build status](https://secure.travis-ci.org/juliangruber/brace-expansion.svg)](http://travis-ci.org/juliangruber/brace-expansion)
> [![downloads](https://img.shields.io/npm/dm/brace-expansion.svg)](https://www.npmjs.org/package/brace-expansion)
> [![Greenkeeper badge](https://badges.greenkeeper.io/juliangruber/brace-expansion.svg)](https://greenkeeper.io/)
> 
> [![testling badge](https://ci.testling.com/juliangruber/brace-expansion.png)](https://ci.testling.com/juliangruber/brace-expansion)
> 
> ## Example
> 
> ```js
> var expand = require('brace-expansion');
> 
> expand('file-{a,b,c}.jpg')
> // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']
> 
> expand('-v{,,}')
> // => ['-v', '-v', '-v']
> 
> expand('file{0..2}.jpg')
> // => ['file0.jpg', 'file1.jpg', 'file2.jpg']
> 
> expand('file-{a..c}.jpg')
> // => ['file-a.jpg', 'file-b.jpg', 'file-c.jpg']
> 
> expand('file{2..0}.jpg')
> // => ['file2.jpg', 'file1.jpg', 'file0.jpg']
> 
> expand('file{0..4..2}.jpg')
> // => ['file0.jpg', 'file2.jpg', 'file4.jpg']
> 
> expand('file-{a..e..2}.jpg')
> // => ['file-a.jpg', 'file-c.jpg', 'file-e.jpg']
> 
> expand('file{00..10..5}.jpg')
> // => ['file00.jpg', 'file05.jpg', 'file10.jpg']
> 
> expand('{{A..C},{a..c}}')
> // => ['A', 'B', 'C', 'a', 'b', 'c']
> 
> expand('ppp{,config,oe{,conf}}')
> // => ['ppp', 'pppconfig', 'pppoe', 'pppoeconf']
> ```
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`e52ad1c`](https://github.com/juliangruber/brace-expansion/commit/e52ad1c92cb928dcdc5334625cf3a04e230d3bd5) Merge pull request [#42](https://github-redirect.dependabot.com/juliangruber/brace-expansion/issues/42) from juliangruber/greenkeeper/update-to-node-10
- [`fb4c692`](https://github.com/juliangruber/brace-expansion/commit/fb4c6920828d6d1be00cd95cd7ce57c929c0e800) Update to node 10 in .travis.yml
- [`01a21de`](https://github.com/juliangruber/brace-expansion/commit/01a21de7441549d26ac0c0a9ff91385d16e5c21c) 1.1.11
- [`d7c93ee`](https://github.com/juliangruber/brace-expansion/commit/d7c93eebd9d99f4aace9dc829acab4caa13f5125) sponsors
- [`54a6176`](https://github.com/juliangruber/brace-expansion/commit/54a6176731eb223cd3dede1473190d885d6b3648) 1.1.10
- [`327c729`](https://github.com/juliangruber/brace-expansion/commit/327c729fa7e12a92237c26e8900c72165ebbd952) Merge pull request [#40](https://github-redirect.dependabot.com/juliangruber/brace-expansion/issues/40) from Parcley/add-license-1
- [`b6ba2e0`](https://github.com/juliangruber/brace-expansion/commit/b6ba2e02407ff1edcf4a99f0bcc58468084d308f) create LICENSE file
- [`0f82dab`](https://github.com/juliangruber/brace-expansion/commit/0f82dab6708f7c451e4a865b817057bc5a6b3c8e) 1.1.9
- [`acd1754`](https://github.com/juliangruber/brace-expansion/commit/acd17547daab3615bd99a477746c8656224c0bc8) support
- [`40ff02d`](https://github.com/juliangruber/brace-expansion/commit/40ff02d2f89d22ff0d76eafe3ecf5d762839a2b4) Merge pull request [#39](https://github-redirect.dependabot.com/juliangruber/brace-expansion/issues/39) from EdwardBetts/spelling
- Additional commits viewable in [compare view](https://github.com/juliangruber/brace-expansion/compare/v1.1.6...1.1.11)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=brace-expansion&package-manager=npm_and_yarn&previous-version=1.1.6&new-version=1.1.11)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/romannurik/muzei/network/alerts).

</details>
Android 10 restriction start activity on background service, so app can't start activity in `onCommand` method.

Maybe can change `onCommand` return `PendingIntent` like `getArtworkInfo` to allow start activity.
As part of #630, the documentation is now built with [Dokka](https://github.com/Kotlin/dokka), which has a different format for its HTML documentation that caused the `prettify` script to not properly be applied.

The `prettify` script and the other related documentation tweaks should be adjust to work with the new output of `./gradlew muzei-api:dokka`.
The title sounds ridiculous but it is true.

Since [the source I’m working on](https://github.com/ming13/muzei-earth-view) contains a limited set of images I ship a defined set of declarations in JSON. It contains something like 1500 elements. I read this JSON, transform it to `Artwork` objects and call `MuzeiArtProvider#setArtwork`. It works fine but there is a noticeable delay before images actually appear on the UI. It might take almost a minute to do so (on a real device). Timings from an emulator:

Step | Time
-----|------ 
Reading JSON                              | 69 ms
Transforming to `Artwork`          | 23 ms
`MuzeiArtProvider#setArtwork` | 3.514 s
Timeout before images appear   | 16 s

One thing I’ve noticed right away is a ton of such log entries:

```
D/MuzeiArtProvider: Notified for batch change on content://ru.ming13.muzei.earthview/1342
D/MuzeiArtProvider: Notified for batch change on content://ru.ming13.muzei.earthview/1341
D/MuzeiArtProvider: Notified for batch change on content://ru.ming13.muzei.earthview/1340
```

Not sure it is necessary to occupy the thread with logging 1.5 K entries, especially taking into account `Uri#toString` calls. But the real issue is somewhere else and it occupies the majority of time.
As per [the documentation](https://developer.android.com/preview/features/foldables#wallpaper), Muzei should add `android:supportsMultipleDisplays="true"` to our `wallpaper.xml` to ensure we support multiple displays.
The documentation referenced in the readme ([api.muzei.co](http://api.muzei.co/), which redirects to the [wiki](https://github.com/romannurik/muzei/wiki/API) has not been updated to v3, and still documents the legacy v2 API.

The [full API reference](http://api.muzei.co/reference) hasn't been updated either.

Additionally, the [changelog](https://github.com/romannurik/muzei/wiki/Changelog) in that same wiki is still at v2.3.
In my app I have a JSON file with over 600 image URLs. I have two questions:

1. If I add them all using `ProviderContract.Artwork.addArtwork` inside `onLoadRequested` method, will Muzei download all of them right away?
  
2. When I open my source in `BrowseProviderFragment`, Muzei will start to download all the images (over 1GB), which is really bad. Can we add `thumbnail` property to `Artwork` so it will be displayed instead of the full image?
  
Thank you.