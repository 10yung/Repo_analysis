Can not make widget interactive, clickable. I want to create button for updating widget data on demand.
I tried basic logging into console. onClick event wasn't triggered, even initial :active style didn't apply on button. Widget is behaving like covered with overlay. If I open Uebersicht widget in browser on 127.0.0.1:41416 button works and also trigger system sound inside run function "osascript -e beep" as I expected. Somebody knows where is the problem?

I have Allowed Accessibility

My code:
```jsx
import { run } from 'uebersicht'

export const render = (props, dispatch) => {
  return (
    <button
      onClick={() => {
        console.log(true);
        run("osascript -e beep")
      }}
    >
      Update
    </button>
  );
}
```

MBP Early2015
macOS Catalina
v 10.15.1

I don't code professionally, I've never coded in Javascript or its variations, so I found the selection of widgets on the main website of uebersicht more confusing than useful. 

Furthermore, most of the available widgets mirror the needs of developers so it's kinda self complacency to see useful tools for devs only and not made for a broader audience. I think coding scares most people  XD

Anyway, for those who try with it, the widgets shall have a bunch of exemplar templates to begin with
A simple template is in my eyes something "useful" and not just a poor "help World", and I think at something like ~

*display multiple text boxes reading text from offline text files or online links
*display multiple pictures from offline paths or online links
*templates that highlight particular features or Javascript react, Javascript for automation as uebersicht is gonna drop coffeescript 

I successfully modified 2 of the available
Widgets for text and pictures, 
but now I try to create a new code able to  display 3 pictures which reside in the same common posix path of my Mac hd. It's yet coffeescript, and I've not much idea how to elaborate it. Help is greatly appreciated
 
```
command: var1 = `echo -n './my.widget/preview/A.jpg'`
command: var2 = `echo -n './my.widget/preview/B.jpg'`
command: var3 = `echo -n './my.widget/preview/C.jpg'`

refreshFrequency: 60*60*1000 # 1 Std

# Render the output.
render: (output) -> """
  <img src="#{var1}"
  style="width:20%">
  <img src="#{var2}"
  style="width:20%">
  <img src="#{var3}"
  style="width:20%">
"""

style: """ 
	<position:absolute 
	left:1%
	top:2%<
	<position:absolute 
	left:1%
	top:24%<
    <position:absolute 
	left:1%
	top:45%<
"""
```
If I import React libraries like `recharts` that requires a peer dependency of React, the widget will fail to load, throwing
```
undefined is not an object (evaluating process.env.NODE_ENV)
```  

If I do not install React, then the widget will throw an error saying `unable to find package "react"`.
I want to parameterize some things based upon which desktop the widget is being rendered on (for a menubar that displays the spaces of each display). Is it possible to expose either the widget settings to the widgets or, alternatively, the screen ID directly?
Greetings,

I just tried out Uebersicht starting today and it was going great until all the sudden it was no longer displaying any of the widgets.  I was working on trying to customize the wttr widget.  I have since tried removing all of the widgets, uninstalling, removing the caches and application support data, re-installing.  I have not been able to get the widgets to display again.  I am seriously hoping that I just am missing something here.

I am attaching the console logs for Uebersicht.  I can also provide a copy of the system report if you wish to review it, but don't feel safe publishing that package to a public forum.

Thanks!
[uebersicht.log](https://github.com/felixhageloh/uebersicht/files/3735981/uebersicht.log)

Any request I make through the proxy server at 41417 will return a 404 status code :(
I've using uebersicht very well for developing widgets with click events. I've set up my interaction shortcut in preferences, but uebersicht rarely interacts with my click events. But when I turn on the debug console, the widget interacts very well. Can you check about this issue?
Hi! I've been having a lot of fun using the new JSX system to code widgets. While looking at htop I realized that the vmem usage of webkit is MASSIVE! It idles at like 85 gigs when I don't have a single widget loaded. I realized it couldn't have been like this in its default state. 

Maybe something I did may have contributed to what was going on. When I was developing a series of widgets, it had at first seemed like it wasn't actually live updating them. So I had basically just removed and reinstalled the widgets from the folder again and again in order for them to load. Oftentimes when doing this, the app would stop updating the widgets and I would have to relaunch the app. This was stupid for me to do in hindsight, as it turned out that this issue was something peculiar to macvim; when I switched to my trusty nvim in Terminal the live updates on hitting :w worked as had originally been described.

I've tried clearing my App Caches for Ãœbersicht, as well as restarting. I've cleaned out the widgets folder and tried to relaunch the app several times, but webkit still is astronomically high in vmem usage. I feel like this is undesired behavior.

<img width="1190" alt="Screen Shot 2019-09-05 at 12 04 57 PM" src="https://user-images.githubusercontent.com/4432331/64360033-98ccfd00-cfd7-11e9-9314-db54e5dfdeb2.png">

<img width="894" alt="Screen Shot 2019-09-05 at 12 05 14 PM" src="https://user-images.githubusercontent.com/4432331/64360047-a1bdce80-cfd7-11e9-80fd-d276f430359c.png">

<img width="178" alt="Screen Shot 2019-09-05 at 12 05 52 PM" src="https://user-images.githubusercontent.com/4432331/64360058-a84c4600-cfd7-11e9-9dbd-8671cf2d0dfe.png">
Widgetpath_bad: `/Users/brujoand/src/brujoand/dotfiles/config/uebersicht/`
Widgetpath_good: `/Users/brujoand/uebersicht`

Starting Uebersicht with the "bad" path gives no widgets, starting it with the good path let's everything work fine. The "good" path is just a copy of the "bad" path. And they contain `morning.widget/index.coffee`. 

I'm no JS guru so I couldn't really see where this bug could be located but should be farely easy to replicate by creating a similar folder structure. 

I tried this though, and could not reproduce it. Until I named one of the folders "src". So from what I can gather, having a widget path that contains a folder named source will break the loading of widgets. 

Edit: huh, I guess it is this one https://github.com/felixhageloh/uebersicht/blob/master/server/src/resolveWidget.js#L6

Is this the intended behaviour?
I'm getting these errors when trying to require google's api library:

[Error] ReferenceError: Can't find variable: global
	(anonymous function) (InfoBoard-index-jsx:19274)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:21600)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:22681)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:30775)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:30978)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:31170)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:31540)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:33683)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:276324)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:276444)
	o (InfoBoard-index-jsx:1:278)
	(anonymous function) (InfoBoard-index-jsx:1:326)
	(anonymous function) (InfoBoard-index-jsx:311688)
	o (InfoBoard-index-jsx:1:278)
	r (InfoBoard-index-jsx:1:441)
	Global Code (InfoBoard-index-jsx:1:469)
[Error] Error: Cannot find module 'InfoBoard-index-jsx'
	s (client.js:1:229)
	s (client.js:1:123)
	(anonymous function) (client.js:1:314)
	onload (client.js:1:482866)

I currently have the library installed using npm in my widget's folder. To reproduce, simply try to install the library and add the following line to your widget:
`const googleapis = require('googleapis');`

Any help is much appreciated!
