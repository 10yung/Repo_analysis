- [x] I have searched the [issues](https://github.com/recharts/recharts/issues) of this repository and believe that this is not a duplicate.

### Reproduction link
[https://github.com/recharts/recharts.git](https://github.com/recharts/recharts.git)

### Steps to reproduce
1. git clone https://github.com/recharts/recharts.git
2. cd recharts
3. npm install
4. npm run[-script] demo
5. Then open  http://localhost:3000 in IE11 browser

### What is expected?
It should support in IE11 browser

### What is actually happening?
From demo, the console error is "SCRIPT1004: Expected ';' app.c0b28b51d8d4505aaa2a.js (60108,20)"
From my project, the console error is "SCRIPT1053: Const must be initialized"

Until Recharts version 1.8.5 its working fine, its broken from 2.0.0-beta.0 and 2.0.0-beta.1 versions

| Environment | Info |
|---|---|
| Recharts | v2.0.0-beta.1 |
| React | 16.9.0 |
| System | Windows 10 |
| Browser | IE11 |

---
Const and let are not supported in IE11 and below versions, I think polyfill need to be included.


<!-- generated by reccharts-issue-helper. DO NOT REMOVE -->
- [x] I have searched the [issues](https://github.com/recharts/recharts/issues) of this repository and believe that this is not a duplicate.

### Reproduction link
[![Edit on CodeSandbox](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/recharts-issue-template-xblv0)

### Steps to reproduce
Creating a stacked Bar Chart and enable label attribute.

### What is expected?
Showing the value of each stacked bar

### What is actually happening?
It shows the correct value of the first stacked bar, but it shows the sum of the first value and the value of the second stack in the second one. The same with the third one: it shows the sum of all three bars instead of only one.

| Environment | Info |
|---|---|
| Recharts | v1.8.5 |
| React | 16.8.2 |
| System | MacOS |
| Browser | Chrome |


<!-- generated by reccharts-issue-helper. DO NOT REMOVE -->

- [x] I have searched the [issues](https://github.com/recharts/recharts/issues) of this repository and believe that this is not a duplicate.

### Reproduction link
[![Edit on CodeSandbox](https://codesandbox.io/static/img/play-codesandbox.svg)](https://codesandbox.io/s/x-axis-missing-ticks-when-resizingrotating-screen-hs9f8)

### Steps to reproduce
1. Wrap any charts (e.g. `LineChart`) inside `ResponsiveContainer`
2. Use screen size emulation of the browsers. (e.g. set it to iPad Pro)
3. Rotate the screen

### What is expected?
The x-axis will re-render and recalculate the tick labels when the screen is rotated

### What is actually happening?
The tick labels are simply gone after rotating the screen

| Environment | Info |
|---|---|
| Recharts | v2.0.0-beta.1 |
| React | 16.12.0 |
| System | Windows 10 |
| Browser | Firefox, Chrome, codesandbox |


<!-- generated by reccharts-issue-helper. DO NOT REMOVE -->
- [ ] I have searched the [issues](https://github.com/recharts/recharts/issues) of this repository and believe that this is not a duplicate.

### What problem does this feature solve?
Is there a way to distribute the xAxis labels evenly and also have a fixed label at first and last position?

### What does the proposed API look like?
This query is to find out whether there is an already existing way to evenly space out the xAxis labels, as well as have omnipresent labels at first and last index? 
Going by the docs I don't see any option to achieve them together without manually writing custom label formatter block. But still worth checking if it can be done without having to put that manual effort, because if I try writing a custom block I will probably have to take care of a lot of things in responsive modes. Rather I would prefer the xAxis element API to give me another options like: space="even" along with the existing option, i.e. interval="preserveStartEnd"


<!-- generated by reccharts-issue-helper. DO NOT REMOVE -->
Putting any children (for example, a <LabelList> inside a <Line> component, or even just 
```
<Line ... >
<div></div>
</Line>
```
throws the error:

```
react-dom.development.js?61bb:530 Warning: Functions are not valid as a React child. This may happen if you return a Component instead of <Component /> from render. Or maybe you meant to call this function rather than return it.
```

I've been looking through the code, and found a few things out:

- If I dig around in the library code in node_modules/recharts/es6 and remove `adaptEventHandlers(this.props)` from line 158 inside the render method of shape/Curve, this error goes away
- If I look inside `renderByOrder` in utils/ReactUtils I can't see any special handling of children of elements to be rendered, and similarly `chart/generateCategoricalChart` seems to have a map of types it can render as children, but seems to have no specification for any children

The API specifically states this is how, for example, to do LabelLists (http://recharts.org/en-US/api/LabelList) and I see no other way of doing this. I'm not a typescript expert and this codebase is rather complex, so I'm not sure I've hit upon exactly the right cause, but I hope this gives enough info for you to reproduce? This is a small gist of the sort of thing I was working on: https://gist.github.com/James-Reed-cognito/97fd00ace04865cb101f8bc40f8c41d4

Just as an fyi - putting the children into the <Line> does work - I can put a <LabelList> inside it, and it renders, it's just that I get this very annoying react error on the console that clogs it up and clogs up tests too.

If you need any more info please do let me know.
- [x] I have searched the [issues](https://github.com/recharts/recharts/issues) of this repository and believe that this is not a duplicate.

### What problem does this feature solve?
It guides that users can override its stroke-dasharray property of Line component.

### What does the proposed API look like?
StrokeDasharray: string
https://developer.mozilla.org/en-US/docs/Web/SVG/Attribute/stroke-dasharray


<!-- generated by reccharts-issue-helper. DO NOT REMOVE -->
fix: Fix some TSC errors in Brush

Recently started to use Recharts and found that Brush lacks some customization options.

All changes are backward compatible and new props will only be used when explicitly specified.
This PR adds the following optional props to Brush:
- backgroundFill?: string;
- backgroundStroke?: string;
- slideFill?: string;
- slideStroke?: string;
- slideOpacity?: number;
- slideStrokeWidth?: number;
- travellerContent?: FC\<TravellerProps>;
- travellerFill?: string;
- travellerStroke?: string;

I additionally fixed some TSC errors in Brush, added script to check types and added an example in LineChart demo.

This also addresses #1600
- [X] I have searched the [issues](https://github.com/recharts/recharts/issues) of this repository and believe that this is not a duplicate.

### Reproduction link
[http://recharts.org/en-US/examples/SynchronizedLineChart](http://recharts.org/en-US/examples/SynchronizedLineChart)

### Steps to reproduce
In the existing synchronized chart example, copy the data array to data2, and use data2 for the area chart. Remove a few of the items in data2.

### What is expected?
The synchronized chart position should be based on the value of the X-axis, not the data item index.

### What is actually happening?
The synchronized chart position is based on the data item index.

| Environment | Info |
|---|---|
| Recharts | v1.6.2 |
| React | 16.0.0 |
| System | All |
| Browser | All |

---
I don't think this is a new bug. It's likely been there for some time, but I just recently discovered it, by synchronizing two charts that didn't have the same X-axis starting value (i.e. one chart had fewer items than the other).


<!-- generated by reccharts-issue-helper. DO NOT REMOVE -->
- [x] I have searched the [issues](https://github.com/recharts/recharts/issues) of this repository and believe that this is not a duplicate.

### What problem does this feature solve?
In pie charts making the tooltip follow the cursor like in the case with other charts such as radial charts will surely be useful. 

### What does the proposed API look like?
I thinks this can be a default implementation like such in the case of radial charts. If not it can be done by passing a prop to the `Tooltip` component


<!-- generated by reccharts-issue-helper. DO NOT REMOVE -->