We shouldn't use the outdated Selenium module from this repo and use the one from the Gallery instead. 
I'm proposing to change the Endpoint terminology to Dynamic. Endpoint makes little sense to new and old users alike. There are two ways of doing this: one breaking and one not. 

One would be to add an alias to `-Endpoint` and call it `-DynamicContent`. This is non-breaking and would start a transition over to the new terminology. 

```
New-UDCard -DynamicContent {
    "Some stuff"
}
```

The second, which is breaking but I like better, is to include a switch parameter on components that support dynamic content. Then you could switch better dynamic and static content by including the switch parameter. I just think it reads better. 

```
New-UDCard -Content {
    "Some stuff"
} -Dynamic
```

Would love to hear comments. 
We have a user that was running a script in UDInput that takes about 2 minutes. It would be really cool to update the progress bar of the input as it's going. 
#### Add Width & Height to Buttons
When building dashboards with buttons - they can look sloppy depending on the text content:

Hate This:
![image](https://user-images.githubusercontent.com/274883/72495902-a1d3a380-37ed-11ea-8ea3-7be1df484eb7.png)


Would like to easily be able to designate a px or % value like many of the other controls :)

```powershell
 New-UDButton -Text "Run" -OnClick { "Derp" } -Icon play -Width 200
```

```powershell
 New-UDButton -Text "Run" -OnClick { "Derp" } -Icon play -Width "20%"
```
#### Describe the Issue
I noticed the ‘ReplaceToast’ parameter on the Show-UDToast cmdlet. Either I misunderstand the function of this parameter or I am not using it right.

`    Show-UDToast -Id tstSyncDraft -message "Syncing.." -Duration 5000 -ReplaceToast
`      
` Do-someting
`        
`        Show-UDToast -Id tstSyncDraft -message "Sync complete " -Duration 5000 -ReplaceToast
`My expectation is that the second toast will replace the first, but it just goes on top of it. What Am I doing wrong?


#### To Reproduce
Steps to reproduce the behavior: (Example)
1. Use above snippet
2. Start Dashboard


#### Expected behavior
The Toasts should replace each other instead of stacking up

#### Version Information
- **Operating System**: win server 2016
- **PowerShell Version**: 5.1
- **Universal Dashboard Version**: 2.2.7
- **UD Hosting Method**: Powershell


#### Additional context
Add any other context about the problem here.
#### Is your Enhancement request related to a problem? Please describe
Today we dont get much logs for authentications providers.
So it's very hard to debug/troubleshoot problems in this area.


#### Describe the solution you'd like
a new cmdlet "Enable-UDAuthenticationLog"
should have the following parameter:
- Filepath - path to log file
- Console - Log to Console
- Level - Level of logging
  - Info - Log Logon and LogOff
  - Debug - Log Full authentication provider "traffic"

it could also be implemented in the already cmdlet "Enable-UDlogging" we would then need to prefix the parameters.

#### Describe how this would improve your Universal Dashboard Quality of Life
It would be much easyer to troubleshoot authentication issues.


#### Describe alternatives you've considered
The alternative today it to network tracing / fiddler.

#### Additional context
Add any other context or screenshots about the Enhancement request here.

Roles only work for forms-based auth and are confusing. We should settle on a single way to do authorization. Since more people use claims-based auth (authorization policies) we should just use those and remove roles all together. You can still achieve role-based functionality with authorization policies any ways. 

The first step is to add a warning in the next minor version that roles are deprecated. The second step is to completely remove them in the next major version. 

- [ ] Warning when using Roles in 2.9
- [ ] Remove roles for 3.0
#### Is your Enhancement request related to a problem? Please describe
kind of, I want to expose link / text dynamical.


#### Describe the solution you'd like
I want to be able to work with the NavBar. https://materializecss.com/navbar.html
I guess it need to work as an endpoint, so it's execute on each page load.

like 
```
New-UDDashboard -navbar {
   # This is the complete navbar section. minus the navigation part.
   if($Authenticated) {
      new-udnavbarlink -text "Welcome $($user.Displayname)" -link '/profile' -Attributes @{classname="active"}
   } else {
      new-udnavbarlink -text "Login" -link '/Login'
   }
}
```

#### Describe how this would improve your Universal Dashboard Quality of Life
This will make sure we can use that part of the dashboard. 


#### Describe alternatives you've considered
I guess it would be possible to code something that replace all of the ul#nav-mobile tag-id.


#### Additional context
Specified area https://github.com/ironmansoftware/universal-dashboard/blob/dc55a30e051c544ebbb8b9c70b1b987ca4250c08/src/UniversalDashboard.Materialize/Components/ud-navbar.jsx#L60

#### Is your Enhancement request related to a problem? Please describe
Today we are unable to protect the dashboard globally if a user is not part of a group.
it's only possible to do this on by limiting on every page and endpoints (#1441 ) 


#### Describe the solution you'd like
I want to have the same parameter as new-udpage have, AuthorizedRole and AuthorizationPolicy.
So for access to the dashboard we can do this:
New-UDDashboard -AuthorizedRole 'DashboardAccess'
or 
New-UDDashboard -AuthorizationPolicy 'DashboardAccess'
and only users with that Role/Policy can access.

this can then be over limited on pages or Endpoints by providing thoes with another AuthorizedRole or AuthorizationPolicy.

#### Describe how this would improve your Universal Dashboard Quality of Life
This will prevent alot of duplicated code in the source.


#### Describe alternatives you've considered
Alternative is to control it in the Claim soruce. (ADFS) (for my usecase).
but it would make it very static, as ADFS are controlled by another team.


#### Additional context
Add any other context or screenshots about the Enhancement request here.

#### Is your Enhancement request related to a problem? 
Today we are unable to protect endpoints that are created outside of a page.
like scheduled endpoints

#### Describe the solution you'd like
I want to have the same parameter as new-udpage have, AuthorizedRole and AuthorizationPolicy.


#### Describe how this would improve your Universal Dashboard Quality of Life
This will prevent leaking of confidential informations to users that are not allowed to see it.


#### Describe alternatives you've considered
I guess it would be possible to code this into every endpoint myself by using "Get-UDAuthorizationPolicy", but it's a tidius and bloating approach ;)

#### Additional context
Adam Agree it's a miss on his page :D
