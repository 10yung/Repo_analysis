import FileSaver,{saveAs} from 'file-saver'

myPromise.then(data=>{
  let blob = new Blob([(data)], { type: 'application/pdf' });
  FileSaver.saveAs(blob, 'fileName.pdf')
})
I need to send my PDF to print preview directly, is there any way ?
This also applies to other Chrome-based browsers, like Edge-dev.

Basically if FileSaver.js is used (a simple example like that shown in https://github.com/eligrey/FileSaver.js#saving-text will do it) inside an iframe from a different domain or port, it will cause Chrome to show the "download multiple files" warning.

![image](https://user-images.githubusercontent.com/29712657/71417193-f905ae80-265b-11ea-97d5-4f77e26279b9.png)


I couldn't create a jsfiddle as both HTML documents would be on the same domain and not trigger the issue, but it can be easily replicated downloading this zip file:
- [mutiple-downloads-issue-replication.zip](https://github.com/eligrey/FileSaver.js/files/3998570/mutiple-downloads-issue-replication.zip)


Inside there is basically these two HTML files, FileSaver.js, and a README with simple instructions to launch 2 Python localhost servers.

## index.html (http://localhost:8080/index.html)

```html
<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Test</title>
   </head>
  <body>
    <div id="masthead">
      This is part of the parent document. Below is the iframe.
    </div>
    <div>
      <iframe src="http://localhost:8090/index.html"></iframe>
    </div>
  </body>
</html>
```

## iframe/index.html  (http://localhost:8090/index.html)

```html
<!doctype html>
<html>
  <head>
    <meta charset="utf-8">
   </head>
  <body>
    <a href="#" id="downloadLink">Click me</a>
    <script src="FileSaver.min.js" type="application/javascript"></script>
    <script>
      document.getElementById("downloadLink").addEventListener("click", function foo(e) {
        var blob = new Blob(["Hello, world!"], {type: "text/plain;charset=utf-8"});
        saveAs(blob, "hello world.py");
      });
    </script>
  </body>
</html>
```
In a macOS native app that uses WebKit, calling `saveAs` on a `Blob` attempts to open the blob URL. This results in a message that says `There is no application set to open the URL blob:http...` (see https://github.com/iotaledger/spark-wallet/issues/89#issuecomment-568169805). 

As in Safari, the `FileReader` API should be used. However, changes need to be made to the browser detection because of a few differences between Safari and WebKit:

- `HTMLAnchorElement.download` is defined
- `typeof FileReader` returns `'function'` instead of `'object'`

With these changes, the expected behavior is achieved:

![image](https://user-images.githubusercontent.com/19519564/71314672-af7a5100-241a-11ea-8a79-0fe58a3980a5.png)



Fixes #509 

iOS 13 introduces "download" attribute but it behaves incorrectly in Chrome - the file is always open in same window. This pull request forces to use FileReader in iOS Chrome.

Also merged https://github.com/eligrey/FileSaver.js/pull/578
Hi guys,

As the title said I'm trying to use the function saveAs to download files from urls. For the sake of clarity I like to start coding by testable and working examples, so I've used the one on the README.md.

Angular version: 6
My function looks like this:

```
public downloadFile(file: Filesmodel): void {
    saveAs('https://httpbin.org/image', 'image.jpg');
  }
```

The logs:
```
FileDialogComponent.html:52 ERROR TypeError: Failed to execute 'createObjectURL' on 'URL': No function was found that matched the signature provided.
    at new FileSaver (FileSaver.js:127)
    at saveAs (FileSaver.js:143)
    at FilesService../src/app/services/files.service.ts.FilesService.downloadFile (files.service.ts:47)
    at FileDialogComponent../src/app/components/patients/upload-files/file-dialog/file-dialog.component.ts.FileDialogComponent.downloadFile (file-dialog.component.ts:42)
    at Object.eval [as handleEvent] (FileDialogComponent.html:53)
    at handleEvent (core.js:10259)
    at callWithDebugContext (core.js:11352)
    at Object.debugHandleEvent [as handleEvent] (core.js:11055)
    at dispatchEvent (core.js:7718)
    at core.js:8162
```
added the function that replaced all forbidden characters with '_'. This is the behaviour of the submit action on forms for Edge.

Fix for #580 and #584 
I set a hidden table to contain all data(without pagination) and another table do pagination. but the hidden one cannot do export. Although it really generate a excel file, but no data in this file.
SVG Files are not downloaded directly, instead it is opening it in new window.
Can we configure the file types for this plugin?
Hi,

I want to use FileSaver in a Polymer 3 project.

I think I tried all possible combinations of:
```
import saveAs from '../node_modules/file-saver/dist/FileSaver.js';
import fileSaver from '../node_modules/file-saver/dist/FileSaver.js';
import * as fileSaver from '../node_modules/file-saver/dist/FileSaver.js';
import '../node_modules/file-saver/dist/FileSaver.js';
...
```

with { } and without etc...none of them seem to work. 

Any suggestions? Thanks! :)