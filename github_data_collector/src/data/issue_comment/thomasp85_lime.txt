Dear lime contributors,
thanks for your awesome work on this repository.
Alas, I got an error that took me several days to figure out, and is reproducible:
```
explanation.lime <- lime::explain(
  x = local.obs,
  explainer = explainer.lime,
  n_features = 5 
)
Error in (function (..., row.names = NULL, check.rows = FALSE, check.names = TRUE,  : 
  arguments imply differing number of rows: 30000, 0
```
Fortunately I reached a point that I not only could narrow down the location of the source code but also the conditions that trigger it - but not completely, so I hope you figure out the last mile.

The condition that triggers it is a column in the `cases` argument of `permute_cases` that has zero variance and is integer, in my case it is column `reviews.numHelpful`

```
Classes ‘tbl_df’, ‘tbl’ and 'data.frame':	6 obs. of  13 variables:
 $ reviews.doRecommend: Factor w/ 2 levels "FALSE","TRUE": 2 2 2 2 2 2
 $ reviews.numHelpful : int  0 0 0 0 0 0
 $ reviews.rating     : int  4 4 4 5 5 5
 $ anger              : num  0 0 0 0 0 0
```
This column leads to an empty output  within the `permute_cases.data.frame function` in the lines identfying the "bin" ifelse statement:
```
} else if (is.numeric(cases[[i]]) && bin_continuous) {
      bin <- sample(seq_along(feature_distribution[[i]]), nrows, TRUE, as.numeric(feature_distribution[[i]]))
      diff(bin_cuts[[i]])[bin] * runif(nrows) + bin_cuts[[i]][bin]
    }
```
which can be seen here:
```
$ : Factor w/ 2 levels "1","2": 1 2 1 2 2 2 2 1 2 1 ...
$ : int(0)
$ : int [1:30000] 14 5 5 19 31 10 27 7 10 10 ...
$ : num [1:30000] 0.021654 0.081145 0.039533 0.000972 0.029057 ...
```
I disentangled the type conversion to dataframe and thus found that this throws the above error:

`perms <- as.data.frame(perms, stringsAsFactors = FALSE)`

The feature_distribution[[2]] gives:
```
     FALSE       TRUE 
0.04648887 0.95351113 
```
This is wrong! This result should come from the only factor, i.e. the first column and thus rendered by  `feature_distribution[[2]]`!
Consequently, the next line `diff(bin_cuts[[2]])[bin]` always returns NULL which leads to an empty return value `integer(0)`

So far, I could narrow the root cause to this point - but I am clueless what `diff(bin_cuts[[2]])[bin]` means and how this can be prevented.

## Update ##

I found a potential reason for this apparent index problem.
The feature distribution includes the target variable `.outcome` as first list item, and thus all indeces are wrong by offset 1:

```
$.outcome
        1         2 
0.3277057 0.6722943 

$reviews.doRecommend
     FALSE       TRUE 
0.04648887 0.95351113
 
$reviews.numHelpful
           1            2            3            4 
0.9981241334 0.0012233912 0.0001631188 0.0004893565 

$anger
          1           2           3           4 
0.911100237 0.065900008 0.013620422 0.009379333
``` 

However, the target variable is inevitable because the documentation for `?lime` specifies:

 `x The training data used for training the model that should be explained.`

So the training data (including the target), not the features (excluding the target) must be fed into `lime::lime()`. Now I wonder:

_Is this a problem in`lime::lime()` or `permutate_cases()`??_

Can you fix this?? Tricky...



Hi All, 

I am using lime and with GBM it works fine (though had to create **model_type.gbm** and **predict_model.gbm**, as there is no direct support for GBM and new observation is actually on same training data) but EXACTLY with the same data when I am trying apply to RandomForest and CRF (another version of RandomForest), the following error is showing up. 

Any explanation/solution will be highly appreciated. 

**Note:** 

1. The data and model details are copyrighted, so can not publish any detail but open for question and can provide some generic information(if required) without divulging any company specific information. 

2. For testing/new data I have used couple of rows of the same training data , for simplification purpose

3. The ACTUAL train and test data surely contains NA value, factor value, numeric values, but in this case, there is NO NA values within the data and converted/curated all data types to numeric in type and class.  

4. For GBM also, when I use test data, it fails (currently train and test data DOES NOT contains NA, all data is numeric 

The following is the error message (which is generic)

> explanation <- explain(local_obs, explainer, n_labels = 1, n_features = 5)
**Error in glm.fit(x = x_fit, y = y, weights = weights, family = gaussian()) : 
  NA/NaN/Inf in 'y'**
In addition: Warning messages:
1: In gower_work(x = x, y = y, pair_x = pair_x, pair_y = pair_y, n = NULL,  :
  skipping variable with zero or non-finite range
2: In gower_work(x = x, y = y, pair_x = pair_x, pair_y = pair_y, n = NULL,  :
  skipping variable with zero or non-finite range
3: In gower_work(x = x, y = y, pair_x = pair_x, pair_y = pair_y, n = NULL,  :
  skipping variable with zero or non-finite range
4: In gower_work(x = x, y = y, pair_x = pair_x, pair_y = pair_y, n = NULL,  :
  skipping variable with zero or non-finite range
5: In gower_work(x = x, y = y, pair_x = pair_x, pair_y = pair_y, n = NULL,  :
  skipping variable with zero or non-finite range
6: In gower_work(x = x, y = y, pair_x = pair_x, pair_y = pair_y, n = NULL,  :
  skipping variable with zero or non-finite range
7: In Ops.factor(y, mu) : ‘-’ not meaningful for factors
8: In Ops.factor(eta, offset) : ‘-’ not meaningful for factors
9: In Ops.factor(y, mu) : ‘-’ not meaningful for factors
Thank you for developing and maintaining this package.

Right now we are developing a multi-input keras model and we want to use lime to explain it. The model structure is like following:

![image](https://user-images.githubusercontent.com/24467139/70551236-2115ed80-1b45-11ea-9ef8-4f43279f20c8.png)

The main input is a sequence data and the aux input is a profile data. I'm wondering does lime currently support multi-input keras models? or is there any way that I can work around it? Thank you so much!
I have issue with model explamation lime() try demo in lime/demo/text_classification_explanation.R it game me error:

`results <- lime(sentences_to_explain, bst, get.features.matrix, keep_word_position = false)(cases = sentences_to_explain, n_labels = 1, n_features = 5)

Error in eval(lhs, parent, parent) : attempt to apply non-function
`
Can you please suggest? Thanks.



0


I've successfully installed Lime (and glmnet) in R but when I try loading it i receive an error:

```
> require(lime)
Loading required package: lime
Error: package or namespace load failed for ‘lime’:
 object ‘coef.cv.glmnet’ is not exported by 'namespace:glmnet'
```
Searched online and can't seem to find a solution for this. This is my sessioninfo()

```
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 17763)

Matrix products: default

locale:
[1] LC_COLLATE=English_Australia.1252  LC_CTYPE=English_Australia.1252    LC_MONETARY=English_Australia.1252 LC_NUMERIC=C                      
[5] LC_TIME=English_Australia.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] glmnet_3.0    Matrix_1.2-17

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3       rstudioapi_0.10  magrittr_1.5     tidyselect_0.2.5 munsell_0.5.0    colorspace_1.4-1 lattice_0.20-38  R6_2.4.0         rlang_0.4.1     
[10] foreach_1.4.7    dplyr_0.8.3      tools_3.6.1      grid_3.6.1       gtable_0.3.0     iterators_1.0.12 lazyeval_0.2.2   assertthat_0.2.1 tibble_2.1.3    
[19] crayon_1.3.4     purrr_0.3.3      ggplot2_3.2.1    codetools_0.2-16 shape_1.4.4      glue_1.3.1       compiler_3.6.1   pillar_1.4.2     scales_1.0.0    
[28] pkgconfig_2.0.3 
```
I've updated all my packages. glmnet loads successfully

```
> library(glmnet)
Loaded glmnet 3.0
```
`n_label`, should be `n_labels`.
Is there any easy solution provided by `lime` to “re-inject” the original values in the results (explainer table and plots),  when a normalization was applied to the dataset (like `step_center()`, `step_scale()` from the `recipes` package)?

Thank you.

install.packages("Epi")
Installing package into ‘/home/krishna/R/x86_64-pc-linux-gnu-library/3.5’
(as ‘lib’ is unspecified)
Warning in install.packages :
  dependency ‘cmprsk’ is not available
trying URL 'https://cloud.r-project.org/src/contrib/Epi_2.37.tar.gz'
Content type 'application/x-gzip' length 5537547 bytes (5.3 MB)
==================================================
downloaded 5.3 MB

ERROR: dependency ‘cmprsk’ is not available for package ‘Epi’
* removing ‘/home/krishna/R/x86_64-pc-linux-gnu-library/3.5/Epi’
Warning in install.packages :
  installation of package ‘Epi’ had non-zero exit status

The downloaded source packages are in
	‘/tmp/RtmpkHYhuW/downloaded_packages’
Pull request for issue #162. Adding distance to Gower's Distance function to include feature importance from the model in calculating distances.
Is it possible to add feature importance of the model that needs to be explained as weights to gower_dist? This would ensure that features that are not important in the model that lime is trying to explain, are not important in the lime explanation. Of course these weights could be set to NULL or ones to not influence the gower_dist function. 