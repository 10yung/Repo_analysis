
Hi, I'm using your library.
When I compile my project I got:

> [error] missing or invalid dependency detected while loading class file 'Binders.class'.
> [error] Could not access type JavascriptLitteral in package play.api.mvc,
> [error] because it (or its dependencies) are missing. Check your build definition for
> [error] missing or conflicting dependencies. (Re-run with `-Ylog-classpath` to see the problematic classpath.)
> [error] A full rebuild may help if 'Binders.class' was compiled against an incompatible version of play.api.mvc.

My built.sbt is:

name := """panorama-settings"""

version := "1.0-SNAPSHOT"

lazy val root = (project in file(".")).enablePlugins(PlayScala)

scalaVersion := "2.11.6"

lazy val dbD = Seq(
  "org.mongodb" %% "casbah" % "2.8.0",
  "com.typesafe.play.plugins" %% "play-plugins-redis" % "2.3.1",
  "com.novus" %% "salat" % "1.9.9",
  "se.radley" %% "play-plugins-salat" % "1.5.0" // ORM for mongo
)

libraryDependencies ++= Seq(
  jdbc,
  cache,
  ws,
  specs2 % Test
) ++ dbD

routesImport += "se.radley.plugin.salat.Binders._"

TwirlKeys.templateImports += "org.bson.types.ObjectId"

resolvers += "scalaz-bintray" at "http://dl.bintray.com/scalaz/releases"

resolvers += "Sonatype OSS Snapshots" at "https://oss.sonatype.org/content/repositories/snapshots"

// Play provides two styles of routers, one expects its actions to be injected, the
// other, legacy style, accesses its actions statically.
routesGenerator := InjectedRoutesGenerator

The plugin still uses a deprecated method for authenticating.

``` scala
@deprecated("Please use MongoClient to create a client, which will authenticate all connections to server.", "2.7")
def authenticate(username: String, passwd: String): Boolean = underlying.authenticate(username, passwd.toArray)
```


We're using activator-1.2.8, which includes play 2.3.2 and scala 2.11

When I added play-salat, I get the following exception upon the first call that uses Mongo:

```
Caused by: play.api.PlayException: SalatPlugin is not registered.[You need to register the plugin with "500:se.radley.plugin.salat.SalatPlugin" in conf/play.plugins]
    at se.radley.plugin.salat.package$$anonfun$mongoCollection$2.apply(package.scala:17) ~[play-plugins-salat_2.11-1.5.0.jar:1.5.0]
    at se.radley.plugin.salat.package$$anonfun$mongoCollection$2.apply(package.scala:17) ~[play-plugins-salat_2.11-1.5.0.jar:1.5.0]
    at scala.Option.getOrElse(Option.scala:120) [scala-library-2.11.2.jar:na]
    at se.radley.plugin.salat.package$.mongoCollection(package.scala:17) ~[play-plugins-salat_2.11-1.5.0.jar:1.5.0]
    at models.Application$.collection(Application.scala:27) ~[classes/:na]
```

However, I already have a conf/play.plugins with that line in it.

How do I get this to work?

With the recent release of salat version 0.0.8 snapshot, Salat has very good support for JSON <-> Model. But since salat uses lift json and not jerkson the Play built in JSON BodyParser will not work. It will be nice for this plugin to also support JSON -> Model conversion from the HTTP request using Salats implementation. 
