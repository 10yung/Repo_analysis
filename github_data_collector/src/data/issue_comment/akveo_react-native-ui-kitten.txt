### Please read and mark the following check list before creating a pull request:

 - [x] I read and followed the [CONTRIBUTING.md](https://github.com/akveo/react-native-ui-kitten/blob/master/CONTRIBUTING.md) guide.
 - [x] I read and followed the [New Feature Checklist](https://github.com/akveo/react-native-ui-kitten/blob/master/DEV_DOCS.md) guide.

 #### Short description of what this resolves:
### Please read and mark the following check list before creating a pull request:

 - [x] I read and followed the [CONTRIBUTING.md](https://github.com/akveo/react-native-ui-kitten/blob/master/CONTRIBUTING.md) guide.
 - [x] I read and followed the [New Feature Checklist](https://github.com/akveo/react-native-ui-kitten/blob/master/DEV_DOCS.md) guide.

 #### Short description of what this resolves:

Creates a new service for creating themed styles and updates `useStyleSheet` hook due to [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html)

Discussed by users in #782 
Closes #831 

**New syntax:**

```diff
import React from 'react';
- import { Layout, useStyleSheet } from '@ui-kitten/components';
+ import { Layout, StyleService, useStyleSheet } from '@ui-kitten/components';

export const UseStyleSheetSimpleUsageShowcase = () => {
-  const styles = StyleSheet.create();
+ const styles = useStyleSheet(themedStyles);

  return (
    <Layout style={styles.container} />
  );
};

- const StyleSheet = useStyleSheet({
+ const themedStyles = StyleService.create({
  container: {
    flex: 1,
    backgroundColor: 'color-success-default',
  },
});
```
## 🐛 Bug Report

Using the hook `useStyleSheet` with ESlint Hook rules doesn't work. The code works when disabling the rule with `// eslint-disable-next-line react-hooks/rules-of-hooks`.
https://reactjs.org/docs/hooks-rules.html#eslint-plugin

## To Reproduce

1. Follow instructions in https://akveo.github.io/react-native-ui-kitten/docs/components/themed-component/overview#usestylesheet.

```typescript
import React from 'react';
import {
  Layout,
  Text,
  useStyleSheet,
} from '@ui-kitten/components';

export const UseStyleSheetSimpleUsageShowcase = () => {
  const styles = StyleSheet.create();

  return (
    <Layout style={styles.container}>
      <Text category='h4' status='control'>
        I use success color as background!
      </Text>
    </Layout>
  );
};

const StyleSheet = useStyleSheet({
  container: {
    flex: 1,
    justifyContent: 'center',
    alignItems: 'center',
    backgroundColor: 'color-success-default',
  },
});
```

## Expected behavior

No warnings/errors should show up.

## Link to runnable example or repository (highly encouraged)

<!--
Please provide either a [codesandbox demo](https://codesandbox.io/s/ui-kitten-welcome-x8q8z) or a minimal repository on GitHub.
This will help us to resolve it faster.
-->

## UI Kitten and Eva version

| Package      | Version |
| ----------- | ----------- |
| @eva-design/eva      |    4.4.0-beta.2    |
| @ui-kitten/components   |      4.4.0-beta.2   |

## Environment information

<!--
Run npx envinfo --preset react-native
Paste the results here:
-->

```bash

  System:
    OS: macOS Mojave 10.14.6
    CPU: (8) x64 Intel(R) Core(TM) i7-6820HQ CPU @ 2.70GHz
  Binaries:
    Node: 12.13.1 - /usr/local/bin/node
    Yarn: 1.21.1 - ~/.yarn/bin/yarn
    npm: 6.13.6 - /usr/local/bin/npm
    Watchman: 4.9.0 - /usr/local/bin/watchman
  SDKs:
    iOS SDK:
      Platforms: iOS 13.0, DriverKit 19.0, macOS 10.15, tvOS 13.0, watchOS 6.0
  IDEs:
    Android Studio: 3.5 AI-191.8026.42.35.6010548
    Xcode: 11.0/11A420a - /usr/bin/xcodebuild
  npmPackages:
    react: 16.9.0 => 16.9.0
    react-native: https://github.com/expo/react-native/archive/sdk-36.0.0.tar.gz => 0.61.4
  npmGlobalPackages:
    react-native-cli: 2.0.1
```

<!-- Love UI Kitten? Please leave feedback: 👉  https://github.com/akveo/react-native-ui-kitten/issues/657 -->

## 🐛 Bug Report

Popover-based components like Autocomplete or Datepicker are not updated properly if placed in Modal. The content displayed in popover may be closed whenever user starts interacting with component.

[Demo](https://i.imgur.com/ljo8cFz.gif)

## To Reproduce

```js
import React from 'react';
import { Button, Modal, Datepicker } from '@ui-kitten/components';

export const DatepickerInModal = () => {

  const [visible, setVisible] = React.useState(false);
  const [date, setDate] = React.useState(null);

  const toggleModal = (): void => {
    setVisible(!visible);
  };

  return (
    <React.Fragment>
      <Button onPress={toggleModal}>
        TOGGLE MODAL
      </Button>
      <Modal visible={visible} onBackdropPress={toggleModal}>
        <Datepicker date={date} onSelect={setDate} />
      </Modal>
    </React.Fragment>
  );
};
```

Steps to reproduce the behavior:

## Expected behavior

Popover-based components should be updated properly not depending on where it was rendered.

## Link to runnable example or repository (highly encouraged)

<!--
Please provide either a [codesandbox demo](https://codesandbox.io/s/ui-kitten-welcome-x8q8z) or a minimal repository on GitHub.
This will help us to resolve it faster.
-->

## UI Kitten and Eva version

| Package      | Version |
| ----------- | ----------- |
| @eva-design/eva      |    any    |
| @ui-kitten/components   |   any      |

## Environment information

<!--
Run npx envinfo --preset react-native
Paste the results here:
-->

```bash
react: ~16.9.0 => 16.9.0
react-native: ~0.61.4 => 0.61.5
```

<!-- Love UI Kitten? Please leave feedback: 👉  https://github.com/akveo/react-native-ui-kitten/issues/657 -->

## 🚀 Feature Proposal

When the last item in the list (or anyone below the cutoff) is selected and then the select list displayed again, it'd be really useful for the selected item to be scrolled into view.

## Motivation

User request https://github.com/akveo/react-native-ui-kitten/issues/794#issuecomment-570787247

## Example

https://www.loom.com/share/3a5d1df5f4b84b2297d27848aa52038b

Added support for manually specifying the date format on thhe 
### Please read and mark the following check list before creating a pull request:

 - [X] I read and followed the [CONTRIBUTING.md](https://github.com/akveo/react-native-ui-kitten/blob/master/CONTRIBUTING.md) guide.
 - [X] I read and followed the [New Feature Checklist](https://github.com/akveo/react-native-ui-kitten/blob/master/DEV_DOCS.md) guide.

 #### Short description of what this resolves:
Previously date formats were hard-coded into the DD-MM-YYYY format, which is a huge PITA if you're an american who uses backwards ass date formats.

You can now specify what format you would like your date to display in by passing the dateFormat property into the component as follows

`        <Datepicker
          date={this.state.date}
          onSelect={(date) => {this.selectDate(date)}}
          dateFormat='MM-DD-YYYY'
        />
`

I've built the project and ran it myself to confirm it works.

Closes #815 
<!-- Love UI Kitten? Please leave feedback: 👉  https://github.com/akveo/react-native-ui-kitten/issues/657 -->

## 🚀 Feature Proposal

Currently only DD/MM/YYYY format is supported to be displayed on the datepicker component with no way to over-ride this or set a custom localization string. 

## Motivation

This is just super inconvenient for anyone living in America. Please add support for specifying any datestring 
![image](https://user-images.githubusercontent.com/22464716/72230231-b576d400-3579-11ea-90a6-f1ef72fcdd14.png)


## Example

Add a property to the datePicker components of localizationString

### Please read and mark the following check list before creating a pull request:

 - [x] I read and followed the [CONTRIBUTING.md](https://github.com/akveo/react-native-ui-kitten/blob/master/CONTRIBUTING.md) guide.
 - [x] I read and followed the [New Feature Checklist](https://github.com/akveo/react-native-ui-kitten/blob/master/DEV_DOCS.md) guide.

 #### Short description of what this resolves:
Whenever using a Button and a Text component with ReactJS v16..0 even though elements are rendered and they work as expected an error message is displayed with the text:

> Warning: Invalid value for prop `dispatch` on <div> tag. Either remove it from the element, or pass a string or number value to keep it in the DOM. For details, see https://fb.me/react-attribute-behavior
Is it possible to disable or change the animation of tabview?
Please add an option to add additional props to the **Text** component of **TopNavigation** used for title & description.

Our current use case is, that we need to truncate the text there and show ellipsis chars after. This could be achived by setting the `numberOfLines` prop on the `<Text numberOfLines={1}>Some long tex...</Text>` component.

Ref: https://stackoverflow.com/questions/30594080/how-to-have-ellipsis-effect-on-text