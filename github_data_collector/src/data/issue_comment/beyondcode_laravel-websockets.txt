It seems that when multiple apps are in play, this displays as different connections in the dashboard which is correct. The incorrect bit is that per app reporting is funneled through a singular dashboard connection, so each app triggers an update to the realtime stats, which leads to really wonky graphs at least but more importantly, incorrect graphs.

![Screen Shot 2020-01-15 at 10 55 50 AM](https://user-images.githubusercontent.com/1168344/72449312-7073bd00-3786-11ea-8712-ad3caa48a4de.png)

hi all
we config our web with SSL and it works when using #php artisan websockets:serve
but dont work when using supervisord

error are : failed: Error in connection establishment: net::ERR_CONNECTION_REFUSED

![2020-01-15 14_47_57-Window](https://user-images.githubusercontent.com/4758636/72415042-31556400-37a6-11ea-92ed-34321b0e763f.png)

someone please enlight me where to make change again.

thanks!
Referring from :-
[https://docs.beyondco.de/laravel-websockets/1.0/advanced-usage/custom-websocket-handlers.html](https://docs.beyondco.de/laravel-websockets/1.0/advanced-usage/custom-websocket-handlers.html)

After adding 
`WebSocketsRouter::webSocket('/my-websocket', \App\MyCustomWebSocketHandler::class);`

Getting error 
**Custom WebSocket Handlers - Class 'WebSocketsRouter' not found**

Also referred to #21 

But causing all other socket somehow (like redirect to MyCustomWebSocketHandler)
2pusher.min.js:8 WebSocket connection to 'ws://chat.local:6001/app/anyKey?protocol=7&client=js&version=4.3.1&flash=false' failed: Error in connection establishment: net::ERR_CONNECTION_REFUSED
I keep getting this error with my private channels,

```
Access to XMLHttpRequest at 'http://site.me/api/broadcasting/auth' from origin 'http://localhost:3001' has been blocked by CORS policy: No 'Access-Control-Allow-Origin' header is present on the requested resource.

Cross-Origin Read Blocking (CORB) blocked cross-origin response http://site.me/api/broadcasting/auth with MIME type application/json. See https://www.chromestatus.com/feature/5629709824032768 for more details.
```
public channel working fine, this happens on both local with homestead and production on VPS.

If can help I am using:
```
"barryvdh/laravel-cors": "^0.11.4",
"beyondcode/laravel-websockets": "^1.3",
"laravel-echo": "^1.6.1",
"pusher-js": "^5.0.3",
```

Hello.
When new user joins to chat, another users are getting "member_added" message (in js Echo.joining is running). When that user opens same chat link in other tab, other users again are getting "member_added" message.
After, when user closes one of the opened tabs, other users are getting "member_removed" message (in js Echo.leaving is running). So he's still in chat in another tab, but other users see, that he has leaved.
In right logic, server will only send "member_added" message only if that member has not opened chat in another tab or browser. And "member_removed" message will be sent only if all tabs are closed.
With pusher (pusher.com) this works fine.

P.S.
Don't know will this info help or not. 
If user has opened two tabs, after closes one, other users get "member_removed" message and see, that he's offline. But if other users are reloading page, through Echo.here(users) are getting also that user (right information).
I created custom websockethandler and its work fine when APP_DEBUG=true in .env
but when i set APP_DEBUG=false its stop working

`class CustomSocketHandler extends WebSocketHandler { }`

i think that is bad idea if i have to enable APP_DEBUG=true
I get a constant error  "message": "{\"error\":\"Unknown app id `testapp` provided.\"}",  when I set in .env   PUSHER_APP_ID=testapp. How it works? Does it check with Pusher for real aplication IDs created with Pusher?
We are using one websockets worker to send messages to 25k clients. It uses about 1GB RAM and 100% of one CPU core. It seems like it can't handle more active connections with messages sent. 

We use Nginx as reverse proxy for that. So is there any way to set up another `artisan websockets:serve` on different port and somehow set up our nginx to handle it all. Messages are sent from events with ShouldBroadcast. 

Maybe there are other ways to handle this highload? 
Hello! 
I'm stuck in situation how to pass websockets requests in situation when I've 2 servers in chain.  
Here is it

1. A domain name (domain.dev), with A record 
2. intranet server #1, which has external IP and nginx with SSL installed that proxifying requests from external IP to internal, depending on domain name
3. intranet server #2, which contains service with websocket on standart port, this server has no direct access to internet 

So sheme is
**Domain.dev (A record points to Server #1 ) => Server #1 (with nginx and SSL for domain.dev) => Server #2 (with websocket server on standart port 6001)**

I tried lots of variants and always get errors like
```
WebSocket connection to 'wss://******' failed: Error in connection establishment: net::ERR_CONNECTION_REFUSED
WebSocket connection to 'wss://********' failed: WebSocket is closed before the connection is established.
```

As I mentioned problem is that my service is configured for accepting http connections, but connections is sending via https (wss:). 
I read official manual https://docs.beyondco.de/laravel-websockets/1.0/basic-usage/ssl.html#usage-with-a-reverse-proxy-like-nginx but can't understand how handle same 'location' for http and websockets requests
So this config  part from example
``` 
location / {
    proxy_pass             http://127.0.0.1:6001;
```
is for websockets only? But how I can forward normal requests?

My Configs 
app.js
```
 window.Echo = new Echo({
     broadcaster: 'pusher',
     key: process.env.MIX_PUSHER_APP_KEY,
     cluster: process.env.MIX_PUSHER_APP_CLUSTER,
     wsHost: window.location.hostname,
     disableStats: true,
     wsPort: 6001,
     wssPort: 6001 //HTTPS only
 });
```

broadcasting.php
```
 'options' => [
                'cluster' => env('PUSHER_APP_CLUSTER'),
                'host' => '127.0.0.1',
                'port' => 6001,
                'encrypted' => false, //# for HTTP
                'scheme' => 'http', //# for HTTP
                //'scheme' => 'https', //#for HTTPS
                'curl_options' => [
                    CURLOPT_SSL_VERIFYHOST => 0,
                    CURLOPT_SSL_VERIFYPEER => 0,
                ]
            ],
```

websockets.php
```
[
            'id' => env('PUSHER_APP_ID'),
            'name' => env('APP_NAME'),
            'key' => env('PUSHER_APP_KEY'),
            'secret' => env('PUSHER_APP_SECRET'),
            'path' => env('PUSHER_APP_PATH'),
            'capacity' => null,
            'enable_client_messages' => true,
            'enable_statistics' => false,
        ],
```

nginx config is total trash now :) so please point me to right direction.
