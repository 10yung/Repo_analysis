custom alert use SwiftEntryKit, when display viewcontroller contain's alert, can't work...
Is there a way to change the corner radius of the UIButton on the Popup Message?
I want to show a SwiftEntry behind or below a custom view that I have on my application. Is it possible ?
### Goals ü•Ö
Be able to set a custom size for the Rating Symbol Container View. 

For example: if you want to show more than 5 stars in a row, now you can set the Rating Symbol Container View to 30 px (width and height).

### Implementation Details ‚úèÔ∏è
Just adding a size (CGSize) var in EKRatingItemContent and then updating the size in EKRatingSymbolsContainerView.

For some reason my custom view controller doesnt have rounded corners.
`attributes.roundCorners = .all(radius: 25)`
is doing nothing.

I saw in your demos in file `NibExampleView` you set `clipsToBounds=true` and additionally `layer.cornerRadius = 5` 

I tried doing that in the `viewdidload` method of my view controller. but still nothing.
fyi. my custom view controller is using a nib file. 

```
class G8ClipPreviewVC: UIViewController {

    override func viewDidLoad() {
        super.viewDidLoad()
        self.view.clipsToBounds = true
        self.view.layer.cornerRadius = 25
        // Do any additional setup after loading the view.
    }
    init() {
        super.init(nibName: type(of: self).className, bundle: nil)
    }
    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }


}
```

 - Device: XSMax
 - iOS Version: 13.2
 - Xcode Version : 11.2.1
 - SwiftEntryKit Release # 1.2.3


If there are a large number of button objects, they are arranged vertically and are small in size. Is it possible to divide the buttons into several vertical columns? Thanks.
**Describe the bug**
Touches not being forwarded into inferior Screen

**To Reproduce**
Steps to reproduce the behavior:
1. Created a modal that welcomes the user to a set of steps to take
2. Without dismissing, shows another modal with the forward attribute for screen interaction
2.1 If I dismiss, and show the modal on the callback, modal is not shown

**Expected behavior**
Taps in the screen should be detected.

**iPhone (please complete the following information):**
 - Device: iPhone 11 pro
 - iOS Version: iOS 13.1
 - Dependency Manager Version Cocoapods
 - SwiftEntryKit Release #1.2.3

**Additional context**
```
var attributes = EKAttributes.fullModal
        attributes.screenBackground = .clear
        attributes.screenInteraction = .dismiss
        attributes.position = .top
        
        SwiftEntryKit.display(entry: vc, using: attributes)

static var fullModal: EKAttributes {
        var attributes                          = EKAttributes()
        attributes.assignCommonAttributes()
        attributes.roundCorners                 = .top(radius: 20)
        attributes.positionConstraints.size     = .init(width: .constant(value: UIScreen.main.bounds.width), height: .intrinsic)
        attributes.positionConstraints.maxSize  = .init(width: .constant(value: UIScreen.main.bounds.width), height: .constant(value: UIScreen.main.bounds.height * 0.95))
        attributes.positionConstraints.safeArea = .overridden
        return attributes
    }

extension EKAttributes {
    mutating func assignCommonAttributes() {
        self.entryBackground              = .color(color: .white)
        self.displayDuration              = .infinity
        self.position                     = .bottom
        self.popBehavior                  = .animated(animation: .init(translate: .init(duration: 0.2), scale: .init(from: 1, to: 0.2, duration: 0.2)))
        self.scroll                       = .enabled(swipeable: true, pullbackAnimation: .jolt)
        self.entryInteraction             = .absorbTouches
        let offset           = EKAttributes.PositionConstraints.KeyboardRelation.Offset(bottom: 0, screenEdgeResistance: 20)
        let keyboardRelation = EKAttributes.PositionConstraints.KeyboardRelation.bind(offset: offset)
        self.positionConstraints.keyboardRelation = keyboardRelation
        self.screenInteraction = .dismiss
        self.screenBackground = .color(color: EKColor(UIColor(white: 0.5, alpha: 0.5)))
        
        self.lifecycleEvents.willAppear = {
            guard let appDelegate = UIApplication.shared.delegate as? AppDelegate
                else {
                    return ErrorManager.debug("Guard fail")
            }
            appDelegate.stopUnity()
        }
        
        self.lifecycleEvents.willDisappear = {
            guard let appDelegate = UIApplication.shared.delegate as? AppDelegate
                else {
                    return ErrorManager.debug("Guard fail")
            }
            appDelegate.startUnity()
        }
    }
}
```
So we can identify when a user has dismissed a popup rather than programatically.
Resolves #251

Could do with more work, but for now this resolves issue we're experiencing. 
**Is your feature request related to a problem? Please describe.**
A clear and concise description of what the problem is.

I am trying to have the thumbImageView of the EKSimpleMessageView be centered within its container, but it seems hardcoded on 16

**Describe the solution you'd like**
A clear and concise description of what you want to happen.

I would like to have control over the positioning of the image, otherwise I would like to subclass EKSimpleMessageView or other views and setup a custom layout.

**Describe alternatives you've considered**
A clear and concise description of any alternative solutions or features you've considered.
I have tried to create my own view (customView: UIView(...size(100, 20) ) and pass it to:
SwiftEntryKit.display(entry: customView, using: attributes)

But the ViewHierarchy says that the view height is 0, width is still fine.

**Additional context**
Add any other context or screenshots about the feature request here.