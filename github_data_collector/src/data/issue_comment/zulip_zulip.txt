<!-- What's this PR for?  (Just a link to an issue is fine.) -->
Fix for: zulip#13261

**What this PR does?**

- In invite users screen, added `#` with the stream names to match how we display them elsewhere.
- Sort the stream names in invite users screen.
- Listed notifications stream along with other streams with a message "recieves notifications for new streams" instead of adding the invited user unconditionally.
- Fixes #13645 

**Testing Plan:**
Unit tests.

**Screenshot:**

![Screenshot from 2020-01-18 00-38-28](https://user-images.githubusercontent.com/45683359/72668362-a4313a00-3a47-11ea-9fae-baf369dff2c1.jpg)

Previous discussion can be found here [at this topic](https://chat.zulip.org/#narrow/stream/6-frontend/topic/Temporary.20mutes.20design).

<!-- What's this PR for?  (Just a link to an issue is fine.) -->


**Testing Plan:** <!-- How have you tested? -->
tested with `./manage.py shell` and `./tools/test-all`

- [x] Extend the `MutedTopic` model to record when the topic got muted.
- [ ] Record when a Stream got muted.

<!-- Also be sure to make clear, coherent commits:
  https://zulip.readthedocs.io/en/latest/contributing/version-control.html
  -->

Related issue https://github.com/zulip/zulip/issues/13533
Tim, I stacked this on top of the three commits you had me review yesterday.

The goal here is to eventually kill off some of the crazy redraw logic (similar to what I'm doing with the PM list code), but these simplifications should be helpful regardless.
Moves the login process for desktop app
to browser since there was
no way to verify the authencity of the
auth process for a custom server and to
prevent phishing attacks.

Desktop app PR [here](https://github.com/zulip/zulip-desktop/pull/863/)

**Testing Plan:** <!-- How have you tested? -->
Still working on it. This is currently only to collaborate with others.

See #13317 for the context of this issue.

After working with the integration for a while, I think it is missing two things:

### Links in the webhook messages
The most important one is that we need to add links to the actual taiga user story / task / etc. in the message that is posted on zulip.

For example:
    Kevin Grandemange closed user story December 2019: SDR In linux magazine
    should become
    Kevin Grandemange closed user story [December 2019: SDR In linux magazine](example.org)

### Topics
Another thing missing is the use of topics to separate unrelated user stories / issues / tasks.
Here I think there are different way to separate the topics.
We could have a topic per project in a Scrum Project, we could also have a topic per sprint in the project.

Hello Everybody,
i'm trying to configure my AWX instance to send a message when a playbook start. I follow this guide:
https://zulipchat.com/integrations/doc/ansibletower

But, every time that i launch a new Job, i receive this error in my mailbox:

`Traceback (most recent call last):
  File "/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.6/site-packages/django/core/handlers/base.py", line 185, in _get_response
    response = wrapped_callback(request, *callback_args, **callback_kwargs)
  File "/srv/zulip-venv-cache/546c5f60162d0b5be09d52adebaa995f9c609da3/zulip-py3-venv/lib/python3.6/site-packages/django/views/decorators/csrf.py", line 58, in wrapped_view
    return view_func(*args, **kwargs)
  File "./zerver/lib/request.py", line 367, in _wrapped_view_func
    return view_func(request, *args, **kwargs)
  File "./zerver/decorator.py", line 379, in _wrapped_func_arguments
    raise err
  File "./zerver/decorator.py", line 365, in _wrapped_func_arguments
    return view_func(request, user_profile, *args, **kwargs)
  File "./zerver/lib/request.py", line 367, in _wrapped_view_func
    return view_func(request, *args, **kwargs)
  File "./zerver/webhooks/ansibletower/view.py", line 27, in api_ansibletower_webhook
    body = get_body(payload)
  File "./zerver/webhooks/ansibletower/view.py", line 34, in get_body
    if (payload['friendly_name'] == 'Job'):
KeyError: 'friendly_name'
`

I have the latest release (2.1.2).
Can you help me?
Thanks
Following the series ending with c113d74daff9e232010ffcea6d7179643e8319f1, it's clear to me that we could do better in structuring our discussion of how to use the development environment.

In particular, I think the section of our Vagrant docs starting here: https://zulip.readthedocs.io/en/latest/development/setup-vagrant.html#step-4-developing should probably be merged into https://zulip.readthedocs.io/en/latest/development/using.html, to provide a more coherent organization for our docs on how to use the development environment.

Some care may be required to avoid mangling the pieces specifically about Vagrant (which probably shouldn't move), but the parts about running `provision` and maintaining the environment definitely belong on the page about edit/refresh workflows.

@drrosa FYI.
Fixes [issue](https://github.com/zulip/zulip/issues/13486).

This PR is in continuation with [PR](https://github.com/zulip/zulip/pull/13608). First commit is reviewed there.