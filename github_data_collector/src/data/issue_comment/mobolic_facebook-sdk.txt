Adds missing `r` prefix to regular expression for version number.
LoggingVerbosity sets verbosity level.
GraphAPI allows logger to be supplied
Logging added to facilitate debugging errors from Facebook Graph API
See #456.

When making large fetches with `get_all_connections` recently, we will often see it fail with a GraphAPIError with error code 2. The error is not common, maybe one in hundreds or even thousands of requests, but it fails out of the entire operation, which is frustrating.

Facebook indicate that a simple wait and retry is suitable for these: https://developers.facebook.com/docs/graph-api/using-graph-api/error-handling/

Most that we have seen seem to almost immediately succeed if retried, so this adds a simple retry mechanism with basic defaults of 5 attempts with a 10 second delay between them. 

Facebook does not seem to object to a 10 second delay before retrying and we have not seen it fail more than once in a row, so 5 seems fair as a measure highly likely to indicate something more serious is going on.
Add x-app-usage response headers to GraphAPI request result
Facebook API returns x-app-usage header which contains json with percentage usage of the api for various metrics. It would be handy to have access to that data when using this facebook-sdk.
My simple pr just checks for the header in fb api response and adds it to the result returned by GraphAPI instance if available.

FB docs:
https://developers.facebook.com/docs/graph-api/advanced/rate-limiting
It was also reported here:
https://github.com/mobolic/facebook-sdk/issues/314
The field expansion feature of GraphAPI can be efficiently used through the 'fields' parameter of the get_connections method. This means that the user can obtain info from both the referenced edge in 'connection_name', and the node that is connected to 'object_id' through said edge. Doing so is very useful, as it can reduce the amount of calls to the API, and help the user access richer data through a simpler query. This information is not intuitively acquired from either the Facebook SDK for Python docs, or the GraphAPI reference guide.
Fix #300.
It was related to #360.

A number of commit messages have been modified.

## Usage

```python
 graph.put_object(
     parent_object='post_id',
     connection_name='comments',
     message='Second!',
     file=open('image.jpg', 'rb'))
```
Currently type and code are exposed in the GraphAPIError exception. It would be helpful to expose `fbtrace_id` as well for debugging purposes when communicating possible bugs to Facebook. https://developers.facebook.com/docs/graph-api/using-graph-api

This should be fairly trivial and I can get a pull request going soon.
`json` will behave the same as `data` except in the case of lists, which will now correctly JSON encode the post_args.


Note that since the post_args are created in this library, a consumer cannot simply encode the data as json to be passed to the graph.put_objects call, so this change is necessary to allow access to any facebook API that uses arrays, such as forms which require an array of question objects https://developers.facebook.com/docs/graph-api/reference/page/leadgen_forms/