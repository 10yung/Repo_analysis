Bumps [superagent](https://github.com/visionmedia/superagent) from 0.20.0 to 5.1.0.
<details>
<summary>Release notes</summary>

*Sourced from [superagent's releases](https://github.com/visionmedia/superagent/releases).*

> ## v5.1.0
> - Disable setting default user-agent ([#1495](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1495))  e652b8c
> 
> https://github.com/visionmedia/superagent/compare/v5.0.9...v5.1.0
> 
> ## v5.0.9
> - feat: added fast-safe-stringify instead of JSON.stringify (closes [#1464](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1464))  2e5d6fd
> 
> https://github.com/visionmedia/superagent/compare/v5.0.8...v5.0.9
> 
> ## v5.0.8
> - fix: removed @babel/transform-runtime (closes [#1494](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1494))  28e7101
> 
> https://github.com/visionmedia/superagent/compare/v5.0.7...v5.0.8
> 
> ## v5.0.7
> - fix: switch browserify to use babelify as global transform, bump deps  a44cca8
> - docs: fixed arrow function for example  0a822ab
> 
> https://github.com/visionmedia/superagent/compare/v5.0.6...v5.0.7
> 
> ## v5.0.6
> - feat: bump deps, fixed lint issues  a3f75ed
> - fix: omit queries that are set to undefined ([#1486](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1486))  7942c2d
> 
> https://github.com/visionmedia/superagent/compare/v5.0.5...v5.0.6
> 
> ## v5.0.5
> - fix: remove redundant defs, bump deps  fcf6cff
> 
> https://github.com/visionmedia/superagent/compare/v5.0.4...v5.0.5
> 
> ## v5.0.4
> - Invalid redirect in pipe ([#1471](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1471))  7d0ea4b
> - docs: fixed missing polyfill  251a1cb
> - fix: [amilajack/eslint-plugin-compat#224](https://github-redirect.dependabot.com/amilajack/eslint-plugin-compat/issues/224)  2d81605
> 
> https://github.com/visionmedia/superagent/compare/v5.0.3...v5.0.4
> 
> ## v5.0.3
> - fix: add browser compiled version to lib folder ([#1470](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1470))  14acecd
> - Revert "Avoiding to set the "Content-Length" header for GET requests ([#1460](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1460))" ([#1477](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1477))  fe8d902
> - Avoiding to set the "Content-Length" header for GET requests ([#1460](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1460))  804c35c
> 
> https://github.com/visionmedia/superagent/compare/v5.0.2...v5.0.3
> 
> ## v5.0.2
> - fix: fixed browser require for webpack (closes [#1474](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1474))  ccc7f56
> 
> https://github.com/visionmedia/superagent/compare/v5.0.1...v5.0.2
></tr></table> ... (truncated)
</details>
<details>
<summary>Changelog</summary>

*Sourced from [superagent's changelog](https://github.com/visionmedia/superagent/blob/master/HISTORY.md).*

> # This HISTORY log is deprecated
> 
> Please see [GitHub releases page](https://github.com/visionmedia/superagent/releases) for the current changelog.
> 
> # 4.1.0 (2018-12-26)
> 
>  * `.connect()` IP/DNS override option (Kornel)
>  * `.trustLocalhost()` option for allowing broken HTTPS on `localhost`
>  * `.abort()` used with promises rejects the promise.
> 
> # 4.0.0 (2018-11-17)
> 
> ## Breaking changes
> 
> * Node.js v4 has reached it's end of life, so we no longer support it. It's v6+ or later. We recommend Node.js 10.
> * We now use ES6 in the browser code, too.
>   * If you're using Browserify or Webpack to package code for Internet Explorer, you will also have to use Babel.
>   * The pre-built node_modules/superagent.js is still ES5-compatible.
> * `.end(…)` returns `undefined` instead of the request. If you need the request object after calling `.end()` (and you probably don't), save it in a variable and call `request.end(…)`. Consider not using `.end()` at all, and migrating to promises by calling `.then()` instead.
> * In Node, responses with unknown MIME type are buffered by default. To get old behavior, if you use custom _unbuffered_ parsers, add `.buffer(false)` to requests or set `superagent.buffer[yourMimeType] = false`.
> * Invalid uses of `.pipe()` throw.
> 
> 
> ## Minor changes
> 
> * Throw if `req.abort().end()` is called
> * Throw if using unsupported mix of send and field
> * Reject `.end()` promise on all error events (Kornel Lesiński)
> * Set `https.servername` from the `Host` header (Kornel Lesiński)
> * Leave backticks unencoded in query strings where possible (Ethan Resnick)
> * Update node-mime to 2.x (Alexey Kucherenko)
> * Allow default buffer settings based on response-type (shrey)
> * `response.buffered` is more accurate.
> 
> # 3.8.3 (2018-04-29)
> 
> * Add flags for 201 & 422 responses (Nikhil Fadnis)
> * Emit progress event while uploading Node `Buffer` via send method (Sergey Akhalkov)
> * Fixed setting correct cookies for redirects (Damien Clark)
> * Replace .catch with ['catch'] for IE9 Support (Miguel Stevens)
> 
> # 3.8.2 (2017-12-09)
> 
> * Fixed handling of exceptions thrown from callbacks
> * Stricter matching of `+json` MIME types.
> 
> # 3.8.1 (2017-11-08)
> 
> * Clear authorization header on cross-domain redirect
> 
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`977f0ad`](https://github.com/visionmedia/superagent/commit/977f0ad88b2ccb02e2f448ac97538cde4f4ac571) v5.1.0
- [`e652b8c`](https://github.com/visionmedia/superagent/commit/e652b8cb5d2f9d6bb2ab3518762d5de64a30db13) Disable setting default user-agent ([#1495](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1495))
- [`483f816`](https://github.com/visionmedia/superagent/commit/483f8166f42a78c47c8116f3cfca7a7bd308d66c) v5.0.9
- [`2e5d6fd`](https://github.com/visionmedia/superagent/commit/2e5d6fdbe026c1934c0a0fbe2ec933a13b60af1a) feat: added fast-safe-stringify instead of JSON.stringify (closes [#1464](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1464))
- [`6dc3eaa`](https://github.com/visionmedia/superagent/commit/6dc3eaac01dd07ac8be078c34a227ee03ced6aa6) v5.0.8
- [`28e7101`](https://github.com/visionmedia/superagent/commit/28e7101fbf3d9ea4a32e59fed4909b77396b1fd2) fix: removed @babel/transform-runtime (closes [#1494](https://github-redirect.dependabot.com/visionmedia/superagent/issues/1494))
- [`974ac02`](https://github.com/visionmedia/superagent/commit/974ac02b6a79492e7a27e989aaa98e76af41364b) v5.0.7
- [`a44cca8`](https://github.com/visionmedia/superagent/commit/a44cca8c0f215732a4e1bf0216dc074ce194c099) fix: switch browserify to use babelify as global transform, bump deps
- [`0a822ab`](https://github.com/visionmedia/superagent/commit/0a822ab1ac0af47b1c398c07b467303e28e83251) docs: fixed arrow function for example
- [`4dd96c0`](https://github.com/visionmedia/superagent/commit/4dd96c00108fdf3146da452df12f399e51ddd87a) v5.0.6
- Additional commits viewable in [compare view](https://github.com/visionmedia/superagent/compare/0.20.0...v5.1.0)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [niftylettuce](https://www.npmjs.com/~niftylettuce), a new releaser for superagent since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=superagent&package-manager=npm_and_yarn&previous-version=0.20.0&new-version=5.1.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/alsotang/node-lessons/network/alerts).

</details>
详细的 node.js 学习 图文教程，希望可以帮助到要学习node 的同学。从 node 内置核心模块到 node   
操作 mongoDB。

地址： https://github.com/pubdreamcc/Node.js
兼容高版本环境下的测试用例

高版本环境下：
Node.js: 10.15.2
mocha: 6.1.4
should: 13.2.3
supertest: 4.0.2
express: 4.17.0

运行测试用例会占用3000端口，可能导致：
1.app已运行的情况下，会报端口已被占用的错误
2.app没有运行，测试用例运行后没有退出，继续监听端口

解决方法：
根据module.parent判断是否为运行测试用例，是的话则不监听端口

 Cannot read property 'isVisit' of undefined，


我在做《Node.js 包教不包会》系列里面 lesson4的挑战题，取“积分”的时候，遇到一个难点，不知道怎样用superagent里面取到的变量取修改外面的全局变量，代码（部分）如下：

    var topicUrl = topicPair[0];
    var topicHtml = topicPair[1];
    var $ = cheerio.load(topicHtml);
	//取评论人的积分
	 var authorUrl = url.resolve(cnodeUrl,$('.dark.reply_author').eq(0).attr('href'));
	 let score1 =0;
	 superagent.get(authorUrl)
	 .end(function (err, sres) {
	 	// 常规的错误处理
	 	if (err) {
	 	return next(err);
	 	}
	  const $2 = cheerio.load(sres.text);
	  score1 = $2('.unstyled .big').eq(0).text().trim();
	  console.log("In ,score1:"+score1);		  
	})
	return ({
      title: $('.topic_full_title').text().trim(),
      href: topicUrl,
      comment1: $('.reply_content').eq(0).text().trim(),
	  author1: $('.dark.reply_author').eq(0).text().trim(),
	  score1: score1
    });
	superagent里面的score1已经取到积分了，但没办法传出来。。。谢谢
学习一下-)
``` js
const superagent = require('superagent');
const cheerio = require('cheerio');
const url = require('url');
const express = require('express');
const app = express();

app.get('/', (req, res, next) => {
  const sourceUrl = 'https://cnodejs.org';
  const hrefArray = [];
  const resultArray = [];
  
  superagent.get(sourceUrl).then(received => {
    const $ = cheerio.load(received.text);
    $('#topic_list .user_avatar').each((index, current) => {
      hrefArray.push(url.resolve(sourceUrl, $(current).attr('href')));
    });
    
    let stat = 0;
    
    function promiseExecute(url) {
      stat += 1;
      console.log(`当前正在执行的任务数量:  ${stat}`);
      return superagent.get(url)
        .then(current => {
          let _$ = cheerio.load(current.text);
          let userMsg = { user: $(_$('#content .dark')[0]).text(), score: _$('#content .big').text().trim() };
          resultArray.push(userMsg);
          stat -= 1;
        })
    }
    
    function parallelExecute(cb, paramArray, num, handle) {
      let tempArray = paramArray.concat();
      let endFlag = 1;
      function recursionHandle() {
        let paramItem = tempArray.pop();
        if(!paramItem) {
          endFlag += 1;
          if(endFlag === num) { cb(); }
          return;
        }
        return new Promise(() => {
          handle(paramItem)
            .then(() => { recursionHandle(); })
            .catch(err => { throw err; });
        })
      }
      for(let i = num - 1; i >= 0; i -= 1) { recursionHandle(); }
    }
    
    function resSend() {
      res.send(JSON.stringify(resultArray));
      console.log(resultArray);
    }
    
    parallelExecute(resSend, hrefArray, 5, promiseExecute);
  })
  .catch(err => {
    console.log(err)
  });
});

app.listen(3000, () => {
  console.log('3000 port listening...')
});
```

依赖安装
``` sh
yarn add cheerio express superagent
```
我就是想感慨一下
hash(key+message)无法防御长度扩展攻击，应当使用HMAC或hash(message+key)修补。