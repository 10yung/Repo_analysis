### New Issue Checklist

* [x] I have read and understood the [CONTRIBUTING guide](https://github.com/rs/SDWebImage/blob/master/.github/CONTRIBUTING.md)
* [x] I have read the [Documentation](http://cocoadocs.org/docsets/SDWebImage/)
* [x] I have searched for a similar issue in the [project](https://github.com/rs/SDWebImage/issues) and found none

### Feature Request

It's been used previously in [SDWebImageSwiftUI](https://github.com/SDWebImage/SDWebImageSwiftUI) for watchOS, performance is better than current CADisplayLink. Need iOS 13+/macOS 10.15+/tvOS 13+/watchOS 6+.

Supports GIF/APNG/HEICS only.

See more: https://developer.apple.com/documentation/imageio/3333272-cganimateimagedatawithblock?language=objc
### New Issue Checklist

* [x] I have read and understood the [CONTRIBUTING guide](https://github.com/rs/SDWebImage/blob/master/.github/CONTRIBUTING.md)
* [x] I have read the [Documentation](http://cocoadocs.org/docsets/SDWebImage/)
* [x] I have searched for a similar issue in the [project](https://github.com/rs/SDWebImage/issues) and found none

### Feature Request

For modern iOS App, performance metrics is important for both optimizations and big company data analysis.

SDWebImage should provide a better support for customers to need the metrcis.

This Feature Request focus on the network metrics, there may be also metrcis like Decoding, Cache ,etc.

See more : https://developer.apple.com/documentation/foundation/nsurlsessiontaskmetrics
### New Issue Checklist

- [x] I have read and understood the [CONTRIBUTING guide](https://github.com/rs/SDWebImage/blob/master/.github/CONTRIBUTING.md)

* [x] I have read the [Documentation](http://cocoadocs.org/docsets/SDWebImage/)
* [x] I have searched for a similar issue in the [project](https://github.com/rs/SDWebImage/issues) and found none

### Issue Info

 Info                    | Value                               |
-------------------------|-------------------------------------|
 Platform Name           |  ios 
 Platform Version        |  10.3.3
 SDWebImage Version      | master branch
 Integration Method      | cocoapods
 Xcode Version           | Xcode 11 
 Repro rate              | sometimes

### Issue Description and Steps

When i simulated the UIImageView show the image some times, i could find two request for the same image url.

    NSString *urlStr = @"https://xxxxxx";
    self.imageURL = [NSURL URLWithString:urlStr];
    [self.imageView sd_setImageWithURL:self.imageURL];
    
    [self.imageView sd_setImageWithURL:self.imageURL];
    [self.imageView sd_setImageWithURL:self.imageURL];
    
    dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(0.1 * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
        [self.imageView sd_setImageWithURL:self.imageURL];
    });

This is the same requests that Charles fetched.
 
![WX20200116-201745](https://user-images.githubusercontent.com/3256224/72524666-57116480-389d-11ea-8dc4-fbd428c676bd.png)

#bug in the file SDImageCache,
the method - (nullable NSOperation *)queryCacheOperationForKey:(nullable NSString *)key options:(SDImageCacheOptions)options done:(nullable SDCacheQueryCompletedBlock)doneBlock 

BOOL shouldQueryMemoryOnly = (image && !(options & SDImageCacheQueryDataWhenInMemory));

this line code, has return value for shouldQueryMemoryOnly is not we expect

I think it will be right for BOOL shouldQueryMemoryOnly = (image && (options & SDImageCacheQueryDataWhenInMemory)); 

need delete the '!' in !(options & SDImageCacheQueryDataWhenInMemory).

I want you to make sure for this, and give me a reply,  best wishes for you!


场景：
在SD默认的缓存失效后，客户端处于弱网的情况下拉取图片失败；图片显示默认图

问题：
请问SD是否有一种缓存策略，永远不清理近一段时间（比如3天）的图片资源，只清理这段时间以外的资源；这样可以确保我经常使用的图片资源永远不会被清理。
### New Issue Checklist

* [V] I have read and understood the [CONTRIBUTING guide](https://github.com/rs/SDWebImage/blob/master/.github/CONTRIBUTING.md)
* [V] I have read the [Documentation](http://cocoadocs.org/docsets/SDWebImage/)
* [V] I have searched for a similar issue in the [project](https://github.com/rs/SDWebImage/issues) and found #2881, but that issue does not have enough information. 

### Issue Info

 Info                    | Value                               |
-------------------------|-------------------------------------|
 Platform Name           | ios
 Platform Version        | 10.x
 SDWebImage Version      | 5.4.0
 Integration Method      | cocoapods
 Xcode Version           | Xcode 10
 Repro rate              |  sometimes 1%
 Repro with our demo prj | no
 Demo project link       | no

### Issue Description and Steps
   Crashed at -[SDMemoryCache commonInit] + 178 on iOS 10.x.
   
<img width="634" alt="fabric" src="https://user-images.githubusercontent.com/5682749/71001023-5c04bc00-2117-11ea-97e3-cca5e3a9b8f8.png">


 Info                    | Value                               |
-------------------------|-------------------------------------|
 Platform Name           |  ios
 Platform Version        |  12, 11, 10
 SDWebImage Version      | 5.2.3 - 5.4.0
 Integration Method      | cocoapods
 Xcode Version           | Xcode 11 / Xcode 10

### Issue Description and Steps

the SDWebImageWebPCoder is 0.2.3 - 0.2.5,  in iOS 12.x or lower version, can not show webp image, but the strange thing: when I debug app to those devices using xcode(11/10), it can show webp correctly. and close debug, start-up app directly, it cannot show webp again.
btw, when I use 5.1.0 and webpcoder 0.2.3, everything is fine.

 Platform Name          iOS
 Platform Version        iOS 12+
 SDWebImage Version      5.0.0
 Integration Method     Carthage/cocoapods
 Xcode Version           11
 Repro rate              100% 
 Repro with our demo prj  unsure
 Demo project link      n/a

### Issue Description and Steps

I filed a [stack overflow question](https://stackoverflow.com/questions/59183859/sdwebimage-appears-to-be-using-http-get-method-with-refreshcached-instead-of-a) like the guide suggested but I didn't get a response.

Basically I'm wondering if I can configure `SDWebImage` to use a head method with `.refreshCached` enabled to prevent unnecessary download bandwidth usage on our backend.

Copy/pasted the text from the stack overflow question here:

I'm using `SDWebImage` for caching images in a Swift/iOS app, and we are using it in some places with `.refreshCached` option enabled.

We're using Amazon s3 for images which has support for the "Last-Modified" header on the request.

My understanding is that with `.refreshCached` enabled `SDWebImage` should check the http header with a HEAD method to check to see the last modified date in the header, THEN if the `Last-Modified` date has changed, it can perform a GET method on the URL to get the image data, saving bandwidth.

However when I inspect the calls that the app is making (using `CocoaDebug`), I only see the GET methods in the log, meaning even when the image is cached we're still fetching all the image data.

On subsequent views where the images are visible, I see that images load instantly, implying the cache is working, but I still see the full GET methods and no HEAD method in the log.

Does SDWebImage support this HEAD followed by GET flow or am I doing something wrong or otherwise misunderstanding?



### New Issue Checklist

* [x] I have read and understood the [CONTRIBUTING guide](https://github.com/rs/SDWebImage/blob/master/.github/CONTRIBUTING.md)
* [x] I have read the [Documentation](http://cocoadocs.org/docsets/SDWebImage/)
* [x] I have searched for a similar issue in the [project](https://github.com/rs/SDWebImage/issues) and found none

### Issue Info

 Info                    | Value                               |
-------------------------|-------------------------------------|
 Platform Name           | ios
 Platform Version        | 13.1.3
 SDWebImage Version      | 5.3.1
 Integration Method      | cocoapods
 Xcode Version           | Xcode 11.2.1
 Repro rate              | all the time (100%)

### Issue Description and Steps

The image.size property of all images have size.height=0 and size.width=0. However, cgImage.width has size greater than 0. Also, all images must have some width and height as they are being displayed correctly within the UIImageView.

```swift
profileImageView.sd_setImage(with: URL(string: user.profileImageUrl)) { [weak self] (image, err, cachType, url) in 
            guard let image = image else { return }
            
            let imageSize = image.size
            let height = imageSize.height
            let width = imageSize.width
            
            print("cgImage width: \(image.cgImage?.width)")
            print("image width: \(width)")
            print("image height: \(height)")
}
```


### Issue Info

 Info                    | Value                               |
-------------------------|-------------------------------------|
 Platform Name           |  ios (I assume it affects all platforms)
 Platform Version        | 13.0 (as above)
 SDWebImage Version      | 5.2.3
 Integration Method      | swift package manage
 Xcode Version           | Xcode 11
 Repro rate              | all the time (100%)
 Repro with our demo prj | did not test
 Demo project link       | see snippets below

### Issue Description and Steps

I created an `SDImageTransformer` that affects the `.scale` of a `UIImage`

```swift
class ScaleFactorImageTransformer: NSObject, SDImageTransformer {

    let scale: CGFloat

    init(scale: CGFloat) {
        self.scale = scale
        super.init()
    }

    var transformerKey: String {
        "ScaleFactorImageTransformer(\(scale))"
    }

    func transformedImage(with image: UIImage, forKey key: String) -> UIImage? {
        if let ciImage = image.ciImage {
            return UIImage(ciImage: ciImage, scale: scale, orientation: image.imageOrientation)
        }
        if let cgImage = image.cgImage {
            return UIImage(cgImage: cgImage, scale: scale, orientation: image.imageOrientation)
        }
        return nil
    }
}
```

I am using an iPhone 11 Pro. The first time `SDWebImageManager.loadImage` is called, the returned image has the applied scaled correctly. However on subsequent runs (presumably when the image is loaded from the cache) the scale of the image is 1.0. The code I am using is (in it's simplest form) :

```swift
let url = URL(string: "https://www.w3.org/MarkUp/Test/xhtml-print/20050519/tests/jpeg444.jpg")!

let transformer = ScaleFactorImageTransformer(scale: UIScreen.main.scale)

let context: [SDWebImageContextOption: Any]? = [SDWebImageContextOption.imageTransformer: transformer]
SDWebImageManager.shared.loadImage(with: url, options: [], context: context, progress: nil) {  (image, _, error, cacheType, _, _) in
    if let image = image {
        print("Scale:", image.scale)
    }
}
```

On first run, the console says `Scale: 3.0`. On subsequent runs, it says `Scale: 1.0`. The size of the image incorrectly increases in image views on subsequent runs.

This seems to be related to the closed issue [#1356](https://github.com/SDWebImage/SDWebImage/issues/1356)