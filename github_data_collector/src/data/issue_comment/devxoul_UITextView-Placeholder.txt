
Hi! Thank you for making this useful codes open source. 
I'm glad I found a small room for improvement in the code and be able to suggest a change.

Currently, VoiceOver users cannot access placeholder information.
Even tough placeholder textview shouldn't be "selectable" for voiceOver users as discussed in #57, its *information* still should be delivered to them.  

With this implementation, `UITextView+Placeholder` acts just like  `UITextField` in terms of VoiceOver experience.



Add backgroundColor into `observingKeys` so the KVO will observe it and set `self.placeholderTextView.backgroundColor = self.backgroundColor `  in `- (void)updatePlaceholderTextView` so the background color of placeholderTextView can be the same as the super TextView.
![screen shot 2018-03-14 at 10 08 56 am](https://user-images.githubusercontent.com/16003400/37418570-c06a4dd4-276f-11e8-81d6-cf29a623335a.png)

I use auto layout and when a view is aligned to the bottom of the text view, it cuts off the placeholder label
My project is in Objective-C.

I got an error "'UITextView+Placeholder/UITextView+Placeholder.h' file not found" after importing this library by 'pod install'. 

Then I found that the right way to import "<UITextView_Placeholder/UITextView+Placeholder.h>". 
Expect to add another item in the Usage section;   like the following:
```
Import Dynamic Framework:

e.g. If you're using CocoaPods with use_frameworks! flag.

@import UITextView_Placeholder;
Import Static Library:

#import <UITextView+Placeholder/UITextView+Placeholder.h>

Import by pod:
#import <UITextView_Placeholder/UITextView+Placeholder.h>
```
**Bug**
There is a bug where a font attributed is ignored (when using attributedPlaceholder). The UITextView's font is used instead.

**Fix**
Checks to see if there is font set on the attributed placeholder. If so we use that. If not we fall back and use the UITextView's font instead.
when project has more category for UITextView, now set data method will be  crash.
The initial value of 'textView.text' is not empty. Then edit 'textView.text' to empty, the code for setting the font cannot be executed when updating the placeholders. This results in inconsistencies between 'textView.font' and 'self.placeholderLabel.font'.