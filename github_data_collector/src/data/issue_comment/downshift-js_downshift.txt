<!--
Thanks for your interest in the project. I appreciate bugs filed and PRs submitted!
Please make sure that you are familiar with and follow the Code of Conduct for
this project (found in the CODE_OF_CONDUCT.md file).

Please fill out this template with all the relevant information so we can
understand what's going on and fix the issue.

I'll probably ask you to submit the fix (after giving some direction). If you've
never done that before, that's great! Check this free short video tutorial to
learn how: http://kcd.im/pull-request
-->

- `downshift` version: 4.0.7
- `node` version: 12.3.1
- `npm` (or `yarn`) version: yarn 1.21.1

**Reproduction repository**:

https://codesandbox.io/s/downshift-examples-xgk4r?fontsize=14
(navigate to the typeahead example)

**Problem description**:

`defaultHighlightIndex={0}` is useful for allowing users to quickly select the first suggestion in a typeahead just by pressing enter. However, we found that it has an unfortunate side-effect of preventing form submission on enter when there are no items in the suggestions list (i.e. when the user is trying to enter something that's not part of the suggestions list).

Here's a slightly modified version of the typeahead example that changes the outer div to a form with a submit handler to help demonstrate the issue: 

https://codesandbox.io/s/downshift-examples-xgk4r?fontsize=14

1. First try removing `defaultHighlightedIndex={0}` and typing in 123 (or anything else that causes the suggestions list to become empty) and then pressing enter. You'll see the "not-submitted" text at the top of the page turn into "submitted", which is triggered by the custom onSubmit handler on the form.
2. Then try adding `defaultHighlightedIndex={0}` back in and doing the same. You'll see that not-submitted remains unchanged, meaning the onSubmit was never called.

**Suggested solution**:

I opened a PR a while ago that has a solution to this, but there are some outstanding issues with the tests, and I ended up finding a conflicting test case and am unsure how to move forward: https://github.com/downshift-js/downshift/pull/745

Would love to hear some thoughts on how this should be resolved. Thanks!
<!--
Thanks for your interest in the project. Bugs filed and PRs submitted are appreciated!

Please make sure that you are familiar with and follow the Code of Conduct for
this project (found in the CODE_OF_CONDUCT.md file).

Also, please make sure you're familiar with and follow the instructions in the
contributing guidelines (found in the CONTRIBUTING.md file).

If you're new to contributing to open source projects, you might find this free
video course helpful: http://kcd.im/pull-request

Please fill out the information below to expedite the review and (hopefully)
merge of your pull request!
-->

<!-- What changes are being made? (What feature/bug is being fixed here?) -->

**What**:

<!-- Why are these changes necessary? -->

**Why**:
It most probably will not get merged, but will use this for some refactoring of `useSelect` and `useCombobox`.

<!-- How were these changes implemented? -->

**How**:

<!-- Have you done all of these things?  -->

**Checklist**:

<!-- add "N/A" to the end of each line that's irrelevant to your changes -->

<!-- to check an item, place an "x" in the box like so: "- [x] Documentation" -->

- [ ] Documentation
- [ ] Tests
- [ ] TypeScript Types
- [ ] Flow Types
- [ ] Ready to be merged
      <!-- In your opinion, is this ready to be merged as soon as it's reviewed? -->

<!-- feel free to add additional comments -->

Follow-up from https://github.com/WordPress/gutenberg/pull/19657#discussion_r367450597. To investigate and fix.

<!--
Thanks for your interest in the project. Bugs filed and PRs submitted are appreciated!

Please make sure that you are familiar with and follow the Code of Conduct for
this project (found in the CODE_OF_CONDUCT.md file).

Also, please make sure you're familiar with and follow the instructions in the
contributing guidelines (found in the CONTRIBUTING.md file).

If you're new to contributing to open source projects, you might find this free
video course helpful: http://kcd.im/pull-request

Please fill out the information below to expedite the review and (hopefully)
merge of your pull request!
-->

<!-- What changes are being made? (What feature/bug is being fixed here?) -->

**What**:
fix tiny spelling error

<!--
Thanks for your interest in the project. I appreciate bugs filed and PRs submitted!
Please make sure that you are familiar with and follow the Code of Conduct for
this project (found in the CODE_OF_CONDUCT.md file).

Please fill out this template with all the relevant information so we can
understand what's going on and fix the issue.

I'll probably ask you to submit the fix (after giving some direction). If you've
never done that before, that's great! Check this free short video tutorial to
learn how: http://kcd.im/pull-request
-->

- `downshift` version: 4.0.5
- `node` version: n/a
- `npm` (or `yarn`) version: n/a

**What happened**:

When it's possible to scroll the document, opening the menu scrolls to the bottom of the page, when using `useSelect` with a portal.


**Reproduction repository**:

https://codesandbox.io/s/useselect-usage-0ifnq
<!--
Thanks for your interest in the project. Bugs filed and PRs submitted are appreciated!

Please make sure that you are familiar with and follow the Code of Conduct for
this project (found in the CODE_OF_CONDUCT.md file).

Also, please make sure you're familiar with and follow the instructions in the
contributing guidelines (found in the CONTRIBUTING.md file).

If you're new to contributing to open source projects, you might find this free
video course helpful: http://kcd.im/pull-request

Please fill out the information below to expedite the review and (hopefully)
merge of your pull request!
-->

<!-- What changes are being made? (What feature/bug is being fixed here?) -->

**What**:

<!-- Why are these changes necessary? -->

**Why**:

<!-- How were these changes implemented? -->

**How**:

<!-- Have you done all of these things?  -->

**Checklist**:

<!-- add "N/A" to the end of each line that's irrelevant to your changes -->

<!-- to check an item, place an "x" in the box like so: "- [x] Documentation" -->

- [ ] Documentation
- [ ] Tests
- [ ] TypeScript Types
- [ ] Flow Types
- [ ] Ready to be merged
      <!-- In your opinion, is this ready to be merged as soon as it's reviewed? -->

<!-- feel free to add additional comments -->
Fixes https://github.com/downshift-js/downshift/issues/879
For instance:
1. Merge getA11yStatusMessage as we have two different implementations.
2. Merge id generation for slots, as we have 2 implementations (downshift + reachUi).

Other code improvements as well.
They provide confidence but I think they can be written a bit better. Maybe https://github.com/downshift-js/downshift/issues/873 will also be fixed as a side effect.
Have prop that will make `useCombobox` behave as an autocomplete with inline selection. This means that when the user types a string in the input, once a value is highlighted in the list, the rest of the item string is added in the input. That rest part should be visually highlighted and selected.

https://www.w3.org/TR/wai-aria-practices/#combobox Pattern number 4.

https://www.w3.org/TR/wai-aria-practices/examples/combobox/aria1.1pattern/listbox-combo.html Example number 3.

- `downshift` version: 4.0.2
- `node` version:
- `npm` (or `yarn`) version:

**Relevant code or config**
See the links below.

**What you did**:
I'm working on a dropdown select component that has an input field inside the dropdown for filtering.
My current solution is something like a custom button that opens a portal with `useCombobox` that has the menu always open. Kind hacky and not fully accessible. Also, suffers from #884.

**What happened**:
I spent some time to figure out how I can use `useSelect` or `useCombobox` to achieve implement the feature, but wasn't able to get it working. 

Other options I tried:
- Normally use `useSelect` and place custom filtering input inside. But it seems not possible to make it work, because the menu gets closed the moment you click on the input. https://codesandbox.io/s/useselect-usage-n3vtj. Latest attempts here: https://codesandbox.io/s/useselect-usage-whcdn
- Use `useCombobox` but move the input inside the menu. In that case, filtering doesn't work and a11y is broken https://codesandbox.io/s/usecombobox-usage-y1dfd

**Reproduction repository**:
See the links above.

**Problem description**: Not really a problem I guess, rather a feature request. Because existing hooks do not provide that flexibility.

**Suggested solution**: Anyone else tried to do something similar? Is it a common patter at all? I'd appreciate any suggestions. 