Xcode 10 force to generate errors when using @keypath, including RACObserve, this might be a problem in RACObjC.
I can`t pod install 0.3.3, even if repo update.
When run ` pod search ReactiveViewModel`.
```
-> ReactiveViewModel (0.3)
   Model-View-ViewModel, using ReactiveCocoa.
   pod 'ReactiveViewModel', '~> 0.3'
   - Homepage: https://github.com/ReactiveCocoa/ReactiveViewModel
   - Source:   https://github.com/ReactiveCocoa/ReactiveViewModel.git
   - Versions: 0.3, 0.2, 0.1.1 [master repo]

```
But ReactiveCoccoa exist the newest release when run `pod search ReactiveCocoa`.

```
-> ReactiveCocoa (7.2.0)
   Streams of values over time
   pod 'ReactiveCocoa', '~> 7.2.0'
   - Homepage: https://github.com/ReactiveCocoa/ReactiveCocoa
   - Source:   https://github.com/ReactiveCocoa/ReactiveCocoa.git
   - Versions: 7.2.0, 7.1.0, 7.1.0-rc.2, 7.1.0-rc.1, 7.0.1, 7.0.0, 7.0.0-rc.1, 7.0.0-alpha.2, 7.0.0-alpha.1, 6.1.0-alpha.2, 6.1.0-alpha.1, 6.0.2, 6.0.1, 6.0.0,
   6.0.0-rc.3, 6.0.0-rc.2, 6.0.0-rc.1, 6.0.0-alpha.1, 5.0.4, 5.0.3, 5.0.2, 5.0.1, 5.0.0, 5.0.0-rc.1, 5.0.0-alpha.6, 5.0.0-alpha.5, 5.0.0-alpha.3, 5.0.0-alpha.2, 4.2.2,
   4.2.1, 4.1.0, 4.0.4-alpha-4, 4.0.4-alpha-1, 4.0.3-alpha-3, 4.0.3-alpha-1, 4.0.2-alpha-3, 4.0.2-alpha-1, 4.0.1, 4.0.1-alpha-3, 4.0.1-alpha-1, 4.0.0, 4.0.0-alpha-3,
   4.0.0-alpha-2, 4.0.0-alpha-1, 4.0.0-RC.2, 4.0.0-RC.1, 3.0.0, 3.0.0-swift2, 3.0-beta.9, 3.0-beta.6, 3.0-alpha.3, 3.0.0-alpha.1, 3.0-RC.1, 2.5, 2.4.7, 2.4.6, 2.4.5,
   2.4.4, 2.4.2, 2.3.1, 2.3, 2.2.4, 2.2.3, 2.2.2, 2.2, 2.1.8, 2.1.7, 2.1.6, 2.1.5, 2.1.4, 2.1.3, 2.1.2, 2.1.1, 2.1, 2.0, 1.9.7, 1.9.6, 1.9.5, 1.9.4, 1.8.1, 1.8.0, 1.7.2,
   1.7.1, 1.7.0, 1.6.0, 1.5.0, 1.4.0, 1.3.1, 1.0.0, 0.17.1, 0.16.1, 0.13.1, 0.12.0, 0.10.0, 0.9.0, 0.8.0, 0.6.0, 0.5.0, 0.0.1 [master repo]

```
Will not support pod anymore?
see the title.

Why `ReactiveViewModel` depend on so old `ReactiveCocoa` version???

Hi! I'm trying to work around [#2383](https://github.com/ReactiveCocoa/ReactiveCocoa/issues/2383). We're using a few `RACSignal`s in our `UICollectionViewCell`s, so we are hitting the performance issues pretty quickly.

I saw some talk on #12 about using `-forwardSignalWhileActive:` to dispose upon deactivation, and resubscribe upon activation. 

Will disposing on the signal in this manner trigger an 'un-observe' on KVO?

It seems that ReactiveViewModel assume that a ViewModel only has 1 Model.

What if I want to bind a ViewModel to multiple Models?

Hello, 

I have a retain cycle in my code caused by the following setup in `viewDidLoad`

```
   [[[[RACSignal
    combineLatest:@[RACObserve(self.viewModel,index),
/*A*/                   self.viewModel.didBecomeActiveSignal]]
/*B                          RACObserve(self.viewModel,active)]]*/
    deliverOnMainThread]
    distinctUntilChanged]
    subscribeNext:^(RACTuple* x) {
```

The option A is causing a retain cycle so the view model is never released. B works fine. Do you see something wrong with the code or it might be a bug ?

Thank you, 
Adrian

A category method on signal would increase readability a lot. If you wanna keep the API footprint small I get that, but anyone who uses this a lot will end up implementing it. 

``` objectivec
-(RACSignal *)rvm_forwardWhileViewModelActive:(RVMViewModel *)viewModel
```

Can you add document about how to build it and how to use it?
