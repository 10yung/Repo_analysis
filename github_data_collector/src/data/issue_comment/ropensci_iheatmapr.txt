Dear Alicia,
it's really a great tool! I am trying to create a big interactive heatmap with several row and column annotations however I don't need to display the legends of all of them. Is there a way to do it?
I've seen that e.g. in `add_*_barplot` there is the option `showlegend`. Is it possible to implement something similar for `add_*_annotation` or is there a workaround?

From email:

"I am using iheatmapr in one of my project. I am stuck with giving grid lines to the chart below. I have tried various methods but no luck."
First of all, thanks a lot for this awesome package.

Currently, plotting fails with an ambiguous message if row/col annotation is continuous and contains missing values:

```r
library(iheatmapr)
library(datasets)
library(reshape2)

Indometh_matrix <- acast(Indometh, Subject ~ time, value.var = "conc")
Indometh_matrix <- Indometh_matrix[as.character(1:6),]
rownames(Indometh_matrix) <- paste("Patient",rownames(Indometh_matrix))
Indometh_patient_cor <- cor(t(Indometh_matrix))

patient_max_conc <- apply(Indometh_matrix,1,max)
patient_min_conc <- apply(Indometh_matrix,1,min)
patient_groups <- c("A","A","B","A","B","A") # Arbitrary groups

patient_max_conc[[1]] <- NA

iheatmap(Indometh_patient_cor, 
  row_annotation = data.frame("Max" = patient_max_conc))

# Error in if (diverging) { : missing value where TRUE/FALSE needed
```

The issue stems from these lines not using `na.rm=TRUE`
 https://github.com/ropensci/iheatmapr/blob/b9fd1bc2bdbbfdd1084619dfd85fb7480b2ff4f7/R/annotations.R#L70-L73

https://github.com/ropensci/iheatmapr/blob/b9fd1bc2bdbbfdd1084619dfd85fb7480b2ff4f7/R/annotations.R#L161-L164


Alternatively, you can modify `pick_conitnuous_colors` to accommodate  `diverging=NA`.

Cheers.

Hi. Tooltip for the row annotations it seems to work OK, but the tooltip for column annotations seem to be not working. 

Ivo
Hello and thank you for the great work.

As I am planning to integrate a heatmap in a webpage with other htmlwidgets, I am wondering if it would be possible to take advatage of 'crosstalk' for triggering selection of elements (rows or columns) when clicking on cells, or the other way round (showing/hiding/highlighting rows/columns when selected from another widget).

To my knowledge none of the heatmap APIs allow that yet (correct me if I'm wrong), and that would be a killer feature for many applications.

Is that something that could be done easily (I have no idea what it really implies internally) ?

Thank you for your help.
Hello,
first of all thank you for the great work, super powerful library and very nicely built.

On top of my heatmap, I would like to add a stacked barplot summarizing stats (average value) for groups of columns (each bar spanning all columns of the group), and rows groups at the same time (stacked bars).

Why do I need that ?  
I have a lot of columns (~2k) and while using `add_col_summary(groups = TRUE)` covers my need, it is cluttered by too many points on 'x' axis and overlapping traces. I think a stacked barplot for each group of columns would do better in this case.

I played with add_subplot() and add_col_barplot() but if I did not manage to do what I want.
 
With `add_subplot`:
 - I can set `type='bar'` but I did not manage to control the layout to generate stacked bars
 - I cannot use `width` to set bar width as argument for plot_ly using `...`, it needs to be done on the trace (that's a plotly thing)

With `add_col_barplot`:
  - 'x' coordinates seem tied to 'one point per column' so I cannot plot one large bar per group of columns.
  - is stacked bars possible using this function ?

Using `add_col_barplot`, if stacking is possible one solution would be to use a bar for each column (all bars in a group of columns would be similar) but I guess it would be suboptimal  (lot of columns).

I managed to generate the barplot as a separate plotly panel but I cannot find a proper way to integrate it on top of the heatmap. Is there any way to integrate an independent plotly panel somewhere around the heatmap ?

I thought I could use the plotly `subplot` function (with `shareX=TRUE`) to group the heatmap and my plot but it seems that your library does not depend on plotly R functions so I am not sure if this is possible at all.


Could you point me to the best approach for this situation ?

Thank you very much.
I'm attempting to overlay text over the heatmap itself to give additional information (e.g something like this: 
![image](https://user-images.githubusercontent.com/51340354/62134650-e5256e80-b2ae-11e9-84c5-2b4207b44856.png)

I believe there's no built-in functionality to do so, so I was trying to use the layout option to add the text via plotly. As a minimum reproducible example, here is a very basic plot:

`data <- matrix(c(1, 2, 3, 4), nrow = 2) `
`
plot <- iheatmap(data = data, layout = list(annotations = list(text = "hi", x = 0.5, y = 0.5, xref = "x", yref = "y"))) 
`
The heatmap I get looks like this: 
![image](https://user-images.githubusercontent.com/51340354/62135202-c7a4d480-b2af-11e9-8f40-8d2b6cbe1880.png)

This looks exactly the same as the same plot with no annotations:
`plot <- iheatmap(data = data)`
![image](https://user-images.githubusercontent.com/51340354/62135291-f8850980-b2af-11e9-878b-3baff3690cd7.png)

I have very little experience with plotly, so this may be on me, but any help would be appreciated! If there is a simpler way to overlay text, please also let me know.
Dear Alicia,

I have got a feature suggestion. At the moment I see that NA values are displayed as the color white in the heat map. Unless I missed it (which could be the case) there is currently no means of changing the color of NA cells in the heat map. Would it be possible to add a feature to change / customise the value of the NA cells? (Been using iheatmapr for many of my projects now. Thank you!) 

Kind Regards,

Igy



First, thanks for the great package.
I'm using the package for heatmap with barplot as annotation. I noticed that "showlegend" option seems not functioning for showing color legend when barplot with coloring. Here is an example

    library(RColorBrewer)
    da = matrix(rnorm(200),nrow=20)
    rownames(da) = paste0("A",1:20)
    colnames(da) = paste0("B",1:10)

    db = data.frame(id=colnames(da), value=runif(10,1,10),group=sample(letters[1:3],10,replace = T), 
                stringsAsFactors = F)
    g = db$group
    glev = unique(g)
    colors = brewer.pal(length(glev), "Paired")
    gcolor = factor(g, labels=colors)

    main_heatmap(da, name = "Score", x_categorical = TRUE,y_categorical=TRUE) %>%
      add_col_labels(font = list(size = 12)) %>%
      add_row_labels(size = 0.1,font = list(size = 12), side="right")%>%
      add_col_barplot(y=db$value, color=gcolor, tracename='Group',showlegend=TRUE)

One option would be to use add_col_annotation(data.frame("Groups" = g), colors=list("Groups"=colors)) to get the legend. I try to avoid this option. Thanks in advance
Hello, can we color the dendrogram just like those in these pictures?


![sortingdendrogram](https://user-images.githubusercontent.com/24263046/50671666-4ed9e480-100e-11e9-858e-28953dfb84fb.png)

<img width="1005" alt="skaermbillede-2017-09-22-kl -11 10 06" src="https://user-images.githubusercontent.com/24263046/50671699-77fa7500-100e-11e9-851d-b6332f6c8b1c.png">


