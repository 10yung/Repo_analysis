In the build project's SceneViewBuildButton, the SceneView.onSceneGUIDelegate callback registration is obsolete (since I believe 2019.1).

To eliminate the warning it should be wrapped around:

```csharp
        [InitializeOnLoadMethod]
        private static void Init()
        {
#if UNITY_2019_1_OR_NEWER
            SceneView.duringSceneGui += DrawButtons;
#else
            SceneView.onSceneGUIDelegate += DrawButtons;
#endif
        }
```
Similar to #20,#31 I think also the Utf8Json comparison should not be missing
https://github.com/neuecc/Utf8Json
#29 sparked my interest. I would be interest how fast this serializer is compare to the fastest Serializer for Unity I am aware of:
https://github.com/neuecc/MessagePack-CSharp
Check this
https://github.com/mgholam/fastJSON
it faster 2x than JSON.NET
Are there any plans to provide the Odin framework as a Unity Package compatible with the Package Manager?

It'd be convenient to include it in other packages, but right now that requires copying the entire asset over. That becomes problematic if other packages also uses Odin, or if the user is using the Odin Inspector.
I'm not building my game in Unity; is there a way to install and use Odin Serializer in a standard .NET Framework or .NET Core application, preferably without building the source (Ex. NuGet package)? This serializer looks very impressive!