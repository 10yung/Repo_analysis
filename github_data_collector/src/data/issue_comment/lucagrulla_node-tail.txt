Bumps [coffeescript](https://github.com/jashkenas/coffeescript) from 2.4.1 to 2.5.0.
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/jashkenas/coffeescript/commit/61d408f093734d7f54b9b948dd239d932c54ec66"><code>61d408f</code></a> 2.5.0 (<a href="https://github-redirect.dependabot.com/jashkenas/coffeescript/issues/5284">#5284</a>)</li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/ba41b4417d46ec4e37a48e80e3f6d9fdf8b47972"><code>ba41b44</code></a> Allow linebreak/indent in destructured for variable (<a href="https://github-redirect.dependabot.com/jashkenas/coffeescript/issues/5286">#5286</a>)</li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/33bbef963ca2809e51b1183a062de9b03e11026f"><code>33bbef9</code></a> Merge pull request <a href="https://github-redirect.dependabot.com/jashkenas/coffeescript/issues/5285">#5285</a> from helixbass/browser-compiler-call-parsing-error</li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/c4f0c9ed0600f6bb85c1a324ceea4c7336f8420a"><code>c4f0c9e</code></a> don't return boolean from grammar rule</li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/8677a0dbc4be61c070a707e160e52ac7fc8f9b59"><code>8677a0d</code></a> Update output from <a href="https://github-redirect.dependabot.com/jashkenas/coffeescript/issues/5275">#5275</a></li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/ee2a107f3cce3be32925ddbe89d969f72daa3e3f"><code>ee2a107</code></a> AST: Refactor marking nodes that return (<a href="https://github-redirect.dependabot.com/jashkenas/coffeescript/issues/5275">#5275</a>)</li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/8fb5c1ba4ff6230cbc72d83bd2a3836addac087f"><code>8fb5c1b</code></a> Make it clearer that we're adding a property to an object</li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/b2b2f97873edbffebba72df033a36130c697d55d"><code>b2b2f97</code></a> Fix comments after colons getting lost (<a href="https://github-redirect.dependabot.com/jashkenas/coffeescript/issues/5276">#5276</a>)</li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/0045cb21ba2a18f134beeb8b5b9d7101e9ee74c7"><code>0045cb2</code></a> Colons are apparently another token type that doesn't survive passing through...</li>
<li><a href="https://github.com/jashkenas/coffeescript/commit/a8273bf98032ff1c0a5d3419b92354289f9bcc83"><code>a8273bf</code></a> No need for separate ast returns method, as it's never overridden</li>
<li>Additional commits viewable in <a href="https://github.com/jashkenas/coffeescript/compare/2.4.1...2.5.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=coffeescript&package-manager=npm_and_yarn&previous-version=2.4.1&new-version=2.5.0)](https://dependabot.com/compatibility-score.html?dependency-name=coffeescript&package-manager=npm_and_yarn&previous-version=2.4.1&new-version=2.5.0)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
Problem: I have a file being constantly written to, I'm using node-tail to watch this file and I'm piping the data through a socket to the front end. Unfortunately instead of receiving the latest appended information I'm receiving everything.

a very basic example (I'm not using a socket here, just console to log out the results):
```
const Tail = require("node-tail").Tail;
const tail = new Tail(file);

tail.on("line", data => console.log(data));
```
Can we have a last position on unwatch from where we can resume if we re watch the file again?

This feature will help in making the system fault tolerant. Please look into this.

Could you please add an option for tailing the last few lines? Perhaps replace 'fromBeginning' with 'lastLines' or something, that takes either an int value, or 'true' or something, which is a special value which means from beginning.

Hi,

I have a log file that I want to watch and which triggers "rename" events every now and then, without being actually renamed, truncated or deleted. If I do a normal `tail -f logfile`, I get the updates as expected. When using node-tail, however, the internal `fs.watch` treats some of the updates as `rename` events rather than `change` events. This might be a platform issue (I'm using Mac OSX) or an issue with the process that creates the logfile (I have no idea) - but when I force node-tail to use `fs.watchFile`, the problem goes away.
Since `rename` events reset the interal position and have a 1 second reload-delay, I'd like there to be a way to ignore these `rename` events and treat them as normal `change` events. Because `change` handles logfiles that are suddenly a lot shorter (ie. when actually renaming a file and replacing it with an empty one) perfectly fine, I don't see any harm in adding an option that allows the user to override the default behevaiour.
What do you think?
I also updated the docs to outline how these options could be used, along with the other options that were already there but not yet documented.

Cheers,
Steffen

I did some improvements and new features on the tail:
1. add a abstract SequenceQueue which control the element of queue was produce one by one: next will be process only if previous done. This also fix a bug of edge case.
2. add feature like tail -F in linux/unix, which can handle relink, rotate, rename.
3. can tail a file which not exists at first.
4. reserve file descriptor to avoid reopen file repeatedly
5. unwatch can return the current position. it's very useful for some case some application want to resume from last position after transient shutdown
