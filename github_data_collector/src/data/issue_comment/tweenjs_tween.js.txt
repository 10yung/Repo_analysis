I have a situation using yoyo and repeat in a tween.
I'm using tween.js to animate the opacity of a circle. The idea is to smoothly set opacity to 1 and back to 0. I'm using `yoyo` to for it but It has an unexpected behavior when I use `start` a second time.

The first time, the tween goes from 0 smoothly to 1, then smoothly back to 0.
The second time, the tween goes from 0 to abruptly to 1, then smoothly back to 0.

https://codepen.io/ppp000/pen/RwNBVYR

The expected behavior is the first time, the tween goes from 0 smoothly to 1, then smoothly back to 0.
The second time (and any other times), the tween goes from 0 smoothly to 1, then smoothly back to 0.

https://codepen.io/ppp000/pen/VwYBWLm?editors=1011

To make it work, I have to set again the `to({})` method, and `tween._valuesStart.opacity`. `_valuesStart` is not a public property so setting it doesn't seem valid.





Migration to Typescript **maintaining backward compatibility**.

1. Pass all original tests and examples without change
2. **eslint** - Uses the recommended rules from the `@typescript-eslint/eslint-plugin` (`@typescript-eslint/recommended`, `prettier/@typescript-eslint`, `prettier/recommended` )
3. Resolved dependency vulnerabilities:

**before**
```
$ npm i
audited 1045 packages in 3.265s
found 79 vulnerabilities (23 low, 20 moderate, 35 high, 1 critical)
```
**now**
```
$ npm i
audited 897 packages in 2.437s
found 0 vulnerabilities
```

We could always use more easing functions.

An easing function is single-variable function that maps values in the range [0, 1] to a numeric value. Generally, we require that `f(0) = 0` and `f(1) = 1`, but otherwise there are no constraints.

If you want to help out feel free to submit a PR, and don't worry about code style. If you need help I can provide a template for your PR.

Tests aren't required for easing functions, but if you want to you can add the new easing function to the graphs example.
I want to have a working build automation server for this project, but Travis-CI doesn't support that very well.

I want the server to build every commit that hits master (except its own) and then push a commit with the contents of the dist/ directory.

I don't want to submit a PR for version bumps. Ideally the person who approves the PR would be required to choose between major, minor, and patch, and everything would be automatic from there. If the CI has something like the semantic-release plugin that we used to use, then that would work too.

buildkite is a build and CI server with GitHub integration.


self-explanatory
It isn't written in the docs that start() even can get passed a value instead of using delay(), but it can. What's weird is that, when passed a string instead of a number, the number is parsed and then multiplied by ten.
**start(5000)** gives it a 5 second delay, while **start('5000')** gives it a 50 second delay.

If I had to guess what the problem is, I'd say it's probably by
`		this._startTime = time !== undefined ? typeof time === 'string' ? TWEEN.now() + parseFloat(time) : time : TWEEN.now();
		this._startTime += this._delayTime;`
and when it's adding the delayTime, it's concatenating them (i.e. parseFloat() didn't work and this._startTime is registering as a string. Thus it added a 0 to itself and only works as a number later on).

fix? I guess something like `this._startTime = parseFloat(this._startTime) + this._delayTime` but I'm not really sure why the issue appears in the first place.
Hi, I  have the follwing code
`    for (var j = 10; j > 0; --j) {
           if (i == this.positions_1.length) i = 0;
           var tween = new TWEEN.Tween(this.reelOne[0].position)
                .to(this.positions_1[i], 1000)
                .repeat(Infinity)
                .start();
            i++;
        }`
Could advise what is the way to stop it? 
I tried:
`
   var tween = new TWEEN.Tween(this.reelOne[0].position)
                .to(this.positions_1[i], 1000)
                .repeat(Infinity)
                 .onUpdate(function(){if (i==10) tween.stop()})
                .start();` 
but it doesn`t seem to be working. Thanks