Update www.yuuniworks.com url because some people deploys my site as-is and I had a some trouble related SEO.
## Description

After a build, the public folder has folders with router name. When i do SEO Audit i find each page route with /index.html and without that. And that is effecting my SEO rate.

### Steps to reproduce

After build, we can see that.

### Expected result

I should create a single route without /index.html.

### Actual result

I will attach screenshots below.
![image](https://user-images.githubusercontent.com/34607108/72678993-b0aba600-3acc-11ea-901b-00081a2e1c69.png)

### Environment

System:
    OS: Linux 5.0 Ubuntu 18.04.3 LTS (Bionic Beaver)
    CPU: (4) x64 Intel(R) Core(TM) i3-4005U CPU @ 1.70GHz
    Shell: 4.4.20 - /bin/bash
  Binaries:
    Node: 10.0.0 - /usr/local/bin/node
    npm: 6.13.6 - /usr/local/bin/npm
  Languages:
    Python: 2.7.15+ - /usr/bin/python
  Browsers:
    Chrome: 78.0.3904.97
  npmPackages:
    gatsby: ^2.18.4 => 2.18.4
    gatsby-image: ^2.2.34 => 2.2.34
    gatsby-plugin-brotli: ^1.3.1 => 1.3.1
    gatsby-plugin-facebook-pixel: ^1.0.3 => 1.0.3
    gatsby-plugin-layout: ^1.0.14 => 1.1.16
    gatsby-plugin-manifest: ^2.2.31 => 2.2.31
    gatsby-plugin-offline: ^3.0.29 => 3.0.29
    gatsby-plugin-react-helmet: ^3.1.16 => 3.1.16
    gatsby-plugin-robots-txt: ^1.5.0 => 1.5.0
    gatsby-plugin-sass: ^2.0.11 => 2.1.24
    gatsby-plugin-sharp: ^2.3.4 => 2.3.4
    gatsby-plugin-zopfli: ^1.3.2 => 1.3.2
    gatsby-remark-copy-linked-files: ^2.1.13 => 2.1.31
    gatsby-remark-images: ^3.1.19 => 3.1.34
    gatsby-remark-lazy-load: ^1.0.2 => 1.0.2
    gatsby-remark-relative-images: ^0.2.2 => 0.2.3
    gatsby-source-filesystem: ^2.1.39 => 2.1.39
    gatsby-transformer-remark: ^2.3.8 => 2.6.38
    gatsby-transformer-sharp: ^2.3.6 => 2.3.6
  npmGlobalPackages:
    gatsby-cli: 2.8.14

## Description

Fix a small typo in a doc (docs/glossary/graphql).

<!--
  Please fill out each section below, otherwise, your issue will be closed. This info allows Gatsby maintainers to diagnose (and fix!) your issue as quickly as possible.

  Useful Links:
  - Documentation: https://www.gatsbyjs.org/docs/
  - How to File an Issue: https://www.gatsbyjs.org/contributing/how-to-file-an-issue/

  Before opening a new issue, please search existing issues: https://github.com/gatsbyjs/gatsby/issues
-->

## Description

Gatsby throws an error when going to page-2 after renaming from default template. 

### Steps to reproduce

ran "gatsby new mysite" -> gatsby develop -> rename`page-2.js` to `page-3.js` and the link in `index.js` from `/page-2/` to `/page-3/` -> stop gatsby with ctrl+c -> start gatsby with `gatsby develop` -> go to http://localhost:8000/page-2/ and see error

### Expected result

It shouldn't error

### Actual result

it errored

### Environment

System:
    OS: Linux 4.4 Ubuntu 18.04.3 LTS (Bionic Beaver)
    CPU: (6) x64 Intel(R) Core(TM) i5-9600K CPU @ 3.70GHz
    Shell: 4.4.20 - /bin/bash
  Binaries:
    Node: 12.2.0 - ~/.nvm/versions/node/v12.2.0/bin/node
    npm: 6.13.0 - ~/.nvm/versions/node/v12.2.0/bin/npm
  Languages:
    Python: 2.7.15+ - /usr/bin/python
  npmPackages:
    gatsby: ^2.18.12 => 2.18.12
    gatsby-image: ^2.2.34 => 2.2.34
    gatsby-plugin-manifest: ^2.2.31 => 2.2.31
    gatsby-plugin-offline: ^3.0.27 => 3.0.27
    gatsby-plugin-react-helmet: ^3.1.16 => 3.1.16
    gatsby-plugin-sharp: ^2.3.5 => 2.3.5
    gatsby-source-filesystem: ^2.1.40 => 2.1.40
    gatsby-transformer-sharp: ^2.3.7 => 2.3.7
  npmGlobalPackages:
    gatsby-cli: 2.8.27

<!--
  Please fill out each section below, otherwise, your issue will be closed. This info allows Gatsby maintainers to diagnose (and fix!) your issue as quickly as possible.

  Useful Links:
  - Documentation: https://www.gatsbyjs.org/docs/
  - How to File an Issue: https://www.gatsbyjs.org/contributing/how-to-file-an-issue/

  Before opening a new issue, please search existing issues: https://github.com/gatsbyjs/gatsby/issues
-->

## Description

Running `gatsby develop` or `gatsby build` with an invalid property on `gatsby-config.js` that's not in any of [these](https://github.com/gatsbyjs/gatsby/blob/ea00e523ce5c32040c931bfe4bef081b11b13f68/docs/docs/gatsby-config.md) throws an unhelpful error message. See below:

### gatsby-config.js
![gb-config](https://user-images.githubusercontent.com/17492631/72674544-ffe4dd00-3ab2-11ea-8c41-dbf57c4f975f.png)

### Gatsby's CLI Output
![error](https://user-images.githubusercontent.com/17492631/72674549-0ffcbc80-3ab3-11ea-9b0f-ac5ddef71e4b.png)
 

### Steps to reproduce

1. Go to `gatsby-config.js` and add any property that's not any of [these](https://github.com/gatsbyjs/gatsby/blob/ea00e523ce5c32040c931bfe4bef081b11b13f68/docs/docs/gatsby-config.md)

2. Run `gatsby develop` or `gatsby build` commands

See [repo demo file](https://github.com/geeofree/unhelpful-gatsby-error-demo/blob/master/gatsby-config.js)

### Expected result

What should happen?

### Need to have a useful CLI error messages on gatsby

What happened.

### Didn't have a useful CLI error message

### Environment

![environment](https://user-images.githubusercontent.com/17492631/72674676-4edf4200-3ab4-11ea-854f-fe785dec162f.png)

### P.S.
I'd like to help resolve this issue and file a PR if someone is willing to guide me through the codebase that needs to be looked at. Currently I've only searched for terms such as _dispatch_ as I guess there's a reducer that's firing an effect somewhere but I'm finding it hard which to look for.
I have a products.json, and a categories.json file. I query in gatsby-node, but also in pages, and in components with StaticQuery.

Given the following order of commands:
`gatsby clean && gatsby develop`, the generated build is corrrect.
`CTRL + C, gatsby develop`, the result is inconsistent. When the build is fast (little products) graphql  returns less nodes (either less products or categories). When the build is slow (more products) graphql is returning even less nodes. 

There are even cases where it throws an error refering to my graphql syntax being incorrect! The solution is to trigger an update to categories.json, changing one little char is enough, just to trigger a gatsby update.

After that `CTRL + C, gatsby develop` should work properly (not 100% sure, as I haven't done much testing).
Does this make any sense?

### Environment

```
  System:
    OS: Windows 10
    CPU: (2) x64 AMD Athlon(tm) II X2 250 Processor
  Binaries:
    npm: 6.12.1 - C:\Program Files\nodejs\npm.CMD
  Browsers:
    Edge: 44.18362.449.0
  npmPackages:
    gatsby: ^2.5.0 => 2.13.31 
    gatsby-awesome-pagination: ^0.3.4 => 0.3.4 
    gatsby-image: ^2.1.0 => 2.2.6 
    gatsby-plugin-favicon: ^3.1.6 => 3.1.6 
    gatsby-plugin-local-search: ^1.0.0 => 1.0.0 
    gatsby-plugin-manifest: ^2.1.1 => 2.2.3 
    gatsby-plugin-offline: ^2.1.0 => 2.2.4 
    gatsby-plugin-react-helmet: ^3.0.12 => 3.1.2 
    gatsby-plugin-sharp: ^2.0.37 => 2.2.8 
    gatsby-plugin-styled-jsx: ^3.0.5 => 3.1.2 
    gatsby-source-filesystem: ^2.0.38 => 2.1.5 
    gatsby-transformer-json: ^2.1.11 => 2.2.2 
    gatsby-transformer-sharp: ^2.1.19 => 2.2.4 
```
<!--
  Have any questions? Check out the contributing docs at https://gatsby.dev/contribute, or
  ask in this Pull Request and a Gatsby maintainer will be happy to help :)
-->

<!--
  Is this a blog post? Check out the docs at https://www.gatsbyjs.org/contributing/blog-and-website-contributions/, and please mention if the blog post is pre-approved
  by someone from Gatsby.
-->

## Description

<!-- Write a brief description of the changes introduced by this PR -->

In the README for `gatsby-plugin-mdx`, the name of the plugin was sometimes in plain text ("gatsby-plugin-mdx") and was sometimes in code backticks (`gatsby-plugin-mdx`). This simply updates all references to use code backticks for consistency.

### Documentation

<!--
  Where is this feature or API documented?

  - If docs exist:
    - Update any references, if relevant. This includes Guides and Gatsby Internals docs.
  - If no docs exist:
    - Create a stub for documentation including bullet points for how to use the feature, code snippets (including from happy path tests), etc.
  - Tag @gatsbyjs/learning for review, pairing, polishing of the documentation
-->

n/a

## Related Issues

<!--
  Link to the issue that is fixed by this PR (if there is one)
  e.g. Fixes #1234

  Link to an issue that is partially addressed by this PR (if there are any)
  e.g. Addresses #1234

  Link to related issues (if there are any)
  e.g. Related to #1234
-->

n/a
## Description

I have a large WordPress site that uses the _ACF to REST API_ plugin and _gatsby-source-wordpress_. Some post types have an ACF Url field for additional links. These links may be to files hosted on the website itself (from within the WordPress media library), or to external documents. The issue is that gatsby-source-wordpress resolves these url fields differently, depending on whether or not the url is for internal or external media. If external, the url resolves to a string, which is the desired (expected?) outcome. If internal, I instead get back a WordpressWpMedia node, with its respective fields. In any given scenario, I may have any number of external & internal urls, and the default Gatsby behavior is such that only one of these two node types can be included for a given query (e.g., I either get back the media node and all the external links are resolved to `null`, or I get back String and all the internal links are resolved to `null`.) Snippets below.

**@LekoArts has made mention of this elsewhere, but dropping this here for posterity. For context, "link" is the slug for my Url fields.**
```
warn Multiple node fields resolve to the same GraphQL field `wordpress__wp_infographics.acf.link` - [`link___NODE`, `link`]. Gatsby will use `link___NODE`.
warn Multiple node fields resolve to the same GraphQL field `wordpress__wp_annual_reports.acf.link` - [`link___NODE`, `link`]. Gatsby will use `link___NODE`.
warn Multiple node fields resolve to the same GraphQL field `wordpress__wp_media.guid` - [`guid___NODE`, `guid`]. Gatsby will use `guid___NODE`.
warn Multiple node fields resolve to the same GraphQL field `wordpress__acf_infographics.acf.link` - [`link___NODE`, `link`]. Gatsby will use `link___NODE`.
warn Multiple node fields resolve to the same GraphQL field `wordpress__acf_annual_reports.acf.link` - [`link___NODE`, `link`]. Gatsby will use `link___NODE`.
warn There are conflicting field types in your data.

If you have explicitly defined a type for those fields, you can safely ignore this warning message.
Otherwise, Gatsby will omit those fields from the GraphQL schema.
```

**This query returns two posts, one with an internal Url and one with an external Url. The internal Url is the one being returned. In this scenario, I need to drill into the "link" node to get the actual url. (For clarity, the WP website in question lives at afpadev.wpengine.com)**
```
{
  "data": {
    "allWordpressWpInfographics": {
      "edges": [
        {
          "node": {
            "id": "54e2328d-c3db-5d1c-b711-56635156b13d",
            "title": "Access to Balanced Pain Management",
            "acf": {
              "link": {
                "link": "https://afpadev.wpengine.com/afpa-access-to-balanced-pain-management/"
              }
            }
          }
        },
        {
          "node": {
            "id": "4c95ac11-98e6-5fae-af12-0c983f08f661",
            "title": "Clinical Trials Expenses Shouldn&#8217;t Deter Participants",
            "acf": {
              "link": null
            }
          }
        }
      ]
    }
  }
}
```


**A second query, where the returned values are the external urls. In this scenario, the link string is now the top level field. How Gatsby determines which node type to resolve in any given query, I have no idea.**
```
{
  "data": {
    "upcoming": {
      "edges": [
        {
          "node": {
            "id": "3467adbf-05dc-56ad-80aa-d31afd43dfa0",
            "title": "National Survey of Patients’ Attitudes Toward Gout",
            "acf": {
              "link": null
            }
          }
        },
        {
          "node": {
            "id": "75a6355f-e92a-5614-9848-f4b79dcf6738",
            "title": "A Study of the Qualitative Impact of Non-Medical Switching",
            "acf": {
              "link": null
            }
          }
        },
        {
          "node": {
            "id": "91cb3282-a196-5db9-94ed-92903b181df6",
            "title": "Shared Decision-Making: Insights from Rheumatoid Arthritis Patients in Europe",
            "acf": {
              "link": "https://gafpa.org/wp-content/uploads/EAfPA_RA-Questionnaire-Findings-Report_May-2019.pdf"
            }
          }
        },
        {
          "node": {
            "id": "e6c8f355-5b46-58b3-a124-349d7238c9a7",
            "title": "Patients Indicate More Cardiovascular Education Needed",
            "acf": {
              "link": null
            }
          }
        }
      ]
    }
  }
}
```

### Steps to reproduce

You can find my full repo [here](https://github.com/avinoamsn/afpa-gatsby). I can create a min repro repo if requested. Alternatively, you can hit my WP install with _gatsby-source-wordpress_ and `WP_ENV=afpadev.wpengine.com` The queries used for the above snippets:
```
query InfographicsTest {
  allWordpressWpInfographics {
    edges {
      node {
        id
        title
        acf {
          link {
            link
          }
        }
      }
    }
  }
}
```

```
query SurveysQuery {
  upcoming: allWordpressWpSurveys(sort: {fields: acf___date, order: ASC}) {
    edges {
      node {
        id
        title
        acf {
          link
        }
      }
    }
  }
}
```

### Expected result

The ACF Url field should be resolved consistently & predictably, regardless of field content.

### Actual result

The ACF Url field is resolved inconsistently, with different nodes being returned based on the field's content.

### Environment

```
  System:
    OS: Linux 4.4 Ubuntu 18.04.3 LTS (Bionic Beaver)
    CPU: (8) x64 Intel(R) Core(TM) i7-4790 CPU @ 3.60GHz
    Shell: 5.4.2 - /usr/bin/zsh
  Binaries:
    Node: 12.14.1 - ~/.nvm/versions/node/v12.14.1/bin/node
    Yarn: 1.19.1 - /usr/bin/yarn
    npm: 6.13.4 - ~/.nvm/versions/node/v12.14.1/bin/npm
  Languages:
    Python: 2.7.15+ - /home/avi/.pyenv/shims/python
  npmPackages:
    gatsby: ^2.18.22 => 2.18.25
    gatsby-background-image: ^0.8.19 => 0.8.19
    gatsby-cli: ^2.8.27 => 2.8.27
    gatsby-gravityforms-component: ^1.0.9 => 1.0.9
    gatsby-image: ^2.2.38 => 2.2.39
    gatsby-plugin-manifest: ^2.2.37 => 2.2.37
    gatsby-plugin-offline: ^2.2.10 => 2.2.10
    gatsby-plugin-postcss: ^2.1.19 => 2.1.19
    gatsby-plugin-purgecss: ^4.0.1 => 4.0.1
    gatsby-plugin-react-helmet: ^3.1.21 => 3.1.21
    gatsby-plugin-sharp: ^2.3.13 => 2.3.13
    gatsby-plugin-stylus-resources: ^1.0.25 => 1.0.25
    gatsby-plugin-tslint: 0.0.2 => 0.0.2
    gatsby-plugin-typescript: ^2.1.26 => 2.1.26
    gatsby-source-filesystem: ^2.1.46 => 2.1.46
    gatsby-source-gravityforms: ^1.0.15 => 1.0.15
    gatsby-source-wordpress: ^3.1.58 => 3.1.58
    gatsby-transformer-sharp: ^2.3.12 => 2.3.13
```

Most file systems / OSs restrict the length of file names cause computers used to be weak sauce.

https://serverfault.com/questions/9546/filename-length-limits-on-linux/9548#9548

Generally to 255 bytes.

An obscure error someone can run into is they'll create paths longer than this and when we try to write out the page's page data, Node will crash with a mysterious `ENAMETOOLONG`.

We should just detect when a path is too long & shorten it within the limits.

We can use a simple algorithm that trims back the path name & hashes the trimmed off parts to preserve uniqueness.

To see a real-world example of this happening & an example algorithm go to https://github.com/gatsbyjs/gatsby/issues/20338#issuecomment-575930958
<!--
  Please fill out each section below, otherwise, your issue will be closed. This info allows Gatsby maintainers to diagnose (and fix!) your issue as quickly as possible.

  Useful Links:
  - Documentation: https://www.gatsbyjs.org/docs/
  - How to File an Issue: https://www.gatsbyjs.org/contributing/how-to-file-an-issue/

  Before opening a new issue, please search existing issues: https://github.com/gatsbyjs/gatsby/issues
-->

## Description

Immediately after running 
```shell
gatsby new test-project
cd test-project
gatsby develop
```

There are build errors: 
<img width="716" alt="Screen Shot 2020-01-18 at 12 38 28 PM" src="https://user-images.githubusercontent.com/16724951/72667959-791afc00-39ef-11ea-8f5d-4e4f84f357a3.png">

This also occurs with the blog starter. 

Incredibly frustrating when trying to migrate a site to gatsby and not being able to get past step 1. 

### Steps to reproduce
```shell
gatsby new test-project
cd test-project
gatsby develop
```

### Expected result

No errors and image/icon should load.

### Actual result

Saw errors and manifest did not build correctly. I also could not run a build command successfully.

### Environment

  System:
    OS: macOS 10.15.2
    CPU: (4) x64 Intel(R) Core(TM) i5-4288U CPU @ 2.60GHz
    Shell: 5.7.1 - /usr/local/bin/zsh
  Binaries:
    Node: 12.14.1 - ~/.nvm/versions/node/v12.14.1/bin/node
    Yarn: 1.21.1 - ~/.nvm/versions/node/v12.14.1/bin/yarn
    npm: 6.13.6 - ~/.nvm/versions/node/v12.14.1/bin/npm
  Languages:
    Python: 2.7.17 - /usr/local/bin/python
  Browsers:
    Chrome: 79.0.3945.130
    Safari: 13.0.4
  npmPackages:
    gatsby: ^2.18.12 => 2.18.12 
    gatsby-image: ^2.2.34 => 2.2.34 
    gatsby-plugin-manifest: ^2.2.31 => 2.2.31 
    gatsby-plugin-offline: ^3.0.27 => 3.0.27 
    gatsby-plugin-react-helmet: ^3.1.16 => 3.1.16 
    gatsby-plugin-sharp: ^2.3.5 => 2.3.5 
    gatsby-source-filesystem: ^2.1.40 => 2.1.40 
    gatsby-transformer-sharp: ^2.3.7 => 2.3.7 
