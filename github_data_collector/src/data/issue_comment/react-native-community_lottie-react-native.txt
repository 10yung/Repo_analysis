### Description

colorFilters are present in the README.md but are missing an explanation and example in the API.md file

### Steps to Reproduce

1. Go to the API docs https://github.com/react-native-community/lottie-react-native/blob/master/docs/api.md

**Expected behavior:** As a Developer I'd like to see how to use colorFilters

**Actual behavior:** Adequate colorFilter documentation does not exist.

### Versions

3.3.3
Feature request based on this comment in the original PR for color filters

https://github.com/react-native-community/lottie-react-native/pull/584

> Would love to have support for alpha when setting colors with colorFilters in an specific layer
> 
> ```
> return UIColor(
>    red: CGFloat((rgbValue & 0xFF0000) >> 16) / 255.0,
>    green: CGFloat((rgbValue & 0x00FF00) >> 8) / 255.0,
>    blue: CGFloat(rgbValue & 0x0000FF) / 255.0,
>    alpha: CGFloat(1.0) 
> )
> ```
> 
> Here the alpha is set always to 1.0
https://github.com/react-native-community/lottie-react-native/pull/584#issuecomment-569533448


Not the original commenter, but I agree that the alpha channel should also be exposed if possible.
### Description

[Description of the bug]
[React Native for Windows](https://github.com/microsoft/react-native-windows) enables React Native apps to target Windows via UWP. React Native for Windows is under active development by Microsoft. Most recently, the platform has been updated to leverage high-performance C++ (known as "RNW vNext"). Now that the RNW vNext supports native modules as a platform, we have identified several key native modules to add Windows support for (including lottie-react-native) to help validate that the platform has the right set of capabilities and to bootstrap the community of modules that target Windows.

Microsoft devs are signed up to help build out this implementation, but we wanted to track this work here as well to help provide some transparency that we're doing this work and hoping to contribute back to the repo. 


https://github.com/microsoft/react-native-windows/issues/3278

### Steps to Reproduce

N/A

**Expected behavior:** React-Native-Lottie works great on Windows üòÅ

**Actual behavior:** No support... yet!

### Versions

You can get this information from executing `npm version`.

### Description

When animation is running in Xcode I see CPU jumps from 5-10% to 70-80%. And it doesn't depend on animation. If animation is running every one second I also see the same CPU load. Sometimes it jumps to 90%.

In Android everything is good. The CPU load is about 20-30%, sometimes even less. (10-15%)

**Expected behavior:** 
CPU load optimization in iOS

**Actual behavior:** 
The CPU load optimization in iOS is very poor.
The CPU load in Android is OK.

### Versions
iOS version 13.2.

"react-native": "0.61.2",
"lottie-ios": "3.1.5",
"lottie-react-native": "^3.3.1",

### Description

It looks like a conflict between two native modules. 

I want to exec a long time task, and give a animation to user at the same time. The task is simple, just encrypting, but i use a native module:

[https://github.com/Crypho/react-native-scrypt](https://github.com/Crypho/react-native-scrypt)

### Steps to Reproduce

1. I start a lottie animation
2. I start the task.
3. Then, the animation stop, after task finish, animation run again.

**Expected behavior:** [What you expected to happen]

Run the animation when the task execs.

**Actual behavior:** [What actually happened]

The animation stop when the task exec.

### Versions

npm version:

```sh
{
  npm: '6.12.0',
  ares: '1.15.0',
  brotli: '1.0.7',
  cldr: '35.1',
  http_parser: '2.8.0',
  icu: '64.2',
  llhttp: '1.1.4',
  modules: '72',
  napi: '5',
  nghttp2: '1.39.2',
  node: '12.13.0',
  openssl: '1.1.1d',
  tz: '2019a',
  unicode: '12.1',
  uv: '1.32.0',
  v8: '7.7.299.13-node.12',
  zlib: '1.2.11'
}
```
for lottie:

```sh
"lottie-ios": "^3.1.5",
"lottie-react-native": "^3.3.2",
"react-native": "0.61.4"
```
How do you mock the lottie library in jest. THanks

### Description

I have created a run cycle animation in After Effects using the Duik extension to rig the character (created in Adobe Illustrator). I have then exported this animation using Bodymovin (with Guides and Hidden layers selected in the settings). The result of this is a JSON animation which DOES work in Lottiefiles web preview. 

However, the animation does not work on either the Previewer in the Lottie app (Android) or when loaded into a <LottieView> Object in React-Native (Also Android). 

I'm confused because I've read elsewhere that Duik animations work with Lottie. If it is the case that they don't work with lottie-react-native then this should be outlined in the documentation clearly. My Lottie preview app gives a bunch of warnings about not supporting layer effects and so on, but I wish this was warned about before.
 
### Steps to Reproduce

1. Create animation in AE using Duik
2. Render to JSON object with bodymovin and confirm that it works in Lottie preview on web
3. Load Json object into <LottieView> object in React-Native or Lottie mobile previewer

**Expected behavior:** The animation to perform similarly to how it did in the web previewer

**Actual behavior:** The rigged animated layers were static and broken.

### Versions

lottie-react-native : 3.2.1
npm: 6.11.3
react-native: 0.61.3

### Description

When I use specific Lottie Animations, I received from our Motion Designer, the frames per second drop below 30 fps on iOS.

### Steps to Reproduce

1. Download the following Lottie animation as an example:
https://www.dropbox.com/s/a0et4mzruswzdor/RightAnswer1Mobile.json?dl=0

2. Integrate it into your project like this

`<LottieView source={require('../assets/lottie/RightAnswer1Mobile.json')} />`

3. Show Perf Monitor in iOS via Ctrl + Cmd + Z on a simulator or shaking your device.

4. Navigate to a screen with 

**Expected behavior:** Lottie Animation shouldn't drop the frame rate in the UI Thread

**Actual behavior:** Lottie Animation drops the frame rate below 30 fps.

**Addition Info:** I worked with this behavior in Expo SDK 34, SDK 35 with React Navigation 3, then with an ejected Expo App on React Navigation 4 and 5. 

### Versions

 "react-native": "0.61.2",
"lottie-ios": "3.1.3",
"lottie-react-native": "^3.2.1"
### Description

Hello, I'm having an issue with an asset, that isn't showing on iOS. I've recently updated `react-native` to `0.61.2`. Previously to this update this asset was showing up. In Android the asset is showing up as is intended. This only happen with this particularly [asset](https://assets8.lottiefiles.com/packages/lf20_FiUiqO.json). 

### Steps to Reproduce

```js

import React, { Component } from 'react';
import { Animated, Easing } from 'react-native';
import PropTypes from 'prop-types';
import LottieView from 'lottie-react-native';
import { sourceModel } from '@propTypes/sourceModel';

class SingleTimeAnimation extends Component {
  state = {
    progress: new Animated.Value(0)
  };

  componentDidMount() {
    this.animateLottie();
  }

  componentDidUpdate(prevProps) {
    const { source } = this.props;
    if (prevProps.source !== source) {
      this.resetAnimation();
    }
  }

  resetAnimation = () => {
    this.setState({ progress: new Animated.Value(0) }, this.animateLottie);
  };

  animateLottie = () => {
    const { progress } = this.state;
    const { duration } = this.props;
    Animated.timing(progress, {
      toValue: 1,
      duration,
      easing: Easing.linear,
      useNativeDriver: true
    }).start();
  };

  render() {
    const { progress } = this.state;
    const { source, style } = this.props;
    return <LottieView style={style} source={source} progress={progress} />;
  }
}

SingleTimeAnimation.propTypes = {
  duration: PropTypes.number.isRequired,
  source: sourceModel
};

export default SingleTimeAnimation;

```


### Versions

"react-native": "0.61.2"
"lottie-react-native": "^3.1.1"

Hello everyone, I'm trying to change animation dynamically.
I've tried to change it via setState but it still played on previous speed.

I'm sharing sample code for it:

```
class App extends React.Component {
  constructor() {
    super()
    this.state = { speed: 0.5 }
  }

  render() {
    return (
      <SafeAreaView>
        <LottieView
          source={require("./animations/6567-scanning-nearby.json")}
          autoPlay
          speed={this.state.speed}
        />


          <TouchableOpacity onPress={() => this.setState({ speed: 1.5 })}>
              <Text style={{ fontSize: 20 }}>Tap for start scan</Text>
          </TouchableOpacity>
           ...
           ...
           ...
```

If I checked the reference before and after change speed, it looks like change. But on the screen it stays same.
![Screen Shot 2019-10-18 at 11 21 31](https://user-images.githubusercontent.com/42299721/67078415-ebcece00-f199-11e9-90d9-bfb9c17a4917.jpg)


Is there any way to do it?

**Verisons:**
```
    "lottie-ios": "3.1.3",
    "lottie-react-native": "^3.2.1",
    "react": "16.9.0",
    "react-native": "0.61.2"
```

**Platform:** iOS