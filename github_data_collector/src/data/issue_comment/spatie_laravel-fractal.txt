  public function includeComments(Post $post)
  {
      $comments = $post->comments;

      return $comments->isEmpty() ? null : $this->collection($comments, new CommentTransformer());
  }

output: comment key is lost in the output when written null and key returns empty array when written $this->null(). getting( "comments":[ ].
Expected output is "comments" : null  
"spatie/laravel-fractal": "^5.4"
So just very quickly:

	// works
	return response()
		->json([
			'data' => $transformer->transform($report),
		]);

	// doesn't
	return fractal()
		->collection($report, $transformer)
		->respond();

The `transform` method on my `Transformer` should be called at some point when creating the response, right? Because it doesn't. If I just do a simple `die('it fired!')` at the beginning of my `transform` method it never happens.
I have two tables
- USER
```
+ id
+ name
+ address
```

- COMMENT
```
+ id
+ text
+ user_id
```

I'm trying to use parseInclude with filter like:
```
fractal()->parseInclude('comments:limit(5|1'):order(created_at|desc))
```
But it seem like no working. Any idea about apply logic parseInclude with filter

Thanks you