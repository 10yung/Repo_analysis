I get a console error that does not reference any code of mine. I assume this is my problem, but I cannot tell from the error what is the matter. Is there a way to improve the reporting?

- A-Frame Version: 1.0.3
- Platform / Device: Gives errors below in Firefox, Chrome, and similar in Safari (out-of-date version though).
- Reproducible Code Snippet or URL: See https://sgouros.com/explosion/index1.html for 1.0.3 version, https://sgouros.com/explosion/index2.html for 0.9.2 version.

Chrome error:
```
core:a-node:error Failure loading node:   TypeError: Cannot read property 'constructor' of undefined
    at extendProperties (component.js:734)
    at i.callUpdateHandler (component.js:414)
    at i.updateProperties (component.js:298)
    at HTMLElement.updateComponent (a-entity.js:490)
    at HTMLElement.updateComponents (a-entity.js:456)
    at a-entity.js:249
    at a-node.js:127
```

Firefox error:

```
core:a-node:error Failure loading node:   TypeError: "e is undefined"
    Aframe 7
        extendProperties
        callUpdateHandler
        updateProperties
        value
        value
        value
        value
```

The stack trace appears the same as in (closed) issue #3920 from version 0.8.2.

I have posted the question on stackoverflow, too, but no answers yet, except someone who asked me to upgrade, which I did, but it didn't help: https://stackoverflow.com/questions/59792018/a-node-js-typeerror-cannot-read-property-constructor-of-undefined


For controllers with no Gamepad attached or no available buttons like for example Cardboard v2 and AR Module screen input.
Hello Community !

With lazer controls, on Oculus Quest, Go and Google Daydream, going in VR mode then escaping then going back again crash aframe when app served over https

- A-Frame Version: 1.0.3 (and latest version on master/dist)
- Platform / Device: Oculus Quest, Go (oculus browser) and Google Daydream (chrome)
- Reproducible Code Snippet or URL: https://glitch.com/~lunar-blossom
Message in the console with Chrome and Google Daydream and Oculus browser on Quest
```
tracked-controls-webxr.js:102 Uncaught DOMException: Failed to execute 'getPose' on 'XRFrame': XRSpace and XRFrame sessions do not match.
    at i.tick (https://cdn.jsdelivr.net/gh/aframevr/aframe@2c5c131dccaab9d449fcd0383e98d027a5bc07f6/dist/aframe-master.min.js:907:2890)
    at HTMLElement.tick (https://cdn.jsdelivr.net/gh/aframevr/aframe@2c5c131dccaab9d449fcd0383e98d027a5bc07f6/dist/aframe-master.min.js:943:11885)
    at HTMLElement.render (https://cdn.jsdelivr.net/gh/aframevr/aframe@2c5c131dccaab9d449fcd0383e98d027a5bc07f6/dist/aframe-master.min.js:943:12419)
    at https://cdn.jsdelivr.net/gh/aframevr/aframe@2c5c131dccaab9d449fcd0383e98d027a5bc07f6/dist/aframe-master.min.js:1074:132
    at u (https://cdn.jsdelivr.net/gh/aframevr/aframe@2c5c131dccaab9d449fcd0383e98d027a5bc07f6/dist/aframe-master.min.js:134:27359)
    at XRSession.e (https://cdn.jsdelivr.net/gh/aframevr/aframe@2c5c131dccaab9d449fcd0383e98d027a5bc07f6/dist/aframe-master.min.js:132:12664)```



**Description:**

iOS Safari (+ Chrome) - leaving VR mode with an embedded a-scene causes the scene canvas to resize to 100px x 100px. 

I believe it is related to this code taken from webvr polyfill https://github.com/aframevr/aframe/blob/master/src/utils/forceCanvasResizeSafariMobile.js
Although I don't believe they use this workaround anymore.

- A-Frame Version: 1.0.3, Master
- Platform / Device: Safari Chrome / iPhone 7 iOS 13.3 
- Reproducible Code Snippet or URL: https://large-scion.glitch.me/


**Description:**

- A-Frame Version:
1.0.3 (Date 2020-01-06, Commit #d3b9a30a)
- Platform / Device:
Oculus Quest Browser
- Reproducible Code Snippet or URL:
https://curious-electric.com/w/experiments/aframe/minimal-quest-embedded/

Upon VR activation you land in a strange line soup.

Error on console is:
“Uncaught DOMException: Failed to execute ‘getPose’ on ‘XRFrame’: XRSpace and XRFrame sessions do not match.”

The problem happens when I had the embedded flag set in the scene - removing that made it work again.

Thanks for looking into this, and the great work, overall.
Hi everyone,

I have an issue that the video in a videosphere is upside down on iOS. First thought was I could simply solve it with "transform: rotate(180deg)" but it reverses the controls.

Thanks for your help!
Julian

- A-Frame Version: 1.0.3
- Platform / Device: iOS 13
- Reproducible Code Snippet or URL: https://www.julianwagner.ninja/vr/video.php


**Description:**
Objects > 1000m away, but within camera far clipping plane, should be visible. Under WebVR, they are. Under WebXR, they are not.

- A-Frame Version: 1.0.3
- Platform / Device: Android Chrome 79 on Galaxy S6, Oculus Browser 7.1.2 on Oculus Quest
- Reproducible Code Snippet or URL:
https://glitch.com/edit/#!/educated-slayer?path=index.html:16:41
This just has an a-sky with radius="9000" and a camera with far="10000"

The render state appears to be set with the baseLayer, but not depthNear nor depthFar
```JavaScript
session.updateRenderState( { baseLayer: new XRWebGLLayer( session, gl,
  {
    antialias: gl.getContextAttributes().antialias,
    alpha: gl.getContextAttributes().alpha,
    depth: gl.getContextAttributes().depth,
    stencil: gl.getContextAttributes().stencil
  }
) } );
```
https://immersive-web.github.io/webxr/#xrrenderstate-interface


It's also possible that the maximum far clip plane is only 1000 on these platforms (which is legal)
Error when minifying DracoLoader source. It looks it's the only part of THREE js shipping ES6

`uglify-js failed on node_modules/super-three/examples/js/loaders/DRACOLoader.js : SyntaxError: Unexpected token: operator (>)`

Build still generates but DracoLoader code is not minimized.
