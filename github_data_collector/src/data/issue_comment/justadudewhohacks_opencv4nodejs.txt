Greetings.

I have a proposal to make project compatible with static linking. Having 2.2gb in node_modules is not suitable for many cases.

I managed to compile project with static linking and run simple test. However this is not the first attempt to build nodejs native modules and I know how many troubles it usually causes.

I did it in linux (ubuntu18). binding.gyp main changes are below
Crusial part for GCC (it never works, because the order of libs counts in gcc)

		"libraries": [
                   #"<!@(node ./install/parseEnv.js OPENCV4NODEJS_LIBRARIES)",
		],

and in the conditions sections I added.

    ['OS=="linux"', {
                                'library_dirs': [
                                '<!(echo $OPENCV_LIB_DIR)',
                                '<!(echo $OPENCV_LIB_DIR)/../../build-release/3rdparty/lib/'
                                ],
                                "libraries": [
                                                        "-lopencv_calib3d",
                                                        "-lopencv_dnn",
                                                        "-lopencv_features2d",
                                                        "-lopencv_flann",
                                                        "-lopencv_highgui",
                                                        "-lopencv_imgcodecs",
                                                        "-lopencv_imgproc",
                                                        "-lopencv_ml",
                                                        "-lopencv_objdetect",
                                                        "-lopencv_photo",
                                                        "-lopencv_shape",
                                                        "-lopencv_stitching",
                                                        "-lopencv_superres",
                                                        "-lopencv_video",
                                                        "-lopencv_videoio",
                                                        "-lopencv_videostab",
                                                        "-lavcodec",
                                                        "-lavformat",
                                                        "-lavutil",
                                                        "-lopencv_core",
                                                        "-lIlmImf",
                                                        "-littnotify",
                                                        "-llibjasper",
                                                        "-llibjpeg-turbo",
                                                        "-llibpng",
                                                        "-llibprotobuf",
                                                        "-llibtiff",
                                                        "-llibwebp",
                                                        "-lquirc",
                                                        "-lzlib",
                                        ],
                }],

I used external opencv build (without IPP_IW support, however I think it is possible to have it worked )

build script

    #!/usr/bin/env bash
    export OPENCV4NODEJS_DISABLE_AUTOBUILD=1;
    export OPENCV_LIB_DIR=/media/denis/ssd2/sources/opencv-3.4.9/lib-result/lib;
    export OPENCV_INCLUDE_DIR=/media/denis/ssd2/sources/opencv-3.4.9/lib-result/include/;
    npm install

Simple test works fine. (Probably I missed something and it requires some adaptation)

    
    const cv = require('opencv4nodejs');
    
    const sourceImage = cv.imread('test.png', cv.IMREAD_UNCHANGED);
    console.log('loaded png size: ' + sourceImage.sizes);
    console.log('opencv version: ' + cv.version.major + '.' + cv.version.minor);
    
    const cap = new cv.VideoCapture('test.mp4');
    const frameWidth = cap.get(cv.CAP_PROP_FRAME_WIDTH);
    const frameHeight = cap.get(cv.CAP_PROP_FRAME_HEIGHT);
    const fourCC = cap.get(cv.CAP_PROP_FOURCC);
    const posFrames = cap.get(cv.CAP_PROP_POS_FRAMES);
    const posAviRatio = cap.get(cv.CAP_PROP_POS_AVI_RATIO);
    const fps = cap.get(cv.CAP_PROP_FPS);
    const frameCount = cap.get(cv.CAP_PROP_FRAME_COUNT);
    const fourCCStr = String.fromCharCode(fourCC & 255, (fourCC >> 8) & 255, (fourCC >> 16) & 255, (fourCC >> 24) & 255);
    const videoInfo = {
        fourCC: fourCC,
        fourCCString: fourCCStr,
        frameCount: frameCount,
        frameWidth: frameWidth,
        frameHeight: frameHeight,
        fps: fps,
        posFrames: posFrames,
        posAviRatio: posAviRatio
    };
    console.log('videoInfo: ' + JSON.stringify(videoInfo));

Theoretically I am ready to prepare pull request but I do not know the vision of author how it is supposed to be done. Any thoughts?





Please fix this line https://github.com/justadudewhohacks/opencv4nodejs/blob/e9ad6e50d11d673e0a495cf310e9191ac937f7b8/cc/core/Mat.cc#L83
from `Nan::SetPrototypeMethod(ctor, "splitChannelsAsync", Split);` to `Nan::SetPrototypeMethod(ctor, "splitChannelsAsync", SplitAsync);`

Thanks, David
I am trying to compile using the DBUILD_LIST cmake flag via the OPENCV4NODEJS_AUTOBUILD_FLAGS environment variable through the package.json, since I only want to install the "core, imgproc, imgcodecs" modules, but in the end, when I look at the libs folder, it is only installed the "core" module.
This is what I have in my package.json.

```
"opencv4nodejs": {
"disableAutoBuild": 0,
"autoBuildFlags": "-DBUILD_LIST=imgcodecs,core,imgproc"
}
```

Is there another way to compile only those modules?

in the description of the compilation it tells me that they were installed, but when I look at the variable cv in nodejs I only show the "core" module, and when I look in the folder "/node_modules/opencv-build/opencv/build/lib" only the module is core What I can do?
Hi,

Is it possible to use library with [pkg ](https://github.com/zeit/pkg)?

Harel

Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.11 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.11...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.11&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/justadudewhohacks/opencv4nodejs/network/alerts).

</details>
Method `Mat.inv' has been added recently. Could you release  a new docker image?
I can't find cv.img_hash prototype, how to use that api?
https://docs.opencv.org/4.1.2/d4/d93/group__img__hash.html

*OpenCV version* (example 3.4.1): 4.1.2

*With OpenCV-contrib?* (extra modules): yes (/usr/local/Cellar/opencv/4.1.2/include/opencv4/opencv2/img_hash/phash.hpp)

*OS*: MacOSX
Hi, I'm a newbie trying to learn opencv4nodejs. I refer to the tutorials on opencv.org to learn. I'm facing an issue with "Hit or Miss" based on https://docs.opencv.org/4.1.2/db/d06/tutorial_hitOrMiss.html . I always get blank image with any kernel with this usage:
output_image = input_image.morphologyEx(kernel, cv.MORPH_HITMISS);

It seems cv.MORPH_HITMISS is not correct. Please help to check.
Opencv4nodejs version 5.5.0 on Windows 10

[hit-or-miss - Copy.txt](https://github.com/justadudewhohacks/opencv4nodejs/files/3986677/hit-or-miss.-.Copy.txt)



I want to know how to use matchShapes()，and how to install opencv4nodejs with  opencv_contrib,thank you!
My patience has run out. I've installed it a dozen times in win10 and CentOS 7.
I looked through my country's blog, but it didn't work. I don't want to use it anymore.

I look ALL Country's blog， can't help me install success。so，It's so hard to install, this thing is so hard to use!

node -v  v12.13.1   

win10
info install spawning node gyp process: node-gyp rebuild --jobs max

C:\Users\Administrator\AppData\Roaming\npm\node_modules\opencv4nodejs>if not defined npm_config_node_gyp (node "C:\Users\Administrator\AppData\Roaming\npm\node_modules\npm\node_modules\npm-lifecycle\node-gyp-bin\\..\..\node_modules\node-gyp\bin\node-gyp.js" rebuild --jobs max )  else (node "node E:\ruanjian\nodejs\node_modules\npm\node_modules\node-gyp\bin\node-gyp.js" rebuild --jobs max )
internal/modules/cjs/loader.js:800
    throw err;
    ^

Error: Cannot find module 'C:\Users\Administrator\AppData\Roaming\npm\node_modules\opencv4nodejs\node E:\ruanjian\nodejs\node_modules\npm\node_modules\node-gyp\bin\node-gyp.js'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:797:15)
    at Function.Module._load (internal/modules/cjs/loader.js:690:27)
    at Function.Module.runMain (internal/modules/cjs/loader.js:1047:10)
    at internal/main/run_main_module.js:17:11 {
  code: 'MODULE_NOT_FOUND',
  requireStack: []
}
ERR! Error: Command failed: node-gyp rebuild --jobs max
internal/modules/cjs/loader.js:800
    throw err;
    ^

Error: Cannot find module 'C:\Users\Administrator\AppData\Roaming\npm\node_modules\opencv4nodejs\node E:\ruanjian\nodejs\node_modules\npm\node_modules\node-gyp\bin\node-gyp.js'
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:797:15)
    at Function.Module._load (internal/modules/cjs/loader.js:690:27)
    at Function.Module.runMain (internal/modules/cjs/loader.js:1047:10)
    at internal/main/run_main_module.js:17:11 {
  code: 'MODULE_NOT_FOUND',
  requireStack: []
}

+ opencv4nodejs@5.5.0
added 30 packages from 58 contributors in 11.993s

centos 7
nfo install using lib dir: /home/hg/ruanjian/appium/node_modules/opencv-build/opencv/build/lib
/home/hg/ruanjian/appium/node_modules/opencv4nodejs/install/install.js:45
  throw new Error('no OpenCV libraries found in lib dir: ' + libDir)
  ^

Error: no OpenCV libraries found in lib dir: /home/hg/ruanjian/appium/node_modules/opencv-build/opencv/build/lib
    at Object.<anonymous> (/home/hg/ruanjian/appium/node_modules/opencv4nodejs/install/install.js:45:9)
    at Module._compile (internal/modules/cjs/loader.js:959:30)
    at Object.Module._extensions..js (internal/modules/cjs/loader.js:995:10)
    at Module.load (internal/modules/cjs/loader.js:815:32)
    at Function.Module._load (internal/modules/cjs/loader.js:727:14)
    at Function.Module.runMain (internal/modules/cjs/loader.js:1047:10)
    at internal/main/run_main_module.js:17:11
npm WARN enoent ENOENT: no such file or directory, open '/home/hg/ruanjian/appium/package.json'
npm WARN appium No description
npm WARN appium No repository field.
npm WARN appium No README data
npm WARN appium No license field.

npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! opencv4nodejs@5.5.0 install: `node ./install/install.js`
npm ERR! Exit status 1
npm ERR! 
npm ERR! Failed at the opencv4nodejs@5.5.0 install script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
