A successor of #2433 trying to fix the ~~uncommon (and possibly broken)~~ unsound `SkinContext` design.
If linked against QT 5.14.0, the fader handles can become invisible, depending on the position of the handle. Fixes [lp:1857813](https://bugs.launchpad.net/mixxx/+bug/1857813)

Copying parts of my comments from launchpad.net:
> There was a svg viewport fix in 5.14 worth investigating
https://bugreports.qt.io/browse/QTBUG-70256

> Another aspect of the bug is that stretching images inside mixxx do not work as they used to be.
 As seen in OP´s video [#1](https://bugs.launchpad.net/mixxx/+bug/1857813/+attachment/5316231/+files/2019-12-29%2016-46-40.mkv). The crossfader slider stretch is off, compared with QT 5.13.

>  Also, at least on macOS, there are major performance issues with this specific QT version.
On my machine, mixxx is at 100% CPU even while idle, just trying to render images.

> It appears there have been some changes to the graphics stack .
https://wiki.qt.io/Qt_5.14_Release

 > As said, apparently there is an issue with mixxx internal STRETCH image function. The crossfader slider graphic ``slider-crossfader.svg`` does not stretch (expand) correct to the sliders widget size, but the ``slider-crossfader-AutoDJ.svg`` , active when using AUTODJ and defined in ``style.qss`` does.

**Post**:
<img width="359" alt="Screenshot 2020-01-17 at 12 02 05" src="https://user-images.githubusercontent.com/4525897/72611632-e9137e80-392a-11ea-99af-0e8315aeec63.png">

**Pre**:
<img width="359" alt="Screenshot 2020-01-17 at 12 18 46" src="https://user-images.githubusercontent.com/4525897/72611634-ec0e6f00-392a-11ea-9fff-1d69e402636e.png">

This fixes eslint warnings for Mixxx' JS files (that are not controller mappings) and the Roland DJ-505 mapping.

I'm aware that the coding guidelines state:
> Do not send us patches that are purely cosmetic with respect to source changes – this is a waste of time since it does not benefit users directly.

However, this also fixes an undeclared variable in `midi-components` (I'd consider this a bug) and I hope this is okay this time.
Mapping files for Hercules DJControl Inpulse 300

Changes to v1.2
- Code cleanup.

 Changes to v1.1
- Fix seek-to-start and cue-master behavior.
- Tweak scratch, seek, and bend behavior (User settigns).
- Controller knob/slider values are queried on startup, so MIXXX is synced.
- Fixed vinyl button behavior the first time it's pressed.

v1.0 : Original forum release
This adds a custom `.eslint.json` that's better suited for linting controller scripts. It will automatically be picked up by Codefactor.io and follow [our JS coding conventions](https://www.mixxx.org/wiki/doku.php/contributing_mappings#coding_conventions_for_javascript) more closely than the default config.

You can also use it locally, i.e.:
```bash
# Lint single file
$ eslint res/controllers/Roland_DJ-505-scripts.js
# Lint all *.js files in the repository
$ eslint .
```
The issue was that we have calculated the track duration via different functions. 
This leads to different rounding issues making equal checks fail. 

This fixes https://bugs.launchpad.net/mixxx/+bug/1858340, a high priority bug, that is mandatory for the 2.3 release. 

In addition this also fixes an issue where AutoDJ stops on high system loads conditions. 
This was my first assumption for the root cause of this bug.  
This is a alternative solution for a KeyError in `sources` when configure` is skipped:
https://github.com/mixxxdj/mixxx/commit/5a0e711f81541dd8e8b9e480cb0e9100d96e6feb

The commit is only in master so we must be remove it when merging 2.2 into master. 
Fix two regressions: The rate_perm buttons in the UI stopped working, because the rate slider connection ignores updates from the engine itself.  This is correct behavior, because doing so would create infinite signal loops.

Second, fixed the visual rate indicator showing up as "-100" before a track is played.
This adds an training mode. This should enable you to train with your
database and improve, but do not add your training to the play count. As
the play count should be related to the count that I have played this
song on events/broadcasts.

The design is done in a way that uses the Mixxx's Control System
functionality to comunicate between the gui and the actual counter
implementation.

This is my first contribution to mixxx. So feel free to give me feedback.

Changes should be backwards compatible and original behavior is not changed, when training mode is disabled.
Hi, this mapping support portable MIDI controller joyMIDI. Thanks
[Mixxx wiki (joyMIDI page)](https://www.mixxx.org/wiki/doku.php/soundless_studio_joymidi)