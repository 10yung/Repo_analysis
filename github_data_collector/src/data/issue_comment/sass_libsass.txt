Attempt to dump (using `@debug`) a map that contains list of map as value of map entry produces invalid Scss code.

Consider this small script:
```scss
@debug (
    a: ((x:1),(y:2)),
    b: (c:1),
);
```
Expected output: 
```
DEBUG: (a: ((x: 1), (y: 2)), b: (c: 1))
```
Actual output: 
```
DEBUG: (a: (x: 1), (y: 2), b: (c: 1))
```
Notice lack of surrounding brackets around value for `a` key of the map.

Component versions used into test (as shown by `sassc --version`), of freshly compiled libsass on Ubintu: 
```
sassc: 3.6.1-8-g3e73
libsass: 3.6.3-40-gf674
sass2scss: 1.1.1
sass: 3.5
```

Same output is produced by latest node-sass on Windows:
```
node-sass       4.13.0  (Wrapper)       [JavaScript]
libsass         3.5.4   (Sass Compiler) [C/C++]
```

dart-sass v1.24.1 generates correct output.
LibSass currently never throws "invalid CSS value" errors when a value is converted to a string via interpolation. For example:

```scss
a {b: #{(min-width: 10px)}}
```

is compiled to

```css
a {
  b: (min-width: 10px); }
```

It should instead throw an error, as should `#{get-function("rgb")}` and `#{()}`. Interestingly, `#{(1px/1em)}` *does* correctly throw an error.
I found Stack Overflow in sassc binary and sassc is complied with clang enabling ASAN.

**Machine Setup**

```
Machine : Ubuntu 16.04.3 LTS
gcc version : 5.4.0 20160609(Ubuntu 5.4.0-6ubuntu1~16.04.11)
Command : sassc poc
```
**Complilation** : CC=afl-clang-fast CXX=afl-clang-fast++ AFL_USE_ASAN=1 make -C sassc -j4
**POC :** [poc.txt](https://github.com/sass/libsass/files/3922250/poc.txt)

**ASAN Output:**

```
==465==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x602000000114 at pc 0x00000081db7b bp 0x7ffe64dc8c80 sp 0x7ffe64dc8c78
READ of size 1 at 0x602000000114 thread T0
    #0 0x81db7a in exactly<'\\'> /src/libsass/src/lexer.hpp:82:14
    #1 0x81db7a in sequence<&Sass::Prelexer::exactly, &Sass::Prelexer::re_linebreak> /src/libsass/src/lexer.hpp:216:20
    #2 0x81db7a in alternatives<&Sass::Prelexer::sequence, &Sass::Prelexer::escape_seq, &Sass::Prelexer::unicode_seq, &Sass::Prelexer::interpolant, &Sass::Prelexer::any_char_but> /src/libsass/src/lexer.hpp:200:19
    #3 0x81db7a in zero_plus<&Sass::Prelexer::alternatives> /src/libsass/src/lexer.hpp:234:30
    #4 0x81db7a in sequence<&Sass::Prelexer::zero_plus, &Sass::Prelexer::exactly> /src/libsass/src/lexer.hpp:216:20
    #5 0x81db7a in sequence<&Sass::Prelexer::exactly, &Sass::Prelexer::zero_plus, &Sass::Prelexer::exactly> /src/libsass/src/lexer.hpp:217:14
    #6 0x81db7a in single_quoted_string /src/libsass/src/prelexer.cpp:516:14
    #7 0x81db7a in alternatives<&Sass::Prelexer::single_quoted_string, &Sass::Prelexer::double_quoted_string> /src/libsass/src/lexer.hpp:200:19
    #8 0x81db7a in Sass::Prelexer::quoted_string(char const*) /src/libsass/src/prelexer.cpp:564:14
    #9 0x8359ac in char const* Sass::Prelexer::alternatives<&(Sass::Prelexer::quoted_string(char const*)), &(Sass::Prelexer::interpolant(char const*)), &(Sass::Prelexer::identifier(char const*)), &(Sass::Prelexer::variable(char const*)), &(Sass::Prelexer::percentage(char const*)), &(Sass::Prelexer::binomial(char const*)), &(Sass::Prelexer::dimension(char const*)), &(Sass::Prelexer::alnum(char const*))>(char const*) /src/libsass/src/lexer.hpp:200:19
    #10 0x8358ea in alternatives<&Sass::Prelexer::exactly, &Sass::Prelexer::quoted_string, &Sass::Prelexer::interpolant, &Sass::Prelexer::identifier, &Sass::Prelexer::variable, &Sass::Prelexer::percentage, &Sass::Prelexer::binomial, &Sass::Prelexer::dimension, &Sass::Prelexer::alnum> /src/libsass/src/lexer.hpp:201:14
    #11 0x8358ea in alternatives<&Sass::Prelexer::kwd_optional, &Sass::Prelexer::exactly, &Sass::Prelexer::quoted_string, &Sass::Prelexer::interpolant, &Sass::Prelexer::identifier, &Sass::Prelexer::variable, &Sass::Prelexer::percentage, &Sass::Prelexer::binomial, &Sass::Prelexer::dimension, &Sass::Prelexer::alnum> /src/libsass/src/lexer.hpp:201:14
    #12 0x8358ea in sequence<&Sass::Prelexer::alternatives> /src/libsass/src/lexer.hpp:210:20
    #13 0x8358ea in char const* Sass::Prelexer::sequence<&(char const* Sass::Prelexer::zero_plus<&(char const* Sass::Prelexer::sequence<&(char const* Sass::Prelexer::exactly<(char)45>(char const*)), &(Sass::Prelexer::optional_spaces(char const*))>(char const*))>(char const*)), &(char const* Sass::Prelexer::alternatives<&(Sass::Prelexer::kwd_optional(char const*)), &(char const* Sass::Prelexer::exactly<(char)42>(char const*)), &(Sass::Prelexer::quoted_string(char const*)), &(Sass::Prelexer::interpolant(char const*)), &(Sass::Prelexer::identifier(char const*)), &(Sass::Prelexer::variable(char const*)), &(Sass::Prelexer::percentage(char const*)), &(Sass::Prelexer::binomial(char const*)), &(Sass::Prelexer::dimension(char const*)), &(Sass::Prelexer::alnum(char const*))>(char const*))>(char const*) /src/libsass/src/lexer.hpp:217:14
    #14 0x83550d in one_plus<&Sass::Prelexer::sequence> /src/libsass/src/lexer.hpp:242:23
    #15 0x83550d in sequence<&Sass::Prelexer::one_plus, &Sass::Prelexer::zero_plus> /src/libsass/src/lexer.hpp:216:20
    #16 0x83550d in sequence<&Sass::Prelexer::alternatives, &Sass::Prelexer::one_plus, &Sass::Prelexer::zero_plus> /src/libsass/src/lexer.hpp:217:14
    #17 0x83550d in char const* Sass::Prelexer::sequence<&(char const* Sass::Prelexer::optional<&(Sass::Prelexer::namespace_schema(char const*))>(char const*)), &(char const* Sass::Prelexer::alternatives<&(char const* Sass::Prelexer::sequence<&(char const* Sass::Prelexer::exactly<(char)35>(char const*)), &(char const* Sass::Prelexer::negate<&(char const* Sass::Prelexer::exactly<(char)123>(char const*))>(char const*))>(char const*)), &(char const* Sass::Prelexer::exactly<(char)46>(char const*)), &(char const* Sass::Prelexer::sequence<&(char const* Sass::Prelexer::optional<&(Sass::Prelexer::pseudo_prefix(char const*))>(char const*)), &(char const* Sass::Prelexer::negate<&(Sass::Prelexer::uri_prefix(char const*))>(char const*))>(char const*))>(char const*)), &(char const* Sass::Prelexer::one_plus<&(char const* Sass::Prelexer::sequence<&(char const* Sass::Prelexer::zero_plus<&(char const* Sass::Prelexer::sequence<&(char const* Sass::Prelexer::exactly<(char)45>(char const*)), &(Sass::Prelexer::optional_spaces(char const*))>(char const*))>(char const*)), &(char const* Sass::Prelexer::alternatives<&(Sass::Prelexer::kwd_optional(char const*)), &(char const* Sass::Prelexer::exactly<(char)42>(char const*)), &(Sass::Prelexer::quoted_string(char const*)), &(Sass::Prelexer::interpolant(char const*)), &(Sass::Prelexer::identifier(char const*)), &(Sass::Prelexer::variable(char const*)), &(Sass::Prelexer::percentage(char const*)), &(Sass::Prelexer::binomial(char const*)), &(Sass::Prelexer::dimension(char const*)), &(Sass::Prelexer::alnum(char const*))>(char const*))>(char const*))>(char const*)), &(char const* Sass::Prelexer::zero_plus<&(char const* Sass::Prelexer::exactly<(char)45>(char const*))>(char const*))>(char const*) /src/libsass/src/lexer.hpp:217:14
    #18 0x82b9ee in alternatives<&Sass::Prelexer::block_comment, &Sass::Prelexer::line_comment, &Sass::Prelexer::schema_reference_combinator, &Sass::Prelexer::class_char, &Sass::Prelexer::class_char, &Sass::Prelexer::sequence, &Sass::Prelexer::alternatives, &Sass::Prelexer::sequence> /src/libsass/src/lexer.hpp:201:14
    #19 0x82b9ee in alternatives<&Sass::Prelexer::spaces, &Sass::Prelexer::block_comment, &Sass::Prelexer::line_comment, &Sass::Prelexer::schema_reference_combinator, &Sass::Prelexer::class_char, &Sass::Prelexer::class_char, &Sass::Prelexer::sequence, &Sass::Prelexer::alternatives, &Sass::Prelexer::sequence> /src/libsass/src/lexer.hpp:201:14
    #20 0x82b9ee in one_plus<&Sass::Prelexer::alternatives> /src/libsass/src/lexer.hpp:242:23
    #21 0x82b9ee in alternatives<&Sass::Prelexer::one_plus> /src/libsass/src/lexer.hpp:194:19
    #22 0x82b9ee in alternatives<&Sass::Prelexer::sequence, &Sass::Prelexer::one_plus> /src/libsass/src/lexer.hpp:201:14
    #23 0x82b9ee in Sass::Prelexer::re_selector_list(char const*) /src/libsass/src/prelexer.cpp:1643:14
    #24 0x71e885 in peek<&Sass::Prelexer::re_selector_list> /src/libsass/src/parser.hpp:140:27
    #25 0x71e885 in Sass::Parser::lookahead_for_selector(char const*) /src/libsass/src/parser.cpp:2630:7
    #26 0x6f4e0d in Sass::Parser::parse_block_node(bool) /src/libsass/src/parser.cpp:274:28
    #27 0x6ec35d in Sass::Parser::parse_block_nodes(bool) /src/libsass/src/parser.cpp:189:11
    #28 0x6e856b in Sass::Parser::parse() /src/libsass/src/parser.cpp:115:5
    #29 0x5a2968 in Sass::Context::register_resource(Sass::Include const&, Sass::Resource const&) /src/libsass/src/context.cpp:306:24
    #30 0x5b5654 in Sass::Data_Context::parse() /src/libsass/src/context.cpp:620:5
    #31 0x582635 in sass_parse_block /src/libsass/src/sass_context.cpp:180:31
    #32 0x582635 in sass_compiler_parse /src/libsass/src/sass_context.cpp:434:22
    #33 0x581b08 in sass_compile_context(Sass_Context*, Sass::Context*) /src/libsass/src/sass_context.cpp:317:7
    #34 0x57f786 in LLVMFuzzerTestOneInput /src/data_context_fuzzer.cc:26:3
    #35 0x485391 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:556:15
    #36 0x46feb1 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:292:6
    #37 0x475b6e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:774:9
    #38 0x49fa92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #39 0x7faf70aef82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)
    #40 0x449328 in _start (/out/data_context_fuzzer+0x449328)

0x602000000114 is located 0 bytes to the right of 4-byte region [0x602000000110,0x602000000114)
allocated by thread T0 here:
    #0 0x54cf2d in malloc /src/llvm-project/compiler-rt/lib/asan/asan_malloc_linux.cpp:145:3
    #1 0x57f700 in LLVMFuzzerTestOneInput /src/data_context_fuzzer.cc:4:29
    #2 0x485391 in fuzzer::Fuzzer::ExecuteCallback(unsigned char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerLoop.cpp:556:15
    #3 0x46feb1 in fuzzer::RunOneTest(fuzzer::Fuzzer*, char const*, unsigned long) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:292:6
    #4 0x475b6e in fuzzer::FuzzerDriver(int*, char***, int (*)(unsigned char const*, unsigned long)) /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerDriver.cpp:774:9
    #5 0x49fa92 in main /src/llvm-project/compiler-rt/lib/fuzzer/FuzzerMain.cpp:19:10
    #6 0x7faf70aef82f in __libc_start_main (/lib/x86_64-linux-gnu/libc.so.6+0x2082f)

SUMMARY: AddressSanitizer: heap-buffer-overflow /src/libsass/src/lexer.hpp:82:14 in exactly<'\\'>
Shadow bytes around the buggy address:
  0x0c047fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c047fff8000: fa fa fd fd fa fa fd fd fa fa 00 00 fa fa 00 fa
  0x0c047fff8010: fa fa 00 fa fa fa 00 fa fa fa 03 fa fa fa 03 fa
=>0x0c047fff8020: fa fa[04]fa fa fa 00 03 fa fa fd fa fa fa 06 fa
  0x0c047fff8030: fa fa 00 03 fa fa fd fa fa fa 00 fa fa fa 00 00
  0x0c047fff8040: fa fa 06 fa fa fa 06 fa fa fa 00 00 fa fa 06 fa
  0x0c047fff8050: fa fa 00 00 fa fa 04 fa fa fa fd fa fa fa 00 00
  0x0c047fff8060: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c047fff8070: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
  Shadow gap:              cc
==465==ABORTING
```

See https://github.com/sass/sass/issues/851. Blocked on #2807.
Passing non-string args has been deprecated for a while now. This
change fully disallows it.

Closes #2923
sass/sass-spec#1490

(new PR, accidentally deleted the original fork https://github.com/sass/libsass/pull/3017)
See https://github.com/sass/sass/issues/2780
See sass/sass#2772. Blocked on #2807.
E.g. quite a few documentations still refer to ruby sass ...
We found SEGV in sassc binary and sassc is complied with clang enabling ASAN.

**Machine Setup**
```
Machine : Ubuntu 16.04.3 LTS
gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.11)
Commit : d911058
Command : sassc POC
```
**Compilation** : CC=afl-clang-fast CXX=afl-clang-fast++ AFL_USE_ASAN=1 make -C sassc -j4
**POC** : [POC-2.zip](https://github.com/sass/libsass/files/3826015/POC-2.zip)

**ASAN Output**
```
fuzzer@thickfuzzer:~/libsass/sassc/bin$ ./sassc -v
sassc: 3.6.1-5-g507f0
libsass: 3.6.3-4-gd91105
sass2scss: 1.1.1
sass: 3.5

fuzzer@thickfuzzer:~/libsass/sassc/bin$ ./sassc POC-2
WARNING on line 2, column 65 of /home/fuzzer/libsass/sassc/bin/out/slave1/crashes/id:000001,sig:06,src:009931,time:74167268+013089,op:splice,rep:2:
Compound selectors may no longer be extended.
Consider `@extend *, *, *, *, *` instead.
See http://bit.ly/ExtendCompound for details.

ASAN:DEADLYSIGNAL
=================================================================
==30648==ERROR: AddressSanitizer: SEGV on unknown address 0x000000000000 (pc 0x000000b19131 bp 0x7ffef90dfd90 sp 0x7ffef90dfae0 T0)
    #0 0xb19130 in __gnu_cxx::__normal_iterator<Sass::Extension*, std::vector<Sass::Extension, std::allocator<Sass::Extension> > >::__normal_iterator(Sass::Extension* const&) /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_iterator.h:741:20
    #1 0xb19130 in std::vector<Sass::Extension, std::allocator<Sass::Extension> >::begin() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_vector.h:548
    #2 0xb19130 in std::vector<Sass::Extension, std::allocator<Sass::Extension> >::front() /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_vector.h:852
    #3 0xb19130 in Sass::ordered_map<Sass::SharedImpl<Sass::ComplexSelector>, Sass::Extension, Sass::ObjHash, Sass::ObjEquality, std::allocator<std::pair<Sass::SharedImpl<Sass::ComplexSelector> const, Sass::Extension> > >::front() /home/fuzzer/libsass/src/ordered_map.hpp:51
    #4 0xb19130 in Sass::Extender::checkForUnsatisfiedExtends(Sass::Extension&) const /home/fuzzer/libsass/src/extender.cpp:151
    #5 0x5b7492 in Sass::Context::compile() /home/fuzzer/libsass/src/context.cpp:654:9
    #6 0x5b1e09 in Sass::File_Context::parse() /home/fuzzer/libsass/src/context.cpp:579:12
    #7 0x55191e in Sass::sass_parse_block(Sass_Compiler*) /home/fuzzer/libsass/src/sass_context.cpp:180:22
    #8 0x55191e in sass_compiler_parse /home/fuzzer/libsass/src/sass_context.cpp:434
    #9 0x550394 in sass_compile_context(Sass_Context*, Sass::Context*) /home/fuzzer/libsass/src/sass_context.cpp:317:7
    #10 0x550a81 in sass_compile_file_context /home/fuzzer/libsass/src/sass_context.cpp:421:12
    #11 0x53f18e in compile_file /home/fuzzer/libsass/sassc/sassc.c:173:5
    #12 0x540244 in main /home/fuzzer/libsass/sassc/sassc.c:387:18
    #13 0x7f46437fd82f in __libc_start_main /build/glibc-LK5gWL/glibc-2.23/csu/../csu/libc-start.c:291
    #14 0x46d198 in _start (/home/fuzzer/libsass/sassc/bin/sassc+0x46d198)

AddressSanitizer can not provide additional info.
SUMMARY: AddressSanitizer: SEGV /usr/bin/../lib/gcc/x86_64-linux-gnu/5.4.0/../../../../include/c++/5.4.0/bits/stl_iterator.h:741:20 in __gnu_cxx::__normal_iterator<Sass::Extension*, std::vector<Sass::Extension, std::allocator<Sass::Extension> > >::__normal_iterator(Sass::Extension* const&)
==30648==ABORTING
fuzzer@thickfuzzer:~/libsass/sassc/bin$
```
We found Heap Buffer Overflow in sassc binary and sassc is complied with clang enabling ASAN.

**Machine Setup**
```
Machine : Ubuntu 16.04.3 LTS
gcc version 5.4.0 20160609 (Ubuntu 5.4.0-6ubuntu1~16.04.11)
Commit : d911058
Command : sassc POC
```
**Compilation** : CC=afl-clang-fast CXX=afl-clang-fast++ AFL_USE_ASAN=1 make -C sassc -j4
**POC** : [POC-1.zip](https://github.com/sass/libsass/files/3826012/POC-1.zip)


**ASAN Output**
```
fuzzer@thickfuzzer:~/libsass/sassc/bin$ ./sassc -v
sassc: 3.6.1-5-g507f0
libsass: 3.6.3-4-gd91105
sass2scss: 1.1.1
sass: 3.5

fuzzer@thickfuzzer:~/libsass/sassc/bin$ ./sassc POC-1
WARNING on line 1, column 212 of /home/fuzzer/libsass/sassc/bin/out/slave1/crashes/id:000002,sig:06,src:001609,time:89180642,op:havoc,rep:2:
Compound selectors may no longer be extended.
Consider `@extend *, *, *, *, *` instead.
See http://bit.ly/ExtendCompound for details.

WARNING on line 4, column 105 of /home/fuzzer/libsass/sassc/bin/out/slave1/crashes/id:000002,sig:06,src:001609,time:89180642,op:havoc,rep:2:
Compound selectors may no longer be extended.
Consider `@extend *, *, *, *, *` instead.
See http://bit.ly/ExtendCompound for details.

=================================================================
==4255==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x60600000a0f8 at pc 0x000000be410b bp 0x7ffccbe0b070 sp 0x7ffccbe0b068
READ of size 8 at 0x60600000a0f8 thread T0
    #0 0xbe410a in Sass::SharedPtr::obj() const /home/fuzzer/libsass/src/memory/SharedPtr.hpp:147:37
    #1 0xbe410a in Sass::SharedImpl<Sass::SelectorComponent>::operator Sass::SelectorComponent*() const /home/fuzzer/libsass/src/memory/SharedPtr.hpp:215
    #2 0xbe410a in Sass::Inspect::operator()(Sass::SelectorList*) /home/fuzzer/libsass/src/inspect.cpp:1036
    #3 0xbe1eca in Sass::SelectorList::perform(Sass::Operation<void>*) /home/fuzzer/libsass/src/ast_selectors.hpp:492:5
    #4 0xbe1eca in Sass::Inspect::operator()(Sass::Pseudo_Selector*) /home/fuzzer/libsass/src/inspect.cpp:999
    #5 0xbe54b1 in Sass::Inspect::operator()(Sass::CompoundSelector*) /home/fuzzer/libsass/src/inspect.cpp:1095:7
    #6 0xbe4c55 in Sass::Inspect::operator()(Sass::ComplexSelector*) /home/fuzzer/libsass/src/inspect.cpp:1076:7
    #7 0xbe376c in Sass::ComplexSelector::perform(Sass::Operation<void>*) /home/fuzzer/libsass/src/ast_selectors.hpp:303:5
    #8 0xbe376c in Sass::Inspect::operator()(Sass::SelectorList*) /home/fuzzer/libsass/src/inspect.cpp:1038
    #9 0xbe1eca in Sass::SelectorList::perform(Sass::Operation<void>*) /home/fuzzer/libsass/src/ast_selectors.hpp:492:5
    #10 0xbe1eca in Sass::Inspect::operator()(Sass::Pseudo_Selector*) /home/fuzzer/libsass/src/inspect.cpp:999
    #11 0xbe54b1 in Sass::Inspect::operator()(Sass::CompoundSelector*) /home/fuzzer/libsass/src/inspect.cpp:1095:7
    #12 0xbe4c55 in Sass::Inspect::operator()(Sass::ComplexSelector*) /home/fuzzer/libsass/src/inspect.cpp:1076:7
    #13 0xbe376c in Sass::ComplexSelector::perform(Sass::Operation<void>*) /home/fuzzer/libsass/src/ast_selectors.hpp:303:5
    #14 0xbe376c in Sass::Inspect::operator()(Sass::SelectorList*) /home/fuzzer/libsass/src/inspect.cpp:1038
    #15 0xbe1eca in Sass::SelectorList::perform(Sass::Operation<void>*) /home/fuzzer/libsass/src/ast_selectors.hpp:492:5
    #16 0xbe1eca in Sass::Inspect::operator()(Sass::Pseudo_Selector*) /home/fuzzer/libsass/src/inspect.cpp:999
    #17 0xbe54b1 in Sass::Inspect::operator()(Sass::CompoundSelector*) /home/fuzzer/libsass/src/inspect.cpp:1095:7
    #18 0xbe4c55 in Sass::Inspect::operator()(Sass::ComplexSelector*) /home/fuzzer/libsass/src/inspect.cpp:1076:7
    #19 0xbe376c in Sass::ComplexSelector::perform(Sass::Operation<void>*) /home/fuzzer/libsass/src/ast_selectors.hpp:303:5
    #20 0xbe376c in Sass::Inspect::operator()(Sass::SelectorList*) /home/fuzzer/libsass/src/inspect.cpp:1038
    #21 0xbc5bbe in Sass::Inspect::operator()(Sass::List*) /home/fuzzer/libsass/src/inspect.cpp:478:7
    #22 0xbb5856 in Sass::Inspect::operator()(Sass::Declaration*) /home/fuzzer/libsass/src/inspect.cpp:186:7
    #23 0xb9e650 in Sass::Output::operator()(Sass::Ruleset*) /home/fuzzer/libsass/src/output.cpp:172:9
    #24 0xbac476 in Sass::Inspect::operator()(Sass::Block*) /home/fuzzer/libsass/src/inspect.cpp:35:7
    #25 0x5ac357 in Sass::Block::perform(Sass::Operation<void>*) /home/fuzzer/libsass/src/ast.hpp:512:5
    #26 0x5ac357 in Sass::Context::render(Sass::SharedImpl<Sass::Block>) /home/fuzzer/libsass/src/context.cpp:497
    #27 0x55363b in sass_compiler_execute /home/fuzzer/libsass/src/sass_context.cpp:453:44
    #28 0x55039c in sass_compile_context(Sass_Context*, Sass::Context*) /home/fuzzer/libsass/src/sass_context.cpp:318:7
    #29 0x550a81 in sass_compile_file_context /home/fuzzer/libsass/src/sass_context.cpp:421:12
    #30 0x53f18e in compile_file /home/fuzzer/libsass/sassc/sassc.c:173:5
    #31 0x540244 in main /home/fuzzer/libsass/sassc/sassc.c:387:18
    #32 0x7f05fca0282f in __libc_start_main /build/glibc-LK5gWL/glibc-2.23/csu/../csu/libc-start.c:291
    #33 0x46d198 in _start (/home/fuzzer/libsass/sassc/bin/sassc+0x46d198)

0x60600000a0f8 is located 8 bytes to the left of 64-byte region [0x60600000a100,0x60600000a140)
allocated by thread T0 here:
    #0 0x50d2c8 in __interceptor_malloc (/home/fuzzer/libsass/sassc/bin/sassc+0x50d2c8)
    #1 0x7f05fd474e77 in operator new(unsigned long) (/usr/lib/x86_64-linux-gnu/libstdc++.so.6+0x8de77)

SUMMARY: AddressSanitizer: heap-buffer-overflow /home/fuzzer/libsass/src/memory/SharedPtr.hpp:147:37 in Sass::SharedPtr::obj() const
Shadow bytes around the buggy address:
  0x0c0c7fff93c0: fd fd fd fd fd fd fd fa fa fa fa fa 00 00 00 00
  0x0c0c7fff93d0: 00 00 00 00 fa fa fa fa fd fd fd fd fd fd fd fa
  0x0c0c7fff93e0: fa fa fa fa fd fd fd fd fd fd fd fa fa fa fa fa
  0x0c0c7fff93f0: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd
  0x0c0c7fff9400: fd fd fd fa fa fa fa fa 00 00 00 00 00 00 00 00
=>0x0c0c7fff9410: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa[fa]
  0x0c0c7fff9420: 00 00 00 00 00 00 00 00 fa fa fa fa fd fd fd fd
  0x0c0c7fff9430: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd
  0x0c0c7fff9440: fa fa fa fa fd fd fd fd fd fd fd fd fa fa fa fa
  0x0c0c7fff9450: fd fd fd fd fd fd fd fd fa fa fa fa fd fd fd fd
  0x0c0c7fff9460: fd fd fd fd fa fa fa fa fd fd fd fd fd fd fd fd
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07
  Heap left redzone:       fa
  Heap right redzone:      fb
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack partial redzone:   f4
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==4255==ABORTING
```