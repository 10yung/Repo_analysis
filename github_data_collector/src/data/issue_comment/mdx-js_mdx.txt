Can't resolve 'fs' in '@mdx-js/runtime'
<!--
Ouch, sorry you’ve run into a bug.  Thank for taking the time to report it!

Please fill in as much of the template below as you’re able.

P.S. have you seen our support and contributing docs?
https://mdxjs.com/support
https://mdxjs.com/contributing
-->

### Subject of the issue

*Feel free to close if this is not a bug (or bug of some other library).*

I'm trying to render the following

    ```
    python command subdir=\${model.nb_layers}
    ```

but it crashes because MDX tries to evaluate the contents of the `${...}`. I suspect some double escaping occurs and the problem (if indeed a problem) lies in this [line](https://github.com/mdx-js/mdx/blob/master/packages/util/index.js#L32). Or it could be a remark issue. Not entirely sure which.

I also posted on Spectrum [here](https://spectrum.chat/mdx/general/render-in-mdx-code-block~c04330c7-d0e0-4826-a59b-0c185a18036a) because I wasn't sure whether this was a bug.

### Your environment

*   **OS**: macOS 10.15.1
*   **Packages**: `@mdx-js/mdx@1.15.1`
*   **Env**: Node 8.16.2, Yarn 1.16.0

### Steps to reproduce

Repo here - https://github.com/yangshun/hydra/blame/master/website/docs/configure_hydra/workdir.md#L67-L69

### Expected behaviour

Renders fine. It renders ok for GFM.

### Actual behaviour

MDX tries to evaluate the contents of the `${...}`. I suspect some double escaping occurs. 

### Subject of the issue

I just tried to create a mdx project for vue and the links are being shown without `href` attribute.

### Your environment

*   **OS**: `Ubuntu 19.10`
*   **Env**: `yarn 1.21.1` `node 12.13.0`

### Steps to reproduce

1. Run `npm init mdx vue`
2. Add a link like `<https://mdxjs.com>` or `[MDX](https://mdxjs.com)` in the `test.mdx` file
3. Build the project or run `yarn serve`
4. Open in the browser to see the results

### Expected behaviour

A link with the `href` attribute.

### Actual behaviour

A link with just a `parentname` attribute, like this: `<a parentname="p">stuff</a>`

# Dynamic Imports babel error

I am using MDX format for demoing my components in Storybook. The problem I am facing is that I use dynamic imports in my demos, some of my components rely on this heavily and I want to demonstrate it.

When I try to use dynamic imports inside .mdx files (I use latest Google Chrome stable), babel complains that I should add a babel plugin for this feature. 

I first opened an issue [here](https://github.com/open-wc/open-wc/issues/1168) and they helped to track it down to the ToJSX function which has babel plugins hardcoded https://github.com/mdx-js/mdx/blob/master/packages/mdx/mdx-hast-to-jsx.js#L119 . I **think** this is why I am getting the error: 
```
SyntaxError: unknown: Support for the experimental syntax 'dynamicImport' isn't currently enabled (120:14):
  
    118 |   {html`
    119 |     <lion-icon
  > 120 |       .svg=${import('./icons/bugs/bug05.svg.js')}
        |              ^
    121 |       aria-label="Skinny dung beatle"
    122 |     ></lion-icon>
    123 |   `}
  
  Add @babel/plugin-syntax-dynamic-import (https://git.io/vb4Sv) to the 'plugins' section of your Babel config to enable parsing.
      at Object.raise (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:6983:17)
      at Object.expectPlugin (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:8381:18)
      at Object.parseExprAtom (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:9473:14)
      at Object.parseExprAtom (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:4097:20)
      at Object.parseExprSubscripts (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:9213:23)
      at Object.parseMaybeUnary (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:9193:21)
      at Object.parseExprOps (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:9059:23)
      at Object.parseMaybeConditional (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:9032:23)
      at Object.parseMaybeAssign (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:8978:21)
      at Object.parseExpression (/home/joren/code/lion/node_modules/@babel/parser/lib/index.js:8928:23)
```

Does it make sense for you guys to add the babel plugin for dynamic imports, so it works in MDX?

### Your environment

*   **OS**: MacOS Mojave 10.14.6
*   **Packages**: `@open-wc/demoing-storybook`  or use `npm init @open-wc` to scaffold the necessary files for Storybook.
*   **Env**:  latest Google Chrome stable, node v13.3.0, npm 6.13.2, yarn 1.21.1

### Steps to reproduce

1. `npm init @open-wc`
2. Scaffold a new project
3. Web Component
4. Toggle "Demoing"
5. Toggle "Demoing" again for example files
6. Install with yarn or npm
7. Files are now scaffolded under the folder name of your choice
8. Go into /stories/index.stories.mdx
9. Replace the following code in the first Story:
  ```js
  {html`
    <my-wc-demo></my-wc-demo>
  `}
  ```
  with 
  ```js
  {() => {
    import('../something.js');
    return html`
      <my-wc-demo></my-wc-demo>
    `;
  }}
  ```
  So now it has a dynamic import statement.
10. Run `npm run storybook` or `yarn storybook`
11. Witness the error that I am reporting ;)

### Expected behaviour

It should give an error that it cannot find the file `../something.js` because this does not exist (in my reproduction example).
With a real example, it should dynamically import the existing file without errors.

### Actual behaviour

A SyntaxError occurs on the dynamic import statement, "Support for the experimental syntax 'dynamicImport' isn't currently enabled. Add @babel/plugin-syntax-dynamic-import (https://git.io/vb4Sv) to the 'plugins' section of your Babel config to enable parsing."

Hopefully I have given you guys enough information about the problem. I don't know what solution makes most sense for you guys, let me know if you need more information from my side! Happy to send a PR if you guys agree that the solution is to add the plugin.

@mdx-js/maintainers 

See https://github.com/mdx-js/mdx/pull/877/files#diff-2c021ef745b66bae059c12ee2e1663caR21
@mdx-js/maintainers 

Moved from https://spectrum.chat/mdx/general/discussion-remove-travis-ci-and-circle-ci-in-favor-of-github-actions~15924049-6f7f-4c03-8a50-984788848671 due to https://spectrum.chat/mdx/general/discussion-remove-travis-ci-and-circle-ci-in-favor-of-github-actions~15924049-6f7f-4c03-8a50-984788848671?m=MTU3NTIzODUzOTc1NQ==.
Just got this error when using `eslint-mdx`
<!--
Thank you for suggesting an idea to make this project better!

Please fill in as much of the template below as you’re able.

P.S. have you seen our support and contributing docs?
https://mdxjs.com/support
https://mdxjs.com/contributing
-->

### Subject of the feature

Relax dependency versions.

### Problem

See https://github.com/mdx-js/mdx/pull/858#issuecomment-563336666. Essentially, when installing an MDX package such as `@mdx-js/mdx`, I would rather not have a pinned version of any `@babel/*` dependencies installed - this causes duplicate versions and can plausibly lead to subtle bugs. If you look at https://unpkg.com/@mdx-js/mdx@1.5.1/package.json, you'll see `@babel/core` `7.6.2` gets installed, as well as fixed versions for `@babel/plugin-syntax-jsx` and `@babel/plugin-syntax-object-rest-spread`.

### Expected behavior

Dependencies should use carets (e.g. `^7.6.2`).

### Alternatives

Yarn users are able to use things like Yarn [resolutions](https://yarnpkg.com/lang/en/docs/selective-version-resolutions/) but it's not ideal to have to resort to resolutions.

/cc @JounQin @johno 
### Subject of the issue

After setting up the vue-loader as described in the setup documentation, I'm getting the following:

```
Unknown custom element: <wrapper> - did you register the component correctly? For recursive components, make sure to provide the "name" option.
```

Also, it seems that the @mdx-js/vue package isn't exporting its mdx-provider. Shouldn't it be :)? Otherwise how do I use it without duplicating it in my own repo. I know it's relatively new, so thinking this may just be an issue.
### Your environment

*   **OS**: OSX Mojave
*   **Env**: yarn, chrome 78.0.3904.108 

### Steps to reproduce
Run `npm init mdx vue` to setup a new vue project and then proceed to run it with 'yarn serve'. Once running, view the console and you'll see the warning I posted above.

### Expected behaviour
I shouldn't be seeing warnings, and the mdx-provider should be exported so it can be used.

### Actual behaviour
I'm seeing warnings in the console as described above. The mdx-provider isn't be exported like it should be. I may try to debug this tomorrow by forking the @mdx-js/vue to see if I can further diagnose the issue and possibly do a PR to fix it. Assuming it's actually an issue.

Thanks for the hard work you've put into this project. It's fantastic.
A bit related to GH-696 I guess, the readme for mdx-js/vue on npm and GH is missing!