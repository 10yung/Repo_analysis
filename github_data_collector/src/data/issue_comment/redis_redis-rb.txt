This error is occasionally raised when trying to use the value of a future after a pipeline block, using version 4.0.1. Is this expected and is there a recommended best practice for handling this error and/or ensuring that the pipeline has executed before accessing the value?

The code looks something like

```
redis.pipelined do
  a_key = 'a_key_name'
  another_key = 'another_key_name'
  @a_key_exists = redis.exists(a_key)
  @another_key_data = redis.hmget(another_key)
end

x, y = @another_key_data.value
```
When calling `exists` with multiple keys, the return value depending on the arguments could be either a Boolean or an Integer.

This PR aims to fix that by creating a new method called `mexists` that accepts an array of keys

Example of `exists`

```ruby
redis.set("foo", "world")
=> "OK"
[3] pry(main)> redis.exists(['foo', 'foo2'])
=> true
[4] pry(main)> redis.exists(['foo3', 'foo2'])
=> false
[5] pry(main)> redis.exists(['foo', 'foo2'])
=> true
[6] pry(main)> redis.set('foo2', 'world')
=> "OK"
[7] pry(main)> redis.exists(['foo', 'foo2'])
=> 2
```

Example of `exists`

```ruby
redis.set("foo", "world")
=> "OK"
[3] pry(main)> redis.mexists(['foo', 'foo2'])
=> 1
[4] pry(main)> redis.exists(['foo3', 'foo2'])
=> 0
[5] pry(main)> redis.set('foo2', 'world')
=> "OK"
[7] pry(main)> redis.exists(['foo', 'foo2'])
=> 2
```




**Feature Request:**

Support for ACLs w/ Redis 6:

In worlds where multiple users exist we may want users to do perform different Redis operations. We may also want to restrict them to specific keys. This will help security-conscious users and enterprises restrict clients and users to the least amount of privilege required to perform their function. With the planned implementation of ACLs in Redis 6, ecosystem drivers should begin aligning to support this. 

In Antirez's words:
**When ACLs are useful**
1. You want to improve security by restricting access to commands and keys so that untrusted clients have no access and trusted clients have just the minimum access level to the database in order to perform the work needed. For instance, certain clients may just be able to execute read-only commands.
2. You want to improve operational safety, so that processes or humans accessing Redis are not allowed, because of software errors or manual mistakes, to damage the data or the configuration. For instance, there is no reason for a worker that fetches delayed jobs from Redis to be able to call the FLUSHALL command.


**Commands in Scope Currently w/ Redis 6:**
 * Multiple Arguments for AUTH (username and password)
 * ACL HELP  -- provides help information (listed below) 
 * ACL LOAD  -- Reload users from the ACL file.
 * ACL LIST  -- Show user details in config file format.
 * ACL USERS  -- List all the registered usernames.
 * ACL CAT [<category>]   -- List available categories // -- List commands inside category.
 * ACL SETUSER <username> ... acl rules ... -- Create or modify a user
 * ACL DELUSER <username> [...] -- Delete a list of users."
 * ACL GETUSER <username> - Get the user details.
 * ACL GENPASS - Generate a secure password
 * ACL WHOAMI - Return the current connection username.
 
 **Error Checking**
 1. No Permissions when a user does not have permission to a command or key (when error for commands or keys)
 2. Username does not exist (getuser, deluser)

**References:**
https://redis.io/topics/acl
https://github.com/antirez/redis/blob/0cabe0cfa7290d9b14596ec38e0d0a22df65d1df/src/acl.c
Hi.

We have a problem with random passwords generated in a hosted Redis service and this gem. The service generate passwords like `sJ3RAYkWN8SlBu4y1+hpIGoNCdMlO+XQehqs=`. If we create the following redis url `redis://:sJ3RAYkWN8SlBu4y1+hpIGoNCdMlO+XQehqs=@myredisservice.net:6379` and pass it to `Redis.new` command, we get an error in password:

```
[1] pry(main)> redis = Redis.new(url: 'redis://:sJ3RAYkWN8SlBu4y1+hpIGoNCdMlO+XQehqs=@myredisservice.net:6379')
=> #<Redis client v4.1.2 for redis://myredisservice.net:6379/0>
[2] pry(main)> redis.set("mykey", "hello world")
Redis::CommandError: ERR invalid password
```

Investigating the source code, in [this](https://github.com/redis/redis-rb/blob/master/lib/redis/client.rb#L434) line you are using this code: 

```ruby
defaults[:password] = CGI.unescape(uri.password) if uri.password
```

It's an error? We must escape the URI? If it's the second case may be very interesant to put a note in README file about this for prevent future issues.

Thanks.
We've been having some issues with a threaded app that is using a connection pool too manage multiple Redis connections with this gem. On start-up, we intermittently get IOError exceptions. I've been digging through the code base, but have had no luck pinpointing the issue.

I did try both the latest release (4.0.3) and head (9101933).

Not sure if it's a bug or an issue with how the gem is being used, but I'm hoping for some assistance.

```
IOError: closed stream
    write_nonblock at org/jruby/RubyIO.java:1365
  _write_to_socket at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/connection/ruby.rb:87
             write at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/connection/ruby.rb:113
              loop at org/jruby/RubyKernel.java:1425
             write at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/connection/ruby.rb:112
             write at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/connection/ruby.rb:380
             write at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:281
                io at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:260
             write at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:279
           process at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:238
              each at org/jruby/RubyArray.java:1792
           process at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:232
  ensure_connected at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:384
           process at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:231
           logging at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:339
           process at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:230
              call at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis/client.rb:125
               get at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis.rb:914
       synchronize at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis.rb:52
   mon_synchronize at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/monitor.rb:226
       synchronize at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis.rb:52
               get at /jruby-app/vendor/bundler/jruby/2.5.0/bundler/gems/redis-rb-9101933c84d1/lib/redis.rb:913
               get at /lib/redis/redis_store.rb:71
              with at /jruby-app/vendor/bundler/jruby/2.5.0/gems/connection_pool-2.2.2/lib/connection_pool.rb:65
  handle_interrupt at org/jruby/RubyThread.java:759
              with at /jruby-app/vendor/bundler/jruby/2.5.0/gems/connection_pool-2.2.2/lib/connection_pool.rb:64
  handle_interrupt at org/jruby/RubyThread.java:759
              with at /jruby-app/vendor/bundler/jruby/2.5.0/gems/connection_pool-2.2.2/lib/connection_pool.rb:61
```

If it's relevant, I'm creating the pool like so:
```ruby
pool = ConnectionPool.new(size: pool_size, timeout: pool_timeout) do
    Redis.new(redis_config)
end
```
I found a slow test case.
https://travis-ci.org/redis/redis-rb/jobs/539118520

> SslTest#test_connection_to_non_ssl_server = 60.07 s = .

https://github.com/redis/redis-rb/blob/9101933c84d11f08794466ad0903467958e014ba/test/ssl_test.rb#L9-L14
Can anyone help me how to fix this issue? I've tried reinstalling both redis and redis gem, but I'm still getting this segmentation fault error when I'm loading it from the Ruby console.

Looking for any feedback on this. Thanks!

<details>
<summary>Here's my crash report log</summary>
<p>

```
-- Control frame information -----------------------------------------------
c:0060 p:---- s:0253 e:000252 CFUNC  :getaddrinfo
c:0059 p:0037 s:0246 e:000245 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/connection/ruby.rb:152
c:0058 p:0072 s:0239 e:000238 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/connection/ruby.rb:211
c:0057 p:0070 s:0233 e:000232 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:322
c:0056 p:0007 s:0229 e:000228 BLOCK  /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:94
c:0055 p:0024 s:0227 e:000226 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:279
c:0054 p:0023 s:0222 e:000221 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:93
c:0053 p:0092 s:0219 e:000218 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:350
c:0052 p:0007 s:0215 e:000214 BLOCK  /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:207
c:0051 p:0020 s:0213 e:000212 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:292
c:0050 p:0009 s:0208 e:000207 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:206
c:0049 p:0011 s:0204 e:000203 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:112
c:0048 p:0014 s:0198 e:000197 BLOCK  /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis.rb:789
c:0047 p:0009 s:0195 e:000194 BLOCK  /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis.rb:37
c:0046 p:0014 s:0193 e:000192 METHOD /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/monitor.rb:211
c:0045 p:0007 s:0190 e:000189 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis.rb:37
c:0044 p:0007 s:0187 e:000186 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis.rb:788
c:0043 p:0052 s:0183 e:000182 METHOD /Users/fred/spuul/lib/redis_client.rb:48
c:0042 p:0013 s:0177 e:000176 METHOD /Users/fred/spuul/lib/redis_client.rb:11
c:0041 p:0015 s:0171 e:000170 EVAL   (irb):2 [FINISH]
c:0040 p:---- s:0169 e:000168 CFUNC  :eval
c:0039 p:0024 s:0162 e:000161 METHOD /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/workspace.rb:86
c:0038 p:0025 s:0155 e:000153 METHOD /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/context.rb:380
c:0037 p:0022 s:0149 e:000148 BLOCK  /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:492
c:0036 p:0040 s:0141 e:000140 METHOD /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:624
c:0035 p:0009 s:0136 e:000135 BLOCK  /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:489
c:0034 p:0118 s:0132 e:000131 BLOCK  /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/ruby-lex.rb:247 [FINISH]
c:0033 p:---- s:0129 e:000128 CFUNC  :loop
c:0032 p:0007 s:0126 E:0009b8 BLOCK  /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/ruby-lex.rb:233 [FINISH]
c:0031 p:---- s:0124 e:000123 CFUNC  :catch
c:0030 p:0015 s:0120 E:001788 METHOD /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/ruby-lex.rb:232
c:0029 p:0030 s:0117 E:000b98 METHOD /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:488
c:0028 p:0008 s:0114 E:002358 BLOCK  /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:397 [FINISH]
c:0027 p:---- s:0112 e:000111 CFUNC  :catch
c:0026 p:0143 s:0108 E:000a08 METHOD /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:396
c:0025 p:0158 s:0103 E:001088 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/railties-4.0.0/lib/rails/commands/console.rb:90
c:0024 p:0011 s:0100 E:001bc0 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/railties-4.0.0/lib/rails/commands/console.rb:9
c:0023 p:0508 s:0096 E:000418 TOP    /Users/fred/.rvm/gems/ruby-2.1.9/gems/railties-4.0.0/lib/rails/commands.rb:64 [FINISH]
c:0022 p:---- s:0090 e:000089 CFUNC  :require
c:0021 p:0010 s:0086 E:001648 BLOCK  /Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:228
c:0020 p:0054 s:0084 E:000bd8 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:213
c:0019 p:0015 s:0079 E:0018b8 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:228
c:0018 p:0067 s:0074 E:001578 TOP    /Users/fred/spuul/bin/rails:10 [FINISH]
c:0017 p:---- s:0072 e:000071 CFUNC  :load
c:0016 p:0012 s:0067 E:000ab8 BLOCK  /Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222
c:0015 p:0054 s:0065 E:001808 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:213
c:0014 p:0019 s:0060 E:002260 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222
c:0013 p:0049 s:0054 E:000578 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/commands/rails.rb:6
c:0012 p:0020 s:0051 E:0012a8 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/command_wrapper.rb:38
c:0011 p:0132 s:0048 E:001198 BLOCK  /Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:183 [FINISH]
c:0010 p:---- s:0046 e:000045 CFUNC  :fork
c:0009 p:0198 s:0043 E:001c38 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:156
c:0008 p:0065 s:0030 E:000ef8 BLOCK  /Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:131 [FINISH]
c:0007 p:---- s:0028 e:000027 CFUNC  :loop
c:0006 p:0023 s:0025 E:000078 METHOD /Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:125
c:0005 p:0128 s:0022 E:000810 TOP    /Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application/boot.rb:18 [FINISH]
c:0004 p:---- s:0019 e:000018 CFUNC  :require
c:0003 p:0121 s:0015 E:002038 METHOD /Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/site_ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55
c:0002 p:0007 s:0004 E:0014b8 EVAL   -e:1 [FINISH]
c:0001 p:0000 s:0002 E:0022a8 TOP    [FINISH]

-e:1:in `<main>'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/site_ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/site_ruby/2.1.0/rubygems/core_ext/kernel_require.rb:55:in `require'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application/boot.rb:18:in `<top (required)>'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:125:in `run'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:125:in `loop'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:131:in `block in run'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:156:in `serve'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:156:in `fork'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/application.rb:183:in `block in serve'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/command_wrapper.rb:38:in `call'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/spring-1.4.0/lib/spring/commands/rails.rb:6:in `call'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222:in `load'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:213:in `load_dependency'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222:in `block in load'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:222:in `load'
/Users/fred/spuul/bin/rails:10:in `<top (required)>'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:228:in `require'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:213:in `load_dependency'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:228:in `block in require'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/activesupport-4.0.0/lib/active_support/dependencies.rb:228:in `require'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/railties-4.0.0/lib/rails/commands.rb:64:in `<top (required)>'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/railties-4.0.0/lib/rails/commands/console.rb:9:in `start'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/railties-4.0.0/lib/rails/commands/console.rb:90:in `start'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:396:in `start'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:396:in `catch'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:397:in `block in start'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:488:in `eval_input'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/ruby-lex.rb:232:in `each_top_level_statement'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/ruby-lex.rb:232:in `catch'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/ruby-lex.rb:233:in `block in each_top_level_statement'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/ruby-lex.rb:233:in `loop'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/ruby-lex.rb:247:in `block (2 levels) in each_top_level_statement'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:489:in `block in eval_input'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:624:in `signal_status'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb.rb:492:in `block (2 levels) in eval_input'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/context.rb:380:in `evaluate'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/workspace.rb:86:in `evaluate'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/irb/workspace.rb:86:in `eval'
(irb):2:in `irb_binding'
/Users/fred/spuul/lib/redis_client.rb:11:in `fetch'
/Users/fred/spuul/lib/redis_client.rb:48:in `read'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis.rb:788:in `get'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis.rb:37:in `synchronize'
/Users/fred/.rvm/rubies/ruby-2.1.9/lib/ruby/2.1.0/monitor.rb:211:in `mon_synchronize'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis.rb:37:in `block in synchronize'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis.rb:789:in `block in get'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:112:in `call'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:206:in `process'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:292:in `logging'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:207:in `block in process'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:350:in `ensure_connected'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:93:in `connect'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:279:in `with_reconnect'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:94:in `block in connect'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/client.rb:322:in `establish_connection'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/connection/ruby.rb:211:in `connect'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/connection/ruby.rb:152:in `connect'
/Users/fred/.rvm/gems/ruby-2.1.9/gems/redis-3.2.1/lib/redis/connection/ruby.rb:152:in `getaddrinfo'

-- C level backtrace information -------------------------------------------
0   libruby.2.1.0.dylib                 0x000000010e360b4a rb_vm_bugreport + 138
1   libruby.2.1.0.dylib                 0x000000010e2115f6 report_bug + 294
2   libruby.2.1.0.dylib                 0x000000010e2114c4 rb_bug + 180
3   libruby.2.1.0.dylib                 0x000000010e2e0479 sigsegv + 137
4   libsystem_platform.dylib            0x00007fff636d7b5d _sigtramp + 29
5   libsystem_trace.dylib               0x00007fff636fa90a _os_log_preferences_refresh + 76
6   ???                                 0x0000000000000000 0x0 + 0

Since update to 4.1.1, gem tries to send `auth` command to sentinels, if password is provided.

It does not work for redis 4 setup where only redis servers, but not sentinels, do support the auth command.

```
ERR unknown command 'auth'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:126:in `call'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:107:in `block in connect'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:306:in `with_reconnect'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:105:in `connect'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:381:in `ensure_connected'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:231:in `block in process'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:319:in `logging'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:230:in `process'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:125:in `call'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:607:in `block in resolve_master'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:584:in `block in sentinel_detect'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:576:in `each'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:576:in `sentinel_detect'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:606:in `resolve_master'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:565:in `resolve'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:344:in `establish_connection'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:106:in `block in connect'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:306:in `with_reconnect'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:105:in `connect'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:381:in `ensure_connected'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:231:in `block in process'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:319:in `logging'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:230:in `process'
...gems/2.6.0/gems/redis-4.1.1/lib/redis/client.rb:125:in `call'
...gems/2.6.0/gems/redis-4.1.1/lib/redis.rb:1447:in `block in smembers'
...gems/2.6.0/gems/redis-4.1.1/lib/redis.rb:52:in `block in synchronize'
...2.6.0/monitor.rb:230:in `mon_synchronize'
...gems/2.6.0/gems/redis-4.1.1/lib/redis.rb:52:in `synchronize'
...gems/2.6.0/gems/redis-4.1.1/lib/redis.rb:1446:in `smembers'
```
I not sure is this exactly a bug in `redis-rb` or `fakeredis`, but starting from v.4.1.1 return value was changed as following:

v.4.1.0 
```
p Redis.current.set("aaa", "aaa")
# "OK"
p Redis.current.set("aaa", "aaa", nx: true)
# false
```

v.4.1.1 **only in test env with fakeredis** (in dev env with normal redis returns `false`)
```
p Redis.current.set("aaa", "aaa")
# "OK"
p Redis.current.set("aaa", "aaa", nx: true)
# 0
```
The documentation for using SSL says

`To enable SSL support, pass the :ssl => :true`

however, code that checks this doesn't check for the symbol :true, it checks for truthiness, so setting any truthy value enables SSL (for example, :ssl => :false will enable SSL, which is not expected from the way the docs read)