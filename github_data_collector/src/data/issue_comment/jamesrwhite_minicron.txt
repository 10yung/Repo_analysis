Hi ,

When I add host in UI, I always get test connection fail ,
But i tried to connect the host server with ssh in terminal it is working.
why it says Test connection fails, am i missing something?

thanks
My guess is it is a gem version issue but I am not strong in Ruby. The server component starts up but generates database errors. I am guessing the first step is to do the db setup. 

```
<~/minicron/server/bin>$ ./minicron-server db setup
uninitialized constant ActiveRecord::Tasks::DatabaseTasks::Rails

/usr/local/rvm/gems/ruby-2.4.4/gems/activerecord-5.2.1/lib/active_record/tasks/database_tasks.rb:101:in `env': uninitialized constant ActiveRecord::Tasks::DatabaseTasks::Rails (NameError)
	from /usr/local/rvm/gems/ruby-2.4.4/gems/activerecord-5.2.1/lib/active_record/tasks/database_tasks.rb:237:in `load_schema'
	from /root/minicron/server/lib/minicron/cli/commands.rb:47:in `block (2 levels) in add_db_cli_command'
	from /usr/local/rvm/gems/ruby-2.4.4/gems/commander-4.4.7/lib/commander/command.rb:182:in `call'
	from /usr/local/rvm/gems/ruby-2.4.4/gems/commander-4.4.7/lib/commander/command.rb:153:in `run'
	from /usr/local/rvm/gems/ruby-2.4.4/gems/commander-4.4.7/lib/commander/runner.rb:446:in `run_active_command'
	from /usr/local/rvm/gems/ruby-2.4.4/gems/commander-4.4.7/lib/commander/runner.rb:68:in `run!'
	from /root/minicron/server/lib/minicron/cli.rb:70:in `run'
	from ./minicron-server:14:in `block in <main>'
	from /root/minicron/server/lib/minicron.rb:146:in `capture_output'
	from ./minicron-server:12:in `<main>'

<~/minicron/server/bin>$ rvm list
=> ruby-2.4.4 [ x86_64 ]
 * ruby-2.5.1 [ x86_64 ]

# => - current
# =* - current && default
#  * - default

<~/minicron/server/bin>$ gem list

*** LOCAL GEMS ***

actionpack (5.2.1)
actionview (5.2.1)
active_record_migrations (5.2.0.1)
active_record_tasks (1.1.0)
activemodel (5.2.1, 5.1.6, 4.2.10)
activerecord (5.2.1, 4.2.10)
activerecord-db-tasks (0.0.2)
activerecord-migrations (1.3.0)
activesupport (5.2.1, 5.1.6, 4.2.10)
ansi-to-html (0.0.3)
arel (9.0.0, 8.0.0, 6.0.4)
aws-eventstream (1.0.1)
aws-partitions (1.113.0)
aws-sdk-core (3.38.0)
aws-sigv4 (1.0.3)
backports (3.11.4)
better_errors (2.5.0)
bigdecimal (default: 1.3.2)
builder (3.2.3)
bundler (default: 1.16.6)
bundler-unload (1.0.2)
coderay (1.1.2)
commander (4.4.7)
concurrent-ruby (1.1.3)
crass (1.0.4)
cron2english (0.1.6)
daemons (1.2.6)
did_you_mean (1.1.0)
erubi (1.7.1)
erubis (2.7.0)
eventmachine (1.2.7)
executable-hooks (1.6.0)
faraday (0.15.3)
ffi (1.9.25)
ffi-compiler (1.0.1)
gem-wrappers (1.4.0)
highline (2.0.0)
i18n (1.1.1, 0.9.5)
insidious (0.3)
io-console (default: 0.4.6)
jmespath (1.4.0)
json (default: 2.0.4)
jwt (2.1.0)
loofah (2.2.3)
mail (2.7.1)
method_source (0.9.2)
mini_mime (1.0.1)
mini_portile2 (2.3.0)
minitest (5.10.1)
multi_json (1.13.1)
multipart-post (2.0.0)
mustermann (1.0.3)
net-telnet (0.1.1)
nokogiri (1.8.5)
openssl (default: 2.0.7)
pagerduty (2.1.2)
parse-cron (0.1.4)
parslet (1.8.2)
power_assert (0.4.1)
psych (default: 2.2.2)
rack (2.0.6)
rack-protection (2.0.4)
rack-test (1.1.0)
rails-dom-testing (2.0.3)
rails-html-sanitizer (1.0.4)
railties (5.2.1)
rainbow (3.0.0, 2.2.2)
rake (12.3.1, 12.0.0)
rdoc (default: 5.0.0)
rubygems-bundler (1.4.5)
rvm (1.11.3.9)
scrypt (3.0.6)
sinatra (2.0.4)
sinatra-activerecord (2.0.13)
sinatra-asset_pipeline (0.0.1)
sinatra-contrib (2.0.4)
sinatra-flash (0.3.0)
slack-notifier (2.3.2)
sprockets (3.7.2)
sprockets-helpers (1.2.1)
sqlite3 (1.3.13)
test-unit (3.2.3)
thin (1.7.2)
thor (0.20.3)
thread_safe (0.3.6)
tilt (2.0.8)
toml (0.2.0)
twilio-ruby (5.15.2)
tzinfo (1.2.5)
xmlrpc (0.2.1)

<~/minicron/server/bin>$ sqlite3 --version
3.7.17 2013-05-20 00:56:22 118a3b35693b134d56ebd780123b7fd6f1497668
<~/minicron/server/bin>$ cat /etc/redhat-release
Red Hat Enterprise Linux Server release 7.6 (Maipo)
<~/minicron/server/bin>$ rpm -qi sqlite-devel
Name        : sqlite-devel
Version     : 3.7.17
Release     : 8.el7
Architecture: x86_64
Install Date: Thu 15 Nov 2018 03:11:35 PM EST
Group       : Development/Libraries
Size        : 374846
License     : Public Domain
Signature   : RSA/SHA256, Tue 25 Aug 2015 10:00:23 PM EDT, Key ID 199e2f91fd431d51
Source RPM  : sqlite-3.7.17-8.el7.src.rpm
Build Date  : Thu 23 Jul 2015 07:59:24 AM EDT
Build Host  : x86-035.build.eng.bos.redhat.com
Relocations : (not relocatable)
Packager    : Red Hat, Inc. <http://bugzilla.redhat.com/bugzilla>
Vendor      : Red Hat, Inc.
URL         : http://www.sqlite.org/
Summary     : Development tools for the sqlite3 embeddable SQL database engine
Description :
This package contains the header files and development documentation
for sqlite. If you like to develop programs using sqlite, you will need
to install sqlite-devel.
```

Version: minicron 0.9.7
OS: Ubuntu 16.04.4 LTS

It's a reoccurring issue that jobs fails to execute at their expected time. I've got 10 cronjobs set up with minicron, and every day I get messages like this to my slack channel:

Job #8 failed to execute at its expected time - 2018-04-23 09:29:30 +0000
Job #11 failed to execute at its expected time - 2018-04-23 09:29:30 +0000
Job #16 failed to execute at its expected time - 2018-04-23 09:29:30 +0000

When looking at the Executions history for a particular job, the job which was alerted as "failed to execute" does not have an entry in the Executions history for that particular point in time. Executions before and after is fine though, and most executions for a job runs just fine. I just checked for a particular job, and it failed on a random day 2 times, that's a failure rate of 0.0041%. Minicron simply does not run it, and does not log why, not even when verbose and debug flags are enabled at runtime to the minicron server.

Any idea what the issue can be here? Let me know if you need more information.
I am currently testing minicron with MySQL (direct connection with a external database)
However I have about 1 query out of 4 that goes into connection error.
Hello, can anyone advise me on the correct process for the installation of Minicron with Postgresql.

Currently, I log into PSQL and create a new "minicron" user (also granting Create DB privilege), and then create a Database manually called "minicrondb" with ownership set to the "minicron" user. I change /etc/minicron.toml to access Postgresql with the new relevant Database/User/Password information, then upon using `minicron db setup` I get this error:
`FATAL:  database "minicron" does not exist`

It's like the new TOML database name isn't being acknowledged. If I change the TOML database name to just "minicron" to match the default, and alter the database name to "minicron", I then get this error:
```
PG::DuplicateDatabase: ERROR:  database "minicron" already exists
: CREATE DATABASE "minicron" ENCODING = 'utf8'
```

Seems like a new issue to me, this one suggesting I don't need to create a database manually at all, but if I DROPDB (but keeping the "minicron" user with CREATEDB privilege) and then run again `minicron db setup` I get the `FATAL:  database "minicron" does not exist` error again, seemingly contrary to the DuplicateDatabase error above.

Any ideas? My PC already runs postgresql for another application, so presumably it's more efficient than using sqlite (which for the record, _does_ seem to work).

PS: It's true, I am a Crontab-UI refugee, I had no joy getting that to run recently, so here I am!
I had a buggy script that never exited. The minicron web interface showed one instance as running, but not the others. Could it show all non-finished scripts?
and all excutation logs from 2 months ago will delete ... 
When I run `minicron server restart` I don't get an error, but it doesn't restart either. I must do a stop then a start.
e.g. loading 127.0.0.1:9292/execution/15 takes more than a minute with ruby using 100% cpu
It would be helpful in the list of jobs, beside the number of executions, to have the number of total failed executions and also the status (success/fail) of the last execution