even though all is good on ropensci.github.io. Figures in the README, that is.
```r
library(osmplotr)
bbox <- get_bbox(c(12.481225, 53.169504, 12.681225, 53.269504)); bbox
dat_W <- extract_osm_objects(key="waterway", bbox=bbox, return_type="multilines")
map <- osm_basemap(bbox=bbox, bg='gray95')
map <- add_osm_objects(map=map, obj=dat_W, col="blue")
# Error in geom_to_xy(obj, obj_type) : object 'xy' not found
# obj_type is "multilinestring"
```
`geom_to_xy` has no code for `obj_type=="multilinestring"`
https://github.com/ropensci/osmplotr/blob/master/R/add-osm-objects.R#L218
Would it make sense to add a paragraph about rights of use of obtained maps somewhere in the docs? I'm thinking of that because I think the two advantages of using this package to produce basemaps is:

* Customization!

* Open data! 

And I'd like to add something about how the second point means you can legally do more with the map you obtain than if you made a map using a Google background (if I'm correct).
I am sorry if I missed something in the docs. To know how to integrate a map in an RMarkdown document, I had to look at the source of vignettes. Is the solution used in vignettes the simplest one? Then, is it documented somewhere? And last, could it be simplified? E.g. in order to be able to use maps like `magick` objects.
The problems highlighted in `osmdata` issues [#126](https://github.com/ropensci/osmdata/issues/126) and [#128](https://github.com/ropensci/osmdata/issues/128) are pervasive, and affect CRAN systems too, causing tests to fail. [`vcr`](https://github.com/ropensci/vcr) is finally on CRAN, so can be used to mock tests far more neatly and comprehensively than current approach.
Illustration only. Issues regarding dependencies etc not dealt with. Definitely a hard problem to solve and a heap of work if sf can't be used.
Hi,
I don't have time to track this down at present, but the following bounding box leads to incorrect behaviour in `osm_line2poly` for this bit of coastline

``` r
bbox.F <- rbind(c(min= 144.75, max = 145.6),
                c(min= -38.41, max = -37.75))
rownames(bbox.F) <- c("x", "y")
```

I think the problem is cause by multiple cutting of peninsulas.

May be that the current approach is too simple, and that we need to do something quite complex, probably requiring sf, unfortunately.
Hi,
This isn't intended to be a ready-to-use pull request - more to let you have a look at what I've
been testing.

The original problem that lead me to think about this was using multiple mappings for single object
types - e.g. roads might have a group membership, corresponding to colour, and a continuous
measure, such as traffic load, speed limit, etc, that should be displayed as either size or
transparency. In principle an easy problem in ggplot2.

So, I've done some playing around with the more "traditional" ggplot2 approach. It turns out that the stars have aligned and most of the pieces are already in place. These are:

1. a `geom_sf` in the development version of ggplot2
1. lots of tidyverse verbs supported by the sf package, and the fact that sf uses special data frames.

There are two files in this PR - a Rmd and the supporting R code. No nice formatting or thorough testing, just a demo of ideas.

Notes - the ggplot2 support for sf is preliminary, and there are issues around where things like
xlim get set. These are different to how osmplotr is currently set up, and may be annoying.

sf gives lots of warnings about the assumptions it makes. I haven't attempted to turn them off.

Enjoy!
Has to be checked to ensure everything works okay, and the vignette probably doesn't need all of the small maps which junk up the [`/vignette` directory](https://github.com/ropensci/osmplotr/tree/master/vignettes) (or maybe just make these on the fly using pre-stored data). cc @richardbeare 
I've been thinking about testing some special geoms/stats for osm objects. There may be some useful benefits from doing things that way in terms of flexibility, but I've only written a couple previously so I'm not sure of the implications for how the rest of osmplotr works. e.g. might not be compatible with the mechanisms for supplying defaults.