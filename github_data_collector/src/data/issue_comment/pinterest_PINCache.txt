> PINDiskCache.m (464) ERROR: “322B3BCC-B82D-42B4-953E-F5FC3ABD7E3E-1967-000000C5FCFC6086” couldn’t be removed because you don’t have permission to access it.

I keep seeing those.

I notice `PINMemoryCache` had some usage for trim to age limit recursively.

Every time ordering the `createdDates` for trim to age is so **expensive**, and we don't use the sort of container any more for other scene.   

So, instead of sort the container, we could delete the expired objects with a `for loop` directly.

Time Complexity： (√n * n + (expired count) )      ->       **n**
- Key difference is utilizing NSCache internally to allow the system to
purge memory if needed
- Locking is not managed by PINPurgeableMemoryCache as NSCache is designed to be thread-safe

TODO:
- Decide how to handle TTL, Age limit, etc requirements
- Add tests to ensure it works similar to PINMemoryCache (within reason)
- Ideally benchmark performance of memory cache with this change
If my disk size is more than default size, it gets trimmed to default size on initialising PINCache.
Due to that, my images are downloading again and again and getting stored in disk.

I have set the byteLimit to 100MB too.
When more and more data cache in DiskCache, the startup can cost a lot of time, and before that we can not get data from disk cache. 
I'm using a PINDiskCache to store roughly 1000 images when it reaches the disk cache limit specified.

After the cache reaches it's limit, it looks like nearly every call to -setObjectAsync:forKey:completion: to add an item to the cache triggers one -trimDiskToSizeByDate: call. This call sorts the _metadata array so the code ends up sorting this same array repeatedly.

We could mitigate the costs of this sorting by either throttling the trim to once every 60s (could be configurable), or by using a data structure like a priority queue.  I could submit a Pull Request for configurable throttling of the trim if needed.  thanks

Hey folks!
It'd be great if you could observe changes to the cache (say if the object at a particular key was set, you'd be able to subscribe to notifications of those changes). I'm not sure how it'd be implemented though (perhaps adding an `NSNotification` to the `setObject` methods?). Any suggestions?
I'm filing a bug based on our conversation starting here: https://twitter.com/mergesort/status/867091524353486853

It appears to be a side effect from adopting the `PINCaching` protocol.

<img width="969" alt="pincache bug to file" src="https://cloud.githubusercontent.com/assets/716513/26603128/c51a600c-4553-11e7-8014-633434810a82.png">
Cache clearing via the ageLimit can be too slow when too many items expire all at once. This can hurt app-startup performance. As far as I understand it, this is slow because we check file timestamps and remove files one at a time. Removing directories is faster than removing files so if there were some way that the disk cache could optimize this to remove directories.

Random ideas:

1. Persist the "oldest" timestamp and do a quick check in the beginning to just wipe the full directory. Downside: Must wipe entire cache.

2. Add layer(s) of inner directories grouped by some time interval. Then we can wipe huge chunks of the cache efficiently. The semantics of how this could work exactly need more looking into. Downside: Invalidates caches for existing users, and is complex.