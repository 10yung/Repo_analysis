### Version

[v2.11.0](https://github.com/nuxt.js/releases/tag/v2.11.0)

### Reproduction link

[https://github.com/begueradj/poc-datetimer-picker](https://github.com/begueradj/poc-datetimer-picker)

### Steps to reproduce

I want to use this plugin in my Nuxt.js/VuetifyJs application. For this purpose, I created a **plugins/datetime-picker.js** file:
```javascript
import Vue from 'vue'
import DatetimePicker from 'vuetify-datetime-picker'

Vue.use(DatetimePicker)
```

And in nuxt.config.js, declare the plugin as recommended on the [documentation](https://nuxtjs.org/guide/plugins/):

```
export default {
  plugins: ['~/plugins/datetime-picker']
}
```



### What is expected ?

I expect the application to launch without errrors

### What is actually happening?

I run yarn run dev to launch the server, I do not see any error in the Terminal, but when I open the broswer on http://localhost:3000/ I see:

> 
> SyntaxError
> Unexpected identifier


## Link to reproduce

Github [link for the bug](https://github.com/begueradj/poc-datetimer-picker)
Why this is happening ?  I simply followed the steps mentioned on the documentation.
How to fix this ?

<!--cmty--><!--cmty_prevent_hook-->
<div align="right"><sub><em>This bug report is available on <a href="https://cmty.app/nuxt">Nuxt</a> community (<a href="https://cmty.app/nuxt/nuxt.js/issues/c10215">#c10215</a>)</em></sub></div>
### What problem does this feature solve?

next.js was playing around with it and saw some great improvements
https://github.com/zeit/next.js/blob/3aa6edb6180d4dab331b01ee4a56c01c5d43032b/packages/next/build/webpack-config.ts 
row 307.

It reduces package sizes and especially the amount of transferred data after page navigation. This feature could be easily adopted to nuxt and would reduces automatically the transmitted bytes needed for a nuxt app ;).

### What does the proposed changes look like?

See also: https://www.youtube.com/watch?v=QDljY2I1Pfw&feature=youtu.be&t=833


<!--cmty--><!--cmty_prevent_hook-->
<div align="right"><sub><em>This feature request is available on <a href="https://cmty.app/nuxt">Nuxt</a> community (<a href="https://cmty.app/nuxt/nuxt.js/issues/c10212">#c10212</a>)</em></sub></div>
<!--- Provide a general summary of your changes in the title above -->

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (a non-breaking change which fixes an issue)
- [x] New feature (a non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

## Description

ℹ️ See original pull request first: https://github.com/nuxt/nuxt.js/pull/5118
ℹ️ Documentation about its usage is available on https://github.com/nuxt/nuxt.js/tree/feat/new-fetch/examples/new-fetch

This PR is not a breaking change since it activates this new fetch only when `fetch` is used without expecting any arguments.

### Old fetch

```js
export default {
  fetch(context) {
    // old fetch logic
  }
}
```

### New fetch

```js
export default {
  fetch() {
    // New fetch, access to `this`
  }
}
```

Resolves #3776, #32 and #127

## Checklist:
<!--- Put an `x` in all the boxes that apply. -->
<!--- If your change requires a documentation PR, please link it appropriately -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly. (PR: #)
- [ ] I have added tests to cover my changes (if not applicable, please state why)
- [ ] All new and existing tests are passing.


### Version

[v2.5.1](https://github.com/nuxt.js/releases/tag/v2.5.1)

### Reproduction link

[https://codesandbox.io/s/gallant-cache-tqcpk?fontsize=14&hidenavigation=1&theme=dark](https://codesandbox.io/s/gallant-cache-tqcpk?fontsize=14&hidenavigation=1&theme=dark)

### Steps to reproduce

I'm attempting to initialise some state using basic state management with a plain object (the reference being shared across components).

I want to initialise the state on the server with some async work, e.g. networking. This causes a mismatch between client and server node trees. I'm not sure how to solve it or if there's a better way of doing it. I've tried it in asyncData/fetch methods as well as the created hook but both result in the same outcome. I assume it's because the DOM tree is being constructed concurrently to asyncData/fetch method? Therefore when those promises have resolved, it will result in more nodes being present which will be different to what we see on the client...?

Check the code sandbox for reproduction.

- Create plain object for sharing state
- Add the object to data function
- Try to render something in template using that state.
- In asyncData or fetch methods try to initialise some state by accessing network or faking it.
- See the console errors

### What is expected ?

- I'd expect that the component is built on the server to match that on the client, even if I'm changing what the node tree might look like via changing state in asyncData or fetch methods. Not sure if I _should_ be expecting this though...

### What is actually happening?

A mismatch between server and client so can't hydrate.

### Additional comments?

As I said I'm not sure if this would be the correct way to achieve this.

<!--cmty--><!--cmty_prevent_hook-->
<div align="right"><sub><em>This bug report is available on <a href="https://cmty.app/nuxt">Nuxt</a> community (<a href="https://cmty.app/nuxt/nuxt.js/issues/c10205">#c10205</a>)</em></sub></div>
### Version

[v2.11.0](https://github.com/nuxt.js/releases/tag/v2.11.0)

### Reproduction link

[https://codesandbox.io/s/github/nuxt/codesandbox-nuxt](https://codesandbox.io/s/github/nuxt/codesandbox-nuxt)

### Steps to reproduce

I cannot paste a reproduction link, cause I cannot move package.json into another folder (but I need it to show you situation)

0. You need some files in assets folder that you get in less (or css) files with url('~assets/some-file.svg')
1. Move all files to folder src in a root of project
2. In console move to folder src
3. Try to run project

### What is expected ?

I see all my icons

### What is actually happening?

I don't see icons that I use in background-image: url('~assets/some-file.svg'). In browser I can see background-image: url([object Object]);

<!--cmty--><!--cmty_prevent_hook-->
<div align="right"><sub><em>This bug report is available on <a href="https://cmty.app/nuxt">Nuxt</a> community (<a href="https://cmty.app/nuxt/nuxt.js/issues/c10204">#c10204</a>)</em></sub></div>
<!--- Provide a general summary of your changes in the title above -->

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (a non-breaking change which fixes an issue)
- [ ] New feature (a non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)


## Description
<!--- Describe your changes in detail -->
<!--- Why is this change required? What problem does it solve? -->
<!--- If it resolves an open issue, please link to the issue here. For example "Resolves: #1337" -->
CI lint step is failing because of babel/babel#10904 and babel/babel-eslint#799 (discovered by @clarkdo - #6822). This should be fine for now to update other deps

## Checklist:

- [ ] Wait for dependency release
- [ ] Rebase wit hdev
- [ ] Update yarn.lock 


### Version

[v2.11.0](https://github.com/nuxt.js/releases/tag/v2.11.0)

### Reproduction link

[https://github.com/lhsazevedo/nuxt-missing-error-page-demo](https://github.com/lhsazevedo/nuxt-missing-error-page-demo)

### Steps to reproduce

- Clone reproduction repository, install dependencies
- npm run build
- npm run start
- Click on "Throw error" button

### What is expected ?

The exception should be caught by the Nuxt main error handler which displays a nice error page, as it happens when running in dev mode (npm run dev).

### What is actually happening?

Main error handler is ignored and exception ends up logged to console.

<!--cmty--><!--cmty_prevent_hook-->
<div align="right"><sub><em>This bug report is available on <a href="https://cmty.app/nuxt">Nuxt</a> community (<a href="https://cmty.app/nuxt/nuxt.js/issues/c10202">#c10202</a>)</em></sub></div>
This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [jsdom](https://togithub.com/jsdom/jsdom) | devDependencies | major | [`^15.2.1` -> `^16.0.0`](https://renovatebot.com/diffs/npm/jsdom/15.2.1/16.0.0) |

---

### Release Notes

<details>
<summary>jsdom/jsdom</summary>

### [`v16.0.0`](https://togithub.com/jsdom/jsdom/blob/master/Changelog.md#&#8203;1600)

[Compare Source](https://togithub.com/jsdom/jsdom/compare/15.2.1...16.0.0)

For this release we'd like to welcome [@&#8203;pmdartus](https://togithub.com/jsdom/jsdom/commits?author=pmdartus) to the core team. Among other work, he's driven the heroic effort of constructor prototype and reform in jsdom and its dependencies over the last few months, to allow us to move away from shared constructors and prototypes, and set the groundwork for custom elements support ([coming soon](https://togithub.com/jsdom/jsdom/pull/2548)!).

Breaking changes:

-   Node v10 is now the minimum supported version.
-   The `dom.runVMScript()` API has been replaced with the more general `dom.getInternalVMContext()` API.
-   Each jsdom `Window` now creates new instances of all the web platform globals. That is, our old [shared constructor and prototypes](https://togithub.com/jsdom/jsdom/blob/35894a6703ed1f4de98942780bd99244ac27f600/README.md#shared-constructors-and-prototypes) caveat is no longer in play.
-   Each jsdom `Window` now exposes all JavaScript-spec-defined globals uniformly. When `runScripts` is disabled, it exposes them as aliases of the ones from the outer Node.js environment. Whereas when `runScripts` is enabled, it exposes fresh copies of each global from the new scripting environment. (Previously, a few typed array classes would always be aliased, and with `runScripts` disabled, the other classes would not be exposed at all.)

Other changes:

-   Added the `AbstractRange`, `Range`, `StaticRange`, `Selection`, and `window.getSelection()` APIs.
-   Added working constructors for `Comment`, `Text`, and `DocumentFragment`.
-   Added `valueAsDate`, `valueAsNumber`, `stepUp()` and `stepDown()` to `<input>` elements. (kraynel)
-   Added `window.origin`.
-   Removed `document.origin`.
-   Fixed `<template>` to work correctly inside XML documents.
-   Fixed some bugs which would cause jsdom to choose the wrong character encoding because it was failing to detect `<meta charset>` or `<meta http-equiv="charset">` elements.
-   Fixed `input.type` to default to `"text"`. (connormeredith)
-   Fixed incorrect validation errors for `<input>` with fractional values for their `step=""` attribute. (kontomondo)
-   Fixed incorrect validation errors on readonly `<input>` elements.
-   Fixed `<input type="email" multiple pattern="...">` validation.
-   Fixed `fileReader.readAsDataURL()` to always base64-encode the result. (ytetsuro)
-   Fixed inserting `<img>` elements into documents without a browsing context to no longer crash when the `canvas` package is installed.
-   Fixed a memory leak when using `window.setTimeout()` or `window.setInterval()`.
-   Improved the performance of `getComputedStyle()`. (eps1lon)

</details>

---

### Renovate configuration

:date: **Schedule**: At any time (no schedule defined).

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#nuxt/nuxt.js).
### What problem does this feature solve?

Automatically load `pages/api/**/*.vue` as API routes so that:

- Custom server becomes unnecessary
- Better DX, you don't need to start a nodemon process for API
- The possibility to optimize your API routes for serverless environment

### What does the proposed changes look like?

Reference implementation: https://nextjs.org/docs/api-routes/introduction

<!--cmty--><!--cmty_prevent_hook-->
<div align="right"><sub><em>This feature request is available on <a href="https://cmty.app/nuxt">Nuxt</a> community (<a href="https://cmty.app/nuxt/nuxt.js/issues/c10199">#c10199</a>)</em></sub></div>
### What problem does this feature solve?

`pre-commit` hooks can come in handy while in the Dev workflow. The `lint` script can be made to execute automatically before making a commit (and staging updated files).

### What does the proposed changes look like?

It depends on `husky` and `lint-staged` which should be added as `devDependencies`.

<!--cmty--><!--cmty_prevent_hook-->
<div align="right"><sub><em>This feature request is available on <a href="https://cmty.app/nuxt">Nuxt</a> community (<a href="https://cmty.app/nuxt/nuxt.js/issues/c10196">#c10196</a>)</em></sub></div>