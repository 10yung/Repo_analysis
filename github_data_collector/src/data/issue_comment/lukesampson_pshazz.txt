Git completion isn't working for git commands, example

Type: 'git ch' then hit 'tab' should result in:
check-attr       -- display gitattributes information
check-ignore     -- debug gitignore/exclude files
check-mailmap    -- show canonical names and email addresses of contacts
check-ref-format -- ensure that a reference name is well formed
checkout         -- checkout branch or paths to working tree
checkout-index   -- copy files from index to working directory
cherry           -- find commits not merged upstream
cherry-pick      -- apply changes introduced by some existing commits

Or something like it if the plan is to replicate what Oh My ZSH is offering.
Cmder
Administrator Powershell 5.1.17763.503

```
pshazz: 0.2019.05.24 -> 0.2019.05.25
Updating one outdated app:
Updating 'pshazz' (0.2019.05.24 -> 0.2019.05.25)
Downloading new version
b9e7625a50eaf0d39647d6d8efdcc8a39d32d6a9.zip (53.0 KB) [============================================================================================================================================================================] 100%
Checking hash of b9e7625a50eaf0d39647d6d8efdcc8a39d32d6a9.zip ... ok.
Uninstalling 'pshazz' (0.2019.05.24)
Removing shim for 'pshazz'.
Unlinking C:\SCOOP\\apps\pshazz\current
Installing 'pshazz' (0.2019.05.25) [64bit]
Loading b9e7625a50eaf0d39647d6d8efdcc8a39d32d6a9.zip from cache
Extracting b9e7625a50eaf0d39647d6d8efdcc8a39d32d6a9.zip ... done.
It looks like pshazz is already in your powershell profile, skipping.

           _                   _
 _ __  ___| |__   __ _ _______| |
| '_ \/ __| '_ \ / _` |_  /_  / |
| |_) \__ \ | | | (_| |/ / / /|_|
| .__/|___/_| |_|\__,_/___/___(_)
|_|

Cannot write to function prompt because it is read-only or constant.
At C:\SCOOP\apps\pshazz\0.2019.05.25\lib\prompt.ps1:112 char:1
+ function global:prompt {
+ ~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : WriteError: (prompt:String) [], SessionStateUnauthorizedAccessException
    + FullyQualifiedErrorId : FunctionNotWritable
```
Some plugins (like `ssh`, `z`, or `aliases`) are controlled by the theme file, but have nothing to do with theming. Current state of themes makes no sense in this regard, eg. `agnoster` enables `ssh` and `z`, but `agnoster-alternate` doesn't. I believe that the on/off switches for these plugins should be in the config, independent of the theme file.
It would be cool if it was possible to display paths like fish does:

![obrazek](https://user-images.githubusercontent.com/4580066/58170640-e8104b80-7cce-11e9-84b5-9d35be1baf19.png)

Top is pshazz (theme agnoster-alternate), bottom is fish. The git root is in the `iTerm2-Color-Schemes` folder, and I am currently in the `terminal` subfolder. You can see that fish shows git info at git root, also treating path before/after repo root differently (in this case abbreviating the path before repo root just to single letters).

I believe this could be achieved by hardcoding `git rev-parse --show-toplevel` in the theme to get the repo root path (and determine the "rest" from full path), but a cleaner and faster solution would be to get direct support from the git plugin.
Since the default theme displays only the current folder's name, I find it helpful to display the full path of the working directory on the window title (instead of using a theme that displays it inline with every command). Adding `$host.UI.RawUI.WindowTitle = gl` to `prompt` achieves that.

If you don't find this useful enough to add to pshazz, I'd appreciate any pointers about how to add this to my PS profile without overwriting pshazz.
NB I don't believe this issue is related to #73 
Using PowerShell Core 6.1.1

I have a profile in the default location `C:\Users\jzrai\Documents\PowerShell\Microsoft.PowerShell_profile.ps1` with a few lines in it. Running `scoop install pshazz` fails and gives the following output:
```
Installing 'pshazz' (0.2019.01.12) [64bit]
Loading f40bfabb011e38215f66610e5dce432fa67ba393.zip from cache
Checking hash of f40bfabb011e38215f66610e5dce432fa67ba393.zip ... ok.
Extracting f40bfabb011e38215f66610e5dce432fa67ba393.zip ... done.
adding pshazz to your powershell profile
out-file : Access to the path 'C:\Users\jzrai\Documents\PowerShell\Microsoft.PowerShell_profile.ps1' is denied.
At C:\Users\jzrai\scoop\apps\pshazz\0.2019.01.12\bin\install.ps1:16 char:2
+     $new_profile > $profile
+     ~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : NotSpecified: (:) [Out-File], UnauthorizedAccessException
+ FullyQualifiedErrorId : System.UnauthorizedAccessException,Microsoft.PowerShell.Commands.OutFileCommand


           _                   _
 _ __  ___| |__   __ _ _______| |
| '_ \/ __| '_ \ / _` |_  /_  / |
| |_) \__ \ | | | (_| |/ / / /|_|
| .__/|___/_| |_|\__,_/___/___(_)
|_|

resolve-path : Cannot find path 'C:\Users\jzrai\scoop\apps\pshazz\current\bin\pshazz.ps1' because it does not exist.
At C:\Users\jzrai\scoop\apps\scoop\current\libexec\scoop-which.ps1:29 char:20
+ ...       $exepath = resolve-path (join-path (split-path $path) $exepath)
+                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : ObjectNotFound: (C:\Users\jzrai\...\bin\pshazz.ps1:String) [Resolve-Path], ItemNotFoundException
+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.ResolvePathCommand

Split-Path : Cannot bind argument to parameter 'Path' because it is an empty string.
At C:\Users\jzrai\scoop\apps\pshazz\0.2019.01.12\plugins\ssh.ps1:209 char:60
+ ... azzPath = Resolve-Path (Split-Path (Split-Path (scoop which pshazz)))
+                                                    ~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Split-Path], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorEmptyStringNotAllowed,Microsoft.PowerShell.Commands.SplitPathCommand

Linking ~\scoop\apps\pshazz\current => ~\scoop\apps\pshazz\0.2019.01.12
Creating shim for 'pshazz'.
Creating shim for 'askpass'.
Can't shim 'libexec\askpass.exe': File doesn't exist.
```
It seems to be permissions related but running `Get-Acl` on the profile file gives the same result as on any other file that I can access without problem.

Then I deleted the profile file and re-ran the installer so it could create a fresh profile but this also failed, giving output:

```
Installing 'pshazz' (0.2019.01.12) [64bit]
Loading f40bfabb011e38215f66610e5dce432fa67ba393.zip from cache
Checking hash of f40bfabb011e38215f66610e5dce432fa67ba393.zip ... ok.
Extracting f40bfabb011e38215f66610e5dce432fa67ba393.zip ... done.
out-file : Could not find file 'C:\Users\jzrai\Documents\PowerShell\Microsoft.PowerShell_profile.ps1'.
At C:\Users\jzrai\scoop\apps\pshazz\0.2019.01.12\bin\install.ps1:4 char:2
+     '' > $profile
+     ~~~~~~~~~~~~~
+ CategoryInfo          : OpenError: (:) [Out-File], FileNotFoundException
+ FullyQualifiedErrorId : FileOpenFailure,Microsoft.PowerShell.Commands.OutFileCommand

gc : Cannot find path 'C:\Users\jzrai\Documents\PowerShell\Microsoft.PowerShell_profile.ps1' because it does not exist.
At C:\Users\jzrai\scoop\apps\pshazz\0.2019.01.12\bin\install.ps1:10 char:9
+ $text = gc $profile
+         ~~~~~~~~~~~
+ CategoryInfo          : ObjectNotFound: (C:\Users\jzrai\...ell_profile.ps1:String) [Get-Content], ItemNotFoundException
+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.GetContentCommand

adding pshazz to your powershell profile
out-file : Could not find file 'C:\Users\jzrai\Documents\PowerShell\Microsoft.PowerShell_profile.ps1'.
At C:\Users\jzrai\scoop\apps\pshazz\0.2019.01.12\bin\install.ps1:16 char:2
+     $new_profile > $profile
+     ~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : OpenError: (:) [Out-File], FileNotFoundException
+ FullyQualifiedErrorId : FileOpenFailure,Microsoft.PowerShell.Commands.OutFileCommand


           _                   _
 _ __  ___| |__   __ _ _______| |
| '_ \/ __| '_ \ / _` |_  /_  / |
| |_) \__ \ | | | (_| |/ / / /|_|
| .__/|___/_| |_|\__,_/___/___(_)
|_|

resolve-path : Cannot find path 'C:\Users\jzrai\scoop\apps\pshazz\current\bin\pshazz.ps1' because it does not exist.
At C:\Users\jzrai\scoop\apps\scoop\current\libexec\scoop-which.ps1:29 char:20
+ ...       $exepath = resolve-path (join-path (split-path $path) $exepath)
+                      ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : ObjectNotFound: (C:\Users\jzrai\...\bin\pshazz.ps1:String) [Resolve-Path], ItemNotFoundException
+ FullyQualifiedErrorId : PathNotFound,Microsoft.PowerShell.Commands.ResolvePathCommand

Split-Path : Cannot bind argument to parameter 'Path' because it is an empty string.
At C:\Users\jzrai\scoop\apps\pshazz\0.2019.01.12\plugins\ssh.ps1:209 char:60
+ ... azzPath = Resolve-Path (Split-Path (Split-Path (scoop which pshazz)))
+                                                    ~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : InvalidData: (:) [Split-Path], ParameterBindingValidationException
+ FullyQualifiedErrorId : ParameterArgumentValidationErrorEmptyStringNotAllowed,Microsoft.PowerShell.Commands.SplitPathCommand

Linking ~\scoop\apps\pshazz\current => ~\scoop\apps\pshazz\0.2019.01.12
Creating shim for 'pshazz'.
Creating shim for 'askpass'.
Can't shim 'libexec\askpass.exe': File doesn't exist.
```

This seems like something weird with my environment but I have no idea what's causing it and even so I think the installation would be better off failing gracefully rather than "semi-installing" as currently occurs (runs pshazz in current window but obviously on next startup)
Pshazz is not initialized properly when used inside pwsh.

PWSH and normal powershell use different profile locations. (https://github.com/PowerShell/PowerShell/issues/4682) 

Creating symbolic link for profile file is working.

PWSH:
```powershell
$ $PROFILE
C:\Users\Ash258\Documents\PowerShell\Microsoft.PowerShell_profile.ps1
```

Powershell:
```powershell
$ $PROFILE
C:\Users\Ash258\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1
```

![Screen](https://i.imgur.com/FCXzyuO.png)
Already created symlink for profile.


Hi, i've created a theme (I can even do a PR to the project later), and im very happy with the results. But, maybe it can become better. All I need is a way to write a section of the prompt vars in the endo of the line.

My custom theme looks like this:
![image](https://user-images.githubusercontent.com/7649727/34445369-0175d148-ecb2-11e7-92f6-cebc7ad0e88d.png)

And I need one like this:
![image](https://user-images.githubusercontent.com/7649727/34445531-04bbd7ca-ecb3-11e7-80e1-277b46d269bc.png)

Is there anyway to do that?
Thank you.
