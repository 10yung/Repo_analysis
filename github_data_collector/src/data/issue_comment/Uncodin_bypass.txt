

This can helpful be when adding click listener on ImageSpan. This way you can get get Image URL easily using imageSpan.getSource()
Proguard automatically renames the file classes after building. Since this rule is crucial in order to use in a release (to prevent crashes) it is good to add it to the documentation.
I'm using Android Studio 2.3.3, and add this library like below:
```
dependencies {
    compile 'in.uncod.android.bypass:bypass:1.1'
}
```
And it shows error:

> Error:Packaging for dependency in.uncod.android.bypass:bypass:1.1 is 'apklib' and is not supported. Only 'aar' libraries are supported.
this markdown won't be processed : 
**xxx **

the 'xxx' won't get bold and will be shown literally **xxx **
convert:

```
| Tables   |      Are      |  Cool |
|----------|:-------------:|------:|
| col 1 is |  left-aligned | $1600 |
| col 2 is |    centered   |   $12 |
| col 3 is | right-aligned |    $1 |
```

to :

| Tables   |      Are      |  Cool |
|----------|-------------|------|
| col 1 is |  left-aligned | $1600 |
| col 2 is |    centered   |   $12 |
| col 3 is | right-aligned |    $1 |

I ran into problems when trying to parse nested emphasis, e.g. like this:

**Bold text *bold italic text***

The formatting broke after the first single asterisk until the end of paragraph.

So I have written a small utility method to linearize the nested asterisks in source Markdown before I pass it on to the Bypass lib for parsing. It changes the above Markdown like this:

**Bold text** ***bold italic text***

Maybe someone will find it useful, I have published it as a gist on my profile:
https://gist.github.com/lukaszkalnik/d60471385877e7684c402ec5400dd94c

Is it possible to disable f.e. the #Heading recognition?

When i write a list like

```
1. one
2. two
```

it gets rendered as

```
• one
• two
```

I guess that's a bug, right? Or am I missing a setting for that?
