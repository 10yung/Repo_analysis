The connections seem to close off after 1 GB.

I try to download QT from [here](https://developer.valvesoftware.com/wiki/Qt).

If it's not possible to submit the whole package would you submit a patch to qt 4.8.3 ?
In the 2013 SDK, [line 354](https://github.com/ValveSoftware/source-sdk-2013/blob/0d8dceea4310fde5706b3ce1c70609d72a38efdf/mp/src/game/server/explode.cpp#L354) clearly states:

`// Only do these effects if we're not submerged`

Followed by the line `if ( UTIL_PointContents( GetAbsOrigin() ) & CONTENTS_WATER )` which checks if the entity is _in_ water, instead of out. I don't think I need to say how to fix it.
Hi,

Based on what I have read, it looks like [macOS Catalina](https://en.wikipedia.org/wiki/MacOS_Catalina) (slated for release in the next few months) will drop support for 32bit applications. I believe this impacts this SDK, which will mean that my game ([Estranged: Act I](https://store.steampowered.com/app/261820/Estranged_Act_I/)) and others will cease to run natively on macOS after the user upgrades their OS.

~~A few questions:~~
~~1. Is that assessment correct? I only see [32bit dependencies](https://github.com/ValveSoftware/source-sdk-2013/tree/master/sp/src/lib/public/osx32) in this repository for macOS~~
~~2. Will this impact Half-Life 2, Episode 1, Episode 2, Team Fortress 2 and Portal?~~
~~3. If it does and Valve plans to fix those titles, will that work be upstreamed into this SDK?~~

Edit - since this is confirmed to be affecting older Valve first party titles, a few questions based on that:
1. Will this be addressed for older Valve first party titles?
2. If it will be, will that work be merged into this SDK?
3. Are there any plans to merge the Vulkan support as described below to this SDK?

Thanks,
Alan
When I'm trying launch game with -tools -nop4 parameter I got engine error.
![изображение](https://user-images.githubusercontent.com/12896317/63679702-9958dd00-c7fa-11e9-9d59-a66e071ab10f.png)

I tried making vscripts for map and saw that there's problem with env_fade entity. You can't do fade in for one player fade if stayout flag is enabled.

mp/src/game/server/EnvFade.cpp and sp/src/game/server/EnvFade.cpp have the same bug.

```
// Current Code
void CEnvFade::InputFade( inputdata_t &inputdata )
{
	int fadeFlags = 0;

	if ( m_spawnflags & SF_FADE_IN )
	{
		fadeFlags |= FFADE_IN;
	}
	else
	{
		fadeFlags |= FFADE_OUT;
	}

	if ( m_spawnflags & SF_FADE_MODULATE )
	{
		fadeFlags |= FFADE_MODULATE;
	}

	if ( m_spawnflags & SF_FADE_STAYOUT )
	{
		fadeFlags |= FFADE_STAYOUT;
	}

	if ( m_spawnflags & SF_FADE_ONLYONE )
	{
		if ( inputdata.pActivator && inputdata.pActivator->IsNetClient() )
		{
			// Line below is missing important flag, FFADE_PURGE.
			UTIL_ScreenFade( inputdata.pActivator, m_clrRender, Duration(), HoldTime(), fadeFlags );
		}
	}
	else
	{
		UTIL_ScreenFadeAll( m_clrRender, Duration(), HoldTime(), fadeFlags|FFADE_PURGE );
	}

	m_OnBeginFade.FireOutput( inputdata.pActivator, this );
}

// Working Code
void CEnvFade::InputFade( inputdata_t &inputdata )
{
	int fadeFlags = 0;

	if ( m_spawnflags & SF_FADE_IN )
	{
		fadeFlags |= FFADE_IN;
	}
	else
	{
		fadeFlags |= FFADE_OUT;
	}

	if ( m_spawnflags & SF_FADE_MODULATE )
	{
		fadeFlags |= FFADE_MODULATE;
	}

	if ( m_spawnflags & SF_FADE_STAYOUT )
	{
		fadeFlags |= FFADE_STAYOUT;
	}

	if ( m_spawnflags & SF_FADE_ONLYONE )
	{
		if ( inputdata.pActivator && inputdata.pActivator->IsNetClient() )
		{
			// Contains FFADE_PURGE which allows you to do fade in if you've done fade out with stayout flag enabled.
			UTIL_ScreenFade( inputdata.pActivator, m_clrRender, Duration(), HoldTime(), fadeFlags | FFADE_PURGE );
		}
	}
	else
	{
		UTIL_ScreenFadeAll( m_clrRender, Duration(), HoldTime(), fadeFlags | FFADE_PURGE);
	}

	m_OnBeginFade.FireOutput( inputdata.pActivator, this );
}

// Reference from fadein and fadeout command functions
// Fade Out
UTIL_ScreenFade( pPlayer, clrFade, flTime, 0, FFADE_OUT | FFADE_PURGE | FFADE_STAYOUT );
// Fade In
UTIL_ScreenFade( pPlayer, clrFade, flTime, 0, FFADE_IN | FFADE_PURGE );
```
Hello!

I've noticed that on Linux/Mac, old models can lead to rendering crashes, namely the infamous "Failed to lock vertex buffer in CMeshDX8::LockVertexBuffer" Engine Error.

I'm not exactly sure if it's an error with the MDL format or the .vtx files, but I believe it's a backwards compatibility issue that's just not handled on Linux/Mac.

However, there was this map that was ported from "The Ship" to SDK2013, which was an old game and had models from like 2006. The map would repeatably crash with that engine error until I decided to decompile/recompile the models it used. The crash went away.

I've also noticed, the models in the Source SDK 2013 base on Steam in the HL2 VPKs contain very old models as well, as low as version 44 MDLs which I believe is 2006 era.


I know SDK2013 is probably a low priority, but it would be great if all the models could be re-compiled with the latest version of studiomdl for SDK2013.
What exactly is this file? It's absolutely massive, so big it won't fit on our mod's GitHub repository (104,000 KB).  Should I be worried about deleting it?
Ok, so i know there are a million other posts regarding this issue but, i have read literally all of them and have never got it working. ONCE... I tried different engine versions, i tried building cubemaps in gmod, nothing has worked so far, pls help.
When can we expect modules like the GameUI, studiomdl, ServerBrowser, HLMV, etc to be available for the public? Anything but the engine itself? Many mod authors would benefit from these modules, rather than applying terrible hacks...
I know people have had this issue before but I can't get it fixed using their suggestions.  I have the pre-post build events off, the path is Data:D/bc/sp/src so there are no spaces or & signs.  It just appeared one day and now I can never compile my .dll's.  Here are some screenshots.

![Screenshot (37)](https://user-images.githubusercontent.com/11809659/54848828-f975b100-4ca7-11e9-8592-7a532c811694.png)

![Screenshot (36)](https://user-images.githubusercontent.com/11809659/54848833-fda1ce80-4ca7-11e9-90b8-1dae100c8e33.png)

