Following along with the minsql repo documentation and the examples, I fail to create a datastore after setting minsql up with a metabucket.

The below command points to some playground bucket, but the response is "401: Unauthorized"

```
curl -X POST \
  http://127.0.0.1:9999/api/datastores \
  -H 'Content-Type: application/json' \
  -d '{
  "bucket" : "play-minsql",
  "endpoint" : "https://play.minio.io:9000",
  "prefix" : "",
  "name" : "minioplay",
  "access_key" : "Q3AM3UQ867SPQQA43P2F",
  "secret_key" : "zuf+tfteSlswRu7BJ86wekitnifILbZam1KYY3TG"
}'
```

Trying to point the request to my local minio instance like below yields the same unauthorized response:

```
curl -X POST \
  http://127.0.0.1:9999/api/v1/datastores \
  -H 'Content-Type: application/json' \
  -d '{
  "bucket" : "minsql-meta",
  "endpoint" : "https://localhost:9000",
  "prefix" : "",
  "name" : "miniotest",
  "access_key" : "minio",
  "secret_key" : "minio123"
}'
```

My guess was that I needed to get a token first (in contrary to the order in which the numbered list of the guide is proposing), so I tried to POST to /api/tokens/ as below, but still only get unauthorized response. Tried replacing "abcde..." with "minio" and "minio123" from the docs, but no difference.

```
curl -X POST \
  http://127.0.0.1:9999/api/tokens \
  -H 'Content-Type: application/json' \
  -d '{
  "access_key" : "abcdefghijklmnop",
  "secret_key" : "abcdefghijklmnopabcdefghijklmnop",
  "description" : "test",
  "is_admin" : true,
  "enabled" : false
}'
```
Following the documentation on the minsql github repo page, the example doesn't work.
The mc container is supposed to create a minsql-meta bucket, and the output from the conainer is that it succeeds, but no bucket is actually created.

As per the docker-compose.yml below the bucket minio/minsql-meta should be created. After the mc container has run no bucket can be found in the local data directory or seen in the web ui.

`
version: '2'

services:

 minio:
  image: minio/minio
  volumes:
   - ./data:/data
  environment:
   MINIO_ACCESS_KEY: minio
   MINIO_SECRET_KEY: minio123
  command: server /data
  ports:
   - 9000:9000

 mc:
  image: minio/mc
  depends_on:
   - minio
  entrypoint: >
    /bin/sh -c "
    echo /usr/bin/mc config host add minio http://minio:9000 minio minio123;
    /usr/bin/mc mb minio/minsql-meta;"

 minsql:
  image: minio/minsql
  depends_on:
   - minio
   - mc
  ports:
   - "9999:9999"
  environment:
   MINSQL_METABUCKET_NAME: minsql-meta
   MINSQL_METABUCKET_ENDPOINT: http://minio:9000
   MINSQL_ACCESS_KEY: minio
   MINSQL_SECRET_KEY: minio123

volumes:
  data:
`
The new async/await syntax is coming and tokio and hyper already adopted that syntax in their master branches, so we should prepare to adopt it as well.

We are going to move Tokens to Username/Password pair and pass them using basic http auth rather than a header
If we delete a datastore we need to ensure all logs referencing it are also updated.
Adding a new Log doesn't auto start an ingest buffer
Seed a `play` log and datastore with each new minsql installation.
Currently the region of the meta bucket of the server is not configurable. Therefore, you cannot start MinSQL with a server meta bucket that does not match the (somehow) hard-coded value in [`meta.rs`](https://github.com/minio/minsql/blob/master/src/meta.rs#L56)

Anyway, `name` does not seem to be a "good" identifier for specifying the region - in general.
We need a component that will render the results on a listing API call and render a table with pagination.

- [ ] Render the results of a listing API call.
- [ ] Supports pagination
- [ ] Supports displaying only `n` number of columns
- [ ] Option to support sorting if the API supports it.
- [ ] Option to show a column with configurable actions (edit/delete)
- [ ] Support for selection of multiple items

![sample](https://i.imgur.com/zYiRupp.png)