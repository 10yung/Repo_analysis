The latest tagged release as well as master depends on webonxy/graphql `~0.10.2`.

This is quite an old version and is not compatible with PHP 7.3 due this somewhere in the webonxy library:
`PHP Warning: "continue" targeting switch is equivalent to "break". Did you mean to use "continue 2"?`

This code fragment does not even exist in the latest webonxy release, so it's clear only an upgrade of webonyx can make 7.3 compatibility.

The underlying library supports metadata in for the types, https://webonyx.github.io/graphql-php/type-system/object-types/#custom-metadata, how do I use this?
So I am wondering, is there a way to generate the queries and mutations, and maybe even the types.
Mainly the mutations and queries are all the same.
queries( get 1 type, get all types)
mutations( createType, updateType, deleteType)
For example in a blog, the Article and Comments are quite repetative in creating the same queries and mutations.
Even more idealitair is that of creating a type out of an eloquent model. Just pass an array of models in which you want the default 'crud' operations to be active.
There of course are some cases in which this does not cover the usecase, EG authentication in which you want to write a 'custom' type ,query and mutation.

I hope it already exists, or if someone could explain why this isn't already a feature.

Great respect to all working on this repo, maybe I could help on this feature if it does not already exists. 

I thought that to add types (Timestamp, PaginationMeta, Links etc ..) in a simple and intuitive way was to create a class that has a static method for each type and that calls it by passing the value of the query in the "resolve" so that can be processed independently. This allows me to call these methods staunchly and makes it easy to use them in multiple types.
What do you think?

**UserType.php** with TimestampType for data
`query=query+FetchUsers{users{id,name,timestamp{created_at,updated_at}}}`
![usertype](https://user-images.githubusercontent.com/13237032/47706619-fb23d700-dc29-11e8-8238-c9097b322d5c.png)

**TypeRegistry** all method that return Contracts type with `resolve()` function
![typeregistry](https://user-images.githubusercontent.com/13237032/47706617-fb23d700-dc29-11e8-9fc0-895958b9b6a2.png)

**TimestampType** is type of time, you can add field to fields array
![timestamptype](https://user-images.githubusercontent.com/13237032/47706618-fb23d700-dc29-11e8-86b5-976c0a8fb0c5.png)

![schermata del 2018-10-30 10-10-00](https://user-images.githubusercontent.com/13237032/47707400-fc560380-dc2b-11e8-9099-0e20d6c1075a.png)


I have written a middleware for authentication, How can I set the middleware to intercept a graphql schema?


Is it possible to send some extra value from GraphQLController@query method to Folklore\GraphQL\Support\Mutation@resolve?

I need to be able to get file from $request object in my resolve method of my mutation classes.
Is such a thing possible?

PHP
```php
class ProductsQuery extends Query
{
	protected $attributes = [
		'name'	=> 'Products Query'
	];

	public function type()
	{
		return GraphQL::pagination(
				GraphQL::type('Product')
			);
	}

	public function resolve($root, $args)
	{
		return app(ProductRepositoryInterface::class)
			->paginate([
				'per_page'	=> 6
			]);
	}
}
```

Query
```
{
    products {
      items {
        name
        str_id
        description
     }
   }
}
```