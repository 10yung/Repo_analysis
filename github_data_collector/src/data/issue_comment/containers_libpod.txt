I'm trying to enter the successfully running container:

```
# podman exec -it {container_id} /bin/bash
Error: AppArmor not initialized correctly: OCI runtime error
```

Not sure where to begin troubleshooting this... 

Here is what happens with `--log-level=debug`:

```
[...]
INFO[0000] Running conmon under slice machine.slice and unitName libpod-conmon-9111a9163adc8b31bfd618e081764e6a3db881feeb0678fb4f28d4a3aa58e22f.scope
WARN[0000] Failed to add conmon to systemd sandbox cgroup: Unit libpod-conmon-9111a9163adc8b31bfd618e081764e6a3db881feeb0678fb4f28d4a3aa58e22f.scope already exists.
DEBU[0000] Attaching to container 9111a9163adc8b31bfd618e081764e6a3db881feeb0678fb4f28d4a3aa58e22f exec session 976183522db0d00f8472d4bff691035b7b0ab5209fa967209d66a1af6044f26d
DEBU[0000] connecting to socket /var/run/libpod/socket/976183522db0d00f8472d4bff691035b7b0ab5209fa967209d66a1af6044f26d/attach
DEBU[0000] Received: 0
DEBU[0000] Received a resize event: {Width:157 Height:60}
DEBU[0000] Received: -256
ERRO[0000] [conmon:d]: exec with attach is waiting for start message from parent
[conmon:d]: exec with attach got start message from parent: OCI runtime error
WARN[0000] unable to find /etc/containers/registries.conf. some podman (image shortnames) commands may be limited
```

Same result with `conmon` 2.0.2 and 2.0.9.
I've found no relevant information in _syslog_...
Use $VERSION instead of the "$CIRRUS_TAG".
(the other variable to set is $GIT_COMMIT)

Avoid doing an unnecessary `git fetch --tags`.
Move the NUMBER sed hacks to the shell script.

Allows building from e.g. tarball, without git.

Also allows building within a _different_ git.

Example use:

```shell
make VERSION=v1.7.0 GIT_COMMIT=b7ce1157b00af09f4a09e39b377aa3abff46ee05
```

Closes #4787

/kind bug

**Description**

a rootless privileged container refuses to start if a host device layout has changed since its creation. 

**Steps to reproduce the issue:**

1. install the latest available podman:
   ```
    # dnf install podman-1.7.1-1579308829.gitce4bf33c.fc31.x86_64.rpm`
   ```

2. create regular rootless privileged container:
    ```
    $ podman create --hostname=test --name=podman-test --privileged -it fedora:31 bash
    4064af39d51912b991132022d1211c5a2e57828a8d1a8e65a5c769c3ebb03064
    ```

3. run it to verify it is fine and quit:
    ```
    $ podman start -ia podman-test
    [root@test /]# exit
   ```

4. **unplug the mouse or any other usb device**

5. try to rum the container again:
   ```
    $ podman start -ia podman-test
    Error: unable to start container 4064af39d51912b991132022d1211c5a2e57828a8d1a8e65a5c769c3ebb03064: container_linux.go:346: starting container process caused "process_linux.go:449: container init caused \"rootfs_linux.go:58: mounting \\\"/dev/bus/usb/001/014\\\" to rootfs \\\"/home/vladis/.local/share/containers/storage/overlay/c74f7eeb485fa7ef272fccd713c628e293a6ef2fe9698f3d94ce3fc028c6a5ea/merged\\\" at \\\"/dev/bus/usb/001/014\\\" caused \\\"stat /dev/bus/usb/001/014: no such file or directory\\\"\"": OCI runtime command not found error
   ```

6. cry in despair and try to work it around

7. edit `~/.local/share/containers/storage/libpod/bolt_state.db` with a hex editor

8. replace with spaces all two occurrences of:
    `{"destination":"/dev/bus/usb/001/014","type":"bind","source":"/dev/bus/usb/001/014","options":["slave","nosuid","noexec","rw","rbind"]},`

9. breath out:
   ```
    $ podman start -ia podman-test
    [root@test /]# exit
   ```

**Describe the results you received:**
a rootless privileged container refuses to start if i unplug a mouse

**Describe the results you expected:**
i expect this container to start

**Additional information you deem important (e.g. issue happens only occasionally):**

reproduces with a podman package at the latest commit as of today.

yes, `man podman-create` states:

> A “privileged” container is given access to all devices.
> When the operator executes a privileged container, Podman enables access to all devices on the host

i understand that podman will mount all the devices it remembers for the privileged containers. but i would expect it is able to handle such volatile things like usb devices and other plug/unplug devices which presence is expected to change over time. at least, it would be great to have a way to work around this problem, like `--ignore-unexisting-mounts` for `podman start` or something.

**Output of `podman version`:**

```
$ podman version
Version:            1.7.1-dev
RemoteAPI Version:  1
Go Version:         go1.13.5
Git Commit:         6408303711bef45e21e2ed5f4ec90dd679aa31f8-dirty
Built:              Sat Aug  4 02:00:00 2018
OS/Arch:            linux/amd64
```

**Output of `podman info --debug`:**

```
$ podman info --debug
debug:
  compiler: gc
  git commit: 6408303711bef45e21e2ed5f4ec90dd679aa31f8-dirty
  go version: go1.13.5
  podman version: 1.7.1-dev
host:
  BuildahVersion: 1.13.1
  CgroupVersion: v1
  Conmon:
    package: podman-1.7.1-1579308829.gitce4bf33c.fc31.x86_64
    path: /usr/libexec/podman/conmon
    version: 'conmon version 2.0.7, commit: 6408303711bef45e21e2ed5f4ec90dd679aa31f8-dirty'
  Distribution:
    distribution: fedora
    version: "29"
  IDMappings:
    gidmap:
    - container_id: 0
      host_id: 1000
      size: 1
    - container_id: 1
      host_id: 100000
      size: 65536
    uidmap:
    - container_id: 0
      host_id: 1000
      size: 1
    - container_id: 1
      host_id: 100000
      size: 65536
  MemFree: 24305704960
  MemTotal: 33083305984
  OCIRuntime:
    name: runc
    package: runc-1.0.0-95.rc9.gitc1485a1.fc29.x86_64
    path: /usr/bin/runc
    version: |-
      runc version 1.0.0-rc9+dev
      commit: 26f9c71f0ee5e621be1ae6d0aa4bfa1a8d072e4c
      spec: 1.0.1-dev
  SwapFree: 17179865088
  SwapTotal: 17179865088
  arch: amd64
  cpus: 8
  eventlogger: journald
  hostname: rules
  kernel: 5.4.8-200.fc31.x86_64
  os: linux
  rootless: true
  slirp4netns:
    Executable: /usr/bin/slirp4netns
    Package: slirp4netns-0.4.0-2.git1798179.fc29.x86_64
    Version: |-
      slirp4netns version 0.4.0-beta.3
      commit: 179817925a6b37e8b80ba552f3998de5c4611703
  uptime: 12h 31m 18.08s (Approximately 0.50 days)
registries:
  search:
  - docker.io
  - registry.fedoraproject.org
  - quay.io
  - registry.access.redhat.com
  - registry.centos.org
store:
  ConfigFile: ~/.config/containers/storage.conf
  ContainerStore:
    number: 1
  GraphDriverName: overlay
  GraphOptions:
    overlay.mount_program:
      Executable: /usr/bin/fuse-overlayfs
      Package: fuse-overlayfs-0.6.5-2.fc29.x86_64
      Version: |-
        fuse-overlayfs: version 0.6.5
        FUSE library version 3.6.2
        using FUSE kernel interface version 7.29
  GraphRoot: ~/.local/share/containers/storage
  GraphStatus:
    Backing Filesystem: xfs
    Native Overlay Diff: "false"
    Supports d_type: "true"
    Using metacopy: "false"
  ImageStore:
    number: 1
  RunRoot: /run/user/1000
  VolumePath: ~/.local/share/containers/storage/volumes
```

**Package info (e.g. output of `rpm -q podman` or `apt list podman`):**

```
$ rpm -q podman
podman-1.7.1-1579308829.gitce4bf33c.fc31.x86_64
```

**Additional environment details (AWS, VirtualBox, physical, etc.):**

physical Lenovo P50 laptop
Add podman service command that allows users to run either a RESTful or
varlink protocol API service.

Addition of docs and RESTful listening.

Initial framework for testing the version 2 (HTTP) API.
Includes a collection of tests for some of the existing
endpoints. Not all tests are currently passing.

Signed-off-by: Ed Santiago <santiago@redhat.com>
The swagger doc headers are, if I may be blunt, evil.
There is far too much manual muckery; much of those
comments should be autogenerated.

I'm working on that: a script that parses the r.Handle()
registrations and autogenerates a set of swagger comments.
It's still a WIP, and I'd like to extend it much more
so the parameter descriptions can be written in a more
human-friendly way, but that's not going to happen
before devconf. ITM here are a ton of problems, some
real, some perhaps not, that my script has found and
fixed.

Some are (possibly minor, I don't know) capitalization
errors. Some are errors in the documented method (GET vs POST).
Some are errors in the endpoint. I believe that all of
them should be reviewed carefully and, as appropriate,
merged. (You do not need to merge this PR, but please
at least incorporate the necessary fixes into your trees).

Signed-off-by: Ed Santiago <santiago@redhat.com>
code was erronously misinterpretting the port as a containername.

Fixes: #1791832

Signed-off-by: baude <bbaude@redhat.com>
Hi All,

We were successfully using fuse-overlayfs with overlay2 driver on podman 1.6.2.

Following upgrade to 1.7.0, the output of 'podman info' no longer shows any mount_program option. We noticed the change to the structure of storage.conf, and moved the setting inside [storage.options.overlay] block. Tried again and still didn't work. We also tried making a [storage.options.overlay2] block, and no luck there either.

Is there a recommendation for what we should try next?
**Description**
The installation instructions for Ubuntu are out of date, now that builds are available through OBS.
https://podman.io/getting-started/installation

In the Atomic PPA, the description needs to be updated to say it's deprecated
https://launchpad.net/~projectatomic/+archive/ubuntu/ppa

**Is this a BUG REPORT or FEATURE REQUEST? (leave only one on its own line)**

/kind bug

**Description**

I am using crc (https://github.com/code-ready/crc) version 1.4.0 to run a local openshift 4.2 inside hyperkit on my Mac. My goal is to build images directly on the openshift machine.

I am using:
- podman 1.4.2 runs on RHCOS 4.2 inside hyperkit.
- podman-remote 1.4.2 runs on MacOS (Catalina) downloaded from https://github.com/containers/libpod/releases/tag/v1.4.2
- I also tried podman 1.6.1-dev on Mac which is the one from brew cask install podman.

Most podman-remote commands work OK over varlink, for example ps/images/pull, but build fails with the following error on the client:
```
Error: invalid character '}' after top-level value
```
And on the server:
```
ERRO[0004] failed to open the context dir tar file {"parameters"
```

**Steps to reproduce the issue:**

1. Run varlink on Linux:
```bash
sudo podman --log-level debug varlink -t 0 tcp:0.0.0.0:7531
```
2. Run build from Mac:
```bash
echo "FROM registry.access.redhat.com/ubi8/ubi-minimal:latest" > temp.Dockerfile
export PODMAN_VARLINK_ADDRESS=tcp:api.crc.testing:7531
./podman-remote-darwin-1.4.2 build -f temp.Dockerfile
```

**Describe the results you received:**

On Mac:
```
$ ./podman-remote-darwin-1.4.2 build -f temp.Dockerfile
Error: invalid character '}' after top-level value
```

On linux:
```
$ sudo podman --log-level debug varlink -t 0 tcp:0.0.0.0:7531
DEBU[0000] Using varlink socket: tcp:0.0.0.0:7531
DEBU[0000] Initializing boltdb state at /var/lib/containers/storage/libpod/bolt_state.db
DEBU[0000] Using graph driver overlay
DEBU[0000] Using graph root /var/lib/containers/storage
DEBU[0000] Using run root /var/run/containers/storage
DEBU[0000] Using static dir /var/lib/containers/storage/libpod
DEBU[0000] Using tmp dir /var/run/libpod
DEBU[0000] Using volume path /var/lib/containers/storage/volumes
DEBU[0000] Set libpod namespace to ""
DEBU[0000] [graphdriver] trying provided driver "overlay"
DEBU[0000] cached value indicated that overlay is supported
DEBU[0000] cached value indicated that metacopy is not being used
DEBU[0000] NewControl(/var/lib/containers/storage/overlay): nextProjectID = 2
DEBU[0000] cached value indicated that native-diff is usable
DEBU[0000] backingFs=xfs, projectQuotaSupported=true, useNativeDiff=true, usingMetacopy=false
DEBU[0000] Initializing event backend journald
INFO[0000] Found CNI network podman (type=bridge) at /etc/cni/net.d/87-podman-bridge.conflist

DEBU[0004] successfully received /tmp/varlink_send022475937
DEBU[0004] created new context dir at /tmp/buildTarball981824908
ERRO[0004] failed to open the context dir tar file {"parameters"
```


**Describe the results you expected:**

When I run the same build on the Linux machine it works:
```
$ sudo podman build -f temp.Dockerfile
STEP 1: FROM registry.access.redhat.com/ubi8/ubi-minimal:latest
STEP 2: COMMIT
d17cc1f9d041e6add7e7512f2ae7156bdc34a17be2625121c6787b61a09654da
```

**Additional information you deem important (e.g. issue happens only occasionally):**

Seems like the error comes from this line:
https://github.com/containers/libpod/blob/v1.4.2-stable/pkg/varlinkapi/images.go#L132

So it appears that the parsing of `iopodman.BuildInfo` got messed up. Not sure how to debug further.

**Output of `podman version`:**

```
Client:
Version:            1.4.2
RemoteAPI Version:  1
Go Version:         go1.12.6
Git Commit:         9b6a98cfd7813513e5697888baa93318395a2055
Built:              Thu Jun 27 00:32:14 2019
OS/Arch:            darwin/amd64

Service:
Version:            1.4.2-stable3
RemoteAPI Version:  1
Go Version:         go1.12.12
OS/Arch:            linux/amd64
```

**Output of `podman info --debug`:**

```
debug:
  compiler: gc
  git commit: ""
  go version: go1.12.12
  podman version: 1.4.2-stable3
host:
  BuildahVersion: 1.9.0
  Conmon:
    package: podman-1.4.2-6.module+el8.1.0+4830+f49150d7.x86_64
    path: /usr/libexec/podman/conmon
    version: 'conmon version 2.0.1-dev, commit: unknown'
  Distribution:
    distribution: '"rhcos"'
    version: "4.2"
  MemFree: 143179776
  MemTotal: 8359862272
  OCIRuntime:
    package: runc-1.0.0-63.rc8.el8.x86_64
    path: /usr/bin/runc
    version: 'runc version spec: 1.0.1-dev'
  SwapFree: 0
  SwapTotal: 0
  arch: amd64
  cpus: 4
  hostname: crc-k4zmd-master-0
  kernel: 4.18.0-147.3.1.el8_1.x86_64
  os: linux
  rootless: false
  uptime: 2h 44m 22.97s (Approximately 0.08 days)
registries:
  blocked: null
  insecure: null
  search:
  - registry.access.redhat.com
  - docker.io
store:
  ConfigFile: /etc/containers/storage.conf
  ContainerStore:
    number: 124
  GraphDriverName: overlay
  GraphOptions: null
  GraphRoot: /var/lib/containers/storage
  GraphStatus:
    Backing Filesystem: xfs
    Native Overlay Diff: "true"
    Supports d_type: "true"
    Using metacopy: "false"
  ImageStore:
    number: 65
  RunRoot: /var/run/containers/storage
  VolumePath: /var/lib/containers/storage/volumes
```

**Package info (e.g. output of `rpm -q podman` or `apt list podman`):**

```
podman-1.4.2-6.module+el8.1.0+4830+f49150d7.x86_64
```

**Additional environment details (AWS, VirtualBox, physical, etc.):**

