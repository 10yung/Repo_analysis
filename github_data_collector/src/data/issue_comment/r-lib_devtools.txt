When specifying an invalid path to the `pkg` option of `devtools::build()`, the following error message is returned (via the call to `pkgbuild::build`): 

> Error: `path` must exist.

This causes some user-confusion because there is a separate, unrelated `path` option for `devtools::build` that is passed to the `dest_path` option of `pkgbuild::build`. Without looking at the traceback, the user would likely assume that their `path` option to `devtools::build` was incorrect, rather than the `pkg` option. 

Two potential solutions are:

- Check the validity of the `pkg` path in `devtools::build` prior to calling `pkgbuild::build` using a similar set of code to [this snippet](https://github.com/r-lib/pkgbuild/blob/master/R/build.R#L69-L71) (swapping in `pkg` instead of `path`)
- Update [the error snippet](https://github.com/r-lib/pkgbuild/blob/master/R/build.R#L69-L71) in `pkgbuild::build` to something like "Error: pkg `path` must exist".

From my perspective, the first option seems preferable, but I'm not sure whether that would fit philosophically with your approach of offloading much of the codebase to functions within the pkgbuild package.
Hi,
On devtools version 2.2.1 (fresh install from CRAN), `devtools::test()` encounters an issue with input argument `stop_on_failure=TRUE`.

The closed issue #2129 from october 2019 was similar.

Example: dummy package available at <https://github.com/gdurif/dummy>
```bash
git clone https://github.com/gdurif/dummy
cd dummy
R -q -e "devtools::test('.', stop_on_failure=TRUE)"
```
Output:
```
> devtools::test('.', stop_on_failure=TRUE)
Loading dummy
Testing dummy
Error in (function (path, filter = NULL, reporter = default_reporter(),  : 
  formal argument "stop_on_failure" matched by multiple actual arguments
Calls: <Anonymous> ... <Anonymous> -> force -> <Anonymous> -> force -> do.call
Execution halted
```

Session info:
```bash
R -q -e "library(devtools); library(testthat); sessionInfo()"
```
Output:
```      
> library(devtools); library(testthat); sessionInfo()
Loading required package: usethis

Attaching package: â€˜testthatâ€™

The following object is masked from â€˜package:devtoolsâ€™:

    test_file

R version 3.6.2 (2019-12-12)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/openblas/libblas.so.3
LAPACK: /usr/lib/x86_64-linux-gnu/libopenblasp-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=fr_FR.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=fr_FR.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=fr_FR.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] testthat_2.3.1 devtools_2.2.1 usethis_1.5.0 

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.3        prettyunits_1.0.2 ps_1.3.0          rprojroot_1.3-2  
 [5] withr_2.1.2       digest_0.6.19     crayon_1.3.4      assertthat_0.2.1 
 [9] R6_2.4.0          backports_1.1.4   magrittr_1.5      rlang_0.4.2      
[13] cli_1.1.0         remotes_2.1.0     fs_1.3.1          callr_3.2.0      
[17] ellipsis_0.3.0    desc_1.2.0        tools_3.6.2       glue_1.3.1       
[21] pkgload_1.0.2     compiler_3.6.2    processx_3.3.1    pkgbuild_1.0.3   
[25] sessioninfo_1.1.1 memoise_1.1.0
```
Error in fetch(key) : lazy-load database 'C:/Users/admin/Documents/R/win-library/3.6/devtools/help/devtools.rdb' is corrupt
Closes #2166 
Prepare for release: 
 
* [x] `devtools::check()` 
* [x] `devtools::check_win_devel()` 
* [ ] `rhub::check_for_cran()` 
* [ ] `revdepcheck::revdep_check(num_workers = 4)` 
* [x] [Polish NEWS](https://style.tidyverse.org/news.html#news-release) 
* [x] Polish pkgdown reference index 
 
Submit to CRAN: 
 
* [x] `usethis::use_version('patch')` 
* [x] Update `cran-comments.md` 
* [x] `devtools::submit_cran()` 
* [ ] Approve email 
 
Wait for CRAN... 
 
* [ ] Accepted :tada: 
* [ ] `usethis::use_github_release()` 
* [ ] `usethis::use_dev_version()` 
* [ ] Tweet 

It seems that `devtools(build_vignettes=TRUE)` does not install the `Suggests` packages prior building the vignette.

Version: devtools_2.2.1.9000

Related: https://github.com/symengine/symengine.R/issues/74
Hi all, I can see that all args besides `upgrade` and `...` aren't being passed through from `devtools::install_dev_deps()` to  `remotes::install_deps()`.

https://github.com/r-lib/devtools/blob/e463a32cb2ecb2f7903d73fe4b3739bf1fd131f9/R/install.R#L150-L168

If you agree I'm happy to raise a PR and add a test case to cover this.

Here's a reprex illustrating the bug ðŸ‘‡ 

``` r
library(devtools)
#> Loading required package: usethis

# let's give it a package to install
pkg <- "docopt"

if (pkg %in% rownames(installed.packages())) {
  remove.packages(pkg)
}
#> Removing package from 'C:/Users/timjg/Documents/R/win-library/3.5'
#> (as 'lib' is unspecified)

directory <- tempdir()

create(directory, fields = list("Suggests" = pkg))
#> <U+2714> Setting active project to 'C:/Users/timjg/AppData/Local/Temp/RtmpGABqrf'
#> <U+2714> Creating 'R/'
#> <U+2714> Writing 'DESCRIPTION'
#> Package: RtmpGABqrf
#> Title: What the Package Does (One Line, Title Case)
#> Version: 0.0.0.9000
#> Authors@R (parsed):
#>     * First Last <first.last@example.com> [aut, cre] (<https://orcid.org/YOUR-ORCID-ID>)
#> Description: What the package does (one paragraph).
#> License: What license it uses
#> Suggests:
#>     docopt
#> Encoding: UTF-8
#> LazyData: true
#> <U+2714> Writing 'NAMESPACE'
#> <U+2714> Setting active project to '<no active project>'

# won't pass through our `type` arg to remotes::install_deps
install_dev_deps(directory, type = stop("oh no!")) 
#> 
#> docopt (NA -> 0.6.1) [CRAN]
#> Installing 1 packages: docopt
#> Installing package into 'C:/Users/timjg/Documents/R/win-library/3.5'
#> (as 'lib' is unspecified)
#> package 'docopt' successfully unpacked and MD5 sums checked
#> 
#> The downloaded binary packages are in
#>  C:\Users\timjg\AppData\Local\Temp\RtmpGABqrf\downloaded_packages

# expected behaviour would be to throw the error
remotes::install_deps(directory, dependencies = TRUE, type = stop("oh no!"))
#> Error in serialize(list(repos, type), NULL, ascii = TRUE): oh no!
```

<sup>Created on 2019-12-17 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

In a package project, if I create a vignette with 
```
usethis::use_vignette("foo")
```
and then manually edit the YAML header of `vignettes/foo.Rmd` to have 
```
output: 
  rmarkdown::html_vignette:
    keep_md: true
```
and then run 
```
devtools::build_vignettes(keep_md = TRUE)
```
I get `foo.Rmd`, `foo.R`, and `foo.html` files in `doc/`, but no `foo.md`.

This may be the desired behavior (see, https://github.com/rstudio/rmarkdown/issues/530, which concludes that `keep_md: true` should not produce `.md` files in the vignettes directory when rendering a vignette), but if so, then the documentation for `keep_md` in `build_vignettes()` should be clarified so users understand this.

## sessionInfo

```
> sessionInfo() 
R version 3.6.1 (2019-07-05) 
Platform: x86_64-w64-mingw32/x64 (64-bit) 
Running under: Windows 10 x64 (build 18363)  

Matrix products: default  

Random number generation:  
RNG:     Mersenne-Twister   
Normal:  Inversion   
Sample:  Rounding    

locale: 
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252   LC_MONETARY=English_United States.1252 LC_NUMERIC=C                           
[5] LC_TIME=English_United States.1252      

attached base packages: 
[1] stats     graphics  grDevices utils     datasets  methods   base       

other attached packages: [1] devtools_2.2.1 usethis_1.5.1   

loaded via a namespace (and not attached):  
[1] Rcpp_1.0.3        rstudioapi_0.10   knitr_1.26        magrittr_1.5      pkgload_1.0.2     R6_2.4.1          rlang_0.4.2       tools_3.6.1       pkgbuild_1.0.6    
[10] packrat_0.5.0     xfun_0.11         sessioninfo_1.1.1 cli_1.1.0         withr_2.1.2       ellipsis_0.3.0    remotes_2.1.0     assertthat_0.2.1  digest_0.6.23     
[19] rprojroot_1.3-2   crayon_1.3.4      processx_3.4.1    callr_3.3.2       clisymbols_1.2.0  fs_1.3.1          ps_1.3.0          testthat_2.3.0    memoise_1.1.0     
[28] glue_1.3.1        compiler_3.6.1    desc_1.2.0        backports_1.1.5   prettyunits_1.0.2
>
```
I can't seem to install private R package on Windows 10 machine with R 3.5.3 using:
```
devtools::install_github('user/repo')
```
I get the following error message:
```
Downloading GitHub repo user/repo@master
Error in utils::download.file(url, path, method = method, quiet = quiet,  : 
  cannot open URL 'https://api.github.com/repos/user/repo/tarball/master'
In addition: Warning message:
In base_download_noheaders(url, path, quiet, headers, method) :
  R (< 3.6.0) cannot send HTTP headers with the `wininet` download method. This download will likely fail. Please choose a different download method, via the `download.file.method` option. The `libcurl` method is best, if available, and the `wget` and `curl` methods work as well, if the corresponding external tool is available. See `?download.file`
```
Note that I added `GITHUB_PAT` in `.Renviron`
I tried passing a different download method but this doesn't work either:
```
devtools::install_github('user/repo', method = 'libcurl')
```

However, I can install without an issue if I use R 3.6.1. 
I am working on the development version of R and isntalled the Rtools40. When i load devtools I get the error 
> find_rtools(T)
Scanning R CMD config CC...
cc_path:  
'' does not exist
Scanning path...
Scanning registry...
Found C:/Rtools for 4.0 
WARNING: Rtools is required to build R packages, but the version of Rtools previously installed in C:/Rtools has been deleted.

Please download and install Rtools custom from http://cran.r-project.org/bin/windows/Rtools/.

But I did not delete the Rtools directory and it is still there. Please let me know how to fix this. 
I am using devtools 2.2.1. 

I have tried installing the devlopment version of devtools to see if that fixes the issue but I get the following error when loading development version of devtools. 

> library(devtools)
Loading required package: usethis
Error: package or namespace load failed for â€˜devtoolsâ€™ in get(method, envir = home):
 lazy-load database 'C:/Users/Ashwath/Documents/R/win-library/4.0/devtools/R/devtools.rdb' is corrupt
In addition: Warning message:
In get(method, envir = home) : internal error -3 in R_decompress1