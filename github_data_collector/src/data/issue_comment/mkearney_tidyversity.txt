Perhaps you can leverage [skimr](https://github.com/ropensci/skimr)
Just in case you do not know about those packages, which intersect, in my view, with the kind of models that you are aiming at representing here:

https://github.com/melff/memisc
https://github.com/melff/mclogit

Hello!

I really like this package (admittedly after playing around with it for a few minutes). I think a lot of the base R stats functions seem quite dated now, with sometimes non-human friendly print functions. So I really like your efforts to improve this.

Currently, I'm also working on a package that takes a tidy approach to statistical analyses in academia (https://github.com/WillemSleegers/tidystats). I think that our packages are perfectly compatible and I would like to add support for your package in mine.

`tidystats` takes the output of statistical analyses (like `lm()`), and makes the output tidy. The result is a table in which each row is a statistic and each column is a useful variable (e.g., the label for the statistic, and the statistic's value). This output can be added to a list, together with additional analyses. Finally, this list can be converted to a simple text file (made possible by the tidy format of each model's output). This list can be shared with others and used for improving the reporting of these statistics.

Much of this is made possible because the output of a statistical test returns an object with a specific class. I can then use this class to figure out which function to run that parses the output into a tidy format. Currently, `tidyversity` returns objects with the same class as the original stats function (e.g., `tidy_regression()` and `lm()` both return an object with class 'lm'). 

Would it be an idea to add a class label (e.g., 'tidy_lm') to the output? This distinguishes it from the original `lm()` output and would make it easy for me to add support for `tidyversity` in `tidystats`.

I gladly hear your thoughts on this.