# 4.1 节代码
```
func login(w http.ResponseWriter, r *http.Request) {
	fmt.Println("method:", r.Method) //获取请求的方法
	if r.Method == "GET" {
		t, _ := template.ParseFiles("login.gtpl")
		log.Println(t.Execute(w, nil))
	} else {
		//请求的是登录数据，那么执行登录的逻辑判断
		fmt.Println("username:", r.Form["username"])
		fmt.Println("password:", r.Form["password"])
	}
}
```
缺少：
```
r.ParseForm()
```
所以函数打印的`username`与`password`一直为空。
Checking the error variable where the variable is assigned but not checked and then reassigned.

The [regexp.MustCompile function](https://golang.org/pkg/regexp/#MustCompile) panics if the regex fails to compile and should only be used in globals or init functions. Instead use [regexp.Compile](https://golang.org/pkg/regexp/#Compile) and check `err` is nil.

WebAssembly?
在学习中发现最新版的beego常量是驼峰写法，以前是下划线，发现很多处都改了，刚开始只注意到mysql部分的
I'm new to Go, but far as I can tell this is the correct way to do this now; at least e.g. `godoc builtin` just returns the godoc help info.
go version go1.12.6 windows/amd64
  执行5.6节中redis的代码时报错:

```
 go run .\redisin.go
# command-line-arguments
.\redisin.go:42:5: syntax error: unexpected newline, expecting comma or }
```
查询一番发现
```
func newPool(server string) *redis.Pool {

	return &redis.Pool{

		MaxIdle:     3,
		IdleTimeout: 240 * time.Second,

		Dial: func() (redis.Conn, error) {
			c, err := redis.Dial("tcp", server)
			if err != nil {
				return nil, err
			}
			return c, err
		},

		TestOnBorrow: func(c redis.Conn, t time.Time) error {
			_, err := c.Do("PING")
			return err
		}**,** //在多行 array、slice、map 语句中缺少 , 号  单行中可以省略但是多行不能省略
	}
}
```
var lastInsertId int
	err = db.QueryRow("INSERT INTO userinfo(username,**_departname_**,created) VALUES($1,$2,$3) returning uid;", "astaxie", "研发部门", "2012-12-09").Scan(&lastInsertId)
	checkErr(err)
	fmt.Println("最后插入id =", lastInsertId)


这个departname 应该是department才对  ,建表语句中也是department