This issue could be a regression from #77.

``` r
df <- data.frame(val = c(1, 2, NA),
                 wgt = c(1, 1, 1))

sjmisc::frq(df, val)
#> 
#> val <numeric>
#> # total N=3  valid N=2  mean=1.50  sd=0.71
#> 
#>  val frq raw.prc valid.prc cum.prc
#>    1   1   33.33        50      50
#>    2   1   33.33        50     100
#>   NA   1   33.33        NA      NA
sjmisc::frq(df, val, weights = wgt)
#> 
#> val <numeric>
#> # total N=2  valid N=2  mean=1.50  sd=0.71
#> 
#>  val frq raw.prc valid.prc cum.prc
#>    1   1      50        50      50
#>    2   1      50        50     100
#>   NA   0       0        NA      NA
```

<sup>Created on 2020-01-07 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

I expect that both frequencies tables are equal.

 - sjmisc [2.8.2]

Hi Daniel (Fröhliche Weihnachten),
I pull what I thing is an interseting feature for `rec`.

When one wants to recode some values of a variable not by means of `rec="rev"`, no labels are specified and there is a 1 to 1 correspondence between, one can expect that labels will be preserved. It is the goal of this PR.

As I have seen before (I believe through your package `sjlabelled`), I assume that if data has labels, values are numeric.

In the `rec_helper` function: first, some conditions are checked (essentially all recoding values are numeric and there is a 1 to 1 correspondence between old and new values; lines 593-603, and also 618). Then, after removing labels which should go with the NA value (lines 614-617) and deciding final labels depending on if there is an `else=copy` recoding pair (618-624), new values are asigned to the labels (625-630)

Further:
- an example is updated in `test-rec`
- When checking the package, the help for `str_start` (`str_start.Rd`) was changed by `roxygen2` (7.0.2). To keep it as it was, I had do modify `str_start_end.r`

Tell me what you think
Thanks!
These two lines worked well in Mac machines but not in Windows machines: 

bbq$V44r <- rec(bbq$V44, rec="0:5=0[不會]; 6:10=1[會]", as.num=F) 
frq(bbq$V44r)

If I change the labels in [] from Chinese to English; same thing occurred. 
If I removed the labels including [], it worked fine. 

Please help check this issue and let me know if I missed anything. Thanks. 
![screen shot 2018-05-20 at 19 33 11](https://user-images.githubusercontent.com/12545793/40278942-254b37cc-5c6d-11e8-80be-d6c12b25d35c.png)

I really like the functionality of `flat_table`. 

I was wondering if you would consider extending the functionality to be able to add totals as extra rows/columns to the table? Something similar to what `xtab` does or [addmargins](https://stat.ethz.ch/R-manual/R-devel/library/stats/html/addmargins.html) (not necessarily with the same flexibility)

I can sort of do it already:
```
efc %>%
    select(e16sex, e42dep, c172code, n4pstu, c161sex) %>%
    flat_table() %>% 
    addmargins()
```

although this loses the value labels.

Then if I add a `group_by` it doesn't work at all:
```
efc %>%
    group_by(e16sex, e42dep) %>%
    select(e16sex, e42dep, c172code, n4pstu, c161sex) %>%
    flat_table() %>% 
    addmargins()
# Error in addmargins(.) : 'A' must be an array or table
```
presumably because it's now multiple tables.

If it wouldn't be very difficult, I think it would be a really nice addition to `flat_table`.
the functionality to convert a dataframe into an ragged representaion (a la ftable) migth be somethimg for your sjmisc package.

http://stackoverflow.com/questions/41324110/convert-normal-r-data-frame-into-ragged-format-a-la-ftable