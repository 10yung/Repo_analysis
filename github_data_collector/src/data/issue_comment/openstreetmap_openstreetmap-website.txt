Probably an error I built in, will investigate.
In #2452 I took the approach of starting to use bootstrap with most of the components disabled, then working through them individually to enable them and refactor when necessary. I think it's helpful to have an issue open here to share my plans with everyone who might be interested.

#2508 contained enabling work in order to enable forms, and to remove the bulk of our custom reset code that was interfering with some components. As far as I'm aware, there's only two things now remaining to refactor before enabling bootstrap globally:

* Tooltips. We have our own copy of an older version of bootstrap-tooltips and enabling the built-in tooltips gives white text on a white background
* Dropdowns. We have our own dropdown boxes with similar enough css class names that we end up with two dropdown arrows on each box

When those are taken care of, then we can enable bootstrap entirely and remove our temporary `bootstrap-custom.css` file (and close this issue). Future work after that point would include:

* Refactoring the forms. There's actually quite a few of these around the site, and as well as making them look better (see e.g. https://github.com/gravitystorm/openstreetmap-website/issues/37) I want to bring some consistency around inline errors vs error blocks. But this is a lot of work.
* Continue to slim down our custom.css file. Using the bootstrap grid has removed a bunch of code. So we're down from 2910 lines to 2609 already, forms will reduce that further, and I hope to find more things where we can just use the framework instead of having to have custom rules.
Steps to reproduce:

* Open the history pane
* Wait for the title to load
* Before the list of changesets has loaded, close the history pane by clicking on X

Doing this will close the history pane and reset the slippy map to the world (z3). The latter is a bug and should be fixed.

This problem is much more accentuated during times of high server load when requests to gather the changeset list might be dropped by the server altogether, leaving the user with an empty history pane that throws them to z3 when closed.
Me and a few other users have been getting called out for the length of our changeset comments. While I agree we could probably shorten them, the natural tendency is to run with whatever length of rope your given. So, it would be good if the number of allowed characters was at least limited to less then what it currently is. Which would force us and other users to be more precise and focus on a single subject. As it is, even some shorter changeset comments can cover multiple things and go off topic extremely easily. Stricter limits would help IMO. 

Also, I guess one of the problems with longer comments is that it makes it hard to read them in the various changeset QA tools. Which I understand. Shorting it for that alone would be akin to mapping for rendering IMO, but its still a valid complaint. While the message length shouldn't be "Twitter short", I think there has to be good medium between that and what it currently is. 
When resolved an anonymous notes, a reminder message to verified source will be shown (which is great) but UX should be more clearer then this:

![Screenshot_2019-12-30 Note 1582510 OpenStreetMap](https://user-images.githubusercontent.com/10856197/71565788-b5d88f00-2ae4-11ea-9db3-9a7dddd81ebe.png)

As attached images show, it's very easy to confused reminder messages for a comment.

In this case I've closed note without provided any comment due to that it also made thing worse, Any quick glance will lead to think that reminder message is my comment.

Please update to a better layout.
In #2383, @zerebubuth proposed to deprecate and remove the /api/0.6/changes endpoint.

From his reasoning: _This API call is little-used and IMHO should be deprecated and removed._

This pull request removes controller, api_ability, route and test case for this endpoint.

/api/0.6/changes is undocumented at this time and a rather obscure and specialized feature.

One (former?) user I could identify: @iandees has an 8 years old script out there (https://gist.github.com/iandees/1271803) to remove outdated tiles in some TileStache disk cache. Not sure, if this is still in use today?


TODO: 
* Check production log to identify any remaining users of this endpoint

This is a follow up for #2221, this time using jbuilder. To avoid large scale changes to routes.rb and test cases, I added some method in the respective controllers to set a default output format "XML".
https://www.openstreetmap.org/about currently thanks our hosting partners, and links to https://hardware.openstreetmap.org/thanks/

We also use a lot of open source software like ruby, rails, mapnik, Leaflet, etc. that do not formally require attribution. It would still be nice to list them somewhere.

The OSM foundation also relies on a few external companies, most of which we do not, afaik, publicly mention anywhere.

What does everyone think of having an openstreetmap.org/thanks page that would thank all providers? 
Пожалуйста сделайте что бы пакеты правок с обсуждениями были видны на страницы, и разбить их на 2: 
1. обсуждение моих пакетов правок, 
2. обсуждение к чужим пакетам правок.
Сделайте пожалуйста поиск по своим пакетам правок, очень надо бывает найти внесенные очень давно пакеты правок, приходится по пол дня щелкать сотни страницы и просматривать собственные пакеты правок. 