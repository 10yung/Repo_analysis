1. What command did you run?

  I ran `./build.sh`

2. What behavior did you expect?

  I expected successfull build

3. What behavior did you get instead?

  I observed inability to complete rake codedb:extensions. Everytime I try to run bin/rbx i'm getting [this](https://gist.github.com/slowpilot/e1aa202fffc59494b2978b45cbb26209)

4. What version of Rubinius?
  4.12

  *Note that we accept issue reports for the current release of Rubinius. That version can be found at https://rubinius.com/install/. If there is a reason that you cannot use the current version, other than not having installed the current version, please include that reason in your issue.*

  Output of `rbx -v`:
  [https://gist.github.com/slowpilot/e1aa202fffc59494b2978b45cbb26209](https://gist.github.com/slowpilot/e1aa202fffc59494b2978b45cbb26209)

5. What version of operating system?

  Output of `uname -a`: Darwin Air 19.0.0 Darwin Kernel Version 19.0.0: Thu Oct 17 16:17:15 PDT 2019; root:xnu-6153.41.3~29/RELEASE_X86_64 x86_64

6. What is your operating system distribution, if your operating system has more than one?

  My distribution is OS X Catalina

7. How did you build your version of Rubinius?

  - [+] I used RVM.
  - [ ] I used ruby-build.
  - [ ] I used ruby-install.
  - [+] I built manually from a tarball.
  - [ ] I built manually from a git clone.
  - [ ] I installed a binary.

8. Does this issue involve proprietary code?

  - [ ] Yes, this issue involves proprietary code that I cannot share.
  - [ ] Yes, this issue involves proprietary code, but I am able to share it under certain conditions.
  - [+] No, this issue doesn't involve proprietary code.

9. Are you able to help us debug the issue?

  - [+] Yes, I'm able to help debug, including running commands under lldb.
  - [ ] No, I'm not able help debug or I don't have time to help.

1. What command did you run?

  I ran `./build.sh --prefix=~/.rubies/rbx-4.12`
Full output and commands at https://github.com/eregon/ruby-install-builder/runs/380326221

2. What behavior did you expect?

  I expected it builds sucessfully.

3. What behavior did you get instead?

It fails with:
```
...
3: CC machine/util/timing.c
3: CC machine/util/utf8.c
3: CC machine/util/vsnprintf.c
3: CXX machine/vm.cpp
3: CXX machine/vm_thread_state.cpp
Build time: 382.5293304 seconds
1: LD machine/vm
GEN codedb/platform.conf
rake aborted!
Don't know how to build task '' (see --tasks)

Tasks: TOP => default => spec => build => build:build => core:build => codedb:extensions
(See full trace by running task with --trace)
##[error]Process completed with exit code 1.
```

4. What version of Rubinius?

4.12

5. What version of operating system?

Ubuntu 18.04

7. How did you build your version of Rubinius?

  - [x] I built manually from a tarball.
---

It should be easy to run this workflow to reproduce:
```yaml
on: [push]
jobs:
  build:
    if: true
    strategy:
      matrix:
        os: [ ubuntu-18.04 ]
        ruby: [ rbx-4.12 ]
    runs-on: ${{ matrix.os }}
    steps:
    - run: sudo apt-get update
    - run: sudo apt-get install ruby clang llvm

    - run: wget 'https://github.com/rubinius/rubinius/releases/download/v4.12/rubinius-4.12.tar.bz2'
    - run: tar xf rubinius-4.12.tar.bz2
    - run: ./build.sh --prefix=~/.rubies/${{ matrix.ruby }}
      working-directory: rubinius-4.12

    - name: Install Bundler if needed
      run: |
        if [ ! -e ~/.rubies/${{ matrix.ruby }}/bin/bundle ]; then
          export PATH="$HOME/.rubies/${{ matrix.ruby }}/bin:$PATH"
          gem install bundler -v '~> 1' --no-document
        fi
    - name: Basic test
      run: ~/.rubies/${{ matrix.ruby }}/bin/ruby --version
    - name: OpenSSL test
      run: ~/.rubies/${{ matrix.ruby }}/bin/ruby -ropen-uri -e 'puts open("https://rubygems.org/") { |f| f.read(2014) }'
```

Already-built versions for Ubuntu 18.04 might help here, although different system library versions might be problematic.
I noticed there are [builds](http://rubinius-binaries-rubinius-com.s3-us-west-2.amazonaws.com/index.txt) for 16.04 and 14.04 but not for 18.04.
Hey @brixen 

Would you be open to official packaging for rubinius in the upstream Alpine Linux repositories? a la https://pkgs.alpinelinux.org/packages

I assume we can take the learnings from https://gist.github.com/brixen/ef849d23078ee3fc617c7f40ad3630bf and my (mostly) summarised version in https://gist.github.com/CpuID/6a1ecadf3045f0f2d76ca5d7d46ff3a6 to get there?

[Upstream package creation docs](https://wiki.alpinelinux.org/wiki/Creating_an_Alpine_package)

Thanks :)