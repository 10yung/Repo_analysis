建立一个页面，类似左边是目录，右边是内容，可以便于查看。
RT，我想对于绝大多数（特别是第一次求职的）应聘者来说，对目标公司的业务是非常陌生的，在这样的情况下，生搬硬套地强行记忆诸如：

> 给定一个链表，删除链表的倒数第N个节点，并且返回链表的头结点
>  jvm的垃圾回收机制？
>  java类加载机制？如何实现自定义类加载器？findClass与loadClass的区别？

这样的问题，即便是用九牛二虎之力记住了，也是没有根基的浅层记忆。如果在这些面试题的后面附上不光是简单的答案，更加上一些实际在此公司中业务场景中，为何需要这样的知识的解说，那样不仅会容易理解很多，对面试者准备来说，时间也花得更加的有意义，学习到了真正的东西。
包含BAT等互联网大厂的校招试题以及技术文档
参考代码太简单了，比如遇到循环引用对象怎么办？
可以使用JSON.parse(JSON.stringify(arr1)) 实现数组和对象的深拷贝
```
const arr1 = {
  a:1,
  b:[{name:1}],
  c:{age:1}
}
```

设置一个头结点，它的下一个节点是原始指针，设置两个指针，一个快指针，一个慢指针，快指针多走n+1步，这样当快指针到达尾部的下一个节点的时候，慢指针的下一个节点就是要删除的节点
```
var removeNthFromEnd = function(head, n) {
    let dummy = new ListNode(0);
    dummy.next= head;
    let slow =dummy;
    let fast = dummy;
    while(n>=0){
        fast = fast.next;
        n--;
    }
    if(!fast) return head.next;
    while(fast!=null){
        fast = fast.next;
        slow = slow.next;
    }  
    slow.next = slow.next.next; 
    return dummy.next;

};
```

on windows:
$ git clone https://github.com/0voice/interview_internal_reference.git
Cloning into 'interview_internal_reference'...
remote: Enumerating objects: 23, done.
remote: Counting objects: 100% (23/23), done.
remote: Compressing objects: 100% (22/22), done.
remote: Total 733 (delta 8), reused 4 (delta 1), pack-reused 710
Receiving objects: 100% (733/733), 514.31 KiB | 54.00 KiB/s, done.
Resolving deltas: 100% (349/349), done.
**error: unable to create file 02.华为篇/2.1.0 static有什么用途?.md: Invalid argument**
fatal: unable to checkout working tree
warning: Clone succeeded, but checkout failed.
You can inspect what was checked out with 'git status'
and retry the checkout with 'git checkout -f HEAD'
MongoDB下的Markdown文件有很多都是空的
node* pcur=head->next;
此处应修改为 node* pcur=head， 否则输出时将会丢失第一个元素。