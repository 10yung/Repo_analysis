Issues raised here are **ONLY** for:
* LinuxGSM bugs.
* Feature suggestions.
* Code contributions.

Issues raised here are **NOT** for:
* General support.
* Specific game server issues (e.g CS:GO, TF2).
* Dedicated server issues (e.g Ubuntu, CentOS).
* Anything not directly related to LinuxGSM development.

For general support visit the **[LinuxGSM-Support](https://linuxgsm.com/support)**.

***Please use the template below, deleting the above text***

## User Story

Running the update command does not work anymore `./inssserver update`
I have tried to update the server forcefully `./inssserver force-update`
Here are links concerning this issue:
https://hastebin.com/oqisamanok
https://pastebin.com/GxJKREE9
https://ibb.co/JHd8GZW
## Basic info

* **Distro:** [CentOS Linux 7]
* **Game:** [Insurgency Sandstorm]
* **Command:** [Update]
* **LinuxGSM version:** [v19.12.5]

## Further Information

A clear description of what the bug is and any ideas on how to resolve it. Plus any further context that might be relevant to the issue.

```
[inssserver@li1116-159 ~]$ ./inssserver update
[ FAIL ] Update inssserver: Checking for update: SteamCMD: checking remote build[inssserver@li1116-159 ~]$
```
```
[inssserver@li1116-159 ~]$ ./inssserver force-update
[ .... ] Update inssserver: Redirecting stderr to '/home/inssserver/Steam/logs/stderr.txt'
[  0%] Checking for available updates...
[----] Verifying installation...
Steam Console Client (c) Valve Corporation
-- type 'quit' to exit --
Loading Steam API...OK.

Connecting anonymously to Steam Public...threadtools.cpp (833) : Assertion Failed: ThreadGetProcessExitCode: no such process 1138
Logged in OK
Waiting for user info...FAILED. Timed out.
OK

```


## To Reproduce

Steps to reproduce the behavior:
1. Go to user account with Insurgency Sandstorm server installed.
2. type in the commands shown above.
3. Enjoy the errors

## Expected behavior
The expected behavior would be an updated on the application that is trying to be updated.. 
The current instructions on the website look like this:
```
yum install mailx postfix curl wget tar bzip2 gzip unzip python binutils bc jq tmux glibc.i686 libstdc++ libstdc++.i686
```
However on CentOS 8 there is no `python` package. It should probably be replaced by `python3` which worked for me.

I realize that for CentOS 7 `python` is a valid package. So maybe there should be a new tab for CentOS 8 or a different soltution.


## Basic info

* **Distro:** [Ubuntu 16.04]
* **Game:** [Cstrike]
* **Command:** [Monitor] game dig
* **LinuxGSM version:** [v12.34.56]

## Further Information

Server will default to 6 max players after 4-8 hours.

If I hardcode maxplayers to 32 not seeing it happen so far.

Iâ€™ll provide more info when I get home.

Anyone else see this happen before I rebuild everything lol
[csgoserver@iZ0jymoj7smizbZ ~]$ ./csgoserver install
    fetching core_trap.sh...OK
    fetching _default.cfg...OK
    copying _default.cfg...OK
    fetching common.cfg...OK
    fetching csgoserver.cfg...OK
    fetching linuxgsm.sh...OK
    fetching core_getopt.sh...FAIL
https://raw.githubusercontent.com/GameServerManagers/LinuxGSM/master/lgsm/functions/core_getopt.sh



how to deal with :D
I am producing a web app using LGSM to contol games
currently I am refactoring the ouput from the dt command most of the output works fine 
as I'm splitting the string  around the **:**  character to produce the array E.G
                Key                           value
   LinuxGSM version:             v19.12.5
this works fine in most cases and most other outputs are easy enough to create a key for with the exception of this part 
mcserver outputs
`
> Game       INBOUND    25565  tcp
> Query      INBOUND    25565  udp
> Rcon       INBOUND    25575  tcp`

however most other games output like
`
> Game/RCON  INBOUND    27016  tcp/udp
> SourceTV   INBOUND    27021  udp
< Client     OUTBOUND   27006  udp`

the easy fix is to add **:**'s after the title  and remove the > and <
any thoughts ?

## Basic info

* **Distro:** Fedora 31
* **Game:** Garry's Mod
* **Command:** Update
* **LinuxGSM version:** v19.12.5

## Further Information

I downloaded and attempted to start Garry's Mod on the default public branch. Then in `config/config-lgsm/gmodserver/common.cfg`, I set `branch="x86-64"` to try the new 64-bit branch. I then ran the `update` command, where LGSM said that my build number matched the desired one (it did not, it still matched public). I used `force-update` to pull the branch, which worked. I then ran `update` again, but LGSM complained that I had a version mismatch, and attempted to update to the latest public branch build again. I confirmed using the `details` command that LGSM is correctly detecting the brach I set.

`./gmodserver details`:
```
Garry's Mod Server Details
=====================
Server name:      Gmod Server
Branch:           x86-64
```

`./gmodserver update` after `force-update`:
```
$ ./gmodserver u
[  OK  ] Update gmodserver: Checking for update: SteamCMD

Update available
* Local build: 4555659
* Remote build: 4377587
https://steamdb.info/app/4020/

^Cplying update...
```

The local build is correct, the remote build is incorrect and still points to the latest build on `public`
@borzaka 
In this update I get the same bug with didn't restart servers like in this issue: #2025 
Issue was closed, but I can't reopen it, so I create this one...

Scripts logs:
> Log with bug:
[csgoserver-script.log](https://github.com/GameServerManagers/LinuxGSM/files/4029768/csgoserver-script.log)
> Log without bug:
[csgoserver-script.log](https://github.com/GameServerManagers/LinuxGSM/files/4029776/csgoserver-script.log)


I can give more logs with the same trouble after today update and without it.
**Just say what logs do u need.**

# Description

While installing the No More Room In Hell server went smooth, every startup after the first one results in a crash. The logs revealed that certain files were missing: these files - according to Steam Community posts - were renamed around 2018. I added a .sh file (based from a [fix posted on the Steam Community forums](https://steamcommunity.com/app/224260/discussions/2/1732089092441769414/)) that only runs on the No More Room In Hell server installation, which automatically creates symbolic links towards the old filenames.

Fixes #2665

## Type of change

* [x] Bug fix (change which fixes an issue).
* [ ] New feature (change which adds functionality).
* [ ] New Server (new server added).
* [ ] Refactor (restructures existing code).
* [ ] Comment update (typo, spelling, explanation, examples, etc).

## Checklist

PR will not be merged until all steps are complete.

* [ ] This pull request links to an issue.
* [ ] This pull request uses the `develop` branch as its base.
* [ ] This pull request Subject follows the Conventional Commits standard.
* [ ] This code follows the style guidelines of this project.
* [ ] I have performed a self-review of my own code.
* [ ] I have checked that this code is commented where required.
* [ ] I have provided a detailed enough description of this PR.
* [ ] I have checked If documentation needs updating.

## Documentation

If documentation does need updating either update it by creating a PR (preferred) or request a documentation update.
* User docs: https://github.com/GameServerManagers/LinuxGSM-Docs
* Dev docs: https://github.com/GameServerManagers/LinuxGSM-Dev-Docs

**Thank you for your Pull Request!**

Rust server is not saved immidiately after server restart or restart with force-update. Players abusing that.
## User Story

After installing a new No More Room In Hell server (with default configuration), attempting to start the server after stopping (or restarting) the server will result in a crash. 

## Basic info

* **Distro:** Ubuntu 18.04 LTS (Server)
* **Game:** No More Room In Hell
* **Command:** Start
* **LinuxGSM version:** v19.12.5

## Further Information

The logs in ~/log/console/* claim there to be a missing file.

```
AppFramework : Unable to load module soundemittersystem.so!
Unable to load interface VSoundEmitter002 from soundemittersystem.so
```

Looking through the Steam forums revealed that some files got renamed somewhere in 2018 (for example; soundemittersystem.so is now soundemittersystem_srv.so). It can be manually fixed by adding a symbolic link. And although that fixed the problem with that file, it appeared that there were more files suffering from the same problem. A user on the [Steam Community Forums](https://steamcommunity.com/app/224260/discussions/2/1732089092441769414/) listed a full list of symbolic links that should be made - and sure enough - no more errors were to be seen afterwards.

## To Reproduce

Steps to reproduce the behaviour:
1. Install the nmrihserver (with default configuration)
2. Start the server
3. Restart the server
4. The server will fail to launch, and a log file is generated with the missing file error

## Expected behaviour

The server should ideally be able to (re)start without issues.