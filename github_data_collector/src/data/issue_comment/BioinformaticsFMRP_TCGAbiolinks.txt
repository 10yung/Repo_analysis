Dear Collegue,
I wrote the  follow code but I get this error from the TCGAanalyze_Preprocessing function:
Error in `$<-.data.frame`(`*tmp*`, "Disease", value = character(0)) : 
  replacement has 0 rows, data has 859

Could you suggest me any solution please?
Thank you in advance
 

query.mm <- GDCquery(project = "MMRF-COMMPASS",
data.category = "Transcriptome Profiling",
data.type = "Gene Expression Quantification",
workflow.type="HTSeq - FPKM")



GDCdownload(query.mm, method = "api", files.per.chunk = 100, directory = "GDCdata")

DataMM <- GDCprepare(query.mm, 
                                 save = TRUE , 
                                 save.filename = "MMCompass.rda" , 
                                 directory = "GDCdata" , 
                                 summarizedExperiment = TRUE , 
                                 remove.files.prepared = FALSE)


DataMMatrix <- assay(DataMM,"HTSeq - FPKM")
dataMMcomplete <- log2( MMMatrix[1:56488,1:859]+1)

clin.mm <- GDCquery_clinic("MMRF-COMMPASS", "clinical")
names(clin.mm)[1] <- "bcr_patient_barcode" 
colnames(dataMMcomplete) <- substr(colnames(dataMMcomplete),1,9)

tabSurvKM <- TCGAanalyze_SurvivalKM(clin.mm,
                                    dataMMcomplete,
                                    Genelist = rownames(dataMMcomplete),
                                    Survresult = TRUE,
                                    p.cut = 0.2,
                                    ThreshTop = 0.67,
                                    ThreshDown = 0.33)

MMRFRnaseq_CorOutliers <- TCGAanalyze_Preprocessing(DataMM)

Error in `$<-.data.frame`(`*tmp*`, "Disease", value = character(0)) : 
  replacement has 0 rows, data has 859







Sorry, I don't know what's the matter with the funtion.
I'm pleased to use TCGAbiolinks to download all data from TCGA, and I always use it. Thanks for your development and maintenance to this packages, It really make us convenient to download data from GDC.

These days I have run these code below many times
tcga_trna_query <- GDCquery(project = "TCGA-KIRC",
                            data.category = "Transcriptome Profiling",
                            data.type = "Gene Expression Quantification",
                            experimental.strategy = "RNA-Seq",
                            workflow.type = "HTSeq - Counts")
GDCdownload(tcga_trna_query, 
            directory = here::here("data", "raw",
                                   "TCGA", "GDCdata"),
            files.per.chunk = 8)
tcga_trna_se <- GDCprepare(tcga_trna_query,
                           directory = here::here("data", "raw",
                                                  "TCGA", "GDCdata"))
dim(tcga_trna_se)  

before yesterday, dim(tcga_trna_se) always returned
[1] 56512 611 

but today, I run these code again, it retures me this value
[1] 56499   611

I have a lot analysis based on these data, and I always annotate my analysis results with ###,
and  before yesterday, the results from analysis are always same, but today it makes some different,. So I don't think I read it wrong.
I don't update the package these days. and I have go to the TCGA and emsembl official website where there isn't any update for the dataset.
 
Thanks in advance.

Hi, I am new in bioinformatics field. Need a help, I am trying to see a specific gene expression in tumor condition compared to its adjacent normal patients from TCGA-STAD. Here I performed Differential expression analysis, since I just want to see a particular gene expression, I didn't set the fdr.cut/logFC.cut  values. Here :

` querySTADpair<-GDCquery(project="TCGA-STAD", 
                legacy = TRUE, data.category = "Gene expression", 
                data.type = "Gene expression quantification", 
                platform = "Illumina HiSeq", 
                sample.type = c("Primary solid Tumor",
                                "Solid Tissue Normal"), 
                file.type = "results")

GDCdownload(querySTADpair)

prepSTAD<-GDCprepare(query = querySTADpair,
                     save = TRUE, save.filename = "STAD.rda",
                     summarizedExperiment = TRUE)

listall<-c(colnames(prepSTAD))

paired<-TCGAquery_MatchedCoupledSampleTypes(listall,c("NT","TP"))

querypaired<-GDCquery(project = "TCGA-STAD", 
                      data.category = "Gene expression",
                      data.type = "Gene expression quantification",
                      experimental.strategy = "RNA-Seq",
                      platform = "Illumina HiSeq",
                      file.type = "results",
                      barcode = paired, 
                      legacy = TRUE)

GDCdownload(querySTADpair)

STADpairedRNAseq<-GDCprepare(querypaired)

STADpairedRNAseqmatrix<-assay(STADpairedRNAseq,"raw_count")

dataNorm<-TCGAanalyze_Normalization(tabDF = STADpairedRNAseqmatrix,
                                    geneInfo = geneInfo)
dataFilt <- TCGAanalyze_Filtering(tabDF = dataNorm,
                                    method = "quantile", 
                                    qnt.cut =  0.25)
samplesNT <- TCGAquery_SampleTypes(barcode = colnames(dataFilt),
                                    typesample = c("NT"))
samplesTP <- TCGAquery_SampleTypes(barcode = colnames(dataFilt), 
                                   typesample = c("TP"))

dataDEGs<- TCGAanalyze_DEA(mat1 = dataFilt[,samplesNT],
                           mat2 = dataFilt[,samplesTP], 
                           Cond1type = "Normal",  
                           Cond2type = "Tumor", 
                           method = "glmLRT")

dataDEGsFiltLevel <- TCGAanalyze_LevelTab(dataDEGs,"Tumor","Normal",
                                          dataFilt[,samplesTP],
                                          dataFilt[,samplesNT])
`

Then I called the gene name with dataDEGsFiltLevel["gene name",] then I get the values of gene expression.

I just wondering whether this is a correct method? or is there any unnecessary step in the codes above?

Any suggestions will be very appreciated. Thanks


Hello,I am trying to install the GCTAbiolinks, but there are some errors as the follow:
if (!requireNamespace("BiocManager", quietly=TRUE))
  install.packages("BiocManager")
BiocManager::install("TCGAbiolinks")
> library(TCGAbiolinks)
Error: package or namespace load failed for ‘TCGAbiolinks’ in loadNamespace(i, c(lib.loc, .libPaths()), versionCheck = vI[[i]]):
 there is no package called ‘GenomeInfoDbData’

What's more,I try to install the package GenomeInfoDbData, but there are still some errors:
> install.packages('GenomeInfoDbData')
Warning in install.packages :
  package ‘GenomeInfoDbData’ is not available (for R version 3.6.1)

I think biolinks will help me in my further work, and I need your help, thank you very much!
i am working on TCGA database and want to prepare clinical data for analysis and normalization.i have data in  csv format ,for TCGA biolinks preparation file can be in CEL format. so how can i prepare and normalize clinical  data using TCGAbiolinks package
When I downloaded Simple nucleotide variation using the following code:
```
query.sim_Nuc_Var <- GDCquery(project = item, 
				data.category = "Simple nucleotide variation", 
				data.type = "Simple somatic mutation",
				access = "open", 
				legacy = TRUE) 
GDCdownload(query.sim_Nuc_Var, method = "client")
BRCA.exp <- GDCprepare(query.sim_Nuc_Var)
```
some diseases(eg. TCGA-CESC) returned the following errors:
```
Error in GDCprepare(query.sim_Nuc_Var) : 
  There are samples duplicated. We will not be able to prepare it
```
Can you help me?
Hi,
I would like to download TCGA SARC data from GDC by TCGAbiolinks package.I wrote below code for that pupose:

    ```
         query <- GDCquery(project = "TCGA-SARC",sample.type = "Primary solid Tumor",
                    data.category = "Transcriptome Profiling",
                    data.type = "Gene Expression Quantification",workflow.type = "HTSeq - Counts")
         GDCdownload(query) 
```
 when I run below code:

     `data <- GDCprepare(query)`

I see below message in console:

    ```
Downloading data for project TCGA-SARC
    GDCdownload will download 259 files. A total of 64.930633 MB
    Downloading as: Thu_Dec_12_14_39_40_2019.tar.gz
    Downloading: 65 MB
``` 
After a while and downloading 65 MB, I didn't see 'data' as R object. I see some message same as below:

    ```
```
ff8fba5e-f6e2-4db6-87cf-11958b27bc37/2b66a8a5-1e0a-4a4a-beb7-b2273b2ffb05.htseq.counts.gz: Can't create '\\\\?\\F:\\ff8fba5e-f6e2-4db6-87cf-11958b27bc37\\2b66a8a5-1e0a-4a4a-beb7-b2273b2ffb05.htseq.counts.gz'
    tar.exe: Error exit delayed from previous errors.
```
```
I setwd() in my F driver. now in 'F' driver, I see just 2 files:

1- MANIFEST.txt 

2-Thu_Dec_12_14_39_40_2019.tar.gz


when I get properties of 'Thu_Dec_12_14_39_40_2019.tar.gz' file I see size: 61.6 MB (64,643,687 bytes).

Now I don't know what is my problem and what should I do by this process?
I appreciate it if anybody shares his/her comment with me.

    > sessionInfo()
    R version 3.6.1 (2019-07-05)
    Platform: x86_64-w64-mingw32/x64 (64-bit)
    Running under: Windows 10 x64 (build 17134)
    
    Matrix products: default
    
    locale:
    [1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252
    [4] LC_NUMERIC=C                           LC_TIME=English_United States.1252    
    
    attached base packages:
    [1] parallel  stats4    stats     graphics  grDevices utils     datasets  methods   base     
    
    other attached packages:
     [1] SummarizedExperiment_1.16.0 DelayedArray_0.12.0         matrixStats_0.55.0          Biobase_2.46.0             
     [5] GenomicRanges_1.38.0        GenomeInfoDb_1.22.0         IRanges_2.20.0              S4Vectors_0.24.0           
     [9] BiocGenerics_0.32.0         TCGAbiolinks_2.14.0         sva_3.34.0                  BiocParallel_1.20.0        
    [13] genefilter_1.68.0           mgcv_1.8-30                 nlme_3.1-141                stringr_1.4.0              
    [17] dplyr_0.8.3                 Hmisc_4.2-0                 ggplot2_3.2.1               Formula_1.2-3              
    [21] survival_2.44-1.1           lattice_0.20-38             impute_1.60.0               cluster_2.1.0              
    [25] class_7.3-15                MASS_7.3-51.4               sqldf_0.4-11                RSQLite_2.1.2              
    [29] gsubfn_0.7                  proto_1.0.0                 WGCNA_1.68                  fastcluster_1.1.25         
    [33] dynamicTreeCut_1.63-1      
    
    loaded via a namespace (and not attached):
      [1] backports_1.1.5             circlize_0.4.8              aroma.light_3.16.0          BiocFileCache_1.10.0       
      [5] plyr_1.8.4                  selectr_0.4-1               ConsensusClusterPlus_1.50.0 lazyeval_0.2.2             
      [9] splines_3.6.1               robust_0.4-18.1             digest_0.6.23               foreach_1.4.7              
     [13] htmltools_0.4.0             GO.db_3.10.0                magrittr_1.5                checkmate_1.9.4            
     [17] memoise_1.1.0               fit.models_0.5-14           doParallel_1.0.15           limma_3.42.0               
     [21] ComplexHeatmap_2.2.0        Biostrings_2.54.0           readr_1.3.1                 annotate_1.64.0            
     [25] R.utils_2.9.0               askpass_1.1                 prettyunits_1.0.2           colorspace_1.4-1           
     [29] rvest_0.3.4                 ggrepel_0.8.1               blob_1.2.0                  rappdirs_0.3.1             
     [33] rrcov_1.4-7                 xfun_0.10                   jsonlite_1.6                tcltk_3.6.1                
     [37] crayon_1.3.4                RCurl_1.95-4.12             zeallot_0.1.0               zoo_1.8-6                  
     [41] iterators_1.0.12            glue_1.3.1                  survminer_0.4.6             gtable_0.3.0               
     [45] zlibbioc_1.32.0             XVector_0.26.0              GetoptLong_0.1.7            shape_1.4.4                
     [49] DEoptimR_1.0-8              scales_1.0.0                DESeq_1.38.0                mvtnorm_1.0-11             
     [53] edgeR_3.28.0                DBI_1.0.0                   ggthemes_4.2.0              Rcpp_1.0.3                 
     [57] xtable_1.8-4                progress_1.2.2              htmlTable_1.13.2            clue_0.3-57                
     [61] matlab_1.0.2                foreign_0.8-72              bit_1.1-14                  km.ci_0.5-2                
     [65] preprocessCore_1.48.0       htmlwidgets_1.5.1           httr_1.4.1                  RColorBrewer_1.1-2         
     [69] acepack_1.4.1               pkgconfig_2.0.3             XML_3.98-1.20               R.methodsS3_1.7.1          
     [73] nnet_7.3-12                 dbplyr_1.4.2                locfit_1.5-9.1              tidyselect_0.2.5           
     [77] rlang_0.4.2                 AnnotationDbi_1.48.0        munsell_0.5.0               tools_3.6.1                
     [81] downloader_0.4              generics_0.0.2              broom_0.5.2                 knitr_1.25                 
     [85] bit64_0.9-7                 robustbase_0.93-5           survMisc_0.5.5              purrr_0.3.3                
     [89] EDASeq_2.20.0               R.oo_1.23.0                 xml2_1.2.2                  biomaRt_2.42.0             
     [93] compiler_3.6.1              rstudioapi_0.10             curl_4.2                    png_0.1-7                  
     [97] ggsignif_0.6.0              tibble_2.1.3                geneplotter_1.64.0          pcaPP_1.9-73               
    [101] stringi_1.4.3               GenomicFeatures_1.38.0      Matrix_1.2-17               KMsurv_0.1-5               
    [105] vctrs_0.2.0                 lifecycle_0.1.0             pillar_1.4.2                GlobalOptions_0.1.1        
    [109] data.table_1.12.6           bitops_1.0-6                rtracklayer_1.46.0          hwriter_1.3.2              
    [113] R6_2.4.0                    latticeExtra_0.6-28         ShortRead_1.44.0            gridExtra_2.3              
    [117] codetools_0.2-16            assertthat_0.2.1            chron_2.3-54                openssl_1.4.1              
    [121] rjson_0.2.20                withr_2.1.2                 GenomicAlignments_1.22.0    Rsamtools_2.2.0            
    [125] GenomeInfoDbData_1.2.2      hms_0.5.2                   grid_3.6.1                  rpart_4.1-15               
    [129] tidyr_1.0.0


Hi there,

I am writing this issue because I have got this error with GDCprepare() used for proteomic (rppa platform) data : 

> Error : $ operator is invalid for atomic vectors

I have noticed that it is fine when I used _GDCprepare_() for transcriptomic and miRNA data. Maybe the **legacy** option is responsible ? 

I have _TCGAbiolinks_2.15.2_ and _biomaRt_2.42.0_.


Thanks for your time,

My code : 

```
random.patients <- c("TCGA-EW-A423", "TCGA-D8-A27R", "TCGA-D8-A1XL", "TCGA-D8-A1XV", 
"TCGA-AN-A0FW", "TCGA-EW-A1PD", "TCGA-AR-A0TS", "TCGA-BH-A0BV", 
"TCGA-A8-A08O", "TCGA-C8-A1HM")

query.Prot <- GDCquery(project = "TCGA-BRCA",
                       data.category = "Protein expression",
                       platform = "MDA_RPPA_Core",
                       legacy = TRUE,
                       barcode = random.patients)`

GDCdownload(query.Prot)

BRCA.Prot <- GDCprepare(query.Prot,
                        save = TRUE,
                        save.filename = "BRCA_prot.rda")

```

My session information : 

```
> sessionInfo()
R version 3.6.1 (2019-07-05)
Platform: x86_64-conda_cos6-linux-gnu (64-bit)
Running under: Ubuntu 16.04.6 LTS

Matrix products: default
BLAS/LAPACK: /volatile/home/utilisateur/anaconda3/envs/first/lib/R/lib/libRblas.so

locale:
 [1] LC_CTYPE=fr_FR.UTF-8       LC_NUMERIC=C               LC_TIME=fr_FR.UTF-8        LC_COLLATE=fr_FR.UTF-8    
 [5] LC_MONETARY=fr_FR.UTF-8    LC_MESSAGES=fr_FR.UTF-8    LC_PAPER=fr_FR.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C             LC_MEASUREMENT=fr_FR.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] dplyr_0.8.3         data.table_1.12.8   TCGAbiolinks_2.15.2

loaded via a namespace (and not attached):
  [1] backports_1.1.5             aroma.light_3.16.0          BiocFileCache_1.10.2        plyr_1.8.5                 
  [5] selectr_0.4-2               lazyeval_0.2.2              splines_3.6.1               BiocParallel_1.20.0        
  [9] usethis_1.5.1               GenomeInfoDb_1.22.0         ggplot2_3.2.1               sva_3.34.0                 
 [13] digest_0.6.23               foreach_1.4.7               fansi_0.4.0                 magrittr_1.5               
 [17] memoise_1.1.0               doParallel_1.0.15           remotes_2.1.0               limma_3.42.0               
 [21] Biostrings_2.54.0           readr_1.3.1                 annotate_1.64.0             matrixStats_0.55.0         
 [25] R.utils_2.9.2               askpass_1.1                 prettyunits_1.0.2           colorspace_1.4-1           
 [29] blob_1.2.0                  rvest_0.3.5                 rappdirs_0.3.1              ggrepel_0.8.1              
 [33] xfun_0.11                   callr_3.4.0                 crayon_1.3.4                RCurl_1.95-4.12            
 [37] jsonlite_1.6                genefilter_1.68.0           zeallot_0.1.0               survival_3.1-8             
 [41] zoo_1.8-6                   iterators_1.0.12            glue_1.3.1                  survminer_0.4.6            
 [45] gtable_0.3.0                zlibbioc_1.32.0             XVector_0.26.0              DelayedArray_0.12.0        
 [49] pkgbuild_1.0.6              BiocGenerics_0.32.0         scales_1.1.0                DESeq_1.38.0               
 [53] DBI_1.0.0                   edgeR_3.28.0                ggthemes_4.2.0              Rcpp_1.0.3                 
 [57] xtable_1.8-4                progress_1.2.2              bit_1.1-14                  km.ci_0.5-2                
 [61] stats4_3.6.1                httr_1.4.1                  RColorBrewer_1.1-2          ellipsis_0.3.0             
 [65] pkgconfig_2.0.3             XML_3.98-1.20               R.methodsS3_1.7.1           dbplyr_1.4.2               
 [69] locfit_1.5-9.1              tidyselect_0.2.5            rlang_0.4.2                 AnnotationDbi_1.48.0       
 [73] munsell_0.5.0               tools_3.6.1                 downloader_0.4              cli_2.0.0                  
 [77] generics_0.0.2              RSQLite_2.1.4               devtools_2.2.1              broom_0.5.2                
 [81] stringr_1.4.0               yaml_2.2.0                  fs_1.3.1                    processx_3.4.1             
 [85] knitr_1.26                  bit64_0.9-7                 survMisc_0.5.5              purrr_0.3.3                
 [89] EDASeq_2.20.0               nlme_3.1-143                R.oo_1.23.0                 postlogic_0.1.0            
 [93] xml2_1.2.2                  biomaRt_2.42.0              compiler_3.6.1              rstudioapi_0.10            
 [97] curl_4.3                    parsetools_0.1.1            testthat_2.3.1              ggsignif_0.6.0             
[101] tibble_2.1.3                geneplotter_1.64.0          stringi_1.4.3               ps_1.3.0                   
[105] desc_1.2.0                  GenomicFeatures_1.38.0      lattice_0.20-38             Matrix_1.2-18              
[109] KMsurv_0.1-5                vctrs_0.2.0                 purrrogress_0.1.1           pillar_1.4.2               
[113] lifecycle_0.1.0             BiocManager_1.30.10         bitops_1.0-6                rtracklayer_1.46.0         
[117] GenomicRanges_1.38.0        R6_2.4.1                    latticeExtra_0.6-28         hwriter_1.3.2              
[121] ShortRead_1.44.0            gridExtra_2.3               IRanges_2.20.1              pkgcond_0.1.0              
[125] sessioninfo_1.1.1           codetools_0.2-16            pkgload_1.0.2               assertthat_0.2.1           
[129] SummarizedExperiment_1.16.0 rprojroot_1.3-2             openssl_1.4.1               withr_2.1.2                
[133] GenomicAlignments_1.22.1    Rsamtools_2.2.1             S4Vectors_0.24.1            GenomeInfoDbData_1.2.2     
[137] mgcv_1.8-31                 parallel_3.6.1              hms_0.5.2                   testextra_0.1.0            
[141] grid_3.6.1                  tidyr_1.0.0                 ggpubr_0.2.4                Biobase_2.46.0 
```

Hi,

I have been having an issue getting biospecimen info via two different ways.  Using TCGAbiolinks_2.15.2.

_First Method from xml:_
`
query <- GDCquery(project = "TCGA-BRCA", 
                  data.category = "Biospecimen",
                  file.type = "xml");
GDCdownload(query);
biospecimen <- distinct(GDCprepare_clinic(query,clinical.info = c("aliquot")))
`

gives me **14677 rows** and "TCGA-PL-A8LZ-01A-31R-A36F-07" is missing

_Second Method from BCR Biotab:_
`query.biospecimen <- GDCquery(project = "TCGA-BRCA", 
                              data.category = "Biospecimen",
                              data.type = "Biospecimen Supplement", 
                              data.format = "BCR Biotab");
GDCdownload(query.biospecimen);
biospecimen.BCRtab.all <- GDCprepare(query.biospecimen);
biospecimen2<-biospecimen.BCRtab.all$biospecimen_aliquot_brca`

gives me **14539 rows** and "TCGA-PL-A8LZ-01A-31R-A36F-07" is included.

I particularly notcided this since I was merging HTSEQ-UQ data with the sample info and this aliquotwas not matched, when I retrieved the data from xml.

Am I doing something wrong in this case?I would appreciate any help to understand this difference, and what is the proper way to get the aliquot information. I am interested in the aliquot barcode, and from there I get patient , sample ,analyte barcode etc..

**!!UPDATE!!**
After using the following code:
`query <- GDCquery(project = "TCGA-BRCA", 
                  data.category = "Biospecimen",
                  file.type = "xml",
                  legacy=TRUE);
GDCdownload(query);
biospecimen <- distinct(GDCprepare_clinic(query,clinical.info = c("aliquot")))`

I see the aliquot above included.

So the difference is when I use legacy True/False. Still a bit confused on the proper way to handle this, when I need a generic TCGA table with all available aliquots. Should I merge legacy=TRUE with legacy=FALSE data?


Thank you!

Dear Colleague, 

I am tring to get access to the **MMRF-COMMPASS project:**

query.exp <- GDCquery(project = "MMRF-COMMPASS",
                           data.category = "Transcriptome Profiling",
                           data.type = "Gene Expression Quantification",
                           workflow.type="STAR - Counts",
                           experimental.strategy = "RNA-Seq", legacy = F)

**However, it gives the following error:**

--------------------------------------
 GDCquery: Searching in GDC database
--------------------------------------
Genome of reference: hg38
--------------------------------------------
 Accessing GDC. This might take a while...
--------------------------------------------
Project: MMRF-COMMPASS
--------------------
 Filtering results
--------------------
 By experimental.strategy
 By data.type
 By workflow.type
***Error in expandBarcodeInfo(barcodes) : object 'ret' not found***

Do you suggest a solution for this error?

Thank you in advance!

Best,
Abdelrahman 
