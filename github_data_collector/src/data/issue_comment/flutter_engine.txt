Add "width" and "height" trace parameters to
|VulkanSurfacePool::GetCachedOrCreateSurface| and
|VulkanSurfacePool::CreateSurface|.  Also add an "allocationSize"
parameter to the "vkAllocateMemory" event.
In Linux we are using the felt tool for preparing the environment to run felt.dart

This batch script does the similar operations for window. Such as running gclient sync, gn, ninja, pub get.


When running on Fuchsia, respect the argument values that Skia passes
into the Flutter implementation of the |SkEventTracer| interface.

Bug: https://github.com/flutter/flutter/issues/48864
Previously layout had been using the cluster index returned by Minikin,
which is only unique within each call to Minikin layout.  This can produce
duplicate cluster IDs within a line containing multiple text runs.
GetGlyphPositionAtCoordinate then returns incorrect results because it thinks
the affected glyphs are part of the same cluster.

Fixes https://github.com/flutter/flutter/issues/48231
Fixes https://github.com/flutter/flutter/issues/49044
This removes logs such as and will route flutter logs to fuchsia syslog

```
[00040.970590][9280][9282][klog] INFO: [WARNING:src/sys/appmgr/service_provider_dir_impl.cc(120)] Component fuchsia-pk
g://fuchsia.com/flutter_jit_product_runner#meta/flutter_jit_product_runner.cmx is not allowed to connect to fuchsia.lo
gger.LogSink because this s                                                                                           
[00040.970592][9280][9282][klog] INFO: ervice is not present in the component's sandbox.                              
[00040.970594][9280][9282][klog] INFO: Refer to https://fuchsia.dev/fuchsia-src/concepts/framework/sandboxing#services
 for more information.   
```
This can be used to evaluate smoothness of touch input
processing.
*Work In Progress*
PR still requires tests.

Details: flutter/flutter#48886

From the Instruments，we found that the UI & GPU thread run in a low priority, which may often be preempted by other thread and take less CPU time. For example:
![image](https://user-images.githubusercontent.com/11627283/72432100-3380e800-37d1-11ea-8d08-cb2312b8854e.png)
The UI thread running time is 2.8s，but the preempted time is 4.18s。

According to the Apple documentation:https://developer.apple.com/library/archive/documentation/Performance/Conceptual/EnergyGuide-iOS/PrioritizeWorkWithQoS.html, the UI and GPU thread should be assigned to 'User-interactive', while the current QoS is 'Default'.

In addition, when  the platform view is enabled, the GPU task runner is same as the platform task runner.So we should not create another GPU thread.
As an alternative to the 4 data buffers, a path to an ELF library can be provided to reuse the existing vm ELF loader. Work towards providing release mode for linux and windows.

Caveats:
- I don't have any tests yet
- I'm unsure whether we should expose the current settings which allows providing a vector of various search paths, currently it is just char*

Fixes https://github.com/flutter/flutter/issues/43454
/cc @ankitdave06 

This still needs a test, but working when tested manually

I'm a little torn on whether my defensive guards around cycles are overly-pessimistic.  The framework should never allow this to happen, but if it does happen the engine will crash with a stack overflow - and the engine API has no asserts in place to check it otherwise.

Fixes https://github.com/flutter/flutter/issues/47386