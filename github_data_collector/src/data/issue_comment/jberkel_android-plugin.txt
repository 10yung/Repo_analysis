I have seen that there is some integration only with the Os X keyring, perhaps using a library can help a lot.
[Using Scala + sbt to write seamlessly integrated OSX Apps ](http://simonschenk.tumblr.com/post/38369559147/using-scala-sbt-to-write-seamlessly-integrated-osx) has a section explaining the use of the Netbeans keyring module (cited from the site):

It consists of two parts: A platform-independent API and implementations of this API for all major operating systems. Currently there are implementations for OSX, Windows, KDE, Gnome, SPI and a fallback using a Java keystore. We start by adding all of that to our `build.sbt`:

```
libraryDependencies ++= Seq(
  "org.netbeans.api" % "org-netbeans-modules-keyring" % "RELEASE721",
  "org.netbeans.modules" % "org-netbeans-modules-keyring-impl" % "RELEASE721"
)

resolvers += "netbeans" at "http://bits.netbeans.org/maven2/"
```

Usage is straightforward, once you know that the keyring only stores char arrays:

```
private val keyName = "doctivity"

def readToken =
   Keyring.read(keyName) match {
      case null  => None
      case chars => Some(chars.mkString)
   }

 def storeToken(token: String) {
   Keyring.save(keyName, token.toCharArray, "access token for doctivity")
 }

 def deleteToken {
   Keyring.delete(keyName)
 }
```

For cross-platform projects, like desktop/Android/iOS, it is real pain to force users to install Android SDK they will never use.

Maybe just switching the check in determineAndroidSdkPath from error to warning would do?

Seeing warning people will be aware, that if they try to compile anything, they get unexpected result.

Because of how android-plugin interprets provided dependencies, it is harder to create projects depending on macro packages, but not including those packages.

If package A is declared to be provided dependency, it marks all its dependencies as provided, no matter if they are included by any other, package as dependency. Thus, if provided macro package is included, it makes scala-library and all its dependencies provided.

I think a lot better solution would be to mark as provided only those packages, that are explicitly marked as provided, or implicitly marked as provided and not required by any other explicitly not-provided package.

(btw, I asked on scala-on-android 2 weeks ago and no one replied if this is indended behaviour or bug on my side, so I decided to open issue for it. https://groups.google.com/forum/#!topic/scala-on-android/xxO8nFBUOtI )

Hi,

On command "sbt android:package-debug" I get an error:

[error](MyApp4/android:aapt-generate) java.io.IOException: Cannot run program "C:\dev\adt-bundle\sdk\platform-tools\aapt": CreateProcess error=2, The system cannot find the file specified

I use Android SDK 22.x and indeed appropriate 'aapt' is:
- in $sdkHome\sdk\build-tools\17.0.0\aapt.exe
- not in $sdkHome\sdk\platform-tools\aapt.exe

Cheers
GT

Just tried `0.7.1-SNAPSHOT` and everything seems to work except the preloading feature.

After running `sbt preload-device`, the contents of `/system/etc/permissions/scala-library-2.10.1.xml` were as follows:

```
<permissions><library name=scala-library-2.10.1 file=/system/framework/scala-library-2.10.1.jar /></permissions>
```

After manually changing this file to this (basically: adding quotes):

```
<permissions>
    <library name="scala-library-2.10.1"
            file="/system/framework/scala-library-2.10.1.jar" />
</permissions>
```

... everything works as expected and I no longer get `INSTALL_FAILED_MISSING_SHARED_LIBRARY` during install phase.

Great plugin, by the way, having Scala preloaded really speeds up development!

Also posted here: https://groups.google.com/forum/#!topic/scala-on-android/CM611eL8H-M

I tried to implement the rename-manifest-package option for aapt (Issue #191).
It looks fine to me, the option is really appended to the aapt call (I verified it). However, the generated Android app does not have the changed package name.
I don't know what the problem could be. Perhaps someone else has a clue?

Hi,

I'm trying to create two versions of my android app. That means that I have to have two different package names in the AndroidManifest file.

An easy solution to this problem would be to use aapt --rename-manifest-package, as described here:
http://www.piwai.info/renaming-android-manifest-package/

I think aaptGenerateTask in AndroidBase.scala would have to be changed to support this package name parameter.

There was update of distribution sbt package to 0.13 on ArchLinux, so I tried compiling my project using sbt-android with it. It was unable to resolve dependencies.

```
[info] Resolving org.scala-sbt#sbt-android;0.7 ...
[warn]  module not found: org.scala-sbt#sbt-android;0.7
[warn] ==== typesafe-ivy-releases: tried
[warn]   http://repo.typesafe.com/typesafe/ivy-releases/org.scala-sbt/sbt-android/scala_2.10/sbt_0.13/0.7/ivys/ivy.xml
[warn] ==== sbt-plugin-releases: tried
[warn]   http://repo.scala-sbt.org/scalasbt/sbt-plugin-releases/org.scala-sbt/sbt-android/scala_2.10/sbt_0.13/0.7/ivys/ivy.xml
[warn] ==== local: tried
[warn]   /home/giniewicz/.ivy2/local/org.scala-sbt/sbt-android/scala_2.10/sbt_0.13/0.7/ivys/ivy.xml
[warn] ==== public: tried
[warn]   http://repo1.maven.org/maven2/org/scala-sbt/sbt-android_2.10_0.13/0.7/sbt-android-0.7.pom
[warn]  ::::::::::::::::::::::::::::::::::::::::::::::
[warn]  ::          UNRESOLVED DEPENDENCIES         ::
[warn]  ::::::::::::::::::::::::::::::::::::::::::::::
[warn]  :: org.scala-sbt#sbt-android;0.7: not found
[warn]  ::::::::::::::::::::::::::::::::::::::::::::::
[warn] 
[warn]  Note: Some unresolved dependencies have extra attributes.  Check that these dependencies exist with the requested attributes.
[warn]      org.scala-sbt:sbt-android:0.7 (sbtVersion=0.13, scalaVersion=2.10)
[warn] 
```

See [the mailing list](https://groups.google.com/forum/#!topic/scala-on-android/Hv8LPAw8s-g) for more.

I set up a project and ran this command in the top level alongside the "project" directory, and a few errors printed in the command line:

[error] Not a valid key: gen-idea
[error] gen-idea no-classifiers
[error]               ^

I have no doubts that I'm doing something wrong, could anyone clue me in to what that might be?
