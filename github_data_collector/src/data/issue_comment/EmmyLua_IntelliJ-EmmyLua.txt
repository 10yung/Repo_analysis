Environment（环境）
--------------
   name   |   version  
----------|----------
 IDEA version         | [2019.3.1]
 EmmyLua version | [1.3.1.136-IDEA182]
 OS                        | [Ubuntu 19.04]

What are the steps to reproduce this issue?（重现步骤？）
------------------------------------------------
1. Using LuaJ library to coerce [java object](https://github.com/Doomsdayrs/shosetsu-services/blob/lua/core/com/github/doomsdayrs/api/shosetsu/services/core/objects/LuaSupport.kt) to lua. 
2. variable at top of file `local LuaSupport = luajava.newInstance("com.github.doomsdayrs.api.shosetsu.services.core.objects.LuaSupport")`
3. Following line of code returning value `return LuaSupport:getGAL()`
4. All inspections are enabled

What happens?（出现什么问题？）
-------------
`Unknown function 'getGAL'.` error via yellow highlight of function 

What were you expecting to happen?（期望？）
-----------------------------------------
- Plugin to read java/kotlin code and get: documentation and methods. Providing them when typing
- Also allowing `@return` types to be of java standard 

Any logs, error output, etc?（有没有什么log, error输出？）
------------------------------
Script runs fine, No issues

Any other comments?（其它说明）
------------------------
- This mostly is an enhancement request
- Would help speed up coding
- Can be extended to other languages that can work together with lua
Environment
--------------
   name   |   version  
----------|----------
 IDEA version         | [Rider2019.2]
 EmmyLua version | [v1.3.1
 OS                        | [Windows 10]

Rider中require无法智能提示路径
Environment（环境）
--------------
   name EmmyLua  |   version  1.3.1.136-IDEA182
----------|----------
 IDEA version  idea 2019.3.1       | [e.g. IC2018.2 EAP, CL2018.1.2]
 EmmyLua version1.3.1.136-IDEA182  | [e.g. v1.2.5]
 OS    windows 10                    | [e.g. OSX 10.13.4, Windows 10]

What are the steps to reproduce this issue?（重现步骤？）
------------------------------------------------
1. …
2. …
3. …

What happens?（出现什么问题？）
-------------
exception in plugin emmylua 

What were you expecting to happen?（期望？）
-----------------------------------------
Normal operation without error reporting

Any logs, error output, etc?（有没有什么log, error输出？）
com.intellij.openapi.util.StackOverflowPreventedException: Endless recursion prevented
	at com.intellij.psi.impl.source.tree.FileElement.getStubbedSpine(FileElement.java:116)
	at com.intellij.psi.impl.source.FileTrees.reconcilePsi(FileTrees.java:176)
	at com.intellij.psi.impl.source.FileTrees.withAst(FileTrees.java:149)
	at com.intellij.psi.impl.source.PsiFileImpl.loadTreeElement(PsiFileImpl.java:213)
	at com.intellij.psi.impl.source.PsiFileImpl.calcTreeElement(PsiFileImpl.java:712)
	at com.intellij.psi.impl.source.PsiFileImpl.getNode(PsiFileImpl.java:917)
	at com.intellij.psi.impl.source.PsiFileImpl.acceptChildren(PsiFileImpl.java:733)
	at com.tang.intellij.lua.psi.LuaRecursiveVisitor.visitElement(LuaRecursiveVisitor.kt:23)
	at com.tang.intellij.lua.psi.LuaDeclarationTreeBase.visitElementExt(LuaDeclarationTree.kt:349)
	at com.tang.intellij.lua.psi.LuaDeclarationTreeBase.visitElement(LuaDeclarationTree.kt:355)
	at com.intellij.psi.PsiElementVisitor.visitFile(PsiElementVisitor.java:34)
	at com.intellij.extapi.psi.PsiFileBase.accept(PsiFileBase.java:70)
	at com.tang.intellij.lua.psi.LuaDeclarationTreeBase.buildTree(LuaDeclarationTree.kt:277)
	at com.tang.intellij.lua.psi.LuaDeclarationTree$Companion.get(LuaDeclarationTree.kt:47)
	at com.tang.intellij.lua.psi.LuaPsiResolveUtilKt.resolveInFile(LuaPsiResolveUtil.kt:37)
	at com.tang.intellij.lua.psi.LuaPsiResolveUtilKt.resolveLocal(LuaPsiResolveUtil.kt:31)
	at com.tang.intellij.lua.psi.LuaPsiResolveUtilKt.resolveLocal$default(LuaPsiResolveUtil.kt:30)
	at com.tang.intellij.lua.psi.PsiExtensionKt$forwardDeclaration$1.compute(PsiExtension.kt:450)
	at com.intellij.psi.util.CachedValuesManager.lambda$getCachedValue$0(CachedValuesManager.java:148)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:54)
	at com.intellij.util.CachedValueBase.lambda$getValueWithLock$1(CachedValueBase.java:240)
	at com.intellij.openapi.util.RecursionManager$1.doPreventingRecursion(RecursionManager.java:113)
	at com.intellij.openapi.util.RecursionManager.doPreventingRecursion(RecursionManager.java:71)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:241)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:43)
	at com.intellij.util.CachedValuesManagerImpl.getCachedValue(CachedValuesManagerImpl.java:64)
	at com.intellij.psi.util.CachedValuesManager.getCachedValue(CachedValuesManager.java:147)
	at com.tang.intellij.lua.psi.PsiExtensionKt.getForwardDeclaration(PsiExtension.kt:448)
	at com.tang.intellij.lua.stubs.LuaFuncType.shouldCreateStub(LuaFuncStub.kt:68)
	at com.intellij.psi.impl.source.tree.FileElement$1.visitComposite(FileElement.java:136)
	at com.intellij.psi.impl.source.tree.CompositeElement.acceptTree(CompositeElement.java:130)
	at com.intellij.psi.impl.source.tree.RecursiveTreeElementWalkingVisitor$1.visit(RecursiveTreeElementWalkingVisitor.java:67)
	at com.intellij.psi.impl.source.tree.RecursiveTreeElementWalkingVisitor$1.visit(RecursiveTreeElementWalkingVisitor.java:59)
	at com.intellij.util.WalkingState.walkChildren(WalkingState.java:65)
	at com.intellij.util.WalkingState.elementStarted(WalkingState.java:52)
	at com.intellij.psi.impl.source.tree.RecursiveTreeElementWalkingVisitor.visitNode(RecursiveTreeElementWalkingVisitor.java:86)
	at com.intellij.psi.impl.source.tree.FileElement$1.visitComposite(FileElement.java:140)
	at com.intellij.psi.impl.source.tree.CompositeElement.acceptTree(CompositeElement.java:130)
	at com.intellij.psi.impl.source.tree.FileElement.calcStubbedDescendants(FileElement.java:127)
	at com.intellij.psi.impl.source.tree.FileElement.lambda$getStubbedSpine$0(FileElement.java:114)
	at com.intellij.openapi.util.RecursionManager$1.doPreventingRecursion(RecursionManager.java:113)
	at com.intellij.openapi.util.RecursionManager.doPreventingRecursion(RecursionManager.java:71)
	at com.intellij.psi.impl.source.tree.FileElement.getStubbedSpine(FileElement.java:114)
	at com.intellij.psi.impl.source.FileTrees.reconcilePsi(FileTrees.java:176)
	at com.intellij.psi.impl.source.FileTrees.withAst(FileTrees.java:149)
	at com.intellij.psi.impl.source.PsiFileImpl.loadTreeElement(PsiFileImpl.java:213)
	at com.intellij.psi.impl.source.PsiFileImpl.calcTreeElement(PsiFileImpl.java:712)
	at com.intellij.psi.impl.source.PsiFileImpl.getNode(PsiFileImpl.java:917)
	at com.intellij.psi.impl.source.PsiFileImpl.getFirstChild(PsiFileImpl.java:723)
	at com.intellij.psi.SyntaxTraverser$PsiApi.first(SyntaxTraverser.java:296)
	at com.intellij.psi.SyntaxTraverser$PsiApi.first(SyntaxTraverser.java:264)
	at com.intellij.psi.SyntaxTraverser$ApiEx.children(SyntaxTraverser.java:241)
	at com.intellij.psi.SyntaxTraverser$Api.fun(SyntaxTraverser.java:179)
	at com.intellij.psi.SyntaxTraverser$Api.fun(SyntaxTraverser.java:161)
	at com.intellij.util.containers.FilteredTraverserBase$Meta.childrenImpl(FilteredTraverserBase.java:427)
	at com.intellij.util.containers.FilteredTraverserBase$Meta.children(FilteredTraverserBase.java:413)
	at com.intellij.util.containers.FilteredTraverserBase.children(FilteredTraverserBase.java:294)
	at com.intellij.util.containers.TreeTraversal$P.iterable(TreeTraversal.java:725)
	at com.intellij.util.containers.TreeTraversal$P.iterator(TreeTraversal.java:719)
	at com.intellij.util.containers.TreeTraversal$BiOrderIt.nextImpl(TreeTraversal.java:460)
	at com.intellij.util.containers.JBIterator.peekNext(JBIterator.java:150)
	at com.intellij.util.containers.JBIterator.hasNext(JBIterator.java:110)
	at java.base/java.lang.Iterable.forEach(Iterable.java:74)
	at com.intellij.codeInsight.hints.ParameterHintsPass.doCollectInformation(ParameterHintsPass.java:70)
	at com.intellij.codeHighlighting.TextEditorHighlightingPass.collectInformation(TextEditorHighlightingPass.java:55)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$null$1(PassExecutorService.java:429)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:997)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$doRun$2(PassExecutorService.java:422)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:585)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:531)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:59)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.doRun(PassExecutorService.java:421)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.lambda$run$0(PassExecutorService.java:397)
	at com.intellij.openapi.application.impl.ReadMostlyRWLock.executeByImpatientReader(ReadMostlyRWLock.java:167)
	at com.intellij.openapi.application.impl.ApplicationImpl.executeByImpatientReader(ApplicationImpl.java:157)
	at com.intellij.codeInsight.daemon.impl.PassExecutorService$ScheduledPass.run(PassExecutorService.java:395)
	at com.intellij.concurrency.JobLauncherImpl$VoidForkJoinTask$1.exec(JobLauncherImpl.java:161)
	at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:290)
	at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1020)
	at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1656)
	at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1594)
	at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:177)
(If it’s long, please paste to https://ghostbin.com/ and insert the link here.)


Any other comments?（其它说明）
------------------------
…
https://github.com/EmmyLua/IntelliJ-EmmyLua/blob/4e4dec92b9dca85ccce29fb4fa96c3ef3fc2a12a/src/main/java/com/tang/intellij/lua/psi/impl/LuaLiteralExprMixin.kt#L33

That should work if you implement com.intellij.psi.LiteralTextEscaper#getRelevantTextRange to return everything without quotes.

Now attempt to inject language inside literal fails with info about mismatched text:
```
'[[DROP SCHEMA ::s CASCADE]]'
---PSI:
'[[DROP SCHEMA ::s CASCA'
---chars:
'DROP SCHEMA ::s CASCADE'.
```
Environment（环境）
--------------
   name   |   version  
----------|----------
 IDEA version         | latest 2019.3
 EmmyLua version | latest official release (also tried on latest appveyor artifact)
 OS                        | Linux Ubuntu 19.04

Same plugin configuration on both Clion and Intellij.
The additional sources root are also configured the same way on both.

Issue
-----

On Clion (bad):
![image](https://user-images.githubusercontent.com/660896/72077398-7f2a2200-32f7-11ea-84a3-1805aee2ae66.png)

On Intellij (OK)
![image](https://user-images.githubusercontent.com/660896/72077437-8c471100-32f7-11ea-935b-52ea88bed58b.png)

Environment（环境）
--------------
   name   |   version  
----------|----------
 IDEA version         | #IU-193.5662.53
 EmmyLua version | 1.3.1.136-IDEA182
 OS                        | Ubuntu 18.04

Any other comments?（其它说明）
------------------------
It would be great to have the `runIde` target available, so it is possible to run the Plugin directly into an IDE. And also a debugger than can be attached to the IDE.
This would help me alot in understanding this plugin and making changes :)
Environment（环境）
--------------
   name   |   version  
----------|----------
 IDEA version         | #IU-193.5662.53
 EmmyLua version | 1.3.1.136-IDEA182
 OS                        | Ubuntu 18.04

What are the steps to reproduce this issue?（重现步骤？）
------------------------------------------------
1. create two LUA files (`test.lua` , `func.lua`)
2. write a function into `func.lua`
```
function test()
    print("test")
end
```
3. Then open the test.lua file and notice, that the function `test()` is being autocompleted. 

What were you expecting to happen?（期望？）
-----------------------------------------
The autocompletion for the function `test()` should only be shown, when the file, where the function is, is required. `require("func.lua")`

That is also how Lua works, when executing files. It will only now about files, that are included in the file.
Support for type casting, and block-style doc quotes.

The combination of which facilitates code like:

```lua
---@param returnString boolean
---@return string|number
function stringOrNumber(returnString)
    return returnString and "someString" or 1
end

---@param n number
function wantsNumber(n)
end

wantsNumber(stringOrNumber(false)) -- Raises type error (or at least, it should. Fix in #323)
wantsNumber(--[[---@type number]] stringOrNumber(false))

wantsNumber(
    ---@type number @Single line doc comments work too
    stringOrNumber(false)
)
```
String literals are now a real type-checked type.

* String literals are assignable to strings, but not vice versa.
* Name definitions are assumed to be primitive strings, unless explicitly typed as a string primitive i.e. the following is valid:
    ```lua
    local mutateMe = "hi"
    mutateMe = "hi" .. " there"
    ```
* To type (pseudo-)constants you can do:
    ```lua
    ---@type "'hi'"
    local SOME_CONSTANT = "hi"
    SOME_CONSTANT = "something else" -- Raises a type assignment error
    ```
* Functions that have explicit string literals (or unions there-of) now enforce these e.g.
    ```lua
    ---@param axis "'x'"|"'y'"|"'z'"
    local function takesLiterals(axis)
    end

    takesLiterals("x")
    takesLiterals("y")
    takesLiterals("z")
    takesLiterals("q") -- Raises error

    local nonLiteralString = "x"
    takesLiterals(nonLiteralString) -- Raises error

    ---@type "'x'"
    local literalString = "x"
    takesLiterals(literalString)
    ```
* Included in this PR is a fix for union sub-type detection. It was incorrectly detecting `string|number` as a sub-type of `number` where as that is clearly unsound as `string` is not a sub-type of `number` etc.
Environment（环境）
--------------
   name   |   version  1.3.1.136-IDEA182
----------|----------
 IDEA version         | [e.g. IC2018.3.1, IC2019.2.4,IC2019.3.1]
 EmmyLua version | [e.g. v1.3.1.136]
 OS                        | [e.g. Windows 7]

What are the steps to reproduce this issue?（重现步骤？）
------------------------------------------------
1. …Attach to Process Unity3D(2018.4.1)
2. …
3. …

What happens?（出现什么问题？）
-------------
出现以下log,debugger失败
[F]Failed to load library
[F]Start inject dll ...

What were you expecting to happen?（期望？）
----------------------------------------
能正常debugger

Any logs, error output, etc?（有没有什么log, error输出？）
------------------------------
(If it’s long, please paste to https://ghostbin.com/ and insert the link here.)


Any other comments?（其它说明）
------------------------
降到1.3.0.108后可以正常debugger,但IntelliJ-EmmyLua-1.3.0.135-IDEA182会出现一样的情况