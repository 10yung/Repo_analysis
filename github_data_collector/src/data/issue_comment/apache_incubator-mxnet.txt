## Requesting for C++ API support for MXNet Profiler
Does MXNet support Profiler APIs in C++ package/interface like the Python interface?
If it does, then it's great. But I cannot find any documentation anywhere about this? Any pointers will be helpful. Thanks.

## Description
(A clear and concise description of what the bug is.)
After updating the version of mxnet to mxnet-cu100==1.6.0b20191102, I get error `AttributeError: module 'mxnet.ndarray' has no attribute 'my_gemm'`

### Error Message
When use example/extensions/lib_custom_op/test_gemm.py, got that: `AttributeError: module 'mxnet.ndarray' has no attribute 'my_gemm'`
And I check the libmxnet.so, found that: `objdump: /usr/local/lib/python3.6/dist-packages/mxnet/libmxnet.so: File format not recognized`

## To Reproduce

### Steps to reproduce
(Paste the commands you ran that produced the error.)

1. cd example/extensions/lib_custom_op/
2. make
3. python test_gemm.py
4. get error: `AttributeError: module 'mxnet.ndarray' has no attribute 'my_gemm'`
5. objdump -T -t /usr/local/lib/python3.6/dist-packages/mxnet/libmxnet.so
6. get error: `objdump: /usr/local/lib/python3.6/dist-packages/mxnet/libmxnet.so File format not recognized`

## What have you tried to solve it?

1. I use [MobulaOP](https://github.com/wkcn/MobulaOP), it's ok. Can we explain what different between MobulaOP and MXNET.
2. Why the libmxnet.so is not recognized and when can we release the 1.6.0 (: 



## Description ##
Update the license to apache 2.0. 

@skylook could you approve it? 

## Checklist ##
### Essentials ###
Please feel free to remove inapplicable items for your PR.
- [ ] The PR title starts with [MXNET-$JIRA_ID], where $JIRA_ID refers to the relevant [JIRA issue](https://issues.apache.org/jira/projects/MXNET/issues) created (except PRs with tiny changes)
- [ ] Changes are complete (i.e. I finished coding on this PR)
- [ ] All changes have test coverage:
- Unit tests are added for small changes to verify correctness (e.g. adding a new operator)
- Nightly tests are added for complicated/long-running ones (e.g. changing distributed kvstore)
- Build tests will be added for build configuration changes (e.g. adding a new build option with NCCL)
- [ ] Code is well-documented: 
- For user-facing API changes, API doc string has been updated. 
- For new C++ functions in header files, their functionalities and arguments are documented. 
- For new examples, README.md is added to explain the what the example does, the source of the dataset, expected performance on test set and reference to the original paper if applicable
- Check the API doc at https://mxnet-ci-doc.s3-accelerate.dualstack.amazonaws.com/PR-$PR_ID/$BUILD_ID/index.html
- [ ] To the best of my knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change

### Changes ###
- [ ] Feature1, tests, (and when applicable, API doc)
- [ ] Feature2, tests, (and when applicable, API doc)

## Comments ##
- If this change is a backward incompatible change, why must this change be made.
- Interesting edge cases to note here

## Description ##
implement storage tagging, the first half of the memory profiler

## Checklist ##
### Essentials ###
Please feel free to remove inapplicable items for your PR.
- [x] The PR title starts with [MXNET-$JIRA_ID], where $JIRA_ID refers to the relevant [JIRA issue](https://issues.apache.org/jira/projects/MXNET/issues) created (except PRs with tiny changes)
- [x] Changes are complete (i.e. I finished coding on this PR)
- [x] Code is well-documented: 
- For user-facing API changes, API doc string has been updated. 
- For new C++ functions in header files, their functionalities and arguments are documented. 
- For new examples, README.md is added to explain the what the example does, the source of the dataset, expected performance on test set and reference to the original paper if applicable
- Check the API doc at http://mxnet-ci-doc.s3-accelerate.dualstack.amazonaws.com/PR-$PR_ID/$BUILD_ID/index.html
- [x] To the my best knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change

### Changes ###
- [x] This PR is the first half of the GPU memory profiler. It implements storage tagging which adds profiler scope, name, and data structure information to each allocated storage handle.

FYI, @szha @eric-haibin-lin

## Description ##
Cherry-pick #17364 to fix MKL-DNN license.

## Checklist ##
### Essentials ###
Please feel free to remove inapplicable items for your PR.
- [ ] The PR title starts with [MXNET-$JIRA_ID], where $JIRA_ID refers to the relevant [JIRA issue](https://issues.apache.org/jira/projects/MXNET/issues) created (except PRs with tiny changes)
- [ ] Changes are complete (i.e. I finished coding on this PR)
- [ ] All changes have test coverage:
- Unit tests are added for small changes to verify correctness (e.g. adding a new operator)
- Nightly tests are added for complicated/long-running ones (e.g. changing distributed kvstore)
- Build tests will be added for build configuration changes (e.g. adding a new build option with NCCL)
- [ ] Code is well-documented: 
- For user-facing API changes, API doc string has been updated. 
- For new C++ functions in header files, their functionalities and arguments are documented. 
- For new examples, README.md is added to explain the what the example does, the source of the dataset, expected performance on test set and reference to the original paper if applicable
- Check the API doc at https://mxnet-ci-doc.s3-accelerate.dualstack.amazonaws.com/PR-$PR_ID/$BUILD_ID/index.html
- [ ] To the best of my knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change

### Changes ###
- [ ] Feature1, tests, (and when applicable, API doc)
- [ ] Feature2, tests, (and when applicable, API doc)

## Comments ##
- If this change is a backward incompatible change, why must this change be made.
- Interesting edge cases to note here

## Description ##

The `NewTensor` and `NewStream` API had changed to different signatures while the `basic_stream.cu` sample still use the incorrect interface.

## Checklist ##
### Essentials ###
Please feel free to remove inapplicable items for your PR.
- [ ] The PR title starts with [MXNET-$JIRA_ID], where $JIRA_ID refers to the relevant [JIRA issue](https://issues.apache.org/jira/projects/MXNET/issues) created (except PRs with tiny changes)
- [x ] Changes are complete (i.e. I finished coding on this PR)
- [x] All changes have test coverage:
- Unit tests are added for small changes to verify correctness (e.g. adding a new operator)
- Nightly tests are added for complicated/long-running ones (e.g. changing distributed kvstore)
- Build tests will be added for build configuration changes (e.g. adding a new build option with NCCL)
- [ ] Code is well-documented: 
- For user-facing API changes, API doc string has been updated. 
- For new C++ functions in header files, their functionalities and arguments are documented. 
- For new examples, README.md is added to explain the what the example does, the source of the dataset, expected performance on test set and reference to the original paper if applicable
- Check the API doc at https://mxnet-ci-doc.s3-accelerate.dualstack.amazonaws.com/PR-$PR_ID/$BUILD_ID/index.html
- [x] To the best of my knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change

### Changes ###
- [ ] Feature1, tests, (and when applicable, API doc)
- [ ] Feature2, tests, (and when applicable, API doc)

## Comments ##
- If this change is a backward incompatible change, why must this change be made.
- Interesting edge cases to note here

## Description ##
Fixes #17332

## Checklist ##
### Essentials ###
Please feel free to remove inapplicable items for your PR.
- [ ] The PR title starts with [MXNET-$JIRA_ID], where $JIRA_ID refers to the relevant [JIRA issue](https://issues.apache.org/jira/projects/MXNET/issues) created (except PRs with tiny changes)
- [ ] Changes are complete (i.e. I finished coding on this PR)
- [ ] All changes have test coverage:
- Unit tests are added for small changes to verify correctness (e.g. adding a new operator)
- Nightly tests are added for complicated/long-running ones (e.g. changing distributed kvstore)
- Build tests will be added for build configuration changes (e.g. adding a new build option with NCCL)
- [ ] Code is well-documented: 
- For user-facing API changes, API doc string has been updated. 
- For new C++ functions in header files, their functionalities and arguments are documented. 
- For new examples, README.md is added to explain the what the example does, the source of the dataset, expected performance on test set and reference to the original paper if applicable
- Check the API doc at https://mxnet-ci-doc.s3-accelerate.dualstack.amazonaws.com/PR-$PR_ID/$BUILD_ID/index.html
- [ ] To the best of my knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change

### Changes ###
- [ ] Feature1, tests, (and when applicable, API doc)
- [ ] Feature2, tests, (and when applicable, API doc)

## Comments ##
- If this change is a backward incompatible change, why must this change be made.
- Interesting edge cases to note here

## Description ##
Back port  #17351

## Checklist ##
### Essentials ###
Please feel free to remove inapplicable items for your PR.
- [ ] The PR title starts with [MXNET-$JIRA_ID], where $JIRA_ID refers to the relevant [JIRA issue](https://issues.apache.org/jira/projects/MXNET/issues) created (except PRs with tiny changes)
- [ ] Changes are complete (i.e. I finished coding on this PR)
- [ ] All changes have test coverage:
- Unit tests are added for small changes to verify correctness (e.g. adding a new operator)
- Nightly tests are added for complicated/long-running ones (e.g. changing distributed kvstore)
- Build tests will be added for build configuration changes (e.g. adding a new build option with NCCL)
- [ ] Code is well-documented: 
- For user-facing API changes, API doc string has been updated. 
- For new C++ functions in header files, their functionalities and arguments are documented. 
- For new examples, README.md is added to explain the what the example does, the source of the dataset, expected performance on test set and reference to the original paper if applicable
- Check the API doc at https://mxnet-ci-doc.s3-accelerate.dualstack.amazonaws.com/PR-$PR_ID/$BUILD_ID/index.html
- [ ] To the best of my knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change

### Changes ###
- [ ] Feature1, tests, (and when applicable, API doc)
- [ ] Feature2, tests, (and when applicable, API doc)

## Comments ##
- If this change is a backward incompatible change, why must this change be made.
- Interesting edge cases to note here

http://jenkins.mxnet-ci.amazon-ml.com/blue/organizations/jenkins/mxnet-validation%2Funix-cpu/detail/PR-17358/2/pipeline
```
======================================================================

ERROR: test_gluon_data_vision.test_random_transforms

----------------------------------------------------------------------

Traceback (most recent call last):

  File "/usr/local/lib/python3.5/dist-packages/nose/case.py", line 198, in runTest

    self.test(*self.arg)

  File "/work/mxnet/tests/python/unittest/common.py", line 221, in test_new

    orig_test(*args, **kwargs)

  File "/work/mxnet/tests/python/unittest/test_gluon_data_vision.py", line 246, in test_random_transforms

    assert_almost_equal(num_apply/float(iteration), 0.5, 0.1)

  File "/work/mxnet/python/mxnet/test_utils.py", line 602, in assert_almost_equal

    print('\n*** Maximum errors for vector of size {}:  rtol={}, atol={}\n'.format(a.size, rtol, atol))

AttributeError: 'float' object has no attribute 'size'

-------------------- >> begin captured logging << --------------------

common: INFO: Setting test np/mx/python random seeds, use MXNET_TEST_SEED=480703277 to reproduce.

--------------------- >> end captured logging << ---------------------
```
## Description ##
This PR introduces an improved implementation of GPU BatchNorm when `use_global_stats` is `True`

Performance results (using V100 PCIe card, shape of data = `(208, 64, 112, 112)`)

dtype = `float32`

| FWD/BWD | axis | Old implementation time (ms) | New implementation time (ms) | speedup |
| - | - | - | - | - |
| FWD | 0 | 3.67 | 2.31 | 1.59x |
| BWD | 0 | 6.60 | 2.28 | 2.9x |
| FWD | 1 | 4.92 | 2.21 | 2.23x |
| BWD | 1 | 8.61 | 2.23 | 3.86x |
| FWD | 2 | 11.52 | 2.21 | 5.21x |
| BWD | 2 | 21.36 | 2.74 | 7.8x |
| FWD | 3 | 1010.55 | 2.24 | 451x |
| BWD | 3 | 1901.58 | 2.77 | 686.5x |

dtype = `float16`

| FWD/BWD | axis | Old implementation time (ms) | New implementation time (ms) | speedup |
| - | - | - | - | - |
| FWD | 0 | 3.1 | 0.92 | 3.37x |
| BWD | 0 | 6.56 | 1.04 | 6.31x |
| FWD | 1 | 4.34 | 0.92 | 4.72x |
| BWD | 1 | 9.21 | 1.34 | 6.87x |
| FWD | 2 | 10.23 | 0.92 | 11.12x |
| BWD | 2 | 22.61 | 1.60 | 14.13x |
| FWD | 3 | 948.1 | 1.01 | 939x |
| BWD | 3 | 2061.9 | 1.32 | 1562x |

@Kh4L @Jerryzcn FYI

## Checklist ##
### Essentials ###
Please feel free to remove inapplicable items for your PR.
- [x] Changes are complete (i.e. I finished coding on this PR)
- [x] All changes have test coverage:
- [x] To the best of my knowledge, examples are either not affected by this change, or have been fixed to be compatible with this change