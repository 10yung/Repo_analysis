I inserted a UIScrollView with UIViewAutoresizingFlexibleWidth into the ExtensionView. Everything works satisfactorily. Unfortunately, I have a distance between UINavigationBar and ExtensionView, which only moves away after scrolling.

How can I remove this distance after a spin?

![screen shot 2018-08-18 at 00 50 14](https://user-images.githubusercontent.com/29314643/44291785-eb2e6500-a280-11e8-8333-bc00c7541161.png)

I am getting "Failed to Render and update auto layout status for MYViewController : Library not loaded @rpath/TLYShyNavBar.framework/TLYShyNavBar".
please help me. 
By using **xcode 9** + **ios 11** device, the navigationBar is not hiding when scrolling up. The navigationBar is always shown. When scrolling up fast, the navigationBar is sometime "jumping" (it goes down away from the top and comes back)

However by using xcode 9 + ios 10 device, it's working. It is also working fine with xcode 8 with ios 10 and 11.
=> scroll up (navigationBar hides)
=> scroll down (navigationBar expands)

Is there a workaround or a fix for ios 11 device using a build from xcode 9 ?
For example, I'm scrolling through a table view, the navBar is fully contracted, and I click on an item.  Now I'm viewing the detail view.  When I click "back" to navigate back to the scroll view, the nav bar should still be in the contracted state.  If it isn't, then the whole table view is shifted down to accommodate the expansion and the item isn't even in the same place that it was when it started.

I used to be able to keep track of this state and force it myself, but that seems to no longer work due to either ios11 or some change in the repo.
Hi
Just updated to Xcode 9 and iOS 11 and it seems the fade behavior no longer works in TLYShyViewController.m (function _updateSubviewsAlpha)

The alpha property has no effect on the subviews to which it is applied.
Any tip, any workaround ?

Thanks
I was experiencing an issue on iOS 11 where there was a gap above the scroll view before the navigation bar. The solution for me was the following code. It seems that in addition to the content inset TLY was adding, iOS was then adding another inset which can be seen in the new variable adjustedContentInset

https://developer.apple.com/documentation/uikit/uiscrollview/2902259-adjustedcontentinset

This was my solution
```
if (@available(iOS 11.0, *)) {
    self.tableView.contentInsetAdjustmentBehavior = UIScrollViewContentInsetAdjustmentNever;
}
```
Related to:

```
    /* The standard status bar is 20 pixels. The navigation bar extends 20 pixels up so it is overlapped by the status bar.
     * When there is a larger than 20 pixel status bar (e.g. a phone call is in progress or GPS is active), the center needs
     * to shift up 20 pixels to avoid this 'dead space' being visible above the usual nav bar.
     */
    if (statusBarHeight > 20)
    {
        statusBarHeight -= 20;
    }
```

Thanks for the great job! When I test the expand and contract action, there some times, the expand not work well, sorry I did't capture the screen for a video. but i found there maybe a problem at the complete block, when it check contracting, it may not match actual action, so I do a fix, it work well all the time.
name:NSInvalidArgumentException
reason:
-[UIViewController tly_swizzledViewWillAppear:]: unrecognized selector sent to instance 0x10355e750
callStackSymbols:
0 CoreFoundation 0x0000000189d6aff8 + 148
1 libobjc.A.dylib 0x00000001887cc538 objc_exception_throw + 56
2 CoreFoundation 0x0000000189d71ef4 + 0
3 Smark 0x00000001006c97d8 __ASPECTS_ARE_BEING_CALLED__ + 5096
4 CoreFoundation 0x0000000189d6ed54 + 404
5 CoreFoundation 0x0000000189c6ad4c _CF_forwarding_prep_0 + 92
6 Smark 0x0000000100aebc3c -[UIViewController(ShyNavBar) tly_swizzledViewWillAppear:] + 116
7 UIKit 0x000000018feb3bf4 + 632
8 UIKit 0x000000018feb3964 + 156
9 UIKit 0x000000018ff175e4 + 484
10 UIKit 0x000000018fea3e28 + 588
11 UIKit 0x000000018fea3144 + 424
12 UIKit 0x000000018fea2f84 + 828
13 UIKit 0x000000018fea2570 + 672
14 UIKit 0x000000018fe9f7b8 + 272
15 UIKit 0x000000018ff11224 + 48
16 Smark 0x000000010044cae4 -[AppDelegate application:didFinishLaunchingWithOptions:] + 1180
17 UIKit 0x000000018ff0d204 + 380
18 UIKit 0x0000000190119738 + 3452
19 UIKit 0x000000019011f1e0 + 1684
20 UIKit 0x0000000190133d18 + 48
21 UIKit 0x000000019011c474 + 168
22 FrontBoardServices 0x000000018b913884 + 36
23 FrontBoardServices 0x000000018b9136f0 + 176
24 FrontBoardServices 0x000000018b913aa0 + 56
25 CoreFoundation 0x0000000189d1942c + 24
26 CoreFoundation 0x0000000189d18d9c + 540
27 CoreFoundation 0x0000000189d169a8 + 744
28 CoreFoundation 0x0000000189c46da4 CFRunLoopRunSpecific + 424
29 UIKit 0x000000018ff06384 + 652
30 UIKit 0x000000018ff01058 UIApplicationMain + 208
31 Smark 0x0000000100677cd0 main + 124
32 libdyld.dylib 0x0000000188c5559c + 4
I commented out the code can run [self tly_swizzledViewWillAppear:animated];