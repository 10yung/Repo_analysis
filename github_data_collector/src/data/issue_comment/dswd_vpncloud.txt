Hi, I'm connecting six servers over the internet (some with public v4 IP, some behind NAT). VPN is only used for internal communication, not routing traffic. All interfaces are TAP in normal mode.
I started using ATA-over-Ethernet just for testing. It works as expected but after some time, the connection gets stalled: aoe-stat tells, the the connection is not up but "kick-off".
If I start a ping from server (target) to client (mounted volume), the connection goes up immediately after the first ping.
Could it be, that vpncloud is not learning from raw ethernet frames but needs IP to learn?
Hello everyone,
can anyone help me troubleshoot why vpncloud service wont start on startup but fails with 'timeout'?
when trying to start service manually service starts without any problem.
After manual start on both nodes i can ping servers trough vpncloud IPs.
Both nodes are running Debian 10 Buster, autostart fails on both nodes.
I did set user and group under which it should run in background (root).

Thanks for any help!


‚óè vpncloud@vpslink.service - VpnCloud network 'vnet'
   Loaded: loaded (/lib/systemd/system/vpncloud@.service; enabled; vendor preset: enabled)
   Active: failed (Result: timeout) since Sun 2019-10-27 20:00:22 GMT; 2min 4s ago
  Process: 545 ExecStart=/usr/bin/vpncloud --config /etc/vpncloud/vnet.net --daemon --log-file /var/log/vpncloud-vnet.log --stats-file /var/log/vpncloud-vnet.stats --pid-file /run/vpncloud-vnet.pid (code=killed, signal=TERM)

Oct 27 19:58:51 server1 systemd[1]: Starting VpnCloud network 'vnet'...
Oct 27 19:58:52 server1 vpncloud[545]: INFO - Reading config file '/etc/vpncloud/vnet.net'
Oct 27 19:58:52 server1 vpncloud[545]: INFO - Opened device vnet0
Oct 27 20:00:22 server1 systemd[1]: vpncloud@vpslink.service: Start operation timed out. Terminating.
Oct 27 20:00:22 server1 systemd[1]: vpncloud@vnet.service: Control process exited, code=killed, status=15/TERM
Oct 27 20:00:22 server1 systemd[1]: vpncloud@vnet.service: Failed with result 'timeout'.
Oct 27 20:00:22 server1 systemd[1]: Failed to start VpnCloud network 'vnet'.
For easier setting up.
This might be able to improve the performance even further:

    RUSTFLAGS="-C target-cpu=native"
Currently VpnCloud offers per-message security, which protects each message individually but leaves some attack vectors open. Strong security could include:

* **Public/private keys instead of shared secret.** This should make the system more robust and allow a more fine-grained trust control. On the downside, creating and exchanging key pairs for networks with dozens of nodes is a pretty tedious task.

* **Forward secrecy.** This would protect the communication from an attacker who records it and spends lots of time (or using cipher weaknesses yet to be found) breaking the encryption after it happened. AFAIK, forward secrecy involves ephemeral keys for each node pair (e.g. ECDH). On the downside, this defeats the current "encrypt once, send often" strategy for broadcasts.

* **Protection of stream of messages.** Currently only single messages are encrypted, which leaves us open for attacks on the stream (suppressing messages, reordering messages, duplicating/replaying messages). Any scheme that somehow connects the messages should not require ordered delivery (this can't be guaranteed in UDP with high rates) or acknowledgments (this would significantly affect performance).

As I am not an expert in this field, I am putting my thoughts here for any expert to comment and offer solutions and maybe for developers to volunteer.
This is a tracking issue on building VpnCloud for other operating systems and other architectures.

- Linux x86_64
  - [x] Compiles and links
  - [x] Packaged for Debian/Ubuntu
- Linux x86 (i686-unknown-linux-gnu)
  - [x] Compiles and links
  - [ ] Packaged for Debian/Ubuntu
- Linux ARMv7 (armv7-unknown-linux-gnueabihf)
  - [x] Compiles and links
  - [x] Packaged for Debian/Ubuntu
- Linux ARM (arm-unknown-linux-gnueabihf)
  - [x] Compiles and links
  - [x] Packaged for Debian/Ubuntu
- MacOS (**developer wanted**)
  * **Problem: dependency "ring" does not compile**
  * **Problem: tun/tap is different on MacOS**
  - [ ] Compiles and links
  - [ ] Packaged
- FreeBSD (**developer wanted**)
  * **Problem: polling and signal handling**
  - [ ] Compiles and links
  - [ ] Packaged
- Windows (**developer wanted**)
  * **Problem: tun/tap is different on Windows**
  * OpenVPN has a subproject [tap-windows](https://openvpn.net/index.php/download/community-downloads.html) that provides TAP interfaces for windows ([Tutorial](https://openwsn.atlassian.net/wiki/pages/viewpage.action?pageId=5373971)).
  - [ ] Compiles and links
  - [ ] Packaged
- iOS (iPad, iPhone)  (**developer wanted**)
  * [Building an iOS App in Rust](https://www.bignerdranch.com/blog/building-an-ios-app-in-rust-part-1/)
  - [ ] Compiles and links
  - [ ] Packaged

Implementation hints:
- [How OpenVPN handles TUN devices on different platforms](https://github.com/OpenVPN/openvpn/blob/master/src/openvpn/tun.c#L1441)
- [select() on different platforms](https://github.com/tickbh/td_revent/tree/master/src/sys)
