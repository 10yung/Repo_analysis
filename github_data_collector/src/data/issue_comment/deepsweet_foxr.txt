    const browser = await foxr.connect()
    const pages = await browser.pages()

the pages const returns the following, instead of details of each page

```
[{"_events":{},"_eventsCount":0,"_browser":{"_events":{"disconnected"
:[null,null,null,null,null]},"_eventsCount":1},"_id":"50"},{"_events":{},"_eventsCount":0,"_browser
":{"_events":{"disconnected":[null,null,null,null,null]},"_eventsCount":1},"_id":"52"},{"_events":{
},"_eventsCount":0,"_browser":{"_events":{"disconnected":[null,null,null,null,null]},"_eventsCount"
:1},"_id":"54"},{"_events":{},"_eventsCount":0,"_browser":{"_events":{"disconnected":[null,null,nul
l,null,null]},"_eventsCount":1},"_id":"56"}]

```

Is this intentional or is something happening that I'm not aware of? 

Thanks
Hello ðŸ‘‹ 

I found this project because I want to build something but I didn't want to use puppeteer because I don't really want to download an additional browser in my `node_modules`. Unfortunately I hit some walls because there are missing features.

Usually I'd just jump in and submit some Pull Requests, but I didn't find many docs about how to use `WebDriver`, reading through the docs seems fairly straight forward. Could someone point me in the right direction? Maybe share some documents that may be obvious that I missed.

I'll be more than happy to tackle some of those pending issues ðŸ˜‰ 

Cheers!

_Update: Reading through [puppeteer docs](https://github.com/puppeteer/puppeteer/blob/master/docs/api.md#puppeteerlaunchoptions) turns out that you don't need to download the whole browser again. But still, I'm still would like to contribute to this experiment ðŸ˜„_
I've been playing around with foxr to find out if I can use it as a substitute of puppeteer for firefox-based browsers.
I tried this code :
```javascript
const foxr = require("foxr").default;

async function main() {
	const browser = await foxr.launch({
		headless: false,
		args: [
			"-marionette",
			"-no-remote",
			"-profile",
			"/tmp/firefox_9a139bbd688bad29dce5b4fd"
		],
		executablePath: "/usr/bin/firefox"
	});

	const urls = ["http://google.com", "http://youtube.com", "http://facebook.com"]
	//await lib.crawl(browser, urls);
	const page1 = await browser.newPage();
	const page2 = await browser.newPage();
	const page3 = await browser.newPage();

	await Promise.all([
		page1.goto(urls[0]),
		page2.goto(urls[1]),
		page3.goto(urls[2])
	]);
}

main();
```

**Expected behavior :** google, youtube and facebook open in three different tabs (code works with puppeteer)
**Observer behavior:** I get two empty tabs, and one tab with facebook.
**Context :** firefox 67.0.2 on ubuntu, foxr 0.9.0

I also noticed that firefox closes on its own after a few seconds of inactivity. Is that an effect of `-marionette` ?
The google chrome team is already working on something like foxr.
https://github.com/GoogleChrome/puppeteer/tree/master/experimental/puppeteer-firefox
https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#class-dialog
* https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#pagekeyboard
* https://github.com/GoogleChrome/puppeteer/blob/master/docs/api.md#class-keyboard
https://github.com/GoogleChrome/puppeteer/blob/v1.8.0/docs/api.md#elementhandleboundingbox
https://github.com/GoogleChrome/puppeteer/blob/v1.8.0/docs/api.md#elementhandleboxmodel
Will allow to set a `dom.w3c_touch_events.enabled = 1` by `foxr.connect({ defaultViewport: { hasTouch } })` for `elementHandle.tap()` method.
https://github.com/GoogleChrome/puppeteer/blob/v1.7.0/docs/api.md#pagewaitforselectororfunctionortimeout-options-args