When running in JupyterLab in Safari the latest fastprogress has a very high CPU load, up to 100% on a relatively modern machine.

Profiling shows that Safari is spending almost all its time in loops of `WebCore::Document::updateStyleIfNeeded`. CPU load returns to normal if I remove everything from the `<style>` block of `html_progress_bar`, but then, of course, I get a generic progress bar style rather than one like that shown in the README.
I am using fastprogress through emacs -- using emacs's inferior-python-mode and elpy.  When I invoke a function (through PyMC3) that uses fastprogress, it takes over input to the editor until the python call using fastprogress terminates.  Also, it takes the current cursor and pulls it out of whatever editor buffer it was in and puts it into the interactive python buffer.

My guess is that this has something to do with the way that fp is writing its output to the console.  Is it perhaps sending characters to it one at a time to write the progress bar?
When I'm trying to run the following from fast.ai v3 lesson 3 IMDB notebook:

```py
data_lm = TextDataBunch.from_csv(path, 'texts.csv')
```

I get the following error:

```
/opt/conda/lib/python3.7/site-packages/fastprogress/fastprogress.py in on_iter_begin(self)
    160 
    161     def on_iter_begin(self):
--> 162         if self.display: self.out = display(HTML(self.progress), display_id=True)
    163         self.is_active=True
    164 

NameError: name 'HTML' is not defined
```

Here are the library versions:
* fastai-1.0.52
* fastprogress-0.1.21

Is there a way to get console behavior in Jupyter console?  Currently it just says <IPython.core.display.HTML object>

```
Jupyter console 6.0.0

Python 3.7.1 (default, Dec 14 2018, 19:28:38)
Type 'copyright', 'credits' or 'license' for more information
IPython 7.2.0 -- An enhanced Interactive Python. Type '?' for help.

In [1]: get_ipython().__class__.__name__
Out[1]: 'ZMQInteractiveShell'

In [2]: from fastprogress import master_bar, progress_bar
      : from time import sleep
      : mb = master_bar(range(10))
      : for i in mb:
      :     for j in progress_bar(range(100), parent=mb):
      :         sleep(0.01)
      :
<IPython.core.display.HTML object>
```
It would be nice to have an example for file download.
Using the fastai library, I am using a computing EC2 machine with a jupyter notebook to train models using fastai lib.

However, when I reload the notebook, the cells that where running while I closed the browser tab do not display any output.

Is there any way to fix this? Maybe setting some top level config in the notebook to revert to the console output?

Im using Ubuntu 18.04 LTS chrome. 
Since end of October, VisualStudioCode supports python, IPython and Jupyter Notebook - see [this](https://github.com/loretoparisi/jupyter-notebook-visualstudio-code-python) repo as an example. Now running the progress bar example

```python
#%%
from fastprogress import master_bar, progress_bar
from time import sleep
mb = master_bar(range(10))
for i in mb:
    for j in progress_bar(range(100), parent=mb):
        sleep(0.01)
        mb.child.comment = f'second bar stat'
    mb.first_bar.comment = f'first bar stat'
    mb.write(f'Finished loop {i}.')
    #mb.update_graph(graphs, x_bounds, y_bounds)
```


does not properly update the UI, thus resulting in this output.

<img width="1383" alt="schermata 2018-11-16 alle 10 43 31" src="https://user-images.githubusercontent.com/163333/48613591-7a383f80-e98c-11e8-87b9-05f55ba9f381.png">

The animation is now showed in the UI basically. Runnable example is [here](https://github.com/loretoparisi/jupyter-notebook-visualstudio-code-python/blob/master/progressbar.py)
The notebook widget created does not scale to large loss values. An example can be seen in the following photo:

![048b2fdb160c112c2452215065c9a0a999fff793](https://user-images.githubusercontent.com/5241441/48494927-dbc9a400-e7fc-11e8-88d4-429a812c828a.png)
