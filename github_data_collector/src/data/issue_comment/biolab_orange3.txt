'https://github.com/biolab/orange' redirects to orange2 repo,
but the link should be explicit to aid readers and avoid
reliance on a uncontrollable github feature.

##### Includes
- [ ] Code changes
- [ ] Tests
- [X] Documentation
Hi
on Ubuntu 18.04, following the install process in the wiki, problem with this command

`(orange3env) user@UBUNTUPC:~/orange3$   pip install -r requirements.txt
Requirement already satisfied: pip>=9.0 in /home/user/orange3env/lib/python3.6/site-packages (from -r requirements-core.txt (line 1)) (19.3.1)
Collecting numpy>=1.16.0
  Using cached https://files.pythonhosted.org/packages/62/20/4d43e141b5bc426ba38274933ef8e76e85c7adea2c321ecf9ebf7421cedf/numpy-1.18.1-cp36-cp36m-manylinux1_x86_64.whl
Requirement already satisfied: scipy>=0.16.1 in /usr/lib/python3/dist-packages (from -r requirements-core.txt (line 3)) (0.19.1)
Collecting scikit-learn>=0.22.0
  Using cached https://files.pythonhosted.org/packages/d1/48/e9fa9e252abcd1447eff6f9257636af31758a6e46fd5ce5d3c879f6907cb/scikit_learn-0.22.1-cp36-cp36m-manylinux1_x86_64.whl
Collecting bottleneck>=1.0.0
  Using cached https://files.pythonhosted.org/packages/62/d0/55bbb49f4fade3497de2399af70ec0a06e432c786b8623c878b11e90d456/Bottleneck-1.3.1.tar.gz
  Installing build dependencies ... done
  Getting requirements to build wheel ... error
  ERROR: Command errored out with exit status 1:
   command: /home/user/orange3env/bin/python3 /home/user/orange3env/lib/python3.6/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmp00685pba
       cwd: /tmp/pip-install-ns1xt745/bottleneck
  Complete output (10 lines):
  Traceback (most recent call last):
    File "/home/user/orange3env/lib/python3.6/site-packages/pip/_vendor/pep517/_in_process.py", line 257, in <module>
      main()
    File "/home/user/orange3env/lib/python3.6/site-packages/pip/_vendor/pep517/_in_process.py", line 240, in main
      json_out['return_val'] = hook(**hook_input['kwargs'])
    File "/home/user/orange3env/lib/python3.6/site-packages/pip/_vendor/pep517/_in_process.py", line 85, in get_requires_for_build_wheel
      backend = _build_backend()
    File "/home/user/orange3env/lib/python3.6/site-packages/pip/_vendor/pep517/_in_process.py", line 76, in _build_backend
      obj = getattr(obj, path_part)
  AttributeError: module 'setuptools.build_meta' has no attribute '__legacy__'
  ----------------------------------------
ERROR: Command errored out with exit status 1: /home/user/orange3env/bin/python3 /home/user/orange3env/lib/python3.6/site-packages/pip/_vendor/pep517/_in_process.py get_requires_for_build_wheel /tmp/tmp00685pba Check the logs for full command output.
`
##### Issue
<!-- E.g. Fixes #1, Closes #2, Resolves #3, etc. -->
<!-- Or a short description, if the issue does not exist. -->
Current Outlier widget usually does not find desired amount of outliers.

##### Description of changes
- wrap sklearn classes for outlier detection (LocalOutlierFactor , IsolationForest)
- introduce separate editors for each outlier detector
- output annotated data (appended `Outlier` feature)

##### Things to discuss
- the widget could accept distance matrix and use it for LocalOutlierFactor
- custom method (identify outliers using distance from the mean (threshold could be some multiple of std) for each feature)
- responsive widget (the widget could make calculations in a separate thread to make Orange responsive, but it is impossible to show progress or terminate the calculation)

##### Includes
- [X] Code changes
- [X] Tests
- [ ] Documentation

**Describe the bug**
After successful installation of orange3, when visualization tools such as scatterplot, line plot, distributions widget are opened, even without connecting them to a dataset, they throw an error of some sort.

**To Reproduce**
Steps to reproduce the behavior:
1. Open orange canvas
2. Right click to add a new widget in the workflow
3. Select scatter plot or distributions or line plot
4. See the error

**Orange version:**
Orange version 3.24.0

**Expected behavior**
Functioning scatter plot when dataset is provided.

**Screenshots**
![image](https://user-images.githubusercontent.com/59823980/72524434-3c6dca00-3862-11ea-91ce-6e8bf3fb8ea3.png)


**Operating system:**
Ubuntu 18.04

**Additional context**
Add any other context about the problem here.

##### Issue
<!-- E.g. Fixes #1, Closes #2, Resolves #3, etc. -->
<!-- Or a short description, if the issue does not exist. -->
Fixes #4312
Order of probabilities does not match list on the left, colors do not match too.
SVM works wrong when the class attribute has a value that does not appear in Y. In this case, we expect that probabilities shape match to class values, but they don't, since SVM has its own predict function that works differently than other models. 

##### Description of changes
- Fixing sorting problems from #4312.
- Fixing SVM which now uses the same predict function than other models. 
- Fixing problems with colors (when different orders of probabilities)
- Fix probabilities order when different values order

##### TODO
This PR is not finished yet.
- Tests

##### Includes
- [X] Code changes
- [ ] Tests
- [ ] Documentation

##### Issue

Users can connect arbitrary classifiers to nomogram; if the classifier is not naive Bayes or logistic regression, the widget informs the user that this type of classifier is invalid. It would be nicer if classifiers of wrong types couldn't be connected at all.

**Caveat:** are there (or could there be) widgets that output models and this model can be naive Bayes or logistic regression -- but not necessarily? E.g. what if ROC would output the optimal model for some operating condition? In this case, the current code supports connecting and checking later, while this PR prohibits it.

##### Description of changes

Implement a mixin that serves as a flag and mark the acceptable models.

`python setup.py test` issues a warning:
`WARNING: Testing via this command is deprecated and will be removed in a future version. Users looking for a generic test entry point independent of test runner are encouraged to use tox.`

We should look into tox and see how to test with it.
##### Issue
<!-- E.g. Fixes #1, Closes #2, Resolves #3, etc. -->
<!-- Or a short description, if the issue does not exist. -->
Implements ##4318.

##### Description of changes
Add stateWhenDisabled where appropriate.

##### Includes
- [X] Code changes
- [ ] Tests
- [ ] Documentation

##### Issue
<!-- E.g. Fixes #1, Closes #2, Resolves #3, etc. -->
<!-- Or a short description, if the issue does not exist. -->
In the new implementation of the ImageEmbedding widget, I have a case when I call `start` from `on_exception`. The case is I call `start` for the first time, then exception happens. in `on_exception` function I change something in the widget and call `start` with new configuration again. It works well.

The problem is that then wait_until_finished does not work correctly since after `on_exception` is called state invalidated is set to `False` (it happens after the start is called again). 

##### Description of changes
In this change, I just added if clause which checks if there is still any task running before it sets `invalidated` to True. When no new task is run it should be ok since `self.task` is set to `None` before this function.

@VesnaT hope the solution is good. If you have any better solution or this solution can cause problems, let me know.

##### Includes
- [X] Code changes
- [ ] Tests
- [ ] Documentation

Many widgets disable check boxes when they are not applicable. For instance, if "Split by" in Distribution is set to None, check boxes Stack columns and Show probabilities are disabled. However, if they are checked they remain checked (so that they are checked when they are re-enabled). The widget itself ignored the state, but the information that the user sees is wrong.

https://github.com/biolab/orange-widget-base/pull/30 in orange-widget-base (merged, but not yet released) resolves this by introducing an argument `stateWhenDisabled`. In case of Distributions, settings `stateWhenDisabled=False` would ensure that check boxes would be shown as unchecked when they are disabled, although the underlying setting is still `True`. When reenabled, the box will be shown as checked.

Somebody would need to go through all widgets, or perhaps just search the code for `setDisabled` and `setEnabled`, see whether it disables check boxes and if so, provide the `stateWhenDisable` argument with the proper value.

This PR won't be mergeable until orange-widget-base is released.