Related to #369.

To trim down the amount of serialized data and make the dump more readable, add support for using `$data->__debugInfo()` when it is available.

This will
* greatly speed up serializer when serializing objects with `__debugInfo()`
* greatly speed up GUI as there is far less data to be downloaded and processed
* greatly improve readability as objects do not have redundant dumped data

We currently have some routing use Sub-Domain Routing features, and we found out clockwork is not working for this setup.

Hopefully clockwork can support it.

Thanks.
This pull request fixes #364.

Data returned by serializer was corrupted for deeply nested structures. Instead of cutting down the data, raw data was returned instead.

I'm using type `...`, but this can be changed.
I get this error when installing clockwork on lumen.
All I did was installing via composer and adding this line
`$app->register(Clockwork\Support\Lumen\ClockworkServiceProvider::class);`

And the error
`Unresolvable dependency resolving [Parameter #0 [ <required> $app ]] in class Illuminate\Redis\RedisManager`

I thought issue #347 was related but when I try its fix I get another error
`Call to undefined method Redis::enableEvents()`

So I don't really know what I should do :/

> Laravel Framework Lumen (6.2.0) (Laravel Components ^6.0)
As you might know `monolog/monolog:^2.0` has been released a while ago and as a developer we want our projects to be up-to-date with those latest packages updates.

Sadly `itsgoingd/clockwork` loses compatibility when upgrade to `monolog/monolog:^2.0` because there is a missing `: void` type hint on `ClockworkHandler`.

Now, applying this return type would mean a major version bump of `itsgoingd/clockwork` since we would break compatibility with PHP 5.x. Is this something we can do? No longer support older PHP versions?

Since PHP 5.x has reached its end-of-life I would consider this an okay upgrade for this library.

What are your thoughts on this?
Just finished installing clockwork in my projects and looks like it doesn't work for me.
I keep getting memory errors at line 86 of FileStorage:
`$data = @json_encode($request->toArray(), \JSON_PARTIAL_OUTPUT_ON_ERROR);`

![image](https://user-images.githubusercontent.com/12158001/70433405-f6af2c00-1a81-11ea-8d74-f19d2e944508.png)

Running PHP 7.3, Laravel 5.8.35, Vagrant machine (4096 MB memory)
I get no connection column in clockwork  v4.0.13  laravel 5.2
![image](https://user-images.githubusercontent.com/37208700/69324537-9c415d80-0c83-11ea-8f9f-37bcdb84677c.png)

Since we now apply the stack trace filters in serializer, we don't have the correct stack trace when we collect the basic file:line info.

Hot-fixed so we do trace serialization first, but now we don't have the file:line info at all when the stack traces are disabled in config.

The "trace" option when logging messages also doesn't do anything right now.

like this [https://github.com/barryvdh/laravel-debugbar/pull/947/files](https://github.com/barryvdh/laravel-debugbar/pull/947/files)
I install clockwork to my project, but the WEB UI doesn't work. It can be open in chrome, but can't loading all js and css file. Am I missing something?

`"php": "7.2.19"`
`"laravel/framework": "5.8.29"`
`"itsgoingd/clockwork": "4.0.5"`
`composer require itsgoingd/clockwork` successfully.

![1](https://user-images.githubusercontent.com/17491807/61759529-3f2fbb00-adfb-11e9-9481-ac2af51a1b7e.png)
![2](https://user-images.githubusercontent.com/17491807/61759535-435bd880-adfb-11e9-88ff-a1fe8324e84d.png)
![3](https://user-images.githubusercontent.com/17491807/61759540-45be3280-adfb-11e9-865f-9064158ff3f1.png)

