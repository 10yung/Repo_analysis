Hello! In https://github.com/rust-lang/rust/pull/59928 we are making https://github.com/rust-lang/rust/issues/57644 a deny-by-default lint. To be forward compatible with that, here's a simple fix.
Rustdoc has moved from using hoedown to using pulldown_cmark. There are many upsides to using pulldown_cmark, but the most practical reason to move to it is to remove reliance on the C compiler necessary to build hoedown, making building on windows much easier.

This large set of commits was a fun side-project of mine for a while now. These commits are divided by minimum version of Rust necessary to make subsequent dependency updates work in order to make grokking them straightforward. Feel free to be picky about what you want to keep, but I've tried to be as minimal as I thought prudent while still netting nice gains for maintenance.

Each individual commit has had `cargo test` done locally and then had CI run against it. There should be only be concerns about where one wants to draw the line in terms of minimum Rust support versus how up-to-date one wants to be with "modern" Rust.

Thanks for making this great tool. I hope that this makes your life easier. :)
fix #67 

Currently, `cargo_target_by_message` calls `wait` on the child process before reading its stdout. This causes a deadlock.
Is it maintained by original developer?

If no, it may be worth to explicitly mark it as unmaintained in README; or invite some other maintainer (i.e. convert Github repo to org and add contributors, add owners on crates.io).
Something like `cargo-script export myfile.csr output/` should write `output/Cargo.toml` and `output/src/main.rs`.
When running `cargo script` I get this warning: 

```sh
[cargo-make] INFO - Execute Command: "cargo" "script" "/var/folders/dm/hk5h5c8n0rg2cvsn67d0kjd00000gn/T/cargo-make/Yso0d56VD0.rs"
    Updating crates.io index
   Compiling Yso0d56VD0 v0.1.0 (/Users/jack/.cargo/script-cache/file-Yso0d56VD0-195512b2c76e7c26)
warning: crate `Yso0d56VD0` should have a snake case name such as `yso0d56_vd0`
  |
  = note: #[warn(non_snake_case)] on by default
```

I think it would be nice to silence this warning by ensuring the generated crate name is snake_case. Perhaps even just lowercase will suffice.  
It would be great if the embedded dependencies (`// cargo-deps`) could also enable features on these dependencies.

Currently, from what I can tell, cargo script cannot be used if you need a non-default feature of an external dependency.
**reqwest.rs**

```rust
// cargo-deps: reqwest

extern crate reqwest;

fn main() {
    println!("{}", reqwest::get("https://www.rust-lang.org/en-US/").unwrap().text().unwrap());
}
```

Above file don't run on executing `cargo script reqwest.rs`. After build process it hangs and does not run binary.

**command output**
```bash
   Compiling reqwest v0.1.0 ($HOME/.cargo/script-cache/file-reqwest-e49a49733bde173c)
   Finished release [optimized] target(s) in 6.97s

   # get stuck here
```
in case of running with `--build-only` same happens.