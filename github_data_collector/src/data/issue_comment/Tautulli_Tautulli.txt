Want to use summary params for notification agent
Get telergam limitation (1024 symbols) for caption message because summary is oversize
Create short summary block

This method cut text and can cut word for N symbols. 
Maybe there are another method of deal with it, but Im not high skill with python.


Problem surfaced on Fedora 31, where the default
/usr/bin/python link to point to the Python 3 interpreter.

This fix that by evaluating the version using python itself.
Supersedes and blows the dust off #1153 ;)

Implemented suggestion of @MrTimscampi to use the Python2 shebang.


This addresses this issue: https://github.com/Tautulli/Tautulli-Issues/issues/200

Which then will allow to upgrade the codebase to python3. 

Help is appreciated to move everything.

activity_handler.py -> TimelineHandler(object) -> process(self)
This function interrogates the metadata of the library item before scheduling a callback to notify with the scheduler used to implement the delay set in the "Notification Delay" configuration parameter. However, in some circumstances the metadata is not fully populated before the process interrogates it. This results in WARNING "Status code 404" and "Pmsconnect :: Unable to parse XML for get_metadata_details" errors in the Tautulli log and the library items are never processed by Tautulli.

2019-01-18 22:05:00 - DEBUG :: Thread-14 : Tautulli TimelineHandler :: Library item '' (1026) added to recently added queue.
2019-01-18 22:05:00 - WARNING :: Thread-14 : Failed to access uri endpoint /library/metadata/1027. Status code 404
2019-01-18 22:05:00 - WARNING :: Thread-14 : Tautulli Pmsconnect :: Unable to parse XML for get_metadata_details: 'NoneType' object has no attribute 'getElementsByTagName'.
2019-01-18 22:05:00 - WARNING :: Thread-14 : Failed to access uri endpoint /library/metadata/1028. Status code 404
2019-01-18 22:05:00 - WARNING :: Thread-14 : Tautulli Pmsconnect :: Unable to parse XML for get_metadata_details: 'NoneType' object has no attribute 'getElementsByTagName'.

For the "Notification Delay" to be useful in delaying the metadata interrogation, the self.get_metadata() call has to be made when the scheduled callback is executed - not before. So the majority of the processing currently done in the process(self) function needs to be moved. In my branch I've moved the code from the TimelineHandler process function to a new function which is called via scheduled callback after the notification delay period.
Modified Users.get_watch_time_stats and Libraries.get_watch_time_stats to take an arbitrary list of time_queries rather than using the hard-coded list [1, 7, 30, 0]. Callers of these methods have been updated to use the previously hard-coded list as defaults for backwards compatibility.

The motivation for this change is to allow custom scripts greater flexibility in querying watch time stats (e.g. querying watch time for the current calendar week, month or year).
This update primarily adds support for multiple Plex Servers. As part of this, servers are automatically discovered from the plex.tv account and populated into the database.

Changes:
* Monitoring:
  * New: Support for monitoring multiple Plex Servers.
  * New: Support for monitoring rclone mount.
  * Change: Changed Get for Plex Updates to 15 minute interval.
* UI:
  * New: Dashboard Server Status card.
  * New: Added server name to lists (Libraries, History, User History) 
* History:
  * New: Import for Tautulli databases
  * New: Filter by server
* Graphs:
  * New: Added server selection
  * New: View by media type or server
* Newsletters:
  * New: Added Server selection
* Notifications:
  * New: Added rclone up/down notification
* Users:
  * New: Added Guest access levels
    * No Access
    * Guest - Can see only their own history on the servers they are friended to. This is the same functionality as in previous releases.
    * PowerGuest - Can see all users' history and all library sections but only on the servers they are friended to.
    * SuperGuest - Can see all users' history and all library sections on all servers. But no access to settings.
    * Admin - Full access to all controls.

The rclone mount monitoring is enabled in Settings->Plex Media Servers then activated on each individual server in the server configuration.

I also removed the unicode designation on the logger messages in preparation for PY3. I can put those back if you prefer.

I apologize for not using small commits. First time doing something like this.

I removed the min-width property on small screen to remove horizontal scrollbars
Takes the name of the show and generates a slug for use in a URL suffix.

In this way the TV show can be directly linked in the email to the page on web service like Sonarr.
Replaces `which` with `command -v` to check for the python executable. 
Came across this since `which` is not available on a Centos 7 LXC container. Even with Python installed running Plexpy resulted in `Error: Python not found!` because of the missing which package.

Command is POSIX compatible (more info [see](https://stackoverflow.com/questions/592620/check-if-a-program-exists-from-a-bash-script))
I [tested my changes](https://travis-ci.org/wilmardo/ansible-role-plex/builds/305442254) on the most popular platforms by adapting my Ansible role. It pulled my branch instead of the plexpy master and the tests complete nicely (which test that the webinterface is functioning).

