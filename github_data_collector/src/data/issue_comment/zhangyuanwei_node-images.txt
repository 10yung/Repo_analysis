使用库来处理一个高质量的图片，源图片分辨率为300dpi * 300dpi， 处理后变成96dpi * 96dpi。是否有方法保证图片质量不变，仍然保持300dpi的分辨率？
尝试过使用`.save(file[, type[, config]])`，设置`quality`为`100`无效，还是转变成96dpi
系统的glibc只能支持2.17，无法升级，使用的是亚马逊的Elastic Beantalk，请问有什么办法将images 的glibc降级吗？多谢
Downloading binary from https://github.com/zhangyuanwei/node-images/releases/download/v3.0.2/win32-x64-72_binding.node
Cannot download "https://github.com/zhangyuanwei/node-images/releases/download/v3.0.2/win32-x64-72_binding.node":

HTTP error 404 Not Found

Just wanted to see if you're looking to fix the Node10.x binding so it works on AWS Lambda? AWS are deprecating 8.10 and your Node10.x bindings do not work on Amazon Linux.

At the moment there's a GLIBC incompatibility:

```
Error: /lib64/libm.so.6: version `GLIBC_2.27' not found (required by /home/ec2-user/test/node_modules/images/vendor/linux-x64-64/binding.node)
```

Versions on Lambda:

```
[ec2-user@amzn2 linux-x64-64]$ yum info glibc | grep Version
Version     : 2.26
Version     : 2.26
```

Also if you could provide instructions for how you call node-gyp as I'm getting segmentation faults no matter how I compile with 10.x

load module error: Error:  node_modules/images/vendor/linux-x64-64/binding.node: ELF load command past end of file
现在项目有几个痛点
- 对于特定 node 版本，由于 v8 版本的更新会导致构建的插件不兼容，所以每次都是按照 node  v8 的版本来构建插件版本，node 版本发生跨度比较大的变化，就会导致在新版本上不可用
- 现在的版本不支持安装时自动构建，之所以这样的原因是许多前端同学的环境没有编译环境，所以一般前面都会提供好编译包。但很可惜的点是，编译包逐步递增导致不得不安装时下载。不然包大小无法控制。如果你的网络环境不太行的话就会导致无法下载成功而安装失败
- 由于版本迭代，一些功能被迭代没了，这主要是测试用例没有写全

针对以上的几个问题，本次版本进行如下改造

- 全部使用 n_api 进行编写，把兼容问题交给 Node 自己解决，对于早期的 node 版本逐步不予维护
- 提供完成的测试用例，保持后续的迭代质量
- 安装时尝试编译，如果在已经编译好的插件下载失败时。

预计完成时间 10.1 日前
[Node] Error: imagesdoes not yet support your current environment: OS X 64-bit with Unsupported runtime (72)
[Node] For more information on which environments are supported please see:

请问怎么实现添加满屏幕的水印呢
现在是这么写的太笨了。。
var images = require("images");
images(400,400)
    .fill(255,0,0,0.5)
    .draw(images('output.jpg'),200,200)
    .draw(images('output.jpg'),0,0)
    .save("dist.jpg");