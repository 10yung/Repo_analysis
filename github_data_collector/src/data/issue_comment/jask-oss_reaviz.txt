<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
<pre><code>
[ ] Regression (a behavior that used to work and stopped working in a new release)
[x] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
[ ] Performance issue
[ ] Feature request
[ ] Documentation issue or request
[ ] Other... Please describe:
</code></pre>

## Current behavior
<!-- Describe how the issue manifests. -->
I noticed that sometimes (window scroll position seems to affect thigns) the position of the tooltip is pretty far from where the cursor is. Unfortunately, screenshotting doesn't pick up where the cursor is but i'm hovering over the first bar. I'm scroll to the bottom of the screen here:
![Screen Shot 2019-12-17 at 1 55 43 PM](https://user-images.githubusercontent.com/1513140/71029420-f394eb00-20d4-11ea-9b3d-961c59d11a29.png)



## Expected behavior
<!-- Describe what the desired behavior would be. -->
Toolltip to show up right near where my cursor is. This is after I scroll up further on the screen:
![Screen Shot 2019-12-17 at 1 56 07 PM](https://user-images.githubusercontent.com/1513140/71029457-07d8e800-20d5-11ea-9a5a-6ceae7574c7d.png)


## Minimal reproduction of the problem with instructions

<!--
For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem via
https://codesandbox.io/embed/m7rl2z1989
-->

https://reaviz.io/?path=/docs/demos-bar-chart-gridlines--y-axis
* Step 1 Hover over any of the bars of the x-axis or y-axis - the tooltips should be off
* Step 2 Scroll to top and hover over either gridlines or x-axis bars - the tooltips should be correct here

## What is the motivation / use case for changing the behavior?
<!-- Describe the motivation or the concrete use case. -->
Mostly so it looks right

## Environment

<pre><code>
Libs:
- react version: X.Y.Z
- reaviz version: X.Y.Z
<!-- Check whether this is still an issue in the most recent React version -->

Browser:
- [x] Chrome (desktop) version 79.0.3945.88
- [ ] Chrome (Android) version XX
- [ ] Chrome (iOS) version XX
- [ ] Firefox version XX
- [ ] Safari (desktop) version XX
- [ ] Safari (iOS) version XX
- [ ] IE version XX
- [ ] Edge version XX
 
For Tooling issues:
- Node version: XX  <!-- run `node --version` -->
- Platform:  <!-- Mac, Linux, Windows -->

Others:
<!-- Anything else relevant?  Operating system version, IDE, package manager, HTTP server, ... -->
</code></pre>

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
<pre><code>
[ ] Regression (a behavior that used to work and stopped working in a new release)
[ ] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
[ ] Performance issue
[ ] Feature request
[x] Documentation issue or request
[ ] Other... Please describe:
</code></pre>

## Current behavior
<!-- Describe how the issue manifests. -->

There isn't any documentation of how to create your own custom tool-tips nor is there any documentation of the internal tool-tip component.

## Expected behavior
<!-- Describe what the desired behavior would be. -->

A page in the storybook to describe custom tooltip implementation with custom labels

## Minimal reproduction of the problem with instructions

n/a?

<!--
For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem via
https://codesandbox.io/embed/m7rl2z1989

* Step 1
* Step 2
* Step 3

-->

## What is the motivation / use case for changing the behavior?
<!-- Describe the motivation or the concrete use case. -->

We have graphs in our app that are based on hourly data points and I've set the `xAxis={<LinearXAxis type="time" />}` however the tool tips still show their labels as `dd/mm/yyyy` rather than `hh:mm:ss` (for example) and there is no way I can see to customize the tool tips.

## Environment

<pre><code>
Libs:
- react version: 16.12.0
- reaviz version: 7.2.0
<!-- Check whether this is still an issue in the most recent React version -->

Browser:
- [x] Chrome (desktop) version XX
- [ ] Chrome (Android) version XX
- [ ] Chrome (iOS) version XX
- [ ] Firefox version XX
- [ ] Safari (desktop) version XX
- [ ] Safari (iOS) version XX
- [ ] IE version XX
- [ ] Edge version XX
 
For Tooling issues:
- Node version: 10.16.3  <!-- run `node --version` -->
- Platform:  Windows  <!-- Mac, Linux, Windows -->

Others:
- n/a
<!-- Anything else relevant?  Operating system version, IDE, package manager, HTTP server, ... -->
</code></pre>

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->
StackedBarSeries tooltip doesn't show negative value instead it shows label
## I'm submitting a...
<!-- Check one of the following options with "x" -->
<pre><code>
[ ] Regression (a behavior that used to work and stopped working in a new release)
[x] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
[ ] Performance issue
[ ] Feature request
[ ] Documentation issue or request
[ ] Other... Please describe:
</code></pre>
<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
<pre><code>
[ ] Regression (a behavior that used to work and stopped working in a new release)
[x] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
[ ] Performance issue
[ ] Feature request
[ ] Documentation issue or request
[ ] Other... Please describe:
</code></pre>

## Current behavior
<!-- Describe how the issue manifests. -->
It seems like if tick intervals end up being fractions, it gets rounded ending up with duplicate tick labels. It looks like this is what's causing it:
https://github.com/jask-oss/reaviz/blob/master/src/common/Axis/LinearAxis/LinearAxisTickSeries.tsx#L132

but i'm unsure `scale.tickFormat` is doing.

I can customize the tick series label and fix the issue, but just logging a bug:
```
tickSeries={
  <LinearXAxisTickSeries
    label={<LinearXAxisTickLabel format={(d) => d + ' s'} />}
  />
}
```

## Expected behavior
<!-- Describe what the desired behavior would be. -->
Tick labels should not be rounded

## Minimal reproduction of the problem with instructions

<!--
For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem via
https://codesandbox.io/embed/m7rl2z1989

* Step 1
* Step 2
* Step 3

-->

Problem depends on data as well as chart size since intervals are automatically calculated. Here is an example:
https://codesandbox.io/s/blissful-field-9pbse

## What is the motivation / use case for changing the behavior?
<!-- Describe the motivation or the concrete use case. -->


## Environment

<pre><code>
Libs:
- react version: 16.8.6
- reaviz version: 5.3.4
<!-- Check whether this is still an issue in the most recent React version -->

Browser:
- [x] Chrome (desktop) version XX
- [ ] Chrome (Android) version XX
- [ ] Chrome (iOS) version XX
- [ ] Firefox version XX
- [ ] Safari (desktop) version XX
- [ ] Safari (iOS) version XX
- [ ] IE version XX
- [ ] Edge version XX
 
For Tooling issues:
- Node version: XX  <!-- run `node --version` -->
- Platform:  <!-- Mac, Linux, Windows -->

Others:
<!-- Anything else relevant?  Operating system version, IDE, package manager, HTTP server, ... -->
</code></pre>

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
<pre><code>
[ ] Regression (a behavior that used to work and stopped working in a new release)
[ X] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
[ ] Performance issue
[ ] Feature request
[ ] Documentation issue or request
[ ] Other... Please describe:
</code></pre>

## Current behavior
<!-- Describe how the issue manifests. -->
Links wont show up with basic example of sankey diagram using reaviz.io
![image](https://user-images.githubusercontent.com/31662467/67468080-304ee380-f64a-11e9-9625-60b3d01d22cd.png)


## Expected behavior
<!-- Describe what the desired behavior would be. -->
Expect links to show up

## Minimal reproduction of the problem with instructions

<!--
For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem via
https://codesandbox.io/embed/m7rl2z1989

* Step 1 Take data from reaviz storybook sankey examples and reproduce examples
* Step 2
* Step 3

-->

## What is the motivation / use case for changing the behavior?
<!-- Describe the motivation or the concrete use case. -->


## Environment

<pre><code>
Libs:
- react version: X.Y.Z
- reaviz version: X.Y.Z
<!-- Check whether this is still an issue in the most recent React version -->

Browser:
- [X ] Chrome (desktop) version XX
- [ ] Chrome (Android) version XX
- [ ] Chrome (iOS) version XX
- [ ] Firefox version XX
- [ ] Safari (desktop) version XX
- [ ] Safari (iOS) version XX
- [ ] IE version XX
- [ ] Edge version XX
 
For Tooling issues:
- Node version: XX  <!-- run `node --version` -->
- Platform:  <!-- Mac, Linux, Windows -->

Others:
<!-- Anything else relevant?  Operating system version, IDE, package manager, HTTP server, ... -->
</code></pre>

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
<pre><code>
[ ] Regression (a behavior that used to work and stopped working in a new release)
[ ] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
[ ] Performance issue
[x] Feature request
[ ] Documentation issue or request
[ ] Other... Please describe:
</code></pre>

## Current behavior
<!-- Describe how the issue manifests. -->
When putting an SVG or SVG partial into the `format` property, they do not appear because they are put inside a `title` tag.

## Expected behavior
<!-- Describe what the desired behavior would be. -->
Putting an SVG into the `format` property will render it properly (maybe even extend this to normal HTML with `<foreignObject>`.

## Minimal reproduction of the problem with instructions
https://codesandbox.io/s/reaviz-bar-demo-x2b24

* Return an SVG inside the `format` property.
* SVG does not appear because it's embedded in a `title`

## What is the motivation / use case for changing the behavior?
<!-- Describe the motivation or the concrete use case. -->
Having icons for labels instead of text can improve the look and feel of charts.

## Environment

<pre><code>
Libs:
- react version: 16.8.6
- reaviz version: 2.7.0
<!-- Check whether this is still an issue in the most recent React version -->

Browser:
- [x] Chrome (desktop) version 78
- [ ] Chrome (Android) version XX
- [ ] Chrome (iOS) version XX
- [ ] Firefox version XX
- [ ] Safari (desktop) version XX
- [ ] Safari (iOS) version XX
- [ ] IE version XX
- [ ] Edge version XX
 

- [X] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->

## Current behavior
Tool tip not showing on IOS Safari / Chrome.

## Expected behavior
Tool tip to work as on android devices to show up on click.

## Minimal reproduction of the problem with instructions
Open any demo on safari or chrome on IOS device click on graph to see a tool tip like on android devices. 
https://jask-oss.github.io/reaviz/?path=/story/charts-area-single-series--simple

Browser:
- [ ] Chrome (desktop) version XX
- [ ] Chrome (Android) version XX
- [X] Chrome (iOS) version XX
- [ ] Firefox version XX
- [ ] Safari (desktop) version XX
- [X] Safari (iOS) version XX
- [ ] IE version XX
- [ ] Edge version XX
 

Add ability to have a crosshair on line/scatter/area charts.

![2019-08-26_10-09-35](https://user-images.githubusercontent.com/227909/63696882-b9cc6b80-c7e9-11e9-97ad-f5570fbee59f.png)



A bar chart with gradients and masks turned off doesn't render.
<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
<pre><code>
[ ] Regression (a behavior that used to work and stopped working in a new release)
[x] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
[ ] Performance issue
[ ] Feature request
[ ] Documentation issue or request
[ ] Other... Please describe:
</code></pre>

## Current behavior
<!-- Describe how the issue manifests. -->
Single line graphs work, combining the data to form a multi series graph throws `Error: <path> attribute d: Expected number, "MNaN,NaNLNaN,NaN".`

## Expected behavior
<!-- Describe what the desired behavior would be. -->
Since the data works on single line graphs, I would think it should work on a multi series graph.

## Minimal reproduction of the problem with instructions

<!--
For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem via
https://codesandbox.io/embed/m7rl2z1989

* Step 1
* Step 2
* Step 3

-->

https://codesandbox.io/s/reavizmultiseries-ccfsj

``` JavaScript
export const electric = [
  {
    key: new Date("2019-01-01T06:00:00.000Z"),
    data: 49
  },
  {
    key: new Date("2019-02-01T06:00:00.000Z"),
    data: 93
  },
  {
    key: new Date("2019-03-01T06:00:00.000Z"),
    data: 44
  },
  {
    key: new Date("2019-04-01T06:00:00.000Z"),
    data: 28
  }
];

export const food = [
  {
    key: new Date("2019-01-01T06:00:00.000Z"),
    data: 169
  },
  {
    key: new Date("2019-02-01T06:00:00.000Z"),
    data: 84
  },
  {
    key: new Date("2019-03-01T06:00:00.000Z"),
    data: 86
  },
  {
    key: new Date("2019-04-01T06:00:00.000Z"),
    data: 206
  }
];

export const multi = [
  {
    key: "Electricity",
    data: electric
  },
  {
    key: "Food",
    data: food
  }
];
```

``` JSX
import React from "react";
import ReactDOM from "react-dom";
import { LineChart } from "reaviz";

import { food, electric, multi } from "./data";

function App() {
  return (
    <>
      <LineChart width={500} height={300} data={food} />
      <LineChart width={500} height={300} data={electric} />
      <LineChart width={500} height={300} data={multi} />
    </>
  );
}

const rootElement = document.getElementById("root");
ReactDOM.render(<App />, rootElement);
```

<img width="1005" alt="Screen Shot 2019-05-31 at 2 47 30 PM" src="https://user-images.githubusercontent.com/16308368/58730926-0eab4200-83b3-11e9-8560-111698bb2d69.png">

## What is the motivation / use case for changing the behavior?
<!-- Describe the motivation or the concrete use case. -->
Bug, lib not working as expected

## Environment

<pre><code>
Libs:
- react version: 16.8.6
- reaviz version: 2.2.2
<!-- Check whether this is still an issue in the most recent React version -->

Browser:
- [x] Chrome (desktop) version 74.0.3729.169
- [ ] Chrome (Android) version XX
- [ ] Chrome (iOS) version XX
- [ ] Firefox version XX
- [ ] Safari (desktop) version XX
- [ ] Safari (iOS) version XX
- [ ] IE version XX
- [ ] Edge version XX
 
For Tooling issues:
- Node version: v11.12.0
- Platform:  Mac

Others:
<!-- Anything else relevant?  Operating system version, IDE, package manager, HTTP server, ... -->
</code></pre>
