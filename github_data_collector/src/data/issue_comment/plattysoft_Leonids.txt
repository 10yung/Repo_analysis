For the Apache 2.0 license to be legally binding, there needs to be a copyright statement added to readme, e.g.:

Copyright (c) 2019 [your name]

Licensed under the Apache License, Version 2.0 (the "License");
you may not use this file except in compliance with the License.
You may obtain a copy of the License at

   http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing, software
distributed under the License is distributed on an "AS IS" BASIS,
WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
See the License for the specific language governing permissions and
limitations under the License.
Is there a possibility to specify an air resistance parameter that would gradually slow down moving particles? Acceleration requires an angle which in this case depends on the angle that a certain particle is moving (the acceleration should happen in the opposite direction of where the particle is moving).
我用as打开项目以后 ，无法编译通过。你用的开发工具是多少？
Is this library being maintained? It seems issues are reported, but not fixed. Every once in awhile my app gets a NPE with the library. 

Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.view.View.postInvalidate()' on a null object reference
       at com.plattysoft.leonids.ParticleSystem.onUpdate(ParticleSystem.java:683)
       at com.plattysoft.leonids.ParticleSystem.access$100(ParticleSystem.java:38)
       at com.plattysoft.leonids.ParticleSystem$ParticleTimerTask.run(ParticleSystem.java:82)
       at java.util.TimerThread.mainLoop(Timer.java:555)
       at java.util.TimerThread.run(Timer.java:505)
Now, the interface just specifies x, y, width and height. This allows for either
a Android `View` object, or alternatively an arbitrary rectangle to be used for emission
locations.

It maintains backward compatibility with the current API by overloading each method which accepts a `View`. The new method accepts an `Emitter`, and the old method delegates to the new method, by passing in a `new ViewEmitter(view)` whenever the new method expects an `Emitter`. 

In the future, this could be further refactored to expose even more flexibility. For example, the entire calculation for initial particle locations into the new `Emitter` interface. That is to say, instead of it being hard coded to use `x`, `y`, `width`, `height` (and hence a rectangle emission area), we could instead have an interface which exposes a method `generateParticleLocation()`. Some emitters may choose to use a rect, others could use a circle. Others could do even more interesting things such as from a point, but randomly distributed around the point according to a Gaussian distribution.

Another future refactoring would be to attach the `gravity` argument to the `Emitter` itself. That way the `ParticleSystem` itself doesn't need to care about whether to anchor particles to the top or bottom of a rectangle area. Instead you would configure this on the emitter object before passing it to the particle system.
I want my particles emitter emission from bottom to top direction, and I found example activity "Emit with Gravity" similarly, so I changed the code below to made it emission with 270 angle:
```
new ParticleSystem(this, 100, R.drawable.star_pink, 3000)
		.setAcceleration(0.00013f, 270)
		.setSpeedByComponentsRange(0f, 0f, 0.05f, 0.1f)
		.setFadeOut(200, new AccelerateInterpolator())
		.emitWithGravity(arg0, Gravity.TOP, 30);
```
But the result is the particles first little down then emission from bottom to top. How should I do to avoid that little down?
I have a fragment:

AnimationFragment.java

```
public class AnimationFragment extends Fragment {
    @Nullable
    @Override
    public View onCreateView(LayoutInflater inflater, @Nullable ViewGroup container, @Nullable Bundle savedInstanceState) {
        View view = inflater.inflate(R.layout.animation_fragment, container, false);

        new ParticleSystem(getActivity(), 80, R.drawable.poop_emoji, 10000)
                .setSpeedByComponentsRange(0f, 0f, 0.05f, 0.1f)
                .setAcceleration(0.00005f, 90)
                .emitWithGravity(view.findViewById(R.id.animationBox), Gravity.BOTTOM, 8);

        return view;
    }
}
```
I have a view in Fragment with animationBox id:

```
<?xml version="1.0" encoding="utf-8"?>
<LinearLayout xmlns:android="http://schemas.android.com/apk/res/android"
              android:orientation="vertical"
              android:layout_width="match_parent"
              android:layout_height="match_parent">
    <View android:id="@+id/animationBox"
          android:layout_width="match_parent"
          android:layout_height="match_parent" />
</LinearLayout>
```
Notice I initialized the ParticleSystem in onCreateView. When I run the app, nothing shows. Can the Particle System with with Fragments?

The app I'm working on crashes with NullPointerException with no links to the code in the app when soft keyboard is shown or hidden while the animation is running. The stacktrace starts from android.widget.FrameLayout.layoutChildren(FrameLayout.java:405).

The animation is bound to a RecyclerView.ViewHolder, and the RecyclerView is in a RelativeLayout.

When I googled the issue the closest cases I found were these:
https://github.com/bgogetap/StickyHeaders/issues/23
https://stackoverflow.com/questions/21864041/calling-viewgroupaddview-and-viewgroupremoveview-causes-nullpointerexception

At the moment I cancel animation in onClick on an EditView (the only case when the keyboard is shown) and onBackPressed, but that is a crutch and I'd like to have a permanent solution if that's possible.
If we have for example, some layout like this:
< ScrollView   >
      <   LinearLayout  >
            -Button0
            -Button1
            -Button2
            -Button3
              ...
      < /  LinearLayout  >
</ ScrollView   >

How to set ParticleSystem constructor which will emit particles **behind** all those buttons (I need particles to show only in background, not to fall in front of buttons)???

this will not work>
ParticleSystem(activity, maxParticles, drawableRedId, timeToLive, **idOfLinearLayoutFromExampleAbove**)
Hi everybody!
How to create effect fireworks for set wallpaper using Leonids library?

I was trying to do it, but I could not do it.
Thanks for all the answers from you guys!
