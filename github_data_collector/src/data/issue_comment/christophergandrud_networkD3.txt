Is it possible to have node labels repel each other to avoid label overlap?
I've seen this feature for d3.js. I'm wondering if you know of or could impliment this for networkD3? The ability to group nodes and ungroup them.
http://bl.ocks.org/GerHobbelt/3071239
It would be nice to have an ability start Sankey from top to the bottom...
Diagonal networks would be an *amazing* addition to [`drake`](https://github.com/ropensci/drake)'s dependency graph visualizations. However, there are two obstacles:

1. The `List` data structure, which I would have to compute using the existing `Nodes` and `Links` data frames.
2. The requirement that we have only a single root node.

Is there a way to easily transition from `sankeyNetwork()` to `diagonalNetwork()` using the same graphs and same data structures?
Sankey networks have been super useful in [`drake`](https://github.com/ropensci/drake). However, I am noticing rendering problems when the network is super large: https://github.com/ropensci/drake/issues/836.

``` r
library(networkD3)
library(tidyverse)
n <- 50
nodes <- data.frame(
  id = seq(0L, n)
)
edges <- data.frame(
  from = rep(0L, n),
  to = seq_len(n),
  value = 1L
)
sankeyNetwork(
  Links = edges,
  Nodes = nodes,
  Source = "from",
  Target = "to",
  Value = "value"
)
```

![](https://i.imgur.com/YcGvmEH.png)

<sup>Created on 2019-04-16 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>

Is there a way to improve how the edges render on the left? The desired result is similar to the graph below. 

``` r
library(networkD3)
library(tidyverse)
n <- 10
nodes <- data.frame(
  id = seq(0L, n)
)
edges <- data.frame(
  from = rep(0L, n),
  to = seq_len(n),
  value = 1L
)
sankeyNetwork(
  Links = edges,
  Nodes = nodes,
  Source = "from",
  Target = "to",
  Value = "value"
)
```

![](https://i.imgur.com/5AtXk9V.png)

<sup>Created on 2019-04-16 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>


This is a new issue for an old problem: how text displays in tooltips. For "links", the two lines are separated by a newline character `\n`. For "nodes", the two lines are separated by a `<br>` tag.

While this works in Safari, it does not appear to work in Chrome or Edge. The `<br>` tag is just ignored and the two lines run together.

I believe the answer is simple. In the line below, just replace `<br>` with `\n` (like the way links are handled) to fix the problem. I've edited my local copy of sankeyNetwork.js and this now works on Safari, Chrome and Edge.

https://github.com/christophergandrud/networkD3/blob/9c0a9c9ff32c53212d2d43e0ae3cc664137315e6/inst/htmlwidgets/sankeyNetwork.js#L187

As an aside, I believe using `<br>` _should work_ in Chrome and Edge. I've posted a question on StackOverflow to ask this [question](https://stackoverflow.com/questions/54848306/br-inside-pre-works-in-safari-but-not-chrome-or-edge)

Do you want me to make this change via pull request?
Is there a native munging function for getting a 2-column (source->target) data.frame into a link list and node list format?

The 2-column dataframe has the following format

| Source | Target |
|--------|--------|
| A      | C      |
| A      | D      |
| B      | E      |
| B      | F      |

The link list would be:

| from | to |
|------|----|
| 0    | 2  |
| 0    | 3  |
| 1    | 4  |
| 1    | 5  |

and the node list would be

| id | node |
|----|------|
| 0  | A    |
| 1  | B    |
| 2  | C    |
| 3  | D    |
| 4  | E    |
| 5  | F    |

I can get the data into this format but I want to know if there are standard methods for doing so?
Could you please tag the 0.4 release in Git?  I see 0.2.4 is tagged.  It's tough to figure out where the commits are for the [current CRAN release](https://cran.r-project.org/web/packages/networkD3/index.html) of 0.4 without this.  Thanks.
Hi,

Based on my limited understanding of JavaScript, the clickAction for the nodes currently allows you to show in text the characteristics (such as node name, node size or node group) when you click on a particular node, depends on how user write the JavaScript expression for clickAction (i.e. the MyClickScript in example of forceNetwork in the R documentation). 

Would it be possible to add a similar clickAction feature for the links? In particular one that allows the user to show variables in the Links input such as link length/width, source/targer or refer to a the corresponding value in a user-specified column in the Links input?

Or alternatively, a hoverAction on the links where it would show a text box (similar to the one in sandkeyNetwork) defined by a user-specified JavaScript expression based on variables in the Links input when user hovers on the links?

Thanks!
Aaron
The following graph should have a green node, but it appears blue. Tested with both the CRAN release and 9c0a9c9ff32c53212d2d43e0ae3cc664137315e6.

```r
nodes <- data.frame(
  id = letters[1:3],
  label = c("blue", "green", "black"),
  status = c("imported", "up to date", "outdated"),
  stringsAsFactors = FALSE 
)
edges <- data.frame(
  src = c(0, 0, 1),
  target = c(2, 1, 2),
  value = 1
)
color <- "d3.scaleOrdinal() .domain(['imported', 'up to date', 'outdated']) .range(['#1874CD', '#228B22', '#000000'])"
networkD3::sankeyNetwork(
  Links = edges,
  Nodes = nodes,
  NodeID = "label",
  Source = "src",
  Target = "target",
  NodeGroup = "status",
  Value = "value",
  colourScale = color,
  fontSize = 16
)
```

![color](https://user-images.githubusercontent.com/1580860/42670186-56f692ec-8627-11e8-85dc-34e3a108dd82.png)
