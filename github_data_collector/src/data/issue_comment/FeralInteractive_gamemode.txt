**Describe the bug**
A clear and concise description of what the bug is.

**To Reproduce**
Steps used to reproduce the behavior:
1. launch game in steam with this launch command gamemoderun %command%
2. View output of jounaldlog
3. See error
[23348,23348], ignoring error condition: Permission denied     -- Your user may not have permission to do this. Please read the docs     -- to learn how to adjust the pam limits. 

1/14/20 3:40 PM	/usr/bin/gamemoded	Could not inspect tasks for client [4285]! Skipping ioprio optimisation.

**Expected behavior**
renice and ioprio works

**System Info (please complete the following information):**
 - OS and version: [Manjaro 18.15 5.4.10-ck1-18-tkg-MuQSS]
 - GameMode Version [1.4]

**Is your feature request related to a problem? Please describe.**

If machine is temperature limited, performance mode won't do any good.  Instead user should be notified about the issue as fixing failing / inadequate cooling is one of the cheapest ways of significantly increasing performance.

**Describe alternatives you've considered**

* Gamemode depends on something that already monitors and warns user about temperature issues, or
* Gamemode itself monitors temperatures and their alarms from sysfs

**Additional context**

There are temp & power and their limit value files in hwmon sysfs, and alarm files telling whether they were triggered:
https://www.kernel.org/doc/Documentation/hwmon/sysfs-interface.rst

I think *_alarm entries trigger only when *_max/_crit limits are exceeded, but I don't think that happens unless cooling really fails (temperature is too high even when chip frequencies are lowered).

Therefore the rule for deciding when device would be temperature limited, is that *_input value is close (say within degree or two) to *_max/_crit limit.  Because temperature changes much slower than chip frequencies, polling the values at e.g. 1s interval should be fine.

Because *_alarm files keep their values (until reboot?), they don't need to be sampled, they can be checked whenever it's most convenient.

Then there's also:
https://www.kernel.org/doc/Documentation/hwmon/acpi_power_meter.rst

"Some computers have the ability to enforce a power cap in hardware. If this is the case, the power*_cap and related sysfs files will appear. When the average power consumption exceeds the cap, an ACPI event will be broadcast on the netlink event socket and a poll notification will be sent to the appropriate power*_alarm file to indicate that capping has begun, and the hardware has taken action to reduce power consumption."

Message to user could be something like:
"Detected device performance being temperature limited.  Please make sure your device is not too close to heat sources (radiator, other machines or their power bricks, direct sunlight), airflow to its air vents isn't obstructed, and device is on level.  If that doesn't help, make sure device fans work properly and are clean.  If device is still temperature limited, you may need to replace current cooling (old thermal paste etc)."

(We had one device using heat-pipes which cooling stopped working properly if it was few days at a slight angle.  Setting device level fixed that.  Another device had a fan that still worked, but fan was filled with dust-bunny socks it had been knitting... Removing those multiplied the laptop performance.)

When I launch bootstrap.sh, it demands me to press y to accept, then enter to confirm. Is there any way to install it silently without any user interaction? If the answer is no, could you please add this option?

I know that using bootstrap.sh requires entering root password, but I can make a script to install this application, and all the applications that I want automatically, and just give sudo permission to that script.

I just add -y to the end of every command I use on Linux Mint to run it silently, but when I try it with bootstrap it gives me this error message:
> meson: error: unrecognized arguments: -y
**Describe the bug**
A clear and concise description of what the bug is.
gamemoded does not start on boot and can't be manually started
**To Reproduce**
install gamemode in Ubuntu 19.10 sudo apt install gamemode
Steps used to reproduce the behavior:
1. Launch gamemod with '...'
2. Run game '....'
3. View output of '....'
systemctl status gamemoded

` gamemoded.service - gamemoded
   Loaded: loaded (/lib/systemd/system/gamemoded.service; enabled; vendor preset: enabled)
   Active: failed (Result: exit-code) since Fri 2019-12-27 18:36:11 EST; 12s ago
  Process: 16466 ExecStart=/usr/bin/gamemoded -l (code=exited, status=1/FAILURE)
 Main PID: 16466 (code=exited, status=1/FAILURE)

Dec 27 18:36:11 X570-AORUS-MASTER systemd[1]: Starting gamemoded...
Dec 27 18:36:11 X570-AORUS-MASTER /usr/bin/gamemoded[16466]: v1.5-dev
Dec 27 18:36:11 X570-AORUS-MASTER /usr/bin/gamemoded[16466]: Loading config file [/etc/gamemode.ini]
Dec 27 18:36:11 X570-AORUS-MASTER /usr/bin/gamemoded[16466]: Failed to connect to the bus: No such file or directory
Dec 27 18:36:11 X570-AORUS-MASTER systemd[1]: gamemoded.service: Main process exited, code=exited, status=1/FAILURE
Dec 27 18:36:11 X570-AORUS-MASTER systemd[1]: gamemoded.service: Failed with result 'exit-code'.
Dec 27 18:36:11 X570-AORUS-MASTER systemd[1]: Failed to start gamemoded.
~
`
4. See error

**Expected behavior**
A clear and concise description of what you expected to happen.
Expected that gamemoded starts
**System Info (please complete the following information):**
 - OS and version: [e.g. Ubuntu 18.04]
Ubuntu 19.10
 - GameMode Version [e.g. 1.1 or git sha]
v1.5-dev
**Additional context**
Add any other context about the problem here.
I don't know how to debug reason for failure.
Gamemode currently uses two threads, one for handling dbus and one for process reaping and config file watching.  Because it's threaded, it also has a complex system of read/write locks to protect internal data structures.  If a proper event loop were used instead of threads, the locking could be deleted and the whole thing would probably be a lot cleaner.  Fortunately, systemd already provides an event loop called [sd-event](https://www.freedesktop.org/software/systemd/man/sd-event.html) which has everything gamemode needs:

- sd-bus integration
- Timers
- Child process watching (for reaping)
- Inotify watching (for detecting config file changes)

It also properly uses `poll` so everything happens exactly on-demaind instead of having to wake up every 5s to look at file descriptors again.  I started down this path when working on #179 but the refactor was quickly getting into yak shaving territory and so I put it down.
**Describe the bug**
Added gamemoderun %command% to CSGO launch options after installing per the Docs.

**To Reproduce**
Steps used to reproduce the behavior:
1. Launch CSGO with normal executable including the gamemoderun %command% launch option
2. Game starts to load, then immediately closes itself

**Expected behavior**
Game to load

**System Info (please complete the following information):**
 - OS and version: PopOS 19.10
 - GameMode Version 1.4
haven't found an easy way to add gamemoderun to all steam launch options for all my games, so I just wrote this little script.
It's far from perfect, but works for me and maybe someone else has some use for it as well.
Some things worth to mention
- the script doesn't edit your original ~/.steam/steam/userdata/$YOURSTEAMID/config/localconfig.vdf
but works with a copy in /tmp/
- you have to insert your proper ID (valid directory name in ~/.steam/steam/userdata/)
- it removes every LaunchOptions line first
- then inserts
"LaunchOptions"		"gamemoderun %command%"
before every line with "Playtime"
- you have to copy the edited config manually back and make sure to close steam before.
- use at your own risk

[GamemoderunSteamCommands.txt](https://github.com/FeralInteractive/gamemode/files/3957646/GamemoderunSteamCommands.txt)

**Describe the bug**
Tests fail when running them.

**To Reproduce**
Steps used to reproduce the behavior:
1. Use git to clone the repository
2. Build it like said in README.md
3. Install gamemode in /usr
4. Run the command "gamemoded -t"

**Expected behavior**
I should all the test being done successfully.

**System Info (please complete the following information):**
 - OS and version: Debian 10 (Buster)
 - GameMode Version 1.3-dev

**Standard output**
$ gamemoded -t
: Loading config
: Running tests

:: Basic client tests
:: Passed

:: Dual client tests
gamemode request succeeded and is active
Quitting by request...
:: Passed

:: Gamemoderun and reaper thread tests
...Waiting for child to quit...
...Waiting for reaper thread (reaper_frequency set to 5 seconds)...
:: Passed

:: Supervisor tests
ERROR: gamemode_query_status after start request gave unexpected value 2, (expected 1)!
ERROR: :: Failed!
: Client tests failed, skipping feature tests
: Tests Failed!


Gamemode works correctly on the Wine runner in Lutris but doesn't activate on the Wine Steam runner. Both have identical launch perimeters:
Key=LD_PRELOAD   Value=/usr/lib/x86_64-linux-gnu/libgamemodeauto.so.0

Ubuntu 19.10
v1.5-dev 21 July 2019 according to man page

A frame limiter would be really nice for people using Freesync monitors to be able to cap max FPS of a game under the max VRR refresh rate of the monitor. NVIDIA at least has one built into their driver in Windows, but, nothing for Linux. There is, however, libstrangle which should work with all GPU vendors: https://github.com/milaq/libstrangle .

It would be pretty neat/slick if gamemode could integrate with and automatically set this for any game using game mode - maybe just allow a global max fps config option and then detect if it is installed or not to activate.