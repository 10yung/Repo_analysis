Signed-off-by: Michael Henriksen <mhenriks@redhat.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. Follow the instructions for writing a release note from k8s: https://git.k8s.io/community/contributors/guide/release-notes.md
-->

**What this PR does / why we need it**:

Time to update libraries!  Currently at 1.13.4.

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

**Special notes for your reviewer**:

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string "action required".
2. If no release note is required, just write "NONE".
-->
```release-note
Update k8s client libraries to 1.16.4
```

<!-- This form is for bug reports and feature requests ONLY!
Also make sure that you visit our User Guide at https://kubevirt.io/user-guide/
-->

**Is this a BUG REPORT or FEATURE REQUEST?**:

> Uncomment only one, leave it on its own line:
>

/kind bug

> /kind enhancement


**What happened**:

We create ceritifcates for our components which end hardcoded in `cluster.local`. This is a value which can be configured in k8s clusters. If people configure it differently, installking kubevirt will fail.

**What you expected to happen**:

We should instead somehow find out the right suffix (maybe through resolf.conf in the pod or from somewhere in the cluster).


**How to reproduce it (as minimally and precisely as possible)**:


**Anything else we need to know?**:

The priority is probably not that high. So far we have never seen a report by anyone.

**Environment**:
- KubeVirt version (use `virtctl version`):
- Kubernetes version (use `kubectl version`):
- VM or VMI specifications:
- Cloud provider or hardware configuration:
- OS (e.g. from /etc/os-release):
- Kernel (e.g. `uname -a`):
- Install tools:
- Others:

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. Follow the instructions for writing a release note from k8s: https://git.k8s.io/community/contributors/guide/release-notes.md
-->

**What this PR does / why we need it**:
We expose a new api-type
which holds all kubevirt configurations. HCO can now vendor this new type
and, and use it to put values in virt-ConfigMap.
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

**Special notes for your reviewer**:
This pr goes hand in hand with https://github.com/kubevirt/hyperconverged-cluster-operator/pull/391.
I will update the pr in HCO accordingly.
**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string "action required".
2. If no release note is required, just write "NONE".
-->
```release-note
Add KubevirtConfigurations, MigrationConfig, DeveloperConfigurations, NetworkConfigurations to API-types
```

Signed-off-by: Vatsal Parekh <vparekh@redhat.com>

<!--  Thanks for sending a pull request!  Here are some tips for you:
1. Follow the instructions for writing a release note from k8s: https://git.k8s.io/community/contributors/guide/release-notes.md
-->

**What this PR does / why we need it**:
Changed the logic to only allow specific interface types for migrations
**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes #

**Special notes for your reviewer**:

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string "action required".
2. If no release note is required, just write "NONE".
-->
```release-note
Changed the logic to only allow specific interface types for migrations
```

Dockerfile that will work for CI builds
@dhiller 
This PR needs to merge before https://github.com/dhiller/release/pull/2

This is pretty close to what you'll need to run the kubevirt hack/functests.sh in CI
The Dockerfile creates an image that has the tests built, src code - in CI it will be built w/ the PR's src code.  The CI job will use a stock CI template `openshift/release/ci-operator/templates/openshift/installer/cluster-launch-installer-custom-test-image.yaml` where the test image is the image built by this added Dockerfile.  

To Test This:
```console
$ podman pull quay.io/sallyom/kubevirt-ci:test  
$ podman run --rm -it -v /path/to/a/local/kubeconfig:/tmp/kubeconfig:Z quay.io/sallyom/kubevirt-ci:test sh
then in container:
# export KUBECONFIG=/tmp/kubeconfig
# mkdir /tmp/oc; cd /tmp/oc
# curl -L -O https://openshift-release-artifacts.svc.ci.openshift.org/4.4.0-0.ci-2020-01-16-152257/openshift-client-linux-4.4.0-0.ci-2020-01-16-152257.tar.gz
# tar xzvf openshift-client-linux-4.4.0-0.ci-2020-01-16-152257.tar.gz
# cd /go/src/kubevirt.io/kubevirt
# export PATH=$PATH:/tmp/oc/
# ./hack/kubevirt-builder/ci-test.sh
```
**NOTE:** the image is huge, so after you're done remove it w/ something like: 
podman volume prune
podman system-prune -a 
or
podman rmi quay.io/sallyom/kubevirt-ci:test
Test 1785 supposed to be w/o guest agent while actually it does have it.
Needed to re-write test 1785 to be w/o guest agent.

Signed-off-by: Igor Bezukh <ibezukh@redhat.com>

**What this PR does / why we need it**:
We need to test a live migration case where a Linux VM has guest agent inside. This PR adds the missing test. To be more specific, this test was already implemented but labeled incorrectly, so the PR fixes the labeling and creates a test that was really missing in the code (test 1785 becomes test 2653, and re-create test 1785)

**Which issue(s) this PR fixes** 
Test IDs 1785, 2653

**Special notes for your reviewer**:
@ILpinto please take a look

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string "action required".
2. If no release note is required, just write "NONE".
-->
```release-note
NONE
```

/kind bug

**What happened**:
Running ocp-4.3 lane, 11 tests failed
https://prow.apps.ovirt.org/view/gcs/kubevirt-prow/pr-logs/pull/kubevirt_kubevirt/2950/pull-kubevirt-e2e-ocp-4.3/1217032227049705472

**What you expected to happen**:
All test should pass

**How to reproduce it (as minimally and precisely as possible)**:
Run /test pull-kubevirt-e2e-ocp-4.3 on empty PR (once #2950) is merged

**Anything else we need to know?**:
Use prow to run it or locally (#2950 must be included)
```
export KUBEVIRT_PROVIDER=ocp-4.3
make cluster-up && make cluster-sync && make functest
```
**Environment**:
- KubeVirt version (use `virtctl version`):
- Kubernetes version (use `kubectl version`):
- VM or VMI specifications:
- Cloud provider or hardware configuration:
- OS (e.g. from /etc/os-release):
- Kernel (e.g. `uname -a`):
- Install tools:
- Others:

**Is this a BUG REPORT or FEATURE REQUEST?**:

> Uncomment only one, leave it on its own line:
>

/kind bug

> /kind enhancement


**What happened**:


```shell
$ make cluster-sync
DEPRECATION: Python 2.7 will reach the end of its life on January 1st, 2020. Please upgrade your Python as Python 2.7 won't be maintained after that date. A future version of pip will drop support for Python 2.7.
```

Reported by @oshoval .
**What you expected to happen**:

**How to reproduce it (as minimally and precisely as possible)**:


**Anything else we need to know?**:

**Environment**:
- KubeVirt version (use `virtctl version`):
- Kubernetes version (use `kubectl version`):
- VM or VMI specifications:
- Cloud provider or hardware configuration:
- OS (e.g. from /etc/os-release):
- Kernel (e.g. `uname -a`):
- Install tools:
- Others:

**Is this a BUG REPORT or FEATURE REQUEST?**:

The migration handover process is very complicated. In combination with the very generic tcp proxies it is extremely hard to follow and to change. We should refactor the code and make it more speaking for itself (e.g. tcp proxie naming, their purpose, encapsulating the handover better, ...).


> Uncomment only one, leave it on its own line:
>
> /kind bug

/kind enhancement


**What happened**:

**What you expected to happen**:

**How to reproduce it (as minimally and precisely as possible)**:


**Anything else we need to know?**:

**Environment**:
- KubeVirt version (use `virtctl version`):
- Kubernetes version (use `kubectl version`):
- VM or VMI specifications:
- Cloud provider or hardware configuration:
- OS (e.g. from /etc/os-release):
- Kernel (e.g. `uname -a`):
- Install tools:
- Others:

**What this PR does / why we need it**:
During migration compatible CPU model have to be used.
This is hard when cpu-passthrough or host-model is used
as a choice for CPU.

This issue can be ovecomed in a short term by blocking
migration for host-model or cpu-passthrough.

Signed-off-by: Petr Kotas <petr.kotas@gmail.com>

**Which issue(s) this PR fixes** *(optional, in `fixes #<issue number>(, fixes #<issue_number>, ...)` format, will close the issue(s) when PR gets merged)*:
Fixes # https://bugzilla.redhat.com/show_bug.cgi?id=1760028

**Release note**:
<!--  Write your release note:
1. Enter your extended release note in the below block. If the PR requires additional action from users switching to the new release, include the string "action required".
2. If no release note is required, just write "NONE".
-->
```release-note
NONE
```
