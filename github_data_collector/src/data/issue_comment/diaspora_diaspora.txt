I am using Diaspora mobile and it works fine.

Sometimes the loading time is about a second. On Firefox I get a white screen which is not so nice in the morning :grin:

My idea: Could we implement a [splash-screen](https://developers.google.com/web/tools/lighthouse/audits/custom-splash-screen) on loading time?

<bountysource-plugin>

---
Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/86671508-progressive-web-app-splash-screen?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github).
</bountysource-plugin>
When you have only one registered aspect, then people belonging to that aspect don't get shown with the name of the aspect, but with the generic "All Aspects".
I don't know if it was meant to be like this, I just find it confusing.

<bountysource-plugin>

---
Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/86276565-profile-visualization-when-there-is-only-one-aspect?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github).
</bountysource-plugin>

https://github.com/diaspora/diaspora/blob/1cbb3f9a7c1696b6088373cbf9e48f40390a5f4e/app/controllers/admins_controller.rb#L43
the `username is not null` is not needed since there is already in user.rb which denotes that username will not be null.
https://github.com/diaspora/diaspora/blob/1cbb3f9a7c1696b6088373cbf9e48f40390a5f4e/app/models/user.rb#L37

Also, in migrate file, it denotes created_at will not be null, https://github.com/diaspora/diaspora/blob/1cbb3f9a7c1696b6088373cbf9e48f40390a5f4e/db/migrate/0000_create_schema.rb#L597. 

As a result, this query can be simplified to User.all to save the query time on the two paramater. 

<bountysource-plugin>

---
Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/84542812-some-query-parameter-can-be-removed-due-to-the-constraints?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github).
</bountysource-plugin>
Some users may deliberately want to pick a pod where inactive account closures are enabled, some may want to pick pods where that is disabled. We should expose that information somewhere, for example on `/statistics`, NodeInfo, or somewhere else.

<bountysource-plugin>

---
Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/83283181-expose-automatic-account-closure-in-a-public-location?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github).
</bountysource-plugin>
Fine uploader [is not maintained anymore](https://github.com/FineUploader/fine-uploader/issues/2073) and we are still stuck with the problem, that image resizing is not working on Firefox for Android since a [PR](https://github.com/FineUploader/fine-uploader/pull/2007) of mine never was brought into a released version.

So I decided to look around for alternatives and found [Uppy](https://uppy.io), a powerful library and successor of FineUploader. Since we are already using Pica for resizing, it's no problem to not have any resizing plugins in Uppy included.

I refactored major parts of the code to fully integrate uppy using a custom Resizer plugin with the following rules:

- if the file is smaller then the allowed max size, nothing is done and the file is uploaded as it is
- if the file is bigger then the allowed max size, but the dimensions of the longest edge is smaller than 3072px, we just recompress it as JPEG without resizing, it's propably a huge png file.
- if the file is bigger then the allowed max size and the dimentions of the longest edge is greater than 3072px, we resize it before uploading.

The whole logic stayed the same, so it's no difference for the user experience.
I also improved a few thing, e.g. the input file buttons are now created on server side via HAML insteald of adding them by JavaScript afterwards.

Unfortunately Uppy is not available in rails-assets, so I had to add the whole package to the codebase. As soon as #8062 is finished, we could change this to use uppy from npm.
But if you have better solutions for this, I'm happy to see them.
This PR closes #8061.

I have no experience with ruby programming or diaspora internals, so this code needs a thorough review.

`rails-assets.org` has, unfortunately, [a sad history](https://github.com/tenex/rails-assets/issues?utf8=%E2%9C%93&q=is%3Aissue+expired) of letting their SSL-certs and even the domain expire, causing installation and upgrade issues for our users. In May, I made a significant donation towards setting up reliable SSL certification renewals and a monitoring on such after a downtime in https://github.com/tenex/rails-assets/issues/445, but this was not very productive, as [they managed to have their domain's DNS responses be NXDOMAINs for a while in July](https://github.com/tenex/rails-assets/issues/450), and, just now, [the SSL certificate expired again](https://github.com/tenex/rails-assets/issues/457).

The fact that whoever runs `rails-assets.org` these days fails to both keep the service running and accept help if they are unable to do so, I feel like it is a fair conclusion to say we cannot and should not rely on this service. Downtimes in their service cause our CI, new installation, and existing pod's upgrades to fail, and I have no reason to accept that.

As much as I like'd the Rubygems-only approach of assets management, I think it's time for us to move away from that, and switch to the "more standard" approach of `rails/webpacker` in combination with `yarn`.

<bountysource-plugin>

---
Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/81056625-stop-using-rails-assets-org-for-css-and-js-assets?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github).
</bountysource-plugin>
The "weekly user stats" tab of the admin panel shows users registered during a week and links to their profiles. However, the link is useless in case the user deleted their account. Clicking on such a link just brings up an info message saying the account is deleted. From a usability perspective is would be good to remove links to deleted users, or display their usernames crossed over.

If this issue gets support, I'd volunteer to prepare a tentative PR.

<bountysource-plugin>

---
Want to back this issue? **[Post a bounty on it!](https://www.bountysource.com/issues/81015571-dead-links-to-deleted-users-profiles?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github)** We accept bounties via [Bountysource](https://www.bountysource.com/?utm_campaign=plugin&utm_content=tracker%2F522&utm_medium=issues&utm_source=github).
</bountysource-plugin>
None