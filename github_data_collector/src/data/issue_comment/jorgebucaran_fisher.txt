Hi,

I'm not quite sure when it started to happen, but whenever I run `fisher` to update all packages, I get the message `rm: illegal option -- -`. This seems to happen for all packages in my `fishfile`. Since there are two packages installed, I get this message twice. Below you can find the full output when I run the command.

```
> fisher
rm: illegal option -- -
usage: rm [-f | -i] [-dPRrvW] file ...
       unlink file
rm: illegal option -- -
usage: rm [-f | -i] [-dPRrvW] file ...
       unlink file
fetching https://codeload.github.com/laughedelic/pisces/tar.gz/master
fetching https://codeload.github.com/b4b4r07/enhancd/tar.gz/master
linking ~/.config/fish/functions/_pisces_append.fish
linking ~/.config/fish/functions/_pisces_backspace.fish
linking ~/.config/fish/functions/_pisces_bind_pair.fish
linking ~/.config/fish/functions/_pisces_complete.fish
linking ~/.config/fish/functions/_pisces_jump.fish
linking ~/.config/fish/functions/_pisces_lookup.fish
linking ~/.config/fish/functions/_pisces_remove.fish
linking ~/.config/fish/functions/_pisces_skip.fish
linking ~/.config/fish/conf.d/pisces_key_bindings.fish
linking ~/.config/fish/functions/_enhancd_cd_after.fish
linking ~/.config/fish/functions/_enhancd_cd_before.fish
linking ~/.config/fish/functions/_enhancd_cd_builtin.fish
linking ~/.config/fish/functions/_enhancd_command_awk.fish
linking ~/.config/fish/functions/_enhancd_command_grep.fish
linking ~/.config/fish/functions/_enhancd_command_nl.fish
linking ~/.config/fish/functions/_enhancd_command_run.fish
linking ~/.config/fish/functions/_enhancd_command_which.fish
linking ~/.config/fish/functions/_enhancd_filepath_abs.fish
linking ~/.config/fish/functions/_enhancd_filepath_current_dir.fish
linking ~/.config/fish/functions/_enhancd_filepath_list_step.fish
linking ~/.config/fish/functions/_enhancd_filepath_split.fish
linking ~/.config/fish/functions/_enhancd_filepath_split_list.fish
linking ~/.config/fish/functions/_enhancd_filepath_walk.fish
linking ~/.config/fish/functions/_enhancd_filter_exclude.fish
linking ~/.config/fish/functions/_enhancd_filter_exclude_commented.fish
linking ~/.config/fish/functions/_enhancd_filter_exclude_gitignore.fish
linking ~/.config/fish/functions/_enhancd_filter_exists.fish
linking ~/.config/fish/functions/_enhancd_filter_fuzzy.fish
linking ~/.config/fish/functions/_enhancd_filter_interactive.fish
linking ~/.config/fish/functions/_enhancd_filter_join.fish
linking ~/.config/fish/functions/_enhancd_filter_limit.fish
linking ~/.config/fish/functions/_enhancd_filter_replace.fish
linking ~/.config/fish/functions/_enhancd_filter_reverse.fish
linking ~/.config/fish/functions/_enhancd_filter_trim.fish
linking ~/.config/fish/functions/_enhancd_filter_unique.fish
linking ~/.config/fish/functions/_enhancd_flag_is_default.fish
linking ~/.config/fish/functions/_enhancd_flag_parse.fish
linking ~/.config/fish/functions/_enhancd_flag_print_help.fish
linking ~/.config/fish/functions/_enhancd_help.fish
linking ~/.config/fish/functions/_enhancd_history_list.fish
linking ~/.config/fish/functions/_enhancd_history_open.fish
linking ~/.config/fish/functions/_enhancd_history_update.fish
linking ~/.config/fish/functions/_enhancd_ltsv_get.fish
linking ~/.config/fish/functions/_enhancd_ltsv_open.fish
linking ~/.config/fish/functions/_enhancd_ltsv_parse.fish
linking ~/.config/fish/functions/_enhancd_source_argument.fish
linking ~/.config/fish/functions/_enhancd_source_default.fish
linking ~/.config/fish/functions/_enhancd_source_go_up.fish
linking ~/.config/fish/functions/_enhancd_source_is_available.fish
linking ~/.config/fish/functions/_enhancd_source_mru.fish
linking ~/.config/fish/functions/enhancd.fish
linking ~/.config/fish/conf.d/enhancd.fish
linking ~/.config/fish/conf.d/enhancd_init.fish
updated 2 packages in 1.69s
```

Here is some information about my system.

**Fish version**

```
> fish --version
fish, version 3.0.2
```

**Fisher version**

```
> fisher --version
fisher version 3.2.10 ~/.config/fish/functions/fisher.fish
```

**OS**

```
> sw_vers
ProductName:	Mac OS X
ProductVersion:	10.15.2
BuildVersion:	19C57
```

I already reinstalled `fisher` and tried to find the issue by myself, but without any luck.
I fisher installed `b4b4r07/enhancd` and pretty quickly decided I didn't like it, so I uninstalled it. And now, my fisher install path seems to be broken and I can't work out why.

```
 ~  TEMP  ls -la
 ~  TEMP  fisher
To completely erase z's data, remove:
/Users/andy/.local/share/z/data
fetching https://codeload.github.com/franciscolourenco/done/tar.gz/master
fetching https://codeload.github.com/drcongo/agnoster/tar.gz/master
fetching https://codeload.github.com/edc/bass/tar.gz/master
fetching https://codeload.github.com/jethrokuan/z/tar.gz/master
fetching https://codeload.github.com/patrickf3139/Colored-Man-Pages/tar.gz/master
linking done.fish
linking agnoster.fish
linking fish_mode_prompt.fish
linking fish_prompt.fish
linking __bass.py
linking bass.fish
linking __z.fish
linking __z_add.fish
linking __z_clean.fish
linking __z_complete.fish
linking uninstall.fish
linking z.fish
linking man.fish
fetching https://codeload.github.com/fishpkg/fish-humanize-duration/tar.gz/master
linking humanize_duration.fish
added 6 packages, removed 6 packages in 2.25s
 ~  TEMP  ls -la
.rw-r--r--  andy  staff  2.9 KB  Fri Nov 29 13:11:32 2019    __bass.py
.rw-r--r--  andy  staff  5.9 KB  Fri Nov 29 13:11:32 2019    __z.fish
.rw-r--r--  andy  staff  1.2 KB  Fri Nov 29 13:11:32 2019    __z_add.fish
.rw-r--r--  andy  staff  333 B   Fri Nov 29 13:11:32 2019    __z_clean.fish
.rw-r--r--  andy  staff  627 B   Fri Nov 29 13:11:32 2019    __z_complete.fish
.rw-r--r--  andy  staff  1.1 KB  Fri Nov 29 13:11:32 2019    agnoster.fish
.rw-r--r--  andy  staff  506 B   Fri Nov 29 13:11:32 2019    bass.fish
.rw-r--r--  andy  staff    5 KB  Fri Nov 29 13:11:32 2019    done.fish
.rw-r--r--  andy  staff  355 B   Fri Nov 29 13:11:32 2019    fish_mode_prompt.fish
.rw-r--r--  andy  staff  3.7 KB  Fri Nov 29 13:11:32 2019    fish_prompt.fish
.rw-r--r--  andy  staff  597 B   Fri Nov 29 13:11:33 2019    humanize_duration.fish
.rw-r--r--  andy  staff  975 B   Fri Nov 29 13:11:33 2019    man.fish
.rw-r--r--  andy  staff  270 B   Fri Nov 29 13:11:32 2019    uninstall.fish
.rw-r--r--  andy  staff  706 B   Fri Nov 29 13:11:32 2019    z.fish
```

You can see it's installed everything in the current working directory, but it also removed all the functions that were previously installed in my `fish/functions/` directory. My `$fisher_path` is empty and my `$fish_function_path` is correctly set. I've tried removing fisher and reinstalling but it's still happening.

I can work around this for now by remembering to `cd $fish_function_path[1]` before running any fisher commands, but I'd love to know why it's doing this for long term sanity.
Please add a feature so that fisher can install packages from tarballs, e.g. like so:

```
fisher add https://github.com/reitzig/my-project/releases/download/latest/my-fisher-package.tar.gz
```
(not sure if that URL would actually work)


### Rationale

It is not always natural to use a full repository for a fisher package. For instance, Docker contains shell completions in their main repo; we can not install that one with fisher.
(In that case, something like `fisher add-completion https://..../docker.fish` would be enough.)

Or, in another scenario, you generate fish completion scripts programmatically. Ideally, you'd want to source-control the script, have build automation run it, and deliver the result -- such a repo wouldn't serve very well as a fisher package, but its release assets might.


### Alternative considered

Instead of arbitrary remote tarballs, you could specifically implement installing from e.g. GitHub release assets. You could

 - define which canonical path or name it would have to have,
 -  require the user to specify the asset name together with a version ,e.g. :owner/:repo/:asset@:release, or
  - pull information about the latest version assets.

_Nota bene:_ Even in the current full-repo mode, using the latest release instead of the latest commit by default would have other advantages like e.g. checking whether an update has to happen at all, but that's probably for another discussion.
I cannot seem to be able to install new packages using any 3.2.x version of fisher.

Here is an example using 3.2.0, but the same error occurs with any later version including master:

```
▶ curl -sSo ~/.config/fish/functions/fisher.fish https://raw.githubusercontent.com/jorgebucaran/fisher/3.2.0/fisher.fish
▶ source ~/.config/fish/functions/fisher.fish
▶ rm -r ~/.config/fisher/ ~/.cache/fisher/ ~/.config/fish/fishfile
▶ fisher add reitzig/sdkman-for-fish@v1.3.0
created empty fishfile in ~/.config/fish/fishfile
fetching https://codeload.github.com/reitzig/sdkman-for-fish/tar.gz/v1.3.0
mv: target '/home/tobia/.cache/fisher/github.com/reitzig/sdkman-for-fish' is not a directory
cp: cannot stat '/home/tobia/.cache/fisher/github.com/reitzig/sdkman-for-fish': No such file or directory
done in 0.50s
```

Here is the same command with 3.1.1, which works properly:

```
▶ curl -sSo ~/.config/fish/functions/fisher.fish https://raw.githubusercontent.com/jorgebucaran/fisher/3.1.1/fisher.fish
▶ source ~/.config/fish/functions/fisher.fish
▶ rm -r ~/.config/fisher/ ~/.cache/fisher/ ~/.config/fish/fishfile
▶ fisher add reitzig/sdkman-for-fish@v1.3.0
created empty fishfile in ~/.config/fish/fishfile
fetching https://codeload.github.com/reitzig/sdkman-for-fish/tar.gz/v1.3.0
linking ~/.config/fish/functions/sdk.fish
linking ~/.config/fish/completions/sdk.fish
linking ~/.config/fish/conf.d/sdk.fish
added 1 package in 0.61s
```

I'm using fish 2.7.1, installed from the default apt repository of Ubuntu 18.04
Thank you for interesting tool but first try with practically default install condition failed.  This may turn down many user, I am afraid.

After careful check, I see this bug was introduced initially 4d953fa ("feat: custom hosted packages via ssh+git; fix #464", 2018-10-13) during 3.0.9 cycle.    Please fix this at 3.3.0

Anyway, here is how this fails as installed.

```
osamu@goofy ~🐟 fisher add jethrokuan/fzf # No mod
created new fishfile in ~/.config/fish/fishfile
^C
^C⏎
There are still jobs active:

   PID  Command
 11401  fish -c "
                echo fetching $url >&2
                command mkdir -p $fisher_config/$pkg $fisher_cache/(command dirname $pkg)
                if test ! -z \"$branch\"
                     command git clone $url $fisher_config/$pkg --branch $branch --depth
                     or echo fisher: cannot clone \"$url\" -- is this a valid url\? >&2
                else if command curl $curl_opts -Ss -w \"\" $url 2>&1 | command tar -xzf-
                    command rm -Rf $fisher_cache/$pkg
                    command mv -f $fisher_config/$pkg/* $fisher_cache/$pkg
                    command rm -Rf $fisher_config/$pkg
                    command cp -Rf {$fisher_cache,$fisher_config}/$pkg
                else if test -d \"$fisher_cache/$pkg\"
                    echo fisher: cannot connect to server -- looking in \"$fisher_cache/$
                    command cp -Rf $fisher_cache/$pkg $fisher_config/$pkg/..
                else
                    command rm -Rf $fisher_config/$pkg
                    echo fisher: cannot add \"$pkg\" -- is this a valid package\? >&2
                end
            " >/dev/null &

A second attempt to exit will terminate them.
Use 'disown PID' to remove jobs from the list without terminating them.
```

So I commented out `fish -c` invocation and also added `echo >&2` to pertinent parts.
Then I tried again to identify problem.  See the log:

```
osamu@goofy ~🐟 fisher add jethrokuan/fzf # No subshell with echo to stderr
fetching https://codeload.github.com/jethrokuan/fzf/tar.gz/master 
mkdir -p /home/osamu/.config/fisher/github.com/jethrokuan/fzf /home/osamu/.cache/fisher/github.com/jethrokuan
git clone https://codeload.github.com/jethrokuan/fzf/tar.gz/master /home/osamu/.config/fisher/github.com/jethrokuan/fzf --branch  --depth 1
fisher: cannot clone "https://codeload.github.com/jethrokuan/fzf/tar.gz/master" -- is this a valid url?
done in 0.36s
```
It only created repo copy directory.  No content was downloaded.

I see 2 problems, here.

* URL used
    * URL for tar.gz is `https://codeload.github.com/jethrokuan/fzf/tar.gz/master` (NOW)
    * URL for shallow clone is standard repo URL `https://github.com/jethrokuan/fzf` (CORRECT ONE)
* git syntax: command option must be placed correctly (I see no reason to have branch since it is null string here) --> Reorder and drop

Let me showhow this git should have been invoked and files to be downloaded.
```
osamu@goofy ~🐟 git clone --depth 1 https://github.com/jethrokuan/fzf /home/osamu/.config/fisher/github.com/jethrokuan/fzf 
Cloning into '/home/osamu/.config/fisher/github.com/jethrokuan/fzf'...
remote: Enumerating objects: 17, done.
remote: Counting objects: 100% (17/17), done.
remote: Compressing objects: 100% (17/17), done.
remote: Total 17 (delta 1), reused 5 (delta 0), pack-reused 0
Unpacking objects: 100% (17/17), done.
```
I got files!

For URL problem, AWK script needs to be adjusted for curl or git-shallow-clone.

As for code `if test ! -z \"$branch\"` seen in current code, I think branch string length should not be used for deciding download method to be curl or git-shallow-clone.  For downloading with git shallow clone, a feature to select branch should exist. So what is needed is method to specify curl or git-shallow-clone.

I hope this helps.

Osamu
Running
```fish
fisher add git@github.com:edc/bass.git
```
works fine for the current shell. But the package is not added to the fishfile, so the package will be uninstalled on the next run of `fisher`. What's worse, the files are not actually removed - only the line in fishfile. 

I understand that https is preferable. The upside with using git means that private repos will be accessible with your normal ssl-keys. No config required.

I'm running the latest version. Let me know if you need anything else to reproduce.
```console
❯ fisher --version
fisher version 3.2.9 /usr/share/fish/vendor_functions.d/fisher.fish
```
So, I curl fisher: 

```
$ curl https://git.io/fisher --create-dirs -sLo $HOME/.config/fisher/functions/fisher.fish
```

For debugging, I reduce my `fish/config.fish` to:
```
set fish_home $HOME/.config/fish
set -g fisher_path $HOME/.config/fisher

set fish_function_path $fish_function_path[1] $fisher_path/functions $fish_function_path[2..-1]
set fish_complete_path $fish_complete_path[1] $fisher_path/completions $fish_complete_path[2..-1]

for file in $fisher_path/conf.d/*.fish
    builtin source $file 2> /dev/null
end

# Bootstrapping
if not functions -q fisher
    set -q XDG_CONFIG_HOME; or set XDG_CONFIG_HOME ~/.config
    curl https://git.io/fisher --create-dirs -sLo $HOME/.config/fisher/functions/fisher.fish
    fish -c fisher
end
```
I run fisher: 
```
$ fisher
created new fishfile in ~/.config/fisher/fishfile
<W> fish: An error occurred while redirecting file “/home/rdonaldson/.config/fisher/fishfile”
open: No such file or directory
fisher: nothing to commit -- try adding some packages

$ ls -la ~/.config/fisher
total 12
drwxr-xr-x.  3 rdonaldson rdonaldson 4096 Oct  7 10:47 ./
drwxr-xr-x. 50 rdonaldson rdonaldson 4096 Oct  7 10:47 ../
drwxr-xr-x.  3 rdonaldson rdonaldson 4096 Oct  7 10:47 local/
```
The fishfile has not been created. Ok, weird. (This happens if I `fish -c "fisher" also.)

So let's take the suggestion and try installing something:
```
$ fisher add jethrokuan/fzf
<W> fish: An error occurred while redirecting file “/home/rdonaldson/.config/fisher/fishfile”
open: No such file or directory
created new fishfile in ~/.config/fisher/fishfile
<W> fish: An error occurred while redirecting file “/home/rdonaldson/.config/fisher/fishfile”
open: No such file or directory
fisher: nothing to commit -- try adding some packages
fetching https://codeload.github.com/jethrokuan/fzf/tar.gz/master
linking ~/.config/fisher/functions/__fzf_cd.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzf_cd.fish': No such file or directory
linking ~/.config/fisher/functions/__fzf_complete.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzf_complete.fish': No such file or directory
linking ~/.config/fisher/functions/__fzf_complete_preview.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzf_complete_preview.fish': No such file or directory
linking ~/.config/fisher/functions/__fzf_find_file.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzf_find_file.fish': No such file or directory
linking ~/.config/fisher/functions/__fzf_get_dir.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzf_get_dir.fish': No such file or directory
linking ~/.config/fisher/functions/__fzf_open.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzf_open.fish': No such file or directory
linking ~/.config/fisher/functions/__fzf_parse_commandline.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzf_parse_commandline.fish': No such file or directory
linking ~/.config/fisher/functions/__fzf_reverse_isearch.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzf_reverse_isearch.fish': No such file or directory
linking ~/.config/fisher/functions/__fzfcmd.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/functions/__fzfcmd.fish': No such file or directory
linking ~/.config/fisher/conf.d/fzf.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/conf.d/fzf.fish': No such file or directory
linking ~/.config/fisher/conf.d/fzf_key_bindings.fish
cp: cannot create regular file '/home/rdonaldson/.config/fisher/conf.d/fzf_key_bindings.fish': No such file or directory
<W> fish: An error occurred while redirecting file “/home/rdonaldson/.config/fisher/fishfile”
open: No such file or directory
added 1 package in 1.47s

$ ls -la ~/.config/fisher
total 32
drwxr-xr-x.  7 rdonaldson rdonaldson 4096 Oct  7 11:05 ./
drwxr-xr-x. 50 rdonaldson rdonaldson 4096 Oct  7 11:05 ../
drwxr-xr-x.  2 rdonaldson rdonaldson 4096 Oct  7 11:05 completions/
drwxr-xr-x.  2 rdonaldson rdonaldson 4096 Oct  7 11:05 conf.d/
-rw-r--r--.  1 rdonaldson rdonaldson   15 Oct  7 11:05 fishfile
drwxr-xr-x.  2 rdonaldson rdonaldson 4096 Oct  7 11:05 functions/
drwxr-xr-x.  3 rdonaldson rdonaldson 4096 Oct  7 11:05 github.com/
drwxr-xr-x.  3 rdonaldson rdonaldson 4096 Oct  7 11:05 local/
```
Okay, weird: so something was installed, but nothing is working.

Also fisher is defined in memory, but the file is gone? 
```
$ ls -la ~/.config/fisher/functions/
total 8
drwxr-xr-x. 2 rdonaldson rdonaldson 4096 Oct  7 11:05 ./
drwxr-xr-x. 7 rdonaldson rdonaldson 4096 Oct  7 11:05 ../
```
And the fishfile is empty:
```
$ cat ~/.config/fisher/fishfile

```
I can manually write to the fish file:
```
$ cat ~/.config/fisher/fishfile
jethrokaun/fzf
fishpkg/fish-git-util
```
But when I try to run fisher:
```
$ fisher
<W> fish: An error occurred while redirecting file “/home/rdonaldson/.config/fisher/fishfile”
open: No such file or directory
fisher: nothing to commit -- try adding some packages

$ cat ~/.config/fisher/fishfile
cat: /home/rdonaldson/.config/fisher/fishfile: No such file or directory
```
Now my fishfile is gone? As is... almost everything else:
```
$ ls -la ~/.config/fisher/
total 12
drwxr-xr-x.  3 rdonaldson rdonaldson 4096 Oct  7 11:12 ./
drwxr-xr-x. 50 rdonaldson rdonaldson 4096 Oct  7 11:12 ../
drwxr-xr-x.  3 rdonaldson rdonaldson 4096 Oct  7 11:12 local/
```
So, uh. I used fisherman happily for years; I was trying to update for `fisher`, and wound up, well, here. I'm on Fedora 30, using `fish` version 3.0.2. 

Any... suggestions? 
I keep my fish configuration in my dotfiles repo, but don't really need to keep all stuff installed via fisher there too, just the `fishfile`. Problem is, if you change `$fisher_path`, it changes where `fishfile` gets placed to store it in $fisher_path. I would argue that your fishfile is a separate concept than what gets installed, so fishfile should be configurable to live with the rest of your config.

So, for example, if I set `$fisher_path` to `$XDG_DATA_HOME/fish/fisher`, `fishfile` gets placed in `$fisher_path` instead of `~/.config/fish/fishfile`.

I could symlink fishfile so it gets committed, but that seems like a bad solution. I saw [this issue](https://github.com/jorgebucaran/fisher/issues/524) and wondered under what conditions you would accept a PR that made both these changes? I'm willing to put in the work to do the following:

1. Change the name from fishfile to fish_bundle
2. Add an optional variable to set $fish_bundle_path, and change the old default location from $fisher_path/fish_bundle to $fish_config/fish_bundle
3. Migrate existing `fishfile`s to the new `fish_bundle`. You'd probably have to leave this in for a few versions while people update.

Let me know your thoughts.


Following on from discussion in https://github.com/jorgebucaran/fisher/issues/539.

This adds a section to the README that aims to prevent users from possibly losing data if they are playing around with Fisher and are unaware of how it works.

Hopefully this is clear, to the point, and prominent enough even though I avoided putting **WARNING** 😄.
The fishfile is stored at `$fisher_path/fishfile`, and `_fisher_commit` executes `rm -rf $fisher_config`, so if `$fisher_path = $fish_config`, running `fisher` will delete the fishfile before looking for packages, leading to confusing errors.

Adds a check to `fisher`, exiting with a message like

    $fisher_path (/home/arvensis/.config/fisher) cannot be /home/arvensis/.config/fisher
    Consider instead:
        set -g fisher_path "$HOME/.config/fisher_local"

To prevent user confusion in the future.