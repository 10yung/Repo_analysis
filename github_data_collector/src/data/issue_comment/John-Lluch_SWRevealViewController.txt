I get this issue installing one signal https://documentation.onesignal.com/docs/ios-sdk-setup
I have all my code set up for SWRevealViewController it worked perfectly fine on Xcode 10.3 and even on Xcode 11.2 beta 2 but for some reason its not working on the recent update release from the App Store and I end up getting this error 

Thread 1: EXC_BAD_ACCESS (code=1, address=0x48)

at the app delegate screen after I toggle with my SWRevealView Controller. any ideas how I could get this fixed


I've used this control for many years now.

Using Xcode 11 beta 4, on iOS 13 simulator, I assert and crash in SWRevealView's statusBarView method, at line:
if ([object respondsToSelector:NSSelectorFromString(key)]) statusBar = [object valueForKey:key];

*** Assertion failure in -[UIApplication _createStatusBarWithRequestedStyle:orientation:hidden:], /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKitCore_Sim/UIKit-3898.6/UIApplication.m:5237

*** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'App called -statusBar or -statusBarWindow on UIApplication: this code must be changed as there's no longer a status bar or status bar window. Use the statusBarManager object on the window scene instead.'

Anyone have a fork with a fix?
Hello,

I've been using swRevealVC for quite a bit in my iPhone app and it works great. I am now trying to port it to iPad and would like to show both viewcontroller (front and left) in full size, side-by-side - basically like the email app (see attached picture):
 
![IMG_0115](https://user-images.githubusercontent.com/36870504/59482702-cbbf8480-8e1e-11e9-9131-bc535d606a91.PNG)

When ever I show both VC simultaneously with SWRevealVC, it moves the front controller out of the way and thus hides a section of that front VC content (as the front VC has to move away to reveal the rear VC).

Is there a way to get both VC's views in full screen, displayed at the same time or will I need to look at using a splitView? I understand that the drawer effect requires the front view to move away but I was wondering if by using some of the settings (rearViewRevealWidth or rearViewRevealOverDraw) there would be a way to achieve the desired effect.

Thanks for the help!

Please update cocoa pod version to 2.4.0.

Thanks!
At some point along the way Apple added a `pauseInteractiveTransition` method to the `UIViewControllerContextTransitioning` protocol.  Doesn't seem to hurt anything that it's missing, but just to fix the warning...
Upgrade to Xcode 10.2 and Syntax warnings were corrected.
Hi 
When I open the side menu everything in the front view controller class become nil

Here is my code 

ResultsViewController.swift
`
class ResultsViewController: UIViewController, UICollectionViewDelegate, UICollectionViewDataSource, sideMenuDelegate  {

override func viewWillAppear(_ animated: Bool) {
        super.viewWillAppear(true)
        
        self.Search()
        print("Collection: \(self.collectionView)") // not nil
        self.collectionView.frame = self.contentView.frame
        
        self.collectionView.register(UINib.init(nibName: "ResultsGridCell", bundle: nil), forCellWithReuseIdentifier: "ResultsGridCell")
        
        let layout: UICollectionViewFlowLayout = UICollectionViewFlowLayout()
        layout.sectionInset = UIEdgeInsets(top: 20, left: 10, bottom: 10, right: 10)
        layout.itemSize = CGSize(width: (self.contentView.frame.size.width - 16), height: 98)
        
        self.listCollectionView = UICollectionView(frame: self.contentView.frame, collectionViewLayout: layout)
        self.listCollectionView?.dataSource = self
        self.listCollectionView?.delegate = self
        self.listCollectionView?.register(UINib.init(nibName: "ResultsCell", bundle: nil) , forCellWithReuseIdentifier: "ResultsListCell")
        self.listCollectionView?.backgroundColor = UIColor.white
        self.listCollectionView?.isHidden = true
        self.view.addSubview(self.listCollectionView!)
    }

override func viewDidAppear(_ animated: Bool) {
        super.viewDidAppear(true)
        if self.revealViewController() != nil {
            
            
            
            self.filterSideMenuButton.target = self.revealViewController()
            self.filterSideMenuButton.action = "revealToggle:"
            
            self.view.addGestureRecognizer((self.revealViewController()?.panGestureRecognizer())!)
            self.view.addGestureRecognizer((self.revealViewController()?.tapGestureRecognizer())!)
        }
    }

func applyFilters(sender: UIButton, rating: NSNumber?, max: NSNumber?, min: NSNumber?) {
        
        print(self.revealViewController()) // nil
        self.revealViewController()?.revealToggle(true)
        print(self.collectionView) // nil
    }
}
`

SideMenuViewController 

`@objc
public protocol sideMenuDelegate {
    func applyFilters(sender: UIButton, rating: NSNumber?, max: NSNumber?, min: NSNumber?)
    func cancelFilters()
}

class SideMenuViewController: UIViewController {
    
    var rating = 0
    
    var myDelegate: sideMenuDelegate?
    
    @IBOutlet weak var rating1: CosmosView!
    
    @IBOutlet weak var rating2: CosmosView!
    
    @IBOutlet weak var rating3: CosmosView!
    
    @IBOutlet weak var rating4: CosmosView!
    
    @IBOutlet weak var rating5: CosmosView!
    
    @IBOutlet weak var maximumTextField: UITextField!
    
    @IBOutlet weak var minimumTextField: UITextField!
    
    @IBOutlet weak var filterCancelationButton: UIButton!
    
    @IBOutlet weak var applyFiltersButton: UIButton!
    
    override func viewDidLoad() {
        super.viewDidLoad()
        
        let ratingTapRecognizer1 = UITapGestureRecognizer()
        ratingTapRecognizer1.addTarget(self, action: #selector(self.ratingTapped(sender:)))
        
        let ratingTapRecognizer2 = UITapGestureRecognizer()
        ratingTapRecognizer2.addTarget(self, action: #selector(self.ratingTapped(sender:)))
        
        let ratingTapRecognizer3 = UITapGestureRecognizer()
        ratingTapRecognizer3.addTarget(self, action: #selector(self.ratingTapped(sender:)))
        
        let ratingTapRecognizer4 = UITapGestureRecognizer()
        ratingTapRecognizer4.addTarget(self, action: #selector(self.ratingTapped(sender:)))
        
        let ratingTapRecognizer5 = UITapGestureRecognizer()
        ratingTapRecognizer5.addTarget(self, action: #selector(self.ratingTapped(sender:)))
        
        self.rating1.addGestureRecognizer(ratingTapRecognizer1)
        self.rating2.addGestureRecognizer(ratingTapRecognizer2)
        self.rating3.addGestureRecognizer(ratingTapRecognizer3)
        self.rating4.addGestureRecognizer(ratingTapRecognizer4)
        self.rating5.addGestureRecognizer(ratingTapRecognizer5)
        
        for i in 1...5 {
           let ratingBar = self.view.viewWithTag(i) as! CosmosView
            ratingBar.settings.filledColor = UIColor.init(red: 40/255, green: 40/255, blue: 40/255, alpha: 1)
            ratingBar.settings.filledBorderColor = UIColor.init(red: 40/255, green: 40/255, blue: 40/255, alpha: 1)
        }
        
        self.filterCancelationButton.layer.borderWidth = 1
        self.filterCancelationButton.layer.borderColor = UIColor.init(red: 230/255, green: 99/255, blue: 69/255, alpha: 1).cgColor
        
        self.applyFiltersButton.addTarget(self, action: #selector(self.applyTapped), for: .touchUpInside)
        
        self.filterCancelationButton.addTarget(self, action: #selector(self.cancelFilters), for: .touchUpInside)
        
    }
    
    @objc
    func applyTapped(sender: UIButton) {
        
        var max: Int? = nil
        var min: Int? = nil
        
        if self.maximumTextField.text != "" {
            max = Int(self.maximumTextField.text!)
        }
        
        if self.minimumTextField.text != "" {
            min = Int(self.minimumTextField.text!)
        }
        
        myDelegate = ResultsViewController.self()
        myDelegate?.applyFilters(sender: sender, rating: rating as NSNumber, max: max as NSNumber?, min: min as NSNumber?)
        
        
    }
}`
I used localization in my app to support arabic and english , so I'm checking in my code if the language is arabic then setting the right and rear ,if english setting the right and rear also , so in english when I swipe from right it come with part of main view and crach , the same thing in arabic when swipe from left , I commented the line of pan gesture now to only open from button but I want to solve this 
Hi there,

If anyone is interested in a framework that allows recreating the Apple Music App Now Playing Transition & Mini Player:

https://github.com/iDevelopper/PBPopupController

Regards,

