
A modification of linked_list to support insertions and deletions from both sides
(so now it's a deque)
When running a query "SELECT * FROM foo f WHERE f.name LIKE 'Ab\\%%';"
an element with name = 'Ab&' gets matched because Tokenizer parses 'Ab\\%%' as 'Ab%%' and that's what gets inserted as the right variable in LIKE in the parse tree.

This issue doesn't have a trivial solution since escaping characters is based on context. For example when someone wants to alias a column as a\\b then they will use "... column as a\\\\b ..." and the first "\\" should not be inserted into the string. On the other hand in the LIKE example above we want the "\\" to make it into the final string, because 'Ab\\%%' is a different match condition from 'Ab%%' (obviously).

I try to execute query like

`SELECT dyusr.* FROM dynamo.departments as dydep
LEFT JOIN dynamo.user_role as dyur ON dydep.id = dyur.department_id
LEFT JOIN dynamo.users as dyusr ON dyusr.id = dyur.user_id
WHERE dydep.id = 1`

with expectation it will returns only users data, but it return all of tables field value
Hi, I try to query using subquery like this
SELECT pta2.*, tam1.created_at as ticket_agent_mapping_create FROM premier_ticket_aml pta2
LEFT JOIN (
	SELECT * FROM ticket_agent_mapping tam
		WHERE tam.agent_role = 'aml_agent'
) as tam1 ON pta2.ticket_id = tam1.ticket_id
ORDER BY pta2.id ASC;
But its doesnt work. Did I do something wrong?



I'm not sure how feasible this may be, but the old [logparser](https://github.com/nfultz/logparserwinedocker) program from Microsoft supported queries like

    Select * from test.csv

And it would read from test.csv, without needing any config files. 