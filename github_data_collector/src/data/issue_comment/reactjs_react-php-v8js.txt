- Update Dependencies package for react version 15 .
- Update code style better server-side rendering :)
I noticed that on the Facebook website, there are react components. I think it should be rendered on the server side. But Facebook use php do the render job, so how do they implement the architecture? Do they use the react-php-v8js way?
Hi,

I am having issues with `react-select` package on SSR. This is one of the common components to use. When I add it on SSR with `react-php-v8js` I get this error:
`V8Js::compileString():38055: TypeError: Cannot read property 'userAgent' of undefined`

I was wondering maybe someone had this issue and managed to solve it via config or etc. 
Thanks in advance for any help.
Some react libraries render their components differently if the window object is defined. Currently if the window object is unefined, ***this*** is assigned to the window, which is not the actual window object. This causes errors like these : 
```js
webpack-internal:///643:57: TypeError: Cannot read property 'userAgent' of undefined
```
Does react-php-v8js work with the newer version of react?

When I try to make it work with  16.1.1 and following code:

```
class Table extends React.Component {
  constructor(props) {
    super(props);
  }
  render() {
    var rows = this.props.data.map(function (row) {
      var cells = row.map(function(cell) {
        return <td>{cell}</td>;
      });
      return <tr>{cells}</tr>;
    });
    return (
      <table>
        <tbody>{rows}</tbody>
      </table>
    );
  }
}
```

I get this Error:
`V8Js::compileString():1007: TypeError: Super expression must either be null or a function, not undefined`
Many PHP database driver implementations return all query results as strings and do not do any type conversion. This is usually insignificant because PHP will perform implicit type conversions when necessary.

But for React/JSON we need these types to be explicit. The JSON_NUMERIC_CHECK flag for `json_encode` will detect strings that are like numbers and convert them.
Possibly allow for the rendering of child components so that wrappers aren't required.

I already have a solution to this.
this is the usage example you provided:

```
// the library
$react_source = file_get_contents('/path/to/build/react.js');
// all custom code concatenated
$app_source = file_get_contents('/path/to/custom/components.js');

$rjs = new ReactJS($react_source, $app_source);
$rjs->setComponent('MyComponent', array(
  'any'   =>  1,
  'props' =>  2
  )
);

/// ...

// print rendered markup
echo '<div id="here">' . $rjs->getMarkup() . '</div>';

/// ...

// load JavaScript somehow - concatenated, from CDN, etc
// including react.js and custom/components.js

// init client
echo '<script>' . $rjs->getJS("#here") . '</script>'; 

/// ...

// repeat setComponent(), getMarkup(), getJS() as necessary
// to render more components
```

I'm not sure if the following lines will be applicable if I am using gulp and laravel-elixir to mix all my scripts into a single file.

```
$app_source = file_get_contents('/path/to/custom/components.js');
```
```
echo '<script>' . $rjs->getJS("#here") . '</script>';
````
How can I use Browserify or webpack to compile a es6 script that works with reach-php-v8js? I have tried the following but it looks like the js string produced by **`$rjs->getJS("app", "GLOB");`** fails to access the component ItemPage in `build.js` which isn't in the global scope. 

`ReactDOM.render(React.createElement(ItemPage, {"value":"something"}), app);`

item_page.js

```
class ItemPage extends React.Component {
    render(){
        return <div>{this.props.value}</div>
    }
}
```

After transpiling the es6 code into es5 with **browserify**, **build.js** by this command,

```
browserify item_page.js -o /js/build.js -t [ babelify --presets [ es2015 react ] ]
```

it ends up like this

```
(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){
"use strict";

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var ItemPage = function (_React$Component) {
    _inherits(ItemPage, _React$Component);

    function ItemPage() {
        _classCallCheck(this, ItemPage);

        return _possibleConstructorReturn(this, Object.getPrototypeOf(ItemPage).apply(this, arguments));
    }
    _createClass(ItemPage, [{
        key: "render",
        value: function render() {
            return React.createElement(
                "div",
                null,
                "Testing"
            );
        }
    }]);

    return ItemPage;
}(React.Component);

},{}]},{},[1]);
```

Error in Chrome:

```
Uncaught ReferenceError: ItemPage is not defined
```

Html output

```
<html>
<head>
    <title>React page</title>
    <!-- css and stuff -->
</head>
<body>
<!-- render server content here -->
<div id="app"><?php echo $rjs->getMarkup(); ?></div>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/react/15.2.0/react.min.js"></script>
<script type="text/javascript" src="https://cdnjs.cloudflare.com/ajax/libs/react/15.2.0/react-dom.min.js"></script>
<script src="/js/build/build.js"></script>
<script>
    ReactDOM.render(React.createElement(ItemPage, {"value":"something"}), app);</script>
   <!-- This is the result of echo $rjs->getJS($mainId, "GLOB"); -->
</script>
</body>
</html>
```

> 0 info it worked if it ends with ok
> 1 verbose cli [ 'C:\Program Files\nodejs\\node.exe',
> 1 verbose cli   'C:\Program Files\nodejs\node_modules\npm\bin\npm-cli.js',
> 1 verbose cli   'run',
> 1 verbose cli   'make' ]
> 2 info using npm@2.11.2
> 3 info using node@v0.12.5
> 4 verbose run-script [ 'premake', 'make', 'postmake' ]
> 5 info premake react-php-v8js@1.0.0
> 6 info make react-php-v8js@1.0.0
> 7 verbose unsafe-perm in lifecycle true
> 8 info react-php-v8js@1.0.0 Failed to exec make script
> 9 verbose stack Error: react-php-v8js@1.0.0 make: `npm run make-dev && npm run make-min && npm run make-table`
> 9 verbose stack Exit status 1
> 9 verbose stack     at EventEmitter.<anonymous> (C:\Program Files\nodejs\node_modules\npm\lib\utils\lifecycle.js:213:16)
> 9 verbose stack     at EventEmitter.emit (events.js:110:17)
> 9 verbose stack     at ChildProcess.<anonymous> (C:\Program Files\nodejs\node_modules\npm\lib\utils\spawn.js:24:14)
> 9 verbose stack     at ChildProcess.emit (events.js:110:17)
> 9 verbose stack     at maybeClose (child_process.js:1015:16)
> 9 verbose stack     at Process.ChildProcess._handle.onexit (child_process.js:1087:5)
> 10 verbose pkgid react-php-v8js@1.0.0
> 11 verbose cwd C:\Users\supachai.w\Desktop\react\react-php-v8js\example
> 12 error Windows_NT 6.3.9600
> 13 error argv "C:\Program Files\nodejs\\node.exe" "C:\Program Files\nodejs\node_modules\npm\bin\npm-cli.js" "run" "make"
> 14 error node v0.12.5
> 15 error npm  v2.11.2
> 16 error code ELIFECYCLE
> 17 error react-php-v8js@1.0.0 make: `npm run make-dev && npm run make-min && npm run make-table`
> 17 error Exit status 1
> 18 error Failed at the react-php-v8js@1.0.0 make script 'npm run make-dev && npm run make-min && npm run make-table'.
> 18 error This is most likely a problem with the react-php-v8js package,
> 18 error not with npm itself.
> 18 error Tell the author that this fails on your system:
> 18 error     npm run make-dev && npm run make-min && npm run make-table
> 18 error You can get their info via:
> 18 error     npm owner ls react-php-v8js
> 18 error There is likely additional logging output above.
> 19 verbose exit [ 1, true ]

How do I solve this issue, Thank.
