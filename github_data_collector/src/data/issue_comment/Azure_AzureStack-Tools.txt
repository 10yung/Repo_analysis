


New deployment get's stuck in validation section:

1.  Enter-PSSession -ComputerName LOCALHOST -ConfigurationName PrivilegedEndpoint
*Temporary work around is to only use Enter-PSSession -ComputerName LOCALHOST

2.  Test-AzureStack
*The specified module 'ECEClient.psm1' was not loaded because no valid module file was found
**Attempted to manually load Import-Module 'C:\Program Files\WindowsPowerShell\Modules\Microsoft.AzureStack.Diagnostics.DataCollection\ECEServiceClient\ECEClient.psm1' but still got same error


Validate the ASDK installation
To ensure that your ASDK deployment was successful, use the Test-AzureStack cmdlet by following these steps:
Sign in as AzureStack\AzureStackAdmin on the ASDK host computer.
Open PowerShell as an admin (not PowerShell ISE).
Run: Enter-PSSession -ComputerName LOCALHOST -ConfigurationName PrivilegedEndpoint
Run: Test-AzureStack
The tests take a few minutes to complete. If the installation was successful, the output looks something like:

PS C:\AzureStack-Tools-master> Enter-PSSession -ComputerName LOCALHOST -ConfigurationName PrivilegedEndpoint
Enter-PSSession : Connecting to remote server LOCALHOST failed with the following error message : The WS-Management service cannot process the
request. Cannot find the PrivilegedEndpoint session configuration in the WSMan: drive on the LOCALHOST computer. For more information, see the
about_Remote_Troubleshooting Help topic.
At line:1 char:1
+ Enter-PSSession -ComputerName LOCALHOST -ConfigurationName Privileged ...
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidArgument: (LOCALHOST:String) [Enter-PSSession], PSRemotingTransportException
    + FullyQualifiedErrorId : CreateRemoteRunspaceFailed


PS C:\> Import-Module 'C:\Program Files\WindowsPowerShell\Modules\Microsoft.AzureStack.Diagnostics.DataCollection\ECEServiceClient\ECEClient.psm1'
WARNING: The names of some imported commands from the module 'ECEClient' include unapproved verbs that might make them
less discoverable. To find the commands with unapproved verbs, run the Import-Module command again with the Verbose
parameter. For a list of approved verbs, type Get-Verb.
PS C:\> Test-AzureStack
11/20/2019 20:43:56 : Unexpected exception getting Azure Stack health status. The specified module 'ECEClient.psm1' was not loaded because no valid module file was found in any module directory.
11/20/2019 20:43:56 :
Call Get-AzureStackLog for additional diagnostics

Import-Module : The specified module 'ECEClient.psm1' was not loaded because no valid module file was found in any
module directory.
At C:\Program Files\WindowsPowerShell\Modules\Microsoft.AzureStack.Diagnostics.Validator\Microsoft.AzureStack.Diagnosti
cs.Validator.psm1:112 char:9
+         Import-Module -Name ECEClient.psm1 -Verbose:$false -DisableNa ...
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ResourceUnavailable: (ECEClient.psm1:String) [Import-Module], FileNotFoundException
    + FullyQualifiedErrorId : Modules_ModuleNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand

Windows only variable has been referenced in Get-AzureRMCloudCapability.ps script breaking functionality with non Windows Operating systems.

Please consider using unified variable "[system.io.path]::GetTempPath()"

link here [https://github.com/Azure/AzureStack-Tools/blob/master/CloudCapabilities/AzureRM.CloudCapabilities.psm1#L48](url)

replace: 
`$rootPath = $env:TEMP`
with: 
`$rootPath = [system.io.path]::GetTempPath()`

would have issued a pull request myself to fix this but its greyed out?

Currently we are defaulting to using WebClient to download images. It can take a long time to download images with WebClient and can also time out. 

This PR makes AzCopy the default option for downloading images. It is faster and has check-pointing builtin. 

```
Exception calling "DownloadFile" with "2" argument(s): "The operation has timed out."
At C:\AzureStack-Tools-master\Syndication\AzureStack.MarketplaceSyndication.psm1:586 char:17
+                 $wc.DownloadFile($source, $tmpDestination)
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], ParentContainsErrorRecordException
    + FullyQualifiedErrorId : WebException
```

https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient?view=netframework-4.8#remarks
_

> We don't recommend that you use the WebClient class for new development. Instead, use the System.Net.Http.HttpClient class.

_

When retrieving an access token from the cache you should scope it to the resource you need to access. The Test-AzSOfflineMarketplaceItem failed fro me - as the token retrieved from the cache to use against  AzureStack was actually a token for public Azure. I've added a filter to only include tokens for the AzureStack instance you are working with.
Fix reference to selected subscription ID