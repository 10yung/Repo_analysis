Version 11.2.1 (11B53)
Device: iPhone 11 and iPhone Pro Max Simulator
Version: 0.0.3
![image](https://user-images.githubusercontent.com/15709918/68979722-289ade80-07b3-11ea-90fb-05c57e22be88.png)

![image](https://user-images.githubusercontent.com/15709918/68979745-3cdedb80-07b3-11ea-9722-b9175bd65c62.png)

```
//
//  ContentView.swift

import Burritos // No such module 'Burritos'
import SwiftUI

struct ContentView: View {
    @LateInit test: String
    var body: some View {
        Text("Hello, World!")
    }
}

struct ContentView_Previews: PreviewProvider {
    static var previews: some View {
        ContentView()
    }
}
```

The module does not load and I cannot use any of the features.
Hello.
Thank you for Burritos.
As I can see Burritos does not support Carthage. I think it will be good to add this feature.
I used Swift 5.1/Xcode 11.1 to reproduce this issue.
Consider the following code:
```swift
protocol P {
    func f()
}

struct S: P {
    func f() { }
}

func f(p: P) {
    p.f()
}

class C {
    @LazyConstant
    var s: S = {
        return S()
    }()

    func g() {
        f(p: s)
    }
}
```
Getting the following error: **Expression type '()' is ambiguous without more context**. To fix it replace `f(p: s)` with `f(p: s as P)`. But as for me this is a bug.
I also [created an issue at https://bugs.swift.org](https://bugs.swift.org/browse/SR-11664).
Hello.
Thank you for Burritos.
In this pull request I added MappingSetter. I was inspired by Trimmed, however MappingSetter is more flexible, you can set any mapping function.
I was unable to create a EnvironmentVariable without `name` being public and having a public `init`. This fixes that.
Hi @guillermomuntaner 

Here is an implementation of the Observer pattern with a property wrapper.
I think I've done all what was required in the CONTRIBUTING.md file.

Thanks.

Thibault.
Use `os_unfair_lock` if it is available, otherwise fall back to  `pthread_mutex`. 

This should give a nice performance boost according to the tests in this article:
https://www.cocoawithlove.com/blog/2016/06/02/threads-and-mutexes.html
Hello everyone!

In order to extend the collection I am looking for new fresh ideas.

Thanks. 