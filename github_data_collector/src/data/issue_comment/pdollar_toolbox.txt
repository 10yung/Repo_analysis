on a 64bit linux system (ubuntu 16), the function mxCreateMatrix3 fails to generate matrix with the correct dimensions. The issue is the use of int vs size_t. The function mxSetDimensions takes size_t as its inputs, but mxCreateMatrix3 passes int. on (my) 64bit system, int is 4 bytes, whereas size_t is 8 bytes. This caused garbage dimensions being assigned to the matrix.
Hi,

In acfTrain.m the classifier for the previous stage is rewritten by the classifier for the current stage. 
``detector.clf = adaBoostTrain(X0,X1,detector.opts.pBoost)``
Are there any variables that are updated through the stages ? Or simply something that I'm missing ?

Thanks

Hello,
I want to change the detection threshold of ACF Detector in order to generate object proposals.
How can I do it?
Thanks.
toolboxCompile fails for certain files. It cannot successfully compile due to this error:

Building with 'Xcode Clang++'.
 -> COMPILE FAILURE: 'gradientMex.cpp' /Users/<me>/Library/Application Support/MathWorks/MATLAB Add-Ons/Collections/pdollar_toolbox/pdollar-toolbox-e873326/channels/private/gradientMex.cpp:329:20: error: no matching function for call to 'mxSetDimensions_730'
  mxSetData(M,*I); mxSetDimensions(M,dims,3); return M;
                   ^~~~~~~~~~~~~~~
/Applications/MATLAB_R2019a.app/extern/include/matrix.h:248:25: note: expanded from macro 'mxSetDimensions'
#define mxSetDimensions mxSetDimensions_730
                        ^~~~~~~~~~~~~~~~~~~
/Applications/MATLAB_R2019a.app/extern/include/matrix.h:1234:1: note: candidate function not viable: no known conversion from 'const int [3]' to 'const mwSize *' (aka 'const unsigned long *') for 2nd argument
mxSetDimensions(mxArray *pa, const mwSize *pdims, mwSize ndims);
^
/Applications/MATLAB_R2019a.app/extern/include/matrix.h:248:25: note: expanded from macro 'mxSetDimensions'
#define mxSetDimensions mxSetDimensions_730
                        ^
/Users/<me>/Library/Application Support/MathWorks/MATLAB Add-Ons/Collections/pdollar_toolbox/pdollar-toolbox-e873326/channels/private/gradientMex.cpp:339:50: error: assigning to 'const int *' from incompatible type 'const mwSize *' (aka 'const unsigned long *')
  nDims = mxGetNumberOfDimensions(pr[0]); dims = mxGetDimensions(pr[0]);
                                                 ^~~~~~~~~~~~~~~~~~~~~~
/Applications/MATLAB_R2019a.app/extern/include/matrix.h:244:25: note: expanded from macro 'mxGetDimensions'
#define mxGetDimensions mxGetDimensions_730
> Error using forestInds
Mismatch between data types.

> Error in adaBoostApply_otf_trans (line 43)
  ids = forestInds(X,model.thrs(:,i),model.fids(:,i),model.child(:,i),nt);

I dont know what is happening and how to solve this.
Do you have any solution? Thanks!
Trying to use this library with this circulant tracker code (http://www.robots.ox.ac.uk/~joao/circulant/) but anytime I try to run 'run_tracker' I get an error that says 'Undefined function 'gradientMex' for input arguments of type 'single'.' Can anyone help me?

I'm running MATLABR2017a on a mac running Sierra.

Thanks
Hi :) 
please help me to use acfTest function. i didnt find an example to understand how inputs should be.
i dont know the structure of ground truth directory...



If using python, is there a corresponding versionï¼Ÿ
When I perform the test, how do I modify the parameters to reach 16.9% of MR, or do I need to modify some parameter training before testing?
thanks for your work.

but I am quite confused why your toolbox output just  single `*det.txt` as detection result for Caltech dataset and your evaluation code in Code3 needs much `set*/v*.txt` to draw ROCs ?

I find such conflict very hard to solve. Is there any details I have missed? Is there exist specific line of code to be set to solve it ?
