I had an issue today with macros in Binding.scala (see https://github.com/ThoughtWorksInc/Binding.scala/issues/82)

> have a look at https://github.com/rparree/binding.scala-issue82
>Open playfield/SampleApp.scala
> Uncomment the line and try to do a fastOpsJS. With the line commented it works for me, with the line uncommented it breaks

Is this behaviour known?


Hello,

I was trying to follow the first step of https://docs.scala-lang.org/overviews/macros/paradise.html but with scala 2.12.3. However, it does not seem to behave as on the linked page (I do not see the macroparadise in the list of phases). Is this expected?

```
scala-2.12.3\bin>scalac -Xplugin:paradise_2.12.3-2.1.0.jar -Xshow-phases
    phase name  id  description
    ----------  --  -----------
        parser   1  parse source into ASTs, perform simple desugaring
         namer   2  resolve names, attach symbols to named trees
packageobjects   3  load package objects
         typer   4  the meat and potatoes: type the trees
        patmat   5  translate match expressions
superaccessors   6  add super accessors in traits and nested classes
    extmethods   7  add extension methods for inline classes
       pickler   8  serialize symbol tables
     refchecks   9  reference/override checking, translate nested objects
       uncurry  10  uncurry, translate function values to anonymous classes
        fields  11  synthesize accessors and fields, add bitmaps for lazy vals
     tailcalls  12  replace tail calls by jumps
    specialize  13  @specialized-driven class and method specialization
 explicitouter  14  this refs to outer pointers
       erasure  15  erase types, add interfaces for traits
   posterasure  16  clean up erased inline classes
    lambdalift  17  move nested functions to top level
  constructors  18  move field definitions into constructors
       flatten  19  eliminate inner classes
         mixin  20  mixin composition
       cleanup  21  platform-specific cleanups, generate reflective calls
    delambdafy  22  remove lambdas
           jvm  23  generate JVM bytecode
      terminal  24  the last phase during a compilation run
```
I have a macro annotation with paradise, which typechecks an annotated `ValDef`. It compiles in scala `2.11.11`, but gives an `illegal cyclic reference` error in `2.12.2`. I am not sure whether this a scala bug or because of paradise. A short example:

```scala
import scala.reflect.macros.whitebox.Context
import scala.language.experimental.macros
import scala.annotation.{StaticAnnotation, compileTimeOnly}

object Macro {
  def impl(c: Context)(annottees: c.Expr[Any]*): c.Expr[Any] = {
    import c.universe._

    annottees.map(_.tree) match {
      case (valDef: ValDef) :: _ =>

        //this works in scala 2.11.11 and 2.12.2
        c.typecheck(valDef, withMacrosDisabled = true)

        //this works in scala 2.11.11, but not in 2.12.2
        val unmodValDef = ValDef(Modifiers(), valDef.name, valDef.tpt, valDef.rhs)
        c.typecheck(unmodValDef, withMacrosDisabled = true)

        annottees.head
      case _ => c.abort(c.enclosingPosition, "unsupported annotation")
    }
  }
}

@compileTimeOnly("only for compile time expansion")
class example extends StaticAnnotation {
  def macroTransform(annottees: Any*): Any = macro Macro.impl
}
```

Using this annotation on a `val`:
```scala
// using a trait instead of a class compiles in 2.12.2
class Wrap {
  @example val x: Int = 1
}
```

In `2.12.2`, this leads to an `illegal cyclic reference` error:
```
[error] [0] /scala/ExampleSpec.scala:7: illegal cyclic reference involving class Wrap
```

This is the failing code:
```scala
val unmodValDef = ValDef(Modifiers(), valDef.name, valDef.tpt, valDef.rhs)
//this works in scala 2.11.11, but not in 2.12.2
c.typecheck(unmodValDef, withMacrosDisabled = true)
```

[An example project with repro](https://github.com/cornerman/delegert/tree/cyclic-reference-2.12).
..because it depends on the scala-repl, which isn't by default in the runner script.

```
error: java.lang.NoClassDefFoundError: scala/tools/nsc/interpreter/ReplReporter
	at org.scalamacros.paradise.reflect.ReplIntegration.tellReplAboutExpansion(ReplIntegration.scala:21)
	at org.scalamacros.paradise.reflect.ReplIntegration.tellReplAboutExpansion$(ReplIntegration.scala:20)
	at org.scalamacros.paradise.Plugin.tellReplAboutExpansion(Plugin.scala:8)
	at org.scalamacros.paradise.typechecker.Namers$Namer$$anon$2.maybeExpand(Namers.scala:385)
	at org.scalamacros.paradise.typechecker.Namers$Namer$MaybeExpandeeCompleter.completeImpl(Namers.scala:333)
	at org.scalamacros.paradise.typechecker.Namers$Namer$MaybeExpandeeCompleter.complete(Namers.scala:323)
	at org.scalamacros.paradise.typechecker.Namers$Namer$RichType.completeOnlyExpansions(Namers.scala:351)
	at org.scalamacros.paradise.typechecker.Namers$Namer$MaybeExpandeeCompleter.load(Namers.scala:340)
	at scala.reflect.internal.Symbols$Symbol.exists(Symbols.scala:1086)
	at scala.tools.nsc.typechecker.Typers$Typer.reallyExists(Typers.scala:508)
	at scala.tools.nsc.typechecker.Typers$Typer.qualifies$1(Typers.scala:4961)
	at scala.tools.nsc.typechecker.Typers$Typer.$anonfun$typed1$55(Typers.scala:4987)
	at scala.tools.nsc.typechecker.Typers$Typer.$anonfun$typed1$55$adapted(Typers.scala:4987)
	at scala.tools.nsc.typechecker.Contexts$Context.$anonfun$lookupSymbol$3(Contexts.scala:1043)
	at scala.tools.nsc.typechecker.Contexts$Context.$anonfun$lookupSymbol$3$adapted(Contexts.scala:1043)
	at scala.collection.Iterator$$anon$12.hasNext(Iterator.scala:502)
```
With Scala 2.12 and Macro Paradise 2.1.0, the following snippet:
```scala
package hmmm

final class anyAnnot extends scala.annotation.StaticAnnotation

object Hmmm {
  @anyAnnot class X
  val X = 123

  class Y
  val Y = 123
}
```
results in this compilation error:
```
[error] X is already defined as (compiler-generated) case class companion object X
[error]   val X = 123
[error]       ^
```

This issue originally raised as https://github.com/scala-js/scala-js/issues/2806.
I am seeing a lot exception from the presentation compiler in the Scala IDE that look like the one below. It happens across many classes, and as you can see, it often fails to complete standard library classes. I can't tell if this is a problem in the paradise plugin or in the presentation compiler (or simply the interaction between the two). It sounds like the Scala IDE aren't planning on supporting paradise (https://groups.google.com/forum/#!topic/scala-ide-user/zpfTOh3CUqA), so I thought I'd file an issue here. Hopefully this is a simple fix!

scala.reflect.internal.FatalError: no progress in completing object IndexedSeq: <?>
    at scala.reflect.internal.Reporting$class.abort(Reporting.scala:59)
    at scala.reflect.internal.SymbolTable.abort(SymbolTable.scala:16)
    at scala.reflect.internal.Symbols$Symbol.info(Symbols.scala:1522)
    at scala.reflect.internal.Symbols$Symbol.initialize(Symbols.scala:1659)
    at org.scalamacros.paradise.typechecker.Namers$Namer$class.patchedCompanionSymbolOf(Namers.scala:586)
    at org.scalamacros.paradise.typechecker.Namers$$anon$3.patchedCompanionSymbolOf(Namers.scala:13)
    at org.scalamacros.paradise.typechecker.Namers$Namer$class.finishSymbol(Namers.scala:192)
    at org.scalamacros.paradise.typechecker.Namers$$anon$3.finishSymbol(Namers.scala:13)
    at org.scalamacros.paradise.typechecker.Namers$Namer$class.dispatch$1(Namers.scala:34)
    at org.scalamacros.paradise.typechecker.Namers$Namer$class.enterSym(Namers.scala:40)
    at org.scalamacros.paradise.typechecker.Namers$$anon$3.enterSym(Namers.scala:13)
    at org.scalamacros.paradise.typechecker.AnalyzerPlugins$MacroPlugin$.pluginsEnterSym(AnalyzerPlugins.scala:36)
    at scala.tools.nsc.typechecker.AnalyzerPlugins$$anon$13.custom(AnalyzerPlugins.scala:429)
    at scala.tools.nsc.typechecker.AnalyzerPlugins$$anonfun$2.apply(AnalyzerPlugins.scala:371)
    at scala.tools.nsc.typechecker.AnalyzerPlugins$$anonfun$2.apply(AnalyzerPlugins.scala:371)
    at scala.collection.immutable.List.map(List.scala:273)
    at scala.tools.nsc.typechecker.AnalyzerPlugins$class.invoke(AnalyzerPlugins.scala:371)
    at scala.tools.nsc.typechecker.AnalyzerPlugins$class.pluginsEnterSym(AnalyzerPlugins.scala:423)
    at org.scalaide.core.internal.compiler.ScalaPresentationCompiler$$anon$1.pluginsEnterSym(ScalaPresentationCompiler.scala:77)
    at scala.tools.nsc.typechecker.Namers$Namer.enterSym(Namers.scala:275)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$enterSyms$1.apply(Namers.scala:501)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$enterSyms$1.apply(Namers.scala:500)
    at scala.collection.LinearSeqOptimized$class.foldLeft(LinearSeqOptimized.scala:124)
    at scala.collection.immutable.List.foldLeft(List.scala:84)
    at scala.tools.nsc.typechecker.Namers$Namer.enterSyms(Namers.scala:500)
    at scala.tools.nsc.typechecker.Namers$Namer.templateSig(Namers.scala:926)
    at scala.tools.nsc.typechecker.Namers$Namer.moduleSig(Namers.scala:990)
    at scala.tools.nsc.typechecker.Namers$Namer.getSig$1(Namers.scala:1527)
    at scala.tools.nsc.typechecker.Namers$Namer.typeSig(Namers.scala:1542)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply$mcV$sp(Namers.scala:782)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer.scala$tools$nsc$typechecker$Namers$Namer$$logAndValidate(Namers.scala:1569)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:773)
    at scala.tools.nsc.typechecker.Namers$$anon$1.completeImpl(Namers.scala:1685)
    at scala.tools.nsc.typechecker.Namers$LockingTypeCompleter$class.complete(Namers.scala:1693)
    at scala.tools.nsc.typechecker.Namers$$anon$1.complete(Namers.scala:1683)
    at scala.reflect.internal.Symbols$Symbol.info(Symbols.scala:1514)
    at scala.reflect.internal.Symbols$Symbol.tpe_$times(Symbols.scala:1478)
    at scala.reflect.internal.Symbols$Symbol.tpe(Symbols.scala:1443)
    at scala.reflect.internal.Symbols$Symbol.hasVolatileType(Symbols.scala:910)
    at scala.reflect.internal.tpe.FindMembers$FindMember.shortCircuit(FindMembers.scala:232)
    at scala.reflect.internal.tpe.FindMembers$FindMemberBase.walkBaseClasses(FindMembers.scala:97)
    at scala.reflect.internal.tpe.FindMembers$FindMemberBase.searchConcreteThenDeferred(FindMembers.scala:56)
    at scala.reflect.internal.tpe.FindMembers$FindMemberBase.apply(FindMembers.scala:48)
    at scala.reflect.internal.Types$Type.scala$reflect$internal$Types$Type$$findMemberInternal$1(Types.scala:1014)
    at scala.reflect.internal.Types$Type.findMember(Types.scala:1016)
    at scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$.adaptToNewRun(TypeMaps.scala:1091)
    at scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$.apply(TypeMaps.scala:1133)
    at scala.reflect.internal.tpe.TypeMaps$adaptToNewRunMap$.apply(TypeMaps.scala:1168)
    at scala.reflect.internal.Symbols$Symbol.adaptInfos(Symbols.scala:1642)
    at scala.reflect.internal.Symbols$Symbol.rawInfo(Symbols.scala:1594)
    at scala.tools.nsc.typechecker.Typers$Typer.isStale(Typers.scala:495)
    at scala.tools.nsc.typechecker.Typers$Typer.reallyExists(Typers.scala:487)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$qualifies$1(Typers.scala:4843)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$108.apply(Typers.scala:4869)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$108.apply(Typers.scala:4869)
    at scala.reflect.internal.Symbols$Symbol.filter(Symbols.scala:1942)
    at scala.tools.nsc.typechecker.Contexts$Context.lookupImport$1(Contexts.scala:1114)
    at scala.tools.nsc.typechecker.Contexts$Context.lookupSymbol(Contexts.scala:1135)
    at scala.tools.nsc.typechecker.Typers$Typer.typedIdent$2(Typers.scala:4869)
    at scala.tools.nsc.typechecker.Typers$Typer.typedIdentOrWildcard$1(Typers.scala:4908)
    at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5340)
    at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
    at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
    at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$99.apply(Typers.scala:4525)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$99.apply(Typers.scala:4525)
    at scala.tools.nsc.typechecker.Typers$Typer.silent(Typers.scala:680)
    at scala.tools.nsc.typechecker.Typers$Typer.normalTypedApply$1(Typers.scala:4524)
    at scala.tools.nsc.typechecker.Typers$Typer.typedApply$1(Typers.scala:4580)
    at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5343)
    at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
    at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
    at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5463)
    at scala.tools.nsc.typechecker.Typers$Typer.computeType(Typers.scala:5554)
    at scala.tools.nsc.typechecker.Namers$Namer.assignTypeToTree(Namers.scala:880)
    at scala.tools.nsc.typechecker.Namers$Namer.valDefSig(Namers.scala:1382)
    at scala.tools.nsc.typechecker.Namers$Namer.getSig$1(Namers.scala:1533)
    at scala.tools.nsc.typechecker.Namers$Namer.typeSig(Namers.scala:1542)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply$mcV$sp(Namers.scala:782)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer.scala$tools$nsc$typechecker$Namers$Namer$$logAndValidate(Namers.scala:1569)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:773)
    at scala.tools.nsc.typechecker.Namers$$anon$1.completeImpl(Namers.scala:1685)
    at scala.tools.nsc.typechecker.Namers$LockingTypeCompleter$class.complete(Namers.scala:1693)
    at scala.tools.nsc.typechecker.Namers$$anon$1.complete(Namers.scala:1683)
    at scala.reflect.internal.Symbols$Symbol.info(Symbols.scala:1514)
    at scala.reflect.internal.Symbols$Symbol.initialize(Symbols.scala:1659)
    at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5008)
    at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
    at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
    at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
    at scala.collection.immutable.List.loop$1(List.scala:173)
    at scala.collection.immutable.List.mapConserve(List.scala:189)
    at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
    at scala.tools.nsc.typechecker.Typers$Typer.typedBlock(Typers.scala:2381)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedOutsidePatternMode$1$1.apply(Typers.scala:5318)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$typedOutsidePatternMode$1$1.apply(Typers.scala:5318)
    at scala.tools.nsc.typechecker.Typers$Typer.typedOutsidePatternMode$1(Typers.scala:5317)
    at scala.tools.nsc.typechecker.Typers$Typer.typedInAnyMode$1(Typers.scala:5353)
    at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5360)
    at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
    at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5463)
    at scala.tools.nsc.typechecker.Typers$Typer.computeType(Typers.scala:5554)
    at scala.tools.nsc.typechecker.Namers$Namer.assignTypeToTree(Namers.scala:880)
    at scala.tools.nsc.typechecker.Namers$Namer.methodSig(Namers.scala:1214)
    at scala.tools.nsc.typechecker.Namers$Namer.getSig$1(Namers.scala:1530)
    at scala.tools.nsc.typechecker.Namers$Namer.typeSig(Namers.scala:1542)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply$mcV$sp(Namers.scala:782)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1$$anonfun$apply$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer.scala$tools$nsc$typechecker$Namers$Namer$$logAndValidate(Namers.scala:1569)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:781)
    at scala.tools.nsc.typechecker.Namers$Namer$$anonfun$monoTypeCompleter$1.apply(Namers.scala:773)
    at scala.tools.nsc.typechecker.Namers$$anon$1.completeImpl(Namers.scala:1685)
    at scala.tools.nsc.typechecker.Namers$LockingTypeCompleter$class.complete(Namers.scala:1693)
    at scala.tools.nsc.typechecker.Namers$$anon$1.complete(Namers.scala:1683)
    at scala.reflect.internal.Symbols$Symbol.info(Symbols.scala:1514)
    at scala.reflect.internal.Symbols$Symbol.initialize(Symbols.scala:1659)
    at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5008)
    at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
    at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
    at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
    at scala.collection.immutable.List.loop$1(List.scala:173)
    at scala.collection.immutable.List.mapConserve(List.scala:189)
    at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
    at scala.tools.nsc.typechecker.Typers$Typer.typedTemplate(Typers.scala:1921)
    at scala.tools.nsc.typechecker.Typers$Typer.typedModuleDef(Typers.scala:1808)
    at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5310)
    at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
    at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
    at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
    at scala.tools.nsc.typechecker.Typers$Typer.typedByValueExpr(Typers.scala:5452)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedStat$1(Typers.scala:3047)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
    at scala.tools.nsc.typechecker.Typers$Typer$$anonfun$65.apply(Typers.scala:3151)
    at scala.collection.immutable.List.loop$1(List.scala:173)
    at scala.collection.immutable.List.mapConserve(List.scala:189)
    at scala.tools.nsc.typechecker.Typers$Typer.typedStats(Typers.scala:3151)
    at scala.tools.nsc.typechecker.Typers$Typer.typedPackageDef$1(Typers.scala:5015)
    at scala.tools.nsc.typechecker.Typers$Typer.typedMemberDef$1(Typers.scala:5312)
    at scala.tools.nsc.typechecker.Typers$Typer.typed1(Typers.scala:5359)
    at scala.tools.nsc.typechecker.Typers$Typer.runTyper$1(Typers.scala:5396)
    at scala.tools.nsc.typechecker.Typers$Typer.scala$tools$nsc$typechecker$Typers$Typer$$typedInternal(Typers.scala:5423)
    at scala.tools.nsc.typechecker.Typers$Typer.body$2(Typers.scala:5370)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5374)
    at scala.tools.nsc.typechecker.Typers$Typer.typed(Typers.scala:5448)
    at scala.tools.nsc.typechecker.Analyzer$typerFactory$$anon$3.apply(Analyzer.scala:102)
    at scala.tools.nsc.Global$GlobalPhase$$anonfun$applyPhase$1.apply$mcV$sp(Global.scala:440)
    at scala.tools.nsc.Global$GlobalPhase.withCurrentUnit(Global.scala:431)
    at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:440)
    at scala.tools.nsc.interactive.Global$TyperRun$$anonfun$applyPhase$1.apply(Global.scala:1338)
    at scala.tools.nsc.interactive.Global$TyperRun$$anonfun$applyPhase$1.apply(Global.scala:1338)
    at scala.reflect.internal.SymbolTable.enteringPhase(SymbolTable.scala:235)
    at scala.tools.nsc.interactive.Global$TyperRun.applyPhase(Global.scala:1338)
    at scala.tools.nsc.interactive.Global$TyperRun.typeCheck(Global.scala:1331)
    at scala.tools.nsc.interactive.Global.typeCheck(Global.scala:670)
    at scala.tools.nsc.interactive.Global.typedTreeAt(Global.scala:819)
    at scala.tools.nsc.interactive.Global$$anonfun$getTypedTreeAt$1.apply(Global.scala:842)
    at scala.tools.nsc.interactive.Global$$anonfun$getTypedTreeAt$1.apply(Global.scala:842)
    at scala.tools.nsc.interactive.Global$$anonfun$respond$1.apply(Global.scala:701)
    at scala.tools.nsc.interactive.Global$$anonfun$respond$1.apply(Global.scala:701)
    at scala.tools.nsc.interactive.Global.respondGradually(Global.scala:708)
    at scala.tools.nsc.interactive.Global.respond(Global.scala:701)
    at scala.tools.nsc.interactive.Global.getTypedTreeAt(Global.scala:842)
    at scala.tools.nsc.interactive.CompilerControl$AskTypeAtItem.apply$mcV$sp(CompilerControl.scala:333)
    at scala.tools.nsc.interactive.Global$$anonfun$pollForWork$1.apply$mcV$sp(Global.scala:506)
    at scala.util.control.Breaks.breakable(Breaks.scala:38)
    at scala.tools.nsc.interactive.Global.pollForWork(Global.scala:431)
    at scala.tools.nsc.interactive.Global.checkForMoreWork(Global.scala:520)
    at scala.tools.nsc.interactive.Global.signalParseProgress(Global.scala:331)
    at scala.tools.nsc.ast.parser.Parsers$Parser.funDefRest(Parsers.scala:2670)
    at scala.tools.nsc.ast.parser.Parsers$Parser.funDefOrDcl(Parsers.scala:2627)
    at scala.tools.nsc.ast.parser.Parsers$Parser.defOrDcl(Parsers.scala:2512)
    at scala.tools.nsc.ast.parser.Parsers$Parser.nonLocalDefOrDcl(Parsers.scala:2524)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$templateStat$1$$anonfun$applyOrElse$3.apply(Parsers.scala:3087)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$templateStat$1$$anonfun$applyOrElse$3.apply(Parsers.scala:3087)
    at scala.tools.nsc.doc.ScaladocSyntaxAnalyzer$ScaladocUnitParser.joinComment(ScaladocAnalyzer.scala:259)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$templateStat$1.applyOrElse(Parsers.scala:3087)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$templateStat$1.applyOrElse(Parsers.scala:3082)
    at scala.tools.nsc.ast.parser.Parsers$Parser.statSeq(Parsers.scala:3014)
    at scala.tools.nsc.ast.parser.Parsers$Parser.templateStats(Parsers.scala:3081)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$templateStatSeq$1.apply(Parsers.scala:3068)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$templateStatSeq$1.apply(Parsers.scala:3045)
    at scala.tools.nsc.ast.parser.Parsers$Parser.checkNoEscapingPlaceholders(Parsers.scala:462)
    at scala.tools.nsc.ast.parser.Parsers$Parser.templateStatSeq(Parsers.scala:3045)
    at scala.tools.nsc.ast.parser.Parsers$Parser.templateBody(Parsers.scala:2974)
    at scala.tools.nsc.ast.parser.Parsers$Parser.templateBodyOpt(Parsers.scala:2981)
    at scala.tools.nsc.ast.parser.Parsers$Parser.templateOpt(Parsers.scala:2945)
    at scala.tools.nsc.ast.parser.Parsers$Parser.objectDef(Parsers.scala:2830)
    at scala.tools.nsc.ast.parser.Parsers$Parser.tmplDef(Parsers.scala:2766)
    at scala.tools.nsc.ast.parser.Parsers$Parser.topLevelTmplDef(Parsers.scala:2747)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$topStat$1$$anonfun$applyOrElse$2.apply(Parsers.scala:3037)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$topStat$1$$anonfun$applyOrElse$2.apply(Parsers.scala:3037)
    at scala.tools.nsc.doc.ScaladocSyntaxAnalyzer$ScaladocUnitParser.joinComment(ScaladocAnalyzer.scala:259)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$topStat$1.applyOrElse(Parsers.scala:3037)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$topStat$1.applyOrElse(Parsers.scala:3030)
    at scala.tools.nsc.ast.parser.Parsers$Parser.statSeq(Parsers.scala:3014)
    at scala.tools.nsc.ast.parser.Parsers$Parser.topStatSeq(Parsers.scala:3029)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$compilationUnit$1.topstats$1(Parsers.scala:3227)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$compilationUnit$1.topstats$1(Parsers.scala:3219)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$compilationUnit$1.apply(Parsers.scala:3233)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$compilationUnit$1.apply(Parsers.scala:3195)
    at scala.tools.nsc.ast.parser.Parsers$Parser.checkNoEscapingPlaceholders(Parsers.scala:462)
    at scala.tools.nsc.ast.parser.Parsers$Parser.compilationUnit(Parsers.scala:3195)
    at scala.tools.nsc.ast.parser.Parsers$SourceFileParser$$anonfun$parseStartRule$1.apply(Parsers.scala:146)
    at scala.tools.nsc.ast.parser.Parsers$SourceFileParser$$anonfun$parseStartRule$1.apply(Parsers.scala:146)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$parse$1.apply(Parsers.scala:352)
    at scala.tools.nsc.ast.parser.Parsers$Parser$$anonfun$parse$1.apply(Parsers.scala:352)
    at scala.tools.nsc.ast.parser.Parsers$Parser.parseRule(Parsers.scala:345)
    at scala.tools.nsc.ast.parser.Parsers$Parser.parse(Parsers.scala:352)
    at scala.tools.nsc.ast.parser.Parsers$UnitParser.smartParse(Parsers.scala:241)
    at scala.tools.nsc.ast.parser.SyntaxAnalyzer.scala$tools$nsc$ast$parser$SyntaxAnalyzer$$initialUnitBody(SyntaxAnalyzer.scala:87)
    at scala.tools.nsc.ast.parser.SyntaxAnalyzer$ParserPhase.apply(SyntaxAnalyzer.scala:99)
    at scala.tools.nsc.Global$GlobalPhase$$anonfun$applyPhase$1.apply$mcV$sp(Global.scala:440)
    at scala.tools.nsc.Global$GlobalPhase.withCurrentUnit(Global.scala:431)
    at scala.tools.nsc.Global$GlobalPhase.applyPhase(Global.scala:440)
    at scala.tools.nsc.Global$Run$$anonfun$compileLate$2$$anonfun$apply$1.apply(Global.scala:1609)
    at scala.tools.nsc.Global$Run$$anonfun$compileLate$2$$anonfun$apply$1.apply(Global.scala:1609)
    at scala.reflect.internal.SymbolTable.enteringPhase(SymbolTable.scala:235)
    at scala.tools.nsc.Global$Run$$anonfun$compileLate$2.apply(Global.scala:1609)
    at scala.tools.nsc.Global$Run$$anonfun$compileLate$2.apply(Global.scala:1608)
    at scala.collection.Iterator$class.foreach(Iterator.scala:893)
    at scala.collection.AbstractIterator.foreach(Iterator.scala:1336)
    at scala.tools.nsc.Global$Run.compileLate(Global.scala:1608)
    at scala.tools.nsc.interactive.Global.scala$tools$nsc$interactive$Global$$parseAndEnter(Global.scala:658)
    at scala.tools.nsc.interactive.Global.backgroundCompile(Global.scala:564)
    at scala.tools.nsc.interactive.PresentationCompilerThread.run(PresentationCompilerThread.scala:25)

Annotations cause equalsStructure to return false 

``` scala
q"@enum object Test" equalsStructure(q"@enum object Test")
res1: Boolean = false
```

Whereas this works as expected. 

``` scala
q"object Test" equalsStructure(q"object Test")
res1: Boolean = true
```

Also while loops seem to have the same issue, raised in a SO question [here](http://stackoverflow.com/questions/34674703/while-loops-generated-via-scala-macros-are-not-equal)

I have a macro annotation with parameters: `class AnnotationType(...) extends StaticAnnotation`. Since `c.prefix.tree` in the macro implementation is the tree for the annotation constructor, I've tried
`c.eval(c.Expr[AnnotationType](c.prefix.tree))` and `c.eval(c.prefix.asInstanceOf[c.Expr[AnnotationType]]`.
The compiler complains that it can't expand `AnnotationType` even though it isn't used as an annotation and shouldn't be expanded. If this worked, it would simplify http://stackoverflow.com/questions/32631372/getting-parameters-from-scala-macro-annotation and http://stackoverflow.com/questions/37891855/macro-annotation-with-default-arguments.

The issue is described in more detail at https://github.com/jeffrey-aguilera/bug-scalamacros 

This project demonstrates a Typers.scala assertion error with a quasiquote generated inner class.
- sbt compile --- compiles macro
- sbt test:compile --- attempts compilation of object annotated with macro

The problem has been reproduced for Scala 2.11.7 and 2.12.0-M3 generating 1.7 and 1.8 bytecode. For Scala 2.11.7, the assertion fails on Typers.scala:1759; and for Scala 2.12.0-M3, it fails on Typers.scala:1748.

The essence of this bug is the instantiation of an anonymous inner class. E.g., in the context of

```
  trait Trait { def something: Int }
```

an attempt to generate

```
  new Trait {
    override def something: Int = 3
  }
```

with quasiquotes or `ClassDef` will fail.

The corresponding hand-crafted code compiles fine.

Our initial implementation of macro annotations includes YOLO-support for c.typecheck: we do our best effort to call the typechecker so that it doesn't crash, occasionally losing precision because the typechecker resists our efforts.

When I released 2.0.0-SNAPSHOT with this limitation, my hope was that our experience with c.typecheck will let us understand it better and come up with a strategy that is consistent, reasonable and implementable in scalac. Unfortunately, it looks that my hope was ungrounded, because it's been two years and nothing satisfying has come up.

Related issues are:
- https://github.com/scalamacros/paradise/issues/14
- https://github.com/scalamacros/paradise/issues/49
- https://github.com/scalamacros/paradise/issues/50
- https://github.com/scalamacros/paradise/issues/57
- https://github.com/scalamacros/paradise/issues/67
