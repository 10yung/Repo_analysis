hi
I want to run a query after another query.

`
def on_chat_message(msg):
    content_type, chat_type, chat_id = telepot.glance(msg)
    keyboard = InlineKeyboardMarkup(inline_keyboard=[
                   [InlineKeyboardButton(text='ISO', callback_data='iso')],
                   [InlineKeyboardButton(text='MAKRO', callback_data='makro')],   
               ])
    bot.sendMessage(chat_id, 'please select one', reply_markup=keyboard)


def  menu(msg):
    query_id, from_id, query_data = telepot.glance(msg, flavor='callback_query')

    if  query_data=='makro':
         keyboard = InlineKeyboardMarkup(inline_keyboard=[
                   [InlineKeyboardButton(text='number 1', callback_data='1')],
                   [InlineKeyboardButton(text='number 2', callback_data='2')],   
               ])
        bot.sendMessage(from_id,'please select one, reply_markup=keyboard)
        
        
    if  query_data=='iso':
             keyboard = InlineKeyboardMarkup(inline_keyboard=[
                   [InlineKeyboardButton(text='number 3', callback_data='3')],
                   [InlineKeyboardButton(text='number 4', callback_data='4')],   
               ])
        bot.sendMessage(from_id,'please select one, reply_markup=keyboard)


bot = telepot.Bot(TOKEN)
MessageLoop(bot, {'chat': on_chat_message,
                                 'callback_query': menu}).run_as_thread()


`




And according to what the user chooses in the second query, one number will be displayed.

I wrote the code above and I'll go to the second menu stage.
But after that, I do not know what to do, so the program proceeds according to the user's choice in the second menu
Hi, I'm getting errors when trying to send a message.  I'm using Raspbian Stretch on a Pi Zero W.  It's working fine on a Pi running Raspbian Jessie.

`
Traceback (most recent call last):
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/connectionpool.py", line 603, in urlopen
    chunked=chunked)
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/connectionpool.py", line 344, in _make_request
    self._validate_conn(conn)
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/connectionpool.py", line 843, in _validate_conn
    conn.connect()
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/connection.py", line 350, in connect
    ssl_context=context)
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/util/ssl_.py", line 355, in ssl_wrap_socket
    return context.wrap_socket(sock, server_hostname=server_hostname)
  File "/usr/lib/python3.5/ssl.py", line 385, in wrap_socket
    _context=self)
  File "/usr/lib/python3.5/ssl.py", line 760, in __init__
    self.do_handshake()
  File "/usr/lib/python3.5/ssl.py", line 996, in do_handshake
    self._sslobj.do_handshake()
  File "/usr/lib/python3.5/ssl.py", line 641, in do_handshake
    self._sslobj.do_handshake()
ssl.SSLError: [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:720)

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "./send.py", line 15, in <module>
    send(str(sys.argv[1]))
  File "./send.py", line 13, in send
    bot.sendMessage(bot_chatID, msg)
  File "/home/simon/.local/lib/python3.5/site-packages/telepot/__init__.py", line 513, in sendMessage
    return self._api_request('sendMessage', _rectify(p))
  File "/home/simon/.local/lib/python3.5/site-packages/telepot/__init__.py", line 491, in _api_request
    return api.request((self._token, method, params, files), **kwargs)
  File "/home/simon/.local/lib/python3.5/site-packages/telepot/api.py", line 154, in request
    r = fn(*args, **kwargs)  # `fn` must be thread-safe
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/request.py", line 150, in request_encode_body
    return self.urlopen(method, url, **extra_kw)
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/poolmanager.py", line 326, in urlopen
    response = conn.urlopen(method, u.request_uri, **kw)
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    **response_kw)
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    **response_kw)
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/connectionpool.py", line 670, in urlopen
    **response_kw)
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/connectionpool.py", line 641, in urlopen
    _stacktrace=sys.exc_info()[2])
  File "/home/simon/.local/lib/python3.5/site-packages/urllib3/util/retry.py", line 399, in increment
    raise MaxRetryError(_pool, url, error or ResponseError(cause))
urllib3.exceptions.MaxRetryError: HTTPSConnectionPool(host='api.telegram.org', port=443): Max retries exceeded with url: /botxxxxxx:xxxxxxxxxxxxxxxxxxxxxxxx/sendMessage (Caused by SSLError(SSLError(1, '[SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:720)'),))`

I've tried sending a message from curl using the same system and it works fine:

`curl -X POST \
       -H 'Content-Type: application/json' \
       -d '{"chat_id": "xxxxxxxxxxx", "text": "Test", "disable_notification": true}' \
       https://api.telegram.org/botxxxxxxx:xxxxxxxxxxxxx/sendMessage`
I created a schedule that is sending some information to certain users (ids), but if another person interacts with the bot at the same time that the scheduled messages of the error are being sent and these messages are not sent.

Is it possible to create sessions by id or is there any other way to solve this?
Latest commit 3792fde  on May 26, 2018

Traceback (most recent call last):
  File "/home/pi/drone_bot1.py", line 3, in <module>
    import telepot
  File "/usr/lib/python3/dist-packages/thonny/backend.py", line 305, in _custom_import
    module = self._original_import(*args, **kw)
ImportError: No module named 'telepot'
I'm trying to send a message to user, who joined to a group, with my telegram bot. I add bot to the group and bot is admin in group. and I set the Group Privacy off. I get user with new_chat_member when user joined to group, but the message send to user infinitely. And the update which is for when a member join to group is pending. how I should answer the incoming update when a user join to telegram group?

if(isset($arrayMessage['message'])) {
        if (isset($arrayMessage['message']['new_chat_member'])) {
            $text= "hello";
            $url= "https://api.telegram.org/bot".$token."/sendMessage?chat_id=".$chat_id."&text=".$text;
            file_get_contents($url);
        }
}
I'm using laravel .

For a cleaner exit when tasks are cancelled
Hello.
I'm trying hard to delete all the messages sent by my bot into a chat.
I know that it is not possible to delete the messages sent by the user, so, i want at least delete all the messages sent by my bot.

so far to save a message id sent from my bot I use this code 
```
messages_ids.update({chat_id: lastMessage})
```
That store in a dictionary the chat ID and all the information about the last messages that the bot sent.

Then, I delete the last message whit this method:
``` 
bot.deleteMessage(telepot.message_identifier(messages_ids[chat_id]))
```

But obviously I can't delete the message sent to a user before I implemented this method.
So, to clear the old chats, can I delete in someway all the message sent by my bot?

Or maybe there is a way to get all the messages ids of messages already sent? In this way I'd do a for cycle.
But I cannot do a for cycle without the ids because I should check hundred thousand messages for chat and obviously it would be really slow and annoying.

Hopefully there is an easier solution, Thankyou.


Hello, I recently switched to the async version, and I'm trying to replicate the behavior I had before, which is the following.
the bot must be able to do two different things:
- Receive a msg and handle it, doing some stuff depending on the content
- Send some msg when some data is collected (by sensors)

This is the code in the standard (not async version) I used to run:
``` python
import telepot
from telepot.loop import MessageLoop
from multiprocessing.connection import Listener, Client
addr = ('localhost', 4000)
listener = Listener(addr)
telegram_id = "my ID"

def handle(msg):
    # do some processing and maybe sending a msg

bot = telepot.Bot(token)
MessageLoop(bot, handle).run_as_thread()
while True:
        conn = listener.accept()
        data = conn.recv()
        conn.close()
        # some processing on data
        bot.sendMessage(telegram_id, data)
```
I cannot replicate this behavior in the async version (I'm not very fond on async programming, actually)
I tried many thing, including the following. 
``` python
from multiprocessing.connection import Listener, Client
import asyncio
import telepot
import telepot.aio

addr = ('localhost', 4000)
listener = Listener(addr)
telegram_id = "myid"


async def get_data():
    print("Waiting for data")
    conn = listener.accept()
    data = conn.recv()
    conn.close()
    return data


async def internal_handle():
    while True:
        data = await asyncio.run(get_data())
        # process data
        await bot.sendMessage(telegram_id, data)

async def handle(msg):
    # same stuff as before

bot = telepot.aio.Bot("token")
loop = asyncio.get_event_loop()
loop.create_task(internal_handle())
loop.create_task(MessageLoop(bot, handle).run_forever())
loop.run_forever()

```
I thought this would run `internale_handle()` and the msg handler together, but it doesn't. Instead, it gets stuck waiting for data from the Listener.
Thank you for any suggestion!