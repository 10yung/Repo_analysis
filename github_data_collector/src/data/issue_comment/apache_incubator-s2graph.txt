- add TransactionUtil to support incremental job
As an initial PR, I've added swagger doc and UI support, and added API docs for the "admin" services for now; mutate and query services will come later.

How to test:

1. Build the project with `sbt package`.
2. Start the project in the target/apache-s2graph-0.2.1-SNAPSHOT-incubating-bin directory through `bin/start-s2graph.sh` command.
3. Visit the Swagger UI at http://localhost:8000/api-docs/.

4. Expand "/admin/createService" and click on "Try it out" button.
   Replace the body with the following and click on "Execute" button.

```
{
  "serviceName": "s2graph"
}
```

   Check if the result is 201 with a JSON output and the status is "ok".

5. "Try out" /admin/createLabel with body set to the following:

```
{
  "label": "user_article_liked",
  "srcServiceName": "s2graph",
  "srcColumnName": "user_id",
  "srcColumnType": "long",
  "tgtServiceName": "s2graph",
  "tgtColumnName": "article_id",
  "tgtColumnType": "string",
  "indices": [],
  "props": [],
  "serviceName": "s2graph"
}
```

   Check if the result is 201 with a JSON output and the status is "ok".

6. "Try out" /admin/createLabel with body set to the following:

```
{
  "label": "friends",
  "srcServiceName": "s2graph",
  "srcColumnName": "user_id",
  "srcColumnType": "long",
  "tgtServiceName": "s2graph",
  "tgtColumnName": "user_id",
  "tgtColumnType": "long",
  "indices": [
    {"name": "idx_affinity_timestamp", "propNames": ["affinity_score", "_timestamp"]}
  ],
  "props": [
    {"name": "affinity_score", "dataType": "float", "defaultValue": 0.0},
    {"name": "_timestamp", "dataType": "long", "defaultValue": 0},
    {"name": "is_hidden", "dataType": "boolean", "defaultValue": false},
    {"name": "is_blocked", "dataType": "boolean", "defaultValue": true},
    {"name": "error_code", "dataType": "integer", "defaultValue": 500}
  ],
  "serviceName": "s2graph",
  "consistencyLevel": "strong"
}
```

   Check if the result is 201 with a JSON output and the status is "ok".

7. "Try out" /admin/addIndex with body set to the following:

```
{
  "label": "friends",
  "indices": [
    {"name": "idx_3rd", "propNames": ["is_blocked", "_timestamp"]}
  ]
}
```

   Check if the result is 201 with a JSON output and the status is "ok".

8. "Try out" /admin/getLabel/{name} with name set to "friend".
   Check if the result is 200 with a JSON output.
I've added a configuration for curl example base url and let each rst source refer to the variable for interpolation.
As the variable is used in code block, I also had to replace `.. code:: bash` with `.. parsed-literal::`. `curl` command examples actually do not get much benefit from `.. code:: bash`, so I think `.. parsed-literal::` is good enough for the purpose.
And, I removed the sentence mentioning `script/test.sh` and `design/data_model` page reference because they don't exist and make logs errors.
Please review the changes and merge it if okay.
Thanks!
- add SchemaManager.
- add SerializeUtil/DeserializeUtil .
- refactor S2GraphSink/S2GraphSource to use SerializeUtil/DeserializeUtil.
JIRA:
[S2GRAPH-250]https://issues.apache.org/jira/browse/S2GRAPH-250
- [WIP]: adding datastore storage.
Unused variable refactoring.
JIRA:
  [S2GRAPH-171] https://issues.apache.org/jira/browse/S2GRAPH-171
Issue: https://issues.apache.org/jira/browse/S2GRAPH-107

This PR has really big changes, but those are mostly related to code styles. In this PR, I changed level of some rules in scalastyle from warning to error. Many projects raise error rather than warning when scalastyle checker fails. In near future, we are able to change warning rule to raise error by do refactoring codebase. (I will create another issue to do refactoring our codebase according to some published scala best practice and design pattern.)

Tools related to code style which we use:
- Scalafmt
- Scalastyle

- This PR add options for EvictionOption at root level.
