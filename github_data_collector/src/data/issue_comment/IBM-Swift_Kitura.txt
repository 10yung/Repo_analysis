## Context and Description
A description of the issue.
As a new user of Kitura, and in light of the news IBM is going to withdraw from Swift I'm thinking about switching to Vapor, as I am very concerned now about putting a lot of effort into building something on a potentially dead end platform.

Thoughts?

### Environment Details
Information about your OS, Swift version and Xcode version if on macOS.


### Steps to Reproduce
1) ...
2) ...
etc


### Expected vs. Actual Behaviour
- [ ] Expected to happen...
- [ ] Actually happened...

When I build my Kitura project without any updates 

```
.package(url: "https://github.com/IBM-Swift/Kitura.git", .upToNextMinor(from: "2.7.0"))
.package(url: "https://github.com/IBM-Swift/Kitura-StencilTemplateEngine", from: "1.11.1")
```

on my new Mac (macOS 10.15.1, Xcode 11.2.1 Swift 5.1), project builds and runs fine, but local path location does not work. Engine can not load any stencil template or serve static files.

When i trigger something like `try resp.render("index.stencil", context: ["title": "title"])` response is 
> The operation couldnâ€™t be completed. (KituraStencil.StencilTemplateEngineError error 1.)

Not any .css or .js files loaded in static html files rendered via `resp.send(html)` from static files directory.

I set breakpoint at  
`fileServer.serveFile(filePath, requestPath: requestPath,
                             queryString: queryString, response: response)`  
in sample project (*Kitura/StaticFileServer.swift*) and got  **filePath** equals to  
`/Users/username/Library/Developer/Xcode/DerivedData/Kitura-Sample-master-dpowtcfjwuvoqafwzhnollapcnid/SourcePackages/checkouts/Kitura/./public/test.html` which looks like an issue. Default path in StaticFileServer.init is "./public" and it leads to unexpected location under Kitura dir in *DerivedData/blablabla/checkouts*.

It looks like entire path location system broken when Kitura build under Swift 5.1 Xcode 11.2.x and macOS 10.15.x. 

I think [Kitura-StencilTemplateEngine issue 48](https://github.com/IBM-Swift/Kitura-StencilTemplateEngine/issues/48) have same issue. 

We need solution in short time. I have two project in production powered by Kitura which needs to be supported. 
Add a new codable route for POST with no object as input.

## Description
This allows to create a resource without arguments, like this:
```
router.post("/resource") { (respondWith: (Resource?, RequestError?) -> Void) in
  respondWith(resource, nil)
}
```

## Motivation and Context
It is not possible to use the POST verb without argument, making it weird to create a new resource from an endpoint that has no dependencies.

## How Has This Been Tested?
External testing done. I'm unsure about where to add the test if needed.

## Checklist:
- [X] If applicable, I have updated the documentation accordingly.
- [ ] If applicable, I have added tests to cover my changes.

Regenerate the Jazzy docs for #1481 and #1483.
## Context and Description
I noticed that the code coverage testing hasn't been updated in over a year. I thought I might go and write some of the tests needed, but the version that was last tested has significant differences from the current version of the code.

### Environment Details
Available to see at [this link](https://codecov.io/gh/IBM-Swift/Kitura)

### Steps to Reproduce
Available to see at [this link](https://codecov.io/gh/IBM-Swift/Kitura)

### Expected vs. Actual Behaviour
- [ ] Expected to see the current version tested
- [ ] The last update to the code coverage was over a year ago.
I want to develop an iOS application that hosts its own web server (https://myiphone.server/index.html) on an iPad or iPhone users can access from a PC or Mac or other phone. Is this possible with Kitura? What level of support does this have? And are there any documentation or examples I can get started with? Thank you
Curl 7.58 had a [bug](https://github.com/curl/curl/issues/2303) where it would call back twice with chunked encoding. This then causes the Kitura-net parser to be unable to read the body and throw an error. 

This was fixed in 7.59 however Ubuntu 18.04 includes 7.58 by default.

@wbittles raised a [bug report against Ubuntu](https://bugs.launchpad.net/ubuntu/+source/hdf5/+bug/1833198) and we hope they will update the curl version to fix this issue.

This was discovered due to the Kitura.io OAuth2 guide failing and tracked in [this issue](https://github.com/IBM-Swift/kitura.io/issues/374) however since this is a Kitura issue I felt it made more sense to be tracked here until it is resolved.
## Context and Description
Update the Kitura helm chart sample to include best practices for configuration, monitoring and deployment:
https://github.com/IBM/charts/tree/master/stable/ibm-swift-sample

## Context and Description
We want to use application level encryption. We couldn't find proper way to do it without disabling Kitura's some features.

### Similar Example - JWT

It might look similar to [JWT](https://github.com/IBM-Swift/Swift-JWT/blob/master/Sources/SwiftJWT/JWTDecoder.swift). But it is not suitable for this case. 
* Diffrences
	* Keys are created for each session.
	* Keys are kept in session.
* Accessing session in Body Decoder is not possible.

### Discussed Solutions 
1) TypeSafeMiddleware
	* TypeSafeMiddleware for Codable routes that created the structure you are interested in and use a dummy struct for the body.
	* Disadvantages :
        * It looks like I can not use same TypeSafeMiddleware for different models.
            * We have to create TypeSafeMiddleware for each Model or I have to decode models in Routes.
2) Raw Routes
	* Create a normal middleware for raw routes that attaches the decrypted body to the request UserInfo.
	* Disadvantages :
        * Unnecessary weight in Request.
        * I have to downcase(From any) objects or use json decoder in each Routes.



### Expected vs. Actual Behaviour
- [ ] In Middleware, I should able to write RouterRequest before it is processed by Route.
- [ ] There is no method for write.
- [x] In Middleware, I should able to write RouterResponse after it is processed by Route. - (WrittenDataFilter) [Example - Kitura Compression](https://github.com/IBM-Swift/Kitura-Compression/blob/master/Sources/KituraCompression/Compression.swift)

#### Example Request Body
```json
Encrypted Request :
{
    "status":10,
    "encryptedText":"asdwqe823weafcxzblo"
}
Decrypted Request :
{
    "UserId":123,
    "UserName":"Test"
}
```
## Context and Description
If a Kitura server crashes or hangs when deployed, how do we investigate and debug it?

We probably need a core file.
- Will it contain everything we need?
- Are there are any special requirements for how the app was compiled for it to be useful?
- Are there any other resources external to the core that need to be captured?
- What requirements are there on the deploy environment to ensure the core is a) generated and b) remains available for investigation eg. after a container restarts?

### Environment Details
Information about your OS, Swift version and Xcode version if on macOS.


### Steps to Reproduce
1) ...
2) ...
etc


### Expected vs. Actual Behaviour
- [ ] Expected to happen...
- [ ] Actually happened...
