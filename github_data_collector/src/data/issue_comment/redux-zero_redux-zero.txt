I am using React + Typescript + redux-zero. But I experienced some difficulties when trying to make async calls in actions. I think the error is because`Action` needs to return `Partial<State>` and it doesn't allow `Promise`:

> `export type Action<S> = (state: S, ...args: any[]) => Partial<S>;`

(https://github.com/redux-zero/redux-zero/blob/master/src/types/index.ts#L3)

In the following code, I am returning a `Promise<State>`:

```
const actions = (store: Store<GlobalState>) => ({    
    asyncGetUsers: (state: GlobalState) => {
        return client
            .get("/users")
            .then(payload => ({ users: payload }))
            .catch(error => ({ error }));
    }
});
```

That results in an error that says: 
```
Type '(state: GlobalState) => Promise<{ users: User[] }>' is not assignable to type 'Action<GlobalState>'.
Type 'Promise<{ users: User[] }>' has no properties in common with type 'Partial<GlobalState>'.
```

Let me know if my understanding is correct. If it indeed is because of `Action` doesn't support `Promise`, what do you suggest to do instead? Thank you.
Hi,

We are trying to use redux-zero + Preact through UMD. According to the documentation, we put below scripts into our index.html. However, the createStore function is not available as both of script below are trying to create attribute "redux-zero" to window. I'm thinking we probably miss out something here. Could anyone help provide the example of using redux-zero through UMD?

Thanks

<!-- the store -->
<script src="https://unpkg.com/redux-zero/dist/redux-zero.min.js"></script>
<!-- for preact -->
<script src="https://unpkg.com/redux-zero/preact/index.min.js"></script>

componentWillMount has been renamed

```
react-dom.development.js:12357 Warning: componentWillMount has been renamed, and is not recommended for use. See https://fb.me/react-unsafe-component-lifecycles for details.

* Move code with side effects to componentDidMount, and set initial state in the constructor.
* Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.

Please update the following components: Connect
```
I have some code that uses preact and redux via script tags. I'm trying to use redux-zero instead of redux, but I don't see any guidance on how to use the code this way. The provided examples with import etc. all throw errors.

This link explains how it works with preact:

 https://github.com/preactjs/preact/issues/484
It looks like mapToPops is required by 'connect' (from the React examples).

What if I have a component that needs actions, but doesn't need to read props?  What is the idiomatic 'empty' mapToProps?  is it mapToProps = (state) => (state);  ?
I was wondering if it's a good idea to add [redux-devtools options](https://github.com/zalmoxisus/redux-devtools-extension/blob/master/docs/API/Arguments.md) parameter here? 

https://github.com/redux-zero/redux-zero/blob/07639a4dfdd8aa9d6ff8f737d1086fb931cd7992/src/devtools/devtoolsMiddleware.ts#L134

I have a situation that I needed to load 2 stores in a page and somehow it would be better if I can rename the 2 stores appropriately.

I looks like if I try to dispatch an action from devtools it doesn't work...
Can you confirm that?
https://github.com/reactjs/react-redux/issues/141

The component returned by `connect` doesn't allow for refs ie `<Component ref='foobar' />`. React gives warning "Warning: Stateless function components cannot be given refs. Attempts to access this ref will fail."