如图, 虽然设置的是默认5分钟的上报间隔, 但数据库中2:10到2:35中间都没有上报, 2:55也没有上报.
![图片](https://user-images.githubusercontent.com/19394320/72677480-d25e5a80-3ad7-11ea-88e9-15e3c9b70ae5.png)
![图片](https://user-images.githubusercontent.com/19394320/72677514-236e4e80-3ad8-11ea-8f42-303379406316.png)  
请问上报时间除了配置里设置的insertInterval, 还由什么其他因素决定吗?






### What language are you using?
 
 
### What operating system (Linux, Ubuntu, …) and version?
 
 
### What runtime / compiler are you using (e.g. jdk version or version of gcc)
 
 
Make sure you include information that can help us debug (full error message, exception listing, stack trace, logs).


### What language are you using?
 c++和java
 
### What operating system (Linux, Ubuntu, …) and version?
 centos
 
对于tars结构体定义在解包时，c++与java中的bool型默认值，前者是true,后者却是false，
同时c++在序列化时默认值字段是不打包的，导致java中解包出来的bool型字段值错误，这是一个隐患，建议后续版本能统一。


```
# 一键执行👇
curl -s https://raw.githubusercontent.com/Jamlee/download/master/tars-build.sh | sudo sh
```

### 1. 内容概述
在docker中安装gcc等构建工具，用 docker in docker 的方式打包 tars 的docker部署文件。特点如下：

1. 使用 yum 安装的mysql进行编译，无需编译mysql，能够节省编译一点时间。mysql用容器的方式安装。
2. 傻瓜式一键操作，**无需先爬文档**即可快速体验 tars。
3. 脚本即文档，查看脚本了解整个编译过程


### 2. 系统准备

操作系统: ubuntu1604/1804, centos7(centos暂未测试）
Docker: 18 或者 19
 
### 3. 一键运行
将下面脚本存储为 build.sh, 然后执行

1.20191109第二次修改

 ```
# 修改docker配置
sudo cp /lib/systemd/system/docker.service /etc/systemd/system  \
   && sudo sed -i 's/\ -H\ fd:\/\// -H\ unix:\/\/\/var\/run\/docker.sock -H tcp:\/\/0.0.0.0\ /g' /etc/systemd/system/docker.service \
   && sudo systemctl daemon-reload && sudo service docker restart

# 写入dockerfile
cat <<EOF >Dockerfile
FROM centos:7.5.1804 as builder

ENV DOCKER_HOST="tcp://0.0.0.0:2375"
RUN curl -s -o /etc/yum.repos.d/CentOS-Base.repo http://mirrors.cloud.tencent.com/repo/centos7_base.repo
RUN sed  -i 's/enabled\=1/enabled\=0/g' /etc/yum/pluginconf.d/fastestmirror.conf \
   && sed  -i 's/enabled\=1/enabled\=0/g' /etc/yum/pluginconf.d/ovl.conf \
   && yum makecache
RUN yum -y install git
RUN mkdir -p /usr/local/tars/cpp/deploy && git clone https://github.com/TarsCloud/TarsWeb.git  /usr/local/tars/cpp/deploy/web
RUN mkdir -p /app && git clone https://github.com/TarsCloud/TarsFramework.git --recursive /app/Tars

RUN rpm --rebuilddb && yum -y install wget make gcc gcc-c++ cmake yasm glibc-devel flex bison ncurses-devel zlib-devel autoconf net-tools
RUN wget -i -c http://dev.mysql.com/get/mysql57-community-release-el7-10.noarch.rpm \
   && yum -y install mysql57-community-release-el7-10.noarch.rpm \
   && yum -y install  mysql-devel mysql-community-client
RUN yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
RUN yum install docker-ce-cli  -y
RUN mkdir /usr/local/mysql && ln -sf /lib64/mysql /usr/local/mysql/lib && ln -sf /usr/include/mysql  /usr/local/mysql/include

# compile tars
RUN cd /app/Tars/build && ./build.sh prepare && ./build.sh all && ./build.sh install
RUN cd /usr/local/tars/cpp/deploy \
  && echo 'RUN cd \${TARS_INSTALL}/web && . /root/.bashrc && npm --registry https://registry.npm.taobao.org install --quiet' >> Dockerfile \
  && sh docker.sh v1
EOF

# 开始构建
docker build --network host -t tar:build .
```
 
### 最终结果截图
 
![image](https://user-images.githubusercontent.com/5196641/68483270-33ff7e80-0276-11ea-86e1-6a08a46d80bd.png)

 最近更新的编译脚本很棒很方便耶！厉害了棒棒的tars 团队

启动编译出来的镜像：
```
# 时区需要配置正确
docker run -d -p3306:3306 -e MYSQL_ROOT_PASSWORD=456677 -v /etc/localtime:/etc/localtime:ro mysql:5.6

# 注意你的网卡是不是eth0, 像en3s0 需要把改成 -eINET=en3s0 
docker run -d --net=host -e MYSQL_HOST=192.168.33.10 -e MYSQL_ROOT_PASSWORD=456677  -v /etc/localtime:/etc/localtime:ro -eREBUILD=false -eINET=eth0 -eSLAVE=false -v/data/log/app_log:/usr/local/app/tars/app_log  -v/data/log/web_log:/usr/local/app/web/log  -v/data/patchs:/usr/local/app/patchs  tars-docker:v1 /root/tars-install/docker-init.sh
```

![image](https://user-images.githubusercontent.com/5196641/68486268-b63e7180-027b-11ea-8705-fe379b520f0d.png)

在安装文档中的，MySQL的源码安装方式中，还存在rm -rf /usr/local/mysql/data等删除数据库数据的不安全语句，需要修改
yum install perl
cd /usr/local/mysql
useradd mysql
rm -rf /usr/local/mysql/data
mkdir -p /data/mysql-data
ln -s /data/mysql-data /usr/local/mysql/data
chown -R mysql:mysql /data/mysql-data /usr/local/mysql/data
cp support-files/mysql.server /etc/init.d/mysql
**如果/etc/目录下有my.cnf存在，需要把这个配置删除了**
rm -rf /etc/my.cnf
yum install -y perl-Module-Install.noarch
perl scripts/mysql_install_db --user=mysql
vim /usr/local/mysql/my.cnf
自定义上报信息已经写入MySQL库里了
![图片](https://user-images.githubusercontent.com/35215878/65748454-8fe2cd80-e136-11e9-8a50-86989e0a7923.png)
但是管理平台上怎么查看这些上报信息？
我的服务EchoServer（上报的服务）、tarsproperty、tarsstat都看不到，该怎么过滤出这些自定义上报的信息？
![图片](https://user-images.githubusercontent.com/35215878/65748523-c15b9900-e136-11e9-8ad9-476a7138bff3.png)

### What language are you using?
 php
 
### What operating system (Linux, Ubuntu, …) and version?
 linux

Make sure you include information that can help us debug (full error message, exception listing, stack trace, logs).

每次重启服务后一会儿，查看日志，会打印：
tars_logger.ERROR: Tars\core\{closure} All workers are not alive any more. [] []
但是服务是正常的，能访问，为什么还会提示这个呢
dotnetcore现在已经很成熟稳定了。目前是2.2版本，很快会出3.0版本。现在很多公司已经在生产环境大量使用dotnetcore。
### What language are you using?
 
 
### What operating system (Linux, Ubuntu, …) and version?
 
 
### What runtime / compiler are you using (e.g. jdk version or version of gcc)
 
 
Make sure you include information that can help us debug (full error message, exception listing, stack trace, logs).

