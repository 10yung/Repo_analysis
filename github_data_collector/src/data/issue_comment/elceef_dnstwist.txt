In the context of packaging `dnstwist` for Debian I am trying to document the copyright information for the files included in your software. It seems to me that at least for the files inside the `database` directory proper copyright information is missing. Could you please add the following information for those files:

- the copyright year(s)
- the name of the author(s)/copyright holder(s)
- the licence
- the URL to the source of those files

For the file `effective_tld_names.dat` I've found information for the last two items but unless I overlooked something, the remaining information is missing.
```
BUILD_LIB=1 pip install -r requirements.txt
Requirement already satisfied: GeoIP>=1.3.2 in /usr/lib/python2.7/dist-packages (from -r requirements.txt (line 1)) (1.3.2)
Requirement already satisfied: dnspython>=1.14.0 in /usr/lib/python2.7/dist-packages (from -r requirements.txt (line 2)) (1.16.0)
Requirement already satisfied: requests>=2.20.0 in /usr/lib/python2.7/dist-packages (from -r requirements.txt (line 3)) (2.21.0)
Collecting ssdeep>=3.1.1 (from -r requirements.txt (line 4))
  Using cached https://files.pythonhosted.org/packages/e0/d3/f17602a7dde1231d332f4067fdd421057ffe335c3bbc295e7ccfab769d95/ssdeep-3.4.tar.gz
    Complete output from command python setup.py egg_info:
    warning: no previously-included files found matching 'setup.pyc'
    warning: no previously-included files matching 'yacctab.*' found under directory 'tests'
    warning: no previously-included files matching 'lextab.*' found under directory 'tests'
    warning: no previously-included files matching 'yacctab.*' found under directory 'examples'
    warning: no previously-included files matching 'lextab.*' found under directory 'examples'
    zip_safe flag not set; analyzing archive contents...
    pycparser.ply.lex: module references __file__
    pycparser.ply.lex: module MAY be using inspect.getsourcefile
    pycparser.ply.yacc: module references __file__
    pycparser.ply.yacc: module MAY be using inspect.getsourcefile
    pycparser.ply.yacc: module MAY be using inspect.stack
    pycparser.ply.ygen: module references __file__
    
    Installed /tmp/pip-install-67kgst/ssdeep/.eggs/pycparser-2.19-py2.7.egg
    running egg_info
    creating pip-egg-info/ssdeep.egg-info
    writing requirements to pip-egg-info/ssdeep.egg-info/requires.txt
    writing pip-egg-info/ssdeep.egg-info/PKG-INFO
    writing top-level names to pip-egg-info/ssdeep.egg-info/top_level.txt
    writing dependency_links to pip-egg-info/ssdeep.egg-info/dependency_links.txt
    writing manifest file 'pip-egg-info/ssdeep.egg-info/SOURCES.txt'
    sh: 0: Can't open configure
    /bin/sh: 1: libtoolize: not found
    configure.ac: error: no proper invocation of AM_INIT_AUTOMAKE was found.
    configure.ac: You should verify that configure.ac invokes AM_INIT_AUTOMAKE,
    configure.ac: that aclocal.m4 is present in the top-level directory,
    configure.ac: and that aclocal.m4 was recently regenerated (using aclocal)
    configure.ac:7: installing './config.guess'
    configure.ac:7: installing './config.sub'
    configure.ac:13: installing './install-sh'
    Makefile.am:9: error: Libtool library used but 'LIBTOOL' is undefined
    Makefile.am:9:   The usual way to define 'LIBTOOL' is to add 'LT_INIT'
    Makefile.am:9:   to 'configure.ac' and run 'aclocal' and 'autoconf' again.
    Makefile.am:9:   If 'LT_INIT' is in 'configure.ac', make sure
    Makefile.am:9:   its definition is in aclocal's search path.
    Makefile.am: installing './depcomp'
    /usr/share/automake-1.16/am/depend2.am: error: am__fastdepCC does not appear in AM_CONDITIONAL
    /usr/share/automake-1.16/am/depend2.am:   The usual way to define 'am__fastdepCC' is to add 'AC_PROG_CC'
    /usr/share/automake-1.16/am/depend2.am:   to 'configure.ac' and run 'aclocal' and 'autoconf' again
    /usr/share/automake-1.16/am/depend2.am: error: AMDEP does not appear in AM_CONDITIONAL
    /usr/share/automake-1.16/am/depend2.am:   The usual way to define 'AMDEP' is to add one of the compiler tests
    /usr/share/automake-1.16/am/depend2.am:     AC_PROG_CC, AC_PROG_CXX, AC_PROG_OBJC, AC_PROG_OBJCXX,
    /usr/share/automake-1.16/am/depend2.am:     AM_PROG_AS, AM_PROG_GCJ, AM_PROG_UPC
    /usr/share/automake-1.16/am/depend2.am:   to 'configure.ac' and run 'aclocal' and 'autoconf' again
    /usr/share/automake-1.16/am/depend2.am: error: am__fastdepCXX does not appear in AM_CONDITIONAL
    /usr/share/automake-1.16/am/depend2.am:   The usual way to define 'am__fastdepCXX' is to add 'AC_PROG_CXX'
    /usr/share/automake-1.16/am/depend2.am:   to 'configure.ac' and run 'aclocal' and 'autoconf' again
    Failed while building ssdeep lib with configure and make.
    Retry with autoreconf ...
    Failed to reconfigure the project build.
    
    ----------------------------------------
Command "python setup.py egg_info" failed with error code 1 in /tmp/pip-install-67kgst/ssdeep/

```
using kali and need your help that i can test this tool?
I have ssdeep already installed, but dntwist gives me this error:

dnstwist.py: notice: missing module: ssdeep (fuzzy hashes not available)

I'm on latest Kali version. Any idea how to fix?
See real attacks based on exploiting dyslexia

Running on Ubuntu 16.04, I was getting:

```
Traceback (most recent call last):
  File "dnstwist.py", line 1009, in <module>
    main()
  File "dnstwist.py", line 1003, in main
    p_cli(generate_cli(domains))
  File "dnstwist.py", line 120, in p_cli
    sys.stdout.write(data)
UnicodeEncodeError: 'ascii' codec can't encode character u'\u1ecf' in position 2994: ordinal not in range(128)
```

I fixed it with the attached patch. 

[dnstwist.py.patch.txt](https://github.com/elceef/dnstwist/files/3285784/dnstwist.py.patch.txt)




Great tool, however for coverage the following tool finds far more domains:

https://labs.nccgroup.trust/typofinder/
https://github.com/nccgroup/typofinder

Would love to see these functions incorporated into urlinsane

From looking at the code and if I understand correctly the whois package being used is: https://pypi.org/project/whois . This is an old package and from the tests I did it is failing on many queries (mostly issues with parsing the response). 

Are there any plans to move to the following whois package:  https://pypi.org/project/python-whois/ . It seems to work better on most queries. Also, it does direct queries and not via the `whois` executable.

Note that there may be some confusion as the debian package `python-whois` is actually using the package https://pypi.org/project/whois . 
```
$ dnstwist --registered maximumfun.org
     _           _            _     _
  __| |_ __  ___| |___      _(_)___| |_
 / _` | '_ \/ __| __\ \ /\ / / / __| __|
| (_| | | | \__ \ |_ \ V  V /| \__ \ |_
 \__,_|_| |_|___/\__| \_/\_/ |_|___/\__| {1.02}

Processing 284 domain variants ...
```

-vs.-

```
$ python dnstwist.py --registered maximumfun.org
     _           _            _     _
  __| |_ __  ___| |___      _(_)___| |_
 / _` | '_ \/ __| __\ \ /\ / / / __| __|
| (_| | | | \__ \ |_ \ V  V /| \__ \ |_
 \__,_|_| |_|___/\__| \_/\_/ |_|___/\__| {20180623}

Processing 5392 domain variants ...
```