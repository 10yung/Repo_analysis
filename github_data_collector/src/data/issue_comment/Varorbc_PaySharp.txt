目前最新版Nuget包及源代码 仅支持.NETCore3.1 及 .net4.5+ ,是否考虑 将TargetFrameworks改为 
`<TargetFrameworks>netstandard2.0;net45;</TargetFrameworks>` ,以便支持 更多环境？
各位兄弟们,没有看到分账功能啊.
看微信的分帐流程,要先添加分账商户,再调用分帐接口.

paysharp里面没有找到相关的接口,有哪位兄弟知道吗?
修改原递归方法，去除Activator.CreateInstance方法
新增非递归方法
对于 PR #29  的讨论
## 讨论的方面：
1. 关于 DI 方面的处理
2. Logging 日志的处理
3. PaySharp.AspNetCore 命名 （改变 Target 还是 改变支付 实现的名字）
    方案1： 将 Target 挪到独立的命名空间下， 如 `PaySharp.Target.*`   (PaySharp.Target.AspNetCore)
    方案2： 将 支付机构的实现挪到独立的命名空间下， 如 `PaySharp.Authorities.*`  (PaySharp.Authorities.Alipay)
4. 处理支付时的优化， 最好我们可以使用同一个处理类或函数 处理不同的 支付机构的 响应 。
# !!! 不要合并， DO NOT MERGE

# To do
- [x] PaySharp.Target.AspNetCore (current name : PaySharp.AspNetCore)
- [x] PaySharp.Target.AspNet (current name : PaySharp.AspNet)
- [x] DI is optional for both `Asp.Net`  and `Asp.Net Core`
- [ ] `NotifyHub`  as an adaptor for multiple `HubHandler`  (one handler per hub)
- [ ] logging
- [ ] Gateway integrate
  - [ ] Alipay
  - [ ] WechatPay
  - [ ] UnionPay
  - [ ] Tenpay

# description

### big picture
![big picture](https://user-images.githubusercontent.com/13639146/39566573-98ff3aa6-4eee-11e8-916f-8db5198e23ab.jpg)

1. 目前， DI 是可选的，尽量不要强制引用一些特定框架的nuget包 ， 具体实现的支付程序 不需要去自己管理 DI, 而是DI的相关操作 对 `IGatewayBuilder` 添加 。
2. 尽量不要采用 条件编译， Asp.Net  和 Asp.Net Core 是运行在 .net framework 上的两个框架（Asp.Net Core 可以在其他平台 如 .net core 平台运行）， 如果采用 条件编译， 请确定你的条件是 TargetFramework  而不是 Asp.Net/Asp.Net-Core
3. 目前还没有Logging ， 尽管我非常希望可以使用 `Microsoft.Extensions.Logging.Abstractions`  这个 Logger 适配器， 不过到2.0之后，他的编译目标是 .net standard 2.0 ，也就是 如果小于 .net framework 4.6.1 无法使用，如果我们要让 .net 45 也能使用，我们要么降级 1.x 版本， 要么做我们自己的抽象层

希望大家可以多多提供意见





