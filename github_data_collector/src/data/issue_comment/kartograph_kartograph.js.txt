
Kartograph crashes Angular JS project as soon as it's included in the index.html file. Only error output was:

`Uncaught Error: [$injector:modulerr] http://errors.angularjs.org/1.5.0-rc.2/$injector/modulerr?p0=ng&p1=TypeErroâ€¦at%20d%20(http%3A%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js%3A39%3A242)(anonymous function) @ angular.js:6(anonymous function) @ angular.js:40n @ angular.js:7g @ angular.js:39gb @ angular.js:43Ac.c @ angular.js:20Ac @ angular.js:21de @ angular.js:20(anonymous function) @ angular.js:306i @ jquery.js:2j.fireWith @ jquery.js:2n.extend.ready @ jquery.js:2K @ jquery.js:2`

Which directs me to this link:

https://docs.angularjs.org/error/$injector/modulerr?p0=ng&p1=TypeError:%20Cannot%20set%20property%20%27aHrefSanitizationWhitelist%27%20of%20null%0A%20%20%20%20at%20le%20(http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:144:186)%0A%20%20%20%20at%20new%20%3Canonymous%3E%20(http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fkartograph.js:1:22333)%0A%20%20%20%20at%20Object.instantiate%20(http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:41:404)%0A%20%20%20%20at%20c%20(http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:38:356)%0A%20%20%20%20at%20http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:8:216%0A%20%20%20%20at%20n%20(http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:8:3)%0A%20%20%20%20at%20Object.provider%20(http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:38:275)%0A%20%20%20%20at%20http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:27:195%0A%20%20%20%20at%20Object.invoke%20(http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:41:303)%0A%20%20%20%20at%20d%20(http:%2F%2Frate.dev%2Fassets%2Fscripts%2Fangular.js:39:242

When drawing pie chart and there is only one value it previously draw an arc with the same start and end angle (so it draws a line)
It now draws a circle when there is a single value. So it really represents 100%

I'm using this fix to make kartograph.js work in our app. Other wise it crashes with

```
Uncaught TypeError: Cannot read property 'length' of null
```

the null is `contours` in 

```
 Path = (function() {
    /*
        represents complex polygons (aka multi-polygons)
    */
    function Path(type, contours, closed) {
      var cnt, self, _i, _len;

      if (closed == null) {
        closed = true;
      }
      self = this;
      self.type = type;
      self.contours = [];
      for (_i = 0, _len = contours.length; _i < _len; _i++) {
        cnt = contours[_i];
        if (!__is_clockwise(cnt)) {
          cnt.reverse();
        }
        self.contours.push(cnt);
      }
      self.closed = closed;
    }
```

I suppose I should make a pull request with changes in your *.coffee source files, but I don't know how to.

I'm just trying to access to the symbols (resulted by noverlap clustering) in order to render the counter of nodes for a group of symbols. Is there any ready way to do that?

Hello,

i made a very simple svg using kartograph.py based on the file ne_110m_ocean.shp from Natural Earth:
![ocean_svg](https://cloud.githubusercontent.com/assets/2501617/5719294/73c596b0-9b17-11e4-833c-226ace24d7fd.png)

Rendering it using kartograph.js only shows a partial rendering:
![ocean](https://cloud.githubusercontent.com/assets/2501617/5719279/4bebf59e-9b17-11e4-8dd2-8b4457ddcde4.png)

It doesn't seem to support 'holes' in the rendered polygone.

Please consider to add bower.json 

Read more about bower.json on the [official specification](http://bower.io/#defining-a-package)

Thank you :)

Forgive me, however I want to get a quick answer, can all the maps made with kartograph.js be responsive? That is adjust itself to screen size

Thanks in advance.

If you want to add a bubble with a label to the map you probably use the attribute "labelattr" to add a class to the text element.

But the attribute "css" and "style" are not applied to the text element in the svg xml schema.

This is a workaround to fix the problem.

You have a number of leaked globals and typos that could cause issues for other scripts. Any serious third-party library should have basic linting.

Using the popular [JSHint tool](http://www.jshint.com/), I was able to find a number of potentially serious issues:
##### Circle area calculation is completely wrong due to [a typo in path.coffee](https://github.com/kartograph/kartograph.js/blob/4b8525e2e9ab4cfd97c680a21158416360e3d6ef/src/core/path.coffee#L164):

``` js
area: ->
        me = @
        Math.PI * me.r*m.r  // "m.r" should be "me.r"
```
##### `Line.clipToBBox()` [references a non-existent `len()` function](https://github.com/kartograph/kartograph.js/blob/4b8525e2e9ab4cfd97c680a21158416360e3d6ef/src/core/path.coffee#L237):

``` js
                if p1x != x1 or p1y != y0 or i == len(self.points)-2
                    pts.push([x1, y1])
```
##### `scale.identity()` [has an incorrect signature](https://github.com/kartograph/kartograph.js/blob/4b8525e2e9ab4cfd97c680a21158416360e3d6ef/src/modules/scales.coffee#L102), causing the wrong values to be passed to the `Scale` constructor:

``` js
scale.identity = (s) ->
    new Scale(domain, prop, filter).rangedScale  // domain, prop, filter should be arguments to identity()
```

These are just a few of the warnings & errors reported by a linter like JSHint. Most of these are trivial to fix and are pretty silly to see in such a popular third-party library.
