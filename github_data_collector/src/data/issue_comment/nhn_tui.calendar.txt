
<!-- EDIT TITLE PLEASE -->
<!-- It should be one of them
  <ISSUE TYPE>: Short Description (<CLOSING TYPE> #<ISSUE NUMBERS>)
  ex)
  feat: add new feature (close #111)
  fix: wrong behavior (fix #111)
  chore: change build tool (ref #111)
-->

<!-- SPECIFY A ISSUE TYPE AT HEAD
  feat: A new feature
  fix: A bug fix
  docs: Documentation only changes
  style: Changes that do not affect the meaning of the code (white-space, formatting etc)
  refactor: A code change that neither fixes a bug or adds a feature
  perf: A code change that improves performance
  test: Adding missing tests
  chore: Changes to the build process or auxiliary tools and libraries such as documentation generation
-->

<!-- ADD CLOSING TYPE AND ISSUE NUMBER AT TAIL
  (<CLOSING TYPE> #<ISSUE NUMBERS>)
  close: resolve not a bug(feature, docs, etc) completely
  fix: resolve a bug completely
  ref: not fully resolved or related to
-->

### Please check if the PR fulfills these requirements
- [x] It's submitted to right branch according to our branching model
- [x] It's right issue type on title
- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where "xxx" is the issue number)
- [x] The commit message follows our guidelines
- [x] Tests for the changes have been added (for bug fixes/features)
- [x] Docs have been added/updated (for bug fixes/features)
- [ ] It does not introduce a breaking change or has description for the breaking change

### Description
#### AS-IS
When a schedule is included in travel time, a conflict occurs.
![·Ñâ·Ö≥·Ñè·Ö≥·ÑÖ·Öµ·Ü´·Ñâ·Ö£·Ü∫ 2020-01-16 20 13 22](https://user-images.githubusercontent.com/43128697/72522553-54187300-38a1-11ea-8991-865d16e3660a.png)
#### TO-BE
![·Ñâ·Ö≥·Ñè·Ö≥·ÑÖ·Öµ·Ü´·Ñâ·Ö£·Ü∫ 2020-01-16 20 17 48](https://user-images.githubusercontent.com/43128697/72522556-5549a000-38a1-11ea-8cc8-526f78f0364f.png)


---
Thank you for your contribution to TOAST UI product. üéâ üòò ‚ú®

Timezones comparison rendering works well except this one case when the first timezone is 30 minutes ahead of the second. Rather than subtracting 30 minutes from the second timezone its adding 30 minutes to it.
Please take a look at [this codepen](https://codepen.io/snyaggarwal/pen/OJPoNEb).
The timezones are rendered wrong (relatively).

Expected behavior - first timezone(+570) should be 30 minutes ahead of the second timezone(+540).
<!-- TEMPLATE -->

## Version
v.1.12.9
<!-- Write the version of the grid you are currently using. -->

## Development Environment
Chrome
<!-- Write the browser type, OS and so on -->

## Current Behavior
<!-- Write a description of the current operation. You can add example code, 'CodePen' or 'jsfiddle' links. -->
From https://github.com/nhn/toast-ui.react-calendar/issues/21
* When user changes calendar view - onChangeCalendarView even calls

```js
cal.setOptions({
  template: { time: getTimeTemplate(calendarView) }
});
```

* Function getTimeTemplate is like
```js
const getTimeTemplate = (calendarView) => (schedule) => {
  return calendarView === 'month' ? 'aaa' : 'bbb';
};
```
* The template of time is not changed
## Expected Behavior
<!-- Write a description of the future action. -->
The template should be changed

The format and purpose of the data in the `recurrenceRule` is not clear for me, neither after looking at the examples nor after reading the documentation.  My understanding of the purpose of a Recurrence Rule is the one described in the [iCalendar specification for RRULE](https://tools.ietf.org/html/rfc5545#section-3.3.10).
![image](https://user-images.githubusercontent.com/24488771/71996836-e5854680-320a-11ea-8dbf-d883ba2b425e.png)

I need that increment in 15min. thanks

<!--
Thank you for your contribution.

When it comes to write an issue, please, use the template below.
To use the template is mandatory for submit new issue and we won't reply the issue that without the template.

And you can write template's contents in Korean also.
-->

<!-- TEMPLATE -->

## Version
<!-- Write the version of the grid you are currently using. -->

## Development Environment
<!-- Write the browser type, OS and so on -->

## Current Behavior
<!-- Write a description of the current operation. You can add example code, 'CodePen' or 'jsfiddle' links. -->
Even though time zones provided in Calendar options. It is only working properly for current date time indicator with blue and rest of all functionalities are taking browser time but not the option mentioned in timezone.

![image](https://user-images.githubusercontent.com/33422173/71875920-7dbbf680-314b-11ea-8988-574803a96afa.png)

**This issue in Day, Week and Month view.**
For other things like start time and end time in schedule popup, I am handling with moment time zone. The main issue is calendar view and Today button. These are working on browser time.

**Week view**
![image](https://user-images.githubusercontent.com/33422173/71876243-5285d700-314c-11ea-8d1a-bfc225074fe1.png)

**Month View**
![image](https://user-images.githubusercontent.com/33422173/71876752-857c9a80-314d-11ea-858b-495004a11cdd.png)

**Day view**
![image](https://user-images.githubusercontent.com/33422173/71876936-f58b2080-314d-11ea-956f-ecaa34e05a68.png)


```js
// Write example code
```


## Expected Behavior
<!-- Write a description of the future action. -->
Is there any way to handle above issue?

## Version
-  `1.12.9`
-  `1.12.6`

## Development Environment
MacOs 10.15.2, Chrome, WebPack 4.39.1 with babel 7.5.5

## Current Behavior
An error is thrown when code is transpiled in webpack on both versions `1.12.9` or `1.12.6`. Version 1.12.3 works without issue.

```js
Uncaught TypeError: Cannot read property 'mixin' of undefined
    at Object../src/js/view/view.js (tui-calendar.js:23098)
    at __webpack_require__ (tui-calendar.js:36)
    at Object../src/js/view/layout.js (tui-calendar.js:18537)
    at __webpack_require__ (tui-calendar.js:36)
    at Object../src/js/factory/calendar.js (tui-calendar.js:8197)
    at __webpack_require__ (tui-calendar.js:36)
    at Object.<anonymous> (tui-calendar.js:1569)
    at Object../src/index.js (tui-calendar.js:1603)
    at __webpack_require__ (tui-calendar.js:36)
    at tui-calendar.js:100
```

The error is occurring on:

```
/**
 * set state
 * @param {object} state - state
 */
View.prototype.setState = function(state) {
    util.extend(this.state, state);
};

util.CustomEvents.mixin(View); // << error here

module.exports = View;
```

## Expected Behavior
Component doesn't throw.
Hello,

Is there a chance to change the default time interval from 30 min to other value?
This feature is very usefull to have, because users can choose to have 15 min, 30 min, 1 hr step intervals, when creating a schedule (by dragging or simply, by clicking anywhere on calendar).

Thank you!

Best regards!

VERSION:
Latest version, as used on the example page:
https://nhn.github.io/tui.calendar/latest/tutorial-example00-basic

DEVELOPMENT ENVIRONMENT:
Any browser

CURRENT BEHAVIOUR:
When "Month" view is selected and weekends are hidden, clicking on the "new schedule" button causes the creation popup to position on the wrong day (the function counts also weekends, even though they are hidden)

EXPECTED BEHAVIOUR:
The creation popup should be positioned next to the correct day
![Untitled](https://user-images.githubusercontent.com/40668622/71526037-109b9c00-28d5-11ea-8709-f6090bbdb2aa.png)

<!--
Thank you for your contribution.

When it comes to write an issue, please, use the template below.
To use the template is mandatory for submit new issue and we won't reply the issue that without the template.

And you can write template's contents in Korean also.
-->

<!-- TEMPLATE -->

## Version
version 1.12.6 | Thu Oct 24 2019

## Development Environment
Windows XAMPP PHP 7.2
Firefox version 71.0 (64-bit)

## Current Behavior
When using Scroll Bar within **All Day** it creates **Guide Selection**

https://www.youtube.com/watch?v=ItAzto5xjuI

## Expected Behavior
The Scroll Bar should not create Guide Selections
