在使用CCL核心0.11.0时，使用入门文档的代码无法正常运行。弹幕不会滚动。通过调试发现manager.runline数组一直是空的。使用弹幕提供器读取弹幕也不行。
但是使用ABPlayerHTML5播放器就能顺利运行弹幕，我反复看了代码将近一周，一直没发现文档示例代码和播放器中调用弹幕的代码有什么巨大差异。这个问题已经困扰我一周了，希望您能指点迷津。
完整代码如下，项目中仅有3个文件：wwwroot/index.html; wwwroot/js/CommentCoreLibrary.min.js; wwwroot/css/style.min.css
```
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <title></title>
    <link href="/css/style.min.css" rel="stylesheet" />
</head>
<body>
    <div style="width: 800px; height: 450px; background-color: black;">
        <div class="abp" style="width: 800px; height: 400px;">
            <div class="container" id="dm" style="width: 800px; height: 400px;"></div>
        </div>
        <!--<video id="v" src="/videos/1.mp4" style="width: 800px; height: 450px;" controls></video>-->
    </div>
    <script src="/js/CommentCoreLibrary.min.js"></script>
    <script>
        var $ = function (e) {
            return document.getElementById(e);
        }

        //var v = $('v');
        var dm = $('dm')
        var cm = new CommentManager(dm);
        cm.init('css'); // 初始化

        // 载入弹幕列表
        var danmakuList = [
            {
                "mode": 1,
                "text": "Hello World",
                "stime": 0,
                "size": 25,
                "color": 0xffffff
            }
        ];
        cm.load(danmakuList);

        // 插入弹幕
        var someDanmakuAObj = {
            "mode": 1,
            "text": "Hello CommentCoreLibrary",
            "stime": 1000,
            "size": 30,
            "color": 0xff0000
        };
        cm.insert(someDanmakuAObj);

        // 启动播放弹幕（在未启动状态下弹幕不会移动）
        cm.start();
    </script>
</body>
</html>
```
TODO:
- [ ] Architecture
    - [x] Separate out rendering into pluggable renderers
    - [x] Type-safe definitions
    - [ ] Port over existing JS Classes
        - [ ] Core
        - [ ] Filter
        - [ ] Parsers
    - [ ] Make scripting work (or maybe separate out into its own repo?)
- [ ] Documentation
- [ ] Unit Tests
- [ ] Other projects 
你好，问题如标题
目前 `grunt-template-jasmine-istanbul` 各种跟新的 2.0 jasmine不太work，所以先行关掉了coverage。
等这几个项目修好了之后再重新引入（或许也会改编译方案）
最近一个项目里要用到，使用的是webpack，这已经成为主流的打包方案，但是这种方式使用CCL时并不太方便，dist文件夹下的js并不是umd格式的模块，现在需要手动配置exports-loader来可以正常使用。
另外npm上的包似乎很久没有更新了，希望能够更新一下，谢谢！
感觉过了好久没在这边看过了

我去年年初的时候自己xjb写了个canvas，瞎改了改有了一个有些问题的版本(?)
其实有点合并进来的想法，但是刚才大概翻了下commit好像框架改了一些

一个问题就是我的实现不算是非常高性能，最初我是用全stage大小的画布的，但是觉得我电脑上全屏时性能不足结果换成了一个变高度的画布，然后分开了mode1和mode4 5
（具体看一下实现大概就能懂我在说什么了，[av2615953 - P1](https://www.biliplus.com/api/h5play.php?iframe&tid=30&cid=4084115&type=vupload&vid=vupload_4084115&bangumi=0#%5BP1%5D%20%u3010%u6D1B%u5929%u4F9D.%u8A00%u548C.%u4E50%u6B63%u7EEB%u539F%u521B%u3011%u9B54%u6CD5%u53A8%u5A18%u3010PV%u4ED8%u3011%u30108bit%u3011%20%7C%7C%20%u3010%u6D1B%u5929%u4F9D.%u8A00%u548C.%u4E50%u6B63%u7EEB%u539F%u521B%u3011%u9B54%u6CD5%u53A8%u5A18%u3010PV%u4ED8%u3011%u30108bit%u3011%20-%20AV2615953)）
另外我还看到过滤器已经变成内置了？（我还用的是自己实现的，更新的话估计就得迁移配置了）

---
然后就是bas，这个有实现的计划吗？
虽然总感觉现在弹幕站周围的开发圈都渐渐退了

---
大概就这么些吧，开始搞合并的话我可能就要很多的麻烦你了（逃）
弹弹Play的弹幕云的格式和B站的不一样
然后貌似代码里面只有AB两站的弹幕解析器

副弹弹Play的弹幕格式:
`<Comment Time="1.1" Mode="2" Color="3" Timestamp="4" Pool="5" UId="6" CId="7">sample string 8</Comment>`

> Time: 浮点数形式的弹幕时间，单位为秒。
> Mode: 弹幕模式，1普通弹幕，4底部弹幕，5顶部弹幕。
> Color: 32位整形数的弹幕颜色，算法为 R_256_256 + G*256 + B。
> Timestamp: 弹幕发送时间戳，单位为毫秒。可以理解为Unix时间戳，但起始点为1970年1月1日7:00:00。
> Pool: 弹幕池，目前此数值为0。
> UId: 用户编号，匿名用户为0，备份弹幕为-1，注册用户为正整数。
> CId: 弹幕编号，此编号在同一个弹幕库中唯一，且新弹幕永远比旧弹幕编号要大。
> Message: 弹幕内容文字。\r和\n不会作为换行转义符。

会有什么坑？

![2014-08-15 09 58 50](https://cloud.githubusercontent.com/assets/3324513/3929402/6b7fec76-2420-11e4-93ce-9544882b14ca.png)

如图所示的两条弹幕（test 6）。

弹幕池中编号为2的弹幕是 迷之感动。 编号为14的是谢谢。不过迷之感动后面有大量的空白而谢谢则排版到了下方。这一点满不舒服。尤其是在屏幕很大的时候可能会出现阶梯状。

看代码应该是在vCheck里 选中的那一行。 逻辑是当之前的一条弹幕滚出屏幕时这条弹幕不能超过屏幕中间。debug看到 2弹幕滚出时间位7560。 14弹幕滚到中间时间为7080。所以被没有排在2好弹幕的正后方。

我想问这样处理合适吗？ 不是应该只要避免不必要的堆叠就好了？

所以这个地方的逻辑是不是应该改为。当先前弹幕完全滚出屏幕的时候，本弹幕的头部没有道道屏幕边缘嘛？

也就是 

```
this.getMiddle = function(cmt){
    return cmt.stime+this.width/(cmt.width+this.width)*cmt.ttl;
}
```

搞错分支神马的2333 从新merge蛮麻烦。

这次对于排版直接使用了原来的排版系统，理论上应该和之前样式的没有啥区别。区别估计事在于用Canvas还原弹幕的话，边框略虚，这可能跟Canvas的抗锯齿有关（还TMD关不掉。。）。

效率对比如下：都是Surface Pro with IE，测试的是demo的test6。测试时间40s。 

Canvas：
![56](https://cloud.githubusercontent.com/assets/3324513/3745754/29a14518-17b2-11e4-863a-8f63978a60b5.png)

Dom：
![57](https://cloud.githubusercontent.com/assets/3324513/3745757/3686028c-17b2-11e4-8343-2f90e3934f5e.png)

感觉Surface终于不发热了～～2333
