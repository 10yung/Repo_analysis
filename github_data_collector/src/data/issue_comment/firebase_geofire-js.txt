Bumps [lodash](https://github.com/lodash/lodash) from 4.17.10 to 4.17.15.
<details>
<summary>Commits</summary>

- [`ddfd9b1`](https://github.com/lodash/lodash/commit/ddfd9b11a0126db2302cb70ec9973b66baec0975) Bump to v4.17.15.
- [`b185fce`](https://github.com/lodash/lodash/commit/b185fcee26b2133bd071f4aaca14b455c2ed1008) Rebuild lodash and docs.
- [`be87d30`](https://github.com/lodash/lodash/commit/be87d303941222b97c482755afc0f4a77ce46c30) Bump to v4.17.14.
- [`a6fe6b1`](https://github.com/lodash/lodash/commit/a6fe6b1e174fd02b5e60eb2664405f4c1262c300) Rebuild lodash and docs.
- [`e371828`](https://github.com/lodash/lodash/commit/e37182845f16715a0d1c391c8662d83c55609cee) Bump to v4.17.13.
- [`357e899`](https://github.com/lodash/lodash/commit/357e899e685872b4af5403ecc4b2a928f961ae63) Rebuild lodash and docs.
- [`fd9a062`](https://github.com/lodash/lodash/commit/fd9a062d57646450b61f74029315abd4cc834b08) Bump to v4.17.12.
- [`e77d681`](https://github.com/lodash/lodash/commit/e77d68121ff00ba86b53eed5893d35adfe94c9dd) Rebuild lodash and docs.
- [`629d186`](https://github.com/lodash/lodash/commit/629d1865793182cd967196716f4beff223aa4a91) Update OpenJS references.
- [`2406eac`](https://github.com/lodash/lodash/commit/2406eac542b2a1282be8d812a6d8a45433ade80a) Fix minified build.
- Additional commits viewable in [compare view](https://github.com/lodash/lodash/compare/4.17.10...4.17.15)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.10&new-version=4.17.15)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/firebase/geofire-js/network/alerts).

</details>
<!--

Thank you for contributing to the Firebase community! Please fill out the pull request form below
and make note of the following:

Run the linter and test suite
==============================
Make sure your changes pass our linter and the tests all pass on your local machine. We've hooked
up this repo with continuous integration to double check those things for you.

Add tests (if applicable)
==============================
Most non-trivial changes should include some extra test coverage. If you aren't sure how to add
tests, feel free to submit regardless and ask us for some advice.

Sign our CLA
==============================
Please sign our Contributor License Agreement (https://cla.developers.google.com/about/google-individual)
before sending PRs. We cannot accept code without this.

-->


### Description
Fixed a trivial bug of an unbound `this` in `setTimeout` call, by wrapping the function argument with an arrow function.

<!-- Are you fixing a bug? Updating our documentation? Implementing a new feature? Make sure we
have the context around your change. Link to other relevant issues or pull requests. -->


<!-- Proposing an API change? Provide code samples showing how the API will be used. -->

Feature request: can we please get a geofire version compatible with firebase 6.x.x?

### Version info
 UNMET PEER DEPENDENCY firebase@6.6.0
├── firebase-admin@8.5.0
├── firebase-auth@0.1.2
├── firebase-functions@3.2.0
├── firebase-tools@7.3.1
├── geofire@5.0.1
├── object-hash@1.3.1
├── tslint@5.8.0
├── typescript@2.8.4

npm ERR! peer dep missing: firebase@^2.4.0 || 3.x.x || 4.x.x || 5.x.x, required by geofire@5.0.1

### Expected behavior

Compatible geofire library with the latest firebase.

### Actual behavior

The requirement restriction makes it impossible to use "firebase" and 'firebase-admin" together as it shows the known issue where google cloud complains that a "database" has already been registered when these two packages are imported in the same file.

I am learning how to work with GeoFire and started on a quite simple project - there is a bunch of locations, I want to make a query based on some point and radius.
here is the code so far:

```js
var geoFireRef = firebase.database().ref().child('locations');
var geoFire = new GeoFire(geoFireRef);

// Create a GeoQuery
var geoQuery = geoFire.query({
	center: [-37.81, 144.96],
	radius: 7
});

geoQuery.on("ready", function() {
	console.log("GeoQuery has loaded and fired all other events for initial data");
  });
  
// Test get key location
geoFire.get("3").then(function(location) {
	if (location === null) {
	console.log("Provided key is not in GeoFire");
	}
	else {
	console.log("Provided key has a location of " + location);
	}
	}, function(error) {
	console.log("Error: " + error);
	});

geoQuery.on("key_entered", function(key, location, distance) {
	console.log(key + " entered query at " + location + " (" + distance + " km from center)");
	});
```

The data structure is also very simple:
![image](https://user-images.githubusercontent.com/12708909/63626384-37577680-c646-11e9-8a9e-605cad1b0019.png)


Here is the response in the console:
scripts.js:358 GeoQuery has loaded and fired all other events for initial data
scripts.js:371 Provided key has a location of -37.8700135,144.7632183

I am certain there are a lot of points in my dataset which should fall into 7km circle, but I don't get any. 
Get request does provide location for given keys, so I presume the issue is in the way I handle the Query.
### Version info

<!-- What versions of the following libraries are you using? Note that your issue may already
be fixed in the latest versions. -->

**RN-Firebase: ^5.4.3**

**GeoFire: ^5.0.1**


### Steps to reproduce

I am using geofire with react native application, there are multiple nodes (location) present around the world in my db, and now I am fetching them using geoQuery in 100km radius, but if the fetched nodes are less than 50, the radius increase by 100km and so on. I figured if I use 20,000 km as Max_Radius then I'll cover the globe. But once my radius crossed 5400km I was only getting the nearest nodes, but where as I am getting all the nodes at 5400km, even those which are 12000km away from center. So I set the max at 5400km, but that differs with respect to center, like 5400km is max to C1, but 4000km is max to C2 and increasing that would result only near nodes.


### Expected behavior

Get all nodes as I increase the radius


### Actual behavior

Getting only nearest nodes at Max_Radius

### Description

Update the example applications to use Firebase 5.x.x and GeoFire 5.x.x

### Code sample

In the head of the HTML files:

```HTML
<!-- Firebase -->
<script src="https://www.gstatic.com/firebasejs/5.9.4/firebase-app.js"></script>
<script src="https://www.gstatic.com/firebasejs/5.9.4/firebase-database.js"></script>

<!-- GeoFire -->
<script src="https://cdn.firebase.com/libs/geofire/5.0.1/geofire.min.js"></script>
```

And when we create a GeoFire instance in the JavaScript:

```JavaScript
// Create a new GeoFire instance at the random Firebase location
var geoFireInstance = new geofire.GeoFire(firebaseRef);
```
Think you found a bug?
=======================
Yeah, we're definitely not perfect! Please use the bug report template below and include a minimal
repro when opening the issue.

### Version info

**Firebase:**
3.7.0

**GeoFire:**
5.0.1

**Other (e.g. Node, browser, operating system) (if applicable):**

Using GeoFire without NodeJS.

### Test case

Try to use this fish1 example with version 5.0.1
https://github.com/firebase/geofire-js/tree/master/examples/fish1


### Steps to reproduce

Try to use this fish1 example with version 5.0.1
https://github.com/firebase/geofire-js/tree/master/examples/fish1

```
  var geoFire = new GeoFire(firebaseRef);
```

### Expected behavior

GeoFire instance is created without an error.

### Actual behavior

You get an error 'ReferenceError: GeoFire is not defined'. GeoFire class is not found. 


### Workaround

Using `geofire` object worked:

```
  var geoFire = new geofire.GeoFire(firebaseRef);
```



Is there any callback similar to GeoQueryDataEventListener which is present in Java?
<!--

Thank you for contributing to the Firebase community! Please fill out the pull request form below
and make note of the following:

Run the linter and test suite
==============================
Make sure your changes pass our linter and the tests all pass on your local machine. We've hooked
up this repo with continuous integration to double check those things for you.

Add tests (if applicable)
==============================
Most non-trivial changes should include some extra test coverage. If you aren't sure how to add
tests, feel free to submit regardless and ask us for some advice.

Sign our CLA
==============================
Please sign our Contributor License Agreement (https://cla.developers.google.com/about/google-individual)
before sending PRs. We cannot accept code without this.

-->


### Description

<!-- Are you fixing a bug? Updating our documentation? Implementing a new feature? Make sure we
have the context around your change. Link to other relevant issues or pull requests. -->

Current master code has many unclear points, especially `variable types`.
This PR improves code clarity, and set more strict tslint rules. 

### Code sample

<!-- Proposing an API change? Provide code samples showing how the API will be used. -->

**current**
```ts
  public on(eventType: string, callback: Function): GeoCallbackRegistration {
```

**this PR**
```ts
  public on(eventType: string, callback: (key?: string, location?: number[], distanceFromCenter?: number) => void): GeoCallbackRegistration {
```
<!--

Thank you for contributing to the Firebase community!

Have a usage question?
=======================
We get lots of those and we love helping you, but GitHub is not the best place for them and they
will be closed. Here are some resources to get help:

- Start with the documentation: https://github.com/firebase/geofire-js/blob/master/README.md
- Read the full API reference: https://github.com/firebase/geofire-js/blob/master/docs/reference.md
- Try out some examples: https://github.com/firebase/geofire-js/blob/master/examples/README.md

If the official documentation doesn't help, try asking through our official support channels:

https://firebase.google.com/support/

*Please avoid double posting across multiple channels!*

Think you found a bug?
=======================
Yeah, we're definitely not perfect! Please use the bug report template below and include a minimal
repro when opening the issue.


Have a feature request?
========================
Great, we love hearing how we can improve our products! Just remove the template below and
provide an explanation of your feature request. Provide code samples if applicable. Try to
think about what it will allow you to do that you can't do today? How will it make current
workarounds straightforward? What potential bugs and edge cases does it help to avoid?

-->



### Version info

<!-- What versions of the following libraries are you using? Note that your issue may already
be fixed in the latest versions. -->
I think there is a problem with index rule of Firebase ref because it worked well with other reference however it just didn't work with this ref from `geoFirejs`

**Firebase:**
`3.6.9`
**GeoFire:**
`4.1.2`
**Other (e.g. Node, browser, operating system) (if applicable):**

### Test case

<!-- Provide a minimal, complete, and verifiable example (http://stackoverflow.com/help/mcve)
using either Plunker (http://plnkr.co/) or JSFiddle (https://jsfiddle.net/). -->


### Steps to reproduce
```
const onChildChange = (data) => {
      const position = data.val();
      console.log('geofire with Firebase');
    }

firebase.database().ref('geofire').limitToLast(1).on('child_added', onChildChange);
```
This is my code inside componentDidMount from my React Native project

- For now. this function was not be called after a new item added to Firebase database
- `ref('geofire')` is the reference geofire in the local app as well
![image](https://user-images.githubusercontent.com/23715737/46188872-df20d300-c315-11e8-8651-6b7e268715b7.png)
This is my Firebase database.
<!-- Provide the steps needed to reproduce the issue given the above test case. -->


### Expected behavior
- `onChildChange` should be called each time new item has been created on Firebase server
<!-- What is the expected behavior? -->


### Actual behavior
- There is nothing log out in `console.log` right now. 
- A new item has been created well.
<!-- What is the actual behavior? -->
