I think this may be a bug.
I reproduces the problem in [this stackblitz](https://stackblitz.com/edit/akita-persiststate-exclude)
I used this code in `main.ts` to persist state in indexeddb and exclude `ui` from `user` entity store:
```typescript
localForage.config({
  driver: localForage.INDEXEDDB,
});

persistState({
  storage: localForage,
  exclude: [
    'user.ui',
  ]
});
```
the `user.ui` key is still being persisted in indexeddb and state rehydrated from storage at startup.
Also this may be a feature request to exclude `ui` state by default from persistence.
thanks in advance...
## PR Checklist
Please check if your PR fulfills the following requirements:

- [x] The commit message follows our guidelines: https://github.com/datorama/akita/blob/master/CONTRIBUTING.md#commit
- [ ] Tests for the changes have been added (for bug fixes / features)
- [ ] Docs have been added / updated (for bug fixes / features)


## PR Type
What kind of change does this PR introduce?

<!-- Please check the one that applies to this PR using "x". -->
```
[x] Bugfix
[ ] Feature
[ ] Code style update (formatting, local variables)
[x] Refactoring (no functional changes, no api changes)
[ ] Build related changes
[ ] CI related changes
[ ] Documentation content changes
[ ] Other... Please describe:
```

## What is the current behavior?
<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->

Issue Number: 0


## What is the new behavior?
None

## Does this PR introduce a breaking change?
```
[ ] Yes
[x] No
```

<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->


## Other information
I selected that as a bugfix, because files — depends on a platform — can be case-sensitive and case-insensitive, which in the second case can lead to errors about duplicated file, based on its name.