Hello @jbarlow83
I have this issue ... i'm using Ocrmypdf with alfresco ... Ocrmypdf work well manually using the command ... but when I use it with alfresco 'OCR action' does'nt work ... this is the log :
```
Caused by: java.lang.RuntimeException: org.alfresco.service.cmr.repository.ContentIOException: 000817996 Failed to perform OCR transformation:
Execution result:
os: Linux
command: /usr/local/bin/ocrmypdf --verbose 1 --force-ocr -l eng /opt/alfresco-community/tomcat/temp/Alfresco/OCRTransformWorker_source_4887267237326407155.pdf /opt/alfresco-community/tomcat/temp/Alfresco/OCRTransformWorker_source_4887267237326407155_ocr.pdf
succeeded: false
exit code: 1
out:
err: Traceback (most recent call last):
File "/usr/local/bin/ocrmypdf", line 5, in
from ocrmypdf.main import run
File "/root/.local/lib/python3.6/site-packages/ocrmypdf/init.py", line 20, in
from .api import Verbosity
at es.keensoft.alfresco.ocr.OCRExtractAction.executeImplInternal(OCRExtractAction.java:183)
at es.keensoft.alfresco.ocr.OCRExtractAction.access$200(OCRExtractAction.java:38)
at es.keensoft.alfresco.ocr.OCRExtractAction$1.execute(OCRExtractAction.java:164)
at es.keensoft.alfresco.ocr.OCRExtractAction$1.execute(OCRExtractAction.java:161)
at org.alfresco.repo.transaction.RetryingTransactionHelper.doInTransaction(RetryingTransactionHelper.java:464)
at es.keensoft.alfresco.ocr.OCRExtractAction.executeInNewTransaction(OCRExtractAction.java:169)
at es.keensoft.alfresco.ocr.OCRExtractAction.access$100(OCRExtractAction.java:38)
at es.keensoft.alfresco.ocr.OCRExtractAction$ExtractOCRTask.run(OCRExtractAction.java:151)
at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
at java.lang.Thread.run(Thread.java:748)
```
thankx for your help
Hi and thanks a lot for OCRmyPDF!

I'd like to offer a few spelling corrections. Also, I've made two links HTTPS and added instructions for Arch Linux.
**Describe the issue**
When running OCR on a PDF, I am consistently getting a fatal error that prevents completion.

I ran
```bash
ocrmypdf   feynman_in.pdf feynman_out.pdf
```
and the following occurred:

```
   INFO - Start processing 8 pages concurrent
WARNING -    2: [tesseract] lots of diacritics - possibly poor OCR
  ERROR - An exception occurred while executing the pipeline
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/pikepdf/models/metadata.py", line 304, in _load_from
    self._xmp = parse(BytesIO(data))
  File "src/lxml/etree.pyx", line 3467, in lxml.etree.parse
  File "src/lxml/parser.pxi", line 1856, in lxml.etree._parseDocument
  File "src/lxml/parser.pxi", line 1876, in lxml.etree._parseMemoryDocument
  File "src/lxml/parser.pxi", line 1764, in lxml.etree._parseDoc
  File "src/lxml/parser.pxi", line 1127, in lxml.etree._BaseParser._parseDoc
  File "src/lxml/parser.pxi", line 601, in lxml.etree._ParserContext._handleParseResultDoc
  File "src/lxml/parser.pxi", line 711, in lxml.etree._handleParseResult
  File "src/lxml/parser.pxi", line 640, in lxml.etree._raiseParseError
  File "<string>", line 8
lxml.etree.XMLSyntaxError: xmlParseCharRef: invalid xmlChar value 8, line 8, column 22

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/pikepdf/models/metadata.py", line 308, in _load_from
    self._xmp = parse(BytesIO(data))
  File "src/lxml/etree.pyx", line 3467, in lxml.etree.parse
  File "src/lxml/parser.pxi", line 1856, in lxml.etree._parseDocument
  File "src/lxml/parser.pxi", line 1876, in lxml.etree._parseMemoryDocument
  File "src/lxml/parser.pxi", line 1764, in lxml.etree._parseDoc
  File "src/lxml/parser.pxi", line 1127, in lxml.etree._BaseParser._parseDoc
  File "src/lxml/parser.pxi", line 601, in lxml.etree._ParserContext._handleParseResultDoc
  File "src/lxml/parser.pxi", line 711, in lxml.etree._handleParseResult
  File "src/lxml/parser.pxi", line 640, in lxml.etree._raiseParseError
  File "<string>", line 8
lxml.etree.XMLSyntaxError: xmlParseCharRef: invalid xmlChar value 8, line 8, column 22

The above exception was the direct cause of the following exception:

Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/ocrmypdf/_sync.py", line 338, in run_pipeline
    exec_concurrent(context)
  File "/usr/lib/python3/dist-packages/ocrmypdf/_sync.py", line 295, in exec_concurrent
    pdf = post_process(pdf, context)
  File "/usr/lib/python3/dist-packages/ocrmypdf/_sync.py", line 175, in post_process
    pdf_out = metadata_fixup(pdf_out, context)
  File "/usr/lib/python3/dist-packages/ocrmypdf/_pipeline.py", line 731, in metadata_fixup
    with pdf.open_metadata() as meta:
  File "/usr/lib/python3/dist-packages/pikepdf/models/metadata.py", line 198, in wrapper
    self._load()
  File "/usr/lib/python3/dist-packages/pikepdf/models/metadata.py", line 300, in _load
    self._load_from(data)
  File "/usr/lib/python3/dist-packages/pikepdf/models/metadata.py", line 310, in _load_from
    raise PdfError() from e
pikepdf._qpdf.PdfError

```

**To Reproduce**
I was attempting to run OCR on an input PDF. I have successfully done OCR on other PDFs before, so something about this one
[There is Plenty of Room at The Bottom (1960) Feynman_ENGINEEERING and Science  CALTECH .pdf](https://github.com/jbarlow83/OCRmyPDF/files/4052148/There.is.Plenty.of.Room.at.The.Bottom.1960.Feynman_ENGINEEERING.and.Science.CALTECH.pdf) trips the program up for me.

The command I used was:

```bash
ocrmypdf   feynman_in.pdf feynman_out.pdf
```

**Example file**
[There is Plenty of Room at The Bottom (1960) Feynman_ENGINEEERING and Science  CALTECH .pdf](https://github.com/jbarlow83/OCRmyPDF/files/4052150/There.is.Plenty.of.Room.at.The.Bottom.1960.Feynman_ENGINEEERING.and.Science.CALTECH.pdf)

- [x] This is the input file
- [x] The file contains no personal or confidential information
- [x] I am the copyright holder for this file
- [ ] I permit this file to be included in the OCRmyPDF test suite under the CC-BY-SA 4.0 license
- [ ] I am not the copyright holder, but this file is available under a free software license

**Expected behavior**
A clear and concise description of what you expected to happen. Include screenshots if applicable.

**System:**

- OS: Ubuntu 19.10
- OCRmyPDF Version: 9.0.3+dfsg


Use logging.Filter to insert context (mainly, page number and temporary folder location since that serves a job ID) into the log data by pulling from thread local storage in exec_page_sync. Thread local storage would work even when the worker is a process.

This should make it finally possible to remove all cases of passing log= parameters, the last vestige of ruffus, while allowing individual modules to do no more than log = logging.getLogger... at top. Can then remove PickableLoggerMixin etc and manual management job context. Would need major rev bump.


--oversample 400 --deskew for example will increase the size of output images.

It's always worked this way, but this isn't strictly necessary to enlarge output images. 

It would make sense to run the image processing with oversampling too, so those tools can work on the oversampled images.

We could reduce images back to their input DPI after showing them to Tesseract.
VECTOR_PAGE_DPI check does not consider whether there is printable text on the page when asking if we should scale up rasterizing resolution, causing text to be rendered at low resolution when using `--force-ocr`.

See for example ICC's version4pdf.pdf (text + 100 DPI images).

Hey, it would be nice to sho the path-to-file in the terminal to know how long the scan needs to Finnish the task.
Sometime it seems to lag.. and I am not sure, if I should kill the process..

are there any clues?

In acrobat there is the possibility to set actions how pdf viewers should act when opening a file, like 

- **showing the title or the file name** or
- **showing the table of content** or
- showing a certain page (instead of page 1) or
- adjusting the window size
- ...


Is it possible to include switches into ocrmypdf to select especially the first two actions?
Is there an alternative method in linux without using acrobat?

Thanks!!
Hello! Thanks for this wonderful tool. 
I am working on Non-readable to Readable conversion.
While running the ocrmypdf command, the log shows an following warning:

Scan: 100%|██████████| 24/24 [00:00<00:00, 905.29page/s]
OCR:  85%|████████▌ | 20.5/24.0 [00:11<00:01,  1.90page/s]WARNING: Logging before flag parsing goes to stderr.
W1211 14:28:56.054816 140219944793856 tesseract.py:203]   22: [tesseract] lots of diacritics - possibly poor OCR
OCR: 100%|██████████| 24.0/24.0 [00:13<00:00,  1.83page/s]
JPEGs: 0image [00:00, ?image/s]
JBIG2: 0item [00:00, ?item/s]

From the above commands, ocrmypdf does not convert the page number 22 because of the quality of image.

So, I wanted to know is there any way to save the Possibly Poor OCR  page number while running ocrmypdf..??  (I also tried with ocrmypdf.configure_logging())
Hi,

there was a thread with the same problem that is closed meanwhile and did not solve my problem. I try to install ocrmypdf on ubuntu LTS 18.04 subsystem for Windows 10 I run into:

`src/qpdf/annotation.cpp:11:10: fatal error: qpdf/Constants.h: No such file or directory
     #include <qpdf/Constants.h>
              ^~~~~~~~~~~~~~~~~~
    compilation terminated.`
and subsequent errors.

What can I do?

