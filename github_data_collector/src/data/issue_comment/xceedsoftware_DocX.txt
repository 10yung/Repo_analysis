Hi there, 

When I change the font size on my paragraph to which I've inserted the page number/count, the size changes on all text except on the numbers themselves.
```
            var f = document.Footers.Odd;
            var p = f.InsertParagraph("Page /").FontSize(5);
            p.InsertPageNumber(PageNumberFormat.normal, 5);
            p.InsertPageCount(PageNumberFormat.normal, 7);
```
![image](https://user-images.githubusercontent.com/33848387/72150057-e81ba380-33a4-11ea-8493-653688730638.png)

Can you please assist.

Create Header or Footers, it has a newLine ,like thisï¼š

\n
This is the first page header
-------------------------------------------
later paragraph


I am getting  System.IO.IOException: Entries cannot be opened multiple times in Update mode. at System.IO.Compression.ZipArchiveEntry.OpenInUpdateMode()   while trying to merge two large docx file using below code

            List<string> arrayList = new List<string>();
            arrayList.Add(path + @"\API_Gateway_Implementation_Doc.docx");
            //arrayList.Add(path + @"\_.Net_Coding_Guidelines.docx");
            arrayList.Add(path + @"\Dumy.docx");

           using (DocX documentToCreate = DocX.Load(arrayList[0]))
            {
                foreach (var alItem in arrayList.Skip(1))
                {
                    documentToCreate.InsertParagraph().InsertPageBreakAfterSelf();
                    DocX documentToMergeIn = DocX.Load(alItem);
                    documentToCreate.InsertDocument(documentToMergeIn);
                }
                documentToCreate.SaveAs(path + @"\TestMerge_1.docx");
                Console.WriteLine("Merge Complited");
            }


Documents contain large images and tables as well as forms
DocX creates a Docx document but document is empty.
This is an attempt at support .NETStandard 2.1.

I know the code at the moment isn't looking very nice. This was just a spike to check while converting our main project to .NET Core 3 and I needed DocX.

Next steps;
  * Check that versioning with the assembly info is correct
  * Generate separate keys for the *.NETCore projects?
  * Consider how `WindowsIdentity.GetCurrent().Name` is used originally
I have a dutch windows and office on my pc. In dutch the . and , are switched in numbers according to english.

When I use the following code:
```var bulletedList = document.AddList(null, 0, ListItemType.Bulleted);
var list = document.AddListItem(bulletedList, "Test");
foreach (var item in bulletedList.Items)
  {
    item.IndentationBefore = 1.25f;
  }
paragraph.InsertListAfterSelf(bulletedList);
```
 
DocX add's:  `<w:ind w:left="712,5" />` to the document.xml file according to that bulletitem which is incorrect and word can't handle the file. The value should be 712.5.
Hello, 

I'm looking for a way to itterate into word content (paragraphe text, table, image) 

I made a code sample (see bellow), but havn't find the proper way to get the list of content 

for my test i used a file looking like this : 
![image](https://user-images.githubusercontent.com/52325106/67205061-31e09780-f40f-11e9-9551-87c46af14141.png)

what i'm trying to get it's a list of items looking like that :

- Line (item representing : First Line containing text and style)
- Line (item representing : Second line containing text and style)
- Line (item representing : Third line containing text and style)

- Table (item representing the table, containing rows/columns/cells/...)

- Line  (item representing : First Line after table  containing text and style)
- Line (item representing : Second line after table containing text and style)
- Line (item representing : Third line after table containing text and style)


the code sample I made (which seems to skip level like table) :
```
 var lDocxPath = @"D:\temp\testdocx\test.docx";

            using (DocX lDocX = DocX.Load(lDocxPath))
            {
                StringBuilder text = new StringBuilder();

                foreach (Xceed.Document.NET.Section lSection in lDocX.Sections)
                {
                    foreach (Xceed.Document.NET.Paragraph lPararagraphe in lSection.SectionParagraphs)
                    {
                        if (lPararagraphe.ParentContainer == ContainerType.Cell)
                        {
                            //I suppose i'm in table here
                            if (lPararagraphe.Text != "")
                            {
                                text.AppendLine(lPararagraphe.Text);
                            }
                        }
                        else
                        {
                            
                            if (lPararagraphe.Text != "")
                            {
                                text.AppendLine(lPararagraphe.Text);
                            }

                            if (lPararagraphe.Pictures.Any())
                            {
                                foreach (Xceed.Document.NET.Picture lPicture in lPararagraphe.Pictures)
                                {
                                    var lImage = lDocX.Images.Where(x => x.Id == lPicture.Id).FirstOrDefault();
                                    if (lImage == null)
                                    {
                                        text.AppendLine("IMAGE : " + lPicture.FileName);
                                    }
                                    else
                                    {
                                        var lB64 = Extensions.ConvertToBase64(lImage.GetStream(FileMode.Open, FileAccess.Read));
                                        text.AppendLine("IMAGE B64: " + lB64);
                                    }
                                }
                            }
                        }

                    }
                }


                // Show extracted text. 
                File.WriteAllText("test.txt", text.ToString());
            }
```

Does someone know if it's possible to do this with DocX ? 



Hi  - I am using DocX1.3.0 and I have a .docx with 12 pages. The doc is divided into 3 sections with page breaks and section breaks. When I do replacetext on text in the header it only applies to the last section (header after the last section break). Any ideas on how this can be fixed to modify all in all sections?

Thanks!
I have a Document. The first few lines look like this:

```
<FirstName> <LastName>
<Address> <City>
```

Between these two lines is a soft enter: shift+escape. When I try to replace text: 

```
...

private const RegexOptions _regexOptions = RegexOptions.IgnoreCase | RegexOptions.Compiled | RegexOptions.CultureInvariant;

...

public void MyMethod(Container container)
{
    container.ReplaceText("<Address>", "MyStreet 123", options: _regexOptions);
}
```
I get an exception: 

```
"Specified argument was out of the range of valid values."
```

Why does this happen? It only seems to happen if the previous line was ended with shift+enter. The same text, but with the preceding line ended with a normal enter does not throw an exception.