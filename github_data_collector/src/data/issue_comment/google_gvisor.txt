shutdown(s, SHUT_WR) in TIME-WAIT returns ENOTCONN

From RFC 793 s3.9 p61 Event Processing:

CLOSE Call during TIME-WAIT: return with "error: connection closing"

Fixes #1603

From [RFC 793 s3.9 p61 Event Processing](https://tools.ietf.org/html/rfc793#page-61):

CLOSE Call during TIME-WAIT: return with "error: connection closing"
Internal change.

Add syscalls for lgetxattr, fgetxattr, lsetxattr, and fsetxattr.

Note that these simply will use the same logic as getxattr and setxattr, which
is not yet implemented for most filesystems.

Add support for TCP_DEFER_ACCEPT.

recv() on a closed TCP socket returns ENOTCONN

From RFC 793 s3.9 p58 Event Processing:

If RECEIVE Call arrives in CLOSED state and the user has access to such a
connection, the return should be "error: connection does not exist"

Fixes #1598

From [RFC 793 s3.9 p58 Event Processing](https://tools.ietf.org/html/rfc793#page-58):

If RECEIVE Call arrives in CLOSED state and the user has access to such a
connection, the return should be "error: connection does not exist".
Make some of the fcntl flags arch specific..

Some of the flags in the file system related system call
are architecture specific(O_NOFOLLOW/O_DIRECT..). Ref to
the fcntl.h file in the Linux src codes.

Signed-off-by: Haibo Xu <haibo.xu@arm.com>
Change-Id: I354d988073bfd0c9ff5371d4e0be9da2b8fd019f
FUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/google/gvisor/pull/1505 from xiaobo55x:fcntl_flags de0d127ae61df783745880871a199ff86a720035

supporting sError in guest kernel on Arm64

For test case 'TestBounce', we use KVM_SET_VCPU_EVENTS to trigger sError.

Signed-off-by: Bin Lu <bin.lu@arm.com>
FUTURE_COPYBARA_INTEGRATE_REVIEW=https://github.com/google/gvisor/pull/1288 from lubinszARM:pr_ring0_6 c46a494ce4ed20f20cb61021a6a5183dce1eb499

When syscalls are called frequently, it cost much time to lookup internal addresses of usermem in CopyIn and CopyOut.
In many cases, the usermems passed into syscalls are repeated or in the same range. So use a cache to store frequently used usermem address mapping may accelerate the PMA lookup.