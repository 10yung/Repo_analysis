### Description
I'm trying to include third level entities and it's throwing exception

### Code

```
return _context.Lesson
                .IncludeFilter(x => x.LessonTime)
                .IncludeFilter(x => x.Grades)
                .IncludeFilter(x => x.Topics.Where(y => y.IsValid))
                .IncludeFilter(x => x.HomeWorks.Where(y => y.IsValid).Select(q => q.TaskFiles))
                .FirstOrDefaultAsync(x => x.Id == lessonId);
```

### Exception

```
An unhandled exception has occurred while executing the request.
System.InvalidOperationException: Processing of the LINQ expression '(source) => (IEnumerable<LessonTime>)source' by 'NavigationExpandingExpressionVisitor' failed. This may indicate either a bug or a limitation in EF Core. See https://go.microsoft.com/fwlin
k/?linkid=2101433 for more detailed information.
   at Microsoft.EntityFrameworkCore.Query.Internal.NavigationExpandingExpressionVisitor.ProcessSelectMany(NavigationExpansionExpression source, LambdaExpression collectionSelector, LambdaExpression resultSelector)
   at Microsoft.EntityFrameworkCore.Query.Internal.NavigationExpandingExpressionVisitor.VisitMethodCall(MethodCallExpression methodCallExpression)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.ExpressionVisitor.Visit(Expression node)
   at Microsoft.EntityFrameworkCore.Query.Internal.NavigationExpandingExpressionVisitor.ExpandAndReduce(Expression query, Boolean applyInclude)
   at Microsoft.EntityFrameworkCore.Query.Internal.NavigationExpandingExpressionVisitor.Expand(Expression query)
   at Microsoft.EntityFrameworkCore.Query.QueryTranslationPreprocessor.Process(Expression query)
   at ?.?(IQueryable ?, Action`1 ?, RelationalQueryContext& ?, Object& ?)
   at Z.EntityFramework.Extensions.EFPlusExtensions.EFPlusCreateCommand(IQueryable source, Action`1 action, RelationalQueryContext& queryContext, Object& compiledQuery)
   at Z.EntityFramework.Plus.BaseQueryFuture.CreateExecutorAndGetCommand(RelationalQueryContext& queryContext)
   at Z.EntityFramework.Plus.QueryFutureBatch.CreateCommandCombined()
   at Z.EntityFramework.Plus.QueryFutureBatch.ExecuteQueries()
   at Z.EntityFramework.Plus.QueryFutureValue`1.get_Value()
   at Z.EntityFramework.Plus.QueryIncludeFilterProvider`1.Execute[TResult](Expression expression)
   at System.Linq.Queryable.FirstOrDefault[TSource](IQueryable`1 source, Expression`1 predicate)

```

### Further technical details
- EF version: 3.0.0
- EF Plus version: 3.0.32
- Database Provider: Microsoft.EntityFrameworkCore.SqlServer" Version="3.0.0"

### Description
Batch Update in EF Core with pgsql throw exception `column reference "Id" is ambiguous`

My Code 
```` 
await db.Customers
.Where(x => lstIds.Contains(x.Id))
.UpdateAsync(x => new Customer{
     Status = CustomerStatus.Deleted
});
````

Sql Command 
````
UPDATE "Customers"
SET "Status" = $1
WHERE EXISTS ( SELECT 1 FROM (SELECT x."Id", x."Address", x."AffSid", x."ApplicationUserId", x."Avatar", x."BankName", x."BankNumber", x."BigDataId", x."Code", x."CreateDate", x."Day", x."Email", x."FacebookId", x."Fax", x."FirstName", x."FullName", x."Gender", x."IdCard", x."IdCardIssued", x."IdCardProvince", x."IsRecommender", x."IsStaff", x."LastName", x."Month", x."Notes", x."Phone", x."PhoneOther", x."Rate", x."RecommenderId", x."RsWifiId", x."Status", x."SyncApiCustomerId", x."SyncApiDate", x."TaxCode", x."Year", x."ZaloId", x."Id", x."Location_DistrictId", x."Location_ProvinceId", x."Location_WardId"
FROM "Customers" AS x
WHERE x."Id" IN (1)) B
               WHERE "Customers"."Id" = B."Id"
           )
````


### Exception
If you are seeing an exception, include the full exceptions details (message and stack trace).

```
Exception message: 42702: column reference "Id" is ambiguous
Stack trace: at Npgsql.NpgsqlConnector.<>c__DisplayClass161_0.<<ReadMessage>g__ReadMessageLong|0>d.MoveNext() in C:\projects\npgsql\src\Npgsql\NpgsqlConnector.cs:line 1012
--- End of stack trace from previous location where exception was thrown ---
   at Npgsql.NpgsqlConnector.<>c__DisplayClass161_0.<<ReadMessage>g__ReadMessageLong|0>d.MoveNext() in C:\projects\npgsql\src\Npgsql\NpgsqlConnector.cs:line 1032
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Npgsql.NpgsqlDataReader.NextResult(Boolean async, Boolean isConsuming) in C:\projects\npgsql\src\Npgsql\NpgsqlDataReader.cs:line 444
   at Npgsql.NpgsqlDataReader.NextResult() in C:\projects\npgsql\src\Npgsql\NpgsqlDataReader.cs:line 332
   at Npgsql.NpgsqlCommand.ExecuteDbDataReader(CommandBehavior behavior, Boolean async, CancellationToken cancellationToken) in C:\projects\npgsql\src\Npgsql\NpgsqlCommand.cs:line 1217
   at System.Threading.Tasks.ValueTask`1.get_Result()
   at Npgsql.NpgsqlCommand.ExecuteNonQuery(Boolean async, CancellationToken cancellationToken) in C:\projects\npgsql\src\Npgsql\NpgsqlCommand.cs:line 1042
   at Npgsql.NpgsqlCommand.ExecuteNonQuery() in C:\projects\npgsql\src\Npgsql\NpgsqlCommand.cs:line 1025
   at Z.EntityFramework.Extensions.BatchUpdate.Execute[T](IQueryable`1 query, Expression`1 updateFactory)
   at BatchUpdateExtensions.UpdateFromQuery[T](IQueryable`1 query, Expression`1 updateFactory, Action`1 batchUpdateBuilder)
   at Z.EntityFramework.Plus.BatchUpdateExtensions.Update[T](IQueryable`1 query, Expression`1 updateFactory, Action`1 batchUpdateBuilder)
   at Z.EntityFramework.Plus.BatchUpdateExtensions.<>c__DisplayClass2_0`1.<UpdateAsync>b__0()
   at System.Threading.Tasks.Task`1.InnerInvoke()
   at System.Threading.Tasks.Task.<>c.<.cctor>b__275_1(Object obj)
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
--- End of stack trace from previous location where exception was thrown ---
   at System.Threading.ExecutionContext.RunInternal(ExecutionContext executionContext, ContextCallback callback, Object state)
   at System.Threading.Tasks.Task.ExecuteWithThreadLocal(Task& currentTaskSlot)
--- End of stack trace from previous location where exception was thrown ---
   at Redsand.Site.Api.CustomerController.BulkRemove(String ids) in D:\ECRM-2018\Api\Customer\CustomerController.cs:line 335
```


### Further technical details
- EF version: 2.2
- EF Plus version: 2.2.32
- Database Provider: Postgresql

Hi I am using the  Z.EntityFramework.Plus with enityframework in my blazor app for audit Tracking.
I have one parent class Client and and onother child  Address in same entity.

But when I change the address object value in Client and I'll try to save it, it's doesn't work.If I don't use below forrmt then 
it's difficlut for me to track the enityt update because  Z.EntityFramework.Plus reuireq manually update entry for audit login for every enity which i updated.


Only update Client object if I used below approch and only track the client modification which I did.

```csharp
 using (var scope = _ServiceScopeFactory.CreateScope())
                {
                    var referenceContext = scope.ServiceProvider.GetService<ApplicationDbContext>();

                    // Use for Audit Logging
                    var audit = new Audit();
                    audit.CreatedBy = client.LastModifiedBy;
                    var originalClient = client;

                    client.LastModifiedAt = DateTime.UtcNow;
                    referenceContext.Entry(originalClient.Address).CurrentValues.SetValues(client.Address);
                    referenceContext.Entry(originalClient).CurrentValues.SetValues(client);
                   
                    //Pass Audit Insatnce for Audit Logging
                    referenceContext.SaveChanges(audit);				
					}
```

It's work if I follow below approch but using this i don't able to track the audit of any entity. 

```csharp
 using (var scope = _ServiceScopeFactory.CreateScope())
                {
				  var referenceContext = scope.ServiceProvider.GetService<ApplicationDbContext>();
				   referenceContext.Entry(Address).State = EntityState.Modified;
				  referenceContext.Entry(Client).State = EntityState.Modified;
				  referenceContext.SaveChanges();
				}


 public class Client : AuditInfo
    {
        [Required]
        public int Id { get; set; }

        [Required, MaxLength(35, ErrorMessage = "Sorry You are Exceeding the chracter Limit for First Name.")]
        [RegularExpression("^([a-zA-Z]+[,.]?[ ]?|[a-zA-Z]+['-]?)+$", ErrorMessage = "First Name must contain charcter only.")]
        public string FirstName { get; set; }

        [MaxLength(35, ErrorMessage = "Sorry You are Exceeding the chracter Limit for Middle Name.")]
        [RegularExpression("^([a-zA-Z]+[,.]?[ ]?|[a-zA-Z]+['-]?)+$", ErrorMessage = "Middle Name must contain charcter only.")]
        public string MiddleName { get; set; }

        [Required, MaxLength(35, ErrorMessage = "Sorry You are Exceeding the chracter Limit for Last Name.")]
        [RegularExpression("^([a-zA-Z]+[,.]?[ ]?|[a-zA-Z]+['-]?)+$", ErrorMessage = "Last Name must contain charcter only.")]
        public string LastName { get; set; }

        [Required, MaxLength(35)]
        public string Gender { get; set; }

        [Required]
        [DataType(DataType.Date), Column(TypeName = "date")]
        public DateTime DateOfBirth { get; set; }

        [ValidateComplexType]
        public Address Address { get; set; }
		
	}
	
	 public class Address : AuditInfo
    {
        [Required]
        public int Id { get; set; }

        [Required, MaxLength(1024, ErrorMessage = "Sorry You are Exceeding the chracter Limit for First Line.")]
        public string FirstLine { get; set; }

        public string SecondLine { get; set; }

        [Required(ErrorMessage = "Please select the Province"), MaxLength(256, ErrorMessage = "Sorry You are Exceeding the chracter Limit for Province.")]
        public string Province { get; set; }

        [Required, MaxLength(256, ErrorMessage = "Sorry You are Exceeding the chracter Limit for City.")]
        [RegularExpression("^([a-zA-Z]+[,.]?[ ]?|[a-zA-Z]+['-]?)+$", ErrorMessage = "City Name contain charcter only.")]
        public string City { get; set; }

        [Required, MaxLength(256, ErrorMessage = "Sorry You are Exceeding the chracter Limit for PostalCode.")]
        public string PostalCode { get; set; }

        [Required]
        public bool IsActive { get; set; }
 }
```
### Description

In my DbContext I have entities that use Net Topology Suite's Point and Polygon objects for properties. When attempting to use `FutureValue()` (and probably `Future()`) to select an entity results in an exception.

### Exception

```
System.InvalidCastException: Unable to cast object of type 'Z.EntityFramework.Plus.CreateEntityDataReader' to type 'Microsoft.Data.SqlClient.SqlDataReader'.
   at lambda_method(Closure , QueryContext , DbDataReader , ResultContext , Int32[] , ResultCoordinator )
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Z.EntityFramework.Plus.QueryFutureValue`1.SetResult(DbDataReader reader)
   at Z.EntityFramework.Plus.QueryFutureBatch.ExecuteQueries()
   at Z.EntityFramework.Plus.QueryFutureValue`1.get_Value()
   at REMOVED.App.Portal.Devices.Arm.CommandHandler.Handle(Command command, CancellationToken cancellationToken) in E:\Software Development\REMOVED\REMOVED.App.Portal\Features\Devices\Arm.cs:line 42
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestExceptionActionProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPostProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at MediatR.Pipeline.RequestPreProcessorBehavior`2.Handle(TRequest request, CancellationToken cancellationToken, RequestHandlerDelegate`1 next)
   at REMOVED.App.Portal.Devices.DevicesController.Arm(Int32 id) in E:\Software Development\REMOVED\REMOVED.App.Portal\Features\Devices\DevicesController.cs:line 50
   at Microsoft.AspNetCore.Mvc.Infrastructure.ActionMethodExecutor.TaskOfIActionResultExecutor.Execute(IActionResultTypeMapper mapper, ObjectMethodExecutor executor, Object controller, Object[] arguments)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeActionMethodAsync>g__Awaited|12_0(ControllerActionInvoker invoker, ValueTask`1 actionResultValueTask)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.<InvokeNextActionFilterAsync>g__Awaited|10_0(ControllerActionInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Rethrow(ActionExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ControllerActionInvoker.InvokeInnerFilterAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeNextResourceFilter>g__Awaited|24_0(ResourceInvoker invoker, Task lastTask, State next, Scope scope, Object state, Boolean isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Rethrow(ResourceExecutedContextSealed context)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.Next(State& next, Scope& scope, Object& state, Boolean& isCompleted)
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.InvokeFilterPipelineAsync()
--- End of stack trace from previous location where exception was thrown ---
   at Microsoft.AspNetCore.Mvc.Infrastructure.ResourceInvoker.<InvokeAsync>g__Logged|17_1(ResourceInvoker invoker)
   at Microsoft.AspNetCore.Routing.EndpointMiddleware.<Invoke>g__AwaitRequestTask|6_0(Endpoint endpoint, Task requestTask, ILogger logger)
   at REMOVED.App.ApplicationUserMiddleware.InvokeAsync(HttpContext context, ApplicationUserServices services) in E:\Software Development\REMOVED\REMOVED.App\Middlewares\ApplicationUserMiddleware.cs:line 49
   at Microsoft.AspNetCore.Authorization.AuthorizationMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Authentication.AuthenticationMiddleware.Invoke(HttpContext context)
   at Arex388.AspNetCore.HtmlMinifierMiddleware.InvokeAsync(HttpContext context)
   at Arex388.AspNetCore.AntiFaviconMiddleware.InvokeAsync(HttpContext context)
   at StackExchange.Profiling.MiniProfilerMiddleware.Invoke(HttpContext context) in C:\projects\dotnet\src\MiniProfiler.AspNetCore\MiniProfilerMiddleware.cs:line 107
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.MigrationsEndPointMiddleware.Invoke(HttpContext context)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.EntityFrameworkCore.DatabaseErrorPageMiddleware.Invoke(HttpContext httpContext)
   at Microsoft.AspNetCore.Diagnostics.DeveloperExceptionPageMiddleware.Invoke(HttpContext context)
```

EF Plus seems to be having a hard time with NTS, but it is the officially recommended library for geospatial data with SQL Server so I'm kind of stuck.

### Further technical details
- EF version: 3.1.0
- EF Plus version: 3.0.32
- Database Provider: SQL Server

### Description
We are using IncludeFilter to get elements filtering by some property. 

In our example we have one entity called **Tariff** wich has childs called **SubElement**.
When we try to get a set of elements of **Tariff** with some of the **SubElements** using IncludeFilter it throws an exception.

The code that throws the exception:

```
using (var ctx = new MyDbContext(optionsBuilder.Options))
{
       PrepareDatabase(ctx);

       try
       {
              var set2 = ctx.Tariffs.IncludeFilter(f => f.SubElements.Where(s=> s.IsSoftDeleted == true)).ToList();
       }
              catch (Exception ex)
       {
             Console.WriteLine(ex.Message);
             throw ex;
       }             
}
```


### Exception
```
Exception message: Cannot set MySqlCommand.CommandText when there is an open DataReader for this command; it must be closed first.
Stack trace:    at MySql.Data.MySqlClient.MySqlCommand.set_CommandText(String value) in C:\projects\mysqlconnector\src\MySqlConnector\MySql.Data.MySqlClient\MySqlCommand.cs:line 150
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.CreateCommand(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlConverterCommandBuilderFactory.MySqlConverterRelationalCommandBuilder.MySqlConverterRelationalCommand.Execute(IRelationalConnection connection, DbCommandMethod executeMethod, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Storage.Internal.RelationalCommand.ExecuteReader(IRelationalConnection connection, IReadOnlyDictionary`2 parameterValues)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.BufferlessMoveNext(DbContext _, Boolean buffer)
   at Pomelo.EntityFrameworkCore.MySql.Storage.Internal.MySqlExecutionStrategy.Execute[TState,TResult](TState state, Func`3 operation, Func`3 verifySucceeded)
   at Microsoft.EntityFrameworkCore.Query.Internal.QueryingEnumerable`1.Enumerator.MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider._TrackEntities[TOut,TIn](IEnumerable`1 results, QueryContext queryContext, IList`1 entityTrackingInfos, IList`1 entityAccessors)+MoveNext()
   at Microsoft.EntityFrameworkCore.Query.Internal.LinqOperatorProvider.ExceptionInterceptor`1.EnumeratorExceptionInterceptor.MoveNext()
   at Z.EntityFramework.Plus.QueryFutureEnumerable`1.SetResult(IEnumerator`1 enumerator)
   at Z.EntityFramework.Plus.QueryFutureEnumerable`1.SetResult(DbDataReader reader)
   at Z.EntityFramework.Plus.QueryFutureBatch.ExecuteQueries()
   at Z.EntityFramework.Plus.QueryFutureEnumerable`1.GetEnumerator()
   at System.Collections.Generic.List`1.AddEnumerable(IEnumerable`1 enumerable)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.CreateEnumerable()
   at Z.EntityFramework.Plus.QueryIncludeFilterParentQueryable`1.GetEnumerator()
   at System.Collections.Generic.List`1.AddEnumerable(IEnumerable`1 enumerable)
   at System.Linq.Enumerable.ToList[TSource](IEnumerable`1 source)
   at EfPlusPomelo.Program.Main(String[] args) in C:\proyectos\EfPlusPomelo\Program.cs:line 21
```

### Fiddle or Project
[EfPlusPomelo.zip](https://github.com/zzzprojects/EntityFramework-Plus/files/3983424/EfPlusPomelo.zip)


### Further technical details
- EF version: 2.2.6
- EF Plus version: 2.0.31
- Database Provider: Pomelo.EntityFrameworkCore.MySql 2.2.6

### Description
Attempting to call `.Update()` on a query for a table with `.HasNoKey()` set on its model builder throws an exception [here](https://github.com/zzzprojects/EntityFramework-Plus/blob/4182a3930724088cd2262a84d1f9ec93d595343a/src/shared/Z.EF.Plus.BatchUpdate.Shared/BatchUpdate.cs#L836).

I have a keyless table for holding app config values that has only one row. I would like to run a statement like:

```sql
UPDATE "Configuration" SET "SomeConfigValue" = 123;
```

I've tried several variations of EF queries:

```csharp
await _context.Configuration
  .UpdateAsync(c => new Configuration { SomeConfigValue = 9999 });
await _context.Configuration.Where(x => true)
  .UpdateAsync(c => new Configuration { SomeConfigValue = 9999 });
```

### Exception
```
System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection. (Parameter 'index')
   at System.Collections.Generic.List`1.get_Item(Int32 index)
   at Z.EntityFramework.Plus.BatchUpdate.CreateCommand(IQueryable query, IEntityType entity, List`1 values)
   at Z.EntityFramework.Plus.BatchUpdate.Execute[T](IQueryable`1 query, Expression`1 updateFactory)
   at Z.EntityFramework.Plus.BatchUpdateExtensions.Update[T](IQueryable`1 query, Expression`1 updateFactory, Action`1 batchUpdateBuilder)
   at Z.EntityFramework.Plus.BatchUpdateExtensions.<>c__DisplayClass2_0`1.<UpdateAsync>b__0()
```

### Further technical details
- EF version: EF Core 3.1
- EF Plus version: 3.0.24
- Database Provider: Postgres

I have a problem with this code:

    using (var context = new DataContext())
    {
        context.Order
            .Where(order => order.OrderId == 1)
            .Update(x => new Order()
            {
               Comment = (x.Comment != null ? x.Comment + "\r\n" : "") + " TEST" 
            });
    }

    public partial class Order
    {
        public int OrderId { get; set; }
        public string Comment { get; set; }
    }
}

### Exception
[SqlException (0x80131904): The multi-part identifier "order.Comment" could not be bound.
The multi-part identifier "order.Comment" could not be bound.]
   System.Data.SqlClient.SqlConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction) +266
   System.Data.SqlClient.SqlInternalConnection.OnError(SqlException exception, Boolean breakConnection, Action`1 wrapCloseInAction) +98
   System.Data.SqlClient.TdsParser.ThrowExceptionAndWarning(TdsParserStateObject stateObj, Boolean callerHasConnectionLock, Boolean asyncClose) +988
   System.Data.SqlClient.TdsParser.TryRun(RunBehavior runBehavior, SqlCommand cmdHandler, SqlDataReader dataStream, BulkCopySimpleResultSet bulkCopyHandler, TdsParserStateObject stateObj, Boolean& dataReady) +6523
   System.Data.SqlClient.SqlCommand.RunExecuteNonQueryTds(String methodName, Boolean async, Int32 timeout, Boolean asyncWrite) +1491
   System.Data.SqlClient.SqlCommand.InternalExecuteNonQuery(TaskCompletionSource`1 completion, String methodName, Boolean sendToPipe, Int32 timeout, Boolean& usedCache, Boolean asyncWrite, Boolean inRetry) +523
   System.Data.SqlClient.SqlCommand.ExecuteNonQuery() +387
   Z.EntityFramework.Plus.BatchUpdate.Execute(IQueryable`1 query, Expression`1 updateFactory) +2474
   Z.EntityFramework.Plus.BatchUpdateExtensions.Update(IQueryable`1 query, Expression`1 updateFactory, Action`1 batchUpdateBuilder) +194
   Z.EntityFramework.Plus.BatchUpdateExtensions.Update(IQueryable`1 query, Expression`1 updateFactory) +82

### Generated SQL

    UPDATE A 
    SET A.[Comment] = CASE
        WHEN [order].[Comment] IS NOT NULL
        THEN [order].[Comment] + N'
    ' ELSE N''
    END + N' TEST'
    FROM [Order] AS A
    INNER JOIN ( SELECT [order].[OrderId], [order].[AccessOpenCode]...
    FROM [Order] AS [order]
    WHERE [order].[OrderId] = 1
               ) AS B ON A.[OrderId] = B.[OrderId]


### Further technical details
Z.EntityFramework.Extensions.EFCore version="2.7.20"
Z.EntityFramework.Plus.EFCore" version="2.0.24"
Z.Expressions.Eval" version="3.0.7"
Microsoft.EntityFrameworkCore" version="2.2.6"
Database Provider: MSSQL
.NET 4.8

### Description
I'd like to do an update that translates roughly to the following SQL (in Postgres flavor):
```
update Foo f
set Rank = (select count(*) from Foo f2 where f2.GroupId = f.GroupId and f2.Score > f.Score) + 1,
  Status = 2
where f.Status = 1
```
In C#, I'd expect it to look something like:
```
await db.Foo.Where(f => f.Status == 1)
    .UpdateAsync(f => new Foo {
        Rank = db.Foos.Count(f2 => f2.GroupId == f.GroupId && f2.Score > f.Score) + 1
    });
```
### Exception
This is what happens when I execute the code above:
```
System.InvalidOperationException : variable 'f' of type 'Foo' referenced from scope '', but it is not defined
   at System.Linq.Expressions.Compiler.VariableBinder.Reference(ParameterExpression node, VariableStorageKind storage)
   at System.Linq.Expressions.Compiler.VariableBinder.VisitParameter(ParameterExpression node)
   at System.Linq.Expressions.ParameterExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitMember(MemberExpression node)
   at System.Linq.Expressions.MemberExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.Visit(ReadOnlyCollection`1 nodes)
   at System.Linq.Expressions.Compiler.VariableBinder.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.Compiler.VariableBinder.VisitUnary(UnaryExpression node)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.VisitBinary(BinaryExpression node)
   at System.Linq.Expressions.BinaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.Visit(ReadOnlyCollection`1 nodes)
   at System.Linq.Expressions.Compiler.VariableBinder.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.Compiler.VariableBinder.VisitUnary(UnaryExpression node)
   at System.Linq.Expressions.UnaryExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Dynamic.Utils.ExpressionVisitorUtils.VisitArguments(ExpressionVisitor visitor, IArgumentProvider nodes)
   at System.Linq.Expressions.ExpressionVisitor.VisitMethodCall(MethodCallExpression node)
   at System.Linq.Expressions.MethodCallExpression.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.ExpressionVisitor.Visit(ReadOnlyCollection`1 nodes)
   at System.Linq.Expressions.Compiler.VariableBinder.VisitLambda[T](Expression`1 node)
   at System.Linq.Expressions.Expression`1.Accept(ExpressionVisitor visitor)
   at System.Linq.Expressions.Compiler.VariableBinder.Visit(Expression node)
   at System.Linq.Expressions.Compiler.LambdaCompiler.Compile(LambdaExpression lambda)
   at Z.EntityFramework.Plus.BatchUpdate.GetInnerValues[T](IQueryable`1 query, Expression`1 updateFactory, IEntityType entity)
   at Z.EntityFramework.Plus.BatchUpdate.Execute[T](IQueryable`1 query, Expression`1 updateFactory)
   at Z.EntityFramework.Plus.BatchUpdateExtensions.Update[T](IQueryable`1 query, Expression`1 updateFactory, Action`1 batchUpdateBuilder)
   at Z.EntityFramework.Plus.BatchUpdateExtensions.<>c__DisplayClass2_0`1.<UpdateAsync>b__0()
```

### Further technical details
- EF version: 3.1.0 preview 3
- EF Plus version: 3.0.23
- Database Provider: Npgsql

Reference: https://stackoverflow.com/questions/58711828/how-to-use-code-first-with-entityframework-plus-audit-feature
### Description
when use `Z.EntityFramework.Plus.EFCore` how to log sql script to terminal in development environment.
in development environment when I use `Microsoft.EntityFrameworkCore`, I can find sql script in terminal.

### Further technical details
- EF Core version: 3.0
- EF Plus version:  3.0.13
