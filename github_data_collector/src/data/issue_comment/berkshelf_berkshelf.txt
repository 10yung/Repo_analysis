When running `berks verify` I get the following trace:
```ruby
ArgumentError Cannot find cookbook test_cookbook unless Chef::Config.cookbook_path is set or an explicit cookbook path is given. Path /home/user/.berkshelf/cookbooks/test_cookbook-0.2.3.
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/chef-15.6.10/lib/chef/cookbook/syntax_check.rb:95:in `for_cookbook'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/cached_cookbook.rb:154:in `validate'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/validator.rb:14:in `block in validate'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/validator.rb:12:in `each'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/validator.rb:12:in `validate'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/berksfile.rb:702:in `verify'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/cli.rb:385:in `verify'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/command.rb:27:in `run'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/invocation.rb:126:in `invoke_command'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor.rb:387:in `dispatch'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/cli.rb:47:in `dispatch'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/base.rb:466:in `start'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/cli.rb:23:in `execute!'
	/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/bin/berks:5:in `<top (required)>'
	/bin/berks:363:in `load'
	/bin/berks:363:in `<main>'
```
The problem seems to be possibly [syntax_check.rb#L89](https://github.com/chef/chef/blob/master/lib/chef/cookbook/syntax_check.rb#L89) as the cookbook name is appended to the expanded path which will not exist and will always `raise`. The removal of `File.join` does seem to fix it.
    C:\git\test (master) × berks --version
    7.0.8

I have an issue with Berkshelf resolving chained git dependencies. 

I have a test cookbook I generated to narrow down the issue, this cookbook depends on the cookbook `windows-automation` via a git reference. 

### test Berksfile

    # frozen_string_literal: true
    source 'https://supermarket.chef.io'
    
    cookbook 'win-telegraf', path: '../win-telegraf/'
    cookbook 'windows-automation', '~> 0.4.0', git: 'git@git.osky.io:ops/chef-windows-automation.git', branch: 'master'
    # cookbook 'windows-library', '~> 0.1.0', git: 'git@git.osky.io:ops/chef-windows-library.git', branch: 'master'
    
    metadata

### test metadata.rb

    depends 'win-telegraf'
    
    depends 'windows-automation', '~> 0.4.0'
    # depends 'windows-library',  '~> 0.1.0'


`windows-automation` depends on `windows-library` via another git reference

### windows-automation Berksfile

    source 'https://supermarket.chef.io'
    
    metadata
    
    cookbook 'powershell', '~> 6.1.3'
    cookbook 'windows', '~> 4.2.5'
    
    # cookbook 'windows-library', path: '../chef-windows-library'
    cookbook 'windows-library', '~> 0.1.0', git: 'git@git.osky.io:ops/chef-windows-library.git', branch: 'master'

### windows-automation metadata

    supports 'windows'
    
    depends 'powershell', '~> 6.1.3'
    depends 'windows-library', '~> 0.1.0'

 This issue comes when I try to run `berks install` for the test cookbook. I get the following output

    C:\git\test (master) × berks install
    Resolving cookbook dependencies...
    Fetching 'test' from source at .
    Fetching 'win-telegraf' from source at ../win-telegraf
    Fetching 'windows-automation' from git@git.osky.io:ops/chef-windows-automation.git (at master)
    Fetching cookbook index from https://supermarket.chef.io...
    Unable to satisfy constraints on package windows-library, which does not exist, due to solution constraint (test = 0.1.0). Solution constraints that may result in a constraint on windows-library: [(test = 0.1.0) -> (windows-automation = 0.4.0) -> (windows-library >= 0.0.0)], [(windows-automation = 0.4.0) -> (windows-library >= 0.0.0)]
    Missing artifacts: windows-library
    Demand that cannot be met: (test = 0.1.0)
    Unable to find a solution for demands: test (0.1.0), win-telegraf (0.1.0), windows-automation (0.4.0)


This issue gets resolved if in the test cookbook I add a dependency to windows-library. But I am wondering why berkshelf cannot resolve this without the dependency. I feel like I should not need to explicitly depend on all transitive git dependencies. 
### Description

This changes resolves long stack traces on http errors when using chef-guard:

```
> /opt/chef/embedded/bin/berks upload foobar
E, [2019-12-05T08:31:28.836260 #1726] ERROR -- : Net::HTTPServerException: 412 "Precondition Failed"
E, [2019-12-05T08:31:28.837087 #1726] ERROR -- : /opt/chef/embedded/lib/ruby/2.6.0/net/http/response.rb:122:in `error!'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/chef-15.4.45/lib/chef/http.rb:152:in `request'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/chef-15.4.45/lib/chef/http.rb:123:in `put'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/chef-15.4.45/lib/chef/cookbook_uploader.rb:103:in `block in upload_cookbooks'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/chef-15.4.45/lib/chef/cookbook_uploader.rb:97:in `each'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/chef-15.4.45/lib/chef/cookbook_uploader.rb:97:in `upload_cookbooks'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/uploader.rb:79:in `block (2 levels) in upload'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/uploader.rb:61:in `map'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/uploader.rb:61:in `block in upload'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/ridley_compat.rb:56:in `new_client'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf.rb:172:in `ridley_connection'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/uploader.rb:55:in `upload'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/uploader.rb:42:in `run'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/berksfile.rb:580:in `upload'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/cli.rb:195:in `upload'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/command.rb:27:in `run'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/invocation.rb:126:in `invoke_command'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor.rb:387:in `dispatch'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/cli.rb:47:in `dispatch'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/base.rb:466:in `start'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/cli.rb:23:in `execute!'
/opt/chef/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/bin/berks:5:in `<top (required)>'
/opt/chef/embedded/bin/berks:23:in `load'
/opt/chef/embedded/bin/berks:23:in `<main>'
There was an error connecting to the Chef Server
```

Versus:
```
> /opt/chef/embedded/bin/berks upload foobar

=== Cookbook Compare errors found ===
The following file(s) are changed:
 - metadata.rb

Make sure all your changes are merged into the central
repositories before trying to upload the cookbook again.

HINT: Also double check your line endings (CRLF vs LF)!
=====================================
```

### Issues Resolved

[List any existing issues this PR resolves, or any Discourse or
StackOverflow discussion that's relevant]

### Check List

- [ ] New functionality includes tests
- [ ] All tests pass
- [ ] RELEASE\_NOTES.md has been updated if required (not required for bugfixes, required for API changes)
### Description

This PR changes the way berks fetches git repository dependencies from cloning locally to cloning a remote repository with a `--reference` to the local checkout. Without this change berks fails to fetch repositories that use git-lfs because git-lfs doesn't support fetching files from a local checkout.

I've confirmed that this patch fixes the issue we saw in #1825.

### Issues Resolved

Fixes #1825

### Check List

- [x] New functionality includes tests
- [x] All tests pass
- [ ] RELEASE\_NOTES.md has been updated if required (not required for bugfixes, required for API changes)
We have a Chef cookbook that uses git-lfs to store some binaries. If we depend on it from other cookbooks, berkshelf fails to fetch it during `berks install` like this:

```
Fetching 'some-cookbook' from git@git.example.com:chef/some-cookbook.git (at master)
Git error: command `git reset --hard 977350841d8984d56feb3b98faed6a86b22efb79` failed. If this error persists, try remo
ving the cache directory at '/home/maoe/.berkshelf/.cache/git/e41334cf49b248784779d83338e08899eee8ef5d'.Output from the
 command:


hint: The remote resolves to a file:// URL, which can only work with a
hint: standalone transfer agent.  See section "Using a Custom Transfer Type
hint: without the API server" in custom-transfers.md for details.
Downloading files/default/some-binary.ubuntu-16.04 (152 MB)

hint: The remote resolves to a file:// URL, which can only work with a
hint: standalone transfer agent.  See section "Using a Custom Transfer Type
hint: without the API server" in custom-transfers.md for details.
Error downloading object: files/default/some-binary.ubuntu-16.04 (d297b69): Smudge error: Error downloading files/default/some-binary.ubuntu-16.04 (d297b6970253e17f5e835261ca7645d364a0a23cd73b25ad30ae1f3e4c6fd506): batch request: missing protocol: "file:///home/maoe/.berkshelf/.cache/git/e41334cf49b248784779d83338e08899eee8ef5d/.git/info/lfs"

Errors logged to /tmp/d20190917-15282-4oev7p/.git/lfs/logs/20190917T111501.394111993.log
Use `git lfs logs last` to view the log.
error: external filter 'git-lfs filter-process' failed
fatal: files/default/some-cookbook.ubuntu-16.04: smudge filter lfs failed

        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/mixin/git.rb:24:in `git'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/locations/git.rb:57:in `block in install'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/locations/git.rb:55:in `chdir'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/locations/git.rb:55:in `install'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/installer.rb:193:in `block in download_locations'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/installer.rb:190:in `each'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/installer.rb:190:in `download_locations'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/installer.rb:160:in `install_from_universe'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/installer.rb:43:in `run'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/berksfile.rb:405:in `install'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/cli.rb:131:in `install'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/thor-0.20.3/lib/thor/command.rb:27:in `run'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/thor-0.20.3/lib/thor/invocation.rb:126:in `invoke_command'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/thor-0.20.3/lib/thor.rb:387:in `dispatch'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/cli.rb:47:in `dispatch'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/thor-0.20.3/lib/thor/base.rb:466:in `start'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/lib/berkshelf/cli.rb:23:in `execute!'
        /opt/chefdk/embedded/lib/ruby/gems/2.5.0/gems/berkshelf-7.0.7/bin/berks:5:in `<top (required)>'
        /usr/bin/berks:306:in `load'
        /usr/bin/berks:306:in `<main>'
```

Apparently this happens because berkshelf [clones a bare repository as a cache and clone it to another workspace locally](https://github.com/berkshelf/berkshelf/blob/v7.0.7/lib/berkshelf/locations/git.rb#L39-L57), but unfortunately git-lfs [doesn't support fetching from local repositories](https://github.com/git-lfs/git-lfs/issues/3073) so `git reset --hard #{@revision}` fails with the error messages above.

I guess we can do either of the following:

* Use `git %{clone --no-checkout --reference="#{cache_path}" #{url} "#{scratch_path}"}`
    * This way the origin would be set to `url` instead of `cache_path`. It could be slower though.
* Check if the repository uses git-lfs somehow. If so skip caching.
    * I'm not sure how to check it though.

What do you think? If the former sounds good I can make a patch.

FWIW I'm using berkshelf 7.0.7 on Ubuntu.
Dependabot couldn't parse the Gemfile found at `/Gemfile`.

You can mention @dependabot in the comments below to contact the Dependabot team.
When berkshelf encounters an error fetching the cookbook index from a Chef Server an exception of `NameError uninitialized constant Berkshelf::APIClient::ChefServerConnection::Ridley` is thrown rather than saying expected message of `service not found at: https://XXX.compute.amazonaws.com/organizations/INVALID`

It looks like the `chef_server_connection.rb` is still trying to rescue an exception from Ridley that is no longer available when the deps for Ridley was removed.

https://github.com/berkshelf/berkshelf/blob/master/lib/berkshelf/api_client/chef_server_connection.rb#L26

### Replication

Create/update a `Berksfile` to use the chef-server as a source

```
source :chef_server
````

Then update your `~/.chef/knife.rb` or `~/.chef/config.rb` to point at a Chef Server organization that doesn't exist.

```
chef_server_url           "https://XXX.compute.amazonaws.com/organizations/INVALID"
```

### Logs of the error

```
Fetching cookbook index from chef_server: https://XXXX.compute.amazonaws.com/organizations/INVALID...
#<Thread:0x00007f897050fdd8@/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/installer.rb:21 run> terminated with exception (report_on_exception is true):
Traceback (most recent call last):
	6: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/installer.rb:24:in `block (2 levels) in build_universe'
	5: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/source.rb:85:in `build_universe'
	4: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/api_client/chef_server_connection.rb:16:in `universe'
	3: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/ridley_compat.rb:37:in `get'
	2: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/chef-15.1.36/lib/chef/http.rb:115:in `get'
	1: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/chef-15.1.36/lib/chef/http.rb:152:in `request'
/opt/chef-workstation/embedded/lib/ruby/2.6.0/net/http/response.rb:122:in `error!': 404 "Object Not Found" (Net::HTTPServerException)
	4: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/installer.rb:24:in `block (2 levels) in build_universe'
	3: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/source.rb:85:in `build_universe'
	2: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/api_client/chef_server_connection.rb:16:in `universe'
	1: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/ridley_compat.rb:36:in `get'
/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/ridley_compat.rb:41:in `rescue in get': service not found at: universe (Berkshelf::APIClient::ServiceNotFound)
	3: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/installer.rb:24:in `block (2 levels) in build_universe'
	2: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/source.rb:85:in `build_universe'
	1: from /opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/api_client/chef_server_connection.rb:15:in `universe'
/opt/chef-workstation/embedded/lib/ruby/gems/2.6.0/gems/berkshelf-7.0.8/lib/berkshelf/api_client/chef_server_connection.rb:25:in `rescue in universe': uninitialized constant Berkshelf::APIClient::ChefServerConnection::Ridley (NameError)
NameError uninitialized constant Berkshelf::APIClient::ChefServerConnection::Ridley
```
berks v6.3.1
Precondition:
1. Private Artifactory is configured as Chef Cookbook repositories
2. Cookbook `foo-1.0.0` stored in private repository
3. Configure Berksfile to use a private repository and use `foo` cookbook:

```
source artifactory: "https://artifactory.com/api/chef/chef", api_key: "<APIKEY>"
cookbook 'foo'
```

Course of Action:
1. from Berksfile location perform: `berks update` command
2. `foo` cookbook is downloaded to `$HOME/.berkshelf/cookbooks/foo-1.0.0`
3. Copy `foo-1.0.0` cookbooks to another location: `$HOME/cookbooks/foo-1.0.0`
3. From location `$HOME/cookbooks/foo-1.0.0` make some  changes in `foo-1.0.0` cookbook (but does not change version - still 1.0.0) and upload again to the private repository
4. Back to Berksfile location and perform: `berks update` command again

Error:
New `foo` cookbook(after changes from point 3.) is not downloaded to `$HOME/.berkshelf/cookbooks/foo-1.0.0` 
There is still version from point 2. 

There would be nice to have e.g. --force option, that allows to download always latest cookbooks artifact from repository, without version check
berkshelf `7.0.8` functions correctly with octokit `4.13.0` bit not with `4.14.0`, details in ticket https://github.com/octokit/octokit.rb/issues/1113

workaround by pinning to `4.13.0` or specifying `api_endpoint` in `config.json`
