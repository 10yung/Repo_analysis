None

Prividing additional substitution strings for the jvm opts provided to workers launched by this supervisor - "%ID%", "%WORKER-ID%", "%STORM-ID%" and "%WORKER-PORT%".

fix Issue #732, worker and supervisor heartbeat to nimbus using socket instead of write zookeeper node.  


This PR is for #245 to fix the default hash code for byte[] and other array in tuple.

This PR is for #540. The core code modification is about 300 lines and many others are generated by thrift.

main points:
1. interface changes (compatible with old versions)
   1.1 zk add :topology-version and :update-duration-sec fields to StormBase:status map
   1.2 zk add :topology-version to executor heartbeat
   1.3 worker local state add versions dir to storm worker's current running topology-version
   1.4 nimbus add updateTopology interface
   1.5 add topology-version field to storm.thrift three struct: TopologySummary ExecutorSummary TopologyInfo
2. update process
   2.1 storm client run "storm jar xxxx -c topology.update=true" to invoke topology update process
   2.2 storm client upload new jar file to nimbus
   2.3 storm client call nimbus updateTopology interface
   2.4 nimbus check the new topology and replace stormdist/storm-id dir
   2.5 nimbus update StormBase in zk, set :topology-version(for destination version) and :update-duration-sec(for all  workers update process duration) fields to StormBase:status map
   2.6 supervisors check zk StormBase and do the update work if topology's local version is not the same with zk version
   2.6.1 sync-supervisor download the latest code from nimbus to local stormdist/topology-version dir
   2.6.2 each supervisor schedule the topology's worker update at a rand(expect-max-update-time) time point
   2.6.3 sync-process check local worker version, if it is not the same with sync-supervisor downloaded version and update time point reached, set worker state to a new :update state
   2.6.4 sync-process kill workers in :update state as normally
   2.6.5 sync-process restart killed worker as normally, expect that read topology and conf from stormdist/topology-version dir
   2.6.6 new worker heartbeat to zk with new topology-version, it can be displayed on web ui to check update progress

Currently, DRPC requests could only be sent via Thrift API. We have seen various users asking for HTTP interface.

This pull request enable one to configure drpc to be sent via HTTP and/or thrift via storm.yaml:
  drpc.port: <THRIFT_PORT> (default: 3772)
  drpc.http.port: <HTTP_PORT> (default: unavailable)

When drpc server is started, it will look into these configuration parameters to decide whether Thrift port and/or HTTP port should be binded.

DRPC HTTP request will be received via GET via the following URI:
- http://&lt;server>:&lt;HTTP_PORT>/drpc/&lt;Func>/&lt;Args>
- http://&lt;server>:&lt;HTTP_PORT>/drpc/&lt;Func>/
- http://&lt;server>:&lt;HTTP_PORT>/drpc/&lt;Func>

Addresses issue 638 (http://github.com/nathanmarz/storm/issues/638). @mridulj @mrflip

Consider:

``` java

Map<String, Fields> outputStreamMapping = new HashMap<String, Fields>();
outputStreamMapping.put("streamA", new Fields("field_in_a"));
outputStreamMapping.put("streamB", new Fields("field_in_b"));

Stream s = topology.newStream("testStream", spout);
StreamCollection multiStream = s.each(
  s.getOutputFields(),
  new DebugMultiStream("streamA", "streamB"),
  new StreamMap(outputStreamMapping)            
  );

Stream streamA = multiStream.getStream("streamA")
streamA.each(new Fields("field_in_a"), new Debug());
```

1: update  zookeeper from version 3.3.3 to 3.4.5 

2: fix lein compile error 
22117 [main] ERROR org.apache.zookeeper.server.NIOServerCnxnFactory - Thread Thread[main,5,main] died
clojure.lang.Compiler$CompilerException: java.lang.ClassNotFoundException: backtype.storm.LocalCluster, compiling:(testing4j.clj:1)
    at clojure.lang.Compiler$InvokeExpr.eval(Compiler.java:3387) ~[clojure-1.4.0.jar:na]
    at clojure.lang.Compiler.compile1(Compiler.java:7035) ~[clojure-1.4.0.jar:na]
    at clojure.lang.Compiler.compile1(Compiler.java:7025) ~[clojure-1.4.0.jar:na]
    at clojure.lang.Compiler.compile(Compiler.java:7097) ~[clojure-1.4.0.jar:na]
    at clojure.lang.RT.compile(RT.java:387) ~[clojure-1.4.0.jar:na]

3: fix lein jar error 
Compiling storm.trident.testing
java.util.zip.ZipException: duplicate entry: backtype/.svn/all-wcprops
    at java.util.zip.ZipOutputStream.putNextEntry(ZipOutputStream.java:175)
    at java.util.jar.JarOutputStream.putNextEntry(JarOutputStream.java:92)
    at sun.reflect.GeneratedMethodAccessor58.invoke(Unknown Source)
    at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:25)
    at java.lang.reflect.Method.invoke(Method.java:597)
    at clojure.lang.Reflector.invokeMatchingMethod(Reflector.java:93)
    at clojure.lang.Reflector.invokeInstanceMethod(Reflector.java:28)
    at leiningen.jar$fn__7204.invoke(jar.clj:76)
X
