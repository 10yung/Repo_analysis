This PR fixes several issues I've encountered while using mitmproxy in console mode:
1. Trying to manually change to "multipart form" contentview failed because ViewMultipart.name has a space in it. This also affected my custom contentview, so I had to choose a name without spaces.
2. Said error was not visible in the event log, just in the status bar (where it wasn't even informative because it just said "(more in eventlog)"...)
3. When I did manage to show the full exception in the event log, tabs ('\t') were displayed as '?'.
4. A re-raised error (when I run a command with an "invalid choice") would display an empty error string because it was raised like this: `raise exceptions.CommandError from e`

I solved (1) by exposing CommandManager.call_strings and calling it directly, because it seems far more reliable than formatting a full command string with `%s`, quote/unquote operations and so on. I also did this for any command call which involves a `%s` or `{choice}`.

I solved (2) by replacing `signals.status_message.send` with `ctx.log.error`.
#### Problem Description
I was running code very similar to that in the `wsgi_flask_app.py` example in my project, hoping to serve a basic flask app under a test domain when the proxy is running. Couldn't get it working in my project so after some experimenting I tried to repro the simple example, using mitmproxy 5.0.1 docker image as a base, but I'm still having trouble.
Basically mitmdump doesn't seem to be able to resolve the magic "proxapp.local" domain - when I make requests to it on port 80, the mitmdump logs the request but says: 
```
GET http://proxapp.local/
<< Server connection to ('proxapp.local', 80) failed: Error connecting to "proxapp.local": [Errno -2] Name does not resolve
```

#### Steps to reproduce the behavior:
1. This is my Dockerfile
```Dockerfile
FROM mitmproxy/mitmproxy:5.0.1

RUN pip install flask==1.1.1

COPY proxy.py proxy.py

CMD ["mitmdump", "-s", "proxy.py"]
```
2. The contents of proxy.py is just copy pasted from: https://github.com/mitmproxy/mitmproxy/blob/v5.0.1/examples/simple/wsgi_flask_app.py
3. I'm running it with: 
```bash
docker build -t tpr .
docker run --network="host" --rm -it -v ~/.mitmproxy:/home/mitmproxy/.mitmproxy tpr
```
4. Making requests via the browser (set up to proxy via localhost:8080) to http://proxapp.local gives a 502

My understanding was that I should get back the test "Hello World!" response. Have I missed something?

Also, at some point during my experimentation I uncommented the line at the bottom of the example :
`mitmproxy.ctx.master.apps.add(app, "example.com", 443)`
but got some error about how `apps` is not defined on `ctx.master`, is that information still applicable to v5.0.1?

#### System Information
Paste the output of "mitmproxy --version" here.
(Running from a shell inside the running container): 
```
Mitmproxy: 5.0.1
Python:    3.6.9
OpenSSL:   OpenSSL 1.0.2u  20 Dec 2019
Platform:  Linux-4.15.0-72-generic-x86_64-with
```

This is a kludge to help with #2936. My knowledge of Urwid is slim but it really doesn't seem to offer any tools for this problem.

Using weight = 1 for the header key/value columns would use the available space more efficiently and get you wrapping for both key and value. The downside would be that the key and value would no longer be adjacent.
**Is your feature request related to a problem? Please describe.**

I'm frustrated when I want to get the attacker's real ip, I'm using python scripts in a addons method, but I try all 5 events style, I can only get mitm's ip by using:
 `flow.client_conn.address`

#### Describe the solution you'd like
I'd like to know if there has had such a interface, or if there is a plan to get the real ip.
#### Problem Description

The thumbnails on YouTube don't load after navigating around the page. I'm not sure what exactly is happening, it seems to be related to HTTP 2? See the attached video. Sorry for the video being such a hot mess. During recording it didn't happen after the first navigation (of course, why would it) and it took a moment to be reproducible. When I opened the image in a new tab it still didn't load. The second time I [alt+enter]ed it into a new tab.

In dev tools the requests appear as `(pending)`. So mitmproxy never tells Chrome that the request failed?

![Selection_561](https://user-images.githubusercontent.com/679144/72176316-69dbf300-33de-11ea-80e2-09fe60047eb7.png)


#### Steps to reproduce the behavior:
1. Start `mitmdump`
2. Open Chromium
3. Browse to www.youtube.com
4. Click on a video
5. Go back to the front page by clicking on the logo
6. Most thumbnails will not load (you might need to repeat 4+5). I assume it is related to the error in the title. No amount of waiting makes them load.

Now the question is: is YouTube or Chromium doing something funny or is it mitmproxy that has the issue?

#### System Information

```
Mitmproxy: 5.0.1
Python:    3.7.5
OpenSSL:   OpenSSL 1.1.0j  20 Nov 2018
Platform:  Linux-5.3.0-26-generic-x86_64-with-Ubuntu-19.10-eoan
```

#### Attachments
video: http://www.prinzhorn.me/mitmproxy/screencast.mp4
video of me hovering the thumbnails: http://www.prinzhorn.me/mitmproxy/screencast-hover.mp4
dump: http://www.prinzhorn.me/mitmproxy/youtube

#### Problem Description
In https://github.com/mitmproxy/mitmproxy/blame/master/docs/src/content/tute-clientreplay.md#L35, Toggle Proxy is linked, but it no longer exists.

#### Steps to reproduce the behavior:
1. GOTO https://docs.mitmproxy.org/stable/tute-clientreplay/
2. GOTO https://addons.mozilla.org/en-us/firefox/addon/toggle-proxy-51740/
3. SEE Oops! We canâ€™t find that page

#### System Information
DOCS

Is really helpful when you have scripts in your `config.yaml` and don't want to edit the file each time one gets deleted or moved.
#### Problem Description
I set username and password on proxy setting already but when I uses browser, It's prompt ask again.

#### Steps to reproduce the behavior:
1. 
![Screen Shot 2020-01-03 at 4 46 03 PM](https://user-images.githubusercontent.com/9253378/71716914-e011b000-2e48-11ea-86a3-bae7c0943a5a.png)

2. 
![Screen Shot 2020-01-03 at 4 46 22 PM](https://user-images.githubusercontent.com/9253378/71716924-e7d15480-2e48-11ea-8a35-c3b47b3cd981.png)

#### System Information
Mitmproxy: 6.0.0.dev (+19, commit 7b638f1)
Python:    3.7.5
OpenSSL:   OpenSSL 1.1.0j  20 Nov 2018
Platform:  Darwin-19.2.0-x86_64-i386-64bit

None
This PR adds missing tox environments from Github Actions.
It replaces the un-pinned flake8 and mypy runs with the properly tracked invocation via tox. The time overhead is below the general measurement noise (on a combined 64sec run, sometimes it is 3sec faster with tox, sometimes 2sec slower, etc.)

However, since the `individual_coverage` was not running in our CI, we let some failures creep into the codebase. @mhils has promised to write additional tests for the currently uncovered/untested  code - before we can merge this PR.
```
FAIL: mitmproxy/addons/command_history.py      59      3    95%   30, 41-42
FAIL: mitmproxy/command_lexer.py      17     10    41%   33-35, 39-49
```

This should bring back all CI targets we had previously, without compromising on speed of untracked dependency versions.