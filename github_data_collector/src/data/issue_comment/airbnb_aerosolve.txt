Hi, there!

We are a research team working on third-party library analysis. We have found that some widely-used third-party libraries in your project have major/critical bugs, which will degrade the quality of your project. We highly recommend you to update those libraries to new versions.

We have attached the buggy third-party libraries and corresponding jira issue links below for you to have more detailed information. We have analyzed the api call related to the following libraries and found one library that is using the API call that might invoke buggy methods in the library of the history.

1. commons-codec commons-codec
version: 1.4
API call in your project:org.apache.commons.codec.binary.Base64.setInitialBuffer(byte[],int,int)

Jira issues:
[Base64InputStream#read(byte[]) incorrectly returns 0 at end of any stream which is multiple of 3 bytes long](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-101?filter=allopenissues)
version:1.4
[ArrayIndexOutOfBoundsException when doing multiple reads() on encoding Base64InputStream](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-105?filter=allopenissues)
version:1.4
[Base64 encoding issue for larger avi files](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-108?filter=allopenissues)
version:1.4
[org.apache.commons.codec.net.URLCodec.ESCAPE_CHAR isn't final but should be](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-111?filter=allopenissues)
version:1.2;1.3;1.4
[org.apache.commons.codec.language.RefinedSoundex.US_ENGLISH_MAPPING should be package protected MALICIOUS_CODE](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-113?filter=allopenissues)
version:1.4
[org.apache.commons.codec.language.Soundex.US_ENGLISH_MAPPING should be package protected MALICIOUS_CODE](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-114?filter=allopenissues)
version:1.4
[Caverphone encodes names starting and ending with "mb" incorrectly.](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-117?filter=allopenissues)
version:1.4
[All links to fixed bugs in the "Changes Report" http://commons.apache.org/codec/changes-report.html point nowhere; e.g. http://issues.apache.org/jira/browse/34157. Looks as if all JIRA tickets were renumbered.](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-76?filter=allopenissues)
version:1.1;1.2;1.3;1.4
[Regression:  Base64.encode(chunk=true) has bug when input length is multiple of 76](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-80?filter=allopenissues)
version:1.4
[DigestUtils: MD5 checksum is not calculated correctly on linux64-platforms](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-87?filter=allopenissues)
version:1.3;1.4
[new Base64().encode() appends a CRLF; and chunks results into 76 character lines](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-89?filter=allopenissues)
version:1.4
[Base64 encode() method is no longer thread-safe; breaking clients using it as a shared BinaryEncoder](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-96?filter=allopenissues)
version:1.4
[Base64 default constructor behaviour changed to enable chunking in 1.4](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-97?filter=allopenissues)
version:1.4
[Base64InputStream causes NullPointerException on some input](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-98?filter=allopenissues)
version:1.4
[Base64.encodeBase64String() shouldn't chunk](https://issues.apache.org/jira/projects/CODEC/issues/CODEC-99?filter=allopenissues)
version:1.4
2. org.apache.commons commons-lang3
version: 3.4
Jira issues:
[TypeUtils.ParameterizedType#equals doesn't work with wildcard types](https://issues.apache.org/jira/projects/LANG/issues/LANG-1114?filter=allopenissues)
version:3.3.2;3.4
[DateUtilsTest.testLang530 fails for some timezones](https://issues.apache.org/jira/projects/LANG/issues/LANG-1116?filter=allopenissues)
version:3.4
[StringUtils.stripAccents from "Ł" and "ł"](https://issues.apache.org/jira/projects/LANG/issues/LANG-1120?filter=allopenissues)
version:3.4
[No release notes for version 3.4](https://issues.apache.org/jira/projects/LANG/issues/LANG-1125?filter=allopenissues)
version:3.4
[JsonToStringStyle doesn't handle chars and objects correctly](https://issues.apache.org/jira/projects/LANG/issues/LANG-1128?filter=allopenissues)
version:3.4
[ReflectionToStringBuilder doesn't throw IllegalArgumentException when the constructor's object param is null](https://issues.apache.org/jira/projects/LANG/issues/LANG-1132?filter=allopenissues)
version:3.4
[StrLookup.systemPropertiesLookup() no longer reacts on changes on system properties](https://issues.apache.org/jira/projects/LANG/issues/LANG-1141?filter=allopenissues)
version:3.4
[StringUtils#capitalize: Javadoc says toTitleCase; code uses toUpperCase](https://issues.apache.org/jira/projects/LANG/issues/LANG-1142?filter=allopenissues)
version:3.4
[Multiple calls of org.apache.commons.lang3.concurrent.LazyInitializer.initialize() are possible](https://issues.apache.org/jira/projects/LANG/issues/LANG-1144?filter=allopenissues)
version:3.4;3.5
[EnumUtils *BitVector issue with more than 32 values Enum](https://issues.apache.org/jira/projects/LANG/issues/LANG-1147?filter=allopenissues)
version:3.4
[StringUtils#equals fails with Index OOBE on non-Strings with identical leading prefix](https://issues.apache.org/jira/projects/LANG/issues/LANG-1162?filter=allopenissues)
version:3.4
[There are no tests for CharSequenceUtils.regionMatches](https://issues.apache.org/jira/projects/LANG/issues/LANG-1163?filter=allopenissues)
version:3.4
[ArrayUtils.removeAll(Object array; int... indices) should do the clone; not its callers](https://issues.apache.org/jira/projects/LANG/issues/LANG-1178?filter=allopenissues)
version:3.4
[TypeUtils.isAssignable throws NullPointerException when fromType has type variables and toType generic superclass specifies type variable](https://issues.apache.org/jira/projects/LANG/issues/LANG-1190?filter=allopenissues)
version:3.4
[FastDateFormat does not support the week-year component (uppercase 'Y')](https://issues.apache.org/jira/projects/LANG/issues/LANG-1192?filter=allopenissues)
version:3.4
[ordinalIndexOf("abc"; "ab"; 1) gives incorrect answer of -1 (correct answer should be 0)](https://issues.apache.org/jira/projects/LANG/issues/LANG-1193?filter=allopenissues)
version:3.4
[Fix implementation of StringUtils.getJaroWinklerDistance()](https://issues.apache.org/jira/projects/LANG/issues/LANG-1199?filter=allopenissues)
version:3.4
[parseDateStrictly does't pass specified locale](https://issues.apache.org/jira/projects/LANG/issues/LANG-1202?filter=allopenissues)
version:3.4
[ClassUtils.getClass(ClassLoader; String) fails for "void"](https://issues.apache.org/jira/projects/LANG/issues/LANG-1214?filter=allopenissues)
version:3.4
[NumberUtils.isNumber bug](https://issues.apache.org/jira/projects/LANG/issues/LANG-1216?filter=allopenissues)
version:3.4
[FastDateFormat doesn't respect summer daylight in localized strings](https://issues.apache.org/jira/projects/LANG/issues/LANG-1219?filter=allopenissues)
version:3.4
[StringUtils#normalizeSpace does not trim the string anymore](https://issues.apache.org/jira/projects/LANG/issues/LANG-1226?filter=allopenissues)
version:3.4
[DiffBuilder: Add null check on fieldName when appending Object or Object[]](https://issues.apache.org/jira/projects/LANG/issues/LANG-1232?filter=allopenissues)
version:3.4
[FastDatePrinter Memory allocation regression](https://issues.apache.org/jira/projects/LANG/issues/LANG-1248?filter=allopenissues)
version:3.4
[SerializationUtils.ClassLoaderAwareObjectInputStream should use static initializer to initialize primitiveTypes map.](https://issues.apache.org/jira/projects/LANG/issues/LANG-1251?filter=allopenissues)
version:3.2;3.3;3.4
[NumberUtils.isNumber and NumberUtils.createNumber resolve inconsistently](https://issues.apache.org/jira/projects/LANG/issues/LANG-1252?filter=allopenissues)
version:3.4
[ArrayUtils.contains returns false for instances of subtypes](https://issues.apache.org/jira/projects/LANG/issues/LANG-1261?filter=allopenissues)
version:3.4
[CompareToBuilder.append(Object;Object;Comparator) method is too big to be inlined](https://issues.apache.org/jira/projects/LANG/issues/LANG-1262?filter=allopenissues)
version:3.4
[StrBuilder#replaceAll ArrayIndexOutOfBoundsException](https://issues.apache.org/jira/projects/LANG/issues/LANG-1276?filter=allopenissues)
version:3.2.1;3.4;3.5
[NumberUtils#createNumber() returns positive BigDecimal when negative Float is expected](https://issues.apache.org/jira/projects/LANG/issues/LANG-1087?filter=allopenissues)
version:3.x


Sincerely~
FDU Software Engineering Lab
Marth 14th,2019

Hi, I'm confused about this parameter about 'node_query'. Would you please provide example data or sql? Thanks a lot
WIP
landlord
partial derivative of `a*tanh(b*x+c)` with respect to `b` should be `a*x / cosh(x*b+c)^2`
What does the parameter "lossOnly" mean in AdditiveModelTrainer?
:core:compileJava (Thread[Task worker for ':',5,main]) started.

> Task :core:compileJava
Putting task artifact state for task ':core:compileJava' into context took 0.0 secs.
Executing task ':core:compileJava' (up-to-date check took 0.006 secs) due to:
  Task has failed previously.
All input files are considered out-of-date for incremental task ':core:compileJava'.
Compiling with JDK Java compiler API.
/Users/maximebodereau/Documents/Projects/Ux AI/aerosolve/core/src/main/java/com/airbnb/aerosolve/core/util/Weibull.java:13: error: cannot find symbol
  public WeibullBuilder defaultBuilder() {
         ^
  symbol:   class WeibullBuilder
  location: class Weibull
1 error

:core:compileJava (Thread[Task worker for ':',5,main]) completed. Took 0.262 secs.

FAILURE: Build failed with an exception.

* What went wrong:
Execution failed for task ':core:compileJava'.
> java.lang.NoSuchFieldError: pid

Hi, I'm a Stanford MS student trying to run the image impressionism and income classification demos. When running `gradle shadowjar --info`, I get multiple errors of the following type during the execution of the task `:core:compileJava`:

```
/Users/ei5h4/Documents/aerosolve/core/build/gen-java/com/airbnb/aerosolve/core/ModelRecord.java:1075: error: method hashCode in class Object cannot be applied to given types;
      hashCode = hashCode * 8191 + org.apache.thrift.TBaseHelper.hashCode(featureWeight);
                                                                ^
  required: no arguments
  found: double
  reason: actual and formal argument lists differ in length
```

My thrift version is 0.10.0. I tried downloading and installing an older version of thrift (0.9.0) from source since this demo is old and might rely on an older thrift (just a hypothesis). But that turned out to have some roadblocks as well since the older thrift uses some C code namespace `tr1` that is no longer supported by C++11 on my OSX El Capitan. So I couldn't verify if thrift is the issue or something else. Basically I thought the `hashCode` function in the error above might have a changed signature from 0.9.0 to 0.10.0.

I think anyone else attempting to build the demo will run into this issue as well. Really hope to get this running on my machine soon. Aerosolve is super exciting!
…al table

### What is the proposed change?

If overwrite option is true, we first need to drop the existing partition from hive otherwise ` HiveUtil.updateHivePartition` will drop just committed new text files. 

### How was this tested?

- [x] Was the change tested with treehouse? 

![image](https://user-images.githubusercontent.com/7257825/29637303-9378de64-8808-11e7-9e30-def915c04bf9.png)

### Reviewers

- @jq @saurfang @mLewisLogic 


I think that it will be great to have the **training** module compiled with **Scala 2.11**, because the version **2.10** is relatively old.