fixes: #204
Occasionally when we deploy new code, the routes will be messed up (i.e. the wrong route handler gets called).  If I erase the cache file so it gets regenerated, the problem goes away.

My guess at what is happening: when the new code is mv'd into place, which is atomic, two requests come in close together enough that the route cache has started generating, but hasn't finished, so a second route-cache build is initiated and the two builds do interleaving writes which causes a corrupt cache.

I did capture a good chunk of the bad cache file and the corresponding good cache file.  What I notice is that in the bad cache file, there are missing entries, i.e. it goes from 5 to 7 skipping 6.  

I can post here if it would be useful (I'll need some time to scrub it for any sensitive info if any).

If my hypothesis is correct, I think the simple fix is to add the `LOCK_EX` flag to this [file_put_contents](https://github.com/nikic/FastRoute/blob/master/src/functions.php#L71-L74).

On the other hand, if my hypothesis is correct, I'm pretty amazed that there isn't an issue already for others...


Fixes #140 

This allows users to use any PSR-16 compatible driver in FastRoute.
What would be the easiest way of defining a user capability for a specific route or group of routes when defining the route, IE something like like addRoute($httpMethod, $route, $handler, $requiredRole ). Then during dispatch being able to get back something like FastRoute\Dispatcher::Insufficient_access if the user didn't have sufficient access to the route?

Hello there.

Can anyboydy explain why these classes are separated, please?

It seems obviously that there are pairs of classes which share the ony logic. For example `Dispatcher\CharCountBased` can't work with other data collectors except `DataGenerator\CharCountBased`, can it?
now i was 'new' three fastRouter object for three domain
how about consider to make this support multiple domain for one dispatcher?
I have two routes that are used only from ajax requests like an API endpoint. I've noticed that the $_POST or $_GET requests are not processed, I uset these two routes to read and write from a JSON file, but if I post some data, the data for the file are not writed. How I manage the $_POST requests passed by ajax? maybe my code approach is wrong... ?


```   
$r->addGroup('/rta/api/v1', function(RouteCollector $r){
    $r->addroute('GET', 'mcast/{id:\w+}', 'Controller@receive');
    $r->addroute('POST', 'mcast/{id:\w+}', 'Controller@send');
    });

....

  public function send()
  {
    print_r($_POST);

    if( file_exists( TMP_PATH.$_POST['id'].'.json' ) ){
      $data = [
        'user' => $_POST['user'],
        'message' => $_POST['message'],
        'timestamp' => time()
      ];
      file_put_contents( TMP_PATH.$_POST['id'].'.json', json_encode($data));
    }
  }

  public function receive($id)
  {
    var_dump($id);
    if( file_exists( TMP_PATH.$id.'.json' ) ){
      $data = file_get_contents( TMP_PATH.$id.'.json');
      return $data;
    }
  }


```

adding psalm to travis-ci config, w/ some psalm-specific docblocks

- [x] resolution of vimeo/psalm#1944
Hi everyone, first i'm glad we have a new maintainer :)

I know a group can add prefix, but anyone have idea how to create Group Handler smaller? 

my example code
```php
$r->addGroup('/'.ADMINURL, function(FastRoute\RouteCollector $r) {
	$r->addRoute('GET', '[/]', ['LoginController', BACKFOLDER]);
	$r->addRoute(['GET', 'POST'], '/{act:login|logout}', ['LoginController', BACKFOLDER]);
	$r->addRoute('GET', '/{act:createpost}', [['MiddleCheckUser','ProductController','MiddleSaveLog'], BACKFOLDER]);
	$r->addRoute('GET', '/{act:createnews}', [['MiddleCheckUser','NewsController','MiddleSaveLog'], BACKFOLDER]);
	...etc 100++ more route
});
```
I have array handler, first array for run the middlewares handler before or after main handler. My problem is too much write for array handler if i have many route.

I'm sorry i cant find example code to do it.

My goal code like
```php
$r->addGroup('/'.ADMINURL, $MiddleArray = ['one','two','etc'], function(FastRoute\RouteCollector $r) {
	$r->addRoute('GET', '/{act:createpost}', [[$MiddleArray,'ProductController'], BACKFOLDER]);
	$r->addRoute('GET', '/{act:createnews}', [[$MiddleArray,'NewsController'], BACKFOLDER]);
});
```

**$MiddleArray** that is it the smaller Group Handler what i want.

Sorry if this a stupid question :smile_cat: 