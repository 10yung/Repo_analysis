Hello, I have two questions:
1) how can I compute precision@10, precision@5, precision@3 and precision@1 all together? If in my config file I write:

rec.recommender.ranking.topn=10
rec.recommender.ranking.topn=5
rec.recommender.ranking.topn=3
rec.recommender.ranking.topn=1

.. librec will alway compute only the last one (in this case precision@1)

2) is there a way to train and store a model, and then load it in order to calculate other metrics?

Thanks 


It's supposed to be possible to have fully deterministic runs
by setting Randoms.seed() before a run. However, in a few small
instances, the Randoms class is not being used to generate random
numbers. This would effectively break the determinism of runs in
certain cases.
Douban、Flixster数据集无法下载
loss value must sum with userBiasReg  in line 164
在源码第164行中，
loss += itemBiasReg * bu * bu;
虽然itemBiasReg和userBiasReg的初始值相等，但正确的写法应该是 loss += userBiasReg * bu * bu;

不知道是文档有误还是什么原因？在Recommender 中无train方法。
![image](https://user-images.githubusercontent.com/10324017/65220326-1bcc7800-daed-11e9-8118-7f3ec6d15aac.png)

1、文档中的maven依赖为3.0.0有误，应为2.0.0。
2、使用maven导入依赖后，在代码中无法应用librec中的类，查看项目的第三方库也没发现与librec相关的包，最后只能通过下载jar包手动导入才成功。
请教一下，当数据量比较大时：100w用户，2w物品，900万行评分，矩阵密度：0.05%
这样的数据量应该怎么处理呢？目前使用BiasedMFRecommender，25G内存都不够用，计算不出来。