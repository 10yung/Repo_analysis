i foun this error when use filter() on win10
```bash
[Parsed_subtitles_0 @ 000002751adb0cc0] Shaper: FriBidi 1.0.4 (SIMPLE)
[Parsed_subtitles_0 @ 000002751adb0cc0] Unable to open d\:/test/zh.ass
[AVFilterGraph @ 0000027518d42a00] Error initializing filter 'subtitles' with args 'd\\\:/test/zh.ass'
Error initializing complex filters.
No such file or directory
Traceback (most recent call last):
  File "d:/Documents/learnpyplot/GTools/testff.py", line 27, in <module>
    ffmpeg.output(finputAV,inputAV,outfile).run(overwrite_output=True)
  File "C:\Users\Syao\AppData\Local\Packages\PythonSoftwareFoundation.Python.3.7_qbz5n2kfra8p0\LocalCache\local-packages\Python37\site-packages\ffmpeg\_run.py", line 325, in run
    raise Error('ffmpeg', out, err)
ffmpeg._run.Error: ffmpeg error (see stderr output for detail)
```
and The relevant code is
```python
inputAV = ffmpeg.input(inputAV)
pp = "d:/test/zh.ass"
finputAV = ffmpeg.filter(inputAV.video,'subtitles',pp)
ffmpeg.output(finputAV,inputAV,outfile).run(overwrite_output=True)
```
I found that there is no problem in using relative path on win10, but this problem will occur when using absolute path,Filter () seems to convert `D: /` to` D\: /`. It is normal for the program to use relative path or absolute path on Linux.
Wondering why
```
ffmpeg -i 4sec720x480dv.mov \
  -filter_complex \
    "scale=w=1280:h=720:force_original_aspect_ratio=decrease,\
     pad=w=1280:h=720:x='(ow-iw)/2':y=(oh-ih)/2"\
  -pix_fmt yuv420p -c:v libx264 scale4.mp4
```
has audio

Stream mapping:
  Stream #0:0 (h264) -> scale (graph 0)
  pad (graph 0) -> Stream #0:0 (libx264)
  Stream #0:1 -> #0:1 (aac (native) -> aac (native))

 but (python3)
```
import ffmpeg
(
    ffmpeg
    .input('4sec720x480dv.mov')
    .filter('scale', w=1280,h=720,force_original_aspect_ratio='decrease')
    .filter('pad', w=1280, h=720,x='(ow-iw)/2',y='(oh-ih)/2')
    .output('scale3.mp4',vcodec='libx264',pix_fmt='yuv420p')
    .run()
)
```
Stream mapping:
  Stream #0:0 (h264) -> scale
  pad -> Stream #0:0 (libx264)

doesn't. Am I missing something?
hi,dear,
Just wanna get the video frame number directly,
Could you please help me ?


any advice or suggestion will be appreciated.
thx
not all files needed extreme compression but i ended up doing all of them anyways. Good savings overall
I'm trying to specify a protocol before my input so that I can capture a png from an RTSP stream. Right now I have
```
(
    ffmpeg
    .input(stream)
    .filter("scale", width, -1)
    .output(time_now + ".png", vframes=1)
    .overwrite_output()
    .run(capture_stdout=True, capture_stderr=True)
)
```
This captures frames, but is often gitchy as it grabs the first frame it sees and something something keyframes.

One soultion I found for this is to force tcp
`$ ffmpeg -rtsp_transport tcp -i "$SOURCE" -frames 1 ./picture1.jpg`
but I'm unclear on how I can specify the rtsp/tcp protocols.

Background
https://stackoverflow.com/questions/23238295/force-ffmpeg-to-use-tcp-protocol-when-reading-a-rtsp-stream
https://stackoverflow.com/questions/49868802/rtsp-frame-grabbing-creates-smeared-pixeled-and-corrupted-images
Hi,
I would like to use advanced options like **-copyts** (See: https://ffmpeg.org/ffmpeg.html#Advanced-options). Looks like this is not possible at all.
I tried it this way but this seems to be wrong just from looking at it :D :
```
(
    ffmpeg
    .input(input, ss=timestamp, "copyts")
    .filter_('subtitles', subtitle)
    .output(output, vframes=1)
    .overwrite_output()
    .run()
)
```
## Environments
```
ffmpeg 4.2.2
ffmpeg-python 0.2.0
```
## Details

The ffmpeg-python's format option conflicts with some ffmpeg codec options.
https://www.ffmpeg.org/ffmpeg-codecs.html#Hap
https://www.ffmpeg.org/ffmpeg-codecs.html#jpeg2000

For instance,
```
ffmpeg.input('test.mp4').output('out.mov', vcodec='hap', format='hap_q').run()
```
the above code returns the following error.
```
[NULL @ 0x7fc69c80ea00] Requested output format 'hap_q' is not a suitable output format
out.mov: Invalid argument
Traceback (most recent call last):
  File "encoder.py", line 180, in <module>
    ffmpeg.input('test.mp4').output('out.mov', vcodec='hap', format='hap_q').run()
  File "/usr/local/lib/python3.7/site-packages/ffmpeg/_run.py", line 325, in run
    raise Error('ffmpeg', out, err)
ffmpeg._run.Error: ffmpeg error (see stderr output for detail)
```

Looking at the ffmpeg documentation, the format option is `-f` and `-fmt`.
https://www.ffmpeg.org/ffmpeg.html#toc-Main-options

I think it's better to use the same option as ffmpeg.
But this PR breaks old code, so we should to be careful.
Looking at the [last example](https://github.com/kkroening/ffmpeg-python/blob/master/examples/README.md#stream-from-rtsp-server-to-tcp-socket) I have the feeling the `input` line is using a hostname placeholder that is not given a value. I'd suggest using a generic hostname eg. `localhost` or adding the string interpolation value.

As I have been using ffmpeg for video processing via video url, the ffmpeg processing cannot handle it well without a timeout setting. The process gets stuck several times a month. The behavior of it is that it becomes a zombie process, no response.

Could we add a timeout method at 
https://github.com/kkroening/ffmpeg-python/blob/master/ffmpeg/_run.py#L284 ?