This is a friendly notice for a very minor issue. If multisite is disabled via wp-config (as is sometimes done with a test site), reloading a wp-admin/network URL triggers the following ACF error:

PHP Fatal error:  Uncaught Error: Call to undefined function get_sites() in F:\www\wp50\wp-content\plugins\advanced-custom-fields\includes\admin\admin-upgrade.php:71
Could you add query parameter /wp-content/plugins/advanced-custom-fields-pro/assets/font/acf.ttf?57601716 , because cloudflare blocks loading this fonts and thats why UI breaks 

https://monosnap.com/file/P5AwPVUgDmCzU6dOXe3iuG3yfg1wUm
Related to issue #764 The issue seems to persist for blocks that use the repeater field.  [Here is a screencast](https://youtu.be/WZVf_vSpeOs) that demonstrates the issue.  Anything I can do to fix the issue?  Or is it possible to apply the same fix for the repeater field as was applied for the other fields?

*Edit: I linked to the wrong screencast before.
Hey Elliot,

thanks a lot for your work every day. I have a question about ACF and the future of blocks.

1. Would it be possible to add ACF fields to a WordPress core block with the ability to add custom class names to the block container and to add inner/wrapping HTML?

2. Would it be possible to add ACF blocks to an ACF group/wrapper block?

The idea is, that ACF provides a group block, which allow us to add inner blocks.






Noticed an issue today where the fields in my Field Group appeared out of order after a Sync. This only affects the admin inside of the ACF tools, not when editing content itself.

**EXAMPLE:** We have a local Field Group with `Ribbon 1`, `Content Ribbons`, and `Page Anchor Ribbon` in that order. Uploaded json file to remote server, go to ACF admin screen and sync Field Group. Edit the Field Group and our ribbons are showing as `Content Ribbons`, `Page Anchor Ribbon`, and then `Ribbon 1`.

**FINDINGS:** After looking in the database, I found that all the fields imported to the field group were all uploaded with the same `menu_order` and so WordPress is seemingly displaying them in alphabetical order instead. When I update the `menu_order` values to 0,1,2 in the order I want them, they now show up the way that they "should have" originally.

**USABILITY ISSUE:** We sometimes use acf-json as a "two-way street", so it's important that the database definitions remain the same between local and live in case we make an edit in live and then pull down the json file to sync to local. Admins should not have to worry about whether the field definitions exist in the proper order after syncing from one site to another.


Thanks for the great plugin, we have an agency Pro license and acf-json specifically has been a huge boon to us. I'm happy to look into a PR for this if you would find it helpful.
Hello 
as per the documentation   : https://www.advancedcustomfields.com/resources/oembed/ 
the iframe is unescaped? 
will it be possible to provide a solution based on this? 
https://developer.wordpress.org/reference/functions/wp_filter_oembed_result/

Thanks
I have two suggestions:

### Group tabs

Right now we have "Tabs" and "Group" field types.
Let's imagine a page with 2 parts: 
- Intro (with title and text) 
- body (with title and text too)

Here is what it would look like in the current ACF version:
![acf](https://user-images.githubusercontent.com/15833842/59768507-c5a92800-92a4-11e9-8cb3-2e3a7075b1eb.png)

And in my PHP code:
```
$fields = get_fields();

echo $fields->intro_title
echo $fields->intro_text

echo $fields->body_title
echo $fields->body_text
```
The problem is that i have to manually prefix every single field in each tab to avoid the problem where two fields would have the same name. When you work a lot with ACF it's a repetitive task

**Solution:** 
What would be great: a checkbox "Act as a group" in the Tab field otpions. When checked, there would be a Field Name for that tab, and it would just act as a group. This way, the PHP code would look like this:

```
$fields = get_fields();

echo $fields->intro->title
echo $fields->intro->text

echo $fields->body->title
echo $fields->body->text
```

... and i would not have to copy paste the prefix for each field i add :smile: 

### Internal Links / External link
I would love to have a way to limit links to internal pages or external URL on the Link field type.
Right now, the Link type allows to add both.

I understand you probably have other priorities, but would you accept a pull request for any of those features? Thanks
Using Wordpress 5.1.1 and the latest ACF 5.8.0 release, when I set custom fields to conditionally show based on taxonomy / custom taxonomy the fields do not initially show up when creating a new post the correct conditions are met, and only show when the page is refreshed.

I've tested this on a clean Wordpress 5.1.1. install where I created a field group set to show only if a post has a specific category. When adding a new post, the fields do not show up when the category is selected, but show when the post is published and reloaded.

I'm not sure if it's something I'm doing, but if it's any help this isn't happening with the 5.8.0-beta4 release. :disappointed_relieved:
We make heavy use of local JSON at my company to keep our ACF field groups within our managed codebase. It's awesome!

When we are working on a site locally, we actively edit our field groups through the WP interface, which means we keep the database in sync with the JSON files. After we deploy our themes to the production server, the field groups live in the theme directory as JSON but **not** in the database.

We also frequently export / import the database from production to our local dev environment. A minor drawback of this is that the field groups are no longer synced to our local database, so we have to visit the "sync available" section of the ACF settings and re-sync them manually.

It would be great if we could automate that process as part of the workflow that we use to pull the production database and import it. I investigated how I would write a WP-CLI plugin for the task, but I discovered that ACF has no accessible function for syncing some or all field groups into the database.

It would be awesome if such a function existed, either in PHP or as a REST-accessible trigger. If it were a function, I'd expect it might work something like this:

```php
acf_sync_field_groups([$group_ids], [$force]);
```
* `$group_ids` (array) (Optional) The unique ids of one or more ACF field groups. If falsy, attempt to sync all field groups in the current theme's `acf-json` directory. Defaults to `false`.
* `$force` (bool) (Optional) If `false`, only perform the sync for a given field group if it does not exist in the database. If `true`, sync all listed field groups, replacing the version in the database if necessary. Defaults to `false`

I'd love to hear others' thoughts on this idea.
I have an ACF block (registered with `acf_register_block`) with the `supports` parameter set to `'supports' => array('anchor' => true)`.

The "HTML Anchor" field appears in the "Advanced" section of the block settings within Gutenberg **as I would expect**.

However, if you set the value it **doesn't get saved** and there is **no way to return that value** on the front end, from what I can tell.

The documentation for [`acf_register_block()`](https://www.advancedcustomfields.com/resources/acf_register_block/) says that "All properties from the JavaScript block supports documentation may be used" however the `anchor` property appears to not to be supported?

Am I doing something wrong or is the `anchor` field not supported?

As far as I can tell, the only way with v5.8.0 RC2 to return an `id` value to the block is to use `$block['id']` which returns the ID of the block - which isn't great for anchoring as I want a more readable anchor.

Use case:
I want to link to `#working-together` and not `#block_5cbc6ddc24a87`.