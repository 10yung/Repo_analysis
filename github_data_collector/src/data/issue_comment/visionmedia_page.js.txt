When `hashbang` is `true`, urls like http://localhost/?foo=bar got
redirected to http://localhost/?foo=bar#!?foo=bar.
This duplicated the query string and made the url ugly.
This commit fixed this problem by making urls like
http://localhost/?foo=bar redirect to http://localhost/#!?foo=bar

I made some nightwatch tests to make sure all use cases are covered.
The tests can be found here: https://github.com/S2-/page.js-nightwatch-test

All urls work as expected:
```
hashbang: false

navigating to http://127.0.0.1:8001/ -> http://127.0.0.1:8001/
clicking a link href="/hello" -> http://127.0.0.1:8001/hello
clicking a link href="/hello?some=query&str=ing" -> http://127.0.0.1:8001/hello?some=query&str=ing
navigating to http://127.0.0.1:8001/?some=query&str=ing -> http://127.0.0.1:8001/?some=query&str=ing
navigating to http://127.0.0.1:8001/hello?some=query&str=ing -> http://127.0.0.1:8001/hello?some=query&str=ing


hashbang: true

navigating to http://127.0.0.1:8000/ -> http://127.0.0.1:8000/
clicking a link href="/hello" -> http://127.0.0.1:8000/#!/hello'
clicking a link href="/hello?some=query&str=ing" -> http://127.0.0.1:8000/#!/hello?some=query&str=ing'
navigating to http://127.0.0.1:8000/?some=query&str=ing -> http://127.0.0.1:8000/#!?some=query&str=ing'
navigating to http://127.0.0.1:8000/?some=query&str=ing#!/hello -> http://127.0.0.1:8000/#!/hello?some=query&str=ing'
```
This resolves an issue where if you set the base to something that matches the beginning of one of your routes, things will not work properly. Eg:

`page.base( '/en' ); // set to english localization`

If you have a route like '/enroll', this will cause errors.

This change fixes the issue.
This line of code is incorrect:

`return null == e.which ? e.button : e.which;`

because `which` returns 1 to mean the primary button, and `button` returns 0 to mean the same thing.

When calling `clickHandler` from a React `onClick`, a synthetic event is supplied which implements `button` but not `which`. As a result, `_which` returns 0 and the event handler skips the event because it was expecting 1. 

I am running base example in IE11 and it always makes a page refresh.

Can anyone provide a working example based on examples/basic?
`page.base('/basic');`
What I should write in `history.redirect` for preventing page refresh in IE11?
Seems we should add an event listener to `hashchange` if `popstate` option equals false and `hashbang` option equals true. In this case, right now back navigation via `history.back()` not working.
When a page base is set e.g `page.base('/test')`
and you have an anchor element pointing to index e.g `<a href="/"`
page.js should route to /test and not /
When using hashbang mode, if I manually change the URL bar my route handlers don't fire.
Considering the route: `/^\/inbox(?:\/?(actionable|other))?$/`

A match will be made for URI: `http://SomeMailServer/inbox`

With expected context.params: `{ 0: undefined }`

Currently pagejs returns an unexpected context.params of: `{ 0: "/inbox" }`
I have the following code: 

```
  console.log(window)
  page(encodeURI(path), state, dispatch, push)
```

As you can see, the console log shows window is an object, yet the page transition fails.

<img width="313" alt="image" src="https://user-images.githubusercontent.com/6144177/57257190-580baa00-701e-11e9-95e5-941f6e79505d.png">

It happens in this line of code: `this.title = (hasDocument && window.document.title);`

Any idea why the window might be undefined? (This is in the browser, not SSR.)

Thanks!
The owner of the pageify-it archive (React integration mentioned in the main page.js Readme file) has archived the project as read-only as of 0.0.14 and as of six months ago. 

That doesn't sound very promising - does it make sense to remove the listing from the Readme?