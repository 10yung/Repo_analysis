As described in https://gist.github.com/rjhansen/67ab921ffb4084c865b3618d6955275f

the mitigations includes

1. Open `gpg.conf` in a text editor.  Ensure there is no line starting with `keyserver`.
    If there is, remove it.
2. Open `dirmngr.conf` in a text editor.  Add the line `keyserver hkps://keys.openpgp.org`
    to the end of it.

So at the very least, the `gpg.conf` file needs reviewing. I'm looking for a good known configuration with sane defaults, came up empty so far.

rework gpg.conf based on upstream changes

- default key: unneccessary
- behavior: merged upstream in 2.1
- keyserver: merged upstream in 2.1 (and some now set in dirmngr.conf)
- personal-cipher-preferences: merged upstream
Maybe add `require-cross-certification` to the gpg.conf?

It is the default in Debian AFAIK with this reason given:

```
# When verifying a signature made from a subkey, ensure that the cross
# certification "back signature" on the subkey is present and valid.
# This protects against a subtle attack against subkeys that can sign.
# Defaults to --no-require-cross-certification.  However for new
# installations it should be enabled.
```

It seems the comments were out of sync with the actual settings.

Hi,
I have a question about following line in the gpg.conf:
`personal-cipher-preferences AES256 AES192 AES CAST5`
Why not also add the Twofish cipher?

Two comment blocks mix up words cipher and digest.

Use more secure options, added options for the secret key and to use when encrypting/signing messages/files because by default sha-1 or ripemd160 and blowfish will be use

There is already a hardened SSH server configuration file, but this new SSH client configuration file will make OpenSSH SSH client prefer stronger ciphers and MACs when the server in question doesn't enforce stronger ciphers and MACs.

More information about the Logjam attack here: https://weakdh.org/

And here are some information what to do as a server admin: https://weakdh.org/sysadmin.html

The README suggests it is possible to have Apache redirect users with insufficiently secure SSL/TLS stacks to some specific page indicating the problem.

http://httpd.apache.org/docs/current/mod/mod_ssl.html#envvars describes the SSL related environmental variables that could be used as part of a `RewriteCond` and `RewriteRule` (http://httpd.apache.org/docs/current/mod/mod_rewrite.html) to redirect users based on their SSL capabilities.

The RewriteRule would look something like:

```
RewriteCond  %{SSL:SSL_CIPHER_USEKEYSIZE} < 256
RewriteRule /* http://some/error/page [L,R=302]
```

This will only work if Apache is set to allow the lesser cipher strengths in its SSL configuration, then use this redirect to point the user elsewhere. Since the user has already transmitted their request data at this point, it is too late in the request to realistically protect anything about the request (session cookies, authentication data).  

If one is really concerned about allowing use of lower strength ciphers then this isn't going to work very well, and they should be omitted from the SSL configuration. This will of course cause a SSL handshake error for some clients.
