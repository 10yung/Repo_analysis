I am using BLKFlexibleHeightBar in my application which supports all device orientations in iPhone X. When I go from portrait to landscape mode, I want to adjust bar height (want to make smaller). Apparently, I am not able to change the height after initialization. 

I am able to change everything (x, y, width) but the height.

Any help?



Hi. Thanks you for great library. I need use it in a child of tabberController, but it not work as expect. 
It seem the SquareCashStyleBehaviorDefiner did not add to top of child view. You can see my attack to know more information:

![screen shot 2018-04-02 at 22 40 33](https://user-images.githubusercontent.com/8202437/38202717-e84d801c-36c6-11e8-90b9-227aeb3f5a5a.png)

Thanks you
When I scroll webview, it shows like this:
![simulator screen shot 2017 6 16 9 33 24](https://user-images.githubusercontent.com/17959278/27208299-82617648-5277-11e7-87e6-e8784abe6978.png)
![default](https://user-images.githubusercontent.com/17959278/27208344-b5989e7e-5277-11e7-9b53-25d8de23f2d5.gif)
Any ideas how to solve this? 


GitHub changed the way Markdown headings are parsed, so this change fixes it.

See [bryant1410/readmesfix](https://github.com/bryant1410/readmesfix) for more information.

Tackles bryant1410/readmesfix#1

@bryankeller Any thoughts to support carthage dependency management?

So we have `UITableView` which is used in our app and `FacebookStyleBarBehaviorDefiner` perfectly matches our requirements, but we have one issue...
Our `UITableView` is aable to load more stuff - pagination. While we load new page `contentOffset` changes and `BLKFlexibleHeightBar` is presented out of nothing, which creates this _weird_ behavior.

Looks like this code is responsible for what's happening:

``` objc
- (void)scrollViewDidScroll:(UIScrollView *)scrollView
{
    if(!self.isCurrentlySnapping)
    {
        CGFloat deltaYOffset = scrollView.contentOffset.y - self.previousYOffset;
        CGFloat deltaProgress = deltaYOffset / (self.flexibleHeightBar.maximumBarHeight-self.flexibleHeightBar.minimumBarHeight);

        self.flexibleHeightBar.progress = self.previousProgress + deltaProgress;

        [self.flexibleHeightBar setNeedsLayout];
    }
}
```

So when I log what values do I have there I've noticed that at some point `deltaYOffset` is negative when it shouldn't while I'm scrolling to the bottom. I've changed this, so I always get positive number there, but then I wasn't able to scroll to the top to see the bar again.

Any ideas how to solve this?

I have a UITabBarController with view controllers embedded in NavigationViewControllers.

Can I use this in a view controller embedded in a NavigationController inside a TAbBarController?

So it's no need to use delegate splitter.

Also adds new example scene to demonstrate scene assembly in storyboard.

With proposed delegate property in BLKFlexibleHeightBarBehaviorDefiner anyone can easily create delegate chains. E.g, when a UITableView sets its delegate to an instance of BLKFlexibleHeightBarBehaviorDefiner but also wants another object to act as the UITableViewDelegate you can write something like this:

```
myBar.behaviorDefiner.delegate = anotherObject;
self.tableView.delegate = (id<UITableViewDelegate>)myBar.behaviorDefiner;
```
