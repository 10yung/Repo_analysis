- that's like a "stay away, and the name is tainted forever" signal these days xD - ok, I'm here anyway, so let's not beat the big drum like that...

What is the best solution to upload files to horizen ??
MIT instead of ISC

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/rethinkdb/horizon/888)
<!-- Reviewable:end -->

Yeah, freedom! Freedom to get auth token!

In some cases, I would like to get auth token of anonymous users.

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/rethinkdb/horizon/887)
<!-- Reviewable:end -->

Is this project dead?

The last commit was on Nov 3, 2016.

I am run rethinkdb / horizon  docker image by using command

docker run -e RETHINKDB_URI=localhost:28015 -v /usr/app/ rethinkdb/horizon
show error
/usr/app doesn't contain an .hz directory

OS Ubuntu 16.4


Server version: 2.0.0

I tried to run a dev environment from the current docker-compose.yml and get the following error when the horizon server started : 
```shell
error: Connection to RethinkDB terminated: ReqlDriverError: Could not connect to 28015:28015.
connect EINVAL 0.0.109.111:28015 - Local (0.0.0.0:0)
```

After several tests, i figure it out and It seems that the CLI hz replace the word __rethinkdb__ by and empty String when using it with the `--connect` option.

I fixed it by replacing the alias of the rethinkdb container : __rethinkdb__ by __rethindbtest__ .
The current working docker-compose.yml 
```yaml
  rethinkdbtest:
    image: rethinkdb
    ports:
      - "28015:28015"
      - "8080:8080"
  horizon:
    image: rethinkdb/horizon
    command: su -s /bin/sh horizon -c "hz serve --dev --connect rethinkdbtest:28015 --bind all /usr/app"
    volumes:
      - /home/rguillome/Documents/perso/study/horizon/cv-backend:/usr/app
    links:
      - rethinkdbtest
    ports:
      - "8181:8181"

```
<!--
If you have a question,  please open a new topic in Horizon's Help forum:
    https://discuss.horizon.io/c/get-help

If you're reporting a bug please include the following:
-->
Server version: 2.0.0
Client version: 2.0.0

Is it possible to add the possibility to pass a list of filters to the findAll method, so we can programmatically add multiple filters to the request ?

It's possible just by changing the method signature and check the type of the parameter (if iterable), if not, fallback on iterate over the argument object.

```javascript
/**
 * @param  {Array} params A list of params objects
 */
TermBase.prototype.findAll = function findAll(fields) {
    var _arguments = fields instanceof Array ? fields : arguments;
    // ...
}; 
```

<!--
If you have a question,  please open a new topic in Horizon's Help forum:
    https://discuss.horizon.io/c/get-help

If you're reporting a bug please include the following:
-->
Server version: 2.0.0
Client version: 2.0.0

On all iOS devices (Andriod untested), horizon simply throws and error and disconnects when trying to send a frame over about ~40Kb and is unable to recover. Receiving large frames are fine and there are no problems on any desktop I have tested. The error object thrown from `.watch().subscribe()` is `{"isTrusted":true}`, but I don't think this error message is relevant. 
<!--
If you have a question,  please open a new topic in Horizon's Help forum:
    https://discuss.horizon.io/c/get-help

If you're reporting a bug please include the following:
-->
Server version: 2.0.0
Client version: 2.0.0

It would appear that let's encrypt needs me to specify the chain.pem file as well as the private key and cert.

When configuring apache all 3 files need to be specified:
SSLCertificateFile /etc/letsencrypt/live/$DOMAIN/cert.pem
SSLCertificateKeyFile /etc/letsencrypt/live/$DOMAIN/privkey.pem
SSLCertificateChainFile /etc/letsencrypt/live/$DOMAIN/chain.pem

I think adding ca_file might be needed and it'd pass in ca: ... to https://github.com/rethinkdb/horizon/blob/a11ac62921d44ad951001c511a78b4324aef9bc0/cli/src/serve.js#L292


