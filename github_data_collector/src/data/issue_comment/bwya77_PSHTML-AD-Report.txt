When looking for old computers and active directory has been restored at some point, all old computers that haven't logged in since the restore happened show the same Modified Date (ie, the day the restore happened)

When I run get-adcomputers looking for LastLogonDate per computer, it is different from what's listed for Modified date.

It would be great to include the computer last logon date or replace Modified date with this since it is a better indicator of when the computer was last used.

Thanks
Running the script and encountering this error

Working on Users Report...
Method invocation failed because [System.Management.Automation.PSCustomObject] does not contain a method named 'Add'.
At C:\temp\adreport.ps1:630 char:1
+ $userphaventloggedonrecentlytable.Add($obj)
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (Add:String) [], RuntimeException
    + FullyQualifiedErrorId : MethodNotFound
The Script is awesome, hoever i noticed that Last Log on Date not populating in the users Tab. 
Removed a lookup on ManagedBy by using some Regex to converting DistinguishedName to Name
Hello,
great script and great work.
It would be nice (and useful) to have the possibility to work on ALL child domains inside a Forest or, at least, to specify the "working domain" as parameter.
Regards.

Red.
Hello and sorry for my English,

I use win 2019 controler in French.

When i launch the script i have this errors :

---------------------------------------------------------------------
**Lot of errors like this with diffrent groups :** 
### `Cannot resolve the manager,    on the group  AccÃ¨s DCOM service de certificats`
-----------------------------------------------------------------------
**errors for users :** 
`Working on Users Report ...
Unable to convert the "value" argument (value "180.00: 00: 00") from "AddDays" to type "System.Double": "Unable to convert the value" 180.00: 00: 00 "of type" System.TimeSpan "In type" System.Double ". "
To the character Line: 946: 4
+ $ expireson = $ passwordsetdate.AddDays ($ maxPasswordAge)

    + CategoryInfo: NotSpecified: (:) [], MethodException
    + FullyQualifiedErrorId: MethodArgumentConversionInvalidCastArgument
 
New-TimeSpan: Unable to link the "End" parameter to the target. Exception when setting "End": "Unable to convert null to type" System.DateTime ". "
To the character Line: 950: 53
+ ... $ daystoexpire = (New-TimeSpan -Start $ today -End $ Expireson) .Days

    + CategoryInfo: WriteError: (:) [New-TimeSpan], ParameterBindingException
    + FullyQualifiedErrorId: ParameterBindingFailed, Microsoft.PowerShell.Commands.NewTimeSpanCommand`

---------------------------------------------------------------------------
**and for computers** 
`Working on Computers Report ...
Get-ADComputer: The server returned the following error: Invalid enumeration context.
To the character Line: 1211: 14
+ $ Computers = Get-ADComputer -Filter * -Properties *

    + CategoryInfo: NotSpecified: (:) [Get-ADComputer], ADException
    + FullyQualifiedErrorId: ActiveDirectoryServer: 0, Microsoft.ActiveDirectory.Management.Commands.GetADComputer`
Thank you very much for this great report. I really appreciate it.

I tried to run the script from my PC against a different AD domain using PSDrive and I almost succeded (for Users, OUs, Groups and Computers) but I got Group Policy from my local domain...
Do you think it would be possible to fully run the report against a different AD domain?

Cheers
frank
First of all, thank you very much for this great report. It is very useful to me.

I want to use local resources for the logos, but when I put the path in the variable, the logo doesn't show.

I tried with 
$CompanyLogo = "C:\Users\Matt\Pictures\leftlogo.jpg" 
and with 
$CompanyLogo = "\\localhost\c$\Users\Matt\Pictures\leftlogo.jpg" 

Any idea how to solve this ?
Using the [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) date format allows the file listing to sort more naturally.

Currently, the script outputs file with the DD-MM-YYYY format, which is horrible.  ISO 8601 uses a YYYY-MM-DD (big->little).
Hi, 
The report looks great. I ran into issues during the compiling report phase. Can you look into this issue?:

Working on Dashboard Report...
Done!
Working on Groups Report...
Done!
Working on Organizational Units Report...
Done!
Working on Users Report...
Done!
Working on Group Policy Report...
Done!
Working on Computers Report...
Done!
Compiling Report...
Get-HTMLContentDataTable : Cannot bind argument to parameter 'ArrayOfObjects' because it is an empty collection.
At C:\Users\adminaspect\Documents\AD-reportMdG.ps1:1401 char:45
+ ... alReport.Add($(Get-HTMLContentDataTable $NewCreatedUsersTable -HideFo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Get-HTMLContentDataTable], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorEmptyCollectionNotAllowed,Get-HTMLContentDataTable

Get-HTMLContentDataTable : Cannot bind argument to parameter 'ArrayOfObjects' because it is an empty collection.
At C:\Users\adminaspect\Documents\AD-reportMdG.ps1:1498 char:45
+ ... alReport.Add($(Get-HTMLContentDataTable $NewCreatedUsersTable -HideFo ...
+                                             ~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Get-HTMLContentDataTable], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorEmptyCollectionNotAllowed,Get-HTMLContentDataTable

Save-HTMLReport : Cannot bind argument to parameter 'ReportContent' because it is null.
At C:\Users\adminaspect\Documents\AD-reportMdG.ps1:1545 char:32
+ Save-HTMLReport -ReportContent $FinalReport -ShowReport -ReportName $ ...
+                                ~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Save-HTMLReport], ParameterBindingValidationException
    + FullyQualifiedErrorId : ParameterArgumentValidationErrorNullNotAllowed,Save-HTMLReport
