[x] I've read and accepted the [Bug Reporting Howto](https://github.com/linrunner/TLP/blob/master/.github/Bug_Reporting_Howto.md)

After updating the kernel via dnf, thresholds seem to be ignored and the laptop charges till 100%.

**Expected behavior**

The thresholds should be applied and the device should stop charging at the `charge_stop_threshold` value.

**To Reproduce**

Steps to reproduce the unexpected behavior:

Update kernel to 5.4.x, set charging thresholds.

1. Does the problem occur on battery or AC or both? AC
2. Actions to reproduce the behaviour, see above.
3. Shell commands entered and their output
4. **Full output of `tlp-stat` via https://gist.github.com/ for *all*
   matching cases of 1.**

https://gist.github.com/choeffer/484cb7140559f996df1e4600a8d1e9c5

**Additional context**

If I can provide any logs which might help to narrow down the issue, please let me know.

Hi @all,

I need help with the upcoming release.

**What has changed?**
From a user perspective, the most important change is the **new configuration scheme**:
- **/etc/default/tlp** is replaced by **/etc/tlp.conf**
- Settings are read in the following order:
1. Intrinsic defaults
2. **/etc/tlp.d/*.conf** - Drop-in customizations
3. **/etc/tlp.conf**     - User configuration

- In case of identical parameters, the last occurence has precedence. This also means **/etc/tlp.conf** will override anything else.
- Config files are now parsed instead of sourced by the shell â€“ no more shell expansion.

Apart from that 1.3 is a comprehensive maintenance release. See the [changelog](https://github.com/linrunner/TLP/blob/master/changelog) for details.

**Where do I get packages?**
See the [download page](https://download.linrunner.de/packages/) for Arch Linux, Debian, Fedora and Ubuntu. If your distro is not contained, you may install the master branch (see ["Installing from Source"](https://linrunner.de/en/tlp/docs/tlp-developer-documentation.html#sourcecode)).

**Test Objective: Regressions**
The new configuration scheme is obviousy critical functionality. The maintenance release contains many other changes. With your help I want to make sure that no new problems have been introduced.

**What do I need from the testers?**
Please start the beta after installing with

    tlp start

I'm expecting your outputs of

    sudo tlp-stat

on battery and AC (via https://gist.github.com/ please). 

**Thanks for testing!**
On Linux 5.3 (5.3.0-26 on Bionic [KDE Neon]) with i5-2450M, CPU frequency somehow locks at the lowest values on both AC and BAT. Intel p-state is used. Related settings are:

```
#CPU_SCALING_GOVERNOR_ON_AC=powersave
#CPU_SCALING_GOVERNOR_ON_BAT=powersave
#CPU_SCALING_MIN_FREQ_ON_AC=0
CPU_SCALING_MAX_FREQ_ON_AC=2500
#CPU_SCALING_MIN_FREQ_ON_BAT=0
CPU_SCALING_MAX_FREQ_ON_BAT=900
CPU_HWP_ON_AC=balance_performance
CPU_HWP_ON_BAT=balance_power
#CPU_MIN_PERF_ON_AC=0
CPU_MAX_PERF_ON_AC=80
#CPU_MIN_PERF_ON_BAT=0
CPU_MAX_PERF_ON_BAT=30
CPU_BOOST_ON_AC=0
#CPU_BOOST_ON_BAT=0
```

As you see, on AC max frequency is supposed to be 2500. But it never gets above 1100, and most of the time it is in 800s even under heavy load. Needless to say, everything is very, very slow, you can't even watch a video without it stuttering constantly.

Running `cpupower -c all frequency-set -u 2500Mhz` fixes things, and frequency starts to scale normally.

Before the upgrade to 5.3 it was okay.

**Expected behavior**

To run as it was any time before.

**To Reproduce**

Steps to reproduce the unexpected behavior:

1. Does the problem occur on battery or AC or both? Both.
2. Actions to reproduce the behaviour. Use kernel 5.3, I suppose?
3. Shell commands entered and their output
4. tlp-stat: https://gist.github.com/TiGR/b1c62add2058fd59e46cc13a60e54b26

**Is your feature request related to a problem? Please describe.**

Whenever my Thinkpad T480s reboots or is unplugged/plugged in, the keyboard backlight is turned on. I would like a feature in TLP to restore the backlight state to its last state before reboot/plugged. I could probably do this with udev but I already have TLP running and it seems like a simple configuration setting in tlp.conf would be much simpler.

### Summary
Using Fedora 30 and `tlp-1.2.2-1.fc30`, execution of `/usr/sbin/tlp suspend` fails. The same command works correctly when using `tlp-1.2.1-1.fc30`. Linked below are straces for respectively old/working [1] and new/broken [2] versions.

Please note the following difference - in the new version a path where tlp looks for `rfkill_saved` seems to be changed from `/run/tlp/...` to `/var/lib/tlp/...`, however the latter does not exist in the underlying OS.

This kinda makes sense given the recent [3] introduction of the `TLP_VAR` defaulting to `/var/lib/tlp`.

There is a bugzilla report [4] opened for this issue around 1 month ago, but I do believe GitHub is a better place for moving forward with this problem.

### Debug
#### TLP 1.2.1
```
openat(AT_FDCWD, "/run/tlp/rfkill_saved", O_WRONLY|O_CREAT|O_TRUNC, 0666) = 3
```

#### TLP 1.2.2
```
openat(AT_FDCWD, "/var/lib/tlp/rfkill_saved", O_WRONLY|O_CREAT|O_TRUNC, 0666) = -1 ENOENT (No such file or directory)
```

### Analysis
`save_device_states` is trying to create and/or write to a file, but never takes care of creating a proper directory structure. In my system the directory `/var/lib/tlp` itself does not exists, therefore a simple `echo blablabla > /var/lib/tlp/rfkill_saved` will fail.

### Workaround
After creating `/var/lib/tlp` directory on my system everything went back to normal. This however should be done either at the moment of installing/upgrading the package or inside the script trying to create files inside this directory.

### Links
[1] https://bugzilla.redhat.com/attachment.cgi?id=1617294
[2] https://bugzilla.redhat.com/attachment.cgi?id=1617295
[3] https://linrunner.de/en/tlp/docs/tlp-developer-documentation.html
[4] https://bugzilla.redhat.com/show_bug.cgi?id=1744154
To pass e-star7 , the tlp configuration need to be changed.
This is that one we are currently passed e-star7 and all Dell Ubuntu edition enabled with Bionic are all included this configuration to pass e-star7 compliance.
http://paste.ubuntu.com/p/wq2XhnR4XN/

I would like to contribute back that configuration that Dell Ubuntu edition used to pass e-star7.
So, that likely every laptop use the same configuration can save as much power as what e-star7 required.

How do you think?

Accessing http://linrunner.de/ via the Tor network fails with 503 error.

Please provide .onion resource and/or make the website fully available via the Tor network if you care about user privacy.

Thank you
My understanding is that currently only ThinkPad devices have advanced battery features available, due to the existence of tp_smapi.
For Dell devices there exists the 'Dell Command | Configure' which appears to provide similar functionality in regards to battery management, for example [running off AC power](https://www.dell.com/support/manuals/us/en/04/command-configure-v4.1/dcc_cli_4.1.0/-peakshiftcfg?guid=guid-9c69fbdc-fbe0-457f-a18e-4e0f350e5923&lang=en-us) and [express charging](https://www.dell.com/support/manuals/us/en/04/command-configure-v4.1/dcc_cli_4.1.0/-advbatterychargecfg?guid=guid-44a3b124-7215-47b3-aafa-5a2f0bca8c11&lang=en-us), even though the interface is rather suboptimal.
That's all the more reason to build a tool for it, but the question is if it should be this one.
Would it be possible to disable a wireless device if it has seen no connections for more than X minutes ?
### Symptom data
This may be unique to certain firmware / models, but I'm finding that one of my devices isn't enabling L0s for ASPM, even though it's capable of it and PCIE_ASPM_ON_BAT=powersave and pcie_aspm=force is set for cmdline boot.

1. Does the problem occur on battery or AC or both?
Bat
2. Attach the *full* output of `tlp-stat` via https://gist.github.com/ for *all* cases of 1.
https://gist.github.com/waldo99/c566e1aec8e33b8df5ee5b4d7ae3b265
### Expected behavior
All capable devices set to L1 L0s for ASPM.
### Actual behaver
One device needs to be forced - As you can see from lspci -vv | grep ASPM:
```
		LnkCap:	Port #6, Speed 5GT/s, Width x1, ASPM L0s L1, Exit Latency L0s <512ns, L1 <16us
			ClockPM- Surprise- LLActRep+ BwNot+ ASPMOptComp-
		LnkCtl:	ASPM L0s L1 Enabled; RCB 64 bytes Disabled- CommClk+
		L1SubCap: PCI-PM_L1.2+ PCI-PM_L1.1+ ASPM_L1.2+ ASPM_L1.1+ L1_PM_Substates+
		LnkCap:	Port #3, Speed 5GT/s, Width x1, ASPM L0s L1, Exit Latency L0s <512ns, L1 <16us
			ClockPM- Surprise- LLActRep+ BwNot+ ASPMOptComp-
		LnkCtl:	ASPM L1 Enabled; RCB 64 bytes Disabled- CommClk+
		L1SubCap: PCI-PM_L1.2+ PCI-PM_L1.1+ ASPM_L1.2+ ASPM_L1.1+ L1_PM_Substates+
		LnkCap:	Port #0, Speed 2.5GT/s, Width x1, ASPM L0s L1, Exit Latency L0s unlimited, L1 <64us
			ClockPM+ Surprise- LLActRep- BwNot- ASPMOptComp+
		LnkCtl:	ASPM L0s L1 Enabled; RCB 64 bytes Disabled- CommClk+
		L1SubCap: PCI-PM_L1.2+ PCI-PM_L1.1+ ASPM_L1.2+ ASPM_L1.1+ L1_PM_Substates+
		LnkCap:	Port #0, Speed 2.5GT/s, Width x1, ASPM L0s L1, Exit Latency L0s <4us, L1 <32us
			ClockPM+ Surprise- LLActRep- BwNot- ASPMOptComp-
		LnkCtl:	ASPM L1 Enabled; RCB 64 bytes Disabled- CommClk+
```
### Steps to reproduce the problem
Change from/to ac/bat. I fix it using this script: 
http://drvbp1.linux-foundation.org/~mcgrof/scripts/enable-aspm

Could this be incorporated into TLP?