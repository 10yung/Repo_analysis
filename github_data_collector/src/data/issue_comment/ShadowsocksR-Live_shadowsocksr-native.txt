Please answer these questions before submitting your issue. Thanks!

### What version of shadowsocks-native are you using?
Latest

### What operating system are you using?
Ubuntu 18.04 x64 - Server
Windows 10 x64 - Client with Firefox Fox Proxy Addons

### What did you do?
Server and client running perfectly. But I'm trying to build a proxy where firewall port open is not possible. For testing, I created a Google Cloud instance with all port disabled. From shell I configured the server, for temporary I opened firewall and it seems SSR works perfectly. Then I closed all ports from the cloud console. 

Now, I'm trying to establish an Argo tunnel with Nginx. I installed `[cloudflred](https://developers.cloudflare.com/argo-tunnel/downloads/)`. After installing I created a records in `/etc/hosts`
127.0.1.1 subdomain.domain.tls
then I started the tunnel issuing `cloudflared tunnel --url https://subdomain.domain.tld` which opened a private tunnel bypassing the firewall. I got a URL just like this, https://matt-rs-replacement-affected.trycloudflare.com later I created a CNAME record in DNS for zone subdomain.domain.tld > matt-rs-replacement-affected.trycloudflare.com > Auto

### What did you expect to see?
As the server works fine if I open port 443 and 80, I'm expecting this should work a well. But don't know what kind of modification needed in the config file. I tried this.
```
{
	"password": "goodpassword",
	"method": "chacha20",
	"protocol": "auth_sha1_v4",
	"protocol_param": "",
	"obfs": "http_simple",
	"obfs_param": "",
	"udp": false,
	"timeout": 300,
	"server_settings": {
		"listen_address": "0.0.0.0",
		"listen_port": 3636
	},
	"client_settings": {
		"server": "subdomain.domain.tld",
		"server_port": 443,
		"listen_address": "0.0.0.0",
		"listen_port": 1080
	},
	"over_tls_settings": {
		"enable": true,
		"server_domain": "subdomain.domain.tld",
		"path": "/50854b49-319d-4388-8977-d520bdd1ff16/",
		"root_cert_file": ""
	}
}
```
### What did you see instead?
I started proxy but no connection goes with the tunnel.

### What is your config in detail (with all sensitive info masked)?

尝试自行编译，不过去。。。
多用户使用想对接sspenl的话可以嘛
请问ssr-client支持透明代理吗？类似ss-redir的功能
ssr-client: /home/ssrlive/Desktop/ssr-n/src/client/client.c:639: do_ssr_receipt_for_feedback: Assertion `error == ssr_ok' failed.
Aborted (core dumped)
以关键字 [去中心化的VPN](https://www.google.com/search?q=%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E7%9A%84VPN&oq=%E5%8E%BB%E4%B8%AD%E5%BF%83%E5%8C%96%E7%9A%84VPN&aqs=chrome..69i57&sourceid=chrome&ie=UTF-8) 搜索了一圈，似乎毫无头绪，

大伙有什么切实可行的建议吗？随着我党的封锁越来越疯狂，最终中国大陆的网络状况彻底朝鲜化并非杞人忧天。那么，匿名的，动态端口的，P2P的加密网络也许就势在必行，它必须能做到，即使在大天朝局域网里，也可以避开我党审查而自由地交换信息。

此前关注过 [ZeroNet](https://zeronet.io/), 看起来不错，但 GFW 只要封了 `零网` 监听端口，整个系统立马哑火。

> 为了防止 GFW 封锁特定端口，使用 TLS 技术，让软件监听在 443 端口也许是个好想法？

也关注过 [Mysterium dVPN](https://mysterium.network/)  ，但它做了几年，到现在还是应者寥寥。从2013年就开始搞的 P2P 微博系统 [twister](http://twister.net.co/) 在短暂的火爆后到现在几乎无人问津。

是什么导致 P2P 网络尤其是 VPN 方面的应用推广不起来？

有看法的同学请留言。
希望 `C` 和 `libuv` 老手能提供解决方案或者建议.

- 接入 `SSR` 客户端 的 `用户APP` 主动重置不少的 incoming 连接, `connection reset by peer`, 原因不明.

- 在 客户端 按下 ctrl + c 以后, 连接不能全部断开, 存在内存泄漏, 估计是某种 `接入失败` 的情景没有正确处理.

- 使用 `uv-mbed` 封装的 `tls_cli.c` 和 `raw` socket 版的 `tls_cli2.c` 的行为并不一致, 预期中这二者应该完全等效, 可以随意置换的.

也算一个总结, 提醒后来人少走弯路.

- 写入 socket 时的内存管理
    [uv_write](http://docs.libuv.org/en/v1.x/stream.html#c.uv_write) 函数写网口时, 写入数据的内存必须由你管理, 在 回调函数 [uv_write_cb](http://docs.libuv.org/en/v1.x/stream.html#c.uv_write_cb) 内部释放. 如果你不信邪, 在 `uv_write` 执行完以后马上释放, 恭喜你掉坑里了. 我就在这坑里呆了一星期. 因为这么干的结果是, 在 `Windows` 下一切正常, 在 `Linux` 下会随机写失败. 估计 `Windows` 对这块写内存复制了一份以增加安全性, 类 `unix` 平台就不管你死活了. 这点差异性就足以逼你发疯痛不欲生了.

- 接收数据包 `回调函数` 的状态值处理
    [uv_read_start](http://docs.libuv.org/en/v1.x/stream.html#c.uv_read_start) 函数的回调是 [uv_read_cb](http://docs.libuv.org/en/v1.x/stream.html#c.uv_read_cb) , 它有参数 `ssize_t nread`, 这个 `nread` 在 [文档](http://docs.libuv.org/en/v1.x/stream.html#c.uv_read_cb) 里说得极其简略, 实际它非常重要, 每一种值都必须妥善处理. 当 `nread` 等于 0 时, 表示 socket 正忙, 你就啥也别干, 直接返回, 这时读取动作还会继续, 直到读成功 (nread > 0) 或读失败 (nreqd < 0) 或读完 (nread == UV_EOF) , 这个回调会再次被调用. 
    我就是没有正确处理 `nread==0` 的情景, 被坑得很惨. 直接的后果就是, 刷推时老是刷不下来, 带图片发推时总是失败. 浪费巨量时间.

- 连接服务器函数的返回值处理
    对 [uv_tcp_connect](http://docs.libuv.org/en/v1.x/tcp.html#c.uv_tcp_connect) 函数返回值的检查极其重要, 见 [这个 isuue](https://github.com/libuv/libuv/issues/391). 如果你不处理它小于 0 的情况, 释放为这个函数分配的资源, 那你永远没机会了, 因为回调函数 [uv_connect_cb](http://docs.libuv.org/en/v1.x/stream.html#c.uv_connect_cb) 再也不会被调用. 造成资源泄漏. 如果你网络碰巧不通, 恭喜你, 短时间内大量的连接请求涌进来又马上失败但没有释放内存,系统内存会迅速耗光, 蓝屏死机, BSOD. 耶! ✌️! 也!

- 同步函数的跨平台陷阱
    [uv_mutex_t](http://docs.libuv.org/en/v1.x/threading.html#c.uv_mutex_t) 在 Windows 下其实就是 `临界区`, `临界区` 是可以重入的.  而在类 `unix` 系统下是 `pthread_mutex_t`, 它是不可重入的. 一个代码块, 用同一 `uv_mutex_t` 多次锁定, 这在 `Windows` 下毫无问题, 在 `unix` 下就把你的程序卡得死死的.

如果你踩过其它什么坑, 欢迎回帖, 充当后来人的灯塔, 照亮大伙前进的路.

Please answer these questions before submitting your issue. Thanks!

### What version of shadowsocks-native are you using?
releases 0.5   X86

### What operating system are you using?
windows10

### What did you do?
TCP  UDP通讯测试

### What did you expect to see?
TCP UDP正常可使用

### What did you see instead?
同配置文件下
client TCP:       
ssr-client.exe:error: connect failed about _server_ "detectportal.firefox.com": connection refused
ssr-client.exe:error: connect failed about _server_ "accounts.firefox.com.cn": connection refused
ssr-client.exe:error: connect failed about _server_ "push.services.mozilla.com": connection refused
ssr-client.exe:error: connect failed about _server_ "addons.g-fox.cn": connection refused
ssr-client.exe:error: connect failed about _server_ "addons.g-fox.cn": connection refused
ssr-client.exe:error: connect failed about _server_ "tiles.services.mozilla.com": connection refused
ssr-client.exe:error: connect failed about _server_ "addons.g-fox.cn": connection refused
ssr-client.exe:error: connect failed about _server_ "tiles.services.mozilla.com": connection refused
ssr-client.exe:error: connect failed about _server_ "accounts.firefox.com.cn": connection refused
UDP:一直提示超时(或无任何反应)

ssr-local TCP:  正常 UDP:不支持无法测试

### What is your config in detail (with all sensitive info masked)?
{
    "server": "",
    "server_port": 10102,
    "password": "ExK7yXeCCCC",
    "method": "aes-256-cfb",
    "protocol": "origin",
    "protocol_param": "",
    "obfs": "plain",
    "obfs_param": "",
    "local_address": "0.0.0.0",
    "local_port": 1083,
    "udp": true,
    "timeout": 300
}

希望作者能给些帮助
Please answer these questions before submitting your issue. Thanks!

### What version of shadowsocks-native are you using?
当前master分支

### What operating system are you using?
iOS11.4.1

### What did you do?
开启ssr的UDP转发，每打开一个app，连接数增加内存就增加，很快15M

### What did you expect to see?
UDP转发是不是存在内存泄露或是代码错误

### What did you see instead?


### What is your config in detail (with all sensitive info masked)?
