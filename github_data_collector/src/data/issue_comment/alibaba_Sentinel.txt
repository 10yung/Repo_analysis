<!--  Thanks for submitting a pull request! Here are some tips for you:
1. Please make sure you have read and understood the contributing guidelines: https://github.com/alibaba/Sentinel/blob/master/CONTRIBUTING.md
2. Please make sure the PR has a corresponding issue.
-->

### Describe what this PR does / why we need it
Add SPI for logger.

### Does this pull request fix one issue?
#757 #1163 #1261
<!--If that, add "Fixes #xxxx" below in the next line. For example, Fixes #15. Otherwise, add "NONE" -->

### Describe how you did it


### Describe how to verify it
1. Create a class which implements the {@link Logger} SPI interface
2. Use a {@link LogTarget} to specify the log type
3. Implement your own method 
4. Add your logger in {@code com.alibaba.csp.sentinel.log.Logger} file which is stored in {@code resources/META-INF/services/} directory

The logback demo see `sentinel-demo-log-logback` module.

### Special notes for reviews

  @Test
    public  void test() throws InterruptedException {
        int i=0;
        while (i<100){

            System.out.println(TimeUtil.currentTimeMillis());
            Thread.sleep(1000);
        }
    }

在jdk 8 下 返回 一致是0
## Issue Description
Use Nacos to configure current rules. The rules take effect, but the dashboard cannot view them

### Describe what happened (or what feature you want)

使用sentinel 集成spring cloud gateway同时用nacos作为配置中心，限流规则从nacos拉去
在配置文件中设置限流的类型为gw-flow，规则生效但是在dashboard无法查看
设置限流类型为degrade，规则生效且在dashboard可以查看

配置文件如下：

```yaml
spring:
    sentinel:
      datasource:
        flow:
          nacos:
            server-addr: localhost:8848 
            dataId: ${spring.application.name}-gw-flow-rules.json #dataId
            groupId: DEFAULT_GROUP 
            rule-type: gw-flow
        degrade:
          nacos:
            server-addr: localhost:8848
            dataId: ${spring.application.name}-degrade-rules.json
            groupId: DEFAULT_GROUP
            rule-type: degrade
```

### Describe what you expected to happen


### How to reproduce it (as minimally and precisely as possible)

1. 
2. 
3. 

### Tell us your environment

dashboard 版本为1.7.1
sentinel 版本为1.7.1
spring cloud版本为 Greenwich
sentinel-datasource-nacos版本为 1.7.1

### Anything else we need to know?




<!-- Here is for bug reports and feature requests ONLY! 

If you're looking for help, please check our mail list and the Gitter room.

Please try to use English to describe your issue, or at least provide a snippet of English translation.
-->

## Issue Description

我们这面现在因为record.log打印的太多导致服务器磁盘爆掉

### Describe what happened (or what feature you want)

希望新增控制record.log的数量和大小功能
### Describe what you expected to happen

像日志框架一下，可以增加数量，大小，自动清理功能
### How to reproduce it (as minimally and precisely as possible)

1. 长时间不清理就可以复现

### Tell us your environment
linux，docker

### Anything else we need to know?
暂无



Better compatibility of dashboard to sentinel-transport-simple-http(on Content-Type)

### Describe what this PR does / why we need it
Use legacy strict `Content-Type` to legacy `sentinel-transport`.

### Does this pull request fix one issue?
Related to #1236 

### Special notes for reviews
Special dealing only for those transport module < `1.7.1`
<!-- Here is for bug reports and feature requests ONLY! 

If you're looking for help, please check our mail list and the Gitter room.

Please try to use English to describe your issue, or at least provide a snippet of English translation.
-->

## Issue Description
when i read this chapeter "Dynamic Rule Configuration" , I meet a problem:
I install the **nacos and sentinel dashboard in my centos7 system,** I create a **spring cloud gateway microservice**  named **"nacos-gateway"**, so I create a file in nacos named **"nacos-gateway-sentinel"** the format is **json**  and the content is
**[
    {
        "resource": "nacos-provider_route",
        "limitApp": "default",
        "grade": 1,
        "count": 6,
        "strategy": 0,
        "controlBehavior": 0,
        "clusterMode": false
    }
]**
the  **"nacos-provider_route"** is my **gateway route** resource name, is route to my **provider microservice**.
Todo it , I do the follow things:

1. I implements **DynamicRuleProvider**  , **DynamicRulePublisher** and config nacos by **NacosConfig**  java config class  and as to be  spring beans.

2. I implements **InitFunc** and as to be  spring beans.

3. config my bootstrap.yml  like this:
**server:
  port: 80
spring:
  application:
    name: nacos-gateway
  cloud:
    nacos:
      discovery:
        server-addr: 192.168.253.150:8848
      config:
        server-addr: 192.168.253.150:8848
        file-extension: json
##sentinel dashboard
    sentinel:
      transport:
        dashboard: 192.168.253.150:8718
##sentinel datasource nacos
      datasource:
        ds:
          nacos:
            server-addr: 192.168.253.150:8848
            dataId: ${spring.application.name}-sentinel
            groupId: DEFAULT_GROUP
            rule-type: flow**
finally I run de springboot application find: My idea is not implement.
Type: *bug report* or *feature request*

### Describe what happened (or what feature you want)


### Describe what you expected to happen


### How to reproduce it (as minimally and precisely as possible)

1. 
2. 
3. 

### Tell us your environment


### Anything else we need to know?




权限控制和热点参数限流的database实体放入rule对象里面了，而其他规则没有做这一层的封装，使用test目录下的zookeeper规则配置将规则写入zookeeper后，客户端使用demo中的方法配置数据源时，这两种类型的规则不能用相同的方式获取到，需要重写Converter方法，提取rule对象里面的内容进行赋值

![image](https://user-images.githubusercontent.com/24221480/72424403-e5fc7f00-37c0-11ea-8d26-cd5e2ee01ab5.png)




### Describe what this PR does / why we need it
Please refer to #1253 

Improve unit test for HttpEventTask.

### Does this pull request fix one issue?
Yes.

### Describe how you did it
Change single read into iteration.

### Describe how to verify it
Do post request larger than 10kB.

### Special notes for reviews
Nope
## Issue Description
Currently version segment is defined in every `pom.xml`.

### Describe what happened (or what feature you want)
Every version segment should be synchronized if there is any change.

### Describe what you expected to happen
Introduce the ${revision} placeholder 

RT

![image](https://user-images.githubusercontent.com/23024524/72400337-e7f41d00-3783-11ea-84d3-09d04aa7496b.png)

这里的buffedReader一次读不完数据。导致body报文被截取。问题能修一下吗。

我们公司在用，现在被迫只能改源码自己打包了。