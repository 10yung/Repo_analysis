```
library(diffobj)
lm1 <- lm2 <- lm(mpg ~ hp, mtcars)
attr(lm2$qr$qr, 'assign') <- c(1, 0)
diffPrint(unclass(lm1), unclass(lm2))
```
<img width="540" alt="image" src="https://user-images.githubusercontent.com/6105908/68489299-d6871580-0214-11ea-99d9-eff75b826348.png">

Should preserve one more $qr
The link to GNU docs flips the location and the text description displaying the link and link to the text description.
Basically avoid confusing diffs like this one:

![image](https://user-images.githubusercontent.com/6105908/64745055-4fe3df80-d4d4-11e9-92e0-6c3fbf6c95ba.png)

Each row is expected to be the same, so we would want to see the row by row differences, not finding stuff that matches alter in the hunk.

```
R: install.packages("diffobj")
```
 

> Installing package into ‘/usr/local/lib/R/site-library’
> (as ‘lib’ is unspecified)
> trying URL 'https://cloud.r-project.org/src/contrib/diffobj_0.2.3.tar.gz'
> Content type 'application/x-gzip' length 434192 bytes (424 KB)
> downloaded 424 KB
> * installing *source* package ‘diffobj’ ...
> ** package ‘diffobj’ successfully unpacked and MD5 sums checked
> ** using staged installation
> ** libs
> gcc -fopenmp -I"/usr/share/R/include" -DNDEBUG     -fpic  -g -O3 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -c diff.c -o diff.o
> gcc -fopenmp -I"/usr/share/R/include" -DNDEBUG     -fpic  -g -O3 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -c diffobj.c -o diffobj.o
> gcc -fopenmp -I"/usr/share/R/include" -DNDEBUG     -fpic  -g -O3 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -c init.c -o init.o
> gcc -fopenmp -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o diffobj.so diff.o diffobj.o init.o -L/usr/lib/R/lib -lR
> installing to /usr/local/lib/R/site-library/00LOCK-diffobj/00new/diffobj/libs
> ** R
> ** inst
> ** byte-compile and prepare package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
> ** testing if installed package can be loaded from temporary location
> 2019/07/04 08:28:20 true
> 2019/07/04 08:28:20 0 1 1
> 2019/07/04 08:28:20 Test 1 {Jeoffry [1 2 3]} 0x584f10 0xc00002a0e0
> Error in slibs[are_shared] : invalid subscript type 'list'
> * removing ‘/usr/local/lib/R/site-library/diffobj


```
$ R CMD INSTALL . --no-staged-install
```

> * installing to library ‘/usr/local/lib/R/site-library’
> * installing *source* package ‘diffobj’ ...
> ** using non-staged installation
> ** libs
> gcc -fopenmp -I"/usr/share/R/include" -DNDEBUG     -fpic  -g -O3 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -c diff.c -o diff.o
> gcc -fopenmp -I"/usr/share/R/include" -DNDEBUG     -fpic  -g -O3 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -c diffobj.c -o diffobj.o
> gcc -fopenmp -I"/usr/share/R/include" -DNDEBUG     -fpic  -g -O3 -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -D_FORTIFY_SOURCE=2 -g  -c init.c -o init.o
> gcc -fopenmp -shared -L/usr/lib/R/lib -Wl,-Bsymbolic-functions -Wl,-z,relro -o diffobj.so diff.o diffobj.o init.o -L/usr/lib/R/lib -lR
> installing to /usr/local/lib/R/site-library/diffobj/libs
> ** R
> ** inst
> ** byte-compile and prepare package for lazy loading
> ** help
> *** installing help indices
> ** building package indices
> ** installing vignettes
> ** testing if installed package can be loaded
> * DONE (diffobj)


```
> sessionInfo()
R version 3.6.0 (2019-04-26)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.2 LTS

Matrix products: default
BLAS:   /usr/lib/x86_64-linux-gnu/openblas/libblas.so.3
LAPACK: /usr/lib/x86_64-linux-gnu/libopenblasp-r0.2.20.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C
 [9] LC_ADDRESS=C               LC_TELEPHONE=C
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base

loaded via a namespace (and not attached):
[1] compiler_3.6.0
```

```
Linux yidhra 4.15.0-1040-aws #42-Ubuntu SMP Fri May 17 13:47:10 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
```

Not sure how I missed that one.
Probably makes more sense to have them be the contents of the variables, rather than the deparsed variables (i.e. file names).  Based on on @noamross input.
Hi Brodie,

Your package makes awesome comparisons between objects. I have a package called [lumberjack](https://CRAN.R-project.org/package=lumberjack) that allows you to log changes in objects or data as they flow through a not-a-pipe operator. I think that the diffs that your package make would be a very nice way of logging. We could store consecutive diffs so people can visualize changes in the cli.

The `lumberjack` framework is extensible and anyone can define loggers, by providing an `R6` or `RC` object. The idea is that any packages that compare R objects can `Enhance` the lumberjack package by providing a logger object. This way, no installation dependencies are needed and everyone stays [lightweight](http://www.tinyverse.org/).

I think it would be interesting and useful to have a `lumberjack` logger object in `diffobj`. If you are open to it, I can do a PR. I would basically add one file to the R directory and one to the test directory. I could do it in `R6` or `RC`, as you wish (you already import `methods` so `RC` may be your preference). I would also add an `Enhances` line to your `DESCRIPTION`. 


More information:

- [Introductory vignette](https://cran.r-project.org/web/packages/lumberjack/vignettes/intro.html) and [how to add loggers](https://cran.r-project.org/web/packages/lumberjack/vignettes/extending.html)
- [My talk](https://www.youtube.com/watch?v=DNZs0CHBU4s&t=171s) at eRum2018

Also:
- The [daff](https://cran.r-project.org/web/packages/daff/index.html) package will also feature a lumberjack logger on its next release.
- lumberjack 0.3.0 coming soon.

Cheers,
Mark


For example, would be useful to allow a super wide display width to capture wide data frames without display wrapping, but then wrap the resulting diff so that it fits in a narrow terminal.  This eliminates the complexities caused by the display wrap of 2D structures on the diff.  Incidentally, the HTML mode pretty much works this way already since the wrapping is handled by the browser/viewier.
Relates to #102.  Seems like the consistency could be desirable, though it isn't clear whether it is more desirable than having the most useful output for each mode.  Maybe it isn't possible for us to apriori determine what is most useful, so consistency might be better.