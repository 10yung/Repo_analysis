A component using CSS Blocks will want to pass block styles to a template that is not using CSS Blocks. In this case, we can provide a helper that is rewritten to return a string.

```hbs
{{yield (hash
  linkClass={{style-of ".link"}}
  listClass={{style-of ":scope"}}
  listItemClass={{style-of ".list-item"}}
  listItemActiveClass={{style-of ".list-item" ".list-item[active]"}}
)}}
```

The `style-of` helper should accept any number of arguments and treat them as if all of them will be applied to the same element.

The `style-of` helper should accept a `style-if` or `style-unless` call as the argument. E.g. `{{style-of (style-if isLoading '.list-item[loading]')}}`. In this case, it will be rewritten to an invocation of `-css-blocks-classnames` instead of a string literal.

The use of the `style-of` helper will analyze the collection of styles as if they are all applied to the same element. The output of `style-of` is only suitable as a value that is set as an html `class` attribute value within a template that is not using CSS Blocks. Templates using CSS Blocks should use block composition and inheritance instead.

Caveats: 
1. The output of `style-of` is opaque. Any manipulation by javascript code of these values is unsupported and will probably break your application in production even if it appears to work in development.
2. The users of styles returned from `style-of` must be informed that classes returned cannot be composed with other values returned by a different invocation of `style-of`.
3. Composing the classes returned by `style-of` with classes not managed by css blocks can yield unpredictable results (especially with selectors having specificity of less than an `id` selector) and is generally discouraged.
When a template first becomes a CSS Blocks template because a stylesheet file is added that corresponds to the template file, the persistent template cache does not appear to be invalidated.


Adding a new flag to the block that can make it faultTolerant. When this is set to true, the block, instead of throwing errors, adds errors onto itself, resulting in possibility of the block containing multiple errors.

All the block parsing features have been updated in this PR to throw a multipleErrors error instead of a cssBlockError as it used to previously. Tests have been updated as well. 

TODO: Update the vscode plugin to display all of these multiple errors 

## The devDependency [husky](https://github.com/typicode/husky) was updated from `3.1.0` to `4.0.2`.
This version is **not covered** by your **current version range**.

If you don’t accept this pull request, your project will work just like it did before. However, you might be missing out on a bunch of new features, fixes and/or performance improvements from the dependency update.

---

**Publisher:** [typicode](https://www.npmjs.com/~typicode)
**License:** MIT

<details>
<summary>Release Notes for v4.0.2</summary>

<ul>
<li>Fix: show error message when hook fails</li>
</ul>
</details>

<details>
<summary>Commits</summary>
<p>The new version differs by 10 commits.</p>
<ul>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/e3f7fc840c23e8f34f006dd695c12029a0b4c033"><code>e3f7fc8</code></a> <code>4.0.2</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/d6ecc9d0b02374c9be38c6fe8b8e070f6e823089"><code>d6ecc9d</code></a> <code>fix show error message if hook fails</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/3ca7ff43e579a29654b7712379b9375f17a669c8"><code>3ca7ff4</code></a> <code>4.0.1</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/af807694645c51806bc1b174ebe13b76cf26b8b3"><code>af80769</code></a> <code>Update README.md</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/2c265fb5c0d9ea3fff3a3714cddf9492012d4fed"><code>2c265fb</code></a> <code>fix add --silent to yarn</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/764a236316792e37d95d44d1b369e048402a79c1"><code>764a236</code></a> <code>Update dependencies</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/fe22db23142b3335ae3cb22c843b2f03a4798664"><code>fe22db2</code></a> <code>4.0.0</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/d56d34157557a123456b0d167ea8b740a36afd08"><code>d56d341</code></a> <code>Update README.md</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/e2ad780602dc884e4051d55b38282ae142abb440"><code>e2ad780</code></a> <code>Update README.md</code></li>
<li><a href="https://urls.greenkeeper.io/typicode/husky/commit/0ffe7853853dd7667ddc24a78469b92b5312aeb2"><code>0ffe785</code></a> <code>Merge 4.0 (#625)</code></li>
</ul>
<p>See the <a href="https://urls.greenkeeper.io/typicode/husky/compare/436ca18836f1fa13c3e96ddb27e65a1c87d761b2...e3f7fc840c23e8f34f006dd695c12029a0b4c033">full diff</a></p>
</details>

---

<details>
  <summary>FAQ and help</summary>

  There is a collection of [frequently asked questions](https://greenkeeper.io/faq.html). If those don’t help, you can always [ask the humans behind Greenkeeper](https://github.com/greenkeeperio/greenkeeper/issues/new).
</details>

---


Your [Greenkeeper](https://greenkeeper.io) bot :palm_tree:


Test folders are not there and ember-cli@3.15.1 fails silently when checking the addon.
- This creates a new npm package for converting BEM files to block files
- It also contains changes to the CLI that adds a convert method
- It iterates through the .css file, converting each of the classNames to comply with CSS blocks and rewrite the same file.

TODO:
- The same should work for .scss files
- Solve for when there is more than one block in a single file
- Add more tests around the plugin
Proper optimization and analysis involving block passing requires that we analyze all the handlebars templates and stylesheets in a single pass.

```scss
// grid.block.scss
:scope {
  width: 1128px;
  box-sizing: content-box;
  padding: 0 30px;
  display: block;
  margin: auto;
  position: relative;
}
```

```scss
// header.block.scss
.content {
  display: flex;
  display: resolve("grid"); // Feels like this should be resolved by the cascade when using composes, but acceptable for now.
  height: 100%;
}

.content[width="fixed"] {
  composes: grid;
}

.content[width="full"] {
  margin: resolve("grid"); // is exclusive with .content[width="fixed"] so there's not a conflict.
  margin: 0 item-spacing(6);
}
```
This fixes the broken badge in the readme.

## The devDependency [@glimmer/blueprint](https://github.com/glimmerjs/glimmer-blueprint) was updated from `0.13.0` to `1.0.0`.
This version is **not covered** by your **current version range**.

If you don’t accept this pull request, your project will work just like it did before. However, you might be missing out on a bunch of new features, fixes and/or performance improvements from the dependency update.

---

**Publisher:** [rwjblue](https://www.npmjs.com/~rwjblue)
**License:** MIT

[Find out more about this release](https://github.com/glimmerjs/glimmer-blueprint).

---

<details>
  <summary>FAQ and help</summary>

  There is a collection of [frequently asked questions](https://greenkeeper.io/faq.html). If those don’t help, you can always [ask the humans behind Greenkeeper](https://github.com/greenkeeperio/greenkeeper/issues/new).
</details>

---


Your [Greenkeeper](https://greenkeeper.io) bot :palm_tree:

