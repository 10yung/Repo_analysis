Before submitting an issue, please make sure you fully read any potential error messages output and did some research on your own.

### Subject of the issue
I'm trying to run wpscan through docker but it does not work.

### Your environment
* Version of Docker: Docker version 19.03.5-ce, build 633a0ea838
* Operating System (OS): Manjaro

### Steps to reproduce
`docker run -it --rm wpscanteam/wpscan --url <url> --enumerate u`

### Expected behavior
Output scan results

### Actual behavior
```
Error loading shared library libruby.so.2.6: No such file or directory (needed by /usr/local/bundle/bin/wpscan)
Error relocating /usr/local/bundle/bin/wpscan: ruby_init: symbol not found
Error relocating /usr/local/bundle/bin/wpscan: ruby_options: symbol not found
Error relocating /usr/local/bundle/bin/wpscan: ruby_init_stack: symbol not found
Error relocating /usr/local/bundle/bin/wpscan: ruby_sysinit: symbol not found
Error relocating /usr/local/bundle/bin/wpscan: ruby_run_node: symbol not found
```

### Subject of the issue
I am receiving an error "Scan Aborted: The url supplied seems to be down (SSL connect error)" while launching the scan

### Your environment
* Version of WPScan: Version 3.7.5
* Version of Ruby: ruby 2.5.5p157 (2019-03-15 revision 67260) [x86_64-linux-gnu]
* Operating System (OS):  Debian GNU/Linux 10 \n \l (VM guest)


### Expected behavior
Scan should be started. I have an access to this domain from my VM

### Actual behavior
Screenshot with error stacktrace is attached
![wpscan](https://user-images.githubusercontent.com/20900400/71095197-de8f8900-21b4-11ea-8b79-fd9be39f8f2c.png)


Would be good to add a check for the `wpeprivate/config.json` file that apparently contains sensitive information.

I've yet to find an example of what one looks like.

References:

https://twitter.com/bugbountynights/status/1198392055044755456?s=19

https://www.acunetix.com/vulnerabilities/web/wpengine-_wpeprivate-config-json-information-disclosure/
Homebrew formula currently installs WPScan version 2.9.4, we should update it to install the latest version

https://formulae.brew.sh/formula/wpscan
Not about "config backups" but for backups plugins:

For example, by default, Duplicator Pro creates:

`/wp-content/backups-dup-pro`

For example, BackWPup has a random folver, like:

`/wp-content/uploads/backwpup-0bcce2-temp/`

UpdraftPlus has

`/wp-content/updraft`

Could be interesating to show that as information that _maybe_ there are files there.
### Subject of the issue
I did a scan of a site, and it returned:
[+] WordPress version 4.7.12 identified (Latest, released on 2018-12-13).
Which is true for the 4.7 branch.

However, on https://wordpress.org/download/releases/
and:
This is an archive of every release weâ€™ve done that we have a record of.
None of these are safe to use, except the latest in the 5.0 series, which is actively maintained. 

So perhaps 4.7.12 should be flagged as prone to be updated?
### Your environment
* Version of WPScan:
* Version of Ruby:
* Operating System (OS):

### Steps to reproduce
Tell us how to reproduce this issue.

### Expected behavior
Tell us what should happen.

### Actual behavior
Tell us what happens instead.

### What have you already tried
Tell us what you have already tried to do to fix the issue you are having.

Things you have tried (where relevant):

* Update WPScan to the latest version [ ]
* Update Ruby to the latest version [ ]
* Ensure you can reach the target site using cURL [ ]
* Proxied WPScan through a HTTP proxy to view the raw traffic [ ]
* Ensure you are using a supported Operating System (Linux and macOS) [ ]
### Subject of the issue
Perhaps this is premature since it is still in beta, but may eventually become relevant as it seems to have garnered a significant following and is gaining momentum: [ClassicPress](https://www.classicpress.net/) (as of 1.0.0-beta1) is currently detected as "WordPress 4.9.8". This is not surprising as they haven't changed all of their generator tags (I expect it to partially, if not completely, happen by release). I mostly bring it up for consideration.

The _page head_ (though not RSS feed) meta generator tag for 1.0.0-beta1 currently reads:
```html
<meta name="generator" content="ClassicPress 4.9.8" />
```

I haven't dug into it deeply, but I see a couple of version tags in View Source of a stock setup of CP (logged out, ofc; incognito; non-default theme):
```html
<link rel='stylesheet' id='dashicons-css'  href='https://example.tld/wp-includes/css/dashicons.min.css?ver=1.0.0-beta1' type='text/css' media='all' />
<script type='text/javascript' src='https://example.tld/wp-includes/js/wp-embed.min.js?ver=1.0.0-beta1'></script>
```

There are probably other ways to pull a version, but I have not yet researched it deeply. Another thing that I can think of for when generator tags are stripped (it would only tell you if WP or CP, not version):
```bash
curl -I https://www.classicpress.net/wp-admin/images/wordpress-logo.png
> content-length: 11815
```

### Your environment
* Version of WPScan: 3.4.0
* Version of Ruby: 2.5
* Operating System (OS): Mac OS High Sierra

### Steps to reproduce
```bash
wpscan --url https://www.classicpress.net/
```

### Expected behavior
At minimum, I would expect it to return ClassicPress rather than WordPress. Returning the actual version (ex: 1.0.0-beta1) would be ideal, but discovery methods may vary when 1.0.0-beta2 and beyond are released.

### Actual behavior
Returns:
```bash
[+] WordPress version 4.9.8 identified (Latest, released on 2018-08-02).
 | Detected By: Rss Generator (Passive Detection)
 |  - https://www.classicpress.net/feed/, <generator>https://wordpress.org/?v=4.9.8</generator>
 |  - https://www.classicpress.net/comments/feed/, <generator>https://wordpress.org/?v=4.9.8</generator>
```

### What have you already tried
Things you have tried (where relevant):

* Update WPScan to the latest version :white_check_mark:
* Update Ruby to the latest version :x:
* Ensure you can reach the target site using cURL :white_check_mark:
* Proxied WPScan through a HTTP proxy to view the raw traffic :white_check_mark:
* Ensure you are using a supported Operating System (Linux and macOS) :white_check_mark:
Newest version of wpscan, running on ubuntu + rvm, ruby version 2.5.1
Aiming wpscan at a known wordpress blog, I get the following stack trace:

```
Traceback (most recent call last):
	8741: from ./wpscan.rb:626:in `<main>'
	8740: from ./wpscan.rb:164:in `main'
	8739: from /home/viss/tools/wpscan/lib/wpscan/web_site.rb:93:in `redirection'
	8738: from /home/viss/tools/wpscan/lib/wpscan/web_site.rb:93:in `redirection'
	8737: from /home/viss/tools/wpscan/lib/wpscan/web_site.rb:93:in `redirection'
	8736: from /home/viss/tools/wpscan/lib/wpscan/web_site.rb:93:in `redirection'
	8735: from /home/viss/tools/wpscan/lib/wpscan/web_site.rb:93:in `redirection'
	8734: from /home/viss/tools/wpscan/lib/wpscan/web_site.rb:93:in `redirection'
	 ... 8729 levels...
	   4: from /home/viss/.rvm/gems/ruby-2.5.1@wpscan/gems/typhoeus-1.3.0/lib/typhoeus/request.rb:204:in `map'
	   3: from /home/viss/.rvm/gems/ruby-2.5.1@wpscan/gems/typhoeus-1.3.0/lib/typhoeus/request.rb:204:in `block in hashable_string_for'
	   2: from /home/viss/.rvm/gems/ruby-2.5.1@wpscan/gems/typhoeus-1.3.0/lib/typhoeus/request.rb:204:in `hashable_string_for'
	   1: from /home/viss/.rvm/gems/ruby-2.5.1@wpscan/gems/typhoeus-1.3.0/lib/typhoeus/request.rb:204:in `map'
/home/viss/.rvm/gems/ruby-2.5.1@wpscan/gems/typhoeus-1.3.0/lib/typhoeus/request.rb:204:in `block in hashable_string_for': stack level too deep (SystemStackError)
```

A previous issue (from 2013?) explains that this error is becuase the site isn't a wordpress blog, but it appears that issue is resolved. I think in this case the site is, in fact, a wordpress blog, but it may have some kind of security measures (I tried to hit /wp-admin and got a 403, but robots.txt is available and makes it clear there's a wordpress blog there).

Any advice would be greatly appreciated!
A [recent commit](https://github.com/wpscanteam/wpscan/commit/0cd680bb29f3cb9f4873f4c559ecbdbf58fa4274) changed the location of the data/cache dirs from the wpscan installation directory to the home directory of the user running it. It would be good if those dirs were configurable instead of hard-coded. In my setup I'm executing wpscan as a user that cannot write to its home directory, leading to a failure when it tries to make the `~/.wpscan` directory. 
Hi there,

thx for the wp scanner! It has been tremendously useful for me. 

I am keeping logs for reporting purposes and also compared to other tools I am missing following information in the output/log:

* IP Address: the IP address might change or there's one preset via /etc/hosts. 
* command line used
* Host where scanning was done from

Cheers, Dirk