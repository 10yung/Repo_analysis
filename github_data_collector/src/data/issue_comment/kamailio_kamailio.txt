### Description

In plain Kamailio language, we used the following line:

```
if ( sdp_with_transport("RTP/SAVP") ) {
```

Now we wanted to convert that to Kemi. Turns out, the `sdp_with_transport()` function is not exported to Kemi. So we thought, we could use `sdp_transport()` to work around the missing function. This works as long as there is only one transport in SDP. 

But if a phone sends two media streams in SDP, one with RTP/AVP and one with RTP/SAVP, `sdp_transport()` will return `-2`.


### Troubleshooting

#### Reproduction

Send an INVITE to Kamailio and try to get the transport type into a variable with ` sdp_transport()`. This can be done for example with a snom phone where in the rtp section of the identity configuration the parameter "RTP/SAVP" is set to "optional".

#### Log Messages

```
Jan 10 13:08:13 hagi /usr/sbin/kamailio[7136]: DEBUG: app_jsdt [app_jsdt_api.c:996]: sr_kemi_jsdt_exec_func_ex(): param[0] for: sdp_transport is str: $avp(mediaTransport)
Jan 10 13:08:13 hagi /usr/sbin/kamailio[7136]: DEBUG: <core> [core/usr_avp.c:887]: parse_avp_ident(): Parsing 'mediaTransport'
Jan 10 13:08:13 hagi /usr/sbin/kamailio[7136]: DEBUG: <core> [core/pvapi.c:368]: pv_cache_add(): pvar [$avp(mediaTransport)] added in cache
Jan 10 13:08:13 hagi /usr/sbin/kamailio[7136]: DEBUG: sdpops [sdpops_mod.c:1214]: sdp_transport_helper(): stream 0 of 0 - transport [RTP/SAVP]
Jan 10 13:08:13 hagi /usr/sbin/kamailio[7136]: DEBUG: sdpops [sdpops_mod.c:1214]: sdp_transport_helper(): stream 1 of 0 - transport [RTP/AVP]
Jan 10 13:08:13 hagi /usr/sbin/kamailio[7136]: DEBUG: sdpops [sdpops_mod.c:1219]: sdp_transport_helper(): no common transport 
```

### Additional Information

We are still running Kamailio 5.1.x, but as far as I could see, the behavior has not changed since then.

### Description

Explain what you did, what you expected to happen, and what actually happened.

I'm looking at using presence module with **subs_db_mode** parameter set to 0-2 where it uses memory to store and query active watchers. I noticed that sometimes Kamailio will throw following message during PUBLISH processesing and it will not generate appropriate NOTIFY for watchers:
`DEBUG: presence [notify.c:1234]: publ_notify(): Could not find subs_dialog `

RPC command to dump current active watchers will be helpful during troubleshooting. Currently with **subs_db_mode** set to 0 you can not tell for sure if subsciption already expired or not. And with **subs_db_mode** set to 1 or 2 you can get information from DB with delay. This command will also allow to clarify subscriber _domain_ value which if I understood correctly must match domain from presentity.

Thanks a lot!
### Description
Kamailio fails to forward in-dialog request over TCP/TLS/WS/WSS connection.

### Troubleshooting

kamailio 5.2 branch has a commit 
09ac3e47ef79dbd599b7dec5b84ae3b792f025ed cherry picked from master branch.
It makes sense for master because get_send_socket2() behavior has 
changed and function became smarter and also there were some patches to 
propagate connection it to the uac structure.

After applying this patch to 5.2.x kamailio searches for an outgoing socket, receives the first one due to limitations of get_send_socket2() and SND_F_FORCE_SOCKET flag. Then it fails to find an existing TCP connection by destination ip:port since it searches for a connection associated with a wrong socket.

#### Log Messages

<!--
Check the syslog file and if there are relevant log messages printed by Kamailio, add them next, or attach to issue, or provide a link to download them (e.g., to a pastebin site).
-->

```

Dec 11 21:33:49  kamailio[17999]: WARNING: <core> [core/msg_translator.c:2832]: via_builder(): TCP/TLS connection (id: 0) for WebSocket could not be found
Dec 11 21:33:49  kamailio[17999]: ERROR: tm [t_msgbuilder.c:1372]: assemble_via(): via building failed
Dec 11 21:33:49  kamailio[17999]: ERROR: tm [t_msgbuilder.c:1540]: build_uac_req(): error while assembling Via
Dec 11 21:33:49  kamailio[17999]: ERROR: tm [uac.c:517]: t_uac_prepare(): Error while building message
Dec 11 21:33:49  kamailio[17999]: ERROR: presence [notify.c:1798]: send_notify_request(): in function tmb.t_request_within
Dec 11 21:33:49  kamailio[17999]: ERROR: presence [notify.c:1897]: notify(): sending Notify not successful
Dec 11 21:33:49  kamailio[17999]: ERROR: presence [notify.c:1491]: publ_notify(): Could not send notify for message-summary
```


### Possible Solutions

Delete mentioned commit from the 5.2 branch.
<!--
If you found a solution or workaround for the issue, describe it. Ideally, provide a pull request with a fix.
-->

### Additional Information

  * **Kamailio Version** - output of `kamailio -v`

```
5.2.5
```

* **Operating System**:

<!--
Details about the operating system, the type: Linux (e.g.,: Debian 8.4, Ubuntu 16.04, CentOS 7.1, ...), MacOS, xBSD, Solaris, ...;
Kernel details (output of `uname -a`)
-->

```
linux
```

<!--
Kamailio Project uses GitHub Issues only for bugs in the code or feature requests. Please use this template only for bug reports.

If you have questions about using Kamailio or related to its configuration file, ask on sr-users mailing list:

  * http://lists.kamailio.org/cgi-bin/mailman/listinfo/sr-users

If you have questions about developing extensions to Kamailio or its existing C code, ask on sr-dev mailing list:

  * http://lists.kamailio.org/cgi-bin/mailman/listinfo/sr-dev

Please try to fill this template as much as possible for any issue. It helps the developers to troubleshoot the issue.

If there is no content to be filled in a section, the entire section can be removed.

You can delete the comments from the template sections when filling.

You can delete next line and everything above before submitting (it is a comment).
-->
Kamailio 5.3 with app_ruby crashed with example config.
Kamailio 5.2 with same config and ruby not have this issue!

<!--
I try example app_ruby from app_ruby mod documentation and kamailio crash after call ruby method.

example ruby script:
```
cat /var/kamailio/ruby/test.rb 
def info(si)
  KSR.info("==== from ruby - src ip: #{si} - #{KSR.is_INVITE} - #{KSR::PV.get("$si")}\n")
  #KSR.info("==== from ruby - src ip: #{si} - #{KSR.is_INVITE} - #{KSR::PV.sets("$var(tmp)","123456")},#{KSR::PV.get("$si")}\n")
  KSR::PV.seti("$var(tmp)",12345)
        KSR::SL.sl_send_reply(200, "OK-Ruby")
end
```
kamailio config:
```
loadmodule "app_ruby.so"
modparam("app_ruby", "load", "/var/kamailio/ruby/test.rb")
....
  # handle requests within SIP dialogs
  route(WITHINDLG);

  ### only initial requests (no To tag)

  # authentication
  route(AUTH);

  # record routing for dialog forming requests (in case they are routed)
  # - remove preloaded route headers
  remove_hf("Route");
  if (is_method("INVITE|SUBSCRIBE")) {
    record_route();
    if(!ruby_run("info","$si")) {
      xdbg("SCRIPT: failed to execute ruby function!\n");
    }   
    xlog("L_INFO","RUBY -- $var(tmp)");
  }
......
```
-->

### Troubleshooting

#### Reproduction
Install latest ruby from source:
https://cache.ruby-lang.org/pub/ruby/2.6/ruby-2.6.5.tar.bz2

Install kamailio 5.3 from git.

<!--
If the issue can be reproduced, describe how it can be done.
-->

#### Debugging Data
```
  bt full
  info locals
  list:

[New LWP 6828]
[Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib/x86_64-linux-gnu/libthread_db.so.1".
Core was generated by `/usr/local/sbin/kamailio -P /var/run/kamailio/kamailio.pid -f /usr/local/etc/ka'.
Program terminated with signal SIGSEGV, Segmentation fault.
#0  0x00007f2affe9cfbe in rb_current_thread () at vm_core.h:1742
1742        return rb_ec_thread_ptr(ec);
#0  0x00007f2affe9cfbe in rb_current_thread () at vm_core.h:1742
        ec = 0x0
        ec = <optimized out>
#1  ruby_cleanup (ex=0) at eval.c:178
        state = <optimized out>
        errs = {8388608, 7192328}
        th = <optimized out>
        nerr = <optimized out>
        sysex = 0
        step = 0
#2  0x00007f2b0012dc40 in ruby_sr_destroy () at app_ruby_api.c:219
No locals.
#3  0x00007f2b0014c166 in mod_destroy () at app_ruby_mod.c:122
No locals.
#4  0x00005647515cc367 in destroy_modules () at core/sr_module.c:746
        t = 0x7f2b013852f8
        foo = 0x7f2b01384488
        __func__ = "destroy_modules"
#5  0x0000564751478aef in cleanup (show_status=1) at main.c:555
        memlog = 1953722216
        __func__ = "cleanup"
#6  0x000056475147a4e3 in shutdown_children (sig=15, show_status=1) at main.c:696
        __func__ = "shutdown_children"
#7  0x000056475147d443 in handle_sigs () at main.c:796
        chld = 0
        chld_status = 134
        any_chld_stopped = 1
        memlog = -104142504
        __func__ = "handle_sigs"
#8  0x0000564751487413 in main_loop () at main.c:1806
        i = 8
        pid = 6871
        si = 0x0
        si_desc = "udp receiver child=7 sock=192.168.144.33:5060\000\000\000\000\\3\271\377\177\000\000\243I\206QGV\000\000\000\000\000\004\000\000\000\000\000\000\200\000\000\000\000\000\006\000\000\000\000\000\000\000Lm\275\001+\177\000\000\060\000\000\000\060\000\000\000 X3\271\377\177\000\000PW3\271\377\177\000\000\bN?\001+\177\000"
        nrprocs = 8
        woneinit = 1
        __func__ = "main_loop"
#9  0x000056475148ea71 in main (argc=15, argv=0x7fffb9335ce8) at main.c:2802
        cfg_stream = 0x564752519260
        c = -1
        r = 0
        tmp = 0x7fffb93369f0 ""
        tmp_len = 32555
        port = 29769255
        proto = 32555
        ahost = 0x0
        aport = 0
        options = 0x56475180db40 ":f:cm:M:dVIhEeb:l:L:n:vKrRDTN:W:w:t:u:g:P:G:SQ:O:a:A:x:X:Y:"
        ret = -1
        seed = 2159776292
        rfd = 4
        debug_save = 0
        debug_flag = 0
        dont_fork_cnt = 0
        n_lst = 0x0
        p = 0x7f2b01b85af5 <handle_intel+197> "H\205\300uf\213t$\004M\215\216\244"
        st = {st_dev = 145, st_ino = 18, st_nlink = 2, st_mode = 16832, st_uid = 101, st_gid = 107, __pad0 = 0, st_rdev = 0, st_size = 40, st_blksize = 4096, st_blocks = 0, st_atim = {tv_sec = 1576675424, tv_nsec = 128734310}, st_mtim = {tv_sec = 1576675348, tv_nsec = 136871578}, st_ctim = {tv_sec = 1576675348, tv_nsec = 136871578}, __glibc_reserved = {0, 0, 0}}
        tbuf = "0Y3\271\377\177\000\000xX3\271\377\177\000\000\bU\316\001+\177\000\000\006\000\000\000\000\000\000\000\370\177\256\001", '\000' <repeats 16 times>, " \000\000\000\357\265\275\205\000\000\000\000\200M\316\001+\177\000\000\330Y3\271\377\177\000\000 J\316\001+\177\000\000\000\000\000\000\000\000\000\000\070Z\316\001+\177\000\000\217\203\317\001+\177\000\000\005\000\000\000\000\000\000\000\070Z\316\001+\177\000\000\001", '\000' <repeats 15 times>, "\001\000\000\000\000\000\000\000 J\316\001+\177\000\000\207\210\312\001+\177\000\000\000\000\000\000\001\000\000\000\060Y3\271\377\177\000\000@Y3\271\377\177\000\000\200M\316\001+\177\000\000\000\000\000\000\000\000\000\000"...
        option_index = 0
        long_options = {{name = 0x56475181054a "help", has_arg = 0, flag = 0x0, val = 104}, {name = 0x56475180a46c "version", has_arg = 0, flag = 0x0, val = 118}, {name = 0x56475181054f "alias", has_arg = 1, flag = 0x0, val = 1024}, {name = 0x564751810555 "subst", has_arg = 1, flag = 0x0, val = 1025}, {name = 0x56475181055b "substdef", has_arg = 1, flag = 0x0, val = 1026}, {name = 0x564751810564 "substdefs", has_arg = 1, flag = 0x0, val = 1027}, {name = 0x56475181056e "server-id", has_arg = 1, flag = 0x0, val = 1028}, {name = 0x0, has_arg = 0, flag = 0x0, val = 0}}
        __func__ = "main"
ec = 0x0
ec = <optimized out>
1737
1738    static inline rb_thread_t *
1739    rb_current_thread(void)
1740    {
1741        const rb_execution_context_t *ec = GET_EC();
1742        return rb_ec_thread_ptr(ec);
1743    }
1744
1745    static inline rb_vm_t *
1746    rb_current_vm(void)
```

#### Log Messages

<!--
Check the syslog file and if there are relevant log messages printed by Kamailio, add them next, or attach to issue, or provide a link to download them (e.g., to a pastebin site).
-->

```
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32308]: CRITICAL: <core> [core/pass_fd.c:277]: receive_fd(): EOF on 28
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32276]: ALERT: <core> [main.c:766]: handle_sigs(): child process 32290 exited by a signal 6
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32276]: ALERT: <core> [main.c:769]: handle_sigs(): core was generated
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32276]: INFO: <core> [main.c:792]: handle_sigs(): terminating due to SIGCHLD
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32307]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32303]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32277]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32299]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32302]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32298]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32300]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32295]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32289]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32291]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32304]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32288]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32285]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32286]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32287]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32294]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32283]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32292]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32281]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32278]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32301]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32296]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32280]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32297]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32282]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32279]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32293]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32284]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32305]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32306]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
Dec 18 13:12:33 serZt2 /usr/local/sbin/kamailio[32308]: INFO: <core> [main.c:847]: sig_usr(): signal 15 received
```

#### SIP Traffic

<!--
If the issue is exposed by processing specific SIP messages, grab them with ngrep or save in a pcap file, then add them next, or attach to issue, or provide a link to download them (e.g., to a pastebin site).
-->

```
2019/12/18 13:28:14.572182 81.31.45.41:5060 -> 192.168.144.33:5060
INVITE sip:533533619@192.168.144.33 SIP/2.0
Via: SIP/2.0/UDP 10.10.10.11:5060;rport;branch=z9hG4bKPjMoJzLYnz.bFfyeQgAkPu40nh00yPaZUM
Max-Forwards: 70
From: sip:kovik@192.168.144.33;tag=AETpu82nyfAmiW96ruBDgrcHPm4w5Uc4
To: sip:533533619@192.168.144.33
Contact: <sip:kovik@10.10.10.11:5060;ob>
Call-ID: .kat6b9EbVAbAm8hSTPXG9eU5lME79QG
CSeq: 11527 INVITE
Allow: PRACK, INVITE, ACK, BYE, CANCEL, UPDATE, INFO, SUBSCRIBE, NOTIFY, REFER, MESSAGE, OPTIONS
Supported: replaces, 100rel, timer, norefersub
Session-Expires: 1800
Min-SE: 90
User-Agent: PJSUA v2.9-svn Linux-4.19.0.6/x86_64/glibc-2.28
Proxy-Authorization: Digest username="kovik", realm="192.168.144.33", nonce="Xfoqml36KW5qVYVrbT87WbA0jHDV9rwC", uri="sip:533533619@192.168.144.33", response="ffafbe076bbdd23fa83aeba0b6f16504"
Content-Type: application/sdp
Content-Length:   631

v=0
o=- 3785664489 3785664489 IN IP4 192.168.1.183
s=pjmedia
b=AS:84
t=0 0
a=X-nat:0
m=audio 4000 RTP/AVP 96 97 98 99 3 0 8 9 120 121 122
c=IN IP4 192.168.1.183
b=TIAS:64000
a=rtcp:4001 IN IP4 192.168.1.183
a=sendrecv
a=rtpmap:96 speex/16000
a=rtpmap:97 speex/8000
a=rtpmap:98 speex/32000
a=rtpmap:99 iLBC/8000
a=fmtp:99 mode=30
a=rtpmap:3 GSM/8000
a=rtpmap:0 PCMU/8000
a=rtpmap:8 PCMA/8000
a=rtpmap:9 G722/8000
a=rtpmap:120 telephone-event/16000
a=fmtp:120 0-16
a=rtpmap:121 telephone-event/8000
a=fmtp:121 0-16
a=rtpmap:122 telephone-event/32000
a=fmtp:122 0-16
a=ssrc:639673449 cname:4bdc5ad63943ba5b

```

### Possible Solutions

<!--
If you found a solution or workaround for the issue, describe it. Ideally, provide a pull request with a fix.
-->

### Additional Information

  * **Kamailio Version** - output of `kamailio -v`

```
version: kamailio 5.3.1 (x86_64/linux) 8d0d4e-dirty
flags: USE_TCP, USE_TLS, USE_SCTP, TLS_HOOKS, USE_RAW_SOCKS, DISABLE_NAGLE, USE_MCAST, DNS_IP_HACK, SHM_MMAP, PKG_MALLOC, Q_MALLOC, F_MALLOC, TLSF_MALLOC, DBG_SR_MEMORY, USE_FUTEX, FAST_LOCK-ADAPTIVE_WAIT, USE_DNS_CACHE, USE_DNS_FAILOVER, USE_NAPTR, USE_DST_BLACKLIST, HAVE_RESOLV_RES, TLS_PTHREAD_MUTEX_SHARED
ADAPTIVE_WAIT_LOOPS 1024, MAX_RECV_BUFFER_SIZE 262144, MAX_URI_SIZE 1024, BUF_SIZE 65535, DEFAULT PKG_SIZE 8MB
poll method support: poll, epoll_lt, epoll_et, sigio_rt, select.
id: 8d0d4e -dirty
compiled on 08:29:21 Dec 18 2019 with gcc 8.3
```

```
ruby -v
ruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-linux]
```

* **Operating System**:

<!--
Details about the operating system, the type: Linux (e.g.,: Debian 8.4, Ubuntu 16.04, CentOS 7.1, ...), MacOS, xBSD, Solaris, ...;
Kernel details (output of `uname -a`)
-->

```
lsb_release -a
No LSB modules are available.
Distributor ID: Debian
Description:    Debian GNU/Linux 10 (buster)
Release:        10
Codename:       buster

uname -a
Linux serZt2 4.15.18-14-pve #1 SMP PVE 4.15.18-38 (Tue, 30 Apr 2019 10:51:33 +0200) x86_64 GNU/Linux

```

```
CC (gcc) [M db_redis.so]	redis_table.o
CC (gcc) [M db_redis.so]	db_redis_mod.o
CC (gcc) [M db_redis.so]	redis_connection.o
In file included from ../../lib/srdb1/../../core/ut.h:42,
from ../../lib/srdb1/db_key.h:31,
from ../../lib/srdb1/db.h:43,
from db_redis_mod.h:26,
from redis_table.c:25:
redis_table.c: In function 'db_redis_parse_keys':
../../lib/srdb1/../../core/dprint.h:303:8: warning: 'table_name.len' may be used uninitialized in this function [-Wmaybe-uninitialized]
303 | fprintf(stderr, "%2d(%d) %s: %.*s%s" fmt, \
| ^~~~~~~
redis_table.c:494:9: note: 'table_name.len' was declared here
494 | str table_name;
| ^~~~~~~~~~
In file included from ../../lib/srdb1/../../core/ut.h:42,
from ../../lib/srdb1/db_key.h:31,
from ../../lib/srdb1/db.h:43,
from db_redis_mod.h:26,
from redis_table.c:25:
../../lib/srdb1/../../core/dprint.h:303:8: warning: 'table_name.s' may be used uninitialized in this function [-Wmaybe-uninitialized]
303 | fprintf(stderr, "%2d(%d) %s: %.*s%s" fmt, \
| ^~~~~~~
redis_table.c:494:9: note: 'table_name.s' was declared here
494 | str table_name;
| ^~~~~~~~~~
redis_table.c:581:38: warning: 'table' may be used uninitialized in this function [-Wmaybe-uninitialized]
581 | table->types = type_target = type;
| ~~~~~~~~~~~~~^~~~~~~~~~~~~~~~~~~~
CC (gcc) [M db_redis.so]	redis_dbase.o
make[3]: 'libsrdb2.so.1.0' is up to date.
make[3]: 'libsrdb1.so.1.0' is up to date.
```
### Description

<!--
Explain what you did, what you expected to happen, and what actually happened.
-->

In some cases we need to call zabbix_sender utility to notify that some failure happens.
At this time we move our configs from Kamailio 4.4.7 to Kamailio 5.3.0 and during testing we meet this issue.

We configured exec module to kill the program after 20 seconds
```
modparam("exec", "time_to_kill", 20)
....
exec_avp("/usr/bin/zabbix_sender --config ZABBIX_AGENT_CONFIG_PATH --key ecsp_no_telephony --value 1");

```

zabbix_sender could not connect to server and were hanged up.

Kamailio probably tried to kill it and crashed.

### Troubleshooting

#### Reproduction

<!--
If the issue can be reproduced, describe how it can be done.
-->

#### Debugging Data

<!--
If you got a core dump, use gdb to extract troubleshooting data - full backtrace,
local variables and the list of the code at the issue location.

  gdb /path/to/kamailio /path/to/corefile
  bt full

```
(gdb) bt full
#0  0x00007f57a4397e4b in run_failure_handlers (t=0x7f579d31b8c8, rpl=0xffffffffffffffff, code=408, extra_flags=32) at t_reply.c:1020
        faked_req = 0x7f579d31f4a0
        faked_req_len = 7264
        shmem_msg = 0x7f579d31cf88
        on_failure = 1
        keng = 0x0
        __FUNCTION__ = "run_failure_handlers"
#1  0x00007f57a439b6ff in t_should_relay_response (Trans=0x7f579d31b8c8, new_code=408, branch=0, should_store=0x7ffdc1d48efc, should_relay=0x7ffdc1d48f00, cancel_data=0x7ffdc1d48fb0,
    reply=0xffffffffffffffff) at t_reply.c:1390
        branch_cnt = 1
        picked_code = 408
        new_branch = 0
        inv_through = 0
        extra_flags = 32
        i = 0
        replies_dropped = 0
        __FUNCTION__ = "t_should_relay_response"
#2  0x00007f57a43a04ae in relay_reply (t=0x7f579d31b8c8, p_msg=0xffffffffffffffff, branch=0, msg_status=408, cancel_data=0x7ffdc1d48fb0, do_put_on_wait=0) at t_reply.c:1821
        relay = -1043034112
        save_clone = 0
        buf = 0x0
        res_len = 0
        relayed_code = 0
        relayed_msg = 0x0
        reply_bak = 0x0
        bm = {to_tag_val = {s = 0x419140 <_start> "1\355I\211\321^H\211\342H\203\344\360PTI\307\300\020yw", len = -1043032080}}
        totag_retr = 0
        reply_status = RPS_ERROR
        uas_rb = 0x7f579d31cc10
        to_tag = 0x7f579d31ba98
        reason = {s = 0x0, len = -2058737957}
        onsend_params = {req = 0x419140 <_start>, rpl = 0x7ffdc1d497f0, param = 0x0, code = 0, flags = 0, branch = 0, t_rbuf = 0x7ffdc1d48fd0, dst = 0x7f57a1935bb9 <db_timer_udomain+1213>,
          send_buf = {s = 0x50ffffffff <Address 0x50ffffffff out of bounds>, len = -1657680744}}
        ip = {af = 26069008, len = 0, u = {addrl = {12898834416, 0}, addr32 = {13932528, 3, 0, 0}, addr16 = {38896, 212, 3, 0, 0, 0, 0, 0},
            addr = "\360\227\324\000\003\000\000\000\000\000\000\000\000\000\000"}}
        __FUNCTION__ = "relay_reply"
#3  0x00007f57a43f0b80 in fake_reply (t=0x7f579d31b8c8, branch=0, code=408) at timer.c:294
        cancel_data = {cancel_bitmap = 0, reason = {cause = 0, u = {text = {s = 0x0, len = -1657685816}, e2e_cancel = 0x0, packed_hdrs = {s = 0x0, len = -1657685816}}}}
        do_cancel_branch = 0
        reply_status = 12458
#4  0x00007f57a43f100d in final_response_handler (r_buf=0x7f579d31baf0, t=0x7f579d31b8c8) at timer.c:455
        silent = 0
        branch_ret = 0
        prev_branch = 0
        now = 0
#5  0x00007f57a43f10bc in retr_buf_handler (ticks=1687494363, tl=0x7f579d31bb10, p=0x1f40) at timer.c:511
        rbuf = 0x7f579d31baf0
        fr_remainder = 1
        retr_remainder = 32599
        retr_interval = 2634899704
        new_retr_interval_ms = 7546900672
        crt_retr_interval_ms = 140014273782008
        t = 0x7f579d31b8c8
        __FUNCTION__ = "retr_buf_handler"
#6  0x00000000004bb4f9 in slow_timer_main () at core/timer.c:1104
        n = 12
---Type <return> to continue, or q <return> to quit---
        ret = 4294967295
        tl = 0x7f579d31bb10
        i = 951
        __FUNCTION__ = "slow_timer_main"
#7  0x000000000042655f in main_loop () at main.c:1727
        i = 20
        pid = 0
        si = 0x0
        si_desc = "udp receiver child=19 sock=127.0.0.1:16060\000\066\060 (5.17.138.141:16060)\000\000\000\000\000\000\310\026\t\235W\177", '\000' <repeats 14 times>, "\001\000\000\000`\222\324\301\375\177\000\000\061\212j\000\000\000\000\000\300\352z\000\000\000\000\000Xv<\250W\177\000"
        nrprocs = 20
        woneinit = 1
        __FUNCTION__ = "main_loop"
#8  0x000000000042e56a in main (argc=15, argv=0x7ffdc1d497f8) at main.c:2802
        cfg_stream = 0x17e0010
        c = -1
        r = 0
        tmp = 0x7ffdc1d49f44 ""
        tmp_len = 0
        port = 0
        proto = 0
        ahost = 0x0
        aport = 0
        options = 0x77b510 ":f:cm:M:dVIhEeb:l:L:n:vKrRDTN:W:w:t:u:g:P:G:SQ:O:a:A:x:X:Y:"
        ret = -1
        seed = 4246587393
        rfd = 4
        debug_save = 0
        debug_flag = 0
        dont_fork_cnt = 0
        n_lst = 0x2f2f2f2f2f2f2f2f
        p = 0x0
        st = {st_dev = 19, st_ino = 22551, st_nlink = 2, st_mode = 16832, st_uid = 0, st_gid = 0, __pad0 = 0, st_rdev = 0, st_size = 40, st_blksize = 4096, st_blocks = 0, st_atim = {
            tv_sec = 1575037545, tv_nsec = 784790655}, st_mtim = {tv_sec = 1571941656, tv_nsec = 613426287}, st_ctim = {tv_sec = 1571941656, tv_nsec = 613426287}, __unused = {0, 0, 0}}
        tbuf = "\000\000\000\000\000\000\000\000\240\223\324\301\375\177\000\000\210+\251\250W\177\000\000\350\363\251\250W\177\000\000\260\224\324\301\375\177\000\000\240\224\324\301\375\177\000\000.", '\000' <repeats 23 times>, "\300\365H\251W\177\000\000\000\360H\251W\177\000\000\270\366@\000\000\000\000\000\320\377\251\250W\177\000\000\230=@\000\000\000\000\000\000\000\000\000\001\000\000\000D\b\000\000\001", '\000' <repeats 11 times>, "h\225\324\301\375\177\000\000@\225\324\301\375\177\000\000\001\000\000\000\000\000\000\000\300\365H\251W\177\000\000\250\324I\251W\177\000\000P\321I\251W\177\000\000O@(\251W\177\000\000\000\000\000\000\000\000\000\000"...
        option_index = 0
        long_options = {{name = 0x77e08a "help", has_arg = 0, flag = 0x0, val = 104}, {name = 0x777dac "version", has_arg = 0, flag = 0x0, val = 118}, {name = 0x77e08f "alias", has_arg = 1,
            flag = 0x0, val = 1024}, {name = 0x77e095 "subst", has_arg = 1, flag = 0x0, val = 1025}, {name = 0x77e09b "substdef", has_arg = 1, flag = 0x0, val = 1026}, {
            name = 0x77e0a4 "substdefs", has_arg = 1, flag = 0x0, val = 1027}, {name = 0x77e0ae "server-id", has_arg = 1, flag = 0x0, val = 1028}, {name = 0x0, has_arg = 0, flag = 0x0,
            val = 0}}
        __FUNCTION__ = "main"

```


  info locals

```
(gdb) info locals
cfg_stream = 0x17e0010
c = -1
r = 0
tmp = 0x7ffdc1d49f44 ""
tmp_len = 0
port = 0
proto = 0
ahost = 0x0
aport = 0
options = 0x77b510 ":f:cm:M:dVIhEeb:l:L:n:vKrRDTN:W:w:t:u:g:P:G:SQ:O:a:A:x:X:Y:"
ret = -1
seed = 4246587393
rfd = 4
debug_save = 0
debug_flag = 0
dont_fork_cnt = 0
n_lst = 0x2f2f2f2f2f2f2f2f
p = 0x0
st = {st_dev = 19, st_ino = 22551, st_nlink = 2, st_mode = 16832, st_uid = 0, st_gid = 0, __pad0 = 0, st_rdev = 0, st_size = 40, st_blksize = 4096, st_blocks = 0, st_atim = {
    tv_sec = 1575037545, tv_nsec = 784790655}, st_mtim = {tv_sec = 1571941656, tv_nsec = 613426287}, st_ctim = {tv_sec = 1571941656, tv_nsec = 613426287}, __unused = {0, 0, 0}}
tbuf = "\000\000\000\000\000\000\000\000\240\223\324\301\375\177\000\000\210+\251\250W\177\000\000\350\363\251\250W\177\000\000\260\224\324\301\375\177\000\000\240\224\324\301\375\177\000\000.", '\000' <repeats 23 times>, "\300\365H\251W\177\000\000\000\360H\251W\177\000\000\270\366@\000\000\000\000\000\320\377\251\250W\177\000\000\230=@\000\000\000\000\000\000\000\000\000\001\000\000\000D\b\000\000\001", '\000' <repeats 11 times>, "h\225\324\301\375\177\000\000@\225\324\301\375\177\000\000\001\000\000\000\000\000\000\000\300\365H\251W\177\000\000\250\324I\251W\177\000\000P\321I\251W\177\000\000O@(\251W\177\000\000\000\000\000\000\000\000\000\000"...
option_index = 0
long_options = {{name = 0x77e08a "help", has_arg = 0, flag = 0x0, val = 104}, {name = 0x777dac "version", has_arg = 0, flag = 0x0, val = 118}, {name = 0x77e08f "alias", has_arg = 1,
    flag = 0x0, val = 1024}, {name = 0x77e095 "subst", has_arg = 1, flag = 0x0, val = 1025}, {name = 0x77e09b "substdef", has_arg = 1, flag = 0x0, val = 1026}, {name = 0x77e0a4 "substdefs",
    has_arg = 1, flag = 0x0, val = 1027}, {name = 0x77e0ae "server-id", has_arg = 1, flag = 0x0, val = 1028}, {name = 0x0, has_arg = 0, flag = 0x0, val = 0}}
__FUNCTION__ = "main"

```

  list

```
(gdb) list
1015                            }
1016                            exec_post_script_cb(faked_req, FAILURE_CB_TYPE);
1017                    }
1018                    log_prefix_set(NULL);
1019                    /* update message flags, if changed in failure route */
1020                    t->uas.request->flags = faked_req->flags;
1021            }
1022
1023            /* restore original environment */
1024            faked_env( t, 0, 0);

```


#### Log Messages

<!--
Check the syslog file and if there are relevant log messages printed by Kamailio, add them next, or attach to issue, or provide a link to download them (e.g., to a pastebin site).
-->

```
Dec  5 12:25:08 sip-proxy01 /usr/ecsp/sbin/kamailio[12458]: NOTICE: <script>: zabbix_sender (ecsp_no_telephony)
Dec  5 12:25:09 sip-proxy01 /usr/ecsp/sbin/kamailio[12417]: ALERT: <core> [main.c:767]: handle_sigs(): child process 12458 exited by a signal 11
Dec  5 12:25:09 sip-proxy01 /usr/ecsp/sbin/kamailio[12466]: CRITICAL: <core> [core/pass_fd.c:277]: receive_fd(): EOF on 50
Dec  5 12:25:09 sip-proxy01 /usr/ecsp/sbin/kamailio[12417]: ALERT: <core> [main.c:770]: handle_sigs(): core was generated

```

#### SIP Traffic

<!--
If the issue is exposed by processing specific SIP messages, grab them with ngrep or save in a pcap file, then add them next, or attach to issue, or provide a link to download them (e.g., to a pastebin site).
-->

```
(paste your sip traffic here)
```

### Possible Solutions

<!--
If you found a solution or workaround for the issue, describe it. Ideally, provide a pull request with a fix.
-->

### Additional Information

  * **Kamailio Version** - output of `kamailio -v`

```
version: kamailio 5.3.0 (x86_64/linux) 4cc67a
flags: USE_TCP, USE_TLS, USE_SCTP, TLS_HOOKS, USE_RAW_SOCKS, DISABLE_NAGLE, USE_MCAST, DNS_IP_HACK, SHM_MMAP, PKG_MALLOC, Q_MALLOC, F_MALLOC, TLSF_MALLOC, DBG_SR_MEMORY, USE_FUTEX, FAST_LOCK-ADAPTIVE_WAIT, USE_DNS_CACHE, USE_DNS_FAILOVER, USE_NAPTR, USE_DST_BLACKLIST, HAVE_RESOLV_RES
ADAPTIVE_WAIT_LOOPS 1024, MAX_RECV_BUFFER_SIZE 262144, MAX_URI_SIZE 1024, BUF_SIZE 65535, DEFAULT PKG_SIZE 8MB
poll method support: poll, epoll_lt, epoll_et, sigio_rt, select.
id: 4cc67a
compiled on 14:01:24 Nov 28 2019 with gcc 4.8.5
```

* **Operating System**:

<!--
Details about the operating system, the type: Linux (e.g.,: Debian 8.4, Ubuntu 16.04, CentOS 7.1, ...), MacOS, xBSD, Solaris, ...;
Kernel details (output of `uname -a`)
-->

```
Linux sip-proxy01 3.10.0-1062.4.1.el7.x86_64 #1 SMP Fri Oct 18 17:15:30 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux

CentOS Linux release 7.7.1908 (Core)

```

When upgrading from stretch to buster the kamailio packages aren't upgraded because the 5.3.1+stretch version is greater than 5.3.1+buster:
```
$ dpkg --compare-versions 5.3.1+stretch gt 5.3.1+buster ; echo $?
0
```

The package version should include the release version instead of its codename, e.g. 5.3.1+deb9u1 & 5.3.1+deb10u1 like done for [stable updates](https://www.debian.org/doc/manuals/developers-reference/pkgs.en.html#upload-stable):
```
$ dpkg --compare-versions 5.3.1+deb10u1 gt 5.3.1+deb9u1 ; echo $?
0
```
On Kamailio 5.3.0 (`ad1905`) on CentOS 7, with `libcurl` 7.29.0-46, an `http_connect()` request to an unresponsive server...

```
http_connect("stuff", "/url", "$var(http_res)");
```

.. correctly sets `$var(http_res)` to `28`, which is an operation timeout per https://curl.haxx.se/libcurl/c/libcurl-errors.html.

However, `$curlerror($var(http_res))` returns the value `"No error"`. This is not quite as promised in https://kamailio.org/docs/modules/5.3.x/modules/http_client.html#idm480.

Thanks in advance!

-- Alex
### Description

When relaying an `INVITE` from a Kamailio proxy to an interconnect we are using DNS SRV records for load-balancing and failover. The proxy is listening on both a private interface and a public interface with an rfc1918 (ie. `10.0.0.14`) and a public IP address (ie. `185.0.0.34`) respectively.

The first branch (before DNS SRV failover) is working as expected. The message will be relayed from the received socket (`185.0.0.34`) to the interconnect. When this branch results in a timeout, the proxy will try to do DNS SRV failover. This new branch and any subsequent branches will no longer use the initial received socket as source. In our case we see that the private address (`10.0.0.14`) is now being used as source address.

### Troubleshooting

#### Reproduction

DNS SRV:
```
_sip._udp.transit.net. SRV 10 10 5060 transit1.net.
_sip._udp.transit.net. SRV 20 10 5060 transit2.net.
transit1.net. A 185.10.20.30
transit2.net. A 185.10.20.31
```
Kamailio:
```
$du = "sip:transit.net;transport=udp";
xinfo("Relaying [$rm] request: [$ru] with Call-ID [$ci]");
t_set_fr(0, 1000);
if (not t_relay()) {
	sl_reply_error();
}
```
Network flow:
```
12:30:00 INVITE udp:10.0.0.18:5060 => udp:185.0.0.34:5060 (internal request to proxy)
12:30:00 INVITE udp:185.0.0.34:5060 => udp:185.10.20.30:5060 (relaying from proxy to interconnect)
                    ^^^^^^^^^^

(request times out after 1 second, proxy will do a failover to the next endpoint)

12:30:01 INVITE udp:10.0.0.14:5060 => udp:185.10.20.31:5060 (relaying to next interconnect address)
                    ^^^^^^^^^
```

#### Log Messages

Attempt to see where it goes wrong:
```
onsend_route {
	xinfo("[$RAut] [$Rut] [$sas]\n");
	xinfo("$snd(buf)\n");
}
```
```
INFO: [sip:185.0.0.34:5060;transport=udp] [sip:185.0.0.34:5060;transport=udp] [udp:10.0.0.18:5060]
INFO: INVITE sip:+1234567890@transit.net;user=phone SIP/2.0#015#012Record-Route: <sip:185.0.0.34;lr;ftag=tDr7m6erX1N3D>#015#012Via: SIP/2.0/UDP 10.0.0.14;branch=z9hG4bKafe7.7fb590e263fa44677514193a6a1156ce.1#015#012Via: SIP/2.0/UDP 10.0.0.18;received=10.0.0.18;rport=5060;branch=z9hG4bK6t59a17N60FcB ...
```
So the `Record-Route` seems to be correct, but the top most `Via` header shows the private IP address. The message is being sent from the private IP address as well and never reaches the second address from the interconnect.

### Possible Solutions

A workaround to add `$fs = "udp:185.0.0.34:5060"` in the `onsend_route` seems to be effective.

### Additional Information

  * **Kamailio Version** - output of `kamailio -v`

```
version: kamailio 5.2.3 (x86_64/linux) 
flags: STATS: Off, USE_TCP, USE_TLS, USE_SCTP, TLS_HOOKS, USE_RAW_SOCKS, DISABLE_NAGLE, USE_MCAST, DNS_IP_HACK, SHM_MEM, SHM_MMAP, PKG_MALLOC, Q_MALLOC, F_MALLOC, TLSF_MALLOC, DBG_SR_MEMORY, USE_FUTEX, FAST_LOCK-ADAPTIVE_WAIT, USE_DNS_CACHE, USE_DNS_FAILOVER, USE_NAPTR, USE_DST_BLACKLIST, HAVE_RESOLV_RES
ADAPTIVE_WAIT_LOOPS=1024, MAX_RECV_BUFFER_SIZE 262144 MAX_URI_SIZE 1024, BUF_SIZE 65535, DEFAULT PKG_SIZE 8MB
poll method support: poll, epoll_lt, epoll_et, sigio_rt, select.
id: unknown 
compiled with gcc 7.4.0
```

* **Operating System**:

```
Ubuntu 18.04 LTS
Linux proxy4 4.15.0-64-generic #73-Ubuntu SMP Thu Sep 12 13:16:13 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
```

<!--
Kamailio Project uses GitHub Issues only for bugs in the code or feature requests. Please use this template only for feature requests.

If you have questions about using Kamailio or related to its configuration file, ask on sr-users mailing list:

  * http://lists.kamailio.org/cgi-bin/mailman/listinfo/sr-users

If you have questions about developing extensions to Kamailio or its existing C code, ask on sr-dev mailing list:

  * http://lists.kamailio.org/cgi-bin/mailman/listinfo/sr-dev

Please try to fill this template as much as possible for any issue. It helps the developers to troubleshoot the issue.

If you submit a feature request (or enhancement) add the description of what you would like to be added.

If there is no content to be filled in a section, the entire section can be removed.

You can delete the comments from the template sections when filling.

You can delete next line and everything above before submitting (it is a comment).
-->

### Description

Currently the functions set_advertised_address and set_advertised_port only accept strings as parameters. Trying to use it with variable causes an error. 
Having the function using a hard coded value is not a good practice and in order to add flexibility to the script in different installations it would be nice to have this function accepting variables.
Also, the 'advertise' option on the 'listen' parameter is not always desired because it apply for all messages sent via the socket, and there are situations where different advertised IP for the same interface are necessary.

### Expected behavior
set_advertised_address should receive a variable as parameter and use its value to change the SIP headers.

### Actual observed behavior
Kamailio won't start if set_advertised_address is used with a variable due to script parse error or it will set the SIP message with the literal string "$var(test)" for example, instead of using the value of $var(test).


### Additional Information

  * **Kamailio Version** - output of `kamailio -v`

```
# kamailio -v
version: kamailio 5.2.2 (x86_64/linux) 67f967
flags: STATS: Off, USE_TCP, USE_TLS, USE_SCTP, TLS_HOOKS, USE_RAW_SOCKS, DISABLE_NAGLE, USE_MCAST, DNS_IP_HACK, SHM_MEM, SHM_MMAP, PKG_MALLOC, Q_MALLOC, F_MALLOC, TLSF_MALLOC, DBG_SR_MEMORY, USE_FUTEX, FAST_LOCK-ADAPTIVE_WAIT, USE_DNS_CACHE, USE_DNS_FAILOVER, USE_NAPTR, USE_DST_BLACKLIST, HAVE_RESOLV_RES
ADAPTIVE_WAIT_LOOPS=1024, MAX_RECV_BUFFER_SIZE 262144 MAX_URI_SIZE 1024, BUF_SIZE 65535, DEFAULT PKG_SIZE 8MB
poll method support: poll, epoll_lt, epoll_et, sigio_rt, select.
id: 67f967 
compiled on 11:40:41 Mar 11 2019 with gcc 4.8.5

```

* **Operating System**:

<!--
Details about the operating system, the type: Linux (e.g.,: Debian 8.4, Ubuntu 16.04, CentOS 7.1, ...), MacOS, xBSD, Solaris, ...;
Kernel details (output of `uname -a`)
-->

```
# uname -a
Linux voice-conn-kamailio-1 3.10.0-514.21.2.el7.x86_64 #1 SMP Tue Jun 20 12:24:47 UTC 2017 x86_64 x86_64 x86_64 GNU/Linux

```
