By creating `Package.swift`, this commit introduces support for Swift Package Manager. @joanromano, or someone, can you look at this?
Am I missing something or Haneke actually does NOT resize network-retrieved images on the background, but performs the resizing on the main thread.

I noticed my scroll performance on UITableView stutters and profiling led to `hnk_imageByScalingToSize` being called on main thread.

I ended up adding dispatch_async to `- (BOOL)fetchImageForFetcher:formatName:success:failure`:

```
- (BOOL)fetchImageForFetcher:(id<HNKFetcher>)fetcher formatName:(NSString *)formatName success:(void (^)(UIImage *image))successBlock failure:(void (^)(NSError *error))failureBlock
{
    NSString *key = fetcher.key;
    return [self fetchImageForKey:key formatName:formatName success:^(UIImage *image) {
        if (successBlock) successBlock(image);
    } failure:^(NSError *error) {
        dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
            HNKCacheFormat *format = _formats[formatName];

            [self fetchImageFromFetcher:fetcher completionBlock:^(UIImage *originalImage, NSError *error) {
                if (!originalImage)
                {
                    dispatch_async(dispatch_get_main_queue(), ^{
                        if (failureBlock) failureBlock(error);
                    });
                    return;
                }

                dispatch_async(dispatch_get_global_queue(DISPATCH_QUEUE_PRIORITY_DEFAULT, 0), ^{
                    UIImage* image = [self imageFromOriginal:originalImage key:key format:format];
                    [self setDiskImage:image forKey:key format:format];
                    dispatch_async(dispatch_get_main_queue(), ^{
                        [self setMemoryImage:image forKey:key format:format];
                        if (successBlock)
                        {successBlock(image);}
                    });
                });
            }];
        });
    }];
}
```
I'm not sure if this is a no-no for any reason. I was surprised to see that images are resized on the main queue, when one of the stated features is '*Background image resizing and file reading.*'

The crash appear on UIImage+Haneke.swift at line 18 on swift-3 branch : 
`return resizedImage!`

Or `resizedImage` can be nil => Crash sometimes
GitHub changed the way Markdown headings are parsed, so this change fixes it.

See [bryant1410/readmesfix](https://github.com/bryant1410/readmesfix) for more information.

Tackles bryant1410/readmesfix#1

It appears that it is possible to commit computed images to the cache, but to receive them back from the cache, seems flawed.  It seems like I need to already have the computed image before I try to retrieve the image from the cache. (so that it can save it to the cache, which is backward).
So, can you provide a simple example, how I would retrieve a cached raw UIImage into a UIImageView, and if not found in cache call my render function to computer the new UIImage, and save returned image to cache?
Hello guys, I just looked through your code searching for the reason of memory leaks in my custom fetcher and found this line of code

https://github.com/Haneke/Haneke/blob/67b52df0b01b38aceda165d0a7ea04f72477ec3d/Haneke/HNKCache.m#L262

I don't know if it's intensionally or it's a mistake, but it cause fetcher to live as long as a success block, so you might want to fix it.

BTW, thanks for you for this nice library.
`CFURLCreateStringByAddingPercentEscapes` is changed with `stringByAddingPercentEncodingWithAllowedCharacters` since it's deprecated in iOS9.
This pull request also contains changes in Podfile in order to pass Travis tests. For details see #103 

The method is deprecated and `[NSString stringByAddingPercentEncodingWithAllowedCharacters:]` should be used instead.

Podfile is changed to support Cocoapods 1.0

Installing pods from Podfile using cocoapods 1.0.1 throws following error

```
[!] Invalid `Podfile` file: [!] Unsupported options `{:exclusive=>true}` for target `HanekeTests`..

 #  from /Users/foo/Downloads/Haneke-1.0.2/Podfile:3
 #  -------------------------------------------
 #  
 >  target :'HanekeTests', :exclusive => true do
 #    pod 'OCMock', '~> 2.2'
 #  -------------------------------------------
```
