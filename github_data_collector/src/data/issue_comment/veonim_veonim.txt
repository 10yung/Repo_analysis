OS: Linux 5.0.0-37-generic 40~18.04.1-Ubuntu SMP Thu Nov 14 12:06:39 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux
Neovim version: NVIM v0.5.0-279-ge922576bd (Appimage)
Veonim version: veonim.0.22.0.AppImage

I'm encountering issues implementing ext_multigrid properly in my own GUI and decided to ~~steal code~~ see how Veonim handled it, only to discover that running `:call nvim_open_win(0, v:true, { "width": 10, "height": 10, "focusable": v:true, "external": v:true })` seems to break Veonim: the newly-opened window is not displayed and the cursor looks it stayed in the previous window even though it actually moved to the new window. Running `call nvim_win_close(1002, v:false)` seems to be enough to go back to a working state.
I guess it's probably just an issue with the selected grid not being drawn?
I can't figure out how to paste from the Windows clipboard. The `*` and `+` registers are empty, <kbd>Ctrl</kbd>+<kbd>v</kbd>, and <kbd>Shift</kbd>+<kbd>Ins</kbd> don't paste from the clipboard in insert mode.
Hello guys, when i execute command :bro[wse] o[ldfiles][!] , instead of showing in full window with first list on top , it show a split window with last list like in picture below

![Screenshot_2019-07-28_06-17-21](https://user-images.githubusercontent.com/34209791/62000450-5e7f5e80-b101-11e9-8f49-3f4e65c62900.png)

btw, i use version 0.22.0 in arch linux
  

I tried several Vietnamese engines, but none of them works.

(this is a video)
[![video](https://i.ytimg.com/vi/WZSoEjvHd3A/hqdefault.jpg)](https://youtu.be/WZSoEjvHd3A)
I'm using a Brazilian keyboard on a pt_BR location. With these configurations, ~, ^, ', \` and " are dead keys and, as such, the combination `^+a`, for instance, should produce `Ã¢`, but only the letter `a` is inserted. No dead key is being handled at all.

OS: Linux (Solus OS distribution)
Veonim version: 0.22.0 AppImage
currently in wat we have server/support/remote.ts and ui/support/remote.ts

the ui shows `support/remote.ts` and `support/remote.ts`

we should show more of the paths until the nameplates are unique
Regardless of where (directory/folder) I execute veonim, it always looks for files on ~/, then I need to put the whole file path starting from home dir to actually open it. 

I'm running Veonim on Linux Debian Buster, npm 6.9.0.

See #567 and my previous issues.

It seems sometimes Veonim can't talk to the locally installed git program to get git status information. I've noticed this issue happening on MacOS with pre-packaged git vs git from brew. Not sure what is going on... maybe we should vendor the `git` binary with Veonim?
If there is a way, I would look into this if I had time, but fzf would help enable all fuzzy needs, and be super fast since ripgrep is already being used. (FD could be used for folder navigation or all of the searching).

I think this would help knockout the MRU requirement as there are ways to extend fzf yourself, including existing vim packages that have MRU with fzf.
As you must know, [`Oni`](https://github.com/onivim/oni/) is also a GUI for `NeoVim`. I'm having trouble choosing between `Oni` and `veonim`. Could you please elaborate on what makes this project unique? Thanks in advance!