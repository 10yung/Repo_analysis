By changing the preamble in `tex_template.tex`, one may use different fonts for the animations, both for text and math formulas. However, [some of the most interesting math fonts](https://tug.org/FontCatalogue/mathfonts.html) are only available in otf / ttf, which is usually related with a xelatex engine. 

Is it possible right now to use these fonts in Manim? Which is the easiest integration?

Thanks in advance

Is there a way to draw geometry diagrams in Manim? I have the asymptote code for it.
Thanks in advance 

I'm making an video in manim where I show two ovwwrlaping shapes, and I want to set one of the regions to be on the front, how can I do that?
Matplotlib has a very nice method to define in which layer objects are shown on the screen with a parameter `zorder`.
![image](https://user-images.githubusercontent.com/44469195/71835887-05095b80-30b3-11ea-9a68-7da6253c6312.png) 
When working with manim, it's sometimes a little tricky to get the layers right, so what about an implementation, where you can write:
```py
d=Dot()
self.add(d, zordner= 1)
```
Furthermore, there could be defaults like:
* Dots at the first layer
* Text & Equations at the second layer
* Shapes on the third layer
* Functions and graphs on the fourth layer.
Upon installing the software through Brian Howell's tutorial (http://bhowell4.com/manic-install-tutorial-for-mac/) I ran the following code on Terminal to test run manim:

python -m manim example_scenes.py SquareToCircle -pl

but the Terminal on my Mac gives the following response:
/Documents/manim/venv/bin/python: No module named manim.__main__; 'manim' is a package and cannot be directly executed

I'm terribly unfamiliar with coding so would really appreciate help on this one x
The file containing dependencies is `requirements.txt` with the missing `s` inserted.
The rotation happens in a clockwise direction, because the sign of the argument is negative.
---
I found it confusing and had to check the video to make sure the square was rotating clockwise.

So I thought to send a change.
Thanks for contributing to manim!

**Please ensure that your pull request works with the latest version of manim.**
You should also include:

1. The motivation for making this change (or link the relevant issues)
2. How you tested the new behavior (e.g. a minimal working example, before/after
screenshots, gifs, commands, etc.) This is rather informal at the moment, but
the goal is to show us how you know the pull request works as intended.

When working with relatively large images in manim on my Mac, a BrokenPipeError occurs when FFmpeg tries to write to `file_writer` after stdin is closed.

The error shows up at seemingly random times, even with the same input. For instance, the output below shows that the error occurs at 3 different locations with the exact same input.
<img width="1243" alt="Screenshot 2019-12-31 19 03 09" src="https://user-images.githubusercontent.com/28768645/71637103-bc5c2900-2c00-11ea-84e7-23a1da851bbd.png">
<img width="1204" alt="Screenshot 2019-12-31 19 02 54" src="https://user-images.githubusercontent.com/28768645/71637104-bc5c2900-2c00-11ea-9df9-b37b8bff3343.png">
<img width="1138" alt="Screenshot 2019-12-31 19 02 42" src="https://user-images.githubusercontent.com/28768645/71637105-bc5c2900-2c00-11ea-9ea6-6c25fcde6080.png">

**With my commit, everything works fine, even when a BrokenPipeError is raised.** This can be shown by printing the exceptions that occur at the end of the run, and showing that all the animations still play. In the figure below, it printed [Errno 32] Broken pipe once, however, that error now does not damage the video.
![image](https://user-images.githubusercontent.com/28768645/71637123-24127400-2c01-11ea-9dfa-77a4be6b6d42.png)



Notes:
- If this error **never occurred** on some people's machines, this commit will **not change anything**, since it is simply catching the exception when an error is caused.
- Using `wait(1)` is mostly an arbitrary decision and seems to work well.
- If `sleep` is not called after `wait`, some animations do not show up on the screen.
- The changes in this commit **do not print** all the [Errno 32] Broken pipe exceptions that occur, which was done in the final figure.

This error also corresponds to the issue #845.
Is there any way to add custom 3D .obj files to a scene? I know that 3D plots and a few primitive shapes can be added, but have not seen any way to add custom 3D objects.

Thanks!