Hey @mafaca , sorry that this isn't a real issue but I don't know of any other way to contact you.

I'm making a VR mod for a game, and for that I need to edit the `globalgamemanagers` file and add OpenVR to the EnabledVRDevices in BuildSettings. Utiny is already able to read this file, so I was trying to explore this codebase in hopes of learning how to edit this file programmatically.

Any hints you can give me on how to achieve this, or what parts of this code base I could pay special attention to?

Thanks in advance.
Latest Unity 2019.2

I can't send the original and unfortunately your tool does not support exporting just this asset in original form. But I think its channel mask thats incorrect.

```
Updating Assets/Mesh/Mesh_8.asset - GUID: 0181dc4c6e5ec8a478f8f3ed897d1640...
Missing vertex input: vertex
 
(Filename: /Users/builduser/buildslave/unity/build/Runtime/GfxDevice/metal/GpuProgramsMetal.mm Line: 492)

Invalid channel info for Metal vertex decl!
 
(Filename: /Users/builduser/buildslave/unity/build/Runtime/GfxDevice/metal/VertexFormatMetal.mm Line: 25)

Obtained 20 stack frames.
Thread 0x70000c54c000 may have been prematurely finalized
#0  0x007fff6fdf17fa in __pthread_kill
Thread 0x70000c54c000 may have been prematurely finalized
#1  0x007fff6fd78a1c in abort
Thread 0x70000c54c000 may have been prematurely finalized
#2  0x007fff6fd77cd6 in err
Thread 0x70000c54c000 may have been prematurely finalized
#3  0x007fff3da8cc19 in MTLIOAccelCommandBufferStorageGrowSegmentList.cold.1
Thread 0x70000c54c000 may have been prematurely finalized
#4  0x007fff3da7fc35 in MTLReportFailure
Thread 0x70000c54c000 may have been prematurely finalized
#5  0x007fff3da176ba in -[MTLVertexAttributeDescriptorInternal setFormat:]
Thread 0x70000c54c000 may have been prematurely finalized
#6  0x0000010fb38e94 in (anonymous namespace)::CreateRenderPipeline(metal::PipeKey const&)
Thread 0x70000c54c000 may have been prematurely finalized
#7  0x0000010fb380e6 in objc_object<MTLRenderPipelineState> const __strong& GfxDoubleCache<metal::PipeKey, id<MTLRenderPipelineState> __strong, GfxGenericHash<metal::PipeKey>, MemCmpEqualTo<metal::PipeKey>, GfxDoubleCacheConcurrencyPolicy::LocklessGet, GfxDoubleCacheDefaultEmptyDeletedGenerator<metal::PipeKey>, (MemLabelIdentifier)29>::Get<objc_object<MTLRenderPipelineState> (*)(metal::PipeKey const&)>(metal::PipeKey const, objc_object<MTLRenderPipelineState> (*)(metal::PipeKey const&))
Thread 0x70000c54c000 may have been prematurely finalized
#8  0x0000010fb37fce in GpuProgramMetal::GetCachedPipeline(metal::PipeKey const&)
Thread 0x70000c54c000 may have been prematurely finalized
#9  0x0000010fb1bec2 in GfxDeviceMetalBase::CommonDrawSetup(VertexDeclarationMetal*, GfxBuffer* const*, unsigned int const*, int, GfxPrimitiveType, bool)
Thread 0x70000c54c000 may have been prematurely finalized
#10 0x0000010fb22688 in non-virtual thunk to GfxDeviceMetalBase::DrawBufferRangesPlatform(GfxBuffer*, unsigned int, GfxBuffer* const*, unsigned int const*, int, DrawBuffersRange const*, int, VertexDeclaration*, unsigned long, bool)
Thread 0x70000c54c000 may have been prematurely finalized
#11 0x0000010e3125a1 in SinglePassStereoSupportExt::DrawBuffersStereo(GfxBuffer*, unsigned int, GfxBuffer* const*, unsigned int const*, int, DrawBuffersRange const*, int, VertexDeclaration*, unsigned long)
Thread 0x70000c54c000 may have been prematurely finalized
#12 0x0000010fb1c292 in GfxDeviceMetalBase::DrawBuffers(GfxBuffer*, unsigned int, GfxBuffer* const*, unsigned int const*, int, DrawBuffersRange const*, int, VertexDeclaration*)
Thread 0x70000c54c000 may have been prematurely finalized
#13 0x0000010dd02eb7 in GfxDeviceWorker::RunCommand(ThreadedStreamBuffer&)
Thread 0x70000c54c000 may have been prematurely finalized
#14 0x0000010fb27e8c in GfxDeviceWorkerAutoreleasePoolProxy
Thread 0x70000c54c000 may have been prematurely finalized
#15 0x0000010dd049b0 in GfxDeviceWorker::RunExt(ThreadedStreamBuffer&)
Thread 0x70000c54c000 may have been prematurely finalized
#16 0x0000010dcf7368 in GfxDeviceWorker::RunGfxDeviceWorker(void*)
Thread 0x70000c54c000 may have been prematurely finalized
#17 0x0000010ebbd80f in Thread::RunThreadWrapper(void*)
Thread 0x70000c54c000 may have been prematurely finalized
#18 0x007fff6feaee65 in _pthread_start
Thread 0x70000c54c000 may have been prematurely finalized
#19 0x007fff6feaa83b in thread_start
```

Mesh_8.asset
```
%YAML 1.1
%TAG !u! tag:unity3d.com,2011:
--- !u!43 &4300000
Mesh:
  m_Name:
  serializedVersion: 8
  m_SubMeshes:
  - serializedVersion: 2
    firstByte: 0
    indexCount: 216
    topology: 0
    baseVertex: 0
    firstVertex: 0
    vertexCount: 74
    localAABB:
      m_Center: {x: -7.290194, y: 2.238514, z: 196.307}
      m_Extent: {x: 37.44891, y: 0.1365488, z: 4.811783}
  m_Shapes:
    vertices: []
    shapes: []
    channels: []
    fullWeights: []
  m_BindPose: []
  m_BoneNameHashes:
  m_RootBoneNameHash: 0
  m_MeshCompression: 0
  m_IsReadable: 1
  m_KeepVertices: 1
  m_KeepIndices: 1
  m_IndexFormat: 0
  m_IndexBuffer: 00000300010002000300000002000500030004000500020004000700050006000700040006000900070008000900060008000b0009000a000b0008000a000d000b000c000d000a000c000f000d000e000f000c000e0011000f00100011000e0010001300110012001300100012001500130014001500120014001700150016001700140016001900170018001900160018001b0019001a001b0018001a001d001b001c001d001a001c001f001d001e001f001c001e0021001f00200021001e0020002300210022002300200022002500230024002500220024002700250026002700240026002900270028002900260028002b0029002a002b0028002a002d002b002c002d002a002c002f002d002e002f002c002e0031002f00300031002e0030003300310032003300300032003500330034003500320034003700350036003700340036003900370038003900360038003b0039003a003b0038003a003d003b003c003d003a003c003f003d003e003f003c003e0041003f00400041003e00400043004100420043004000420045004300440045004200440047004500460047004400460049004700480049004600
  m_Skin: []
  m_VertexData:
    m_CurrentChannels: 0
    m_VertexCount: 74
    m_Channels:
    - stream: 0
      offset: 0
      format: 0
      dimension: 0
    - stream: 0
      offset: 0
      format: 0
      dimension: 0
    - stream: 0
      offset: 0
      format: 0
      dimension: 0
    - stream: 0
      offset: 0
      format: 0
      dimension: 0
    - stream: 0
      offset: 0
      format: 0
      dimension: 0
    - stream: 0
      offset: 0
      format: 0
      dimension: 0
    - stream: 0
      offset: 0
      format: 0
      dimension: 0
    - stream: 0
      offset: 0
      format: 0
      dimension: 0
    m_DataSize: 0
    _typelessdata:
  m_CompressedMesh:
    m_Vertices:
      m_NumItems: 0
      m_Range: 0
      m_Start: 0
      m_Data:
      m_BitSize: 0
    m_UV:
      m_NumItems: 0
      m_Range: 0
      m_Start: 0
      m_Data:
      m_BitSize: 0
    m_Normals:
      m_NumItems: 0
      m_Range: 0
      m_Start: 0
      m_Data:
      m_BitSize: 0
    m_Tangents:
      m_NumItems: 0
      m_Range: 0
      m_Start: 0
      m_Data:
      m_BitSize: 0
    m_Weights:
      m_NumItems: 0
      m_Data:
      m_BitSize: 0
    m_NormalSigns:
      m_NumItems: 0
      m_Data:
      m_BitSize: 0
    m_TangentSigns:
      m_NumItems: 0
      m_Data:
      m_BitSize: 0
    m_FloatColors:
      m_NumItems: 0
      m_Range: 0
      m_Start: 0
      m_Data:
      m_BitSize: 0
    m_BoneIndices:
      m_NumItems: 0
      m_Data:
      m_BitSize: 0
    m_Triangles:
      m_NumItems: 0
      m_Data:
      m_BitSize: 0
    m_UVInfo: 0
  m_LocalAABB:
    m_Center: {x: -7.290194, y: 2.238514, z: 196.307}
    m_Extent: {x: 37.44891, y: 0.1365488, z: 4.811783}
  m_MeshUsageFlags: 0
  m_BakedConvexCollisionMesh:
  m_BakedTriangleCollisionMesh:
  m_MeshOptimized: 1

```
@mafaca arrived at 14.49% of the extraction of the files crashes giving me an error and I do not understand what it is.
screenshot of the problem
https://user-images.githubusercontent.com/60009316/72626620-50412b00-394b-11ea-9175-402b0ab8002c.png

Hi,

It seems for my use case (ETC2 textures) I am not using any of the .dll (TextureConverterWrapper, texgenpack, crunch, crunchunity.dll), however are there linux versions of these .dlls available, or can they be made to work on linux in a .net core environment? For now I will just raise exceptions if it tries to access these external functions.

Where are the dlls from? Are they open source? Can they be reverse engineered and ported to c#, perhaps, or are they insanely complicated?
Is there any way to add assemblies to fix theses MonoBehaviour errors?
"Unable to read MonoBehaviour, because definition for script class wasn't found"
I know what assembly has it and where the class is.
Import: System.IndexOutOfRangeException: Индекс находился вне границ массива.
   в uTinyRipper.Classes.Shaders.SerializedSubProgram.Export(ShaderWriter writer, ShaderSubProgramBlob& blob, ShaderType type, Boolean isTier)
   в uTinyRipper.Classes.Shaders.SerializedProgram.Export(ShaderWriter writer, ShaderType type)
   в uTinyRipper.Classes.Shaders.SerializedPass.Export(ShaderWriter writer)
   в uTinyRipper.Classes.Shaders.SerializedSubShader.Export(ShaderWriter writer)
   в uTinyRipper.Classes.Shaders.SerializedShader.Export(ShaderWriter writer)
   в uTinyRipper.Classes.Shader.ExportBinary(IExportContainer container, Stream stream, Func`3 exporterInstantiator)
   в uTinyRipperGUI.Exporters.ShaderAssetExporter.Export(IExportContainer container, Object asset, String path)
   в uTinyRipper.Project.AssetExportCollection.Export(ProjectAssetContainer container, String dirPath)
   в uTinyRipper.Converters.ProjectExporter.Export(String path, GameCollection fileCollection, IEnumerable`1 files, ExportOptions options)
   в uTinyRipper.GameStructure.Export(String exportPath, Func`2 filter)
   в uTinyRipperGUI.MainWindow.ExportFiles(Object data)

this error in new version
Import: System.ArgumentException: Элемент с тем же ключом уже был добавлен.
   в System.ThrowHelper.ThrowArgumentException(ExceptionResource resource)
   в System.Collections.Generic.Dictionary`2.Insert(TKey key, TValue value, Boolean add)
   в uTinyRipper.Converters.ProjectAssetContainer.AddResources(ResourceManager manager)
   в uTinyRipper.Converters.ProjectAssetContainer..ctor(ProjectExporter exporter, VirtualSerializedFile file, IEnumerable`1 assets, IReadOnlyList`1 collections)
   в uTinyRipper.Converters.ProjectExporter.Export(String path, GameCollection fileCollection, IEnumerable`1 files, ExportOptions options)
   в uTinyRipper.GameStructure.Export(String exportPath, Func`2 filter)
   в uTinyRipperGUI.MainWindow.ExportFiles(Object data)

https://github.com/mafaca/UtinyRipper/pull/384#issuecomment-541297076

Game: PriPara All Idol Perfect Stage
Error Log:
Import: System.ArgumentOutOfRangeException: Index was out of range. Must be non-negative and less than the size of the collection.
Parameter name: index
   at System.ThrowHelper.ThrowArgumentOutOfRangeException(ExceptionArgument argument, ExceptionResource resource)
   at System.SZArrayHelper.get_Item[T](Int32 index)
   at uTinyRipper.Classes.Shaders.SerializedProgram.Export(ShaderWriter writer, ShaderType type)
   at uTinyRipper.Classes.Shaders.SerializedPass.Export(ShaderWriter writer)
   at uTinyRipper.Classes.Shaders.SerializedSubShader.Export(ShaderWriter writer)
   at uTinyRipper.Classes.Shaders.SerializedShader.Export(ShaderWriter writer)
   at uTinyRipper.Classes.Shader.ExportBinary(IExportContainer container, Stream stream, Func`3 exporterInstantiator)
   at uTinyRipperGUI.Exporters.ShaderAssetExporter.Export(IExportContainer container, Object asset, String path, Action`3 callback)
   at uTinyRipperGUI.Exporters.ShaderAssetExporter.Export(IExportContainer container, Object asset, String path)
   at uTinyRipper.AssetExporters.AssetExportCollection.ExportInner(ProjectAssetContainer container, String filePath)
   at uTinyRipper.AssetExporters.AssetExportCollection.Export(ProjectAssetContainer container, String dirPath)
   at uTinyRipper.AssetExporters.ProjectExporter.Export(String path, FileCollection fileCollection, IEnumerable`1 assets)
   at uTinyRipperGUI.MainWindow.ExportFiles(Object data)

This makes it extremely difficult to bulk export from the game.
Example file that will cause the crash is on the bottom of this report.
Thanks for your time.

[crashfile.zip](https://github.com/mafaca/UtinyRipper/files/3118259/crashfile.zip)

