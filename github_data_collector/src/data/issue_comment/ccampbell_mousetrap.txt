I've logged a few reports of this line:
https://github.com/ccampbell/mousetrap/blob/master/mousetrap.js#L721

Throwing this error:
`TypeError: Cannot assign to read only property 'which' of object '#<KeyboardEvent>'`

I can't reproduce it myself and I'm unsure which key was pressed to make that code path execute. Happened on Chrome 79 on both macOS and Windows.
ie set a shortcut for spacebar key if held for 300 ms
thx! i like this repo.

there a [list](https://stackoverflow.com/a/19883965) about all the result of `navigator.platform`.

maybe we lost something about opera mini:

- Pike v7.6 release 92: Opera Mini 5 on any iPhone (2009)
- Pike v7.8 release 517: Opera Mini 7 on any iPhone (2012)
When mousetrap loads in a non-dom environment, it bails early and doesn't set the Mousetrap global. Make the global-bind plugin detect that Mousetrap didn't initialize and bail itself.
Hi,

We're currently having an issue in Chrome where using Mousetrap.bindGlobal(['ctrl+alt+space'] no longer works, when it did previously. We tested in Chrome 77-70 and it still did not work

This shortcut works on Firefox but not chrome. Changing the shortcut to CTRL+ALT+F fixes the issue but we'd like to keep our original shortcut to keep our users muscle memory

Demo here:
https://codepen.io/aidanbiggs/pen/VwZRWyZ

Any help would be appreciated, thanks!
Need possibility to remove eventListeners from targetElement in reset method or in some one other. Cause performance problems.
![12](https://user-images.githubusercontent.com/23101743/62288978-3deb3780-b466-11e9-8da9-a2790ad5a358.jpg)

…s #235
At the moment, it seems that .bind only works with strings, being able to bind from [KeyboardEvent.code](https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code) would be nice too (with probably a fallback for Edge and IE).

The use case is consistency between different keyboard layouts, where the .key property is different but .code is the same because .code is linked to the physicial key rather than its character.

A concrete example of this, let's say you want to bind keys from the top keyboard row. You could do `Mousetrap.bind('1', function() { ... });` and it will work for pretty much all keyboard layouts... except AZERTY, the most common keyboard layout in Belgium and France. While the numbers are on the top row there too, you have to press Shift to get them. The current best workaround is to bind the `&`, `é` etc. keys too (i.e. the top row keys on AZERTY) but this adds excess keyboard shortcuts for all users. Being able to use the codes `Digit1`, `Digit2` etc. would make it way more clean.
~~Different layouts problem~~ **The MAIN problem** with similar packages:

### let's decide what is `keyboard shortcuts`?

`Google` > `keyboard shortcuts` > `first link` > :
> In computing, a keyboard shortcut is a set of one or more keys that invoke a command in software or an operating system.

### Keys? What is the keys?

`Google` > `keyboard keys` > `images` > :

![image](https://user-images.githubusercontent.com/10743009/59667116-daab8b80-91be-11e9-8735-993c888736e5.png)

So, what is the key here? maybe `A`? or `F` ? `C`? `D`? maybe.
If you want to press `ctrl+a`, what you should press?. Yes, right, the keys with `ctrl` and `a` inscriptions

But, what you should press here? 

![image](https://user-images.githubusercontent.com/10743009/59667771-f1061700-91bf-11e9-9684-58f2c17f76ba.png)

huh? Where is the letters? How can this be used at all? It has no labels

Maybe this?

![image](https://user-images.githubusercontent.com/10743009/59668230-c799bb00-91c0-11e9-9435-3bbb099649ab.png)

Or this? 

![image](https://user-images.githubusercontent.com/10743009/59668290-e39d5c80-91c0-11e9-8bd2-d81b1c4bcf3d.png)

No, you will press this

![image](https://user-images.githubusercontent.com/10743009/59668353-ffa0fe00-91c0-11e9-9762-c160ead5bbb7.png)

Because it is on this place that the keys are located on the qwerty (as most popular layout)

![image](https://user-images.githubusercontent.com/10743009/59668810-d0d75780-91c1-11e9-9a32-68347a0205dc.png)

## Azerty, Qwertz, Dvorak, Colemak, Maltron, Jcuken and \*enter you keyboard layout here\*

Exampe: I have to press `SHIFT + C` to do something
On qwerty:

![image](https://user-images.githubusercontent.com/10743009/59669888-adada780-91c3-11e9-8bfa-8112c38431e9.png)

On dvorak:

![image](https://user-images.githubusercontent.com/10743009/59670232-4512fa80-91c4-11e9-95ad-40f79c7289b3.png)

Not so comfortable?

# So here's the question: why?

1. Why keyboard *SHORTCUTS* depends on user's layout? They are keyboard *SHORTCUTS*, not the actual letters that i must press? They are designed for ease of use
2. Why do you use `e.which` if its deprecated? https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/which. (by the way `keyCode` is deprecated too https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/keyCode) 
3. Why dont you use `e.code`? Browser support? https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent/code#Browser_compatibility ok, write a fallback for those who use IE or ~~EDGE~~

https://codepen.io/notiv/pen/JQKxqX
when im trying to do the shortcut for mod+1, it activates the shortcut for mod+fn+1 (in electron app)