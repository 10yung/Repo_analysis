When I entered a world, a chat message told me there had been errors

Attached are the mod list and the latest.log

I took a quick look at the log, and tried downgrading vanillaFix from 1.0.9-99 to 1.0.9-97, but the error still appeared.

[modlist.txt](https://github.com/MightyPirates/OpenComputers/files/4076609/modlist.txt)

[latest.log](https://github.com/MightyPirates/OpenComputers/files/4076598/latest.log)
OpenComputers 1.7.5.192
CC-Tweaked 1.85.2
AppliedEnergistics2 rv6-stable-7

Here's a ME Controller with a single item in its drives

![OC](https://i.imgur.com/JLkDKZI.png)

It's being invoked fine on OC

But here's on ComputerCraft

![CC](https://i.imgur.com/IcITeJ4.png)

* canExtract():bool => works
* canReceive():bool => works
* getAvgPowerInjection():float => works
* getAvgPowerInjection():float => works
* getCpus():table => always nil
* getCraftables():table => always nil
* getEnergyStored():float => works
* getItemsInNetwork():table => always nil

It seems like tables do not make it through the relay. 

For what it's worth, the relay is fully upgraded with a tier 3 disk, tier 3 CPU and a tier 3.5 ram stick so the serialized data should have room ?

![Relay](https://i.imgur.com/ckEfWya.png)

The whole setup is like so (yes it's powered)

![Setup](https://i.imgur.com/VQzqvbc.png)
Discussion: https://github.com/MightyPirates/OpenComputers/issues/3208

Changes:

- navigation#findWaypoints gives addresses of waypoints also - it can be used for verification
- label of waypoint can't be changed by player, who do not have access to concrete waypoint block(like generalised support for WorldGuard and similar protective plugins and mods)

Label protection are use same method like vanilla sign
**Versions:**
Minecraft: **1.12.2**
Forge: **14.23.5.2768**
OpenComputers: **1.7.5.192**
Pure forge install without any third-party launchers, with only OpenComputers installed

**Description:**
Drones with chunkloader upgrade stop operating after going to a dimension where portal exit isn't in a loaded chunk. That applies to going from the overworld to the nether/the end and vice versa. The drone resumes operation after the chunk that the drone ended up in gets loaded, e.g. a player loads it. If the chunk that the drone teleports to after going through a portal is loaded before the drone goes through, the drone runs as intended without a halt. This happens on singleplayer as well as on multiplayer server. I've tested it a bit and according to the logs (from locally hosted multiplayer server), the drone actually loads the dimension that it gets teleported into after going through a portal and even generates chunks around itself if it's a fresh area and fresh portal that wasn't used before. The issue is, after that the dimension gets immediately unloaded. I believe this could be the same issue as described [in this issue](https://github.com/MightyPirates/OpenComputers/issues/3161), only that it's not an incompatibility with another mod, but rather an issue within OpenComputers itself.

Logs generated when going through a fresh portal:
```[23:26:35] [Server thread/INFO] [FML]: Loading dimension -1 (world) (net.minecraft.server.dedicated.DedicatedServer@2b70f90a)
[23:26:36] [Server thread/WARN] [FML]: OpenComputers loaded a new chunk [69, 71] in dimension -1 (the_nether) while populating chunk [70, 72], causing cascading worldgen lag.
[23:26:36] [Server thread/WARN] [FML]: Please report this to the mod's issue tracker. This log can be disabled in the Forge config.
[23:26:36] [Server thread/WARN] [FML]: OpenComputers loaded a new chunk [69, 74] in dimension -1 (the_nether) while populating chunk [70, 75], causing cascading worldgen lag.
[23:26:36] [Server thread/WARN] [FML]: Please report this to the mod's issue tracker. This log can be disabled in the Forge config.
[23:26:36] [Server thread/WARN] [FML]: OpenComputers loaded a new chunk [69, 73] in dimension -1 (the_nether) while populating chunk [69, 74], causing cascading worldgen lag.
[23:26:36] [Server thread/WARN] [FML]: Please report this to the mod's issue tracker. This log can be disabled in the Forge config.
[23:26:36] [Server thread/WARN] [FML]: OpenComputers loaded a new chunk [69, 72] in dimension -1 (the_nether) while populating chunk [69, 74], causing cascading worldgen lag.
[23:26:36] [Server thread/WARN] [FML]: Please report this to the mod's issue tracker. This log can be disabled in the Forge config.
[23:26:36] [Server thread/WARN] [FML]: OpenComputers loaded a new chunk [68, 72] in dimension -1 (the_nether) while populating chunk [69, 72], causing cascading worldgen lag.
[23:26:36] [Server thread/WARN] [FML]: Please report this to the mod's issue tracker. This log can be disabled in the Forge config.
[23:26:36] [Server thread/WARN] [FML]: OpenComputers loaded a new chunk [69, 75] in dimension -1 (the_nether) while populating chunk [70, 76], causing cascading worldgen lag.
[23:26:36] [Server thread/WARN] [FML]: Please report this to the mod's issue tracker. This log can be disabled in the Forge config.
[23:26:36] [Server thread/WARN] [FML]: OpenComputers loaded a new chunk [69, 76] in dimension -1 (the_nether) while populating chunk [70, 77], causing cascading worldgen lag.
[23:26:36] [Server thread/WARN] [FML]: Please report this to the mod's issue tracker. This log can be disabled in the Forge config.
[23:26:36] [Server thread/WARN] [FML]: OpenComputers loaded a new chunk [69, 81] in dimension -1 (the_nether) while populating chunk [70, 82], causing cascading worldgen lag.
[23:26:36] [Server thread/WARN] [FML]: Please report this to the mod's issue tracker. This log can be disabled in the Forge config.
[23:26:37] [Server thread/INFO] [FML]: Unloading dimension -1
```
Logs generated when going through an already-generated portal (on the exit end, notice the timestamps):
```
[23:28:31] [Server thread/INFO] [FML]: Loading dimension -1 (world) (net.minecraft.server.dedicated.DedicatedServer@2b70f90a)
[23:28:32] [Server thread/INFO] [FML]: Unloading dimension -1
```

**How to reproduce:**
1. Teleport yourself away from the spawn chunks (10000 blocks should be more than enough) - that's for later, when testing going from the nether to the overworld, this step list is for testing overworld->nether
2. Make a drone with chunkloader upgrade and EEPROM with a simple program to fly in a straight direction, e.g.
```
local drone = component.proxy(component.list("drone")())
local chunkloader = component.proxy(component.list("chunkloader")())

chunkloader.setActive(true) -- make sure the chunkloader upgrade is running
drone.setStatusText(tostring(chunkloader.isActive())) -- verify it by setting status text
drone.move(40, 0, 0) -- move 40 units east
while true do
  drone.swing(0) -- do some action to yield
end
```
2. Construct a nether portal so that when entering you're moving in the drone's moving direction (in the above program - east)
3. Go through the portal and if it's facing south/north in the nether, remake it so that it faces east/west
4. (Still in the nether) Clear the space (if it's obstructed) in front of the portal, that is - in the drone's moving direction (east) to visually determine later if it moved before the player entered
5. Go through the portal back to the overworld, place a drone in front of the portal (facing east, so that it's gonna enter the portal), and turn it on
6. Wait a few seconds and go through the portal - the drone is going to restart its operation and be near the player, still moving, instead of being stationary further away after already finishing moving while player was waiting for a while in the overworld (note that you might be facing a different direction when you exit the portal in the nether). Additionally, the drone going from the nether to the overworld can be similarly tested as well, yielding the same results.
Now waypoints are too unsafe: 
- navigation#findWaypoints result can't be verificated
- anyone can create duplicates of waypoints with same labels
- waypoint label can be changed by other players, who can't break concrete block even

 For solve this problems I suggest follow:
- let navigation#findWaypoints result contains a addresses of waypoint
- check player permissions before setting of label

What do you think about this?
Using black or any darker color results in transparency instead of rendered color.

This shows default rendering, it should have had a black head (around the gray eye) and black stripes. Instead they are transparent and actually removes some of the render faces on the yellow blocks, most noticeable in the lowest yellow squares (missing right face).
![](https://cdn.discordapp.com/attachments/641293471965118504/661967308817694722/2020-01-01_11.20.30.png)

The following image is how I would expect it to look, except for the missing transparency. This is taken using Sildurs Shaders.
![](https://cdn.discordapp.com/attachments/641293471965118504/661967453982687235/unknown.png)

OpenComputers-MC1.12.2-1.7.4.153
Tier 2 hologram projector.
according to lua.org the following should work

    local temp = io.input()   -- save current file
    io.input("newinput")      -- open a new current file
    ...                       -- do something with new input
    io.input():close()        -- close current file
    io.input(temp)            -- restore previous current file

sadly everytime i try to run this i get the error "expected string got table" i have tested this out in lua and io.input() returns a table. if this isnt an issue please provide an alternative
**Minecraft Version:** 1.12.2
**Mod Version:** 1.7.5192
**Forge Version:** 14.23.5.2847
**Using MultiMC**

**_Description of issue_**
When calling robot.use() either from the lua interpreter, from an EEPROM program, or from a program in the filesystem, the robot will destroy the bucket once it is used. 
If the robot has more than 1 bucket in its equip slot, the function behaves as intended (bucket is used, filled with milk, and placed in the active or first available slot).

_**How to reproduce issue**_
Place a robot with OpenOS installed. Equip it with a bucket. Place a cow in front of robot. Call robot.use() in the lua interpreter. Bucket will be destroyed.
Alternatively, write a program either on an EEPROM or in the filesystem that calls robot.use(). Place cow in front of the robot, and start the program. Bucket will be destroyed.
Repeating either of these methods with multiple buckets in the equip slot produces expected behavior as described in issue description. 
Mode flag is not passed through to the buffer when creating the reader.
Causes binary files in `devfs` to not function as expected, since they are read as non binary files.
`/bin/sh.lua` should be able to execute a command passed as an argument, but currently fails to do so in interactive shells as `sh.execute` (in `/lib/sh.lua`) expects an environment table as the first parameter:

![image](https://user-images.githubusercontent.com/1200380/71446867-844c7600-2728-11ea-9c03-6783a0c3eb21.png)

That environment table is given when running commands in the interactive shell, but is missing from the non-interactive `sh.execute` call.

Meanwhile, `/bin/source.lua` passes an environment table as the first argument to `/bin/sh.lua` when starting the `sh` process manually.

As such, I've decided to add a simple check if the first parameter is a table. If it is, it's assumed to be the environment table and won't be passed on. Otherwise `_ENV` will be used and all arguments will be passed on.

![image](https://user-images.githubusercontent.com/1200380/71447493-2f602e00-272f-11ea-8caf-4ef1b93693ca.png)

This should maintain compatibility with any existing usages of `/bin/sh.lua` as a child process. Admittedly, I've only tested it locally by manipulating a copy of `/bin/sh.lua` after installing OpenOS onto an OC computer.

(Sidenote: I was not sure whether to remove the env table from the argument list, or whether to skip it when unpacking the arg list. I went with the second option as I thought it'd be preferred, given how returning does the same.)