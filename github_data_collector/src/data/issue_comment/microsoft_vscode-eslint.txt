- VS Code Version: 1.39.2 (Mac)
- Log file (set `"trace": true` in launch config):
- Extension Version: 2.0.14

My current workspace is a C++ project so this extension is not applicable, gray and disabled. There had been nothing wrong for long time. But these days, maybe after some upgrade, the RELOAD REQUIRED button is always shown, no matter how many times I click it to reload Code, or even restart Code.

P.S. Another extension vscode-chrome-debugger has the same [issue](https://github.com/microsoft/vscode-chrome-debug/issues/971).

![image](https://user-images.githubusercontent.com/4645959/72673151-5517f300-3aa1-11ea-9e76-d83a32736807.png)


Does ESLint has an option to include custom tags so they do not get marked as problems?

I have an extension for EJS, it embeds javascript into html much like the script tags are used for. However when placing the tags inside of script or style tags, the error console is not recognizing the tags for either javascript or css. 

Showing the issue:
![image](https://user-images.githubusercontent.com/5798012/72648720-ce9ccd80-3949-11ea-9d6c-fd06c49f41f4.png)

Problem console:
![image](https://user-images.githubusercontent.com/5798012/72648776-eaa06f00-3949-11ea-92b4-fe3878343b35.png)

I would love to be able to put some default configurations within the extension itself so that it automatically clears the problems.
@dbaeumer i did some digging into issue #605 (i was trying to reproduce it from withing tests) and i can't reproduce this issue outside vscode.

This is somehow related to how vscode interacts with typescript (not sure where is a root cause).

## Context:
This issue at first seems to be related to https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/typescript-estree/src/create-program/createWatchProgram.ts#L389-L406 and can be solved there by removing `break;` and triggering update to all directories that are registered, but this should no not needed. 

If i try to reproduce this issue in editor, i can do so by creating new vue file within src folder (ofc after any other file was already parsed)
https://github.com/armano2/typescript-eslint-1394 

But i'm unable to reproduce this issue from within tests or in other editors like Intellij Idea and atom.

Difference between vscode and other use cases is that somehow in vscode we are getting more roots that are defined in `folderWatchCallbackTrackingMap`

### folderWatchCallbackTrackingMap in tests

```
- c:\......\temp\tmp-25120kreh3kxu0pak\node_modules\@types
- c:\......\temp\tmp-25120kreh3kxu0pak
```

### folderWatchCallbackTrackingMap in vscode

```
- d:\projects\eslint-typescript-sandbox\node_modules
- d:\projects\eslint-typescript-sandbox\src
- d:\projects\eslint-typescript-sandbox\node_modules\@types
- d:\projects\eslint-typescript-sandbox
```

## Question
I understand that `vscode-eslint` is not doing anything "weird" to eslint or typescript, but do you know is there is anywhere (within vscode or vscode-eslint) code that can cause this weird behavior?

## How to reproduce
1. clone https://github.com/armano2/typescript-eslint-1394 
2. open it in vscode
3. open any file in src folder
4 create any vue file

## issue at typescript-eslint:
- https://github.com/typescript-eslint/typescript-eslint/issues/1303
When there's a notification of the sort:

> ❌ ESLint: Cannot read property 'loc' of undefined Occurred while linting ... Please see the 'ESLint' output channel for details.

It would be handy to show button <kbd>Open Output</kbd> that should open Output panel with ESLint channel selected.

P.S. I know there's already a command for that `eslint.showOutputChannel`.
@dbaeumer per #825 this PR makes the syntax for disabling comments language-specific so that when using the extension with Coffeescript source files it can generate the correct Coffeescript syntax for `eslint-disable*` comments

Fixes #825

Let me know if there's somewhere appropriate to add tests, I tested manually and saw the expected behavior for both Coffeescript and Javascript source files
Add reload command to restart the client without having to restart VS Code.

Fixes #164.
See for the details. https://github.com/microsoft/vscode-eslint/issues/417#issuecomment-565762050

PR welcome
Hi all, 

there's now on `eslint`'s (and `prettier`'s btw) ecosystem side proper support for **coffeescript** per @helixbass 's **[eslint-plugin-coffee](https://github.com/helixbass/eslint-plugin-coffee)**  and **[prettier-plugin-coffeescript](https://github.com/helixbass/prettier-plugin-coffeescript)** ongoing (great) work.

This is all good and things work out of the box mostly on `vscode-eslint` side almost fully except in one case - when an issue pops, when quickfixing it *if* one wants to disable affected line or next one (calls to [`eslint.{createDisable{,Same}LineTextEdit}`](https://github.com/microsoft/vscode-eslint/blob/master/server/src/eslintServer.ts#L1456-L1462)) the inserted comment (with hints to `eslint`) is inserted with the wrong (from coffeescript's point of view) syntax, since `vscode-eslint` has   (on  https://github.com/microsoft/vscode-eslint/blob/master/server/src/eslintServer.ts#L1456-L1462) the comment _style_ hardcoded.

So, i'd plead you to refactor that part a bit so that the comment prefix (`//` in general vs `#` for coffeescript dialects) would be infered from the actual language being linted and not just assumed unconditionally to be `//` which in coffeescript's  case is definitively not true. 

thanks in advance and keep the awesome work :-) 

All the Best

António
Refs: https://github.com/microsoft/vscode/issues/85933

As specified in https://github.com/microsoft/vscode/issues/85933 when the workspace has eslint misconfigured the eslint extension is pretty quite and not in the users face complaining. I personally like this, however due to this it is easy for the user to not be aware that eslint is misconfigured.

I suggest the following, if the user triggers ES Lint: Enable -> you currrently say "ES Lint is already enabled". If the user is triggering this action it is pobaably because es lint is not working. So in that case I would expect that at least the ES Lint output gets shown.

Similarly if I do ES Lint: Configure -> you currently say " there is already a configuration". I suggest that you could open the eslint configuration file.