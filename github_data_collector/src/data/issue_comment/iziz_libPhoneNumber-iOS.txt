A switch's case was flagged by a static analyzer we use in our code. It mentions that a break statement was not included in case for number 3 method inputDigitWithOptionToRememberPosition_:rememberPosition (around line 720) in class NBAsYouTypeFormatter. 

I think this is intentional so the execution falls-through the default case. If that is the case, I think an explicit comment in case 3 would help, specially to those who are not that familiar with the class details.

Can you please confirm if the missing "break" is intentional or there could be a bug in the code?
- If intentional, an accompanying comment would be appreciated.

![image](https://user-images.githubusercontent.com/13836740/68694685-3a744b80-053f-11ea-9ad8-82e2357ec34d.png)

The removed line is not reachable.

I run the Coverity static analyzer in our code which uses the libPhoneNumber and flagged the line as not reachable. I think it is right. All paths in the switch statement before this line end up in a "return" keyword.

A separate reported issue not covered by this Pull Request:
Actually, there was a second issue reported, I think it might be intentional, but I did not feel knowledgeable enough to modify the code. In the switch case 3, one code path ends up in a return, the other path sets self.isExpectingCountryCallingCode_  to YES, but there is not break or comment about why it is not used. I think the break was not added so it falls-trough and the code in the "default" case could be executed. Anyways, a comment around case 3 on why a break is not used would help other people reading the code.
Tested on the link for this number(0385******) series , both isValid and isPossible number returns true. But the ios library for isValidNumber returns false.
library version = libPhoneNumber-iOS (0.9.13)
I have a correct mobile number. The number is +65 8908****. But our iOS library returns NBEPhoneNumberTypeUNKNOWN. Please help solve the problem as soon as possible. Thanks my bro!
library version = libPhoneNumber-iOS (0.9.15)
As the repo doesn't have documentation, I had to guess. Please let me know if I did this incorrectly:

```
cd libPhoneNumberTests 
./metadataGenerator
cd ../libPhoneNumber
./GeneratePhoneNumberHeader.sh
```
For example 1 XXX XXX XXXX，will out put error
In Cyprus  the right country code is : 357.
but when I try to reach Cyprus country code by using libPhoneNumber-iOS library, i got 537.
Input : phoneNumber = +44(0)547533465 RegionCode: gb NBPhoneNumber *nbNumber = [[NBPhoneNumberUtil sharedInstance] parse:phoneNumber defaultRegion:countryRegionCode error:error];
 Response:  +44 547533465

Mobile numbers in Indonesia must always be dialled with all digits (typically 8-12 digits including a "0" prefixing the "8nnn" within Indonesia), no matter where they are being called from, so no hyphens are used.

above snippet is from wikipedia as it says Number can go up to 12 digits so can you update this library to do so?
Checking for CN number like 16587643628 isValidNumber returned is false