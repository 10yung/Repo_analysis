Hello,
at first thank you for bobthefish, it's superb! 

I have a little annoying issues and I don't know how to start to fix it.
Before bobthefish I used Ctrl+Right for word-by-word following in suggest, but after I've installed bobthefish, something weird is happening, when I use Ctrl+Right.

Where and how can change my Ctrl+Right behaviour back?

Thank you! 

Hey guys!
I'm facing this situation with the powerline:
![Captura de Tela_dde-desktop_20200108100352](https://user-images.githubusercontent.com/22059715/71985720-dfdb3100-3209-11ea-8330-31e9c3edf7a4.png)

How can I fix the appearance?
Hello, I am using [ranger](https://github.com/ranger/ranger) which allows you to spawn a new terminal via shortcut `S`. The terminal will have `$RANGER_LEVEL` set, and it is advantageous to see if this shell is in ranger. 

**This PR implements:** ranger prompt indicator

There is a possibility to show current `RANGER_LEVEL` in prompt setting `theme_display_ranger_level` to `yes`.

- [ ] How to handle theme and color settings?
I use the [nord color scheme](https://github.com/arcticicestudio/nord) on my machine and adapted it for this project.
This commit includes these new features:

- *A segment which displays OS type.* This is especially useful
  if constantly logging into different computers with different
  systems and you need to know if you need to type `apk`, `apt`,
  `dnf`, or `yum`, for example. Enable it by setting the
  `theme_display_currentos` variable to `yes`.
- *Padlock for SSH connection.* You may enable the padlock by
  setting the `theme_display_ssh_keylock` to `yes`. Padlock is
  shown only when accessing the terminal via a SSH session.
  The padlock is displayed _before_ the hostname.
- *Split username and hostname segments.* This enable each segment
  to be coloured with a different background. Set
  `theme_display_split_user_hostname` to `yes` to enable this
  feature.
- *Color root username differently.* When logged in as a `root`
  user, background (or the color of the username) will change
  to red. New colour has been added to the theme(s) for this
  feature.
This will add support for `nodenv` to display the current Node.js version in the prompt. I used the code from `rubyenv` section to add this functionality.

Right now it's using the `theme_display_nvm` configuration setting, I wanted to keep this PR small. I think this should be renamed to `theme_display_node` to be consistent with `theme_display_ruby`. I can add an issue/PR to update this.
Currently, if you add a new file to a subdirectory in a git repo then cd to a sibling directory, the untracked glyph will not appear. This is inconsistent with the behavior of the other git colors and flags, e.g. if you modify a file and cd into a sibling directory, the prompt will still be red and the dirty working directory glyph will still appear.

Here's an example of the current behavior:
![untracked-glyph-missing](https://user-images.githubusercontent.com/9344511/68810230-a89e3880-063b-11ea-805d-5f39fba8b9f8.png)

This PR modifies the query used to find untracked files so it searches from the repo root instead of the current directory.

Here's the same directory with these changes applied:
![untracked-glyph-fixed](https://user-images.githubusercontent.com/9344511/68810311-dedbb800-063b-11ea-9954-1d42118f0da8.png)
This is a clone of #206 with @bobthecow's comments integrated.
The fixes for #181 and #191 introduce the use of `pwd -P` to normalize
$PWD but this prevents the display of $HOME as ~ in cases where $HOME
contains a symlink.

Rather than passing normalized $PWD everywhere, this commit
proposes to improve path reoslution for git/hg root directory in the
respective functions. This commit addresses #181 but has not been
tested for #191.
On macOS, root's $HOME is '/var/root' and '/var' is a symlink to '/private/var'.

Since __bobthefish_pwd uses `pwd -P`, bobthefish's prompt does not display '~' when $PWD is '/var/root' since `pwd -P`yields '/private/var/root'.

Two possible fixes:
- use `pwd -L` instead of `pwd -P`
- use $PWD only

Let me know if you want a pull request.