Is there a way to prevent a Pagination from publishing all fields in a collection?

Apart from the hit to the database, it is not good to publish all user's sensitive information such as emails when displaying a paginated list of users.

I'm using pages to create a form, where I can select one of multiple rows. the data context of a raw (itemTemplate) at the moment is just the data from a single record from the collection I'm paginating. This is ok in general, but sometimes I need to access the data context of the parent template (templateName) . I could climb the blaze hierarchy, but this is super cumbersome and at the moment I'm using a session variable to get this information. I feel this is super hacky . Is there a way to pass the parent data context to each item, so to have an easy access to it ? 
I'm not sure why this is the case, but I'm not able to use this package with the latest coffeescript release.
simply bumping the dependency to coffeescript to @2.2.1_1 solves the problem. But I'm not sure this is the right way to go as it will make incompatible to older version of coffeescript without a real reason.

```
$ meteor update --all-packages
This project is already at Meteor 1.6.1.1, the latest release.
=> Errors while upgrading packages:           
                                              
While selecting package versions:
error: Conflict: Constraint coffeescript@1.0.5 is not satisfied by coffeescript 2.2.1_1.
Constraints on package "coffeescript":
[...]
* coffeescript@1.0.5 <- alethes:pages 1.8.6
```
Since upgrading Meteor from 1.2 to 1.6, my client filters are not working reliably.

When I change the filters, often the displayed list of items does not change.

If I run the following in the browser console then it updates correctly:

    MyPaginationObject.reload()

However if I run reload() in the code, it only works if I leave about 1 second delay:

    MyPaginationObject.set({
        filters: Meteor.my_functions.set_filter({"number_of_things":{"$lt":9,"$gt":0}})
      });
    setTimeout(function(){ 
        MyPaginationObject.reload();
      }, 1000);

Running the reload() immediately doesn't work.

I have four different pagination objects that draw from the same collection, so I am already using requestPage(1) to work around a known issue with more than about 2 paginations (#208);

    Template.my_page.onRendered(function() {
    MyPaginationObject.requestPage(1);
    });

I don't know if this is a related issue or not.

Has anybody had a similar problem and know of a solution? I'm assuming that my setup must be OK otherwise the filters wouldn't work at all.

Here's how the objects are defined:

```
this.MyPaginationObject = new Meteor.Pagination(Patterns, {
  itemTemplate: "pattern_thumbnail",
  templateName: "new_patterns",
  perPage: 12,
  availableSettings: {
    filters: true,
    sort: true
  },
  auth: function(skip, sub){
    var userSettings = this.userSettings[sub._session.id] || {};
    var userFilters = userSettings.filters || {};
    var _filters = _.extend({
      $or: [
        { private: {$ne: true} },
        { created_by: sub.userId }
      ]
    }, userFilters);

    var _options = {
      limit: 12,
      sort: { created_at: -1},
      skip: skip
    }
    
    return [_filters, _options];
  },
  filters: {}
});
```

Thanks!
Hi there,

    onRender pagination is navigated to first page every time.
- How to preserve state of pagination pages and stay on same page on page reload or page render?
- Is there any way to set current page?

When I use ongoworks/meteor-pdf (meteor add ongoworks:pdf) the paginated collection values do not get printed to PDF. Here is my code that does the printing

	Template.invoice.events({
		'submit .createInvoicePDF': function (event) {
			event.preventDefault();
		}
	});
	
	Template.invoice.onRendered(function(){
		var validator = $('.createInvoicePDF').validate({//2. remember to attach in the html a required field to all fields that are required
			submitHandler: function(event){
				Blaze.saveAsPDF(Template.invoice, {
				  filename: "Invoice.pdf", // optional, default is "document.pdf"
				  //x: 0, // optional, left starting position on resulting PDF, default is 4 units
				  //y: 0, // optional, top starting position on resulting PDF, default is 4 units
				  orientation: "landscape", // optional, "landscape" or "portrait" (default)
				  //unit: "in", // optional, unit for coordinates, one of "pt", "mm" (default), "cm", or "in"
				  //format: "letter" // optional, see Page Formats, default is "a4"
				  //elementHandlers: specialElementHandlers
				});
			}
		});
	});

Pagination works just fine but the values of the paginated collection do not get printed. I pasted the code that does the printing in case you want to try it with your own pagination. What can I do to get the values of the paginated collection to print on PDF?
Could I use this with `Vue`?
Hello, i'm not sure if this project is still alive or not but it seems this lib does not allow the Meteor sort syntax as array

i would like to do the following
`Pages.set({
  sort:  [['createdAt', 'desc'], ['name', 'asc']]
})`

but having the following error
Exception in defer callback: Error
Hi there, 

I have this in my code (two different routes, / and /category), both of them are using the same collection and templates (I just want to have different URLS for different queries over the same collection). 

The problem I am trying to solve is that when I go to the root (/, /page/:NUM) the second (category) one is called, there is no way to view only the first one. 

`this.ShowProducts = new Meteor.Pagination(Products, {
    route: "/page",
    router: "iron-router",
    routerTemplate: "ShowProducts",
    homeRoute:  ["/"],
    itemTemplate: 'IndividualListProduct',
    routerLayout: "MasterLayout",
    templateName: "ShowProducts",
    fastRender: true,
    perPage: 100,
    infinite: false,
    sort: {
        num_comments: -1
    },

});

this.Category = new Meteor.Pagination(Products, {
     router: "iron-router",
     homeRoute: ["/category/"],
     route: "/category",
    routerTemplate: "ShowProducts",
     routerLayout: "MasterLayout",
     templateName: "ShowProducts",
     perPage: 100,
     infinite: false,
 });
`
In my JavaScript code I have:

```
Tasks = new Mongo.Collection("tasks");

Tasks.attachSchema(new SimpleSchema({
  title: {
    type: String,
    label: "Title",
    max: 200
  },
  complete: {
    type: Boolean,
      defaultValue: false,
    label: " ",
      autoform: {
          type: "boolean-checkbox"
      }
  },
  dueDate: {
    type: Date,
    label: "Due Date",
    optional: true,
      autoform: {
        type: "pickadate"
    }
  }
}));

Pages = new Meteor.Pagination(Tasks, {
  templateName: "tasksPaginated"
})
```

In my html, I have:

```
<template name="TaskList">
    Before
    {{> tasksPaginated}}
    After
</template>

    <template name="tasksPaginated">
        {{> pages}}
        {{> pagesNav}}  Bottom navigation
    </template>
```

When I try to browse to the page, I get the following error:

> Exception in delivering result of invoking 'pages_tasks/CountPages': Error at Connection._livedata_result (http://localhost:3000/packages/ddp-client.js?hash=bc32a166cd269e06a394f9418e0024d805bab379:4736:23) at onMessage (http://localhost:3000/packages/ddp-client.js?hash=bc32a166cd269e06a394f9418e0024d805bab379:3385:12) at http://localhost:3000/packages/ddp-client.js?hash=bc32a166cd269e06a394f9418e0024d805bab379:2736:11 at Array.forEach (native) at Function..each..forEach (http://localhost:3000/packages/underscore.js?hash=cde485f60699ff9aced3305f70189e39c665183c:149:11) at SockJS.self.socket.onmessage (http://localhost:3000/packages/ddp-client.js?hash=bc32a166cd269e06a394f9418e0024d805bab379:2735:11) at SockJS.REventTarget.dispatchEvent (http://localhost:3000/packages/ddp-client.js?hash=bc32a166cd269e06a394f9418e0024d805bab379:175:22) at SockJS._dispatchMessage (http://localhost:3000/packages/ddp-client.js?hash=bc32a166cd269e06a394f9418e0024d805bab379:1160:10) at SockJS._didMessage (http://localhost:3000/packages/ddp-client.js?hash=bc32a166cd269e06a394f9418e0024d805bab379:1218:18) at WebSocket.that.ws.onmessage (http://localhost:3000/packages/ddp-client.js?hash=bc32a166cd269e06a394f9418e0024d805bab379:1365:17)
> Any ideas what I could be doing wrong?