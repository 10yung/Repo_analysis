I have a problem with {html options} with multiple select.
When I pass one argument to be selected (as variable) - it works, but when I pass array which prints_r:

`Array ( [0] => 3 [1] => 4 ) `

Selection doesn't work. How to make it work?
Recently updated to PHP7.3 and Smarty 3.1.34 and noticed that {foreachelse} is not executed when the data count is 0.

I think this is because $needTotal parameter in smarty_internal_runtime_foreach.php:44 is false and $total will always be 1 so function will not return null if total items in array/Iterator is 0.

smarty_internal_runtime_foreach.php

 if (!isset($total)) {
            $total = empty($from) ? 0 : ($needTotal ? count($from) : 1);
        }
   ......
        if ($total === 0) {
            $from = null; //should return 0 if {foreachelse} is used
        } else {

To fix this smarty_internal_compile_foreach.php:190 should check if total is needed and/or foreachelse tag is present. I have added "|| true" so it will always do a count() on the supplied array. Not best fix but I don't know how to check if a {foreachelse} tag is present.

smarty_internal_compile_foreach.php:190
`        $needTotal = isset($itemAttr[ 'total' ]) || true; //check if {foreachelse} tag is present instead of || true ...
`

php7.4:
join(): Passing glue string after array is deprecated. Swap the parameters.
Hi,

I updated to V3.1.33 today but I get error of undefined property Smarty::$smarty at line 176 when reading a configvariable that doesn't exist.

Changed line 176:
        if ( $data->smarty->error_unassigned && $errorEnable) {
to:
        if (isset($data->smarty) && $data->smarty!=null &&  $data->smarty->error_unassigned && $errorEnable) {
Hello,

I would like to know the equivalent of the `Smarty::_smarty_include` method, which is present in version 2, but no more in version 3, maybe` Smarty_Internal_Resource_File`?

Thank you
Hey there dear Smarty team.

by accident i found out that your in your current dev version date format sets the varriable and not just format it. So if you would dateformat it a second time you will get an error. Is it a bugg or a feature?

best regards F.S
If there is any "?>" in the template file, smarty is removing the end of line after the closing tag, even when isn't their own. i.e:
```
<?xml version="1.0" encoding="UTF-8"?>
<root>
<child></child>
</root>
```
is changed to:
```
<?xml version="1.0" encoding="UTF-8"?><root>
<child></child>
</root>
```
Hi,

We upgraded from Smarty 3.1.21 to 3.1.33

Apparently, if you have a php variable defined as follows :

`define("myvar", "My var value");`

It can be accessed in the template as `{myvar}`

Can we stop this behavior ? 

In our app we have a php constant defined named "assign" which breaks the smarty template when the assign tag is used.

There should be a way to not directly "see" these keywords as constants since anyone can break smarty by defining a php variable having the same smarty tag name. And btw the generated exception doesn't say much, it was hard to find.

Thanks !
I see that Smarty hasn't had any updates in 2019, is it dead?

If yes, then maybe someone could post an alternative php templating engine, so we can start migrating.

Thank you.

The Smarty code
```
{foreach [1] as $i}$i => {$i}{/foreach}
```

compiles into

```php
<?php
$_from = $_smarty_tpl->smarty->ext->_foreach->init($_smarty_tpl, array(1), 'i');
if ($_from !== null) {
foreach ($_from as $_smarty_tpl->tpl_vars['i']->value) {
?>$i => <?php echo $_smarty_tpl->tpl_vars['i']->value;
ob_start();
}
}
$_smarty_tpl->smarty->ext->_foreach->restore($_smarty_tpl, 1);
$_prefixVariable1 = ob_get_clean();
echo $_prefixVariable1;?>
```

Which has a very obvious issue of creating uncontrollable amount of output buffers.