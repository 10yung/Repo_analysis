
This is tangentially related to #184 (I'm using a nearly identical example for how I'd like to be able to print).

Sometimes, I will know the specific page(s) of interest that I want to print by the value of the faceting variable(s).  It would be helpful to have the ability to index to a specific page by name as in the following example.  I acknowledge that it gets more complicated when there is more than one facet level, and for that, I assume that it will depend on the internal structure of how the pages are stored, but perhaps a vector of names like the second example would be reasonable.

# Example 1

``` r
library(ggplot2)
library(ggforce)
p <-
  ggplot(diamonds, aes(x=carat, y=price)) +
  geom_hex() +
  facet_wrap_paginate(facets="color", nrow=1, ncol=1)

p + facet_wrap_paginate(page="D")
#> Error in facet_wrap(facets, nrow = nrow, ncol = ncol, scales = scales, : argument "facets" is missing, with no default
```

<sup>Created on 2019-12-02 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

# Example 2

``` r
library(ggplot2)
library(ggforce)
p <-
  ggplot(diamonds, aes(x=carat, y=price)) +
  geom_hex() +
  facet_wrap_paginate(facets=c("color", "clarity"), nrow=1, ncol=1)

p + facet_wrap_paginate(page=c("D", "I1"))
#> Error in facet_wrap(facets, nrow = nrow, ncol = ncol, scales = scales, : argument "facets" is missing, with no default
```

<sup>Created on 2019-12-02 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

I am trying to produce a ggplot2 graphic in which there is a single conditioning variable with a large number of levels (24).

If I use facet_grid() I get a plot with either 24 rows or 24 columns,
both of which look like hell.

I thought that facet_grid_paginate() would rescue me, but it doesn't seem to.  I asked for 3 rows and 4 columns, and thought that I would get two 3 x 4 pages  Instead I get six pages with only one row (of four facets) per page.

Am I misunderstanding something?  Making some silly syntactical error?  Or is this a bug?

I have attached a reproducible example, along with the data set on which it depends.

Grateful for any insight.

P.S.  Someone suggested to me that I could use facet_wrap() from ggplot2 instead. I got this to work for the example in question, but it requires manually subsetting the data so as to get one page at a time.  It's not clear to me how to do this in the general context in which I need to implement this procedure.  I'm hoping that facet_grid_paginate() will handle this for me automagically.

[reprex.txt](https://github.com/thomasp85/ggforce/files/3908762/reprex.txt)
[egDat.txt](https://github.com/thomasp85/ggforce/files/3908764/egDat.txt)

This closes #174. I'm not sure if this is the best approach, but as far as I understand, ggplot always removes NA values, the only difference is whether there is a user-visible warning or not (controlled by the na.rm parameter). Since the warning is produced in compute_layer() in the Stat base class, it should not be affected by this change.
Iâ€™m trying to paginate a `facet_wrap()` plot with `dir = "v"`, such as this:

``` r
library(ggplot2)
library(ggforce)

d <- data.frame(g = rep(1:6, 5), x = runif(6 * 5), y = rnorm(6 * 5))

p <- ggplot(d, aes(x, y)) + geom_point()
p + facet_wrap(vars(g), dir = "v", ncol = 3)
```

![](https://i.imgur.com/NayAIca.png)

Translating this to paginate by row with `facet_wrap_paginate()`, the results are strange. Page 1 gives a malformed result, and page 2 just errors out:

``` r
p + facet_wrap_paginate(vars(g), dir = "v", ncol = 3, nrow = 1, page = 1)
```

![](https://i.imgur.com/C3b4L00.png)

``` r
p + facet_wrap_paginate(vars(g), dir = "v", ncol = 3, nrow = 1, page = 2)
#> Warning in min(layout$ROW): no non-missing arguments to min; returning Inf
#> Warning in max(layout$COL): no non-missing arguments to max; returning -Inf
#> Warning in max(layout$ROW): no non-missing arguments to max; returning -Inf
#> Warning in matrix(list(zeroGrob()), nrow = nrow, ncol = ncol): NAs
#> introduced by coercion to integer range
#> Error in matrix(list(zeroGrob()), nrow = nrow, ncol = ncol): invalid 'nrow' value (too large or NA)
```

![](https://i.imgur.com/pT26Sp6.png)

Above, I would expect to see two 1x3 plots with panels (1, 3, 5) in the first plot, and panels (2, 4, 6) in the second one.

Swapping to by column does not really seem to improve the situation. Here, I would expect to get three 2x1 plots with panels (1, 2), then (3, 4), and finally (5, 6):

``` r
p + facet_wrap_paginate(vars(g), dir = "v", ncol = 1, nrow = 2, page = 1)
```

![](https://i.imgur.com/3xZbPtz.png)

``` r
p + facet_wrap_paginate(vars(g), dir = "v", ncol = 1, nrow = 2, page = 2)
```

![](https://i.imgur.com/7a6zOd3.png)

``` r
p + facet_wrap_paginate(vars(g), dir = "v", ncol = 1, nrow = 2, page = 3)
#> Warning in min(layout$ROW): no non-missing arguments to min; returning Inf
#> Warning in max(layout$COL): no non-missing arguments to max; returning -Inf
#> Warning in max(layout$ROW): no non-missing arguments to max; returning -Inf
#> Warning in matrix(list(zeroGrob()), nrow = nrow, ncol = ncol): NAs
#> introduced by coercion to integer range
#> Error in matrix(list(zeroGrob()), nrow = nrow, ncol = ncol): invalid 'nrow' value (too large or NA)
```

![](https://i.imgur.com/eaVaD5k.png)

`stat_delvor_summary()` is hitting an error due to a recursive default argument:

``` r
library(ggforce)
#> Loading required package: ggplot2
ggplot(iris, aes(Sepal.Length, Sepal.Width, group = -1L)) +
  stat_delvor_summary()
#> Error in layer(data = data, mapping = mapping, stat = StatDelvorSummary, : promise already under evaluation: recursive default argument reference or earlier problems?
```

<sup>Created on 2019-10-26 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

The offending argument is `asp.ratio`. This PR sets `asp.ratio` to `1` as default (as is the case in other voronoi/delaunay funcs in the pkg).
Hi,

I have an issue with combining ggmap with facet_zoom, it's not zooming...

`library(osmdata)
library(ggmap)
library(ggforce)`

`ba_bb <- getbb(place_name = "Bratislava")`
 `map_of_ba <- get_map(location = ba_bb, source = 'osm')`

 `ggmap(map_of_ba) +
   facet_zoom(xlim = c(17.07213,17.13245),
              ylim = c(48.13586, 48.17451),
              horizontal = FALSE, zoom.size = 0.5
   )`

![plot_zoom_png](https://user-images.githubusercontent.com/8727028/67580747-2363ea00-f747-11e9-9306-08843aa6fc0d.png)

Found this out when trying to use `facet_zoom` on what I thought was a very simple table. `facet_zoom` doesn't appear to ignore grouping on the input data, which causes it to throw an error that seems to be from `cbind_all`. This can easily be worked around by ungrouping, but often happens when I create new variables in a pipe before piping to `ggplot` and feels unintuitive since usually `ggplot2` ignores grouping. Using the readme example, to show it works fine without grouping:

``` r
library(dplyr)
library(ggforce)
#> Loading required package: ggplot2
iris %>%
  group_by(Species) %>% # mutate(x = Sepal.Length / sum(Sepal.Length))
  ggplot(aes(Petal.Length, Petal.Width, colour = Species)) +
  geom_point() +
  facet_zoom(x = Species == "setosa")
#> Error: Argument 2 must be length 150, not 1

iris %>%
  ggplot(aes(Petal.Length, Petal.Width, colour = Species)) +
  geom_point() +
  facet_zoom(x = Species == "setosa")
```

![](https://i.imgur.com/ff7S96w.png)

I get `Error in if (any(negative)) { : missing value where TRUE/FALSE needed`  error with NA values, na.rm=TRUE and geom_autohistogram and/or geom_autodensity.  Here is an example:

```
ds <- mpg
ds$displ[1] <- NA
ggplot(ds) +
    geom_bin2d(aes(x = .panel_x, y = .panel_y), na.rm=TRUE) +
    geom_autodensity(aes(x=.panel_x), na.rm=TRUE)+ 
    facet_matrix(vars(displ, cty, hwy), layer.lower = 1, layer.diag = 2, layer.upper=1)
```

Package ggforce version 0.3.1.9000
R version: R version 3.5.2 (2018-12-20) -- "Eggshell Igloo" (Microsoft R Open 3.5.2)
