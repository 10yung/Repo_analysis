Hey there, thanks a lot for the [article](https://www.freecodecamp.org/news/how-to-get-https-working-on-your-local-development-environment-in-5-minutes-7af615770eec/) and the lib!

The generated certificate isn't trusted by iOS 13 simulators due to Apple new requirements: https://support.apple.com/en-us/HT210176
Hi there I just came from reading:
https://www.freecodecamp.org/news/how-to-get-https-working-on-your-local-development-environment-in-5-minutes-7af615770eec/

And I could follow through, but I have a much simpler setup and I don't want to run a node app. I simply have an html file and I run https://www.npmjs.com/package/serve

to serve it.
Is there a way to include an ssl certificate with such a simple setup?

Also - the reason why I am doing this, is because I want to access a mobile devices `deviceorientation`. Unfortunately you have to run on https to get some values...
In my case I call my `localhost` server via the IP in the network, like:
http://192.168.1.11:5000

Of course this should be https.
Even if I got to run your way of having a valid certificate for localhost, would that also be valid for http://192.168.1.11:5000?

Thanks for some clarification. Sorry, I am really not at home with the whole certificate stuff, I just want to run a simple server to execute the most simple javascript... Hach, how darn complicated has the web world become ðŸ˜…....
fix problem with never ending openssl terminal session (infinite loop) when using with mingw
add example server and generated root and selfsigned certificate
Thanks for creating this, I am trying to get this to work on my Linux Ubuntu machine and this step just doesn't have quite enough details that I need:

>Linux: Depending on your Linux distribution, you can use trust, update-ca-certificates or another command to mark the generated root certificate as trusted.

I would type `trust.... what?`    
`trust Local Certificate` and `trust rootCA.pem` do not work. 

or `update-ca-certificates... what?`   just `update-ca-certificates` doesn't seem to solve it either.

Any help appreciated!
I followed all the steps in your README but the generated certificate does not work.

![image](https://user-images.githubusercontent.com/14946081/47525410-081f7f80-d852-11e8-88f4-cdba28fad9b1.png)


[README.md](https://github.com/dakshshah96/local-cert-generator/blob/master/README.md) steps 1-2 works fine on Windows (will create rootCA.key and rootCA.pem).
Step 3 is related only for OS X.

> 3. Trust this certificate after importing it to your System keychain

Windows doesn't have System keychain.
And step 4 fails:

```
> sh createSelfSigned.sh
createSelfSigned.sh: cannot make pipe for process substitution: Function not implemented
req: Option -config needs a value
req: Use -help for summary.
x509: Cannot open input file server.csr, No such file or directory
x509: Use -help for summary.
```