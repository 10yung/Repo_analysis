### What You Are Seeing?

At the bottom of boxstarter.org, it says it's (c) 2018 Chocolatey Software Inc.

### What is Expected?

(c) 2018-2019 Chocolatey Software Inc.

### How Did You Get This To Happen? (Steps to Reproduce)

Visit https://boxstarter.org and scroll down.

this should fix GH-405
Update the CONTRIBUTING.md with style guidelines and coding standards:

* PowerShell functions
* No aliases
* Code readability
* Full parameter names
* No positional parameters
* Advanced functions


### What You Are Seeing?
PS C:\Users\admin\Desktop\BOXSTARTER\Boxstarter.2.12.0> {Invoke-WebRequest -useb http://boxstarter.org/bootstrapper.ps1} | Invoke-Expression; Get-Boxstarter -Force


StatusCode        : 200
StatusDescription : OK
Content           : function Get-Boxstarter {
                        Param(
                            [string] $Version = "2.12.0",
                            [switch] $Force
                        )
                        if(!(Test-Admin)) {
                            $bootstrapperFile = ${function:Get-Boxstarter}.File
                        ...
RawContent        : HTTP/1.1 200 OK
                    Transfer-Encoding: chunked
                    Connection: keep-alive
                    Vary: Accept-Encoding
                    Content-Type: text/plain
                    Date: Wed, 02 Oct 2019 12:36:15 GMT
                    ETag: W/"8bacbd86670d41:0"
                    Last-Modified: Tu...
Forms             :
Headers           : {[Transfer-Encoding, chunked], [Connection, keep-alive], [Vary, Accept-Encoding], [Content-Type, text/plain]...}
Images            : {}
InputFields       : {}
Links             : {}
ParsedHtml        :
RawContentLength  : 5811

Welcome to the Boxstarter Module installer!
Chocolatey installed, Installing Boxstarter Modules.
Chocolatey v0.10.15
Installing the following packages:
Boxstarter
By installing you accept licenses for the packages.
Boxstarter not installed. An error occurred during installation:
 The underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel.
Boxstarter package files install completed. Performing other installation steps.
The install of Boxstarter was NOT successful.
Boxstarter not installed. An error occurred during installation:
 The underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel.

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - Boxstarter (exited 1) - Boxstarter not installed. An error occurred during installation:
 The underlying connection was closed: Could not establish trust relationship for the SSL/TLS secure channel.
Import-Module : The specified module 'C:\ProgramData\boxstarter\boxstarter.chocolatey\boxstarter.chocolatey.psd1' was not loaded because no
valid module file was found in any module directory.
At C:\Users\admin\Desktop\BOXSTARTER\Boxstarter.2.12.0\bootstrapper.ps1:41 char:9
+         Import-Module "$env:ProgramData\boxstarter\boxstarter.chocola ...
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ResourceUnavailable: (C:\ProgramData\...chocolatey.psd1:String) [Import-Module], FileNotFoundException
    + FullyQualifiedErrorId : Modules_ModuleNotFound,Microsoft.PowerShell.Commands.ImportModuleCommand

Boxstarter Module Installer completed


PS C:\Users\admin\Desktop\BOXSTARTER\Boxstarter.2.12.0>
### What is Expected?

To install boxstarter successfully

### How Did You Get This To Happen? (Steps to Reproduce)
Install windows pro 10
Went through the instructions to install boxstarter

Error while installing
### Output Log

### What You Are Seeing?
Failure to parse Chocolatey parameter

### What is Expected?
Correctly parsing Chocolatey parameter

### How Did You Get This To Happen? (Steps to Reproduce)
boxstarter script.ps1

where script.ps1 only contains

`choco install -y cmake --installargs "ADD_CMAKE_TO_PATH=System"`

However, 
`choco install -y cmake --installargs="ADD_CMAKE_TO_PATH=System"` works fine, which makes me think it's simply a parsing issue.


### Output Log
<!--
When including the log information, please ensure you have run the command with --debug --verbose. It provides important information for determining an issue

- Make sure there is no sensitive data shared.
- We need ALL output, not just what you may believe is relevant.
- We need ALL OUTPUT (including the configuration information)
-->


<details>
<summary>Full Log Output</summary>

<p>

~~~sh
Boxstarter starting Calling Chocolatey to install --installargs. This may take several minutes to complete...
Boxstarter starting Calling Chocolatey to install --installargs. This may take several minutes to complete...
Installing the following packages:
cmake;ADD_CMAKE_TO_PATH=System
By installing you accept licenses for the packages.
cmake v3.15.2 already installed.
Use --force to reinstall, specify a version to install, or try upgrade.
ADD_CMAKE_TO_PATH=System not installed. The package was not found with the source(s) listed.
If you specified a particular version and are receiving this message, it is possible that the package name exists but the version does not.
Version: ""
Source(s): "https://chocolatey.org/api/v2/"
~~~

</p>

</details>
this should fix GH-265
Install-Boxstarter will expand all variables in your PATH and PSModulePath, and then write back the expanded values, overwriting any unexpanded variables that existed in PATH/PSModulePath prior to Install-Boxstarter being called.

This is a very similar issue to https://github.com/chocolatey/choco/issues/303 (plus the patch in https://github.com/chocolatey/choco/issues/699)

before installing boxstarter:
```
PS C:\> (get-item 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment').GetValue('Path','','DoNotExpandEnvironmentNames')
%SystemRoot%\system32;%SystemRoot%;%SystemRoot%\System32\Wbem;%SYSTEMROOT%\System32\WindowsPowerShell\v1.0\;%SYSTEMROOT%\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;
PS C:\> (get-item 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment').GetValue('PSModulePath','','DoNotExpandEnvironmentNames')
%ProgramFiles%\WindowsPowerShell\Modules;%SystemRoot%\system32\WindowsPowerShell\v1.0\Modules
```
after installing boxstarter (using: choco install -y boxstarter --params "nodesktopicon"):
```
PS C:\> (get-item 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment').GetValue('Path','','DoNotExpandEnvironmentNames')
C:\ProgramData\Boxstarter;C:\Windows\system32;C:\Windows;C:\Windows\System32\Wbem;C:\Windows\System32\WindowsPowerShell\v1.0\;C:\Windows\System32\OpenSSH\;C:\ProgramData\chocolatey\bin;
PS C:\> (get-item 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\Environment').GetValue('PSModulePath','','DoNotExpandEnvironmentNames')
C:\ProgramData\Boxstarter;C:\Program Files\WindowsPowerShell\Modules;C:\Windows\system32\WindowsPowerShell\v1.0\Modules
```

I'm not in a position to fully test this myself (I have at least tested it on a fresh install of windows 10 1903), but I think this will address the issue:
```powershell
function PersistBoxStarterPathToEnvironmentVariable($variableName, $boxstarterPath) {
    # Remove user scoped vars from previous releases
    $keyUser = (get-item 'HKCU:\').OpenSubKey('Environment', $true)
    $oldval = $keyUser.GetValue($variableName,'','DoNotExpandEnvironmentNames')
    if ($oldval) {
        $tmp = ($oldval.Split(';', [StringSplitOptions]::RemoveEmptyEntries) | Where-Object { !($_.ToLower() -match "\\boxstarter$")})
        $newval = $tmp -join ';'
    }
    elseif($variableName -eq "PSModulePath") {
        $newval = [environment]::getfolderpath("mydocuments")
        $newval +="\WindowsPowerShell\Modules"
    }
    $keyUser.SetValue($variableName,$newval,[Microsoft.Win32.RegistryValueKind]::ExpandString)

    $keyMachine = (get-item 'HKLM:\SYSTEM\CurrentControlSet\Control\Session Manager\').OpenSubKey('Environment', $true)
    $oldval = $keyMachine.GetValue($variableName,'','DoNotExpandEnvironmentNames')
    if ($oldval) {
        $tmp = ($oldval.Split(';', [StringSplitOptions]::RemoveEmptyEntries) | Where-Object { !($_.ToLower() -match "\\boxstarter$")})
        $tmp += $boxstarterPath
        $newval = $tmp -join ';'
    }
    elseif($variableName -eq "PSModulePath") {
        $newval = "$boxstarterPath;"
        $newval += "%ProgramFiles%\WindowsPowerShell\Modules"
    }
    else {
        $newval ="$boxstarterPath"
    }
    $keyMachine.SetValue($variableName,$newval,[Microsoft.Win32.RegistryValueKind]::ExpandString)

    $varValue = Get-Content env:\$variableName
    $varValue = "$boxstarterPath;$varValue"
    Set-Content env:\$variableName -value $varValue
}
```
2 notes:
1. The above code adds $boxstarterPath to the end of an existing path.  I don't know if that is important or not
2.  Question: if PSModulePath does not exist for the user (it doesn't on my fresh 1903 install), is there a reason to add [environment]::getfolderpath("mydocuments")+"\WindowsPowerShell\Modules"  ?
It should be possible to tell Boxstarter to `stop` after it fails to install a Chocolatey package.

This aims to replace GH-296

See discussion at GH-382
### What You Are Seeing?
Invoke-ChocolateyBoxstarter doesn't provide any information if something failed along the way.

### What is Expected?
(in case of 'no-reboots-required') either `$lastexitcode` or a `try{ .. } catch { ...}` should be sufficient to check if something went wrong.

### How Did You Get This To Happen? (Steps to Reproduce)
using `Boxstarter.bat`
```
C:\myboxstarter\Boxstarter.bat pkg_does_not_exist
echo %errorlevel%
```

I'd suggest something like
```
if($chocoErrors -gt 0){
    $lastexitcode = $chocoErrors
    throw "got $chocoErrors Chocolatey errors"
}
```
[here](https://github.com/chocolatey/boxstarter/blob/bb3776a98318b14c9c7737b556a60f7949a9a86d/Boxstarter.Chocolatey/Chocolatey.ps1#L197), right after the `foreach($packageName in $packageNames){ ... }`
Adds support for setting the options for multiple displays in Windows 10.