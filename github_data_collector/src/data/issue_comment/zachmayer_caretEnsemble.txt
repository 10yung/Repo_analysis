#### Code:

```
> getS3method('print', 'caretStack')
function (x, ...) 
{
    n <- length(x$models)
    cat(paste("A", x$ens_model$method, "ensemble of 2 base models:", 
        paste(sapply(x$models, function(x) x$method), collapse = ", ")))
    cat("\n\nEnsemble results:\n")
    print(x$ens_model)
}
<bytecode: 0x7feea7772bc8>
<environment: namespace:caretEnsemble>
```

#### Minimal dataset:
```{R}
set.seed(1)
dat <- caret::twoClassSim(100)
X <- dat[,1:5]
y <- dat[["Class"]]
```
#### Minimal, runnable code:
```{R}
library(caretEnsemble)
models <- caretList(
  X, y, 
  methodList=c('glm', 'rpart', 'nnet'),
  trControl=trainControl(
    method="cv", 
    number=5,
    classProbs=TRUE, 
    savePredictions="final")
)
ens <- caretStack(models)
print(ens)
```
It's broke
Lots of testthat tests have warnings— need to fix them
Once https://github.com/zachmayer/caretEnsemble/pull/247 merges I need to make a 2.0.1 tag.
I tried to create an ensemble model using the “CaretEnsemble” package. I wrote the following code
 
models2 <- caretList(
  log_sales~., data=train.data.final,
  trControl=trnCtrl,
  
  tuneList=list(
    rf=caretModelSpec(method="rf", tuneGrid=expand.grid(.mtry=c(1:8)) ),  
    nn=caretModelSpec(method="nnet", tuneGrid=expand.grid(.decay = c(0,0.001, 0.01, 0.1, 0.5), .size = c(5:10)), preProcess=c("center", "scale"), 
                      linout=TRUE, trace=FALSE, maxit = 1000),
    gbm=caretModelSpec(method="gbm", tuneGrid=expand.grid(interaction.depth = seq(1, 7, by = 2),
                                                          n.trees = seq(100, 1000, by = 50),
                                                          shrinkage = c(0.01, 0.1), n.minobsinnode = 10) ),
    xgb=caretModelSpec(method="xgbTree", tuneGrid=expand.grid(nrounds = 1000,
                                                              eta = c(0.01,0.05, 0.07, 0.1),
                                                              max_depth = c(4:14),
                                                              gamma=0,
                                                              colsample_bytree = c(0.75),
                                                              subsample = c(0.50),
                                                              min_child_weight =0 ) )
  )
)
 
stack.glm <- caretStack(models2, method="glm",  trControl=trnCtrl)
 
 
Which runs totally fine but when I try to use the stacked model to predict new data I get the following error:
 
pred <- predict(stack.glm, newdata = testing)
**Error in eval(predvars, data, env) : object 'nn' not found**
 
When I run “stack.glm$models$nn” I get the results for neural network but I am not sure if object “nn” in the error message refers to same thing.

The issue [https://github.com/zachmayer/caretEnsemble/issues/187](https://github.com/zachmayer/caretEnsemble/issues/187) is not fixed for xgboost.

The following R code fails with  Error in eval(predvars, data, env) : object 'xgb' not found
It works if the model is named "xgbTree" instead of  "xgb"

``
require(data.table)
require(caret)
require(caretEnsemble)
data(iris)
iris <- data.table(iris)
iris[, Species := factor(ifelse(Species == "setosa", "SETOSA", sample(c("SETOSA", "OTHERS"), 200, replace = T)))]

set.seed(42)
trainIndex <- createDataPartition(iris$Species, p = .8, list=F)

train <- iris[trainIndex]
test <- iris[-trainIndex]

my_control <- trainControl(
    method="cv",
    number=3,
    index=createResample(train$Species, 3),
    savePredictions="final",
    classProbs=TRUE,
    summaryFunction=twoClassSummary
)

xgb_grid = expand.grid(
    nrounds = 10,
    eta = c(0.1),
    max_depth = c( 2),
    gamma = 1,
    colsample_bytree =0.655, 
    min_child_weight = 1, 
    subsample = 1
)


model_list <- caretList(
    Species~.,
    data=train,
    trControl=my_control,
    metric="ROC",
    tuneList=list(
        xgb=caretModelSpec(method="xgbTree",
                              tuneGrid=xgb_grid),
        rf=caretModelSpec(method="rf",
                          tuneGrid= expand.grid(.mtry = c(round(sqrt(ncol(train))))))
    )
)

greedy_ensemble <- caretEnsemble(
    model_list,
    metric="ROC",
    trControl=trainControl(
        number=2,
        summaryFunction=twoClassSummary,
        classProbs=TRUE
    ))
summary(greedy_ensemble)

predict(greedy_ensemble, newdata=test, type="prob")
`` 



Hi, I am having hard time to interpret the weights of glm and rpart,
what are the models' weights for glm and rpart?
many thanks in advance,,,

greedy_ensemble <- caretEnsemble(
  model_list, 
  metric="ROC",
  trControl=trainControl(
    number=2,
    summaryFunction=twoClassSummary,
    classProbs=TRUE
    ))
summary(greedy_ensemble)
 **The following models were ensembled: glm, rpart**
They were weighted: 
 **1.4489 -0.9559 -2.0442**
 The resulting ROC is: 0.7573
The fit for each individual model on the ROC is: 
 method       ROC      ROCSD
    glm 0.6829333 0.05890797
   rpart 0.7206765 0.06849524
`ensemble <- caretEnsemble(mods,
                               metric = 'ROC',
                           trControl = trainControl(
                             method = 'cv',
                             number = 5,
                 savePredictions = 'final',
                         classProbs = TRUE,
             summaryFunction = twoClassSummary

                      )
      )`

As of [this commit](https://github.com/topepo/caret/commit/2376e9c1f050f6890db4f404cf911396acda510c#diff-1449d2d3f2b64bdc5fbe953bc6196e11) on the `master` branch of the `caret` package, the `predict.train` function is no longer exported causing the following error to be thrown from `predict.caretList`:
```{R}
Error: 'predict.train' is not an exported object from 'namespace:caret'
```

### Minimal, reproducible example:
#### Minimal dataset:
```{R}
set.seed(1)
dat <- caret::twoClassSim(100)
X <- dat[,1:5]
y <- dat[["Class"]]
```
#### Minimal, runnable code:
```{R}
library(caretEnsemble)
models <- caretList(
  X, y, 
  methodList=c('glm', 'rpart'),
  trControl=trainControl(
    method="cv", 
    number=5,
    classProbs=TRUE, 
    savePredictions="final")
)
predict(models, newdata = X)
```

### Session Info:
```{R}
>sessionInfo()
R version 3.4.3 (2017-11-30)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows >= 8 x64 (build 9200)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                           LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] caretEnsemble_2.0.0  caret_6.0-79         ggplot2_2.2.1.9000   lattice_0.20-35      RevoUtils_10.0.7     RevoUtilsMath_10.0.1

loaded via a namespace (and not attached):
 [1] tidyselect_0.2.3    pbapply_1.3-3       purrr_0.2.4         reshape2_1.4.3      kernlab_0.9-25      splines_3.4.3       colorspace_1.3-2   
 [8] stats4_3.4.3        yaml_2.1.16         survival_2.41-3     prodlim_1.6.1       rlang_0.2.0.9000    e1071_1.6-8         ModelMetrics_1.1.0 
[15] pillar_1.0.1        withr_2.1.1.9000    foreign_0.8-69      glue_1.2.0          bindrcpp_0.2        foreach_1.4.5       bindr_0.1          
[22] plyr_1.8.4          dimRed_0.1.0        lava_1.5.1          robustbase_0.92-8   stringr_1.2.0       timeDate_3042.101   munsell_0.4.3      
[29] gtable_0.2.0        recipes_0.1.1       codetools_0.2-15    psych_1.7.8         parallel_3.4.3      class_7.3-14        DEoptimR_1.0-8     
[36] broom_0.4.3         Rcpp_0.12.14        scales_0.5.0.9000   ipred_0.9-6         CVST_0.2-1          gridExtra_2.3       mnormt_1.5-5       
[43] digest_0.6.13       stringi_1.1.6       dplyr_0.7.4         RcppRoll_0.2.2      ddalpha_1.3.1       grid_3.4.3          tools_3.4.3        
[50] magrittr_1.5        lazyeval_0.2.1      tibble_1.4.1        randomForest_4.6-12 tidyr_0.7.2         DRR_0.0.2           pkgconfig_2.0.1    
[57] MASS_7.3-48         Matrix_1.2-12       data.table_1.10.4-3 lubridate_1.7.1     gower_0.1.2         assertthat_0.2.0    iterators_1.0.9    
[64] R6_2.2.2            rpart_4.1-11        sfsmisc_1.1-1       nnet_7.3-12         nlme_3.1-131        compiler_3.4.3 
```

In the following example I create a simple custom caret model so that  I can view the x, y and wts values being sent to the model.  The easiest thing is to add browser() inside of the custom model, but I am using print statements instead that illustrate what problems it can cause.  

In the example below my weights are ascending going from 0 to 1 in steps of 0.01.  In theory this should have a random effect on the prediction.  But because the y get sorted prior to being passed to the model, but the wts don't, the wts no longer align to the x and y rows, and even more pernicious, in the case below they cause the larger y values to be weighted higher, causing a strong distortion of the apparent weighted mean value of the series.

### Minimal, reproducible example:

#### Minimal dataset:
```{R}
set.seed(1)

df <- data.frame(x = rnorm(100), w = seq(0.01, 1, length.out = 100))
df$y <- df$x * 0.1 + rnorm(100) * 0.9

head(df)
tail(df)
```


#### Minimal, runnable code:
```{R}
library(caret)
library(caretEnsemble)

# Mean Custom Caret Method
CaretMean <- list (
  library = c("dplyr"),
  type = "Regression",
  parameters = data.frame(parameter = c("None"),
                          class = c("character"),
                          label = c("None")),
  grid = function(x, y, len = NULL, search = "grid") { data.frame( None = "" ) },
  fit = function(x, y, wts, param, lev, last, weights = NA, classProbs = NA, ...) {
    RetVal <- list()
    if (is.null(wts))
      wts <- rep(1, length(y))
    # Both x and y are being resorted such that y is in ascending order, however wts is not reordered.  
    # So the weight no longer corresponds to the correct x and y values, and can cause pernicious problems 
    # such as in this example the weights are also increasing meaning that the weighted mean y value is much 
    # higher than the unweighted mean
    print(sprintf("Unweighted Mean y: %0.2f", mean(y)))
    print(sprintf("Weighted Mean y: %0.2f", sum(y * wts) / sum(wts)))
    # browser()
    class(RetVal) <- "CaretMean"
    return(RetVal)
  },
  predict = function(modelFit, newdata, preProc = NULL, submodels = NULL) {
    sapply(1:nrow(newdata), function(R) mean(newdata[R, ]))
  },
  prob = NULL,
  tags = c("Simple"),
  label = "Mean"
)

models <- caretList(y ~ x, data = df, weights = df$w, trControl = trainControl(method = "cv", savePredictions = "final", allowParallel = F), methodList = c("glm", "gbm", "svmRadialCost", "knn"))

ensemble <- caretStack(models, method = CaretMean, weights = df$w, trControl = trainControl(method = "cv", savePredictions = "final", allowParallel = F))
```

### Session Info:
```{R}
>sessionInfo()
R version 3.4.1 (2017-06-30)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows Server >= 2012 x64 (build 9200)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252
[4] LC_NUMERIC=C                           LC_TIME=English_United States.1252    

attached base packages:
 [1] grid      parallel  splines   stats4    stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] caretEnsemble_2.0.0           caret_6.0-77                  randomForest_4.6-12           data.table_1.10.4            
 [5] weights_0.85                  mice_2.30                     gdata_2.18.0                  flexclust_1.3-4              
 [9] modeltools_0.2-21             magrittr_1.5                  ROI_0.2-6                     PortfolioAnalytics_1.0.3636  
[13] PerformanceAnalytics_1.4.3541 xts_0.10-0                    zoo_1.8-0                     xgboost_0.6-4                
[17] lubridate_1.6.0               bindrcpp_0.2                  GenSA_1.1.6                   optimx_2013.8.7              
[21] doParallel_1.0.10             iterators_1.0.8               glmnet_2.0-13                 foreach_1.4.3                
[25] Matrix_1.2-10                 tidyr_0.7.1                   dplyr_0.7.3                   plyr_1.8.4                   
[29] scales_0.5.0                  car_2.1-5                     MASS_7.3-47                   DBI_0.7                      
[33] rsqlserver_1.0                rClr_0.7-4                    VGAM_1.0-4                    Hmisc_4.0-3                  
[37] ggplot2_2.2.1                 Formula_1.2-2                 survival_2.41-3               lattice_0.20-35              
[41] RODBC_1.3-15                 

loaded via a namespace (and not attached):
 [1] backports_1.1.0           lazyeval_0.2.0            svUnit_0.7-12             BB_2014.10-1              digest_0.6.12            
 [6] htmltools_0.3.6           checkmate_1.8.3           memoise_1.1.0             cluster_2.0.6             recipes_0.1.0            
[11] gower_0.1.2               dimRed_0.1.0              colorspace_1.3-2          lme4_1.1-13               Rglpk_0.6-3              
[16] bindr_0.1                 glue_1.1.1                DRR_0.0.2                 registry_0.3              gtable_0.2.0             
[21] ipred_0.9-6               MatrixModels_0.4-1        kernlab_0.9-25            ddalpha_1.2.1             DEoptimR_1.0-8           
[26] SparseM_1.77              setRNG_2013.9-1           Rcpp_0.12.12              htmlTable_1.9             foreign_0.8-69           
[31] lava_1.5                  prodlim_1.6.1             htmlwidgets_0.9           httr_1.3.1                ROI.plugin.quadprog_0.2-5
[36] RColorBrewer_1.1-2        acepack_1.4.1             pkgconfig_2.0.1           nnet_7.3-12               rlang_0.1.2              
[41] reshape2_1.4.2            munsell_0.4.3             tools_3.4.1               ranger_0.8.0              devtools_1.13.3          
[46] ROI.plugin.glpk_0.2-5     stringr_1.2.0             ModelMetrics_1.1.0        knitr_1.17                robustbase_0.92-7        
[51] purrr_0.2.3               pbapply_1.3-3             nlme_3.1-131              quantreg_5.33             slam_0.1-40              
[56] RcppRoll_0.2.2            compiler_3.4.1            pbkrtest_0.4-7            curl_2.6                  e1071_1.6-8              
[61] tibble_1.3.4              stringi_1.1.5             superpc_1.09              nloptr_1.0.4              gbm_2.1.3                
[66] ucminf_1.1-4              R6_2.2.2                  latticeExtra_0.6-28       gridExtra_2.3             codetools_0.2-15         
[71] gtools_3.5.0              assertthat_0.2.0          CVST_0.2-1                Rvmmin_2017-7.18          optextras_2016-8.8       
[76] withr_2.0.0               mgcv_1.8-17               Rcgmin_2013-2.21          quadprog_1.5-5            dfoptim_2016.7-1         
[81] rpart_4.1-11              timeDate_3012.100         class_7.3-14              minqa_1.2.4               git2r_0.18.0             
[86] numDeriv_2016.8-1         base64enc_0.1-3 
```