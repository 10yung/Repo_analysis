### Version
2.6.11

### Reproduction link
[https://codesandbox.io/s/practical-shaw-br23c](https://codesandbox.io/s/practical-shaw-br23c)







### Steps to reproduce
Open the codesandbox and you'll see a warning like `[Vue warn]: Duplicate keys detected: 'constructor'. This may cause an update error.`

Click the "swap" button TWICE to swap the list in the data, triggering the error.

If the literal string "constructor" in the first list is changed for any other string, there are no errors or warnings.

### What is expected?
The list should swap between the "first" and "second" list

### What is actually happening?
"TypeError: Cannot read property 'key' of undefined"

---
:( this was a hard bug to track down.

<!-- generated by vue-issues. DO NOT REMOVE -->
**What kind of change does this PR introduce?** (check at least one)

- [x] Bugfix
- [ ] Feature
- [ ] Code style update
- [x] Refactor
- [ ] Build-related changes
- [ ] Other, please describe:

**Does this PR introduce a breaking change?** (check one)

- [ ] Yes
- [x] No

If yes, please describe the impact and migration path for existing applications:

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch
- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where "xxx" is the issue number)
- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup
- [ ] New/updated tests are included

If adding a **new feature**, the PR's description includes:
- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)

**Other information:**

The checkbox 'Refactor' is checked because of rules ordering was changed. The primary rule should have bigger priority than crutches.
<!--
Please make sure to read the Pull Request Guidelines:
https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines
-->

<!-- PULL REQUEST TEMPLATE -->
<!-- (Update "[ ]" to "[x]" to check a box) -->

**What kind of change does this PR introduce?** (check at least one)

- [ ] Bugfix
- [ ] Feature
- [ ] Code style update
- [ ] Refactor
- [x] Build-related changes
- [ ] Other, please describe:

**Does this PR introduce a breaking change?** (check one)

- [ ] Yes
- [x] No

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch
- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where "xxx" is the issue number)
- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup
- [x] New/updated tests are included
**What kind of change does this PR introduce?** (check at least one)

- [ ] Bugfix
- [ ] Feature
- [ ] Code style update
- [ ] Refactor
- [ ] Build-related changes
- [x] Other, please describe: Fix error message

**Does this PR introduce a breaking change?** (check one)

- [ ] Yes
- [x] No

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch
- [x] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where "xxx" is the issue number)
- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup
- [x] New/updated tests are included

### What problem does this feature solve?
Hello Vue üëã

I'm working on our [new JavaScript debugger](https://github.com/microsoft/vscode-js-debug) for VS Code, and ran into some problems when trying out Vue. The default vue-cli setup creates several supporting .vue scripts. For instance, open the Chrome devtools and ctrl p for "App.vue" in a new project. The top entry is the correct Vue file, the others aren't.

![](https://memes.peet.io/img/Screen%20Shot%202020-01-17%20at%2011.47.46%20AM.png)

From the VS Code perspective, the user might ask us to set a breakpoint in a Vue file. We know which file the breakpoint is attached to on disk, and we need to figure out which loaded file that breakpoint gets mapped to. However, because all these paths are quite similar and all (in the context of a generic web app) possibly the file we want, we end up putting the breakpoint in the wrong file and breaking in the incorrect place. And often the supporting scripts evaluate before the 'real' script does, so we can't, for example, wait and pick the best match from the possible candidates.

### What does the proposed API look like?
The simplest solution would be to prefix the supporting files with some path like `__vue__`, or something along those lines. This would prevent the paths from incorrectly mapping to files that exist on disk.

<!-- generated by vue-issues. DO NOT REMOVE -->
<!--
Please make sure to read the Pull Request Guidelines:
https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines
-->

<!-- PULL REQUEST TEMPLATE -->
<!-- (Update "[ ]" to "[x]" to check a box) -->

**What kind of change does this PR introduce?** (check at least one)

- [ ] Bugfix
- [x] Feature
- [ ] Code style update
- [ ] Refactor
- [ ] Build-related changes
- [ ] Other, please describe:

**Does this PR introduce a breaking change?** (check one)

- [ ] Yes
- [x] No

If yes, please describe the impact and migration path for existing applications:

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch
- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where "xxx" is the issue number)
- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup
- [x] New/updated tests are included

If adding a **new feature**, the PR's description includes:
- [x] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)

**Other information:**

Currently subresource integrity isn't supported by SSR. This PR implements it (along with crossorigin support) by putting the SRI hashes into the client manifest so that they can be added during server rendering. The feature is opt-in when creating the renderer.
### Version
2.6.11

### Reproduction link
[https://codesandbox.io/s/vue-safari-error-tg4mm](https://codesandbox.io/s/vue-safari-error-tg4mm)







### Steps to reproduce
The bug reproduction is quite specific, so please be patient

- open "App.vue" in safari (my version is 13.0.4 (15608.4.9.1.3))
- open the console so that you can watch the logs (the values ‚Äã‚Äãof "e.TimeStamp" and "attachedTimestamp" from https://github.com/vuejs/vue/blob/dev/dist/vue.esm.js#L7549 are logged)
- make sure that the variable "WITH_GENERATE_NEW_VUE" is false
- wait a while. at least about a minute
- click the "Press me" button several times to make sure that everything works. most likely, in the console there will be "e.timeStamp, attachTimestamp 0 0"

Now the difficult and not completely clear part
- change the value of the variable "WITH_GENERATE_NEW_VUE" to true
- without reloading the browser page, click on the button
- now, most likely, the log will change to something similar to "e.timeStamp, attachedTimestamp 0 51478"
- this is Safari and "e.timeStamp" (the first number in the logs) is zero, but after some time or a few clicks, it will begin to grow and now until it becomes more than the value of "attachedTimestamp", the click will not work

### What is expected?
click and method on it works

### What is actually happening?
in the above case, this check is not performed
https://github.com/vuejs/vue/blob/dev/dist/vue.esm.js#L7549

---
This is a specific situation - something like emulating an application in which there is a lot of legacy. different sections can be written on different technologies and sometimes this bug is caught when switching between sections. Unfortunately, I can‚Äôt even suggest how this bug is related to the instantiation of a new vue, maybe this is a coincidence

I think this can be fixed by adding "e.target.contains (e.currentTarget)" to the conditions specified in https://github.com/vuejs/vue/blob/dev/dist/vue.esm.js#L7549 but I don‚Äôt know if this will not affect performance

<!-- generated by vue-issues. DO NOT REMOVE -->
### What problem does this feature solve?
Hello Vue ‚ù§Ô∏è,

I have 2 questions linked to your [raodmap](https://github.com/vuejs/vue/projects/6):

1. In the current roadmap ending in Q1-2020 is quite hard to see which milestone was completed. Is it possible to have somehow something like a level of completion?
2. More important: what is the roadmap for 2020? 

Currently, on Vue 2.x (with vue-router, vuex,...), I would want to plan a migration to Vue 3.x? Responses to those would help me a lot üòÖ!

Thanks,
JP

### What does the proposed API look like?
.

<!-- generated by vue-issues. DO NOT REMOVE -->
### Version
2.6.11

### Reproduction link
[https://imgur.com/a/RxJz6fT](https://imgur.com/a/RxJz6fT)







### Steps to reproduce
Since the 2.6.11 my IDE (VSCode) now suggest me import Vue from  the 'vue/types/umd' namespace instead of the ESModule 'vue'

I'm using 
Vue 2.6.11
Vue-CLI  4.1.0
VScode 1.41.1
Typescript 3.7.4

### What is expected?
Prior 2.6.11, VScode was suggesting to `import Vue from 'vue'` 

### What is actually happening?
VSCode is suggesting me to `import Vue from 'vue/types/umd'` see screenshot

---
maybe it's releated to https://github.com/vuejs/vue/pull/9912 ?

<!-- generated by vue-issues. DO NOT REMOVE -->
‚Ä¶idren is [undefined])

<!--
Please make sure to read the Pull Request Guidelines:
https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#pull-request-guidelines
-->

<!-- PULL REQUEST TEMPLATE -->
<!-- (Update "[ ]" to "[x]" to check a box) -->

**What kind of change does this PR introduce?** (check at least one)

- [x] Bugfix
- [ ] Feature
- [ ] Code style update
- [ ] Refactor
- [ ] Build-related changes
- [ ] Other, please describe:

**Does this PR introduce a breaking change?** (check one)

- [ ] Yes
- [x] No

If yes, please describe the impact and migration path for existing applications:

**The PR fulfills these requirements:**

- [x] It's submitted to the `dev` branch for v2.x (or to a previous version branch), _not_ the `master` branch
- [ ] When resolving a specific issue, it's referenced in the PR's title (e.g. `fix #xxx[,#xxx]`, where "xxx" is the issue number)
- [x] All tests are passing: https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#development-setup
- [ ] New/updated tests are included

If adding a **new feature**, the PR's description includes:
- [ ] A convincing reason for adding this feature (to avoid wasting your time, it's best to open a suggestion issue first and wait for approval before working on it)

**Other information:**
