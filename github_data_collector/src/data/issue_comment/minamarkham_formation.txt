Trying this out and everything was going well until it got to Dropbox.

As I already have that installed I expected it to skip, but it failed at that point with this error in the log.
`ESC(BESC[m  [↓] Installing dropbox Error: It seems there is already an App at '/Applications/Dropbox.app'.

   Formation failed  `

Any ideas?
While install on a fresh Mojave installation I ran into two issues: 1) NVM was getting skipped and 2) installation did  work because `~/.bash_profile` did not exist. 

This fix resolves both issues by checking for existance of `NVM_DIR` to see if `nvm` is installed and creating the `~/.bash_profile` if it doesn't already exist. It also loads nvm for the session to insure that node and the npm packages get installed gets installed. Also NVM gets a version bump
 
Fixes #7 
### What's Changed

Enables adding more repositories to the list of homebrew formulae via `taps` using `swag/taps`. 

> [`brew tap`](https://docs.brew.sh/Taps) adds more repositories to the list of formulae that brew tracks, updates, and installs from. By default, tap assumes that the repositories come from GitHub, but the command isn’t limited to any one location.

### Example

[`prisma`](https://www.prisma.io/docs/prisma-cli-and-configuration/using-the-prisma-cli-alx4/#installation) can be installed via Homebrew however it requires the formulae to be added to Homebrew prior to installing. Outside of formation, this would be achieved using the following commands:

```
brew tap prisma/prisma
brew install prisma
```

However, the following PR provide equivalent support by defining `prisma/prisma` within `swag/taps` file and `prisma` within `swag/brews`. 

### Installation Demo

[![asciicast](https://asciinema.org/a/Aks9PltTTTzHUaRPapc7yUaDI.svg)](https://asciinema.org/a/Aks9PltTTTzHUaRPapc7yUaDI)

The following is something my team and I needed earlier in the week, we forked formation and made the change and decided to contribute it back upstream as #9 appeared to be inactive. If there is anything I can do to help get this PR accepted, please let me know.  

Finally, thank you @minamarkham for an awesome piece of software; it's saved my team and I hours of effort in setting up time :)
This looks like a great tool for setting up new developer machines, and I really want to start using it myself.

How would you recommend I use formation within a team setting? I'd like to be able to customise the apps to be installed, and maybe extend with some different types of installation applicable to my team members.

I could fork this repo and just customise there, but would prefer not to diverge from this repo!

I've seen the example customisation script, but as that's initially written to the user's home directory, it could be tricky to keep that synced between team members.

Ideally I'd like to start a private repo with scripts which reference formation, and simply extend with our own functionality.

I don't know if anyone else has tried something like this, but I'd appreciate any guidance or discussion anyone might have to offer!
* Add taps to slay

* Create taps
Thank you so much for putting this together! I was wondering if this is safe for running on a fresh machine. First, always skips the NVM install, thinking it's already installed. If I switch the check to mimic the MAS install (placing the skip message after the if statement and moving the install steps after the else statement), it works. Also, should regular dotfiles like .bash_profile be created or cloned and synced first? When this is run on a fresh machine, the NVM install step errors when trying to add the path.
Hi Mina! This project is super awesome. Thanks for making it!

I found a glitch when adding packages to be installed in `swag/casks`. I had added `z` (~super handy if you haven't already heard of it: https://github.com/rupa/z~*) and found that `slay` seemed to think it was already installed. Turns out the `xz` package had already been installed and had caused a false positive when running `brew list | grep $brew`. I added the `-w` to trigger an exact match. Seems to work!

\* Turns out `fasd` is the new hotness (https://github.com/clvv/fasd).