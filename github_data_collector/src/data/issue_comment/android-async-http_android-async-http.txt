Hi,

I have a strange issue, that is leaving me exasperated. I am using android async to post an image to our server. It works with every imaginable device I have tested it, the only specific combination in which I get a SocketTimeout is with a specific provider (A1) and the Samsung XCover S4. Unfortunately this is the exact usecase our customer wants.

I am getting this error. In any other combination (other Provider, same phone, same provider, other phone) it works perfectly.

`2019-12-12 11:52:09.411 16086-16789/com.example.callcenter.rema W/System.err: java.net.SocketTimeoutException: Read timed out
2019-12-12 11:52:09.412 16086-16789/com.example.callcenter.rema W/System.err:     at java.net.SocketInputStream.socketRead0(Native Method)
2019-12-12 11:52:09.412 16086-16789/com.example.callcenter.rema W/System.err:     at java.net.SocketInputStream.socketRead(SocketInputStream.java:119)
2019-12-12 11:52:09.412 16086-16789/com.example.callcenter.rema W/System.err:     at java.net.SocketInputStream.read(SocketInputStream.java:176)
2019-12-12 11:52:09.412 16086-16789/com.example.callcenter.rema W/System.err:     at java.net.SocketInputStream.read(SocketInputStream.java:144)
2019-12-12 11:52:09.412 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.io.AbstractSessionInputBuffer.fillBuffer(AbstractSessionInputBuffer.java:160)
2019-12-12 11:52:09.412 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.io.SocketInputBuffer.fillBuffer(SocketInputBuffer.java:84)
2019-12-12 11:52:09.412 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.io.AbstractSessionInputBuffer.readLine(AbstractSessionInputBuffer.java:273)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:140)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.conn.DefaultHttpResponseParser.parseHead(DefaultHttpResponseParser.java:57)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.io.AbstractMessageParser.parse(AbstractMessageParser.java:260)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.AbstractHttpClientConnection.receiveResponseHeader(AbstractHttpClientConnection.java:283)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.conn.DefaultClientConnection.receiveResponseHeader(DefaultClientConnection.java:251)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.conn.AbstractClientConnAdapter.receiveResponseHeader(AbstractClientConnAdapter.java:223)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.protocol.HttpRequestExecutor.doReceiveResponse(HttpRequestExecutor.java:271)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.protocol.HttpRequestExecutor.execute(HttpRequestExecutor.java:123)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.client.DefaultRequestDirector.tryExecute(DefaultRequestDirector.java:685)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.client.DefaultRequestDirector.execute(DefaultRequestDirector.java:487)
2019-12-12 11:52:09.413 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.client.AbstractHttpClient.doExecute(AbstractHttpClient.java:860)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at cz.msebera.android.httpclient.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:82)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at com.loopj.android.http.AsyncHttpRequest.makeRequest(AsyncHttpRequest.java:146)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at com.loopj.android.http.AsyncHttpRequest.makeRequestWithRetries(AsyncHttpRequest.java:177)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at com.loopj.android.http.AsyncHttpRequest.run(AsyncHttpRequest.java:106)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:459)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at java.util.concurrent.FutureTask.run(FutureTask.java:266)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
2019-12-12 11:52:09.414 16086-16789/com.example.callcenter.rema W/System.err:     at java.lang.Thread.run(Thread.java:764)
2019-12-12 11:52:09.415 16086-16789/com.example.callcenter.rema W/System.err: java.net.SocketTimeoutException: Read timed out`
one post url is login 
second post is item list

but session is lost in the server.

What's my problem?

(debug mode is http, release mode is https)

`package com.langwan.safephotoandroid.utils;

import android.util.Log;

import com.langwan.safephotoandroid.MainActivity;
import com.langwan.safephotoandroid.activity.RegisterOneActivity;
import com.loopj.android.http.AsyncHttpClient;

import com.loopj.android.http.JsonHttpResponseHandler;
import com.loopj.android.http.PersistentCookieStore;
import com.loopj.android.http.RequestParams;
import cz.msebera.android.httpclient.Header;
import org.json.JSONObject;


import javax.net.ssl.SSLContext;

import cz.msebera.android.httpclient.conn.ssl.SSLSocketFactory;


public class HttpManager {

    private static final HttpManager instance = new HttpManager();

    private AsyncHttpClient client = null;

    private HttpManager() {

    }

    public static HttpManager share() {
        return instance;
    }

    public void post(String uri, RequestParams params, final JsonHttpResponseHandler responseHandler) {

        if (client == null) {
            Log.d("api", "new client");
            client = new AsyncHttpClient();
           
            PersistentCookieStore cookie = new PersistentCookieStore(MainActivity.Companion.getStaticContent());
            client.setCookieStore(cookie);
            SSLSocketFactory sf = null;
            try {

                sf = new SSLSocketFactory(
                        SSLContext.getDefault(),
                        SSLSocketFactory.ALLOW_ALL_HOSTNAME_VERIFIER);

            }catch(Exception e) {
                e.printStackTrace();
            }

            client.setSSLSocketFactory(sf);
        }

        client.addHeader("accept-language", "zh");

        String url = Environment.getHttpApi() + uri;

        client.post(url, params, new JsonHttpResponseHandler() {
            @Override
            public void onSuccess(int statusCode, Header[] headers, JSONObject response) {
                super.onSuccess(statusCode, headers, response);

                if (statusCode != 200) {
                    return;
                }

                responseHandler.onSuccess(statusCode, headers, response);
            }
        });

    }
}
`
Hi, what is the minimum android version support for TLSv1.2 ?
This project has not been developed / maintained for few years.
I've finally got hold of James Smith (loopj) and he transfered the whole project to organization (https://github.com/android-async-http) and I'm currently finally able to add more developers, which was issue from late 2014 (missing more developers)

So If you are interested in helping this community thrive again, let me know, and I'll definitely appreaciate any help.

Without more people to work on this project, the progress will be slow, and I cannot guarantee any specific time-allocation i could invest.
Updating to Android Studio 3.4 caused the library to break. Found this on logcat
```
E/AsyncHttpRequest: Unhandled exception origin cause
$Proxy7 cannot be cast to a.b.e.e....
```
R8 is the default code shrinker now so I thought maybe that's what caused the problem, so I added these rules to proguard-rules.pro 
```
-keep class cz.msebera.android.httpclient.** { *; }
-keep class com.loopj.android.http.** { *; }
```
And it worked just fine. But the final apk is significantly larger in size.
```
        AsyncHttpClient client = new AsyncHttpClient();
        client.setTimeout(5000);

```
after 5seconds nothing happens . how should i implement that ?
Hi all.
Ä° am getting an error(SocketTimeoutException) while doing get request.Actually, i am trying to send request on browser i am getting successfull response.

Request URL:
http://markanzi.com/mip/mobile/api.php?func=login_forgot&api_access_key=0R4sCxT4oAHO87Z42uHAP9TopW1R4eaG&ceporemail=05424619752

Params:
`RequestParams params = new RequestParams();
params.put("func", Constants.FUNC_LOGIN_FORGOT);
params.put("api_access_key", Constants.API_ACCESS_KEY);
params.put("ceporemail", gsmOrEmail);`

My Code:

```
    HttpClient.directPost(Constants.BASE_URL, params, new JsonObjectResponseHandler() {
        @Override
        public void onSuccess(JSONObject response) {
        }

        @Override
        public void onError(Throwable error) {
            MyLog.log(error);
        }

        @Override
        public void onFinish() {
            super.onFinish();
            if (loadingProgress != null && loadingProgress.isShowing())
                loadingProgress.dismiss();
        }
    });
```

Foot note: **Also I used setTimeOut method for AsyncHttpClient.(30*1000)**
Foot note 2:**I tried setTimeOut(120*1000). This time i am getting HttpResponseException: Gateway Time-out error.**

Please help me

version 1.4.9
whatever I set this timeout value(1s,5s,10s,20s) , the network request will return on 8s.
why?

 i am using android-async-http1.4.8.jar library.   when i am uploading  multiple file to my php server.  File uploaded but sometime get onFailure Response with error text socketconnectiontimeout Exception .

at cz.msebera.android.httpclient.message.HeaderGroup.updateHeader(HeaderGroup.java)
                                                         containsHeader(HeaderGroup.java)
                                                         iterator(HeaderGroup.java)
    at cz.msebera.android.httpclient.message.AbstractHttpMessage.containsHeader(AbstractHttpMessage.java)
                                                                 addHeader(AbstractHttpMessage.java)
                                                                 setHeaders(AbstractHttpMessage.java)
                                                                 setParams(AbstractHttpMessage.java)

 cz.msebera.android.httpclient.impl.client.DefaultHttpClient httpClient
