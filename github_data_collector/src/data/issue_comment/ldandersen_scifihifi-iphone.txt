At the moment API allows to get user password by username. would be great to have something to work nice with autologin features, like 
-(NSString *)getLastStoredUsername;
.... or even:
-(NSString *)getlastStoredUserNameAndPassword:(NSString **)password

Added support for restricting keychain item accessiblitiy (see kSecAttrAccessible) by adding an additional version of storeUsername:andPassword: with an extra argument. The old version is supported for full backward compatibility.

Also some minor formatting changes splitting long method names across multiple lines.

Also added CocoaPod spec.

hi.....
i want to copy my iphone files to computer without jail-breaking my iphone. i had tried iphonebrowsercode but only able to access few files, some file are remaining how can i got access on those remaining files(sms.db,call_history.db ,etc) ....


I exchanged `#import <UIKit/UIKit.h>` for `#import <Foundation/Foundation.h>`. With this little change you can just drop the two files into a OS X project and use them without any changes.

The line  (423 on 
    if (error != nil && status != noErr)

Should be
if (error != nil || status != noErr)

Because it is possible for the error to be nil but for the status to return something different. In that case (e.g. the item was not found) we would want to return NO

NSDictionary *attributeResult = NULL;  

should be

NSDictionary *attributeResult = nil;  

Can someone take a look into adding support for sharing keychain access between apps.  As I understand it, it requires the use of kSecAttrAccessGroup.  Thanks.

The biggest advantage I see in keychain use is that entires survive app deletion and reinstall.

But if all my database data is lost, what use does the saved keychain data has? I miss some sort of NSDictionary returning with all my entries. 

Don't know if that's possible. Keychain access is really bogus to me, but maybe you have an idea!

Keep up your good work!
- Peter
