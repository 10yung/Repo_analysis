<!-- Use this issue tracker to file bugs and feature requests
related to the ARCore SDK for Android (Java / C).

For advice and general questions, please use the `ARCore` tag on
Stack Overflow: stackoverflow.com/questions/tagged/ARCore

- For Sceneform issues, use https://github.com/google-ar/sceneform-android-sdk
- If using Unity, use https://github.com/google-ar/arcore-unity-sdk
- If using Unreal, use https://github.com/google-ar/arcore-unreal-sdk
-->


### SPECIFIC ISSUE ENCOUNTERED

Horizontal planes that are the ceiling or floor don't recognize that vertical planes may be walls, and a diagonal section is drawn where there are corners or alcoves.

In this example, which uses Huawei equivalents of ARCore APIs for ToF data on the P30, the vertical planes correctly identify the walls which indicate the structure of the room:

![image](https://user-images.githubusercontent.com/3230893/72519569-86998000-384f-11ea-874c-3f639da0bf90.png)

...but the ceiling plane doesn't recognize the alcove, and instead there is just a diagonal section:

![image](https://user-images.githubusercontent.com/3230893/72519746-e6902680-384f-11ea-8779-14cd66c14dd6.png)

In this example of a corridor, the vertical planes correctly identify the walls:

![image](https://user-images.githubusercontent.com/3230893/72520055-86e64b00-3850-11ea-850c-7e41048087b6.png)

...but the ceiling plane doesn't appear to account for the vertical planes:

![image](https://user-images.githubusercontent.com/3230893/72520128-ad0beb00-3850-11ea-9cfd-fdb9c3371e7f.png)

It is unclear to me whether or not this is an ARCore issue or a Huawei specific issue, as vanilla ARCore plane detection doesn't work as well without the ToF enhanced data, though hopefully the new ARCore Depth API should solve that.

### VERSIONS USED
- Android Studio: 3.5.3
- ARCore SDK for Android: AREnginesdk-sample-2.0.0.6
- Device manufacturer, model, and O/S: Huawei P30 Android 9
- ARCore: 1.14.191118106
  On Windows, use: `adb shell pm dump com.google.ar.core | findstr /i "packages: versionName"`
  On macOS, use: `adb shell pm dump com.google.ar.core | egrep -i versionName\|packages:`
- Output of `adb shell getprop ro.build.fingerprint`: HUAWEI/VOG-L09EEA/HWVOG:9/HUAWEIVOG-L09/9.1.0.260C431:user/release-keys

### STEPS TO REPRODUCE THE ISSUE
 1. Download AREngine
 1. Build and run the WorldAR demo and observe the floor and ceiling planes
 1.


### WORKAROUNDS (IF ANY)


### ADDITIONAL COMMENTS

There is a list of ARCore compatible devices here:
https://developers.google.com/ar/discover/supported-devices

And as explained on this page, a csv can also be downloaded from the developer console.

The problem is that these two list are not consistent. Some devices listed on the ARCore page are not present in the csv ; and some devices present in the csv list are not listed in the ARCore page.

May you explain why these lists are not consistent ? Which list is the most reliable ?

Thanks.
Samsung released a new refresh of the A series a few months ago (A30s/A50s), the previous models were already compatible with arcore. I currently own a A30s. Will there be support for the new models? 
I want to place an 3d object but I do not want to display it on camera but it shout should draw it at specified point using Java code.
Import fbx file size 78,5 Mb then error cause invalid stored block lengths, How much limit file max size for fbx? The other fbx file size is under 2Mb..

<!-- Use this issue tracker to file bugs and feature requests
related to the ARCore SDK for Android (Java / C).

For advice and general questions, please use the `ARCore` tag on
Stack Overflow: stackoverflow.com/questions/tagged/ARCore

- For Sceneform issues, use https://github.com/google-ar/sceneform-android-sdk
- If using Unity, use https://github.com/google-ar/arcore-unity-sdk
- If using Unreal, use https://github.com/google-ar/arcore-unreal-sdk
-->


### SPECIFIC ISSUE ENCOUNTERED
<img width="1676" alt="Screen Shot 2020-01-06 at 11 31 34 AM" src="https://user-images.githubusercontent.com/11055140/71832143-4d575800-3078-11ea-920d-f2f36d7f2eb6.png">

I've attached a Logcat preview above, but this bug seems to be pretty straightforward. The following error will get printed into the console recursively once a user has entered an AR Session: `E/ACameraMetadata: getConstEntry: cannot find metadata tag 65578`

I've also tested this on the Google's Example App and the same issue occurs. I've tested about 7 phones and each phone has had the same issue, with some constantly printing (Samsung Galaxies), and others printing the error every so often. 



### VERSIONS USED
- Android Studio: 3.5.2
- ARCore SDK for Android: 13.0, 14.0
- Device manufacturer, model, and O/S: Samsung Galaxy S10 OS 9
- ARCore: 
  On macOS, use: `adb shell pm dump com.google.ar.core | egrep -i versionName\|packages:`
- Output of `adb shell getprop ro.build.fingerprint`: 
Packages:
    versionName=1.14.191118106
Hidden system packages:
    versionName=0
samsung/beyond1qltesq/beyond1q:9/PPR1.180610.011/G973USQS1ASD9:user/release-keys



### STEPS TO REPRODUCE THE ISSUE
 1. Open up android studio AR project
 2. Run the project on any device
 3. Start an AR Session
 4. Errors will start printing out inside of Logcat


### WORKAROUNDS (IF ANY)
None Found


### ADDITIONAL COMMENTS

hi，
       our project needs to use arcore-1.30.0.aar and sdk-videowidget-1.40.0.aar，but these aar packages are  obfuscated.They have the same classpath: com.google.a.a.c.class etc.  Code compilation error........
       Is there a solution？Can anyone provide aar without confusion ?
       Thanks.
   



The augmented image project in the sample does not work in Note 10 plus (SM-N976N).

2020-01-06 11:48:23.764 23198-23924/com.google.ar.core.examples.java.augmentedimage W/NdkImageReader: Unable to acquire a lockedBuffer, very likely client tries to lock more than maxImages buffers
2020-01-06 11:48:23.764 23198-23924/com.google.ar.core.examples.java.augmentedimage E/native: camera_image_stream.cc:231 Camera Image Stream failed to dequeue Image from ImageReader. status=ImageReaderStatusErrorSpaceClass::AMEDIA_IMGREADER_MAX_IMAGES_ACQUIRED: AImageReader_acquireLatestImage acquired_image_count=16

2020-01-06 11:48:25.029 23198-23464/com.google.ar.core.examples.java.augmentedimage D/ACameraDevice: Device error received, code 3, frame number 74, request ID 0, subseq ID 0
2020-01-06 11:48:25.029 23198-23928/com.google.ar.core.examples.java.augmentedimage E/native: android_camera.cc:1696 Camera 0: Repeating CaptureRequest capture failed! frame: 74 reason: 1

2020-01-06 12:30:41.007 21213-26691/? E/Camera3-OutputStream: getBufferLockedCommon: Stream 0: Can't dequeue next output buffer: Connection timed out (-110)
2020-01-06 12:30:41.007 21213-26691/? E/Camera3-Device: RequestThread: Can't get output buffer, skipping request: Connection timed out (-110)
2020-01-06 12:30:41.007 21213-26691/? E/CameraDeviceClient: notifyError: errorCode = 3





Fatal Exception: java.util.concurrent.TimeoutException: 
com.google.ar.core.Session.finalize() timed out after 60 seconds
       at com.google.ar.core.Session.nativeDestroySessionWrapper(Session.java)
       at com.google.ar.core.Session.finalize(Session.java:37)
       at java.lang.Daemons$FinalizerDaemon.doFinalize(Daemons.java:250)
       at java.lang.Daemons$FinalizerDaemon.runInternal(Daemons.java:237)
       at java.lang.Daemons$Daemon.run(Daemons.java:103)
       at java.lang.Thread.run(Thread.java:764)


device : only galaxy note 10+
version : android 9, 10

augmented image detect -> 3d object add ->  video play -> freezing app -> this issue


