The method MMMarkdown.htmlString markdown all the text including scripts called between <script>...</script>
Including localization and internationalization changes.
- added GitHub flavored checklist markdown (https://help.github.com/articles/basic-writing-and-formatting-syntax/#task-lists)
- added unit tests.

I would like to ensure that the resulting output is strict and safe, and so would like to have an option which just eats all html (whether inline or block) in the source without passing it through to the result.
A bold string with prefix * is not getting parsed into HTML 
ex. ***This is a note**
Which version can support iOS7?

Hi,

I just pushed version 0.5.5 of the podspec.  While I was doing that I noticed that the README says:

It is compatible with OS X 10.6+, iOS 8.0+, tvOS, and watchOS.

Would it make sense to add the versions for tvOS and watchOS as in:

It is compatible with OS X 10.6+, iOS 8.0+, tvOS 9.0+, and watchOS 2.0+.

Just a thought.

Cheers!

Hi,

Would you be open having two options added to `MMarkdownExtensions`:
1. `MMMarkdownExtensionsNoSetextHeaders`: Disable detection of headers like

```
A Setext Header
=============
```

and instead only allow the

```
# Atx Style Headers
```
1. `MMMarkdownExtensionsNoSpaceIndentedCodeBlocks`: Disable detection of code blocks preceded by four spaces as in:

```
    This would no longer be a code block.
```

and instead allow fenced code blocks (if MMMarkdownExtensionsFencedCodeBlocks is enabled).

I ask because I'm making a user-facing Markdown app and I want to avoid confusion amongst my users about whether to use the `#` (Atx) or `===` (Setext) headers.  I also want to avoid confusion about space-indented code blocks.

Also, turning off Setext headers and space-indented code blocks makes Markdown syntax highlighting within the markdown input editor **much** easier.

I think this would be two simple changes in `MMMarkdown.h` and `MMParser.m`.

_If I was willing to make these code changes, including automated tests, on a fork, would you be open to a pull request to merge this into the master branch?_  :-)

I'm really enjoying MMMarkdown (thanks!) and I need these two new flags but I'd rather avoid forking and diverging my own version from your master since that will make subsequent updates to your later releases more difficult and require git merges, etc.

In my experience, use of Setext headers is rare since they only have 2 levels of headers (compared to 6 for Atx).  Also, fenced code blocks seem far more popular than space-indented ones in my experience.

Thanks and best wishes.

Hi,

If you've gone to all the trouble of writing an awesome markdown parser and all, why not open up the API a bit more so we can return more than just a HTML string? It would be handy for me to get an array of link elements for example. I've seen the code to do that is there in the source, but downloading as a CocoaPod only exposes that one class method.

Just a consideration...

Thanks.
