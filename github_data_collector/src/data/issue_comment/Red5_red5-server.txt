# Issue
Plugin execution not covered by lifecycle configuration: org.apache.maven.plugins:maven-toolchains-plugin:3.0.0:toolchain (execution: default, phase: validate)	


### Short description
1.New install
2. Maven update
3.pom.xml error happens!!!



### Environment
[] Operating system and version: windows
[] Java version:1.8
[] Red5 version: 
        <groupId>org.red5</groupId>
        <artifactId>red5-parent</artifactId>
        <version>1.2.3</version>



Help me.....


Hi everyone,

I using Ant Media Server. But record stream (VoD) file very large.
I want config record stream file about 10 minutes per file.

Please help me config or implement it.

It would be nice if Red5 or its Pro version could support jsmpeg (https://jsmpeg.com/).  I think this can be done/achieved with a Red5 webapp.  Chinese CDN providers have video CDN services supporting jsmpeg and western CDN services have yet to follow or even take notice.  It should be fairly easy to implement and latency-wise it's comparable to WebRTC with much less complexity.
I have managed to modify securityPlugin from red5-plugins collection to filter broadcasters based on IP address.  However when I tested publishing using nanoStream's publishing app on iOS, I managed to get past the security despite the logs showing it should have failed/been rejected by the server.  This does not seem to happen with other RTMP publishing tools I tested.

### Environment

[] Operating system and version: Ubuntu Linux 16.04 LTS
[] Java version: openjdk version "11.0.4" 2019-07-16 LTS
OpenJDK Runtime Environment 18.9 (build 11.0.4+11-LTS)
OpenJDK 64-Bit Server VM 18.9 (build 11.0.4+11-LTS, mixed mode, sharing)

[] Red5 version: 1.2.2


### Expected behavior
It should reject the publishers without any exception thrown in the logs.

### Actual behavior
nanoStream manages to publish on Red5 server despite being prohibited.  Affects latest Red5 Pro too.

### Steps to reproduce
1. Start Red5 with modified securityPlugin
2. Add 127.0.0.1 to list of allowed publisher IP
3. Stream from other IP using nanoStream RTMP publisher
4. The RTMP URL is now live

### Logs
https://pastebin.com/Ey2QguXw


# Issue
Flash player is required for demos.

### Short description
Unable to launch demo without flashplayer.


### Environment

[] Operating system and version: Windows 10 Pro
[] Java version: latest
[] Red5 version: latest


### Expected behavior
HTML 5.0 not flash.

### Actual behavior
Flash is required to view demos.
Documentation for demos is also suspect, but Flash?

### Steps to reproduce
1. Install Java
2. set java_home
3. install and run Red5
4. discover you can't access anything because of legacy software requirements and need to install flash
5. try to enter an issue in GitHub


### Logs
__Place logs on [pastebin](http://pastebin.com/) or elsewhere and put links here__

? uhm, I don't know what logs you need


NOTE: I'm not a programmer. I'm the guy who helps users get programs to run. This looks promising, but the open source project has an incredibly steep learning curve to get off the ground.
# Feature request

### Short description

- __As Flash has been almost completely removed from the browsers, there is a need to be able to take control of and over rtmp protocol using other browser methods__
- __Browsers don't allow socket connections, therefore a direct to RTMP communication from the browser is not possible__
- __Connecting to a red5 application directly, using JavaScript could be done using WebSocket interface of the browser - NetConnection/SharedObject wrappers could be created__
- __Stream could be accessed through http-flv hack or exposed through WebSocket too and decoded with FLV.js which already supports this tunneling method__

### Environment

[x] Operating system and version: Any
[x] Java version: Any
[x] Red5 version: Future

### Expected behavior

__Using projects such as [FLV.js](https://github.com/Bilibili/flv.js/) we should be able to connect and play live streams__

From that project features:
  - HTTP FLV low latency live stream playback
  - FLV over WebSocket live stream playback

__Using WebSocket connection, one can emulate the NetConnection behavior of ActionScript__

There is this project [https://github.com/illuspas/Node-Media-Server](https://github.com/illuspas/Node-Media-Server) that can already do

- RTMP
- WebSocket tunneling through FLV.js
- HTTP based live streaming through FLV.js 
- HLS
- Dash

What do you think ?
I don't know if you have time or plan any work in this area, what would be the steps needed to do this ?

I think a WebSocket connection api (with SharedObject) plus FLV.js stream playback support over websocket are all that is needed to make red5 a jewel for the non-flash future.

# Issue
Red5 memory leak during live h264 video publish

 ### Short description
We have two red5 instance running parallely. Memory consumption on one instance is normal(16%) with 10 streams. However, on second instance memory consumption is around 55% with 20 streams.  When we analysed the heap dump of second instance we found 1,968,245,216 instances of class `org/red5/codec/IVideoStreamCodec$FrameData` .  We suspect that these are not garbage collected. So, it total these objects are consuming 2GB of heap.

### Environment
Operating system and version: Ubuntu 16.04
Java version: java 8
Red5 version: v1.0.10-M9

### Expected behavior
Heap memory usage should be same on both the red5 instances.

### Actual behavior
Heap memory usage grows for sometime and contains stale zero size objects.

### Steps to reproduce
1. Stream more than 20 RTMPS stream continuously  
# Issue
The red5 threads enter in infinite loop and consumes 100% cpu.

### Short description
__When RTMP client disconnects, it is not able to clear the session buffer and while trying to do so it enters in infinite loop due to incorrect logic in RTMPProtocolDecoder.java (decodebuffer).__


### Environment

Operating system and version: Ubuntu 16.04
Java version: java 8
Red5 version: 1.0.9


### Expected behavior
__Session should be disconnected and all resources released.__

### Actual behavior
__Session disconnects but enters in infinite loop__
Who can tell me, 3Q
# Issue

### Short description
I can't find these info. Could you tell me how to get it?


### Environment

[] Operating system and version:Mac
[] Java version:openjdk version "1.8.0_151"
[] Red5 version:1.0.9 release


### Expected behavior
get query string like paramsOne or user1

### Actual behavior
I can't find any info about query string like paramsOne or user1.

### Steps to reproduce
1.use my custom ApplicationAdapter and registerStreamPublishSecurity
public boolean isPublishAllowed(IScope iScope, String str1, String str2) {
       Set<String> attributeNames = iScope.getAttributeNames();
        for (String attributeName : attributeNames) {
            log.info("attributeName = " + attributeName);
        }
        log.info("str1 = " + str1);
        log.info("str2 = " + str2);
}
2. publish a rtmp stream: rtmp://127.0.0.1:1935/live/aaa?paramsOne=user1

3. to get the params=aaa in my ApplicationAdapter in connect(IConnection conn, IScope scope, Object[] params)
log.info("Connection params: {}", conn.getConnectParams());
        log.info("Connection attributes: {}", conn.getAttributes());
        if (params != null) {
            log.info("Params: {}", Arrays.toString(params));
}

### Logs
__Place logs on [pastebin](http://pastebin.com/) or elsewhere and put links here__
[INFO] [NioProcessor-2] org.red5.server.adapter.MyApplicationAdapter - Connection params: {app=live, type=nonprivate, flashVer=FMLE/3.0 (compatible; FMSc/1.0), swfUrl=rtmp://127.0.0.1:1935/live, tcUrl=rtmp://127.0.0.1:1935/live, path=live}
[INFO] [NioProcessor-2] org.red5.server.adapter.MyApplicationAdapter - Connection attributes: {}
[INFO] [NioProcessor-2] org.red5.server.adapter.MyApplicationAdapter - Params: []
[INFO] [NioProcessor-2] org.red5.server.adapter.MyStreamPublishSecurity - key = _transient__service_cache:org.red5.server.api.stream.IStreamService, value = org.red5.server.stream.StreamService@158d9c1b
[INFO] [NioProcessor-2] org.red5.server.adapter.MyStreamPublishSecurity - key = _transient__service_cache:org.red5.server.api.service.IStreamSecurityService, value = org.red5.server.adapter.MyApplicationAdapter@2fff333e
[INFO] [NioProcessor-2] org.red5.server.adapter.MyStreamPublishSecurity - str1 = aaa
[INFO] [NioProcessor-2] org.red5.server.adapter.MyStreamPublishSecurity - str2 = live


  