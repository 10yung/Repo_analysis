Unable to start activity ComponentInfo{com.igorwojda.showcase/com.igorwojda.showcase.app.presentation.NavHostActivity}: android.view.InflateException: Binary XML file line #11: Binary XML file line #11: Error inflating class fragment
Hi, I have cloned your repo and wait for build. Everything was ok. But, I don't see any configuration to run. I have also try gradle sync, inv. cache and restart but nothing works.

Android studio version is: 3.5.3
Hello,
thank you for this repo.I would like to ask, when working together with Dynamic Feature modules and Navigation components, I directly configured the Fragment path of Dynamic Feature module in the Navigation. However, when I was running the project, the system told me that I could not find the target.I noticed that your project is also written in the same way, but the runtime is normal. May I ask if it is my configuration error?Now I have changed the configuration consistent with yours, but it still cannot solve this problem. If you have time trouble, you can help me, thank you!
Hello,
thank you for this repo.  Why do you have duplicate plugin id's?  Specifically in **settings.gradle.kts** and in **build.gradle.kts**:
`plugins {
        id(GradlePluginId.DETEKT) version GradlePluginVersion.DETEKT`


![image](https://user-images.githubusercontent.com/21376780/65844375-9c4e6c80-e368-11e9-8f78-ff5db5e3c394.png)

App crashes when you click on two albums at the same time
The first time when you run the app, it will display normally, and the second time it will crash. The error is as follows:

`java.net.SocketTimeoutException: failed to connect to ws.audioscrobbler.com/64.30.224.206 (port 80) from /10.60.206.65 (port 40406) after 10000ms
        at libcore.io.IoBridge.connectErrno(IoBridge.java:185)
        at libcore.io.IoBridge.connect(IoBridge.java:130)
        at java.net.PlainSocketImpl.socketConnect(PlainSocketImpl.java:129)
        at java.net.AbstractPlainSocketImpl.doConnect(AbstractPlainSocketImpl.java:356)
        at java.net.AbstractPlainSocketImpl.connectToAddress(AbstractPlainSocketImpl.java:200)
        at java.net.AbstractPlainSocketImpl.connect(AbstractPlainSocketImpl.java:182)
        at java.net.SocksSocketImpl.connect(SocksSocketImpl.java:356)
        at java.net.Socket.connect(Socket.java:616)
        at okhttp3.internal.platform.AndroidPlatform.connectSocket(AndroidPlatform.kt:56)
        at okhttp3.internal.connection.RealConnection.connectSocket(RealConnection.kt:268)
        at okhttp3.internal.connection.RealConnection.connect(RealConnection.kt:176)
        at okhttp3.internal.connection.ExchangeFinder.findConnection(ExchangeFinder.kt:236)
        at okhttp3.internal.connection.ExchangeFinder.findHealthyConnection(ExchangeFinder.kt:109)
        at okhttp3.internal.connection.ExchangeFinder.find(ExchangeFinder.kt:77)
        at okhttp3.internal.connection.Transmitter.newExchange$okhttp(Transmitter.kt:162)
        at okhttp3.internal.connection.ConnectInterceptor.intercept(ConnectInterceptor.kt:35)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
        at okhttp3.internal.cache.CacheInterceptor.intercept(CacheInterceptor.kt:82)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
        at okhttp3.internal.http.BridgeInterceptor.intercept(BridgeInterceptor.kt:84)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
        at okhttp3.internal.http.RetryAndFollowUpInterceptor.intercept(RetryAndFollowUpInterceptor.kt:71)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
        at okhttp3.logging.HttpLoggingInterceptor.intercept(HttpLoggingInterceptor.kt:215)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
        at com.igorwojda.showcase.app.data.retrofit.UserAgentInterceptor.intercept(UserAgentInterceptor.kt:23)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
        at com.igorwojda.showcase.app.data.retrofit.AuthenticationInterceptor.intercept(AuthenticationInterceptor.kt:18)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:112)
        at okhttp3.internal.http.RealInterceptorChain.proceed(RealInterceptorChain.kt:87)
        at okhttp3.RealCall.getResponseWithInterceptorChain(RealCall.kt:184)
        at okhttp3.RealCall$AsyncCall.run(RealCall.kt:136)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1162)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:636)
        at java.lang.Thread.run(Thread.java:764)
`

Well! This seems to be a problem with the network.
Hi @igorwojda  Thanks for great sample project.
Did you plan to add also support for Db layer ?
if not in the near future, can you please help design what will be the best approach to add db representation, in order to be accesses from all the modules.
Thanks, 
Ronny.
If there's no internet connection, there's a crash without any descriptive log what happened, where and why. This sample needs some error handling :)
On top of quality checks with ktlint and detekt, it could be interesting to add coverage to your reports. I didn't find any mention of JaCoCo or any other option in your gradle files.