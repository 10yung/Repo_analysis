<!--
  Thank you for contributing! Please use this pull request (PR) template.


 In the description field of this PR, include "resolves #XXXX" tagging the issue you are fixing. If this PR addresses the issue but doesn't completely resolve it (ie the issue should remain open after your PR is merged), write "addresses #XXXX".-->
Resolves #3570 

 Changes: 
<!-- Add here what changes were made in this pull request and if possible provide links showcasing the changes. -->
Provided a third optional parameter to position function **positionType**

 Screenshots of the change: 
<!-- If applicable, add screenshots depicting the changes. -->

#### PR Checklist
<!--
  To check any option, replace the "[ ]" with a "[x]". Be sure to check out how it looks in the Preview tab! Feel free to remove any portion of the template that is not relevant for your issue.
-->

- [x] `npm run lint` passes
- [x] [Inline documentation] is included / updated
- [x] [Unit tests] are included / updated
- [ ] [Benchmarks] are included / updated

[Inline documentation]: https://github.com/processing/p5.js/blob/master/contributor_docs/inline_documentation.md
[Unit tests]: https://github.com/processing/p5.js/tree/master/contributor_docs#unit-tests
[Benchmarks]: https://github.com/processing/p5.js/blob/master/contributor_docs/benchmarking_p5.md

<!--
  Thank you for contributing! Please use this pull request (PR) template.


 In the description field of this PR, include "resolves #XXXX" tagging the issue you are fixing. If this PR addresses the issue but doesn't completely resolve it (ie the issue should remain open after your PR is merged), write "addresses #XXXX".-->
Resolves #4252 

 Changes: 
<!-- Add here what changes were made in this pull request and if possible provide links showcasing the changes. -->
Adding tests for missing DOM methods
- [x] createSlider()
- [x] createA
- [ ] createCheckBox()
- [ ] createRadio()

#### PR Checklist
<!--
  To check any option, replace the "[ ]" with a "[x]". Be sure to check out how it looks in the Preview tab! Feel free to remove any portion of the template that is not relevant for your issue.
-->

- [x] `npm run lint` passes
- [ ] [Inline documentation] is included / updated
- [x] [Unit tests] are included / updated
- [ ] [Benchmarks] are included / updated

[Inline documentation]: https://github.com/processing/p5.js/blob/master/contributor_docs/inline_documentation.md
[Unit tests]: https://github.com/processing/p5.js/tree/master/contributor_docs#unit-tests
[Benchmarks]: https://github.com/processing/p5.js/blob/master/contributor_docs/benchmarking_p5.md

<!--
Hi there! 

To check any option, replace the "[ ]" with a "[x]". Be sure to check out how it looks in the Preview tab! Feel free to remove any portion of the template that is not relevant for your issue.
-->

#### Most appropriate sub-area of p5.js?

- [ ] Color
- [x] Core/Environment/Rendering
- [ ] Data
- [ ] Events
- [ ] Image
- [ ] IO
- [ ] Math
- [ ] Typography
- [ ] Utilities
- [ ] WebGL
- [ ] Other (specify if possible)

#### Details about the bug: 
- p5.js version: p5.js v0.10.2 January 15, 2020
- Web browser and version:  Google Chrome | 79.0.3945.117 (Build officiel) (64 bits) (cohort: Stable)
- Operating System: Windows 10
- Steps to reproduce this:
Description: I'm would like to zoomIn the canvas. With p5 web editor it is working fine
1) index.html extract, create a section to receive the p5 canvas and at bottom of body, include p5.min.js:
     <section id="section1"></section>
     <script type="text/javascript" src="./p5.js"></script>

2) In function draw() call function scale() to rescale de canvas content (which consiste of a simple ellipse before and after the scale):
function draw() {
  background(220, 180, 200);
  // Set ellipse in middle of screen middle of screen
  ellipse(width/2, height/2, 80, 80);
  scale(0.5);
  // Set ellipse in middle of screen middle of screen after scale
  ellipse(width/2, height/2, 80, 80);
}

Error message is:
sketch.js:30 Uncaught TypeError: scale is not a function
    at draw (sketch.js:30)
    at p5._main.default.redraw (p5.js:66218)
    at _draw (p5.js:58914)
  | draw | @ | sketch.js:30
-- | -- | -- | --
  | _main.default.redraw | @ | p5.js:66218
  | _draw | @ | p5.js:58914
  | requestAnimationFrame (async) |   |  
  | _draw | @ | p5.js:58937
  | requestAnimationFrame (async) |   |  
  | _draw | @ | p5.js:58937
  | _start | @ | p5.js:58785
  | p5 | @ | p5.js:59125
  | _globalInit | @ | p5.js:58352
  | load (async) |   |  
  | 25.../core/main | @ | p5.js:58365
  | o | @ | p5.js:34
  | (anonymous) | @ | p5.js:38
  | 16../color/color_conversion | @ | p5.js:52635
  | o | @ | p5.js:34
  | r | @ | p5.js:51
  | (anonymous) | @ | p5.js:55
  | (anonymous) | @ | p5.js:18
  | (anonymous) | @ | p5.js:20
<!--
Hi there! 

To check any option, replace the "[ ]" with a "[x]". Be sure to check out how it looks in the Preview tab! Feel free to remove any portion of the template that is not relevant for your issue.
-->

#### Most appropriate sub-area of p5.js?

- [ ] Color
- [ ] Core/Environment/Rendering
- [ ] Data
- [ ] Events
- [ ] Image
- [ ] IO
- [ ] Math
- [ ] Typography
- [ ] Utilities
- [ ] WebGL
- [x] Other (specify if possible)
P5 not downloading (Followup)
#### Details about the bug: 

- p5.js version: <!-- You can first this in the first line of the p5.js file -->p5.js v0.10.2 October 14, 2019
- Web browser and version: Google Chrome | 79.0.3945.117 (Official Build) (64-bit) (cohort: Stable)
<!-- In the address bar, on Chrome enter "chrome://version", on Firefox enter "about:support". On Safari, use "About Safari". -->
- Operating System: <!-- Ex: Windows/MacOSX/Linux/Android/ iOS along with version --> Windows 10
- Steps to reproduce this: Try downloading the file.
<!-- Include a simple code snippet that demonstrates the problem, along with any console errors produced. If this isn't possible, then simply describe the issue as best you can! -->
When you try do download anything then it doesn't download. How this can be fixed is simple.
Just host the file on p5js.org! I am making a follow up to my last bug thingy.

<!--
Hi there! 

To check any option, replace the "[ ]" with a "[x]". Be sure to check out how it looks in the Preview tab! Feel free to remove any portion of the template that is not relevant for your issue.
-->

#### Most appropriate sub-area of p5.js?

- [ ] Color
- [ ] Core/Environment/Rendering
- [ ] Data
- [ ] Events
- [ ] Image
- [ ] IO
- [ ] Math
- [ ] Typography
- [ ] Utilities
- [ ] WebGL
- [x] Other (DOM)

#### Feature enhancement details:
We need to add unit tests for several methods of DOM.
Unit tests missing for methods like createP(), createDiv(), createImg(),createA(),createSlider(),createRadio(),etc.

<!--
Hi there! 

To check any option, replace the "[ ]" with a "[x]". Be sure to check out how it looks in the Preview tab! Feel free to remove any portion of the template that is not relevant for your issue.
-->

#### Most appropriate sub-area of p5.js?

- [ ] Color
- [ ] Core/Environment/Rendering
- [ ] Data
- [ ] Events
- [ ] Image
- [ ] IO
- [ ] Math
- [x] Typography
- [ ] Utilities
- [ ] WebGL
- [ ] Other (specify if possible)

#### New feature details:
We can add functionality that can add spaces around a line(space on top and bottom of the line) which can be done in CSS by using line-height property.

Below is the behavior of line-height:
![lineHeightDemo](https://user-images.githubusercontent.com/26370910/72075312-7cd8bf80-3319-11ea-99a2-89f906857211.gif)

Can we add a method textLineHeight() to **Typography** module?

The signature of the function would be something like this:

```
/**
* N is the number of pixels
* @param {number} N
*/
function textLineHeight(N) {}
```
Resolves #3390 

#### Changes: 

Adds `i18next`, a js library for internationalization to the p5.js codebase. It lets us use translated for text appropriate to the user's browser/computer configuration. It doesn't translate text for us though, that must be done by hand. It provides language detection and translation loading/use.

This PR also integrates it to be loaded with the Friendly Error System (and can be used anywhere in the codebase). Includes an example using it in the file loading error messages.

Still needs documentation so others can help spread this through the codebase and add translations.

#### PR Checklist

- [x] `npm run lint` passes
- [ ] [Inline documentation] is included / updated

I wanted to make an independent thread to locally track development for this feature. This was originally discussed in #3893 .

> We have been talking about ways to get more people involved in specific discussions on the repo. The idea is that a large portion of our community doesn't use github consistently, and it would be great to be able to poll opinions, generate discussion, and encourage contribution through another platform such as Twitter.
> 
> With that in mind, we thought it might be cool to automatically create a Twitter poll through the p5 twitter when an issue @ notifies a bot along with a set of options. Something to the effect of:

> @twitter-poll-bot make a poll.
> prompt:
> When print() is called without any arguments, the browser tries to print the sketch out on paper. This causes confusion so we want to try renaming the function. What do you think would be best?
> options:
> a: console()
> b: printToConsole()
> c: log() and rename the existing logarithm function

@gr2m suggested adding this functionality as a feature to [https://github.com/gr2m/twitter-together](https://github.com/gr2m/twitter-together) and development is now underway. It can be followed at [https://github.com/gr2m/twitter-together/issues/79](https://github.com/gr2m/twitter-together/issues/79)
Moving this from #3893 in order to give it the space it deserves. Quote from @gr2m in that thread:

> Talking about other bot ideas. I'm very interested in enabling editorial contributions to Open Source projects. I've seen it be a huge part of a projects success, especially with http://hood.ie/.
> 
> twitter-together is one of the ideas we had back then, everyone can now suggest tweets. To lower the barrier further to editorial contributors which might not be familiar with GitHub, I'd like to create a custom UI for twitter-together, that is tailored to the process of suggesting and reviewing tweets.
> 
> Another idea I had is https://github.com/octonews/octonews. Think Hackernews/reddit, and using GitHub as the backend for data persistance and authorization. I think a community is defined by common interests, and suggesting news items that might be interested to follow p5.js users/contributors is a great path for contributions that is not code.
> 
> When I created octonews, the available APIs where not sufficient, but it should be possible now. If that is sth that would interest you, I'd give it another look, I've been waiting for a good reason.
> 
> But let me know what ever would help p5.js right now, I'm happy to help as good as I can, also happy to coach others so more people will be able to build this kind of automation

This is interesting. I can imagine this being really cool and useful.

Is there a live example of either of these things that you can link to? I tried looking through the hood.ie website but I couldn't find a section that fit your description. Or [this blog ](http://hood.ie/blog/)maintained in the way you described?

I think my main concerns would be with:
- difficulty in implementation/maintenance
- how to make sure either of these proposals fulfill needs that aren't being met yet. The social media accounts for p5 are already pretty flexible in use. Would it make more sense to simply expand on that?
resolves #3893 

In lieu of the fully-automated luxury communist future that the bots weren't quite ready to guide us to, this PR adds a contributors document that attempts to outline:
- How the repository is organized or managed
- How decisions are made

The goal is to articulate and solidify some guiding principles. 

Obviously, any and all input is welcome :-}