i need to testing the Invoke-PasswordSprayEWS
but using list of password and single username

command will connect to the Exchange Web Services server at https://mail.domain.com/EWS/Exchange.asmx and attempt to password spray **a list of password** with **a single username**

i cannot make the changes in this code so, please help me
I just jumped into my local code base of MailSniper and added this before every Invoke-WebRequest:

```
[Net.ServicePointManager]::SecurityProtocol = [Net.SecurityProtocolType]::Ssl3 -bor [Net.SecurityProtocolType]::Ssl2 -bor [Net.SecurityProtocolType]::Tls -bor [Net.SecurityProtocolType]::Tls11 -bor [Net.SecurityProtocolType]::Tls12
```

Been useful for engagements where the client has had older systems in play.
Using latest release (d/l today 7/11/2019) running under Powershell 5.1 on Win10, both elevated and non-elevated; on import-module I'm seeing multiple errors such as "'<' operator reserved for future use" and "ampersand (&) character not allowed", unexpected tokens, and missing file specs after redirection.  I'm sure it's something basic with powershell, perhaps it needs 32-bit vs 64-bit?  Need an older version?  Something to modify in source file?  Suggestions would be appreciated!

Thanks!
Steve
Updated Get_GlobalAddressList to use more granular queries in ResolveName, if required, to avoid incomplete results due to 100 result limit.
Output two likely domain names and modify regex to account for domain names containing underscores.

```
$base64decoded = [System.Text.Encoding]::Unicode.GetString([System.Convert]::FromBase64String($wwwheader[1]))
#Modify regex to match on underscores(x5F) to accomodate domain names like domain_name
$commasep = $base64decoded -replace '[^\x21-\x39\x41-\x5A\x61-\x7A\x5F]+', ','
$ntlmresparray = @()
$ntlmresparray = $commasep -split ','
#Include array index 4 as a viable domain name
Write-Host ("The domain appears to be: " + $ntlmresparray[4] + " or " +$ntlmresparray[7])
```
I am getting following error when running Invoke-PasswordSprayEWS
Invoke-PasswordSprayEWS -ExchHostname outlook.office365.com -UserList .\userlist.txt -Password P@ssw0rd -Threads 15 -OutFile ews-sprayed1.txt

Exception calling ".ctor" with "2" argument(s): "Cannot process argument because the value of argument "userName" is
not valid. Change the value of the "userName" argument and run the operation again."
    + CategoryInfo          : InvalidOperation: (:) [New-Object], MethodInvocationException
    + FullyQualifiedErrorId : ConstructorInvokedThrowException,Microsoft.PowerShell.Commands.NewObjectCommand
    + PSComputerName        : localhost

You cannot call a method on a null-valued expression.
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull
    + PSComputerName        : localhost

PS C:\demo> $psversiontable

Name                           Value
----                           -----
PSVersion                      5.1.17763.134
PSEdition                      Desktop
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}
BuildVersion                   10.0.17763.134
CLRVersion                     4.0.30319.42000
WSManStackVersion              3.0
PSRemotingProtocolVersion      2.3
SerializationVersion           1.1.0.1

in userlist.txt I have two usernames:
john.doe@mydomain.com
john.hutton@mydomain.com
Hi,

I came accross your tool a few days ago and it looks great. I'm having some trouble getting it to work though.
I'm currently testing with my AD user account, to ensure that it exists and works.
When I import the module and run the Invoke-SelfSearch command, I get this output:

PS C:\Users\***\Desktop\powershell\MailSniper> Invoke-SelfSearch -Mailbox test@example.com
[*] Trying Exchange version Exchange2010
[*] Autodiscovering email server for test@example.com
PS C:\Users\***\Desktop\powershell\MailSniper>

I tried setting the Exchange server explicitly, tried all the versions, etc. I don't get any additionnal output to point me in the right direction.

Do you have any ideas? Thanks!
PowerShell uses TLS 1.0 by default in older versions, which doesn't work with some websites. Apparently Microsoft is [enforcing TLS 1.2](https://support.microsoft.com/en-us/help/4057306/preparing-for-tls-1-2-in-office-365) moving forward on their services.

This update also fixes #63
Having some trouble with the module. looks like there is something missing in the code several places? 
![image](https://user-images.githubusercontent.com/15851625/45096605-3241a480-b121-11e8-8a14-e3ac9b6811e9.png)

![image](https://user-images.githubusercontent.com/6242741/45052101-b2d9a580-b03a-11e8-8513-b112d55e8ccd.png)

Haven't seen this one before - any ideas?