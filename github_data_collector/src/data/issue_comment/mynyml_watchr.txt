```
(master) % watchr ./koans/koans.watchr                                                        ~/Documents/ruby_koans
/home/bjorn/.gem/ruby/2.3.0/gems/watchr-0.7/lib/watchr.rb:111:in `handler': uninitialized constant #<Class:Watchr>::Config (NameError)
    from /home/bjorn/.gem/ruby/2.3.0/gems/watchr-0.7/bin/watchr:104:in `<top (required)>'
    from /home/bjorn/.gem/ruby/2.3.0/bin/watchr:22:in `load'
    from /home/bjorn/.gem/ruby/2.3.0/bin/watchr:22:in `<main>'

(master) [1] % ruby -v                                                                  ~/Documents/ruby_koans/koans
ruby 2.3.1p112 (2016-04-26 revision 54768) [x86_64-linux]
(master) % gem -v                                                                     ~/Documents/ruby_koans/koans
2.6.4

```

Hi all,

I just installed watcher (and ruby koans).

after

```
$ watchr koans.watchr
```

I have got this

```
.rvm/gems/ruby-2.2.1/gems/watchr-0.7/lib/watchr.rb:111:in `handler': 
uninitialized constant Module::Config (NameError)
```

I'm running Ubuntu 14.04 64 bit

I'm wondering if it's possible to rate limit watchr? It seems to me that if I make multiple changes my tests are going to be run multiple times so if I'm editing constantly (my IDE autosaves like many do now) I'm likely to have them constantly running (good for continuous testing, bad for local performance!). Ideally I'd like them to run a maximum of every 5 minutes or so, especially as our integration tests increase our tests take a while!

This will use RbConfig but will fallback to Config if RbConfig is not defined

The code is stale, but this gets it living.

Fixed use of deprecated "Config" by changing it to "RbConfig".
Used "relative_require" instead of "require" in watchr.gemspec.

Fix deprecation warning: 'Use RbConfig instead of obsolete and deprecated Config.'

Rule

```
watch( 'less/(.*)\.less' ) { |md| lessc md[0] }
```

I use vim, and set auto write all the files if vim lost focus .

```
au FocusLost * silent! wa
```

Please consider transferring this repo to someone who'd provide maintenance.

This link is broken: http://mynyml.com/ruby/flexible-continuous-testing

The following watchr file

``` ruby
system('echo')
Signal.trap 'QUIT' do
  system('echo')
end
```

Throws an exception when triggering the signal:

```
^\/Volumes/HDD/data/lucas/test/watchr/watchr.rb:3:in `system': native_thread_join() failed (11) (ThreadError)
    from /Volumes/HDD/data/lucas/test/watchr/watchr.rb:3:in `block in parse!'
    from /Volumes/HDD/data/lucas/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/gems/1.9.1/gems/ruby-fsevent-0.2.1/lib/fsevent/signal_ext.rb:19:in `call'
    from /Volumes/HDD/data/lucas/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/gems/1.9.1/gems/ruby-fsevent-0.2.1/lib/fsevent/signal_ext.rb:19:in `handle'
    from /Volumes/HDD/data/lucas/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/gems/1.9.1/gems/watchr-0.7/lib/watchr/event_handlers/darwin.rb:40:in `start'
    from /Volumes/HDD/data/lucas/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/gems/1.9.1/gems/watchr-0.7/lib/watchr/event_handlers/darwin.rb:40:in `listen'
    from /Volumes/HDD/data/lucas/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/gems/1.9.1/gems/watchr-0.7/lib/watchr/controller.rb:42:in `run'
    from /Volumes/HDD/data/lucas/.rvm/rubies/ruby-1.9.3-p194/lib/ruby/gems/1.9.1/gems/watchr-0.7/bin/watchr:104:in `<top (required)>'
    from /Volumes/HDD/data/lucas/.rvm/rubies/ruby-1.9.3-p194/bin/watchr:23:in `load'
    from /Volumes/HDD/data/lucas/.rvm/rubies/ruby-1.9.3-p194/bin/watchr:23:in `<main>'
```

I'm using `ruby 1.9.3p194 (2012-04-20 revision 35410) [x86_64-darwin10.8.0]` on Mac OS 10.6.8.
