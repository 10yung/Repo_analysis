Some questions about the ZeroTier Knowledgebase page: [Layer 2 Bridging of Ethernet and ZeroTier Networks on Linux
](https://zerotier.atlassian.net/wiki/spaces/SD/pages/7471125/Layer+2+Bridging+of+Ethernet+and+ZeroTier+Networks+on+Linux)
The wiki ask me to install bridge-utils.

but CentOS 8 [remove the package](https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html-single/considerations_in_adopting_rhel_8/index#removed-packages_changes-to-packages).
**Describe the bug**
A clear and concise description of what the bug is.

At least on Linux systems, when temporary ("privacy extensions") IPv6 addresses are enabled, ZeroTier continues to send path discovery messages from the deprecated (== primary lifetime expired) IP addresses.  ZeroTier should only source messages from non-expired IPv6 addresses.

Sourcing from these expired IPv6 entries means ZeroTier is sending ~7x the discovery frames as it needs to.  These also go to the ZeroTier root directory servers on the Public Internet, so are a needless waste of metered Internet bandwidth.  And during rolls to a new IPv6 prefix (as we just underwent), means ZeroTier sources from IP addresses that aren't even accessible in any way.

**To Reproduce**
Steps to reproduce the behavior:
Run zerotier on a Linux system with IPv6 privacy addresses enabled.  Wait a couple days so you get some deprecated addresses in your address table.  Run tcpdump filtering on port 9993 and observe ZeroTier sourcing path discovery from the expired addresses.

**Expected behavior**
ZeroTier should not source path discovery from expired IPv6 addresses.

**Desktop (please complete the following information):**
 - OS: Linux
 - OS/Distribution Version: CentOS 7 and 8
 - ZeroTier Version 1.4.6
As far as I understand it, the changes made in 52a166a to attempt to solve #990 made it so that _any_ NDP emulated address would count as valid source for an inbound packet, regardless of the sender node. 
Also, the output of ``_isV6NDPEmulated`` is only taken into account when marking inbound packets as ``ZT_RULE_PACKET_CHARACTERISTICS_SENDER_IP_AUTHENTICATED``, outbound packets from the 6plane /80 subnet (other than ::1) would not get this this flag and thus dropped by the sender before they can get validated by the reciever as authentitcated ([node/Network.cpp#387](https://github.com/zerotier/ZeroTierOne/compare/master...fakuivan:master#diff-ac28ce1f807c26308d3afa300bc5bee5L387)), I'm not sure the changes I made on that file are valid, so please provide feedback on this if possible.
**Describe the bug**
If a ZeroTier client's parent/upstream interface acquires an IP in same subnet as a ZT-defined managed route, ZT appears to remove the conflicting route.  Fine, (but not necessary?), but ZT client **does not re-add the route** if the parent subsequently acquires an IP in a different subnet (if parent roams **back out** of the 'managed route' network)

**Use Case**
Laptop that roams into/out of (work/home) the managed route subnet (work).  When I get home after being at the office, I have to cycle the ZT connection to get the managed route back.

**To Reproduce**
Steps to reproduce the behavior:
1. Connect **remotely** to a ZT network with managed route.
2. Observe successful connectivity (to remote subnet via managed route)
3. Roam ZT client/parent **into** the managed route subnet (parent interface is assigned/acquires IP inside ZT-defined managed route subnet)
4. Observe continued successful connectivity to "remote" (now local) subnet (ZT managed route is removed from parent's routing table)
5.  Roam ZT client/parent **out of** the managed route (parent interface is assigned/acquires IP **not** in the ZT-defined managed route subnet)
6. **ERROR: Observe loss of connectivity to now-remote (again) subnet (ZT managed route is still missing from parent's routing table)**
7. Disconnect/reconnect ZT network
8. Observe re-establishment of connectivity to remote subnet (ZT managed route is re-added to parent's routing table)
9. Get back to work.

**Expected behavior**
Connectivity to "remote" (via managed route) subnet remains successful/automatically re-establishes if parent interface roams into/out of the managed route subnet (no real need to remove the conflicting route in the first place if parent interface finds itself in the same subnet as ZT-defined managed route, except perhaps to avoid routing overhead - trivial for my use-case)

**Environment**
 - OS: macOS Catalina 10.15.2
 - ZeroTier Version 1.2.12

* #### Is your feature request related to a problem? Please describe.

There are currently 111 ZeroTier-related images on Docker Hub, with none of them belonging to the [ZeroTier dockerhub user](https://hub.docker.com/u/zerotier).  This can cause a lot of headaches for people that see 'Docker' listed on the downloads page, as they might pick a random image to use without checking if a version mismatch, whether the `Dockerfile` was modified from the origin source before building, etc.  

It also means there's not a good way to add an Unraid app template to the [ZeroTierNAS](https://github.com/zerotier/ZeroTierNAS) repo, as you'd be relying on a third party's docker image.  Having to double/triple check all these things to install a security-focused app is not ideal.
****
* #### Describe the solution you'd like

As mentioned, there's already a [Dockerfile](https://github.com/zerotier/ZeroTierOne/blob/master/ext/installfiles/linux/zerotier-containerized/Dockerfile) in the repo, so it would be nice if the container image creation/versioning/hosting were added to the existing CI pipeline.  That way there would be an image available with version/build parity to other releases, and it could be trusted.
****
* #### Describe alternatives you've considered

The other alternatives already exist (i.e. building/hosting a copy ourselves), which work, but are non-ideal IMO due to my previous concerns.
****
* #### Additional context

This process *could* be added to the `Jenkinsfile` (not sure how you're handling CI behind the scenes though), but adding a trigger in docker hub to build on a new release would be easiest.  Would just need to specify the `Build Context` since the `Dockerfile` isn't in the root directory.  Here are the triggers/regexes I use to set the image version (and `latest`) tags based on the `v1.2.3` naming scheme.  
*(Apologies if you already know all of this)*

<img src="https://user-images.githubusercontent.com/34850610/71767072-bc487b80-2ed5-11ea-956c-ba83a311ccc2.png" height=100x>
Hi all,

been using zerotier for a while on multiple raspberry pi's, windows and android.
My last Rapsberry Pi 4B i suddenly ran into some issues and im not sure where in the process it went wrong.

I cannot connect to the network, and i also get segment fail. And now it seems like the zerotier is going in loop? and i cannot stop it. Look at the ID each time i run ps aux. it changed to a higher ID.
And it just keeps rising.


pi@raspberrypi:~ $ ps aux | grep zerotier
pi        1469  0.0  0.0   3252  1612 pts/1    S+   01:21   0:00 grep --color=auto zerotier
pi@raspberrypi:~ $ ps aux | grep zerotier
pi        1471  0.0  0.0   3252  1700 pts/1    S+   01:21   0:00 grep --color=auto zerotier
pi@raspberrypi:~ $ ps aux | grep zerotier
pi        1473  0.0  0.0   3252  1616 pts/1    S+   01:21   0:00 grep --color=auto zerotier
pi@raspberrypi:~ $

How do i stop this? Ive tried all commands.
**To Reproduce**
Steps to reproduce the behavior:
1. Create a Network '...'
2. Install zerotier-one '....'
3. '....'
4. See error


**Screenshots**
![image](https://user-images.githubusercontent.com/12464091/71638960-7c508100-2ca8-11ea-9ff3-7aba0f2fe36c.png)


**Desktop (please complete the following information):**
 - OS: windows
 - OS/Distribution Version: Insider
 - ZeroTier Version [e.g. 1.4.6]




**Is your feature request related to a problem? Please describe.**
I have a global IPv6 /64 prefix on my physical LAN router and I would like to advertise it to my zerotier network so that every host gets ipv6 connectivity. Because the prefix is *subject to change* as it is distributed by my ISP, I cannot put it into Zerotier Central assignment pool.

So I set up a `radvd` daemon on the router and ask it to advertise the prefix to the zerotier interface. A few `tcpdump` shows that my host receives RA messages but the global ipv6 address that should have been generated by SLAAC does not show up.

**Describe the solution you'd like**
Make ipv6 address assignable by native RA/SLAAC method.

**Describe alternatives you've considered**
Adding the ipv6 address and route by hand/zerotier central.

I just downloaded ZeroTier One for android and I have configured my network properly.
However it says OFFLINE at the bottom and when I log into ZeroTier One it doesn't show it trying to connect. 

I have manually added my client to my network and it just says it's never connected.

I have tried the following:
1. Disconnected it on my phone and reconnected it (80+ times)
2. Uninstalled the app
3. Checked and unchecked Route Via ZeroTier
4. Checked and unchechecked Disable IPv6  (currently unchecked)
5. Quadriple checked the network id and it is accurate.
6. Quadriple checked the client id in zero tier that it is correct.

Yet it stays OFFLINE 1.4.4-1

Please help!
I am always using a VPN (mullvad) to browse the internet (for various reasons) but I know want to additionally use ZeroTier to access my smb shares on my server (in another physical location).
I general it works well, but I always get "TUNNELING" or "OFFLINE" when using mullvad.

Since my understanding of VPNs and the technology used in ZeroTier is limited, I don't know what kind of settings to look for, to make this work side-by-side.

