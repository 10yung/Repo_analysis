Because `gpg-suite` is no longer supported for El Capitan 10.11, homebrew-bundle will return with a failure and exit the entire script without continuing through the rest of the install.

This is solved by removing `gpg-suite` from the brewfile portion of the script. This does not seem to affect the requirement of [asdf-nodejs](https://github.com/asdf-vm/asdf-nodejs#macos) as it will auto-resolve the dependency with `brew install gpg`. 
`asdf` was available as a `brew` formula before it was introduced here. Why not install it with `brew`?
Currently most developers have picked up a stack to work on, usually employing the use of a front-end framework such as that of React or Angular or Vue. These could be a good addition to this setup.

we could install npm packages or cli tools for whichever language a developer prefers or whatever is available, don't how to work on this per say but could be a good exploration option.

Any thoughts ?
I keep getting an error in the `append_to_zshrc` function saying 

`Users/me/.zshrc: Permission denied`

Readout from home `ls -la` shows

**lrwxr-xr-x 1 me staff .... /zshrc -> /zshrc**

Any ideas what the issue here may be?

Thank you.
- The plugin autodecrypts messages, which exposes users to EFAIL vulnerability.
- https://efail.de/
- https://www.eff.org/deeplinks/2018/05/attention-pgp-users-new-vulnerabilities-require-you-take-action-now

[Closes #531]
Hey friends, researchers have found a vulnerability that prompted EFF to make this recommendation:

> Our advice, which mirrors that of the researchers, is to immediately disable and/or uninstall tools that automatically decrypt PGP-encrypted email. Until the flaws described in the paper are more widely understood and fixed, users should arrange for the use of alternative end-to-end secure channels, such as Signal, and temporarily stop sending and especially reading PGP-encrypted email.

https://www.eff.org/deeplinks/2018/05/attention-pgp-users-new-vulnerabilities-require-you-take-action-now

The laptop script includes gpg-suite. From what I can tell, gpg-suite autodecrypts emails by default.
When I try to install laptop, I get this error message when installing Homebrew:

    ==> Downloading and installing Homebrew...
    error: cannot fork() for git-remote-https: Resource temporarily unavailable
    Failed during: git fetch origin master:refs/remotes/origin/master --tags --force
    failed

I'm trying to install the script on MacOs High Sierra

thanks for your help,

Anthony
I have a fresh client computer running Sierra 10.12.6, when I run the script:

```
$ sh mac 2>&1 | tee ~/laptop.log

Changing your shell to zsh ...
Password:
Changing shell for dashboard.
chsh: no changes made

Updating Homebrew formulae ...
Already up-to-date.
==> Tapping homebrew/bundle
Cloning into '/usr/local/Homebrew/Library/Taps/homebrew/homebrew-bundle'...
Tapped 0 formulae (130 files, 173.4KB)
Tapping thoughtbot/formulae
Tapping homebrew/services
Tapping universal-ctags/universal-ctags
Tapping caskroom/cask

Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing universal-ctags has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing git has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing openssl has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing rcm has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing reattach-to-user-namespace has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing the_silver_searcher has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing tmux has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing vim has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing watchman has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing zsh has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing heroku has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing parity has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing hub has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing imagemagick has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing qt@5.5 has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing libyaml has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing coreutils has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing yarn has failed!
Installing gpg-suite
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing postgres has failed!
Error: Xcode alone is not sufficient on Sierra.
Install the Command Line Tools:
  xcode-select --install

Installing redis has failed!
Homebrew Bundle failed! 20 Brewfile dependencies failed to install.
failed
```

Do you think it's a good idea to install XCode command line tools at the beginning of `Mac` script?

```
xcode-select --install
```
Related to #507 .

❤️ laptop and ThoughtBot open source. It would be really nice to have a clear sense of what has changed. I happened to notice in the README that this project switched to using `asdf` which is cool, but I'll have to dig through the commits to see what else has changed since last I used laptop.

May I suggest adding a PR template with a checklist item of updating the changelog?
I have downloaded and installed this script on an existing user on a Mac and everything works fine but then when I try to install the zsh shell and rerun the installation on a new user on the same Mac with the same Administrative rights it comes back with permission errors:

```
Updating Homebrew formulae ...
touch: /usr/local/Homebrew/.git/FETCH_HEAD: Permission denied
error: cannot open .git/FETCH_HEAD: Permission denied
/usr/local/Homebrew/Library/Homebrew/cmd/update.sh: line 520: /usr/local/Homebrew/.git/UPDATE_FAILED: Permission denied
touch: /usr/local/Homebrew/Library/Taps/caskroom/homebrew-cask/.git/FETCH_HEAD: Permission denied
touch: /usr/local/Homebrew/Library/Taps/homebrew/homebrew-bundle/.git/FETCH_HEAD: Permission denied
error: cannot open .git/FETCH_HEAD: Permission denied
/usr/local/Homebrew/Library/Homebrew/cmd/update.sh: line 520: /usr/local/Homebrew/.git/UPDATE_FAILED: Permission denied
touch: /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core/.git/FETCH_HEAD: Permission denied
error: cannot open .git/FETCH_HEAD: Permission denied
/usr/local/Homebrew/Library/Homebrew/cmd/update.sh: line 520: /usr/local/Homebrew/.git/UPDATE_FAILED: Permission denied
error: cannot open .git/FETCH_HEAD: Permission denied
touch: /usr/local/Homebrew/Library/Taps/homebrew/homebrew-services/.git/FETCH_HEAD: Permission denied
error: cannot open .git/FETCH_HEAD: Permission denied
/usr/local/Homebrew/Library/Homebrew/cmd/update.sh: line 520: /usr/local/Homebrew/.git/UPDATE_FAILED: Permission denied
/usr/local/Homebrew/Library/Homebrew/cmd/update.sh: line 520: /usr/local/Homebrew/.git/UPDATE_FAILED: Permission denied
touch: /usr/local/Homebrew/Library/Taps/thoughtbot/homebrew-formulae/.git/FETCH_HEAD: Permission denied
error: cannot open .git/FETCH_HEAD: Permission denied
/usr/local/Homebrew/Library/Homebrew/cmd/update.sh: line 520: /usr/local/Homebrew/.git/UPDATE_FAILED: Permission denied
touch: /usr/local/Homebrew/Library/Taps/universal-ctags/homebrew-universal-ctags/.git/FETCH_HEAD: Permission denied
error: cannot open .git/FETCH_HEAD: Permission denied
/usr/local/Homebrew/Library/Homebrew/cmd/update.sh: line 520: /usr/local/Homebrew/.git/UPDATE_FAILED: Permission denied
fatal: Unable to create '/usr/local/Homebrew/.git/index.lock': Permission denied
error: could not lock config file .git/config: Permission denied
error: could not lock config file .git/config: Permission denied
error: could not lock config file .git/config: Permission denied
error: could not lock config file .git/config: Permission denied
error: could not lock config file .git/config: Permission denied
error: could not lock config file .git/config: Permission denied
error: could not lock config file .git/config: Permission denied

Already up-to-date.
Using thoughtbot/formulae
Using homebrew/services
Using universal-ctags/universal-ctags
Using caskroom/cask
Using universal-ctags
Using git
Using openssl
Using rcm
Using reattach-to-user-namespace
Using the_silver_searcher
Using tmux
Using vim
Using watchman
Using zsh
Using heroku
Using parity
Using hub
Using imagemagick
Using qt@5.5
Using libyaml
Using coreutils
Using yarn
Using gpg-suite
Using postgres
Using redis
Homebrew Bundle complete! 25 Brewfile dependencies now installed.

Symlink qmake binary to /usr/local/bin for Capybara Webkit...
Error: Permission denied @ unlink_internal - /usr/local/lib/cmake/Qt5
Unlinking /usr/local/Cellar/qt@5.5/5.5.1_1... failed
```

I'm currently not able to use the new shell installed by the laptop script on the new User on my Mac.