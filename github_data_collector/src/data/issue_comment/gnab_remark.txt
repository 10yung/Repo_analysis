There are a couple of solutions proposed in #605 to make the list of contributors look prettier (e.g. number of contributions, Github repos etc.). 

As part of this issue, we could make the list look better and if possible automate it, so it gets updated automatically. 
I'm wanting to use some nested class and increment elements using `{{content}}` via a template slide. However, it seems like remark has some trouble with this. The incrementing works on its own, and the nested class elements work on their own, but these two don't work together. See this MWE:

```
<!DOCTYPE html>
<html xmlns="http://www.w3.org/1999/xhtml" lang="" xml:lang="">
    <head>
        <title>Issues with Incremental Slides</title>
        <meta charset="utf-8" />
        <script src="libs/jquery-1.11.3/jquery.min.js"></script>
        <script src="libs/elevate-section-attrs-2.0/elevate-section-attrs.js"></script>
        <link href="libs/remark-css-0.0.1/default.css" rel="stylesheet" />
        <link href="libs/remark-css-0.0.1/default-fonts.css" rel="stylesheet" />
        <style>
         .mark {
             background-color: yellow;
         }

        </style>
    </head>
    <body>
        <textarea id="source">

## Highlight/increment demo

.right-column[
Incrementing works fine within classes, like `right-column`.

+ One `Markdown` bullet point
{{content}}

]

--

+ A second bullet point
{{content}}

--

    + Nested point

---

## Highlight/increment demo

.right-column[
Using a nested class like `mark` for highlighting within a class like `right-column` also works fine.

+ One `Markdown` bullet point

+ A .mark[second] bullet point

    + Nested point
]

---

## Highlight/increment demo

.right-column[
Combining the two does not work:

+ One `Markdown` bullet point
{{content}}

]

--

+ A .mark[second] bullet point
{{content}}

--

    + Nested point
                    </textarea>
                    <script src="https://remarkjs.com/downloads/remark-latest.min.js">
                    </script>
                    <script>
                     var slideshow = remark.create();
                    </script>
                </body>
            </html>
```

The issue is that in the last example, where  the word `second` should appear highlighted (in the second bullet point), it has been replaced with `,[object Object]`. So it should be

- One `Markdown` bullet point
- A second bullet point
  - Nested point

But it is actually
- One `Markdown` bullet point
- A ,[object, Object], bullet point
  - Nested point

It seems like remark has a hard time parsing the custom css class and putting it into the `{{content}}` place holder.
 


Hello everyone! 

Since the last release of remark (v.0.14.0) was on Sep 15. 2016, I think it would be appropriate to cut a new release :) 

I would like to use this issue to track any work that's needed in order to do the release (@gnab, it would be great if you take a quick look at it as well, just in case I've missed anything).

- [x] PR to master + merge
- [x] Create a new Github release from master with tag 0.15.0
- [x] Commit the new remark-0.15.0.min.js to `gh-pages` branch (`downloads` folder)
- [X] Write and update release notes (`HISTORY.md`) (PR: #609)
- [ ] As part of the release notes update, we should also review the Wiki to make sure it's up-to-date with the features
- [X] Update the list of contributors (PR: https://github.com/gnab/remark/pull/605)
- [ ] Update `index.html` in `gh-pages` branch - update demo slideshow with new features 

I've probably missed something, so please feel free to comment & add more to this. 


Pull-request #596 introduces a new implementation for the timer. It allows for a custom formatter. With this formatter one can implement a decreasing timer.

Unfortunately this requires to provide custom code, which is error prone and maybe not everybody that wants to use remark is capable to provide it.

This is a request for a new feature: *allow to configure the timer to be decreasing with certain target time.*
A [code of conduct](https://en.wikipedia.org/wiki/Code_of_conduct)

> A code of conduct is a set of rules outlining the norms, rules, and responsibilities of, and or proper practices for, an individual.

Currently this project is missing one. This could alienate a lot of people. E.g. the [comment](https://github.com/gnab/remark/issues/553#issue-394036139) on issue #553 isn't constructive and can zap the energy of maintainers.

A code of conduct could help in delineate what is acceptable behavior and provide directions how to deal with persons that violate the code of conduct. 
While I was working on issue #195 I have read into the Mozilla's Developer Network (MDN) documentation on the [keypress event](https://developer.mozilla.org/en-US/docs/Web/API/Document/keypress_event). It reports that the event is deprecated.

> This feature is no longer recommended. Though some browsers might still support it, it may have already been removed from the relevant web standards, may be in the process of being dropped, or may only be kept for compatibility purposes. Avoid using it, and update existing code if possible; see the compatibility table at the bottom of this page to guide your decision. Be aware that this feature may cease to work at any time.
It would be nice to be able to escape math delimiters, so I can show LaTeX code in the presentation. 

It seems the dollar sign can't be escaped, so I can't write 

\\$\gamma\\$

and have it render as $\gamma$.

While I can write \\\\\\\[ to render \\[, having an escaped opening math delimiter that is followed by an escaped closing math delimiter doesn't work.  

Thus, while the preceding example works,  \\\\\\\[\gamma\\\\\\\] does not render \\[\gamma\\].  This appears to be a bug. 

The same applied for \\(\\).



I find putting backticks around block-displayed LaTeX code doesn't render using either MathJax 3 or KaTeX, for example

`$$\Gamma$$`
`\[\Gamma\]`

However rather than backticks you can just enclose the LaTeX code in a div.  This works fine provided the div begins within 3 spaces of a newline, that only spaces follow the end of the div, and that the line following the div is blank. 

Previously I used MathJax 2.X and then the backticks worked 

The thought here is that creating inconsistent HTML is something I can live with in exchange for GFM-support.
When presenting, I like to have one window opened with slides + notes (presenter view) and the second window with the slides only (this is what the audience sees). To do this today you need to disable screen mirroring and then move one window to the projector and another one (with notes) to your laptop). This works, however, sometimes I do demos and like to switch to the terminal or a different window. This means that I need to turn on screen mirroing, do the demo, then switch back to separate displays.

Does anyone know if there's a way in Javascript to detect that screens are being mirrored and set up the presenter view accordingly (i.e. main screen with the presentation only and laptop screen with slides + notes)? 


