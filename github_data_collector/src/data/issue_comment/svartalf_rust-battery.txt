
Updates the requirements on [cbindgen](https://github.com/eqrion/cbindgen) to permit the latest version.
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href="https://github.com/eqrion/cbindgen/blob/master/CHANGES">cbindgen's changelog</a>.</em></p>
<blockquote>
<h2>0.12.2</h2>
<pre><code> * Fixed version detection with lockfile v2. https://github.com/eqrion/cbindgen/pull/446
 * Added support for export_name on functions. https://github.com/eqrion/cbindgen/pull/447
</code></pre>
<h2>0.12.1</h2>
<pre><code> * Added support for #[repr*64)] on enums. https://github.com/eqrion/cbindgen/pull/441
 * Added support to generate plain enums instead of enum classes for C++. https://github.com/eqrion/cbindgen/pull/443
 * Fixed dependency resolution with lockfile v2. https://github.com/eqrion/cbindgen/pull/438
</code></pre>
<h2>0.12.0</h2>
<pre><code> * Added support for #[repr(align)] and #[repr(packed)] on structs and unions. https://github.com/eqrion/cbindgen/pull/431
 * Added support to generate copy-assignment operators for enums. https://github.com/eqrion/cbindgen/pull/434
</code></pre>
<h2>0.11.1</h2>
<pre><code> * More binary operators and expressions are supported. https://github.com/eqrion/cbindgen/pull/425
 * More built-in bitflags operators. https://github.com/eqrion/cbindgen/pull/426
</code></pre>
<h2>0.11.0</h2>
<pre><code> * Made rust char map to uint32_t. https://github.com/eqrion/cbindgen/pull/424
</code></pre>
<h2>0.10.1</h2>
<pre><code> * Improved error message for missing config file. https://github.com/eqrion/cbindgen/pull/422
 * Add missing header for char32_t. https://github.com/eqrion/cbindgen/pull/414
</code></pre>
<h2>0.10.0</h2>
<pre><code> * Initialize struct literal with list-initializer for C++11 standard. https://github.com/eqrion/cbindgen/pull/401
 * Surround namespace with __cplusplus ifdef in cpp_compat mode. https://github.com/eqrion/cbindgen/pull/407
 * Add support for --quiet flag. https://github.com/eqrion/cbindgen/pull/400
 * Map char to char32_t. https://github.com/eqrion/cbindgen/pull/396
 * Improve binding_crate_ref() error message. https://github.com/eqrion/cbindgen/pull/395
 * avoid prematurely returning during expansion. https://github.com/eqrion/cbindgen/pull/389
 * Add support for adding &quot;using namespace&quot; statements. https://github.com/eqrion/cbindgen/pull/387
</code></pre>
<h2>0.9.1</h2>
<pre><code> * Various improvements to comment output. https://github.com/eqrion/cbindgen/pull/370 / https://github.com/eqrion/cbindgen/pull/375.
 * Fixed expand when ran from build.rs. https://github.com/eqrion/cbindgen/pull/371
 * More debugging output for expansion. https://github.com/eqrion/cbindgen/pull/383
 * New option to add a default private constructor in C++ tagged enums. https://github.com/eqrion/cbindgen/pull/377
 * Syn and related dependencies updated to 1.0. https://github.com/eqrion/cbindgen/pull/379
</code></pre>
<h2>0.9.0</h2>
</tr></table> ... (truncated)
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/eqrion/cbindgen/commit/ac1a7d47e87658cf36cb7e56edad7fa5f935dddd"><code>ac1a7d4</code></a> Release 0.12.2</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/8fabbfa4b5a312ee0f92c25948a6b78a05ba2e34"><code>8fabbfa</code></a> Fix for finding dependency version in lockfile v2</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/3639d6b23a1fd167ce60b2c3a4bdf6daa427f00b"><code>3639d6b</code></a> Remove some dead code.</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/9df58e7ecdd7e78bcd43b9bb0c638ec99d68590c"><code>9df58e7</code></a> Add support for the export_name function attribute</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/f5d76c44c466b47d1c776acd9974df838f30d431"><code>f5d76c4</code></a> Release v0.12.1</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/f03252cffce668d36d7fbcd1c0b019446e9cfdba"><code>f03252c</code></a> Fix dependency resolution with lockfile v2.</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/0a80f0716dadb192c8e633d4aec27bc986654620"><code>0a80f07</code></a> Commit the expectations of the testcase that used to panic.</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/b912c04a7d18f26aa664efa85bbfeee60627f491"><code>b912c04</code></a> Add a test for expanding dependencies with Cargo.lock v2, with both conflicti...</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/6a9066f7cd7f7decf25b4d19c5f41bb99cdf08da"><code>6a9066f</code></a> Add enum_class option</li>
<li><a href="https://github.com/eqrion/cbindgen/commit/16fe3ec142653277d5405d9a6d25914d925c9c3c"><code>16fe3ec</code></a> Update to rust 2018.</li>
<li>Additional commits viewable in <a href="https://github.com/eqrion/cbindgen/compare/v0.10.0...v0.12.2">compare view</a></li>
</ul>
</details>
<br />


Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
Updates the requirements on [nix](https://github.com/nix-rust/nix) to permit the latest version.
<details>
<summary>Changelog</summary>

*Sourced from [nix's changelog](https://github.com/nix-rust/nix/blob/master/CHANGELOG.md).*

> ## [0.16.0] - 1 December 2019
> ### Added
> - Added `ptrace::seize()`: similar to `attach()` on Linux
>   but with better-defined semantics.
>   (#[1154](https://github-redirect.dependabot.com/nix-rust/nix/pull/1154))
> 
> - Added `Signal::as_str()`: returns signal name as `&'static str`
>   (#[1138](https://github-redirect.dependabot.com/nix-rust/nix/pull/1138))
> 
> - Added `posix_fallocate`.
>   ([#1105](https://github-redirect.dependabot.com/nix-rust/nix/pull/1105))
> 
> - Implemented `Default` for `FdSet`
>   ([#1107](https://github-redirect.dependabot.com/nix-rust/nix/pull/1107))
> 
> - Added `NixPath::is_empty`.
>   ([#1107](https://github-redirect.dependabot.com/nix-rust/nix/pull/1107))
> 
> - Added `mkfifoat`
>   ([#1133](https://github-redirect.dependabot.com/nix-rust/nix/pull/1133))
> 
> - Added `User::from_uid`, `User::from_name`, `User::from_gid` and
>   `Group::from_name`,
>   ([#1139](https://github-redirect.dependabot.com/nix-rust/nix/pull/1139))
> 
> - Added `linkat`
>   ([#1101](https://github-redirect.dependabot.com/nix-rust/nix/pull/1101))
> 
> - Added `sched_getaffinity`.
>   ([#1148](https://github-redirect.dependabot.com/nix-rust/nix/pull/1148))
> 
> - Added optional `Signal` argument to `ptrace::{detach, syscall}` for signal
>   injection. ([#1083](https://github-redirect.dependabot.com/nix-rust/nix/pull/1083))
> 
> ### Changed
> - `sys::termios::BaudRate` now implements `TryFrom<speed_t>` instead of
>   `From<speed_t>`.  The old `From` implementation would panic on failure.
>   ([#1159](https://github-redirect.dependabot.com/nix-rust/nix/pull/1159))
> 
> - `sys::socket::ControlMessage::ScmCredentials` and
>   `sys::socket::ControlMessageOwned::ScmCredentials` now wrap `UnixCredentials`
>   rather than `libc::ucred`.
>   ([#1160](https://github-redirect.dependabot.com/nix-rust/nix/pull/1160))
> 
> - `sys::socket::recvmsg` now takes a plain `Vec` instead of a `CmsgBuffer`
>   implementor.  If you were already using `cmsg_space!`, then you needn't worry.
>   ([#1156](https://github-redirect.dependabot.com/nix-rust/nix/pull/1156))
> 
> - `sys::socket::recvfrom` now returns
>   `Result<(usize, Option<SockAddr>)>` instead of `Result<(usize, SockAddr)>`.
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- See full diff in [compare view](https://github.com/nix-rust/nix/commits/v0.16.0)
</details>
<br />

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
Current Linux implementation is probing multiple files in order to fetch one specific value; for example, in order to get the `design voltage` parameter, four files will be opened consequently: "voltage_max_design", "voltage_min_design", "voltage_present" and the "voltage_now".

Even while all files are located at the `sysfs` filesystem and read operations from it are very quick, for a worse case scenario there will be three unnecessary `open` syscalls (assuming the `Manager::refresh` method calls, as `battop` does).

`Battery` instance should remember which file was opened successfully during the previous information update and should open it directly on a next "refresh" call.
Yet, it is important to remember that some Linux drivers can remove or add these files on a fly, so, in case of failure, consequent probing should be started again.

In a result, it should reduce syscalls amount vastly.
[This](https://github.com/svartalf/rust-battop/issues/8) `battop` issue had introduced the case, when the `Battery` struct instance can represent the missing device. While it is possible now to handle that case (see #29), this kind of error seems to be a recoverable type of error for library users (mostly to the `battop` at the moment), because it can be handled (for example, by removing the device from the batteries list).

`battery::Error` can be reworked as an `enum` with the "recoverable" and "non-recoverable" members, smth like this:

```rust
enum Error {
    /// Battery device is missing now
    Gone(io::Error),
    /// Some error happened during the information fetch
    Other(io::Error),
}
```

As someone whose computer is connected via USB to an external power supply, I would love to be able to monitor its status from within battop. However it doesn't appear in the sysfs and as such is invisible to this library. Being able to support more types of batteries and power supplies should be a worthy goal for this type of library, but I don't know how much effort it would take to implement.
This is a tracking issue for Solaris support.
This is a tracking issue for NetBSD support.
This is a tracking issue for OpenBSD support.
`battery-ffi` crate is using `crate-type=cdylib` for builds, which is incompatible with musl targets.