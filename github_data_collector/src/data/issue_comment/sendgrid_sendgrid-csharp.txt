I'm getting an error with the latest nuget version in an ASP.Net Web API application: 

Could not load file or assembly 'SendGrid, Version=9.12.5.0, Culture=neutral, PublicKeyToken=4f047e93159395ca' or one of its dependencies. Strong name signature could not be verified.  The assembly may have been tampered with, or it was delay signed but not fully signed with the correct private key. (Exception from HRESULT: 0x80131045)]

#### Technical details:

* sendgrid-csharp Version: nuget 9.12.5
* Platform ASP.Net Web API
* .NET Version: 4.7

Fixes #910 

### Checklist
- [x] I acknowledge that all my contributions will be made under the project's license
- [ ] I have made a material change to the repo (functionality, testing, spelling, grammar)
- [x] I have read the [Contribution Guide] and my PR follows them.
- [x] I updated my branch with the development branch.
- [ ] I have added tests that prove my fix is effective or that my feature works
- [ ] I have added necessary documentation about the functionality in the appropriate .md file
- [ ] I have added in line documentation to the code I modified

### Short description of what this PR does:
- Removes the character set from the content headers

When we disabled TLS 1.0 on our servers, the API starts to fail.
How can we set API to connect with TLS 1.2?
Trying to use the C# API (current version) and when ever we promote to the hosting service, no mail is sent and we get this error;

An error occurred while sending the request

Works just fine on my development client locally. Any idea of what could be blocked on the server that stops mail from going through? Here's the complete error message with a stack trace;

SENDGRID MAIL: CreateSingleEmailToMultipleRecipient, MESSAGE: An error occurred while sending the request. STACK TRACE: at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at SendGrid.Helpers.Reliability.RetryDelegatingHandler.d__4.MoveNext() in C:\Users\elmer\Documents\GitHub\sendgrid-csharp\src\SendGrid\Reliability\RetryDelegatingHandler.cs:line 56 --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at System.Net.Http.HttpClient.d__58.MoveNext() --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at SendGrid.SendGridClient.d__24.MoveNext() in C:\Users\elmer\Documents\GitHub\sendgrid-csharp\src\SendGrid\SendGridClient.cs:line 194 --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at SendGrid.SendGridClient.d__25.MoveNext() in C:\Users\elmer\Documents\GitHub\sendgrid-csharp\src\SendGrid\SendGridClient.cs:line 245 --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at SendGrid.SendGridClient.d__26.MoveNext() in C:\Users\elmer\Documents\GitHub\sendgrid-csharp\src\SendGrid\SendGridClient.cs:line 256 --- End of stack trace from previous location where exception was thrown --- at System.Runtime.CompilerServices.TaskAwaiter.ThrowForNonSuccess(Task task) at System.Runtime.CompilerServices.TaskAwaiter.HandleNonSuccessAndDebuggerNotification(Task task) at CVPW.Web.Models.SMTPSendGridMgr.d__8.MoveNext() in P:\SourceCode-2018\CVPW-MVC\CVPW-Mvc\CVPW.Web\Models\SMTPSendGridMgr.cs:line 115 
#### Issue Summary

Created a new project in VSTS 2017 and added the latest  SendGrid NuGet package. 
Upon using the C# sample code from SendGrid the code breaks with the below information.

-		$exception	{"Could not load file or assembly 'SendGrid, Version=9.12.0.0, Culture=neutral, PublicKeyToken=4f047e93159395ca' or one of its dependencies. The located assembly's manifest definition does not match the assembly reference. (Exception from HRESULT: 0x80131040)":"SendGrid, Version=9.12.0.0, Culture=neutral, PublicKeyToken=4f047e93159395ca"}	System.IO.FileLoadException

#### Issue Summary

problem related to the inbound parse webhook functionality offered by SendGrid.
However,  After a lot of searching I found out that if the mail is sent from e.g. hotmail or Outlook (or the like), Å Ä Ö is replaced by question marks.


* sendgrid-csharp Version: 9.5.0
* Platform (ASP.NET)
* .NET Version: 4.5.2

#### Issue Summary

There's no way to implement SendGrid using this library when the core project is not using async?

#### Technical details:

* sendgrid-csharp Version: 9.12.0
* Platform ASP.NET Core
* .NET Version: 4.5.2

#### Issue Summary
Tracking issue for #924 and #947 

As explained in the pull request, it is useful to be able to test `internal` members in the `SendGridClient` for regression testing.

Adding `InternalsVisibleTo` to the `assembly` attribute allows us to use internal members for testing purposes.
# Companion PR for #924  # 

This is a PR that acts as a companion to #924, by allowing tests to be written for `internal` members of the client. Without it, we can either not write unit tests for internal code at all, and forego regression tests, or expose the APIs as public. Neither of these options seems very attractive, hence this PR introduces a third option.

In order for `InternalsVisibleTo` to work, any assembly it exposes its internals too must be strong signed, hence the tests project is now strongly signed with the same key as the SendGridClient project.

### Checklist
- [x] I acknowledge that all my contributions will be made under the project's license
- [x] I have made a material change to the repo (functionality, testing, spelling, grammar)
- [x] I have read the [Contribution Guide] and my PR follows them.
- [x] I updated my branch with the development branch.
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] I have added necessary documentation about the functionality in the appropriate .md file
- [x] I have added in line documentation to the code I modified

### Short description of what this PR does:
- Sign SendGrid.Tests
- Expose SendGridClient internals to SendGrid.Tests

Small PR that changes `default(T)` usages to C# 7 style `default` literals.

### Checklist
- [x] I acknowledge that all my contributions will be made under the project's license
- [x] I have made a material change to the repo (functionality, testing, spelling, grammar)
- [x] I have read the [Contribution Guide] and my PR follows them.
- [x] I updated my branch with the development branch.
- [x] I have added tests that prove my fix is effective or that my feature works
- [x] I have added necessary documentation about the functionality in the appropriate .md file
- [x] I have added in line documentation to the code I modified

### Short description of what this PR does:
-  change `default(T)` usages to C# 7 style `default` literals
