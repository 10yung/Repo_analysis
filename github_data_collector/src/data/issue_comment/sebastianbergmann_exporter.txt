- [ ] Use GitHub Actions instead of Travis CI
- [x] Have Composer in `tools/composer` and managed through `composer self-update` (see `update-tools` target in [build.xml](https://github.com/sebastianbergmann/phpunit/blob/655558a622e9cfa67f376b2fd640635a72eac6e3/build.xml#L408)
- [x] Install Psalm using [Phive](https://phar.io/) as `tools/psalm` (`phive install --copy psalm`)
- [x] Install PHP-CS-Fixer using [Phive](https://phar.io/) as `tools/php-cs-fixer` (`phive install --copy php-cs-fixer`)
- [x] Create Psalm configuration
- [ ] Add Psalm build step to GitHub Actions-based CI workflow
- [ ] Add PHP-CS-Fixer build step to GitHub Actions-based CI workflow

I got this exception:

`Uncaught TypeError: str_repeat() expects parameter 2 to be integer, float given in /Users/loevgaard/PhpstormProjects/SyliusStockMovementPlugin/vendor/sebastian/exporter/src/Exporter.php:255`

and fixed it by doing this small change.
This PR updates the required version of PHPUnit and fixes an issue due to PHPUnit 7 (missing required attribute).
Note: this PR drops the compatibility with PHP 7.0, so it is normal that the Travis CI fails on PHP 7.0.
Currently, Prophecy contains a (outdated) copy of the exporter, altered to avoid dumping the internals of Prophecy objects, to make the export much more readable.
It would be great to support such feature in this library directly, allowing Prophecy to use it instead of copying it (making maintenance much easier). See https://github.com/phpspec/prophecy/issues/296#issuecomment-261772701 for the discussion about it.

See https://github.com/phpspec/prophecy/blob/5c324f4951aca87a2de61b7903b75126516b6386/src/Prophecy/Util/ExportUtil.php#L184 for the current implementation.
_This PR implements this and is meant as a starting point for discussion._

Not necessarily the final implementation yet but it would be quite handy to have shortenedExport() not only show ... for object properties if the class in question implements __toString.

I didn't add a test for it yet as I'm not sure where to place the code for the dummy class that would implement __toString()?
