我看代码里面是用的new Audio(),是不是应该在页面创建<audio>节点啊

官方DEMO 在新版UC（V10.9.3.727）中播放无时间进度和时间时长；

对比了官方的百度音乐、虾米音乐、酷狗音乐 发现在新版UC上都不能显示播放的时间进度（有的歌曲时长也取不到）

我用官方的例子demo的第一段代码无法播放歌曲？是什么原因？

您好：请教一个问题，我在写浏览端网页时遇到2个不懂得地方，请教一下
1)Player.add('1.mp3','2.mp3');当播放1.mp3时调用player.setCur('2.mp3').
为什么2.mp3会播放两次,
2)引入1.0.0的版本之后为什么一开始播放Player.getState()='suspend'并且不能播放,是不是player的初始化我搞错了，但是我看你们的文档没有进行更新呀，还是我看的是以前的文档，附地址http://labs.music.baidu.com/demo/muplayer/doc/api.html

一直在等待中。。。

在ie 6, 7等不支持audio的浏览器上，如果没装flash环境，现在setUrl时会抛异常，但不是很好的解决方法。应该在初始化时就判断， 如果 `player.engine.engines.length === 0 && $.flash.available === false` ，就应抛出报错事件。

具体的判断时机可以是：https://github.com/Baidu-Music-FE/muplayer/blob/master/src/js/core/engines/engine.coffee#L51-55

想问问muplayer支持获取歌曲元数据的功能吗？因为我打算从歌曲的元数据中获取出歌曲名称和音乐家名称

flash 内核在暂停的时候不会派发 progress 事件，而这时还在缓冲。audio 内核正常。

以下演示代码，可以切换不同内核播放暂停看看进度条

``` html
<body>
    <button id="pause">暂停</button>
    <button id="play">播放</button>
    <div style="width:300px;height:10px;background:#ccc;">
        <div id="progress" style="width:0;height:10px;background:#6cf;"></div>
    </div>

<script>
var flashMP3Core = {
    constructor: 'FlashMP3Core',
    args: {
        swf: 'muplayer_mp3.swf?' + +new Date(),
        expressInstaller: 'expressInstall.swf'
    }
},
flashMP4Core = {
    constructor: 'FlashMP4Core',
    args: {
        swf: 'muplayer_mp4.swf?' + +new Date(),
        expressInstaller: 'expressInstall.swf'
    }
},
audioCore = {
    constructor: 'AudioCore'
};

var player = new _mu.Player({
    baseDir: '/',
    absoluteUrl: false,
    engines: [flashMP3Core/* audioCore */]
});

player.on('progress', function(per){
    console.log(per);
    $('#progress').css('width', per*100+'%');
})

$('#play').click(function(){
    player.play();
});

$('#pause').click(function(){
    player.pause();
});

player.add('//bs.baidu.com/lebo18/data2/music/7995224/7995224.mp3?xcode=0f1cb5226655fe9125e169321c1400f7ec59801e43c73961&sign=MBO:eJoqfLcbQdeO4Ienql6d8Matif5bip:/0eQ2S9K4ulWqY9dKJNNSRaWwz0%3D').play();
</script>
</body>
```

编译脚本的spawn执行node_modules/.bin中的命令时，没有进行win平台的适配，执行.cmd（如coffee.cmd）文件，因此无法在window环境下编译。建议在定义bin文件路径变量时增加平台判断

比如使用 browserify 后可以直接使用 node 的 event 的库实现事件的部分而不需要考虑依赖问题。browserify 会自动把轻量的 event 实现插入到编译的代码中。很多其他 node 的库都可以直接使用。
