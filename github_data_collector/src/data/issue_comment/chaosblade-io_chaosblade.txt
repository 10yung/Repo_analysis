**Issue Description**
```
[root@kube-master-192-168-131-12 ~/chaosblade-0.4.0]$ ./blade create k8s node-cpu fullload --names kube-node-192-168-131-16 --cpu-percent 80 --kubeconfig ~/.kube/config
{"code":504,"success":false,"error":"unexpected status, the real value is Error","result":{"uid":"f0456b2b579c6b86","success":false,"error":"unexpected status, the real value is Error","statuses":[{"uid":"3c0911e7-32a9-11ea-a5c8-5254001fcd2f","name":"kube-node-192-168-131-16","state":"Error","kind":"node","error":"nothing returned","success":false,"nodeName":"kube-node-192-168-131-16"}]}}
```
但是可以使用k8s进行delete pod
```
[root@kube-master-192-168-131-12 ~/chaosblade-0.4.0]$ ./blade create k8s pod-pod delete --names logging-filebeat-filebeat-v1-0-m527d  --namespace kube-system --evict-count 2 --kubeconfig ~/.kube/config
{"code":200,"success":true,"result":"6db9b83e0f82d788"}
```
也可以使用blade进行node cpu 进行故障注入
```
[root@kube-master-192-168-131-12 ~/chaosblade-0.4.0]$ ./blade create cpu load
{"code":200,"success":true,"result":"45474c0669240cb7"}
```
**Tell us your environment**
k8s 版本
```
[root@kube-master-192-168-131-12 ~/chaosblade-0.4.0]$ kubectl version
Client Version: version.Info{Major:"1", Minor:"14", GitVersion:"v1.14.8", GitCommit:"211047e9a1922595eaa3a1127ed365e9299a6c23", GitTreeState:"clean", BuildDate:"2019-10-15T12:11:03Z", GoVersion:"go1.12.10", Compiler:"gc", Platform:"linux/amd64"}
Server Version: version.Info{Major:"1", Minor:"14", GitVersion:"v1.14.8", GitCommit:"211047e9a1922595eaa3a1127ed365e9299a6c23", GitTreeState:"clean", BuildDate:"2019-10-15T12:02:12Z", GoVersion:"go1.12.10", Compiler:"gc", Platform:"linux/amd64"}
```
docker 版本
```
[root@kube-master-192-168-131-12 ~/chaosblade-0.4.0]$ docker version
Client:
 Version:           18.09.5
 API version:       1.39
 Go version:        go1.10.8
 Git commit:        e8ff056
 Built:             Thu Apr 11 04:43:34 2019
 OS/Arch:           linux/amd64
 Experimental:      false

Server: Docker Engine - Community
 Engine:
  Version:          18.09.5
  API version:      1.39 (minimum version 1.12)
  Go version:       go1.10.8
  Git commit:       e8ff056
  Built:            Thu Apr 11 04:13:40 2019
  OS/Arch:          linux/amd64
  Experimental:     false
```
helm 版本
```
[root@kube-master-192-168-131-12 ~/chaosblade-0.4.0]$ helm version
version.BuildInfo{Version:"v3.0.2", GitCommit:"19e47ee3283ae98139d98460de796c1be1e3975f", GitTreeState:"clean", GoVersion:"go1.13.5"}
```
chaosblade-operator
```
[root@kube-master-192-168-131-12 ~/chaosblade-0.4.0]$ kubectl get pod -n kube-system -o wide | grep chaosblade
chaosblade-operator-79ddcf84b4-4g47q                            1/1     Running     0          10h     192.168.72.197   kube-node-192-168-131-5      <none>           <none>
chaosblade-tool-586s2                                           1/1     Running     0          10h     192.168.131.5    kube-node-192-168-131-5      <none>           <none>
chaosblade-tool-9msrk                                           1/1     Running     0          10h     192.168.133.17   kube-node-192-168-133-17     <none>           <none>
chaosblade-tool-d4pmw                                           1/1     Running     0          10h     192.168.131.12   kube-master-192-168-131-12   <none>           <none>
chaosblade-tool-hx2zp                                           1/1     Running     0          10h     192.168.131.16   kube-node-192-168-131-16     <none>           <none>
chaosblade-tool-l5cm9                                           1/1     Running     0          10h     192.168.131.15   kube-node-192-168-131-15     <none>           <none>
chaosblade-tool-tp4g5                                           1/1     Running     0          10h     192.168.131.13   kube-master-192-168-131-13   <none>           <none>
chaosblade-tool-z5p5g                                           1/1     Running     0          10h     192.168.131.14   kube-master-192-168-131-14   <none>           <none>
```

<!-- 

Please try to use English to describe your issue, or at least provide a snippet of English translation.

-->

## Issue Description

Type: *bug report* 

### Describe what happened (or what feature you want)
on a large memory machine, the ram mode for mem load experiment may not work.

### Describe what you expected to happen


### How to reproduce it (as minimally and precisely as possible)

1. 
2. 
3. 

### Tell us your environment


### Anything else we need to know?



## Issue Description

feature request

### Describe what happened (or what feature you want)
Now version net and JVM Experimental  in ChaosBlade will validate the idempotence ， if experimetal exist then return exit one; 
but OS experimental can't , when I create 2 experimental in the same action same scope chaosblade status will show 2 uid, it will case a misdirect for Running Experimental Monitor。

### Describe what you expected to happen

Each experimental scenario should satisfy idempotence

### How to reproduce it (as minimally and precisely as possible)

1. add idempotence logic。
2. 
3. 

### Tell us your environment


### Anything else we need to know?


<!-- 

Please try to use English to describe your issue, or at least provide a snippet of English translation.

-->

## Issue Description

Type: *bug report*

### Describe what happened (or what feature you want)
got CrashLoopBackOff status on chaosblade-tool pods which based on aarch64

chaosblade-tool pod logs：standard_init_linux.go:211: exec user process caused "exec format error"

### Describe what you expected to happen
chaosblade-tool pods' status are Running

### How to reproduce it (as minimally and precisely as possible)

1. you have several  aarch64 arch serve as k8s nodes
2. helm install --namespace kube-system --name chaosblade-operator chaosblade-operator-0.4.0.tgz
3. 

### Tell us your environment
chaosblade-0.4.0-linux-amd64.tar.gz
chaosblade-operator-0.4.0.tgz

### Anything else we need to know?
got Running status on chaosblade-tool pods which based on X86

How does the chaosblade server mode work? Where can I see more information or source code of sever mode?
<!-- 

Please try to use English to describe your issue, or at least provide a snippet of English translation.

-->

## Issue Description

Type: *feature request*

### Describe what happened (or what feature you want)
In a 100% network packet loss experiment for an interface, if you want to exclude that a single socket is not affected, you must specify the ports at both ends of the socket, so you have to query the socket ports to fill the `--exclude-port` flag value.

### Describe what you expected to happen
Exclude the peer port automatically when exclude-port flag is specified. For example, if you want to exclude the socket which's the remote port is 8000, now you can append `--exclude-port 8000` flag to the create command. Then the socket is not affected.



<!-- 

Please try to use English to describe your issue, or at least provide a snippet of English translation.

-->

## Issue Description

Type:  *feature request*

### Describe what happened (or what feature you want)


### Describe what you expected to happen


### How to reproduce it (as minimally and precisely as possible)

1. 
2. 
3. 

### Tell us your environment


### Anything else we need to know?




## Issue Description


Solution consulting


I want to inject an interface failure into the dubbo application in the docker container, how should I implement it?


### Describe what you expected to happen


### How to reproduce it (as minimally and precisely as possible)

1. 
2. 
3. 

### Tell us your environment


### Anything else we need to know?


<!-- 

Please try to use English to describe your issue, or at least provide a snippet of English translation.

-->

## More users are very puzzled when then use servelt `pathinfo` and `servletpath` that extract from `HttpServletRequest`. But Most of they only need `servet-context-path` + `resources-url`, such as
`http://localhost:8080/oder-service/order/create` , `servet-context-path` = `oder-service`  and  `resources-url` = `/order/create` so only need match `oder-service/order/create` 

Type: *feature request*





<!-- 

Please try to use English to describe your issue, or at least provide a snippet of English translation.

-->

## Issue Description

Type:  *feature request*

### Describe what happened (or what feature you want)
Collect the necessary data for troubleshooting with diagnose command.

### Describe what you expected to happen
```
blade diagnose
```

### Anything else we need to know?

