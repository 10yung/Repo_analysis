### Steps to reproduce
1. Create a new rails project
2. Run `rails generate scaffold api/user email:uniq password:digest --api`
3. Look at `app/views/api/users/index.json.jbuilder`, it references `api_users/api_user`, not `api/users/api_user`

### Expected behavior
The partial references should be `api/users/api_user`

### Actual behaviora
The partial referenced is `api_users/api_user`, which doesn't exist.

### System configuration
**Rails version**: Rails 6.0.1

**Ruby version**: ruby 2.6.5p114 (2019-10-01 revision 67812) [x64-mingw32]

I have in my partial:

```jbuilder
json.key_format! camelize: :lower

json.credit_balance @user.available_credits
json.company_state @user.company_profile.state
json.subscription do
  json.merge! @user.subscription.to_h
end
```

But rendered json doesn't produced by following `camelize: :lower` rule.

```json
{
  "creditBalance": 28,
  "companyState": "NJ",
  "subscription": {
    "active": true,
    "current_period_end": "03/02/2020"
  }
}
```

See `current_period_end` should be `currentPeriodEnd`.

I am using Rails 5.2.
I saw a deprecation warning from jbuilder when trying my test suite on Ruby 2.7, and it looks like it was already fixed in jbuilder master. Could we get a new release with the fix? :)

```
jbuilder-2.9.1/lib/jbuilder.rb:188: warning: Capturing the given block using Proc.new is deprecated; use `&block` instead
```

This PR removed namespaced_file_path from Rails6: https://github.com/rails/rails/pull/27353

The jubilder controller template still uses this method: https://github.com/rails/jbuilder/blob/master/lib/generators/rails/templates/controller.rb#L2

I replaced this method by `namespaced_path` and all tests keep green.

Is there anything against this change?
JBuilder doesn't seem to using the configured format:
` Date::DATE_FORMATS[:default] = "%d-%m-%Y"`
How do I customize it without having to add `.to_s` to every date?
It seems jbuilder make SQL query before render it jbuilder. Is not using ActiveRecord::Associations passed from controller correctly.

Example:
```ruby
# Model
class Product
  has_many :product_sides
  has_many :product_side_images, through: :product_sides
end
```
```ruby
# Controller
def index
   @products = Product.includes(:product_side_images).references(:product_side_images)
end
```

Jbuilder make SQL query for getting each product_side and each product_side_images. (N*M + 1 query)

Calling Product.includes(:product_side_images).references(:product_side_images) and iterating from all it product_side_images from console for example it did just one SQL query.

`assert_template` tries to create a failure message and (`Jbuilder`) errors ("Failed to add 'inspect' property ..."), because it tries to `inspect` the  `Jbuilder` (rails-controller-testing tracks `locals`, `JbuilderTemplate` passes `json: self` into sub-renders, like partials).

The problematic line in rails-controller-testing is https://github.com/rails/rails-controller-testing/blob/21014e48be124dd8d0af250b79f682519d445015/lib/rails/controller/testing/template_assertions.rb#L166, specifically the `@_rendered_views.locals_for(view)` (that returns an array, e.g. `[BasicObject.new].to_s` raises the same problem).

I understand `Jbuilder` tries to define as few methods as it must (and hence uses `BasicObject`), but i feel `inspect` is very specific to ruby, so it may not be a problem, in that case i'm happy to create a PR.
I just added support for generating models with `rich_text`, `attachment` and `attachments` fields for ActionText and ActiveStorage to Rails 6 recently.

This updates jbuilder's scaffold generator to also support these fields and retains the old functionality for older Rails versions.
I am using UltraEdit 25.20 as my text editor in Windows 10. I changed save settings yesterday to get around a UTF-8 display issue. It doesn't negatively affect any other file in my project, but the Jbuilder template now fails after saving it today.

There are a number of encoding options when saving, including:

- UTF-8 (with BOM)
- UTF-8 no BOM

These are explained quite well here: https://www.ultraedit.com/support/tutorials-power-tips/ultraedit/unicode.html

The former causes a server error when trying to load the JSON from a browser (eg. localhost/widgets/123.json) with an unhelpful error message: 

> syntax error, unexpected keyword_ensure, expecting end-of-input ensure 

The latter works fine. Given that this only seems to affect JBuilder files, I thought this might be an issue for you.

In the interim I'll choose the "no BOM" option when saving JBuilder files. I may try https://github.com/amatsuda/jb which may or may not have the same issue.