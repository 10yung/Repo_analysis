**Description:** If you change the fab alignment mode and replace the menu in the BottomAppBar the items get replaced 2 times. It looks like the icons are flickering.

**Expected behavior:** There should be a smooth transition of the items if they change the side in the BottomAppBar. Also the animation should not be affected, if in this time the menu items change.

**Source code:** 

```
controller.addOnDestinationChangedListener(new NavController.OnDestinationChangedListener(){
	@Override
	public void onDestinationChanged(@NonNull NavController controller, @NonNull NavDestination destination, @Nullable Bundle arguments){
		if (destination.getId() == R.id.homeFragment){
			bottomAppBar.setNavigationIcon(R.drawable.ic_menu);
			bottomAppBar.setFabAlignmentMode(BottomAppBar.FAB_ALIGNMENT_MODE_CENTER);
			bottomAppBar.replaceMenu(R.menu.home_fragment_menu);
		}else{
			bottomAppBar.setNavigationIcon(null);
			bottomAppBar.setFabAlignmentMode(BottomAppBar.FAB_ALIGNMENT_MODE_END);
			bottomAppBar.replaceMenu(R.menu.details_fragment_menu);
		}
	}
});
```

**Android API version:** 29

**Material Library version:** Material Android Library version you are using here (e.g., 1.2.0-alpha03)

**Device:** Pixel 3 Emulator

To help us triage faster, please check to make sure you are using the [latest version](https://github.com/material-components/material-components-android/releases) of the library.

We also happily accept [pull requests](https://github.com/material-components/material-components-android/pulls).

**Description:** The tab text for the active tab is not showing
![Screenshot_1579289949](https://user-images.githubusercontent.com/12980612/72646887-01d06400-392c-11ea-908b-a5e64e6445ff.png)

**Expected behavior:** Tab text should not be hidden. This is the result on 1.1.0-rc01. 
No change has been made apart from material version
![Screenshot_1579289949](https://user-images.githubusercontent.com/12980612/72646893-04cb5480-392c-11ea-9ff6-44fc91f4d947.jpg)

**Android API version:** 28

**Material Library version:** 1.2.0-alpha01 and above

**Device:** Nexus 5X emulator with 22, 25, 29

I'm using a LayoutMediator to set the text. I tried to see if the text was not getting set.
Here's what the layout inspector gave:
![Screen Shot 2020-01-17 at 1 31 58 PM](https://user-images.githubusercontent.com/12980612/72647670-ecf4d000-392d-11ea-81d1-9051ef6efbbd.png)
and the `textview` properties:
![Screen Shot 2020-01-17 at 1 32 08 PM](https://user-images.githubusercontent.com/12980612/72647720-0564ea80-392e-11ea-9fb3-277810f05b14.png)

 

**Description:** The component doesn't feel responsive or snappy due to:

- Overzealous and "slippery" horizontal scrolling where accidentally scrolling too fast skips several pages rather than snapping like you would expect from any normal `ViewPager`. Honestly this is the most finicky and annoying thing ever.
- Laggy and jittery (not 60 fps) horizontal scrolling on at least my own device and emulator.
- Forced animations and sometimes even ignored click events after clicking dates because a circle is "filled" with a grey reveal animation that causes a delayed visual cue.

In comparison to a traditional `DatePickerDialog` this is a step forward in terms of design but a step backwards in terms of responsiveness.

**Android API version:** 9

**Material Library version:** 1.2.0-alpha03

**Device:** Oppo Find X, Emulators
When the user needs to declare a password we always have a second edittext with the hint "confirm password". We would like that when the show password eye is clicked also this second editText shows the password/hides it. Currently you can set an onClickListener on the eye and implement your own logic, but if you do this you override the super() logic, there isn't a public way of getting the PasswordToggleEndIconDelegate so one could add a listener to it.
**Is your feature request related to a problem? Please describe.**
We need the possibility to define the Password Transformation Method to be used when the password is hidden, why? We want to aovid the letters are being shown on input despite it's only for a second, we don't want the input is being seen at all. As far as I know this is currently not possible.

**Describe the solution you'd like**
Support for the Slider component to have a lower bounds value and an upper bounds value.

**Additional context**
See the Material Design specs: https://material.io/components/sliders/#usage
**Description:** Full description of issue here

**Expected behavior:** Screenshots and/or description of expected behavior

**Source code:** The code snippet which is causing this issue. Please consider attaching a minimal sample app that reproduces the issue.

**Android API version:** Android API version here

**Material Library version:** Material Android Library version you are using here (e.g., 1.1.0-alpha07)

**Device:** Device on which the bug was encountered here

To help us triage faster, please check to make sure you are using the [latest version](https://github.com/material-components/material-components-android/releases) of the library.

We also happily accept [pull requests](https://github.com/material-components/material-components-android/pulls).

**Is your feature request related to a problem? Please describe.**
Currenlty setting textAllCaps attribute in TextAppearance passed either as collapsedTextAppearance or expandedTextAppearance is ignored. 

**Describe the solution you'd like**
The simple solution seems that if either collapsedTextAppearance or expandedTextAppearance have textAllCaps=true the text would be capitalized or probably provide attribute for CollapsingToolbarLayout that would take care of it. 

**Describe alternatives you've considered**
Passing already capitalized String as title. 
**Description:** The material catalog has the option to go edge-to-edge, as is recommended by Google: https://developer.android.com/guide/navigation/gesturenav
The automatic scrim, as described in the docs, is not applied:
Quote from docs:
> However, when the user is in 2-button or 3-button navigation mode, these buttons don't change color. Instead, the system applies a translucent background so the buttons stay visible. However, the system can only do this if the app targets API level 29 or higher.

I tested this in my own app and the material catalog app. I even updated the catalog app to targetSDK 29 as the docs say.
But on my Android Q emulator a scrim is applied, but on SDK level 27 for instance it is not.

**Expected behavior:**
A scrim should be applied if the user uses the older button navigation on all android versions.
![image](https://user-images.githubusercontent.com/810327/72442503-f145af80-37ac-11ea-9116-85469402aab6.png)
Left: SDK 27, right: android Q

**Source code:** 
```
<item name="android:navigationBarColor">@android:color/transparent</item>
<item name="android:windowLightNavigationBar" tools:targetApi="Q">true</item>
```
**Android API version:** All, tested on 27 and Q

**Material Library version:** 1.1.0-rc01

**Device:** Emulators
**Description:** When changing the Shape of a Material Card to include only 2 rounded borders, there is an additional ~2dp border around the card that clips over content.

See screenshot:
https://i.imgur.com/kES7C2W.png


**Expected behavior:** No border would be there. If all borders are rounded/not rounded, this does not happen

**Source code:** 

`    <style name="ShapeAppearanceOverlay.MyApp.MaterialCardView" parent="">
        <item name="cornerFamily">rounded</item>
        <item name="cornerSizeTopLeft">8dp</item>
        <item name="cornerSizeTopRight">8dp</item>
        <item name="cornerSizeBottomLeft">0dp</item>
        <item name="cornerSizeBottomRight">0dp</item>
    </style>`

**Android API version:** 29

**Material Library version:**  1.2.0-alpha03

**Device:** Nexus5, Google Pixel, Samsung S7
