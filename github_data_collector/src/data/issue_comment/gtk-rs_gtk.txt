Add support for using composite templates from Builder/Glade.
example from python:
```
button = Gtk.Button()
button.add(Gtk.Arrow(Gtk.ArrowType.LEFT, Gtk.ShadowType.NONE))
```

I can see gtk::ArrowType in the docs, but not the Arrow object
When you go to any trait in gtk::prelude (e.g. [ButtonExt](https://gtk-rs.org/docs/gtk/prelude/trait.ButtonExt.html)) and then click on one of the implementors (e.g. [Button](https://gtk-rs.org/docs/gtk/prelude/struct.Button.html)) you get a 404 error.
These were ignored previously.

Fixes https://github.com/gtk-rs/gtk/issues/874
This might not be generated because it's similar to g_object_get_property? Despite the naming it does not have the same functionality. Rather, it gets the **style property** of the Widget. Without it widgets like [Granite's avatar widget](https://github.com/elementary/granite/blob/6d0dac21b728b1ed28baaf38a004dca378559435/lib/Widgets/Avatar.vala) can't be implemented in Rust.
The methods we need to figure out how to bind:

* [ ] set_child_property
* [ ] get_child_property
This issue is to provide a list of vfuncs of GtkWidget, to be crossed of as they are implemented.
The first batch is covered in #861.

* [x] adjust_baseline_allocation
* [x] adjust_baseline_request
* [x] adjust_size_allocation 
* [x] adjust_size_request
* [x] button_press_event
* [x] button_release_event
* [ ] ~~can_activate_accel~~ (Needs work on signals API)
* [ ] child_notify
* [ ] composited_changed
* [ ] compute_expand 
* [ ] configure_event 
* [ ] damage_event
* [ ] ~~delete_event~~ (Needs bindings for GdkEventAny)
* [ ] destroy
* [ ] destroy_event 
* [ ] direction_changed
* [ ] dispatch_child_properties_changed
* [ ] drag_begin
* [ ] drag_data_delete 
* [ ] drag_data_get
* [ ] drag_data_received 
* [ ] drag_drop 
* [ ] drag_end
* [ ] drag_failed
* [ ] drag_leave
* [ ] drag_motion
* [x] draw
* [ ] enter_notify_event
* [ ] event
* [ ] focus
* [ ] focus_in_event
* [ ] focus_out_event 
* [ ] get_accessible 
* [ ] get_preferred_height
* [ ] get_preferred_height_and_baseline_for_width 
* [ ] get_preferred_height_for_width
* [ ] get_preferred_width 
* [ ] get_preferred_width_for_height 
* [ ] get_request_mode 
* [ ] grab_broken_event
* [ ] grab_focus
* [ ] grab_notify 
* [ ] hide 
* [ ] hierarchy_changed
* [ ] key_press_event 
* [ ] key_release_event
* [ ] keynav_failed 
* [ ] leave_notify_event
* [ ] map
* [ ] map_event
* [ ] mnemonic_activate
* [ ] motion_notify_event
* [ ] move_focus 
* [ ] parent_set
* [ ] popup_menu
* [ ] property_notify_event
* [ ] proximity_in_event
* [ ] proximity_out_event 
* [ ] query_tooltip 
* [ ] queue_draw_region 
* [ ] realize 
* [ ] screen_changed
* [ ] scroll_event
* [ ] selection_clear_event
* [ ] selection_get
* [ ] selection_notify_event
* [ ] selection_received
* [ ] selection_request_event
* [ ] show
* [ ] show_all 
* [ ] show_help
* [ ] size_allocate
* [ ] state_changed 
* [ ] state_flags_changed 
* [ ] style_set
* [ ] style_updated 
* [ ] touch_event
* [ ] unmap 
* [ ] unmap_event
* [ ] unrealize 
* [ ] visibility_notify_event 
* [ ] window_state_event
"This function does nothing." Wrong. I used this function to set the sizes for the main window of my application. When I upgraded to the latest version of the gtk crate and was informed by the compiler that this function was deprecated, I checked the documentation and saw the quoted sentence. So I removed the call, recompiled and re-ran my application. The main window was now the size of a postage stamp. I did follow your suggestion to use set_default_size instead, which restored the proper dimensions of the window in question, but assertion that set_default_geometry does nothing is simply false and should be removed from the documentation.
"Usually you want to pass None for the adjustments, which will cause the scrolled window to create them for you."

Pass 'None' for the adjustments leads to 

error[E0283]: type annotations required: cannot resolve `_: gtk::IsA<gtk::Adjustment>`
   --> src/main.rs:159:42
    |
159 |     let scrolled_window:ScrolledWindow = ScrolledWindow::new(None, None);
    |                                          ^^^^^^^^^^^^^^^^^^^
    |
    = note: required by `gtk::ScrolledWindow::new`

You have gtk::NONE_ADJUSTMENT defined. Why not mention that in the documentation instead of 'None' and avoid leading users down this incorrect path?
Just wondering is this startup time normal or not?  