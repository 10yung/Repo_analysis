Need some clarification in public, private and project headers of a static library. I have linked a static library with a Xcode project. In the static library, I have marked all the header files that will be included in the Xcode project as public. I want to clarify what will be the visibility of a header file, lets say HeaderB.h which is included in a public header file, and what will be visibility of a header file HeaderC.h which is included in HeaderB.h. HeaderB.h and HeaderC.h are not meant to be included in the host Xcode project directly. Also, I am not adding the static library as a sub project, instead staticLib.a file is linked with the host Xcode project

Hi -
We provide a resource bundle as part of our SDK distribution.  Everything used to work great until we attempted to integrate our SDK into an app built using Xcode 7 and then submitted to the app store.  
We are now getting an error from Apple saying "Invalid CFBundleSupportedPlatforms value...".   Apparently XCode is inserting a couple of key/values into the generated Info.plist for our bundle.  
Specifically:

<pre><code>
<key>CFBundleSupportedPlatforms</key>
<array>
<string>iPhoneSimulator</string>
</array>
and
<key>DTPlatformName</key>
<string>iphonesimulator</string>
</code></pre>

These keys are not present in the plist for the bundle and are getting generated during the build phase.
I have learned that if the values are changed manually to "iPhoneOS" then the app store will accept the submission.  

Does anyone have any clue as to how to get Xcode to generate the plist with the proper iPhoneOS value?
Otherwise I suppose I'm going to have to write a post-process script to inject to proper values into the plist.

Anyone else seen this issue?

lipo did not report the armv7s slice in my framework.
I discovered that $(ARCHS_STANDRD) no longer includes amv7s.
I had to manually add the armv7s to the Architectures entry in the project, static lib and the Aggregate.
Problem solved.

Hi team,

I'm working on an iOS framework which follows this pattern,  it worked well before Xcode 7,  but recently after I upgraded to Xcode 7 to build the framework then used it in the test app there were lot of build warnings during the 'Generate dSYM' process,  the warning messages are something like these:

```
while processing /Users/James/workspace/ios/APMMobile/ios/test/TestAppUtility/FoglightAPM.framework/FoglightAPM(FoglightOrderedDictionary.o):
warning: /var/folders/fv/y57n2j752q5042nmfdzk31dr00007h/C/org.llvm.clang.admin/ModuleCache/1CYUW6ZKHCRG0/Foundation-A3SOD99KJ0S9.pcm: No such file or directory
while processing /Users/James/workspace/ios/APMMobile/ios/test/TestAppUtility/FoglightAPM.framework/FoglightAPM(FoglightOrderedDictionary.o):
warning: /var/folders/fv/y57n2j752q5042nmfdzk31dr00007h/C/org.llvm.clang.admin/ModuleCache/1CYUW6ZKHCRG0/Foundation-A3SOD99KJ0S9.pcm: No object file for requested architecture
while processing /Users/James/workspace/ios/APMMobile/ios/test/TestAppUtility/FoglightAPM.framework/FoglightAPM(FoglightOrderedDictionary.o):
warning: /var/folders/fv/y57n2j752q5042nmfdzk31dr00007h/C/org.llvm.clang.admin/ModuleCache/1CYUW6ZKHCRG0/ObjectiveC-2CD0WTQVXITO7.pcm: No such file or directory
while processing /Users/James/workspace/ios/APMMobile/ios/test/TestAppUtility/FoglightAPM.framework/FoglightAPM(FoglightOrderedDictionary.o):
warning: /var/folders/fv/y57n2j752q5042nmfdzk31dr00007h/C/org.llvm.clang.admin/ModuleCache/1CYUW6ZKHCRG0/ObjectiveC-2CD0WTQVXITO7.pcm: No object file for requested architecture
while processing /Users/James/workspace/ios/APMMobile/ios/test/TestAppUtility/FoglightAPM.framework/FoglightAPM(FoglightOrderedDictionary.o):
warning: Could not resolve external type c:objc(cs)NSMutableDictionary
while processing /Users/James/workspace/ios/APMMobile/ios/test/TestAppUtility/FoglightAPM.framework/FoglightAPM(FoglightOrderedDictionary.o):
warning: Could not resolve external type c:objc(cs)NSMutableDictionary
while processing /Users/James/workspace/ios/APMMobile/ios/test/TestAppUtility/FoglightAPM.framework/FoglightAPM(FoglightOrderedDictionary.o):
warning: Could not resolve external type c:objc(cs)NSMutableArray
...
```

it seems Xcode want to lookup some cache files on the build server but they can't be found,  to reproduce this issue:
1. Build the framework on one Mac then transfer it to another Mac which has the Test App(this is very important because the issue won't be appear if you build the framework on the same Mac).
2. In the Build Settings of the test app,  change the value of 'Debug Information Format' to 'DWARF with dSYM File' for the Debug configuration,  then launch the app.

I'm wondering if any other people who also encountered it.

Thanks,
James

Can I use cocoapods in my framework?

Within a well configured iOS-Framework if I try to load file resources

```
NSBundle *localBundle  = [NSBundle bundleForClass:[myObject class]]
```

gives back the main app bundle i.e. the same bundle of

```
NSBundle *mainBundle  = [NSBundle mainBundle]
```

that is the container app root bundle folder like

```
NSBundle </private/var/mobile/Containers/Bundle/Application/C95A7E51-2871-4489-B448-025CAFDE1B4C/MXMTestbed.app> (loaded)
```

My container app  and framework structure is like

```
MyContainerApp
  |------Frameworks/
        |-----------------MyFramework.framwork/
                                |-------------------Resources/
                                                           |-------------mydata.json
```

and I want to grant access in the framework (not in the app code) for mydata.json.
It's very easy to access same data files via iOS-Framework Bundles, but this is not the case.

In fact the method to get the Framework bundle like:

```
+ (NSBundle *)frameworkBundle {
    static NSBundle* frameworkBundle = nil;
    static dispatch_once_t predicate;
    dispatch_once(&predicate, ^{
        NSString* mainBundlePath = [[NSBundle mainBundle] resourcePath];
        NSString* frameworkBundlePath = [mainBundlePath stringByAppendingPathComponent:@"ObjectiveLyricsTouchResources.bundle"];
        frameworkBundle = [NSBundle bundleWithPath:frameworkBundlePath];
    });
    return frameworkBundle;
}
```

will work only when calling it from the container app, not in the framework itself, due to the issue showed before.


I am using Xcode 6, and a lib{$PROJECT_NAME}.a file is not being created during the build phase.  Is there something that new that must be done in order for this file to be created?

i have follow all the steps and when i make the command 
lipo -info Serenity.framework/Serenity
it gives me the following error 
"fatal error: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/lipo: can't open input file: Serenity.framework/Serenity (No such file or directory)
"

so any help??!!

Hi,

The tutorial is awesome! I've been using it for a long time and now it still works great.
Just one thing bothers me recently and I am not sure how to fix it. I can not "symbolicate" the crash log that QA team sends me back if the crash was caused by the framework, in another word, I don't have the dSYM file for framework. I am not sure how to make XCode generate dSYM file for the framework especially when archiving the project. A little help please

To give a little more detail. I linked the framework in the project as a dependent project instead of using framework.framework bundle. When debugging it, it seems like dSYM will be built into the binary but when archiving the project, dSYM will be removed from binary?
