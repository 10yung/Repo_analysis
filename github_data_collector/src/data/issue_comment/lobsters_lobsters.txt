<!--
Feature requests are no longer being accepted, unless in the form of a pull request with code.
Don't be fooled by the feature requests pushcx posts to share plans and invite contributions.

Issues and PRs are typically reviewed Wednesday and some Thursday mornings.
-->

When I visit my Account Settings, I see Keybase listed under External Accounts but where the others have a "Connect" link, Keybase has nothing.

Here's a screenshot of what I mean:
![Window capture 2](https://user-images.githubusercontent.com/115515/72563527-dee67700-387b-11ea-9767-81e3b3630ed2.png)

I checked in the browser debugger and it looks like the `keybase_proofs/_proofs.html.erb` partial is not rendering at all:

![Window capture 2 copy](https://user-images.githubusercontent.com/115515/72564028-e0fd0580-387c-11ea-9cd5-a15e53adecb6.png)


<!--
Issues and PRs are typically reviewed Wednesday and some Thursday mornings.
-->

Adds a new route for returning the RSS feed for /top submissions

I'd like to see the 'Vote' link moved on top in mailing list story emails, which links to the Lobsters story submission. This is for when you've mailing list mode for stories enabled in your user settings.

For each submitted story, it currently sends an email with a link to the article, the article body and the Lobsters submission link at the bottom. I always scroll to this last link and open the Lobsters submission page first to see whether the submission is interesting.

Is moving this submission link to the top something that is open for discussion?

I'd be happy to submit a PR.
Notice the following post from `mockturtle` on IRC: `<mockturtle> Unit testing C code with LD PRELOAD [c] [testing] (friendlysock) - https://lobste.rs/s/v2gyza`. The underscore has been replaced by a space.

The reason for this is in `script/mail_new_activity.rb`, as this is the script that sends an email to mockturtle with the required info.

The subject line is Q-encoded, but the underscore character is plain ASCII and not UTF-8. It doesn't get encoded properly and is left as is because of this. Underscore means space in Q-encoding, thus it is replaced by a space character on IRC.

A proposed fix would be to lookup which encoded version a literal underscore should have, and do an initial replace before the `pack` function is called.
This PR includes two features:

1. It makes the URL dupe checker ignore URLs with anchors, so that scenario A is covered
2. It makes the URL dupe checker consider scenario B, it does so by appending a # to the URL and searching for a pattern where it matches the URL plus any characters after the #

Scenario A: Alice submits the following URL https://artagnon.com/articles/leancoq, three minutes later Bob tries submitting https://artagnon.com/articles/leancoq#main

Scenario B: Alice submits the following URL https://artagnon.com/articles/leancoq#main, three minutes later Bob tries submitting https://artagnon.com/articles/leancoq
Today someone submitted https://artagnon.com/articles/leancoq and someone else submitted 
https://artagnon.com/articles/leancoq#main a few minutes later. The dupe checker should've caught and prevented this by ignoring any anchors (`#main`) at the end of the URL.
Users can elect to receive email notification for comment replies, comment mentions, and private messages.  If the provided email address begins bouncing, we should turn off notification for that user.  Further it would be nice to send them a private message indicated we modified their preferences and explaining why.

Bounces are returned to our no-reply address, and we have an existing script for mailing list mode that could be amended to handle non-deliverable addresses.

Addresses the two issues we saw last night by:

- Add a full text index to the `story_cache` column. This should improve the search performance and clean up one of the larger issues the site has been having for a while.
- Migrates the domain method over to a full table. This will let us start to flag heavy promoting stories some point down the road. 
- Add a page for domains that mirrors what we have for tags. This lets us use an index over a regexp search on the search controller when loading a list of all stories for a given domain. 


My Keybase proof has somehow been borked. Here's the steps I remember taking (can't guarantee these are STR but it's the closest I can give):

1. Go to https://lobste.rs/settings
2. Start the Keybase proof (IIRC the page just tells you to run `keybase prove lobste.rs` but I can't really remember)
3. Enter your Lobsters username (in my case `strugee`), hit enter, and get the message: "Checking will continue while you go authorize the proof on Lobsters. To cancel hit C-c."
4. Hit Ctrl-C.
5. Run `keybase prove lobste.rs` again.
6. Answer yes at the prompt about overwriting the old proof.
7. Go through the proof flow normally.

Result: Lobsters thinks the proof went just fine, and links me to https://keybase.io/strugee/sigchain#cf80d7ce0543373eebe632ff9e2b27853394d6160ea9fa1e009ee5dfece046010f in my profile. But Keybase seems to disagree; both the proof attempts show as revoked.

At the time this happened I was on Keybase client `5.0.0`. I have since upgraded.
Adding an aria button for folder button on comments + aria expanded to play well w/ a11y.

This PR is in reference to https://github.com/lobsters/lobsters/issues/793

> While using Qutebrowser or Vimium for FF/Chrome you cannot collapse comments with the keyboard alone. This is due to the comment collapsing label not being treated as a button by Qutebrowser/Vimium. Adding a role of button to the label.comment_folder makes this much more enjoyable to use. I'm not sure of the a11y implications. If anyone has knowledge on this portion, if it might hurt accessiblity, I would appreciate to hear your thoughts.

Referenced [MDN](https://developer.mozilla.org/en-US/docs/Web/Accessibility/ARIA/Roles/button_role) for the accessibility bit. Looks like `aria-exanded` fits this case perfectly.