Fix Interceptor to lazyload modules Angular8+

### Changes
- implements forChild()

### Checklist

- [x] I have read the [Auth0 general contribution guidelines](https://github.com/auth0/open-source-template/blob/master/GENERAL-CONTRIBUTING.md)
- [x] I have read the [Auth0 Code of Conduct](https://github.com/auth0/open-source-template/blob/master/CODE-OF-CONDUCT.md)
- [x] All code quality tools/guidelines in the [CONTRIBUTING documentation](../CONTRIBUTING.md) have been run/followed
- [x] All relevant assets have been compiled as directed in the [CONTRIBUTING documentation](../CONTRIBUTING.md), if applicable

### Changes

Please describe both what is changing and why this is important. Include:

- Endpoints added, deleted, deprecated, or changed
- Classes and methods added, deleted, deprecated, or changed
- Screenshots of new or changed UI, if applicable
- A summary of usage if this is a new feature or change to a public API (this should also be added to relevant documentation once released)
- Any alternative designs or approaches considered

### References

Please include relevant links supporting this change such as a:

- support ticket
- community post
- StackOverflow post
- support forum thread

### Checklist

- [ ] I have read the [Auth0 general contribution guidelines](https://github.com/auth0/open-source-template/blob/master/GENERAL-CONTRIBUTING.md)
- [ ] I have read the [Auth0 Code of Conduct](https://github.com/auth0/open-source-template/blob/master/CODE-OF-CONDUCT.md)
- [ ] All code quality tools/guidelines in the [CONTRIBUTING documentation](../CONTRIBUTING.md) have been run/followed
- [ ] All relevant assets have been compiled as directed in the [CONTRIBUTING documentation](../CONTRIBUTING.md), if applicable

### Description
I'm getting this error:
```
external/npm/node_modules/@auth0/angular-jwt/index.d.ts(19,48): error TS-996005: JwtModule.forRoot returns a ModuleWithProviders type without a generic type argument. Please add a generic type argument to the ModuleWithProviders type. If this occurrence is in library code you don't control, please contact the library authors.

```
when trying to build my app with Ivy. 

### Environment
```
"dependencies": {
    "@angular-devkit/build-angular": "^0.900.0-next.18",
    "@angular/animations": "9.0.0-next.14",
    "@angular/cdk": "8.2.2",
    "@angular/common": "9.0.0-next.14",
    "@angular/core": "9.0.0-next.14",
    "@angular/forms": "9.0.0-next.14",
    "@angular/localize": "^9.0.0-next.5",
    "@angular/material": "8.2.3",
    "@angular/platform-browser": "9.0.0-next.14",
    "@angular/router": "9.0.0-next.14",
    "@angular/upgrade": "9.0.0-next.14",
    "core-js": "2.6.9",
    "node-sass": "^4.12.0",
    "reselect": "^3.0.1",
    "rxjs": "6.5.3",
    "tslib": "1.10.0",
    "zone.js": "0.10.2"
  },
  "devDependencies": {
    "@angular/bazel": "9.0.0-next.14",
    "@angular/cli": "9.0.0-next.14",
    "@angular/compiler": "9.0.0-next.14",
    "@angular/compiler-cli": "9.0.0-next.14",
    "@angular/language-service": "9.0.0-next.14",
    "@angular/platform-browser-dynamic": "9.0.0-next.14",
    "@auth0/angular-jwt": "^3.0.0",
    "@babel/cli": "^7.6.0",
    "@babel/core": "^7.6.0",
    "@babel/preset-env": "^7.6.0",
    "@bazel/bazel": "^0.29.0",
    "@bazel/benchmark-runner": "0.1.0",
    "@bazel/buildifier": "0.28.0",
    "@bazel/ibazel": "0.10.3",
    "@bazel/karma": "~0.38.0",
    "@bazel/rollup": "^0.38.0",
    "@bazel/terser": "^0.38.0",
    "@bazel/typescript": "^0.38.0",
    "typescript": "3.6.4"
  }
```
**Please do not report security vulnerabilities here**. The [Responsible Disclosure Program](https://auth0.com/whitehat) details the procedure for disclosing security issues.

**Thank you in advance for helping us to improve this library!** Please read through the template below and answer all relevant questions. Your additional work here is greatly appreciated and will help us respond as quickly as possible. For general support or usage questions, use the [Auth0 Community](https://community.auth0.com/) or [Auth0 Support](https://support.auth0.com/). Finally, to avoid duplicates, please search existing Issues before submitting one here.

By submitting an Issue to this repository, you agree to the terms within the [Auth0 Code of Conduct](https://github.com/auth0/open-source-template/blob/master/CODE-OF-CONDUCT.md).

### Description

> Provide a clear and concise description of the issue, including what you expected to happen.

### Reproduction

> Detail the steps taken to reproduce this error, what was expected, and whether this issue can be reproduced consistently or if it is intermittent.
>
> Where applicable, please include:
>
> - Code sample to reproduce the issue
> - Log files (redact/remove sensitive information)
> - Application settings (redact/remove sensitive information)
> - Screenshots

### Environment

> Please provide the following:

- **Version of this library used:**
- **Version of the platform or framework used, if applicable:**
- **Other relevant versions (language, server software, OS, browser):**
- **Other modules/plugins/libraries that might be involved:**


node_modules/@auth0/angular-jwt/src/jwt.interceptor.d.ts:3:10 has an incorrect import 
node_modules/@auth0/angular-jwt/src/jwt.interceptor.ts:4:10 has an incorrect import 
statement. Paths for rxjs have moved please fix.
### Changes

This MR introduces the correct way to build modern Angular Libraries by using the Angular CLI build infrastructure.
It also ensures the compatibility with future Angular versions as well as Angular Ivy compatibility.

- `projects/angular-jwt/` folder contains the library coude source
- `src` folder contains a mock app for the the library 
- unit testing happens in the mock app (`src/app/services/example-http.service.spec.ts`)

Running tests: `npm run ng test`

There aren't any major changes in the library source code, or any breaking changes.

The compiled library was tested on a large internal project, all unit tests passed, the application compiled to ivy without any errors, and authentication was working correctly wihtout any changes to the host application source code.

### References


- support ticket: https://github.com/auth0/angular2-jwt/issues/620

### Checklist

- [x] I have read the [Auth0 general contribution guidelines](https://github.com/auth0/open-source-template/blob/master/GENERAL-CONTRIBUTING.md)
- [x] I have read the [Auth0 Code of Conduct](https://github.com/auth0/open-source-template/blob/master/CODE-OF-CONDUCT.md)
- [x] All code quality tools/guidelines in the [CONTRIBUTING documentation](../CONTRIBUTING.md) have been run/followed
- [x] All relevant assets have been compiled as directed in the [CONTRIBUTING documentation](../CONTRIBUTING.md), if applicable

### Description

I'm trying to use jwtOptionsFactory to handle getting token from ngrx store. 

The interceptor works just fine, but when I try to us `JwtHelperService` without passing token (I guess it uses tokengetter by default) or with passing token via `this.jwtHelperService.tokenGetter()` does not work because my factory return promise while the method from service tries run `split` method on promise, not on string...

My code:

```
function jwtOptionsFactory(store: Store<any>): object {
  return {
    whitelistedDomains: ['localhost:5500'],
    tokenGetter: () => {
      return store.select(FromAppState.selectAuthToken)
        .pipe(take(1))
        .toPromise();
    }
  };
}
```

```
@NgModule({
  // ...
  imports: [
    // ...
    JwtModule.forRoot({
      jwtOptionsProvider: {
        provide: JWT_OPTIONS,
        useFactory: jwtOptionsFactory,
        deps: [Store]
      }
    }),
    // ...
  ]
  bootstrap: [AppComponent]
})
export class AppModule {}
```

```
  constructor(private dialogService: DialogService,
              private jwtHelperService: JwtHelperService) { }

  ngOnInit(): void {
    console.log(this.jwtHelperService.tokenGetter()); // <= return promise, not string
    console.log(this.jwtHelperService.decodeToken(this.jwtHelperService.tokenGetter()));
    console.log(this.jwtHelperService.isTokenExpired(this.jwtHelperService.tokenGetter()));
    console.log(this.jwtHelperService.getTokenExpirationDate(this.jwtHelperService.tokenGetter()));
  }
```

error:
![image](https://user-images.githubusercontent.com/10038964/59784875-c7361880-92c3-11e9-861e-672517c1ab1e.png)

Please fix this

Also it would be great if this would also supports Observable 

### Prerequisites

- [x] I have checked the [README documentation](https://github.com/auth0/angular2-jwt/blob/master/README.md).
- [x] I have checked the [Auth0 Community](https://community.auth0.com/) for related posts.
- [x] I have checked for related or duplicate [Issues](https://github.com/auth0/angular2-jwt
/issues) and [PRs](https://github.com/auth0/angular2-jwt
/pulls).
- [x] I have read the [Auth0 general contribution guidelines](https://github.com/auth0/open-source-template/blob/master/GENERAL-CONTRIBUTING.md).
- [x] I have read the [Auth0 Code of Conduct](https://github.com/auth0/open-source-template/blob/master/CODE-OF-CONDUCT.md).
- [x] I am reporting this to the correct repository.

### Environment

Please provide the following:

- Version of angular2-jwt being used: "@auth0/angular-jwt": "^2.1.0",
- Version of the platform or framework used, if applicable: "@angular/core": "~8.0.0"
The doumentation state that you can use:

```
    JwtModule.forRoot({
      config: {
        tokenGetter: tokenGetter,
        whitelistedDomains: ['example.com'],
        blacklistedRoutes: ['example.com/examplebadroute/']
      }
    })
```

It would be nice to have a warning on the documentation saying `whitelistedDomains: ['http://example.com']` won't work.
### Description

Im operating typical api runnable proxy for my dev app running thru https

app runs fine

Authorization header is NOT landing on my HttpClient inside my client side user.service.ts

### Prerequisites

- [X ] I have checked the [README documentation](https://github.com/auth0/angular2-jwt/blob/master/README.md).
- [X ] I have checked the [Auth0 Community](https://community.auth0.com/) for related posts.
- [ X] I have checked for related or duplicate [Issues](https://github.com/auth0/angular2-jwt
/issues) and [PRs](https://github.com/auth0/angular2-jwt
/pulls).
- [ ] I have read the [Auth0 general contribution guidelines](https://github.com/auth0/open-source-template/blob/master/GENERAL-CONTRIBUTING.md).
- [ ] I have read the [Auth0 Code of Conduct](https://github.com/auth0/open-source-template/blob/master/CODE-OF-CONDUCT.md).
- [ X] I am reporting this to the correct repository.

### Environment

Angular CLI: 6.0.8
Node: 8.12.0
OS: win32 x64
Angular:
...

Package                      Version
-------------------------------------------------
@angular-devkit/architect    0.6.8
@angular-devkit/core         0.6.8
@angular-devkit/schematics   0.6.8
@schematics/angular          0.6.8
@schematics/update           0.6.8
rxjs                         6.2.2
typescript                   2.7.2

using chrome in cognito mode

and

    "@auth0/angular-jwt": "2.1.0",


### Reproduction

this is an eager loaded module
```

export function tokenGetter() {
    return localStorage.getItem(JWT_TOKEN)
}

@NgModule({
    imports: [
        // angular
        CommonModule,

        JwtModule.forRoot({
            config: {
                tokenGetter: tokenGetter,
                whitelistedDomains: [environment.domainName],
                blacklistedRoutes: ['']
            }
        }),

        // ngrx
        StoreModule.forRoot(reducers, {metaReducers}),
        StoreRouterConnectingModule.forRoot(),
        EffectsModule.forRoot([
            AuthEffects
        ]),

        environment.production
            ? []
            : StoreDevtoolsModule.instrument({
                name: 'API'
            }),

        // 3rd party
        TranslateModule.forRoot({
            loader: {
                provide: TranslateLoader,
                useFactory: HttpLoaderFactory,
                deps: [HttpClient]
            }
        })
    ],
    declarations: [],
    providers: [
        LocalStorageService,
        AuthGuardService,
        AnimationsService,
        TitleService,

        {provide: ErrorHandler, useClass: AppErrorHandlerService},
        {provide: RouterStateSerializer, useClass: CustomSerializer}
    ],
    exports: [
        TranslateModule
    ]
})
export class AppCoreModule {
    constructor(@Optional()
                @SkipSelf()
                    parentModule: AppCoreModule) {
        if (parentModule) {
            throw new Error('CoreModule is already loaded. Import only in AppModule')
        }
    }
}

// LIVE
export function HttpLoaderFactory(http: HttpClient) {
    return new TranslateHttpLoader(
        http,
        `${environment.appRootPrefix}/assets/i18n/`,
        '.json'
    )
}
```

Hi, is there any way to pass whitelistedDomains as a promise? The example bellow **jwtOptionsFactory** receives **AppConfigService** which returns the domain value. Just for the record, the service is provided as **APP_INITIALIZER**.

```
export function jwtOptionsFactory(appConfig: AppConfigService) {
  return {
    tokenGetter: TokenHelper.getToken,
    headerName: 'token',
    authScheme: '',
    whitelistedDomains: [appConfig.domain],
    blacklistedRoutes: []
  };
}
```
Hi all,

I just upgrade from old version to new version. Now I have a problem with header. I don't now how can setup Content-type to global. Default Content-type is text/plain. Now I want to change it to application/json. When I can setup it for global.

My app.module.ts

**import { JwtModule } from '@auth0/angular-jwt';
...
JwtModule.forRoot({
      config: {
        tokenGetter: () => LsHelper.getAccessToken(),
        whitelistedDomains: ['localhost:3000'],
      }
})
...**
 