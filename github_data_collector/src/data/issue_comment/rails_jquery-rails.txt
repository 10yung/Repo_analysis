jquery3.self-e200ee796ef24add7054280d843a80de75392557bb4248241e870fac0914c0c1.js?body=1:10092 Uncaught TypeError: url.indexOf is not a function
    at jQuery.fn.init.jQuery.fn.load (jquery3.self-e200ee796ef24add7054280d843a80de75392557bb4248241e870fac0914c0c1.js?body=1:10092)
    at HTMLDocument.<anonymous> (common.self-3ccd50855eb87e1d709fcb22aecb5cf3431f583a079691479559a9777b3d3451.js?body=1:47)
    at mightThrow (jquery3.self-e200ee796ef24add7054280d843a80de75392557bb4248241e870fac0914c0c1.js?body=1:3558)
    at process (jquery3.self-e200ee796ef24add7054280d843a80de75392557bb4248241e870fac0914c0c1.js?body=1:3626)

In my login page i need to use a javascript_include_tag calling the jquery.js. I know that is not usually but in this case i don't need to load all my app javascript on this page.

The javascript_include_tag is on a gem called alego_permissoes (local project gem)

`<%= javascript_include_tag('jquery') %>`

My precompile is configured to generate jquery:

```
# Version of your assets, change this if you want to expire all your assets.
Rails.application.config.assets.version = '1.0'
Rails.application.config.assets.precompile += %w( jquery.js )
```

When i run rake assets:precompile it returns success but don't create jquery file in my public/assets.

Ruby: 2.3.0
Gems:
gem 'rails', '4.2.5'
gem 'jquery-rails', "2.0.3"
gem 'jquery-ui-rails', '6.0.1'

Running in development the asset was load, but any other env that use config.assets.debug false it work.

There is any restriction to call jquery from this gem out of application.js using require ?
#### Example

in js

``` javascript
$( "#cart" ).html( "<%= escape_javascript render(@cart) %>" );
```

in test

``` ruby
assert_select_jquery :html, '#cart' do
    # some codes
end
```

result in

```
No JQuery call matches [:html, "#cart"]
```
#### Related code

(lib/jquery/assert_select.rb:53)

``` ruby
pattern = "\\s*\\.#{jquery_method || '\\w+'}\\("
```

(lib/jquery/assert_select.rb:56)

``` ruby
pattern = "(?:jQuery|\\$)\\(['\"]#{id}['\"]\\)#{pattern}" if id
```
#### My Solution ( add "\\s?" )

(lib/jquery/assert_select.rb:53)

``` ruby
pattern = "\\s*\\.#{jquery_method || '\\w+'}\\(\\s?"
```

(lib/jquery/assert_select.rb:56)

``` ruby
pattern = "(?:jQuery|\\$)\\(\\s?['\"]#{id}['\"]\\s?\\)#{pattern}" if id
```
