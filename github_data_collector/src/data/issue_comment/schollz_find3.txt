While trying to build the docker image on an arm64 system, numpy and scipy both failed because they were unable to find the 'Cython' module.  I'm not sure if this is a peculiarity of arm64 builds or if it would apply to other architectures, but in order to get it to build I had to add cython to the Dockerfile ([see my changes here](https://github.com/SammyIAm/find3/commit/b81e81a240d38f25aaa24b376e9c5c11ddd147cd)).

Not even sure if I went about fixing that appropriately since I'm still relatively new to Docker, but in case it's helpful for others building the image I figured I'd open an issue.
I'm a new enginer,I did not use the two language mix programing.what program tools for this project?
how to start the server?
Hello, 

I'm starting a find3-server in my linux computer but i'm getting a very bad accuracy. Is there any different setup I need to make for find3-server to work properly?

Here my docker run command:

```
docker run -p 1884:1883 -p 8005:8003 \
	-v /home/$USER/FIND_DATA:/data \
    -e MQTT_ADMIN=gerson \
    -e MQTT_PASS=abc123 \
    -e MQTT_SERVER='localhost:1883' \
	-e MQTT_EXTERNAL='152.254.146.77' \
	-e MQTT_PORT=1884 \
	--name find3server -d -t schollz/find3
```

I'm using find3 documentation from:
 https://www.internalpositioning.com/doc/server_setup.md

Same as #78 and #84. The usual solution to this something like https://github.com/rauchg/slackin
A `Dockerfile` for each server [`ai`, `main`] and `docker-compose.yml` would make development and deployment easier.

Instead of rebuilding the whole system via docker every development interation, we would only build the parts that have been modified.
Hey guys , 

so there is no where in the code where i can tweak the tracking intervals. can somebody guide me to where i can tweak that to have an almost real time tracking. 
I'm not sure what your binary needs, but if you know, using multi stage docker builds will help to make the docker image very small.
(https://docs.docker.com/develop/develop-images/multistage-build/)

If you tell me, i'm glad to help.
My setup consists of (currently) two Wi-Fi passive scanners and some devices that do active scanning.

For my laptop, this means that I have an entry `arch-club` (which I set using `find3-cli-scanner`), and another `wifi-94:65:9c:91:f4:4c`. Is there any intent to have kind of an aliasing system, where two names can designate the same device?

It might also enable me to assign an alias to passively tracked devices (which only get their MAC address as identifier now).
I was using the JSON from the documentation in a test, apparently it contained a trailing comma (which is disallowed in JSON) and some trailing white space.
Installed the FIND3 server from source on a raspberry pi 3 running raspbian buster, following the instructions on the official document here: https://www.internalpositioning.com/doc/server_setup.md
When running the test suite the analysis fails.
Output from AI server is:
```
rm -rf __pycache__*
rm -rf src/__pycache__*
rm -rf venv/*
export FLASK_APP=server.py && \
export FLASK_DEBUG=1 && \
cd src && \
flask run --debugger --port 8002
 * Serving Flask app "server.py" (lazy loading)
 * Environment: production
   WARNING: Do not use the development server in a production environment.
   Use a production WSGI server instead.
 * Debug mode: on
 * Running on http://127.0.0.1:8002/ (Press CTRL+C to quit)
 * Restarting with stat
 * Debugger is active!
 * Debugger PIN: 263-968-070
/usr/local/lib/python3.7/dist-packages/sklearn/ensemble/weight_boosting.py:29: DeprecationWarning: numpy.core.umath_tests is an internal NumPy module and should not be imported. It will be removed in a future NumPy release.
  from numpy.core.umath_tests import inner1d
/usr/local/lib/python3.7/dist-packages/sklearn/ensemble/weight_boosting.py:29: DeprecationWarning: numpy.core.umath_tests is an internal NumPy module and should not be imported. It will be removed in a future NumPy release.
  from numpy.core.umath_tests import inner1d
2019-07-17 13:36:26,719 - [server/classify] - DEBUG - loading /root/go/src/github.com/schollz/find3/server/main/data/zxo1qZZb.find3.ai
127.0.0.1 - - [17/Jul/2019 13:36:26] "POST /classify HTTP/1.1" 200 -
2019-07-17 13:36:26,846 - [server/classify] - DEBUG - loading /root/go/src/github.com/schollz/find3/server/main/data/zxo1qZZb.find3.ai
```

Output from main data storage server is:
```
2019-07-17 13:35:27 [INFO] [PID-2818] server.go Run:579 Running on 0.0.0.0:8005
2019-07-17 13:36:26 [INFO] [PID-2818] server.go func1:1360 [::1]:34236 POST /data?justsave=0 91.845814ms
2019-07-17 13:36:26 [ERROR] [PID-2818] analysis.go AnalyzeSensorData:222 unable to analyze: could not find '/root/go/src/github.com/schollz/find3/server/main/data/zxo1qZZb.find3.ai'
2019-07-17 13:36:26 [INFO] [PID-2818] server.go func1:1360 [::1]:34238 POST /data?justsave=0 128.379374ms
2019-07-17 13:36:26 [ERROR] [PID-2818] analysis.go AnalyzeSensorData:222 unable to analyze: could not find '/root/go/src/github.com/schollz/find3/server/main/data/zxo1qZZb.find3.ai'
```

I have check at the path given and there is no ***find3.ai file present, there is only an sqlite3.db file. This is the second time I have tried to reinstall the thing from scratch and I encounter the same issue.
(Docker installation hanged for a couple of hours, so decided to install it from source)
