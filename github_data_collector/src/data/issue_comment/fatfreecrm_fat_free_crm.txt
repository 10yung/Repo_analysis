Hello
Running Fat Free CRM version 0.18.1 (mysql2). 
All works ok. When changed to "ru" locale in settings.default.yml file and services restart gives Error 500 on accessing  /opportunities, /campaigns, /leads, /accounts 
Works ok on /tasks
Locales ja, pt-BR, en-GB and others don't have this issue


OS 
cat /etc/os-release 
NAME="Ubuntu"
VERSION="19.10 (Eoan Ermine)"
ID=ubuntu
ID_LIKE=debian
PRETTY_NAME="Ubuntu 19.10"

LANG=C.UTF-8
LANGUAGE=
LC_CTYPE="en_US.UTF-8"
LC_NUMERIC="en_US.UTF-8"
LC_TIME="en_US.UTF-8"
LC_COLLATE="en_US.UTF-8"
LC_MONETARY="en_US.UTF-8"
LC_MESSAGES="en_US.UTF-8"
LC_PAPER="en_US.UTF-8"
LC_NAME="en_US.UTF-8"
LC_ADDRESS="en_US.UTF-8"
LC_TELEPHONE="en_US.UTF-8"
LC_MEASUREMENT="en_US.UTF-8"
LC_IDENTIFICATION="en_US.UTF-8"
LC_ALL=en_US.UTF-8

locale -a
C
C.UTF-8
en_US.utf8
POSIX
ru_RU
ru_RU.iso88595
ru_RU.utf8


Hi! I've installed the crm (v0.18.1) as an engine in a new Rails 5.1 app. I now try to create a user in the console but validation fails:

![image](https://user-images.githubusercontent.com/3055997/70717543-d932ca00-1cee-11ea-99d7-538abbe48ec2.png)

 If I save with `save!` I receive this message: `ActiveRecord::RecordInvalid (Validation failed: Related must exist, User must exist)`

Also another minor issue: I needed to add this in my assets file: `Rails.application.config.assets.precompile += %w[*.png *.jpg *.jpeg *.gif]`

 - [ ] Secrets - Need to setup rubygems API key (https://rubygems.org/profile/edit) via https://help.github.com/en/actions/automating-your-workflow-with-github-actions/creating-and-using-encrypted-secrets  
### **Note:** This isn't an actual defect.  This is a public service announcement.

<hr />

I created a docker build that will provide an image that will run on either Intel hosts (`amd64`) or raspbian ARM hosts (`arm32v7`).  I forked the project to [Gitlab](https://gitlab.com/dave.bell/fat_free_crm) so I could get the CI system to build and publish the resulting images.

You can pull using `registry.gitlab.com/dave.bell/fat_free_crm:latest`.  That image is phat one, on Intel hosts you will get the `amd64` image while on a raspberry pi you will get the `arm32v7` image.  You can see all the [images here](https://gitlab.com/dave.bell/fat_free_crm/container_registry).

The builds are based off the `multiarch-build` branch.  The Gitlab repo pulls from GitHub on a regular basis.  When new changes are pulled into that branch a CI run kicks off and new images are published to the container registry.  At the moment changes need to be manually pulled into the build branch.


An initial PR to see what's failing.

- [ ] Need to verify if the restrictions being relaxed are valid, or just poor test case setup
- [ ] Need to write some data migration guidance
- [ ] ```     NoMethodError:
       To respond to a custom format, register it as a MIME type first: http://guides.rubyonrails.org/action_controller_overview.html#restful-downloads. If you meant to respond to a variant like :tablet or :phone, not a custom format, be sure to nest your variant response within a format response: format.html { |html| html.tablet { ... } }```
 - [ ] FactoryBot version bump - is it needed? ``` 1) Admin::FieldGroupsHelper should return the correct info text about tag restrictions and classes for groups ```
It's not the best practice, when we could serialize the data in a neutral format, such as JSON.

Usage in the system is along the lines of:
```
      @asset = current_user.pref[:activity_asset] || "all"
      @action = current_user.pref[:activity_event] || "all_events"
      @user = current_user.pref[:activity_user] || "all_users"
      @duration = current_user.pref[:activity_duration] || "two_days"
    current_user.pref[:activity_asset] = params[:asset] if params[:asset]
    current_user.pref[:activity_event] = params[:event] if params[:event]
    current_user.pref[:activity_user] = params[:user] if params[:user]
    current_user.pref[:activity_duration] = params[:duration] if params[:duration]
    current_user.pref[:accounts_per_page] = per_page_param if per_page_param
    current_user.pref[:accounts_sort_by]  = Account.sort_by_map[params[:sort_by]] if params[:sort_by]
    current_user.pref[:campaigns_per_page] = per_page_param if per_page_param
    current_user.pref[:campaigns_sort_by]  = Campaign.sort_by_map[params[:sort_by]] if params[:sort_by]
    current_user.pref[:contacts_per_page] = per_page_param if per_page_param

      current_user.pref[:contacts_sort_by] = Contact.sort_by_map[params[:sort_by]]
       current_user.pref[:leads_sort_by] ||= Lead.sort_by_map[params[:sort_by]]
      current_user.pref[:contacts_naming] = params[:naming]
      current_user.pref[:leads_naming] ||= params[:naming]
```

For the majority of simple strings, we should probably just use session storage.

In other places; we have hashes:
```
      # Return hash that maps sort options to the actual :order strings, for example:
      #   "first_name" => "leads.first_name ASC",
      #   "last_name"  => "leads.last_name ASC"
      #--------------------------------------------------------------------------
      def sort_by_map
        Hash[
          sort_by_fields.zip(sort_by_clauses).map do |field, clause|
            [field, name.tableize + "." + clause]
          end
        ]
      end
```


https://edgeguides.rubyonrails.org/6_0_release_notes.html#upgrading-to-rails-6-0
https://github.com/thoughtbot/paperclip/blob/master/MIGRATING.md
#833 
From https://travis-ci.org/fatfreecrm/fat_free_crm/jobs/605790930 we can see the initializer for constants is loading more than once. We should probably put an if !defined check...
```
/home/travis/build/fatfreecrm/fat_free_crm/config/initializers/constants.rb:8: warning: already initialized constant ENTITIES
/home/travis/build/fatfreecrm/fat_free_crm/config/initializers/constants.rb:8: warning: previous definition of ENTITIES was here
```