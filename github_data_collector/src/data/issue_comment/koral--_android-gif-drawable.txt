Caused by: com.android.dx.cf.iface.ParseException: bad class file magic (cafebabe) or version (0034.0000).
the JDK version not match cause the problem？
Basic information of equipment：
Equipment type：金立 M3
System version：Android 5.1,level 22
ROM：Meizu/FLYME
CPU Framework：arm64-v8a



Log：

# main(1)

java.lang.UnsatisfiedLinkError

dlopen failed: "/data/data/com.puhalive.live/app_lib/libpl_droidsonroids_gif.so" is 64-bit instead of 32-bit

java.lang.RuntimeException:Unable to start activity ComponentInfo{com.puhalive.live/com.puhalive.live.ui.main.MainActivity}: android.view.InflateException: Binary XML file line #179: Error inflating class pl.droidsonroids.gif.GifImageView


Caused by:
--
5 java.lang.UnsatisfiedLinkError:dlopen failed: "/data/data/com.puhalive.live/app_lib/libpl_droidsonroids_gif.so" is 64-bit instead of 32-bit


I call GifDrawable.getCurrentPosition() every 10ms to update the UI progress. This method will return a negative value when the gif is closing to the end.
Encountered a situation of possible memory leak, or was it a misusage?

My code was like this:
```java
frequently_called_binding_function (My_GifImageView_Pool pool) {
    GifImageView gifImageView= pool.get();

    gifImageView.setImageBitmap(a small size bitmap as a thumbnail);

    runOnWorkerThread(() -> {
        ParcelFileDescriptor pfd = download a gif from server();
        runOnUiThread(() -> {
            GifDrawable gifDrawable = new GifDrawable(pfd.getFileDescriptor());
            gifImageView.setImageDrawable(gifDrawable);
            pfd.close();
        }
    });
}
```
That pool had a fix number of  `GifImageView`s, and never re-created new `GifImageView`.
Runing this binding function a dozens of time bumped the natvie heap from 30mb to ~200mb, and forcing gc would not help.

I fix this by manually recycling `GifDrawable` before `#setImageBitmap`:
```java
gifImageView.getDrawable().recycle(); // leaving out null check and cast
gifImageView.setImageBitmap(a small size bitmap as a thumbnail);
```

I'm not sure if this should be considered as a leak, and I'm sorry if I wasted anyone's time.
(21147): *** *** *** *** *** *** *** *** *** *** *** *** *** *** *** ***
04-09 11:15:33.889 F/DEBUG   (21147): Build fingerprint: 'samsung/star2qltezc/star2qltechn:9/PPR1.180610.011/G9650ZCU3CSAB:user/release-keys'
04-09 11:15:33.889 F/DEBUG   (21147): Revision: '14'
04-09 11:15:33.889 F/DEBUG   (21147): ABI: 'arm'
04-09 11:15:33.889 F/DEBUG   (21147): pid: 20725, tid: 20964, name: pool-14-thread-  >>> com.h.u.u <<<
04-09 11:15:33.889 F/DEBUG   (21147): signal 11 (SIGSEGV), code 1 (SEGV_MAPERR), fault addr 0x0
04-09 11:15:33.889 F/DEBUG   (21147): Cause: null pointer dereference
04-09 11:15:33.889 F/DEBUG   (21147):     r0  00000000  r1  00000000  r2  00430000  r3  edc38a59
04-09 11:15:33.889 F/DEBUG   (21147):     r4  cc41a300  r5  cc41a318  r6  00000014  r7  c3eff410
04-09 11:15:33.889 F/DEBUG   (21147):     r8  c3eff460  r9  001a020d  r10 ce92a670  r11 00000000
04-09 11:15:33.889 F/DEBUG   (21147):     ip  eeb237c0  sp  c3eff3e0  lr  ee883185  pc  ee8830f8
04-09 11:15:33.950 F/DEBUG   (21147): 
04-09 11:15:33.950 F/DEBUG   (21147): backtrace:
04-09 11:15:33.950 F/DEBUG   (21147):     #00 pc 003970f8  /system/lib/libhwui.so (SkPixelRef::callGenIDChangeListeners()+40)
04-09 11:15:33.950 F/DEBUG   (21147):     #01 pc 00397181  /system/lib/libhwui.so (SkPixelRef::notifyPixelsChanged()+4)
04-09 11:15:33.950 F/DEBUG   (21147):     #02 pc 000d067b  /system/lib/libandroid_runtime.so (android::bitmap::unlockPixels(_JNIEnv*, _jobject*)+22)
04-09 11:15:33.950 F/DEBUG   (21147):     #03 pc 000008e7  /system/lib/libjnigraphics.so (AndroidBitmap_unlockPixels+20)
04-09 11:15:33.950 F/DEBUG   (21147):     #04 pc 00001eeb  /data/app/com.h.u.u-GNEfKS2wiZxOc8LYS6Sp-Q==/lib/arm/libpl_droidsonroids_gif.so
04-09 11:15:33.950 F/DEBUG   (21147):     #05 pc 00001fd5  /data/app/com.h.u.u-GNEfKS2wiZxOc8LYS6Sp-Q==/lib/arm/libpl_droidsonroids_gif.so (Java_pl_droidsonroids_gif_GifInfoHandle_renderFrame+104)
04-09 11:15:33.950 F/DEBUG   (21147):     #06 pc 000afd1b  /data/app/com.h.u.u-GNEfKS2wiZxOc8LYS6Sp-Q==/oat/arm/base.odex (offset 0xa7000) (pl.droidsonroids.gif.GifInfoHandle.renderFrame+130)
Suppose I use this gif:

[gif.zip](https://github.com/koral--/android-gif-drawable/files/2617329/gif.zip)

Here's how well it works on live wallpaper, vs on Activity:

[videos.zip](https://github.com/koral--/android-gif-drawable/files/2617391/videos.zip)

How come?
I've tested other solutions of showing GIF/WEBP animation, and they also had the same issue.
As the title says...
Example:
http://nokiatech.github.io/heif/content/image_sequences/starfield_animation.heic

Taken from:

http://nokiatech.github.io/heif/examples.html
After updating from `1.2.12` to `1.2.15` I see a lot of OutOfMemoryErrors in GifDrawable.scheduleNextRender. I only see this in firebase over a wide range of Android versions and devices, i could not recreate the issue locally.
In a background thread I am just loading a `GifDrawable` from a `RandomAccessFile.getFD()` that I am closing after creating the `GifDrawble`. On the main thread I am passing the `GifDrawable` to a `ImageView` and calling `currentFrameIndex` and `numberOfFrames`, as well as `pause(), start(), stop()` and `seekTo(0)` once or twice.
![20181015-213144](https://user-images.githubusercontent.com/11006365/46973911-dfb1bb80-d0c2-11e8-9231-8d08272eeb75.png)
![20181015-213157](https://user-images.githubusercontent.com/11006365/46973912-dfb1bb80-d0c2-11e8-9e5c-867de8729e03.png)

I have an animation, about 270ms, but I did not execute onAnimationCompleted after execution.
```
GifDrawable gifDrawable = new GifDrawable(bitmap.getX());
gifDrawable.setLoopCount(1);
if (gifDrawable.getDuration() > 100) {
       gifDrawable.addAnimationListener(new AnimationListener() {
                @Override
                public void onAnimationCompleted(int loopNumber) {
                      Log.e("liumj","走了onAnimationCompleted");
                       }
       );
}
gifDrawable.start();
```
As in: https://github.com/koral--/android-gif-drawable/issues/584#issuecomment-425711958