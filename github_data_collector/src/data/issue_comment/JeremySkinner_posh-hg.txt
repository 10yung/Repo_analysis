Hi @JeremySkinner 
Do you think it would be possible for you to publish the module to powershell gallery?
I can help you with that if needed and also automate it if you want.

I've had an experience where something went wrong with the installation of posh-hg, so I'd like to re-install it. The problem is that when running through the install script, it only says, "It seems posh-hg is already installed...". It would be great to have an uninstall script or uninstall instructions that would leave the system in a state where posh-hg could be installed again.

Adding try/catch logic to Write-VcsStatus so that if one of the scriptblocks that has been added to the VcsPromptStatuses array fails the other scriptblocks are not affected (are still invoked)

This complements the posh-git pull request https://github.com/dahlbyk/posh-git/pull/170

…ferenced in the module unload

This complements the posh-git pull request https://github.com/dahlbyk/posh-git/pull/169

Hello,

I'm using ConEmu + posh-hg. Thanks for the tool, its is really great.

The only serious issue I've found so far is regarding mapped network drivers.

I've use the command `New-PSDrive –Name "Z" –PSProvider FileSystem –Root \\myremote\myshare –Persist` to create a new network driver. It happens that the path is a mecurial repository. However, hg.exe takes a long time to resolve this path. It isn't a network issue because this share is actually on one of my virtual machines. When I disable hg, it is very fast to access the folder.

I can profile the directory change to see how long it takes, but it's about 5, 6 seconds everytime I hit the "enter" button. My machine is also OK (i7, 16 GB RAM, SSD), so it should not take that long.

Thanks for everything

A command to check if something to pull exists in the remote repo. Useful to trigger some CI stuff for example. It return false if the dir is not a repository, true if the dir is a repository and the local rpository is not up to date with the remote

Submitting a similar set to posh-git -- could probably go further than this to integrate them, but this is enough for step one

Currently branch name has background that is different from settings you choose for powershell 
![image](https://f.cloud.github.com/assets/209227/796638/eb2618f6-ed2b-11e2-9b50-0d7bc3f2081c.png)

Added # of changes in subrepositories to the prompt

Notably, in Powershell ISE.
1. In ISE, `PS C:\Repo> Import-Module C:\Source\posh-hg\posh-hg.psm1`
2. `PS C:\Repo> $global:PoshHgSettings` and note the colors are -1
3. `PS C:\Repo> write-vcsstatus` fails with 6 errors like the following:

```
    Write-Host : Cannot process Color because -1 is not a valid color.
    Parameter name: value
    Actual value was -1.
    At C:\Source\posh-hg\HgPrompt.ps1:16 char:19
    +         Write-Host <<<<  $s.BeforeText -NoNewline -BackgroundColor $s.BeforeBackgroundColor -ForegroundColor $s.BeforeForegroundColor
        + CategoryInfo          : InvalidArgument: (:) [Write-Host], ArgumentOutOfRangeException
        + FullyQualifiedErrorId : SetInvalidBackgroundColor,Microsoft.PowerShell.Commands.WriteHostCommand
```
