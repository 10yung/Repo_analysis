Can we have a separate package for the native version instead of using `@native`? This causes the package to always show up as outdated when running `yarn outdated` 
<img width="960" alt="Screen Shot 2020-01-13 at 9 27 53 am" src="https://user-images.githubusercontent.com/4890571/72229124-02dd5a80-35e7-11ea-96ab-2c1de2dbfe2a.png">

It also causes the non-native version from installing by default if there isn't a lock file.

Thanks!
I would love to see a feature where the queue retried all items in the queue every time. I find that when one request fails, all the following requests aren't retried.

Ex,
1. Send request, get a 500 error at the service level
2. Next queued requests are not run until the above request is eventually resolved.
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.10 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.10...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.10&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/redux-offline/redux-offline/network/alerts).

</details>
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/redux-offline/redux-offline/network/alerts).

</details>
TypeScript issue with discard function returning a Promise<boolean>. The app is running fine with no issues so far but I was wondering if this is of any concern, thanks.

Version "@redux-offline/redux-offline": "^2.5.2-native.1"


```js
Type '(error: any, action: OfflineAction, retries: number) => Promise<boolean>' is not assignable to type '(error: any, action: OfflineAction, retries: number) => boolean'.
  Type 'Promise<boolean>' is not assignable to type 'boolean'.
```


```js
const discard = async (error: any, action: OfflineAction, retries: number): Promise<boolean> => {
	const { response } = error;

	if (response.status === 401) {
		const success = await refreshToken();
		return !success;
	}

	return response.status >= 400 && response.status < 500;
};
```
## Description
When using redux-offline in a react-native app while a vpn is active on a device the offline section reports `online: false` and therefore no requests are executed. In such a case NetInfo itself reports the following:
```js
{
  details: {
    isConnectionExpensive: false
  }
  isInternetReachable: true
  isConnected: true
  type: "vpn"
}
```

Could it be that redux-offline checks for the type but doesn't handle `vpn` as a case there? Maybe you can point me in a direction to help identify the problem or even fix it.

I appreciate the work you are doing here, it's a huge help!

## Additional Info
### Version

```
"@redux-offline/redux-offline": "^2.5.2-native.1",
```

### Are you using `offline()` or `createOffline()` API?
_If you're using `createOffline()` API, be sure to use `compose()` in the right order._

I'm using `createOffline`.

### Store config
Please paste your config below.

_Happy to provide this info if it gets relevant, it's a complex structure_

### Offline config

Are you using a custom configuration? If you are please paste your config below.
```js
import defaultOfflineConfig from '@redux-offline/redux-offline/lib/defaults'

const config = {
  store: {
    offline: {
      persistOptions: {
        storage: AsyncStorage,
        whitelist: ['someModules'],
      },
    }
  }
}


createOffline({
  ...defaultOfflineConfig,
  ...config.store.offline,
  effect, // a complex function and not relevant for the issue
  queue: queue({ // a function not relevant for the issue
    enqueueMultipleBlacklist: ['someModule/specific-action'],
  }),
  retry, // a complex function and not relevant for the issue
})
```
If you need code indentation, you can use [Prettier](https://prettier.io/playground/#N4Igxg9gdgLgprEAuEAzArlMMCW0AEAEnADYkQDqEATiQCYAUwA5tXHLlM-gLz4A6IABalyggDT5W7eHV74A5IKq06ghZIDOOEghjzUAQxKa4k6AFkI6UwHkAbnGriAvgEp8wflG-58OVAYAQmkOHC43YDYYdGoofCh0MhcAbm9fPz8Aeiz8ABVbABFbJHxC6AV9Gzh8akMoOggAW394tganDN19RJa+C0MYIQA6VHIafAYBoeG6huaGDwAqfABGAFEAagB2N2GYCABlGGpw5kXZuAAHEkMwOAYs-n5h57pNrJxmSUFBN3T4rUOLF4gAeOg4ez4MC3TSaAByhiacB4CmIZEoNHoCnwuBguh4wAABgBNaz4QxsfD2HDaA7UBLoJoAIyc+AAJMBGS0XESXPhLNY7I5qITBdUHE4XAA+AGZfCgzQnaDMaVc0KcZjDTQkHD3Bj4AAMklW+D2BwAqlcrk4AMKGUyLfCbKRsMJcbW6-Wrc0QAAyEAA7naHQ8PC5QVkldQVbLAX4WG7NcMEHRNBQcEMGBI-vgAPwCECF-ClRVXer4JUATwJwGAkHI1FKSn40irChcMokhcjmnLUGl+BcGT8oLgTTj-Bg6qTcDkw58MEj47j8q5DG0ulg-3jmQLgleIBHmVKgiCggXx8jEPs0rSPigLhA4hAECuuGgmmQoEpMcDAAVKQQL8UEMewIBwOhnxAZk6jAABrDhDnLMAzmQE50DMEBwlMagYH-OpmCaQxkCMEwsIAK00AAPAAhODEJgQ4kTgP1wjgUjjFMF9y2oXDkBgwxmRraBoKuU5YAzOghmQAAOY0QHEiBTAoOorgE8S4FwxxoLYABHdAcDYAjDCIkikDI7iQFMJocHQ6hMJfbQuF0ABFdAIHgezHJAGAhKkmSkAAJhfE5DB0M5bWaYiBKgaAOJfao8iEkDLLgTsgA).

### Are you reporting a bug?
If you've detected a bug and are able to reproduce it please share a code example using our [code-sandbox](https://codesandbox.io/s/8xml9l1r0j).

_This issue occurs in a React Native app_

Hey everyone,

Just curious if the maintainers of this repo have any suggestions as to good first issues for a new contributor to help move the project forward. I've been using redux offline in react native a lot at work and want to try improving it a bit, but don't want to waste my time on something inconsequential, or that will never get merged.

Thanks, this has been a really useful project for me.
Expo 36 bumped the React Native version above 0.60 thus requiring the native branch. Unfortunately, the native branch also switches to using `@react-native-community/async-storage` which is not supported by expo. This pull request restores support for Expo 36 by moving back to the deprecated `import { AsyncStorage } from "react-native";` until such a time that Expo adds support.

I am unsure whether the community would want to move back to react-native AsyncStorage since it is deprecated, but for the significant number of developers using managed Expo they cannot use `@react-native-community/async-storage` until Expo chooses to support it. It might be best to put this on its own branch, or simply leave it here so other developers who upgrade to Expo 36 can still figure out how to use redux offline with Expo 36.

I'm still somewhat new to redux-offline, so if I missed anything please let me know. 
Hi, we're using AWS AppSync and its offline capability which currently uses Redux-Offline. (I haven't put in the details about the config etc. as we're using the standard AWS AppSync/Apollo configuration.)

We've built a ReactNative (in fact Expo) app for engineers are working in various locations where 4G signal is intermittent and Almost all the time, this works really, really well. GraphQL mutations get queued up when the app is offline and replayed when it's online. 

However a few engineers have reported that the updates aren't reaching the server. We've now managed to reproduce this behaviour:

1. Set the device (iOS or Android, it doesn't matter) to Airplane mode, 
2. Use the app to create lots of queued mutations (say 30+).
3. Switch off airplane mode and connect back to Wifi.
4. While the mutations are playing, kill the app (it's obviously important to do this before all the mutations have been played).
5. Often (but not always), we'll now be in a state where the queue is stuck. 

We can't find anything to do to budge it. Going on and offline makes no difference. Killing and restarting the app again also. Anything else we could try?

The only thing we've found is dispatching the RESET action which clears the queue, but that's not much good, it makes the App work again, but at the cost of having lost all those updates.

Using the RNDebugger, we can see the offline queue and we can see that there are retries and sometimes the store says it's busy, but not always. It also seems to be scheduling retries, but nothing budges in the queue.

Can anyone suggest what might be going wrong? How can I diagnose the problem? 

Could it be that some metadata is getting changed in preparation to being sent to the server and then the fact that it's being killed mid-way through means it's in a messed up state and so each time you retry, it can't get over this first item in the queue? Is there any way we could detect this and repair it?

Thanks!!!
### using `offline()` API.

### Store config
Please paste your config below.
```js
import {createStore, applyMiddleware, compose} from 'redux';
import createSagaMiddleware from 'redux-saga';
import {offline} from '@redux-offline/redux-offline';
import offlineConfig from '@redux-offline/redux-offline/lib/defaults';
import rootReducer from './modules/rootReducer';
import rootSaga from './modules/rootSaga';

const sagaMonitor = __DEV__ ? console.tron.createSagaMonitor() : null;
const sagaMiddleware = createSagaMiddleware({
  sagaMonitor,
});

const enhancer = __DEV__
  ? compose(
      console.tron.createEnhancer(),
      applyMiddleware(sagaMiddleware),
      offline(offlineConfig)
    )
  : compose(applyMiddleware(sagaMiddleware), offline(offlineConfig));
const store = createStore(rootReducer, enhancer);
sagaMiddleware.run(rootSaga);
export default store;
```

### Try using the versions, but with BUG
```
"@react-native-community/netinfo": "^5.0.0",
"@redux-offline/redux-offline": "^2.5.2-native.1",
```
I have the following error message
### Message error
```
 LOG  Running "reportBugOffline" with {"rootTag":1}
 WARN  Possible Unhandled Promise Rejection (id: 0):
TypeError: _netinfo.default.getConnectionInfo is not a function. (In '_netinfo.default.getConnectionInfo()', '_netinfo.default.getConnectionInfo' is undefined)
_callee2$@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:140094:58
tryCatch@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:25666:23
invoke@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:25841:32
asyncGeneratorStep@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138685:26
_next@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138707:29
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138714:14
tryCallTwo@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:27030:9
doResolve@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:27194:25
Promise@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:27053:14
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138703:25
DetectNetwork@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:140147:17
_default@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:140192:29
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138300:31
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:97213:38
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:132476:26
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:135669:38
loadModuleImplementation@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:271:14
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:95961:50
loadModuleImplementation@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:271:14
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:1282:48
loadModuleImplementation@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:271:14
guardedLoadModule@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:163:47
global code@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:143626:4
 WARN  Possible Unhandled Promise Rejection (id: 1):
TypeError: _netinfo.default.getConnectionInfo is not a function. (In '_netinfo.default.getConnectionInfo()', '_netinfo.default.getConnectionInfo' is undefined)
_callee4$@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:140172:60
tryCatch@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:25666:23
invoke@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:25841:32
asyncGeneratorStep@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138685:26
_next@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138707:29
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138714:14
tryCallTwo@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:27030:9
doResolve@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:27194:25
Promise@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:27053:14
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:138703:25
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:35464:24
emit@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:3316:42
__callFunction@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:2648:49
http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:2361:31
__guard@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:2602:15
callFunctionReturnFlushedQueue@http://10.0.3.2:8081/index.bundle?platform=android&dev=true&minify=false:2360:21
callFunctionReturnFlushedQueue@[native code]
```
## Offline config


### The Bug apparently comes from updating react-native-net-info

The error occurs when you use the
package.json
```
"@ react-native-community / netinfo": "^ 5.0.0",
"@ redux-offline / redux-offline": "^ 2.5.2-native.1",
``` 
however, when a version is used
```
"@ react-native-community / netinfo": "^ 4.6.1",
"@ redux-offline / redux-offline": "^ 2.5.2-native.1"
```
![Capturar](https://user-images.githubusercontent.com/26725447/70925538-23c38780-200a-11ea-94f3-942cf96a3400.PNG)
### React-native info
```
info Fetching system and libraries information...
System:
    OS: Windows 10 10.0.18362
    CPU: (4) x64 Intel(R) Core(TM) i5-7400 CPU @ 3.00GHz
    Memory: 562.76 MB / 7.91 GB
  Binaries:
    Node: 10.16.0 - C:\Program Files\nodejs\node.EXE
    Yarn: 1.16.0 - C:\Program Files (x86)\Yarn\bin\yarn.CMD
    npm: 6.9.0 - C:\Program Files\nodejs\npm.CMD
  SDKs:
    Android SDK:
      API Levels: 22, 23, 25, 27, 28, 29
      Build Tools: 23.0.1, 25.0.3, 27.0.3, 28.0.3, 29.0.1, 29.0.2
      System Images: android-22 | ARM EABI v7a, android-22 | Google APIs ARM EABI v7a, android-22 | Google APIs Intel x86 Atom, android-22 | Google APIs Intel x86 
Atom_64, android-23 | ARM EABI v7a, android-23 | Google APIs ARM EABI v7a, android-25 | Google APIs ARM 64 v8a, android-25 | Google APIs ARM EABI v7a, android-27 | Google APIs Intel x86 Atom, android-27 | Google Play Intel x86 Atom, android-28 | Google APIs Intel x86 Atom, android-29 | Google APIs Intel x86 Atom, android-29 
| Google Play Intel x86 Atom
      Android NDK: 20.0.5594570
  IDEs:
    Android Studio: Version  3.5.0.0 AI-191.8026.42.35.5791312
  npmPackages:
    react: 16.9.0 => 16.9.0
    react-native: 0.61.5 => 0.61.5
```
### Repository - reproduce
[Repository with Bug](https://github.com/Andersonfrfilho/react-native-bugs)