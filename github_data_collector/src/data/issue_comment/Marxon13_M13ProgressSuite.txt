Since iOS13 you cannot get system font name by string.

The console outputs a note: `CoreText note: Client requested name ".SFUI-Regular", it will get TimesNewRomanPSMT rather than the intended font. All system UI font access should be through proper APIs such as CTFontCreateUIFontForLanguage() or +[UIFont systemFontOfSize:].`

One use case is into `maximumFontSizeThatFitsInRect` method of M13ProgressViewBar.m

```
textRect = [@"100%" boundingRectWithSize:frame.size options:(NSStringDrawingUsesLineFragmentOrigin|NSStringDrawingUsesFontLeading) attributes:@{NSFontAttributeName : [UIFont fontWithName:((__bridge UIFont*)_percentageLabel.font).fontName size:fontSize]} context:nil];
```

I think it should be changed in `[UIFont systemFontOfSize: fontSize]`
I want to change the color segment light gray to white. 

When i am used secondary color it is changing entire part.

can any one please tell me. 

I need it's urgent. 

(https://user-images.githubusercontent.com/28728191/48615206-3fe39800-e9b6-11e8-8521-551705cab223.png)


Replaced it with .preferredFramesPerSecond.

Removes use of something that's deprecated and in turn gets rid of an xcode warning
<img width="314" alt="screen shot 2018-05-21 at 4 44 44 pm" src="https://user-images.githubusercontent.com/1025091/40298752-b73acea0-5d16-11e8-9792-1d5e1b825ae3.png">

See code below:

```swift
progressViewBordered.borderWidth = 0
progressViewBordered.cornerType = M13ProgressViewBorderedBarCornerTypeCircle
progressViewBordered.cornerRadius = 10.0
progressViewBordered.primaryColor = UIColor.orange
progressViewBordered.backgroundColor = UIColor.lightGray
progressViewBordered.setProgress(0.70, animated: true)
```
Only the orange bar is affected by the cornerRadius. The gray part is still square.
M13ProgressViewPie progressView. when I set pie.primaryColor, pie.progressLayer.strokeColor = self.primaryColor.CGColor. There is a primaryColor line when progress = 0.0. So I want to understand that why do you set strokeColor and not fillColor.
I m using it to upload files to server. So large files may take some time to upload. 

It would be nice to have a cancel button with the progress view to allow user to cancel the upload. 


Resolves issue #105 for segmented ring view, #108 only resolved an issue in ring view.
Hi!
Using iPad Air 2 iOS 11.1
I get EXC_BAD_ACCESS in M13ProgressViewImage.m at this line 
`//Convert to grayscale using luma coding: http://en.wikipedia.org/wiki/Grayscale#Converting_color_to_grayscale`
`uint8_t gray = (uint8_t)(0.3 * rgbaPixel[RED] + 0.59 * rgbaPixel[GREEN] + 0.11 * rgbaPixel[BLUE]);` 
by updating the progress of an image frequently (as the content downloads)
hi i am using M13ProgressSuite. it is very good.
but i found a problem and want to look for help.
a function called "setProgress(_ progress: CGFloat, animated: Bool)" in M13ProgressView class
will crash if call it quickly.

this is my code i update the progress with M13ProgressViewImage class instance.
the callback function is very fast.so it will call "setProgress" very quickly. 
Each time crash in  M13ProgressViewImage class line 244 (rgbaPixel[RED] = 0;)

func urlSession(_ session: URLSession, downloadTask: URLSessionDownloadTask, didWriteData bytesWritten: Int64, totalBytesWritten: Int64, totalBytesExpectedToWrite: Int64) {
        let percentage = CGFloat(CGFloat(totalBytesWritten)/CGFloat(totalBytesExpectedToWrite))
        DispatchQueue.main.async {
            self.progressView.setProgress(percentage, animated: true)
        }
    }
Hi all,

This patch suppresses the Xcode warnings that appear when trying to run the project in Xcode 9 and Xcode 8.3.2. These include: documentation warnings, project setting warnings, and missing app icons.

Feel free to reach out with any questions/suggestions.

Thanks,
Ahmed