Faced out problem when did mistake in weeklyOn() method, just forgot to specify $day param:
`->weeklyOn('11:25')`. Such call was converted to `0 0 * * 11:25` and it's invalid format.

And as a result all tasks after this didn't work at all! And there were no visible errors, it stop somewhere under the hood of cron (I guess).

Would be very useful to have auto-check of cron expression and trigger error if there is a problem and don't run problematic task.

Thanks. :)
**Description**  
<!-- A clear and concise description of the new feature. -->
Is it possible for there to be a way to set a task specific onError callback function? Right now, an onError function can be set but there's no way (afaik) to limit it to a single task like before() and after().

It would be nice if onError() can be used just like before() and after() callbacks.

Basically a post-execution callback that's only called if the execution of the event (not schedule) is unsucessful.

**Example**  
<!-- A simple example of the new feature in action (include PHP code, etc.)
     If the new feature changes an existing feature, include a simple before/after comparison. -->

In addition to this:
```
use Crunz\Schedule;

$schedule = new Schedule();

$task = $schedule->run('command/to/run');
$task->everyFiveMinutes();

$schedule
->onError(function() {
   // Send mail
})
->onError(function() {
   // Do something else
});

return $schedule;
```

It would be nice if this was supported : 
```
use Crunz\Schedule;

$schedule = new Schedule();

$task = $schedule->run('command/to/run');
$task->everyFiveMinutes();

$task->onError(function() {
   // Send mail
})
->onError(function() {
   // Do something else
});

return $schedule;

```
I am able to trigger php files with the scheduler, but am having trouble initiating a command on the server. I want to run a simple "fetchmail -vk" command, which should be able to run from anywhere on the server. To check, however, I ran the command from the same location the scheduler triggers the php files, that is, the home folder for the website on the server. So, running the "fetchmail -vk" command via a SSH connection from said folder is successful.

To run php files, of course, you have to prepend the run command with "/usr/bin/php", like so:
`$schedule->run('/usr/bin/php script.php')`

... is there something I have to use before the fetchmail command? Right now, it's just:
`$schedule->run('fetchmail -vk')`

For frequency, I am using: `->everyTwoHours()`

Thanks for any help.
**Description**  
To address some of last requests (#257, #249, #247 and #216) users should be able to provide logger instance used by Crunz, the idea is to let users use any PSR-3 compatible logger by returning it from configured `logger_factory`. This means new configuration option will be added to allow specifying `LoggerFactoryInterface`.
Example below shows simple file logging by Monolog but there can be Zend Db logging used instead, every PSR-3 class will work.
By default Crunz will provide same file logging as before.

**Example**  

Interface itself:
```php
use Psr\Logger\LoggerInterface;

interface LoggerFactoryInterface
{
    public function createLogger(array $crunzConfiguration): LoggerInterface;
}
```

Example implementation:
```php
use Monolog\Logger;
use Monolog\Handler\StreamHandler;

class MonologLoggerFactory implements LoggerFactoryInterface
{
    public function createLogger(array $crunzConfiguration): LoggerInterface
    {
        $log = new Logger('name');
        $log->pushHandler(new StreamHandler('path/to/your.log', Logger::WARNING));

        return $log;
    }
}
```

Crunz configuration (`crunz.yml`):
```yml
# Class loadable by autloader
logger_factory: '\Vendor\MonologLoggerFactory'
```

https://github.com/lavary/crunz/issues/78
Hi @PabloKowalczyk,
Thanks for your lib.
I also have question that I want to get detail error so i can insert the error into database. How can I do that?

Thanks
**Description**  
It would be nice to be able to define dynamic filenames for error and cronjob logs like `cronjob-error-{$Ymd}.log`

Or, in extension to what might be needed to implement #247, it might be in general nice, to be able to add a generic error handler, so that we can add for instance a Monolog handler to receive everything Crunz outputs.

Hi
I begin using Crunz in Zend Framwork and I want to receive log/error and write it to database. Can you tell me if there is a way to do it?
Thanks 
I am searching these kind of libs to implement into a symfony project.
I like the most this lib comparing to others, it is simple and easy to use but when i define the rule, it should save into a list (like sqlite, mysql or even into a single file) so it will be more controllable by programmatically. Generating task files dynamically may create issues and also not convenient for large projects.
In the crunz.yml file it states this:

The events which have dedicated log files (defined with them), won't be
logged to this file though.

This is currently not happening and it is logging to both files. This PR is to fix this and only log to the main log file if the event does not have a log file set.

This new PR is now based of the 1.12.x branch