check_extra720 fails when lambda and trail are in different regions, but technically the trail can be in a different region where lambda is and trail can record lambda api operations anyway.
Adds a command for check 1.19 - check that ec2 instances are associated with an instance role. It is always possible something running on the instance is using an IAM key - no way to prevent that just like we can't stop someone from copying instance credentials from another instance - but if there is no instance role associated then I think it is safe to mark a fail. 

By submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.

Add Prowler check for unused elastic IP addresses - AWS charges for any EIPs not associated with a network interface

By submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.

By submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.

Make the decolorization changes in #363 consistent for all lines.
Can't produce file report output with prowler to save my dear life. Absolutely positive that i'm missing something obvious but just cant figure out what.

Running the following only results in terminal text output, I need something file based via format I can aggregate and report on.
./prowler -p prod -e -b -s -x /root/cloudtools/prowler/reports/

Any advice?
New checks require latest AWS CLI version, additionally with the new AWS CLI v2 we need to make sure the v1 version is used to make Prowler run properly.

File `include/awscli_detector` is the place to add this logic. I've done some rough tests with the code below:

```
# AWS-CLI installed or not
AWSCLI=$(which aws)
if [[ -z "${AWSCLI}" ]];then
  echo -e "\n$RED ERROR!$NORMAL AWS-CLI (aws command) not found. Make sure it is installed correctly and in your \$PATH\n"
  EXITCODE=1
  exit $EXITCODE
fi 

# AWS-CLI v1 detector variable
CURRENT_CLI_VERSION=$($AWSCLI --version|awk '{ print $1 }'|cut -d/ -f2|grep ^1)

if [[ -z $CURRENT_CLI_VERSION ]];then 
  echo -e "\n$RED ERROR!$NORMAL AWS-CLI (aws command) is not v1. Make sure you use latest available version of AWS-CLI v1\n"
  EXITCODE=1
  exit $EXITCODE
fi 

# AWS-CLI version checker test function
awscli_version_checker() {
  LATEST_CLI_VERSION=$(curl -s https://github.com/aws/aws-cli/releases|grep Tagging |awk '{ print $4 }'|grep ^1|head -1)
  if [[ ${LATEST_CLI_VERSION} != ${CURRENT_CLI_VERSION} ]]; then
    echo -e "\n$NOTICE ATTENTION!$NORMAL Your installed AWS-CLI is v$CURRENT_CLI_VERSION and latest is v$LATEST_CLI_VERSION."
    echo -e "Make sure you have the newest version available to get the best from Prowler\n"
  else 
    echo -e "\n$OK OK!$NORMAL You are using the latest available version AWS-CLI v$LATEST_CLI_VERSION\n"
  fi 
}
```
That funciont could be probably called also by `-v` along with Prowler version.

cc @zfLQ2qx2 
The check: 7.60 [extra760] Find secrets in Lambda functions code (Not Scored) (Not part of CIS benchmark) 

errors by default, with the following:
An error occurred (AccessDeniedException) when calling the GetFunction operation: User: user/prowler is not authorized to perform: lambda:GetFunction on resource: arn:aws:lambda:eu-west-2:347708466071:function:ApiSimpleDelayDDMonitor

Adding this policy successfully runs that check.

By submitting this pull request, I confirm that my contribution is made under the terms of the Apache 2.0 license.

Same as for ec2 instances but for Launch Configurations.
AUTO SCALING -> Launch Configurations -> user data

Based on new feature regarding IMDSv2 (Instance Metadata Service) https://aws.amazon.com/blogs/security/defense-in-depth-open-firewalls-reverse-proxies-ssrf-vulnerabilities-ec2-instance-metadata-service/ and info here
 https://docs.aws.amazon.com/AWSEC2/latest/UserGuide/ec2-instance-metadata.html#configuring-instance-metadata-service
