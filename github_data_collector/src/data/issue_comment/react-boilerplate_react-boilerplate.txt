This PR upgrades `styled-components` and `jest-styled-components` to the latest major version. The new version has no braking changes.

Before opening a pull request, please ensure:

- [x] You have followed our [**contributing guidelines**](https://github.com/react-boilerplate/react-boilerplate/blob/master/CONTRIBUTING.md)
- [x] Double-check your branch is based on `dev` and targets `dev` 

Before opening a new issue, please take a moment to review our [**community guidelines**](https://github.com/react-boilerplate/react-boilerplate/blob/master/CONTRIBUTING.md) to make the contribution process easy and effective for everyone involved.

## Description

Saga does not run when action from useEffect is used in a child component of a Container that injects a saga and reducer.  In the code below, my page container injects the saga and reducer, however, the imported child component loads the data when it mounts. It seems like by the time it is mounted the saga is not available or is not yet watching. Could it be because useInjectSaga is asynchronous? When I move the useEffect code into the page container parent, the loadDocuments work properly. 

```
ProjectPage index.js

import React, { useEffect, memo } from 'react';
import Documents from './Documents';

const key = 'projectSettings';

export function ProjectSettingsPage({
	
}) {
	useInjectReducer({ key, reducer });
	useInjectSaga({ key, saga });

	
	return (
		<article>
			<Helmet>
				<title>Project Settings Page</title>
				<meta name="description" project="Project settings page" />
			</Helmet>

			<Documents />
	

		</article>
	);
}

```
```
Documents.js

import React, { useEffect, memo } from 'react';
import DocumentsTable from './DocumentsTable';
import { makeSelectProjectDocuments } from './selectors';
import { loadProjectDocuments } from './actions';

export function Documents({ documents, loadDocuments }) {
	
	useEffect(
		() => {
			loadDocuments();
		},
		[  ]
	);

	return (
		<React.Fragment>
			<DocumentsTable documents={documents}  />
		</React.Fragment>
	);
}

const mapStateToProps = createStructuredSelector({
	documents: makeSelectProjectDocuments()
});

export function mapDispatchToProps(dispatch) {
	return {
		loadDocuments: () => {
			dispatch(loadProjectDocuments());
		},
	};
}

const withConnect = connect(mapStateToProps, mapDispatchToProps);

export default compose(withConnect, memo)(Documents);

```



## Steps to reproduce
Steps to reproduce the behavior:

1. Create a Page Container
2. Import a connected Component that can dispatch actions
3. Instead of the Page Container, move useEffect in the connected component.
4. Dispatch a load action in the useEffect of the connected component
5. The load action never reaches Saga (i.e. the saga watcher never gets the action). No errors.

**Expected behavior**
Any action should work and Saga watcher should be available immediately to imported child components as well.



## Versions

- React-Boilerplate: v4.0


## React Boilerplate

- [✔️] You have followed our [**contributing guidelines**](https://github.com/react-boilerplate/react-boilerplate/blob/master/CONTRIBUTING.md)
- [✔️] Double-check your branch is based on `dev` and targets `dev` 
- [❌] Pull request has tests (we are going for 100% coverage!)
- [✔️] Code is well-commented, linted and follows project conventions
- [❌] Documentation is updated (if necessary)
- [✔️] Internal code generators and templates are updated (if necessary)
- [✔️] Description explains the issue/use-case resolved and auto-closes related issues

Be kind to code reviewers, please try to keep pull requests as small and focused as possible :)

**IMPORTANT**: By submitting a patch, you agree to allow the project
owners to license your work under the terms of the [MIT License](https://github.com/react-boilerplate/react-boilerplate/blob/master/LICENSE.md).

---

I don't know if this feature addition follows best practices or if it's even wanted, but I've been using this modified version of the component/container generators for about 3 years now and it's done wonders for keeping my project components more organized.

It effectively allows for components and containers to be nested in subdirectories, while still allowing each subcomponent to have all the benefits react-boilerplate's generators create (like unit tests and messages). By simply adding `/`s to component names will create subdirectories all the way up until the last value, which will then be used as the component name (which behaves exactly as it does now). I made this entirely as an "opt-in" style of usage, so if people want to continue using it exactly how they do now they should experience no difference.

Here are some examples of how this works (it should identical for containers as well, just with additional container-specific files):

`npm run generate component Events` will generate an `Events` component exactly as it does now.

`npm run generate component Events/Index` will generate an `Index` component inside of the `Events` directory otherwise leaving all the existing files in the `components/Events` untouched.

Another cool part is let's say you don't want a root component, but want to have a handful of related components grouped together in the same directory. You can skip over the initial directory generator and go straight to the subcomponent. e.g. `npm run generate component Buttons/Confirmation`. A `Confirmation` component will be made inside of a `Buttons` directory, but no component will be made directly in the `Buttons` directory.
```
npm run generate component Buttons/Confirmation;
npm run generate component Buttons/Cancelation;
```
would generate a directory structure like this:
```
components/
    Buttons/
        Confirmation/
            index.js
            ...
         Cancelation/
            index.js
            ...
```

Let's say you later realized you did actually want to have a `Button` component as a base for the subcomponent. All you would need to do is run `npm run generate component Button` and a `Button` component would be made like normal without disturbing the `Confirmation` and `Cancelation` components.

I typically use this for CRUD type development, but I could see it used in a plethora of ways for organizing related components. My "real world" example being structured something like this.

```
Events/
   Index/
      index.js
   Show/
      index.js
   Edit/
      index.js
```
 
So rather than cluttering the root directory with components like `EventIndex`, `EventShow`, `EventEdit` all the components are nicely grouped together in the `Events` directory.

I hope you see a value in this type of setup, and if you do I will go on to write appropriate tests and update whatever documentation is necessary!
**Generating documentation website from docs folder**

Documentation website is needed for a long time, imo. Integrating `Docsify` is pretty easy. Now, having the `index.html` file, either github pages to `docs` folder or `docs.reactboilerplate.com` would do the job. 

I didn't fully check all the docs, but if you decide to go with this I will check and fix broken links etc(if there are any). 

### How to run

`npm i docsify-cli -g` on your local machine (no need to add this to package.json)

`docsify serve docs`, then browse `localhost:3000` to see the generated website


What do you think? 

Example screenshot: 

<img width="1678" alt="Screen Shot 2019-12-15 at 23 31 26" src="https://user-images.githubusercontent.com/33245689/70868567-128b6400-1f93-11ea-92d4-11b787ccb2ad.png">


> PS: Customizations are possible with theming etc... Quite flexible.  

[Docsify docs](https://docsify.js.org/#/)

Following the issue #951


Before opening a new issue, please take a moment to review our [**community guidelines**](https://github.com/react-boilerplate/react-boilerplate/blob/master/CONTRIBUTING.md) to make the contribution process easy and effective for everyone involved.

## Description
Getting 401 for post calls from saga

## Steps to reproduce
In my saga I am using below generator to make a post call and passing the right token, url and other details. Even same call is getting successful with postman.

export function* getCPSDetails() {
   
  const requestURL = '';
  const proposalID = yield select(makeSelectProposalID());
  const payload = {
    method: 'POST',
    credentials: 'include',
    mode: 'no-cors',
    headers: {
      'AuthenticationToken': '',
      'Content-Type': 'application/json',
      'Accept': 'application/json'
            },
    body: JSON.stringify({
                            "UserName": "",
                            "LocaleCode": "",
                            "AgreementNumber": "",
                            "ProposalID": ""
                            "ValidationType": ""
                         }),
     
    
  };

(Add link to a demo on https://jsfiddle.net or similar if possible)

**Expected behavior**
should get a response

**Screenshots**
Response Headers
Access-Control-Allow-Origin: http://localhost:3000
Content-Length: 0
Date: Fri, 13 Dec 2019 11:39:49 GMT
Request-Context: appId=cid-v1:e8b53ae8-fd1d-4d01-a0c2-4662c2ad3d58
Server: Kestrel
WWW-Authenticate: Bearer
X-Powered-By: ASP.NET


Request Headers
Accept: application/json
Accept-Encoding: gzip, deflate, br
Accept-Language: en-US,en;q=0.9
Connection: keep-alive
Content-Length: 136
Content-Type: text/plain;charset=UTF-8
Host: xxxxxxxserviceuat.azurewebsites.net
Origin: http://localhost:3000
Referer: http://localhost:3000/
Sec-Fetch-Mode: no-cors
Sec-Fetch-Site: cross-site
User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/78.0.3904.108 Safari/537.36

## Versions

- React-Boilerplate:v4.0.0
- Node/NPM:v8.15.1 
- Browser:Chrome

## Description
Tree shaking seems doesn't work with [styled-icons](https://github.com/jacobwgillespie/styled-icons).

## Steps to reproduce
1. `yarn add styled-icons`
2. import one icon e.g. `import { Plus } from 'styled-icons/fa-solid';` 
3. `yarn build`

**Expected behavior**
Bundle contains only imported icon.

**Screenshots**
Bundle contains all icons from `styled-icons/fa-solid`
![image](https://user-images.githubusercontent.com/11854101/70395985-84a0fd80-1a15-11ea-9bcb-3c2a8dce42a6.png)


## Versions

- React-Boilerplate: 4.0.0
- Node/NPM: 12.13.0 / 6.12.0

This pull request solves #2824. It was requested to be committed to my pull request #2823, but it ended up being a bit bigger of a change than I anticipated, so I decided to make a separate pull request to be sure these changes don't hold up merging in #2823.

Diving into the LanguageProvider tests, I realized the current tests didn't test changing locales as thoroughly as I felt they should. I believe this pull request tests multiple locales more thoroughly. Like my last pull request, I'm still very new to test suites, but I feel more confident than on my last pull request. 

## React Boilerplate
Before opening a pull request, please ensure:

- [✔️] You have followed our [**contributing guidelines**](https://github.com/react-boilerplate/react-boilerplate/blob/master/CONTRIBUTING.md)
- [❌] Double-check your branch is based on `dev` and targets `dev` 
- [✔️] Pull request has tests (we are going for 100% coverage!)
- [✔️] Code is well-commented, linted and follows project conventions
- [✔️] Documentation is updated (if necessary)
- [✔️] Internal code generators and templates are updated (if necessary)
- [✔️] Description explains the issue/use-case resolved and auto-closes related issues

Be kind to code reviewers, please try to keep pull requests as small and focused as possible :)

**IMPORTANT**: By submitting a patch, you agree to allow the project
owners to license your work under the terms of the [MIT License](https://github.com/react-boilerplate/react-boilerplate/blob/master/LICENSE.md).
Before opening a new issue, please take a moment to review our [**community guidelines**](https://github.com/react-boilerplate/react-boilerplate/blob/master/CONTRIBUTING.md) to make the contribution process easy and effective for everyone involved.

## Description
Im new to react-boilerplate and im trying to get an action to produce a simple state update and component rerender in a new reactboilerplate project (that uses immer). Component to action is functioning correctly as confirmed by `console.log`, and I'm not passing any data, just an action that changes a `boolean`.

-Also- If i want to use simple view based react state (NO redux) with this project what is the suggested approach? Are there any code examples of this?

## Steps to reproduce
Steps to reproduce the behavior:


Reducer:

```
    import produce from 'immer';
    import { SET_HOME_VISIBLE } from './constants';
    
    // The initial state of the App
    export const initialState = {
      homeVisible: false
    };
    
    /* eslint-disable default-case, no-param-reassign */
    const homeReducer = (state = initialState, action) =>
      produce(state, draft => {
        switch (action.type) {
          case SET_HOME_VISIBLE:
            draft.homeVisible = true;
            break;
        }
      });
```
    
    export default homeReducer;

Selectors:

```
    /**
     * Homepage selectors
     */
    
    import { createSelector } from 'reselect';
    import { initialState } from './reducer';
    
    const selectHome = state => state.home || initialState;
    
    const setHomeVisible = state => state.homeVisible || initialState;
    
      const makeHomeVisible = () =>
      createSelector(
        setHomeVisible,
        homeVisibleState => homeVisibleState.homeVisible,
      );
    
    export { selectHome, makeHomeVisible, setHomeVisible };
```

Actions (for continuity):

```
    import { SET_HOME_VISIBLE } from './constants';
    
    /**
     * Changes the input field of the form
     *
     * @param  {string} username The new text of the input field
     *
     * @return {object} An action object with a type of CHANGE_USERNAME
     */
    
    
    export function setHomeVisible(homeVisible) {
      return {
        type: SET_HOME_VISIBLE,
        homeVisible
      };
    }
```

**Expected behavior**
`homeVisible` should change from `false` to `true` in state but state is not updating



**Screenshots**
If applicable, add screenshots to help explain your problem.

## Versions

- React-Boilerplate: current
- Node/NPM: current
- Browser: chrome

## Description
Upgrading dependencies (selecting minor and patches) using [`npm-check`](https://www.npmjs.com/package/npm-check) breaks tests.

## Steps to reproduce
```bash
git clone --depth=1 https://github.com/react-boilerplate/react-boilerplate.git reactboilerexample
npm-check -u
```

![image](https://user-images.githubusercontent.com/1264761/70180046-41f5c300-16ad-11ea-8461-e509cfd08977.png)

<details>
<summary>Text version</summary>

```
❯ npm-check -u
? Choose which packages to update.

 Patch Update Backwards-compatible bug fixes.
 ◉ hoist-non-react-statics                3.3.0    ❯  3.3.1    https://github.com/mridgway/hoist-non-react-statics#readme
 ◉ lodash                                 4.17.11  ❯  4.17.15  https://lodash.com/
 ◉ redux                                  4.0.1    ❯  4.0.4    http://redux.js.org
 ◉ babel-eslint devDep                    10.0.1   ❯  10.0.3   https://github.com/babel/babel-eslint
 ◉ babel-loader devDep                    8.0.5    ❯  8.0.6    https://github.com/babel/babel-loader
 ◉ babel-plugin-styled-components devDep  1.10.0   ❯  1.10.6   https://github.com/styled-components/babel-plugin-styled-components
 ◉ coveralls devDep                       3.0.3    ❯  3.0.9    https://github.com/nickmerwin/node-coveralls#readme
 ◉ eslint-plugin-jsx-a11y devDep          6.2.1    ❯  6.2.3    https://github.com/evcohen/eslint-plugin-jsx-a11y#readme
 ◉ jest-styled-components devDep          6.3.1    ❯  6.3.4    https://github.com/styled-components/jest-styled-components
 ◉ offline-plugin devDep                  5.0.6    ❯  5.0.7    https://github.com/NekR/offline-plugin
 ◉ webpack-cli devDep                     3.3.0    ❯  3.3.10   https://github.com/webpack/webpack-cli#readme

 Minor Update New backwards-compatible features.
 ◉ @babel/polyfill                                         7.4.3   ❯  7.7.0    https://babeljs.io/
 ◉ connected-react-router                                  6.4.0   ❯  6.6.1    https://github.com/supasate/connected-react-router#readme
 ◉ express                                                 4.16.4  ❯  4.17.1   http://expressjs.com/
 ◉ history                                                 4.9.0   ❯  4.10.1   https://github.com/ReactTraining/history#readme
 ◉ react                                                   16.8.6  ❯  16.12.0  https://reactjs.org/
 ◉ react-dom                                               16.8.6  ❯  16.12.0  https://reactjs.org/
 ◉ react-redux                                             7.0.2   ❯  7.1.3    https://github.com/reduxjs/react-redux
 ◉ react-router-dom                                        5.0.0   ❯  5.1.2    https://github.com/ReactTraining/react-router#readme
 ◉ redux-saga                                              1.0.2   ❯  1.1.3    https://redux-saga.js.org/
 ◉ styled-components                                       4.2.0   ❯  4.4.1    https://styled-components.com/
 ◉ @babel/cli devDep                                       7.4.3   ❯  7.7.4    https://babeljs.io/
 ◉ @babel/core devDep                                      7.4.3   ❯  7.7.4    https://babeljs.io/
 ◉ @babel/plugin-proposal-class-properties devDep          7.4.0   ❯  7.7.4    https://github.com/babel/babel
 ◉ @babel/plugin-syntax-dynamic-import devDep              7.2.0   ❯  7.7.4    https://github.com/babel/babel
 ◉ @babel/plugin-transform-modules-commonjs devDep         7.4.3   ❯  7.7.4    https://github.com/babel/babel
 ◉ @babel/plugin-transform-react-constant-elements devDep  7.2.0   ❯  7.7.4    https://github.com/babel/babel
 ◉ @babel/plugin-transform-react-inline-elements devDep    7.2.0   ❯  7.7.4    https://github.com/babel/babel
 ◉ @babel/preset-env devDep                                7.4.3   ❯  7.7.4    https://babeljs.io/
 ◉ @babel/preset-react devDep                              7.0.0   ❯  7.7.4    https://babeljs.io/
 ◉ @babel/register devDep                                  7.4.0   ❯  7.7.4    https://github.com/babel/babel
 ◉ babel-plugin-dynamic-import-node devDep                 2.2.0   ❯  2.3.0    https://github.com/airbnb/babel-plugin-dynamic-import-node#readme
 ◉ circular-dependency-plugin devDep                       5.0.2   ❯  5.2.0    https://github.com/aackerman/circular-dependency-plugin#readme
 ◉ compare-versions devDep                                 3.4.0   ❯  3.5.1    https://github.com/omichelsen/compare-versions#readme
 ◉ eslint-plugin-import devDep                             2.17.2  ❯  2.18.2   https://github.com/benmosher/eslint-plugin-import
 ◉ eslint-plugin-prettier devDep                           3.0.1   ❯  3.1.1    https://github.com/prettier/eslint-plugin-prettier#readme
 ◉ eslint-plugin-react devDep                              7.12.4  ❯  7.17.0   https://github.com/yannickcr/eslint-plugin-react
 ◉ eslint-plugin-redux-saga devDep                         1.0.0   ❯  1.1.1    https://github.com/pke/eslint-plugin-redux-saga
 ◉ jest-cli devDep                                         24.7.1  ❯  24.9.0   https://jestjs.io/
 ◉ ngrok devDep                                            3.1.1   ❯  3.2.5    https://github.com/bubenshchykov/ngrok#readme
 ◉ plop devDep                                             2.3.0   ❯  2.5.3    https://plopjs.com
 ◉ prettier devDep                                         1.17.0  ❯  1.19.1   https://prettier.io
 ◉ react-test-renderer devDep                              16.8.6  ❯  16.12.0  https://reactjs.org/
 ◉ stylelint-processor-styled-components devDep            1.6.0   ❯  1.9.0    https://github.com/styled-components/stylelint-processor-styled-component
s#readme
 ◉ webpack devDep                                          4.30.0  ❯  4.41.2   https://github.com/webpack/webpack
 ◉ webpack-dev-middleware devDep                           3.6.2   ❯  3.7.2    https://github.com/webpack/webpack-dev-middleware
 ◉ webpack-hot-middleware devDep                           2.24.3  ❯  2.25.0   https://github.com/webpack-contrib/webpack-hot-middleware#readme
❯◉ webpack-pwa-manifest devDep                             4.0.0   ❯  4.1.1    https://github.com/arthurbergmz/webpack-pwa-manifest#readme

 Major Update Potentially breaking API changes. Use caution.
 ◯ chalk                                2.4.2   ❯  3.0.0   https://github.com/chalk/chalk#readme
 ◯ cross-env                            5.2.0   ❯  6.0.3   https://github.com/kentcdodds/cross-env#readme
 ◯ immer                                3.0.0   ❯  5.0.0   https://github.com/immerjs/immer#readme
 ◯ react-intl                           2.8.0   ❯  3.9.1   https://github.com/formatjs/react-intl
 ◯ sanitize.css                         8.0.0   ❯  11.0.0  https://github.com/csstools/sanitize.css#readme
 ◯ babel-plugin-react-intl devDep       3.0.1   ❯  5.1.11  https://github.com/formatjs/formatjs#readme
 ◯ compression-webpack-plugin devDep    2.0.0   ❯  3.0.0   https://github.com/webpack-contrib/compression-webpack-plugin
 ◯ css-loader devDep                    2.1.1   ❯  3.2.1   https://github.com/webpack-contrib/css-loader
 ◯ eslint devDep                        5.16.0  ❯  6.7.2   https://eslint.org
 ◯ eslint-config-airbnb devDep          17.1.0  ❯  18.0.1  https://github.com/airbnb/javascript
 ◯ eslint-config-airbnb-base devDep     13.1.0  ❯  14.0.0  https://github.com/airbnb/javascript
 ◯ eslint-config-prettier devDep        4.1.0   ❯  6.7.0   https://github.com/prettier/eslint-config-prettier#readme
 ◯ eslint-plugin-react-hooks devDep     1.6.0   ❯  2.3.0   https://reactjs.org/
 ◯ file-loader devDep                   3.0.1   ❯  5.0.2   https://github.com/webpack-contrib/file-loader
 ◯ image-webpack-loader devDep          4.6.0   ❯  6.0.0   https://github.com/tcoopman/image-webpack-loader#readme
 ◯ jest-dom devDep                      3.1.3   ❯  4.0.0
 ◯ lint-staged devDep                   8.1.5   ❯  9.5.0   https://github.com/okonet/lint-staged#readme
 ◯ null-loader devDep                   0.1.1   ❯  3.0.0   https://github.com/webpack-contrib/null-loader
 ◯ react-app-polyfill devDep            0.2.2   ❯  1.0.4   https://github.com/facebook/create-react-app#readme
 ◯ react-testing-library devDep         6.1.2   ❯  8.0.1
 ◯ rimraf devDep                        2.6.3   ❯  3.0.0   https://github.com/isaacs/rimraf#readme
 ◯ style-loader devDep                  0.23.1  ❯  1.0.1   https://github.com/webpack-contrib/style-loader
 ◯ stylelint devDep                     10.0.1  ❯  12.0.0  https://stylelint.io
 ◯ stylelint-config-recommended devDep  2.2.0   ❯  3.0.0   https://github.com/stylelint/stylelint-config-recommended#readme
 ◯ svg-url-loader devDep                2.3.2   ❯  3.0.3   https://github.com/bhovhannes/svg-url-loader#readme
 ◯ terser-webpack-plugin devDep         1.2.3   ❯  2.2.1   https://github.com/webpack-contrib/terser-webpack-plugin
 ◯ url-loader devDep                    1.1.2   ❯  3.0.0   https://github.com/webpack-contrib/url-loader

 Non-Semver Versions less than 1.0.0, caution.
 ◯ node-plop devDep  0.18.0  ❯  0.23.0  https://github.com/amwmedia/node-plop#readme
```

</details>

Then run the following commands 
1. Fix linter errors (since a few eslint plugins were updated):
```bash
npm run lint:eslint:fix ./
```
2. Run the tests

```bash
npm run test
```

Output:

<details>
<summary>Failing test output</summary>

```
> react-boilerplate@4.0.0 pretest path/to/reactboilerexample
> npm run test:clean && npm run lint


> react-boilerplate@4.0.0 test:clean path/to/reactboilerexample
> rimraf ./coverage


> react-boilerplate@4.0.0 lint path/to/reactboilerexample
> npm run lint:js && npm run lint:css


> react-boilerplate@4.0.0 lint:js path/to/reactboilerexample
> npm run lint:eslint -- .


> react-boilerplate@4.0.0 lint:eslint path/to/reactboilerexample
> eslint --ignore-path .gitignore --ignore-pattern internals/scripts "."


> react-boilerplate@4.0.0 lint:css path/to/reactboilerexample
> stylelint app/**/*.js

Browserslist: caniuse-lite is outdated. Please run next command `npm update`

> react-boilerplate@4.0.0 test path/to/reactboilerexample
> cross-env NODE_ENV=test jest --coverage

 FAIL  app/utils/tests/injectSaga.test.js (8.332s)
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);
    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);
    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);
    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

  ● injectSaga decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      88 |     );
      89 |     const {
    > 90 |       props: { children },
         |       ^
      91 |     } = renderedComponent.getInstance();
      92 |     expect(children.props).toEqual(props);
      93 |   });

      at Object.props (app/utils/tests/injectSaga.test.js:90:7)

  ● useInjectSaga hook › should inject given saga and mode

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      128 |     );
      129 |
    > 130 |     expect(injectors.injectSaga).toHaveBeenCalledTimes(1);
          |                                  ^
      131 |     expect(injectors.injectSaga).toHaveBeenCalledWith('test', {
      132 |       saga: testSaga,
      133 |       mode: 'testMode',

      at Object.toHaveBeenCalledTimes (app/utils/tests/injectSaga.test.js:130:34)

 FAIL  app/utils/tests/injectReducer.test.js (8.358s)
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);
    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

  ● injectReducer decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      62 |     );
      63 |     const {
    > 64 |       props: { children },
         |       ^
      65 |     } = renderedComponent.getInstance();
      66 |
      67 |     expect(children.props).toEqual(props);

      at Object.props (app/utils/tests/injectReducer.test.js:64:7)

  ● useInjectReducer hook › should inject a given reducer

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      93 |     );
      94 |
    > 95 |     expect(injectors.injectReducer).toHaveBeenCalledTimes(1);
         |                                     ^
      96 |     expect(injectors.injectReducer).toHaveBeenCalledWith('test', reducer);
      97 |   });
      98 | });

      at Object.toHaveBeenCalledTimes (app/utils/tests/injectReducer.test.js:95:37)

 FAIL  internals/templates/utils/tests/injectSaga.test.js (8.441s)
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);
    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);
    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);
    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

  ● injectSaga decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      88 |     );
      89 |     const {
    > 90 |       props: { children },
         |       ^
      91 |     } = renderedComponent.getInstance();
      92 |     expect(children.props).toEqual(props);
      93 |   });

      at Object.props (internals/templates/utils/tests/injectSaga.test.js:90:7)

  ● useInjectSaga hook › should inject given saga and mode

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      128 |     );
      129 |
    > 130 |     expect(injectors.injectSaga).toHaveBeenCalledTimes(1);
          |                                  ^
      131 |     expect(injectors.injectSaga).toHaveBeenCalledWith('test', {
      132 |       saga: testSaga,
      133 |       mode: 'testMode',

      at Object.toHaveBeenCalledTimes (internals/templates/utils/tests/injectSaga.test.js:130:34)

 PASS  app/utils/tests/sagaInjectors.test.js (8.395s)
 FAIL  app/containers/App/tests/index.test.js (8.28s)
  ● <App /> › should render and match the snapshot

    expect(received).toMatchSnapshot()

    Snapshot name: `<App /> should render and match the snapshot 1`

    - Snapshot
    + Received

    @@ -1,6 +1,6 @@
    - <ForwardRef>
    + <ForwardRef(App__AppWrapper)>
        <HelmetWrapper
          defaultTitle="React.js Boilerplate"
          defer={true}
          encodeSpecialCharacters={true}
          titleTemplate="%s - React.js Boilerplate"
    @@ -26,6 +26,6 @@
            path=""
          />
        </Switch>
        <Footer />
        <GlobalStyleComponent />
    - </ForwardRef>
    + </ForwardRef(App__AppWrapper)>

      10 |     renderer.render(<App />);
      11 |     const renderedOutput = renderer.getRenderOutput();
    > 12 |     expect(renderedOutput).toMatchSnapshot();
         |                            ^
      13 |   });
      14 | });
      15 |

      at Object.toMatchSnapshot (app/containers/App/tests/index.test.js:12:28)

 › 1 snapshot failed.
 FAIL  internals/templates/utils/tests/injectReducer.test.js (8.639s)
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);
    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

  ● injectReducer decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      62 |     );
      63 |     const {
    > 64 |       props: { children },
         |       ^
      65 |     } = renderedComponent.getInstance();
      66 |
      67 |     expect(children.props).toEqual(props);

      at Object.props (internals/templates/utils/tests/injectReducer.test.js:64:7)

  ● useInjectReducer hook › should inject a given reducer

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      93 |     );
      94 |
    > 95 |     expect(injectors.injectReducer).toHaveBeenCalledTimes(1);
         |                                     ^
      96 |     expect(injectors.injectReducer).toHaveBeenCalledWith('test', reducer);
      97 |   });
      98 | });

      at Object.toHaveBeenCalledTimes (internals/templates/utils/tests/injectReducer.test.js:95:37)

 FAIL  app/containers/HomePage/tests/index.test.js (9.299s)
  ● Console

    console.warn node_modules/react-dom/cjs/react-dom.development.js:12357
      Warning: componentWillMount has been renamed, and is not recommended for use. See https://fb.me/react-unsafe-component-lifecycles for details.

      * Move code with side effects to componentDidMount, and set initial state in the constructor.
      * Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.

      Please update the following components: SideEffect(NullComponent)

  ● <HomePage /> › should fetch the repos on mount if a username exists

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      47 |       </Provider>,
      48 |     );
    > 49 |     expect(submitSpy).toHaveBeenCalled();
         |                       ^
      50 |   });
      51 |
      52 |   it('should not call onSubmitForm if username is an empty string', () => {

      at Object.toHaveBeenCalled (app/containers/HomePage/tests/index.test.js:49:23)

 PASS  app/utils/tests/reducerInjectors.test.js
 PASS  internals/templates/utils/tests/reducerInjectors.test.js
 PASS  app/containers/RepoListItem/tests/index.test.js
 PASS  app/containers/LocaleToggle/tests/index.test.js
 PASS  internals/templates/utils/tests/sagaInjectors.test.js
 PASS  app/components/ReposList/tests/index.test.js
 PASS  app/components/Button/tests/index.test.js
 PASS  internals/templates/containers/App/tests/index.test.js
 PASS  app/containers/FeaturePage/tests/index.test.js
  ● Console

    console.warn node_modules/react-dom/cjs/react-dom.development.js:12357
      Warning: componentWillMount has been renamed, and is not recommended for use. See https://fb.me/react-unsafe-component-lifecycles for details.

      * Move code with side effects to componentDidMount, and set initial state in the constructor.
      * Rename componentWillMount to UNSAFE_componentWillMount to suppress this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.

      Please update the following components: SideEffect(NullComponent)

 PASS  app/components/Toggle/tests/index.test.js
 PASS  app/components/Header/tests/index.test.js
 PASS  app/containers/FeaturePage/tests/ListItemTitle.test.js
 PASS  app/components/Footer/tests/index.test.js
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

 PASS  app/containers/RepoListItem/tests/IssueIcon.test.js
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

 PASS  app/containers/HomePage/tests/saga.test.js
 PASS  app/components/LoadingIndicator/tests/Wrapper.test.js
 PASS  internals/templates/containers/NotFoundPage/tests/index.test.js
 PASS  app/containers/NotFoundPage/tests/index.test.js
 PASS  app/components/LoadingIndicator/tests/index.test.js
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

 PASS  internals/templates/containers/HomePage/tests/index.test.js
 PASS  app/containers/FeaturePage/tests/ListItem.test.js
 PASS  app/containers/LanguageProvider/tests/index.test.js
 PASS  app/containers/RepoListItem/tests/RepoLink.test.js
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

 PASS  app/components/List/tests/Ul.test.js
 PASS  app/components/ListItem/tests/index.test.js
 PASS  app/tests/store.test.js
 PASS  app/components/List/tests/Wrapper.test.js
 PASS  app/containers/HomePage/tests/Input.test.js
 PASS  internals/templates/utils/tests/checkStore.test.js
 PASS  app/components/Header/tests/A.test.js
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

 PASS  app/components/Header/tests/Img.test.js
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

 PASS  app/components/A/tests/index.test.js
 PASS  app/components/Toggle/tests/Select.test.js
 PASS  app/components/ListItem/tests/Item.test.js
 PASS  app/tests/i18n.test.js
 PASS  app/containers/RepoListItem/tests/Wrapper.test.js
 PASS  app/components/Img/tests/index.test.js
 PASS  app/components/H3/tests/index.test.js
 PASS  app/containers/LocaleToggle/tests/Wrapper.test.js
 PASS  app/containers/LanguageProvider/tests/selectors.test.js
 PASS  app/containers/HomePage/tests/reducer.test.js
 PASS  app/components/ToggleOption/tests/index.test.js
 PASS  internals/templates/tests/i18n.test.js
 PASS  app/containers/RepoListItem/tests/IssueLink.test.js
  ● Console

    console.error node_modules/react-test-renderer/cjs/react-test-renderer.development.js:131
      Warning: It looks like you're using the wrong act() around your test interactions.
      Be sure to use the matching version of act() corresponding to your renderer:

      // for react-dom:
      import {act} from 'react-dom/test-utils';
      // ...
      act(() => ...);

      // for react-test-renderer:
      import TestRenderer from 'react-test-renderer';
      const {act} = TestRenderer;
      // ...
      act(() => ...);

 PASS  app/containers/LanguageProvider/tests/actions.test.js
 PASS  app/containers/App/tests/actions.test.js
 PASS  app/components/IssueIcon/tests/index.test.js
 PASS  app/components/Button/tests/A.test.js
 PASS  app/containers/HomePage/tests/selectors.test.js
 PASS  app/components/Footer/tests/Wrapper.test.js
 PASS  app/containers/App/tests/reducer.test.js
 PASS  app/containers/App/tests/selectors.test.js
 PASS  app/components/H1/tests/index.test.js
 PASS  internals/templates/tests/store.test.js
 PASS  app/components/ListItem/tests/Wrapper.test.js
 PASS  internals/templates/containers/App/tests/selectors.test.js
 PASS  app/components/LoadingIndicator/tests/Circle.test.js
 PASS  app/components/H2/tests/index.test.js
 PASS  app/components/List/tests/index.test.js
 PASS  app/components/Button/tests/Wrapper.test.js
 PASS  app/containers/LanguageProvider/tests/reducer.test.js
 PASS  app/containers/HomePage/tests/CenteredSection.test.js
 PASS  app/containers/HomePage/tests/actions.test.js
 PASS  app/components/Button/tests/StyledButton.test.js
 PASS  app/utils/tests/request.test.js
 PASS  app/containers/FeaturePage/tests/List.test.js
 PASS  app/containers/HomePage/tests/Section.test.js
 PASS  app/containers/HomePage/tests/AtPrefix.test.js
 PASS  app/containers/HomePage/tests/Form.test.js
 PASS  app/utils/tests/checkStore.test.js
---------------------------------|----------|----------|----------|----------|-------------------|
File                             |  % Stmts | % Branch |  % Funcs |  % Lines | Uncovered Line #s |
---------------------------------|----------|----------|----------|----------|-------------------|
All files                        |    99.68 |    95.28 |    98.97 |    99.67 |                   |
 app                             |      100 |      100 |      100 |      100 |                   |
  configureStore.js              |      100 |      100 |      100 |      100 |                   |
  i18n.js                        |      100 |      100 |      100 |      100 |                   |
  reducers.js                    |      100 |      100 |      100 |      100 |                   |
 app/components/A                |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/Button           |      100 |      100 |      100 |      100 |                   |
  A.js                           |      100 |      100 |      100 |      100 |                   |
  StyledButton.js                |      100 |      100 |      100 |      100 |                   |
  Wrapper.js                     |      100 |      100 |      100 |      100 |                   |
  buttonStyles.js                |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/Footer           |      100 |      100 |      100 |      100 |                   |
  Wrapper.js                     |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  messages.js                    |      100 |      100 |      100 |      100 |                   |
 app/components/H1               |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/H2               |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/H3               |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/Header           |      100 |      100 |      100 |      100 |                   |
  A.js                           |      100 |      100 |      100 |      100 |                   |
  HeaderLink.js                  |        0 |        0 |        0 |        0 |                   |
  Img.js                         |      100 |      100 |      100 |      100 |                   |
  NavBar.js                      |        0 |        0 |        0 |        0 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  messages.js                    |      100 |      100 |      100 |      100 |                   |
 app/components/Img              |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/IssueIcon        |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/List             |      100 |      100 |      100 |      100 |                   |
  Ul.js                          |      100 |      100 |      100 |      100 |                   |
  Wrapper.js                     |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/ListItem         |      100 |      100 |      100 |      100 |                   |
  Item.js                        |      100 |      100 |      100 |      100 |                   |
  Wrapper.js                     |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/LoadingIndicator |      100 |      100 |      100 |      100 |                   |
  Circle.js                      |      100 |      100 |      100 |      100 |                   |
  Wrapper.js                     |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/ReposList        |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/Toggle           |      100 |      100 |      100 |      100 |                   |
  Select.js                      |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/components/ToggleOption     |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/containers/App              |      100 |    83.33 |      100 |      100 |                   |
  actions.js                     |      100 |      100 |      100 |      100 |                   |
  constants.js                   |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  reducer.js                     |      100 |      100 |      100 |      100 |                   |
  selectors.js                   |      100 |       50 |      100 |      100 |                 8 |
 app/containers/FeaturePage      |      100 |      100 |      100 |      100 |                   |
  List.js                        |      100 |      100 |      100 |      100 |                   |
  ListItem.js                    |      100 |      100 |      100 |      100 |                   |
  ListItemTitle.js               |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  messages.js                    |      100 |      100 |      100 |      100 |                   |
 app/containers/HomePage         |      100 |    91.67 |      100 |      100 |                   |
  AtPrefix.js                    |      100 |      100 |      100 |      100 |                   |
  CenteredSection.js             |      100 |      100 |      100 |      100 |                   |
  Form.js                        |      100 |      100 |      100 |      100 |                   |
  Input.js                       |      100 |      100 |      100 |      100 |                   |
  Section.js                     |      100 |      100 |      100 |      100 |                   |
  actions.js                     |      100 |      100 |      100 |      100 |                   |
  constants.js                   |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  messages.js                    |      100 |      100 |      100 |      100 |                   |
  reducer.js                     |      100 |      100 |      100 |      100 |                   |
  saga.js                        |      100 |      100 |      100 |      100 |                   |
  selectors.js                   |      100 |       50 |      100 |      100 |                 8 |
 app/containers/LanguageProvider |      100 |       75 |      100 |      100 |                   |
  actions.js                     |      100 |      100 |      100 |      100 |                   |
  constants.js                   |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  reducer.js                     |      100 |      100 |      100 |      100 |                   |
  selectors.js                   |      100 |       50 |      100 |      100 |                 8 |
 app/containers/LocaleToggle     |      100 |      100 |      100 |      100 |                   |
  Wrapper.js                     |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  messages.js                    |      100 |      100 |      100 |      100 |                   |
 app/containers/NotFoundPage     |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
  messages.js                    |      100 |      100 |      100 |      100 |                   |
 app/containers/RepoListItem     |      100 |      100 |      100 |      100 |                   |
  IssueIcon.js                   |      100 |      100 |      100 |      100 |                   |
  IssueLink.js                   |      100 |      100 |      100 |      100 |                   |
  RepoLink.js                    |      100 |      100 |      100 |      100 |                   |
  Wrapper.js                     |      100 |      100 |      100 |      100 |                   |
  index.js                       |      100 |      100 |      100 |      100 |                   |
 app/utils                       |    98.91 |    96.43 |    96.77 |    98.88 |                   |
  checkStore.js                  |      100 |      100 |      100 |      100 |                   |
  constants.js                   |      100 |      100 |      100 |      100 |                   |
  history.js                     |      100 |      100 |      100 |      100 |                   |
  injectReducer.js               |      100 |      100 |      100 |      100 |                   |
  injectSaga.js                  |      100 |      100 |      100 |      100 |                   |
  loadable.js                    |       75 |        0 |       50 |       75 |                 7 |
  reducerInjectors.js            |      100 |      100 |      100 |      100 |                   |
  request.js                     |      100 |      100 |      100 |      100 |                   |
  sagaInjectors.js               |      100 |      100 |      100 |      100 |                   |
---------------------------------|----------|----------|----------|----------|-------------------|

Summary of all failing tests
 FAIL  app/utils/tests/injectSaga.test.js (8.332s)
  ● injectSaga decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      88 |     );
      89 |     const {
    > 90 |       props: { children },
         |       ^
      91 |     } = renderedComponent.getInstance();
      92 |     expect(children.props).toEqual(props);
      93 |   });

      at Object.props (app/utils/tests/injectSaga.test.js:90:7)

  ● useInjectSaga hook › should inject given saga and mode

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      128 |     );
      129 |
    > 130 |     expect(injectors.injectSaga).toHaveBeenCalledTimes(1);
          |                                  ^
      131 |     expect(injectors.injectSaga).toHaveBeenCalledWith('test', {
      132 |       saga: testSaga,
      133 |       mode: 'testMode',

      at Object.toHaveBeenCalledTimes (app/utils/tests/injectSaga.test.js:130:34)

 FAIL  app/utils/tests/injectReducer.test.js (8.358s)
  ● injectReducer decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      62 |     );
      63 |     const {
    > 64 |       props: { children },
         |       ^
      65 |     } = renderedComponent.getInstance();
      66 |
      67 |     expect(children.props).toEqual(props);

      at Object.props (app/utils/tests/injectReducer.test.js:64:7)

  ● useInjectReducer hook › should inject a given reducer

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      93 |     );
      94 |
    > 95 |     expect(injectors.injectReducer).toHaveBeenCalledTimes(1);
         |                                     ^
      96 |     expect(injectors.injectReducer).toHaveBeenCalledWith('test', reducer);
      97 |   });
      98 | });

      at Object.toHaveBeenCalledTimes (app/utils/tests/injectReducer.test.js:95:37)

 FAIL  internals/templates/utils/tests/injectSaga.test.js (8.441s)
  ● injectSaga decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      88 |     );
      89 |     const {
    > 90 |       props: { children },
         |       ^
      91 |     } = renderedComponent.getInstance();
      92 |     expect(children.props).toEqual(props);
      93 |   });

      at Object.props (internals/templates/utils/tests/injectSaga.test.js:90:7)

  ● useInjectSaga hook › should inject given saga and mode

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      128 |     );
      129 |
    > 130 |     expect(injectors.injectSaga).toHaveBeenCalledTimes(1);
          |                                  ^
      131 |     expect(injectors.injectSaga).toHaveBeenCalledWith('test', {
      132 |       saga: testSaga,
      133 |       mode: 'testMode',

      at Object.toHaveBeenCalledTimes (internals/templates/utils/tests/injectSaga.test.js:130:34)

 FAIL  app/containers/App/tests/index.test.js (8.28s)
  ● <App /> › should render and match the snapshot

    expect(received).toMatchSnapshot()

    Snapshot name: `<App /> should render and match the snapshot 1`

    - Snapshot
    + Received

    @@ -1,6 +1,6 @@
    - <ForwardRef>
    + <ForwardRef(App__AppWrapper)>
        <HelmetWrapper
          defaultTitle="React.js Boilerplate"
          defer={true}
          encodeSpecialCharacters={true}
          titleTemplate="%s - React.js Boilerplate"
    @@ -26,6 +26,6 @@
            path=""
          />
        </Switch>
        <Footer />
        <GlobalStyleComponent />
    - </ForwardRef>
    + </ForwardRef(App__AppWrapper)>

      10 |     renderer.render(<App />);
      11 |     const renderedOutput = renderer.getRenderOutput();
    > 12 |     expect(renderedOutput).toMatchSnapshot();
         |                            ^
      13 |   });
      14 | });
      15 |

      at Object.toMatchSnapshot (app/containers/App/tests/index.test.js:12:28)

 FAIL  internals/templates/utils/tests/injectReducer.test.js (8.639s)
  ● injectReducer decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      62 |     );
      63 |     const {
    > 64 |       props: { children },
         |       ^
      65 |     } = renderedComponent.getInstance();
      66 |
      67 |     expect(children.props).toEqual(props);

      at Object.props (internals/templates/utils/tests/injectReducer.test.js:64:7)

  ● useInjectReducer hook › should inject a given reducer

    expect(jest.fn()).toHaveBeenCalledTimes(expected)

    Expected number of calls: 1
    Received number of calls: 0

      93 |     );
      94 |
    > 95 |     expect(injectors.injectReducer).toHaveBeenCalledTimes(1);
         |                                     ^
      96 |     expect(injectors.injectReducer).toHaveBeenCalledWith('test', reducer);
      97 |   });
      98 | });

      at Object.toHaveBeenCalledTimes (internals/templates/utils/tests/injectReducer.test.js:95:37)

 FAIL  app/containers/HomePage/tests/index.test.js (9.299s)
  ● <HomePage /> › should fetch the repos on mount if a username exists

    expect(jest.fn()).toHaveBeenCalled()

    Expected number of calls: >= 1
    Received number of calls:    0

      47 |       </Provider>,
      48 |     );
    > 49 |     expect(submitSpy).toHaveBeenCalled();
         |                       ^
      50 |   });
      51 |
      52 |   it('should not call onSubmitForm if username is an empty string', () => {

      at Object.toHaveBeenCalled (app/containers/HomePage/tests/index.test.js:49:23)


Snapshot Summary
 › 1 snapshot failed from 1 test suite. Inspect your code changes or run `npm test -- -u` to update them.

Test Suites: 6 failed, 71 passed, 77 total
Tests:       10 failed, 283 passed, 293 total
Snapshots:   1 failed, 23 passed, 24 total
Time:        20.84s, estimated 25s
Ran all test suites.
npm ERR! code ELIFECYCLE
npm ERR! errno 1
npm ERR! react-boilerplate@4.0.0 test: `cross-env NODE_ENV=test jest --coverage`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the react-boilerplate@4.0.0 test script.
npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

npm ERR! A complete log of this run can be found in:
npm ERR!     /Users/gableroux/.npm/_logs/2019-12-04T20_56_40_950Z-debug.log
```

</details>

There are still a few tests that are failing, I managed to fix most of the tests, but I'm mainly interested in fixing these two:

```
  ● injectSaga decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      88 |     );
      89 |     const {
    > 90 |       props: { children },
         |       ^
      91 |     } = renderedComponent.getInstance();
      92 |     expect(children.props).toEqual(props);
      93 |   });

      at Object.props (app/utils/tests/injectSaga.test.js:90:7)
```

and

```
 FAIL  internals/templates/utils/tests/injectReducer.test.js (8.639s)
  ● injectReducer decorator › should propagate props

    TypeError: Cannot read property 'props' of null

      62 |     );
      63 |     const {
    > 64 |       props: { children },
         |       ^
      65 |     } = renderedComponent.getInstance();
      66 |
      67 |     expect(children.props).toEqual(props);

      at Object.props (internals/templates/utils/tests/injectReducer.test.js:64:7)
```

I'm trying to figure out why `rendered_component.getInstance()` gives me `null`.

![image](https://user-images.githubusercontent.com/1264761/70181885-c0079900-16b0-11ea-97c9-53ea2372d573.png)

sure thing it's one of the updated dependencies ;)

## Versions

- React-Boilerplate: d19099a
- Node/NPM: v10.16.0
- Browser: n/a

Before opening a new issue, please take a moment to review our [**community guidelines**](https://github.com/react-boilerplate/react-boilerplate/blob/master/CONTRIBUTING.md) to make the contribution process easy and effective for everyone involved.

## Description
A clear and concise description of what the bug is.

When working on #2832 I realized that I was deconstructing the state selector for `selectLocale` when I shouldn't have been so even though `locale` was defined as `en`, `undefined` was being passed to `react-intl`. Despite this error, all tests passed successfully. It was "logged" while running the tests since `react-intl` will fall back to the default locale if it doesn't find the passed parameter, but doesn't show up in the tests report.

## Steps to reproduce
Steps to reproduce the behavior:

Attempt to deconstruct `useSelector(selectLocale)` in any component that uses it, and run the tests. You will see the fallback error message from `react-intl` but the tests will still be marked as passed. Here's [the commit](https://github.com/react-boilerplate/react-boilerplate/pull/2823/commits/26617ba532747b492c2fb1b8d50878420acad80f) where I fixed this for a direct example.
![Commit changes](https://imgur.com/co4OfKK.png)


**Expected behavior**
A clear and concise description of what you expected to happen.

The test should fail if the `locale` state is defined, but is not passed to the relative children component. Of course, if the `locale` state is undefined then the error produced by `react-intl` is accurate and shouldn't result in a failed test. 

**Screenshots**
If applicable, add screenshots to help explain your problem.

![locale error pass](https://imgur.com/dmikFL4.png)

## Versions

- React-Boilerplate: 4.0.0
- Node/NPM: 10.16.0
- Browser: N/A
