Example, There's a model with id and name
When the autocomplete makes the search, it looks for the name and displays the name.
I would like to search for ID or Name and I would like for it to return me in this format:
"ID - Name", instead of just "Name"
How can I accomplish that without changing the gem?
all is fine with autocomplete except on remote true(ajax forms) , autocomplete totally broken on ajax success , how could I fix it

Hi,

I need to add two or fields to auto-complete field. I see many of the links says that it is under pull- request.Is that true if not can you please help me in this case.

My controller is user and User belongs to location.

In my controller I have

autocomplete :location , :name,:display_value => :funky_method

What I need is along with location name the User should be searched using postcode in location Model.

Here is my location Model

def funky_method
        "#{self.name.capitalize} , #{self.postcode}"

end 

I use Rails3.2.13 and Mongid as my backend.

Thanks in advance

menu is undefined on like 396 of the jQuery.ui.autocomplete file

Added ability to use active record scope for search. It enables using complex queries (use OR, JOIN other tables etc.) in search.

Example usage:

In model just add `scope` with lamba and one parameter. In this example it is called `:autocomplete_by_names`:

``` ruby
class User < ActiveRecord::Base
  scope :autocomplete_by_names, lambda { |query|
    select("users.contact_name, users.business_name").where("(users.contact_name LIKE :query OR users.business_name LIKE :query)", :query => query)
  }

  def name_with_id
    "#{business_name.blank? ? contact_name : business_name} (#{id})"
  end
end
```

In controller in `autocomplete` call use just `:id` (if you don't want any other column to be selected from database or if you use select in your scope) and add new option `:search_scope` and specify the name of your `scope` `:autocomplete_by_names`:

``` ruby
class UsersController < ApplicationController
  autocomplete :user, :id, :full => true, :display_value => :name_with_id, :search_scope => :autocomplete_by_names
end
```

All other `autocomplete` options work with this.

I don't see why the json returned always has to have the same value for label and value. A lot of actions would be simplified if I could return a column of my choosing (for e.g id) in the value field and search column in the label field. 

```
def json_for_autocomplete(items, method, extra_data=[])
      items.collect do |item|
        hash = {"id" => item.id.to_s, "label" => item.send(method), "value" => item.send(method)}
        extra_data.each do |datum|
          hash[datum] = item.send(datum)
        end if extra_data
        # TODO: Come back to remove this if clause when test suite is better
        hash
      end
```

Can you please setup compatibility with https://github.com/joliss/jquery-ui-rails? It will make setup and use much simpler. 

see diff of readme

I've noticed that simple_form eagerly fetches records for an association. Example:

``` erb
<%= f.association :foo, as: :autocomplete_collection, url: foo_path  %>
```

That's completely unncessary since the collection is never used for the `:autocomplete_collection` type. The whole point I'm using this type is because the data in that table is very large. Is there a way we can add an empty collection option, `collection: []`, somewhere?

How do I prevent elements mentioned by the "update-elements" hash from being cleared as soon as the user starts typing? I only want them being updated if an autocomplete item is explicitly selected. This should be configurable because I have other use cases where I prefer the default behavior.

This is my use case scenario:

We have a list of field pairs (description, url) for a nested set of links attached to a post. The user will enter some text into the description, auto suggestions pop-up to suggest links found by the full-text indexer and creating an internal link if selected (like "post:///12345" or "download:///34567"). If the url field is already populated, the purpose of changing the description may be solely for editing purposes while the url should not change. This does not seem to be supported.

I could work around this by using a custom select event but actually that looks like a general use case to me and should be integrated into rails3-jquery-autocomplete.
