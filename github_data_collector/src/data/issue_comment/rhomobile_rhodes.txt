We released x64 builds for our users and then a lot of crashes began to happen, there are many scenarios and we couldn't figure out whats going on and if we could do anything to fix, so we rolled back to Rhodes 6 and had to remove app compatibility with Android 9 temporarily. Also there is data loss when rolling back, because sqlite is 3.x in rhodes 7, while it was 2.x back then.

Some of the errors include crashing the app when performing http operations, crashing after a while without doing anything, crashing upon app startup, and sometimes closing the app suddenly because "Application is throwing too many failures".

Some of the ANR or Failures reported in Android Vitals:

```
"main" prio=5 tid=1 Native
  | group="main" sCount=1 dsCount=0 flags=1 obj=0x758334d0 self=0xe64a7000
  | sysTid=1959 nice=0 cgrp=bg_cached sched=0/0 handle=0xeaf084a8
  | state=S schedstat=( 3246444834 7145700127 9227 ) utm=215 stm=109 core=2 HZ=100
  | stack=0xff2cd000-0xff2cf000 stackSize=8MB
  | held mutexes=
  #00  pc 0000000000054f28  /system/lib/libc.so (__pselect6+20)
  #01  pc 0000000000023c4f  /system/lib/libc.so (select+58)
  #02  pc 00000000005fdd54  /data/app/com.app.name-ctg2CAxvljcdQISnnN85ug==/lib/arm/librhodes.so (rho::net::CURLNetRequest::CURLHolder::perform()+412)
  at com.rhomobile.rhodes.RhodesService.callActivationCallback (Native method)
  at com.rhomobile.rhodes.RhodesService.handleAppDeactivation (RhodesService.java:1496)
  at com.rhomobile.rhodes.BaseActivity.activityStopped (BaseActivity.java:186)
  at com.rhomobile.rhodes.BaseActivity.onActivityStopped (BaseActivity.java:161)
  at com.rhomobile.rhodes.BaseActivity.onStop (BaseActivity.java:263)
  at com.rhomobile.rhodes.RhodesActivity.onStop (RhodesActivity.java:510)
  at android.app.Instrumentation.callActivityOnStop (Instrumentation.java:1432)
  at android.app.Activity.performStop (Activity.java:7656)
  at android.app.ActivityThread.callActivityOnStop (ActivityThread.java:4378)
  at android.app.ActivityThread.performStopActivityInner (ActivityThread.java:4356)
  at android.app.ActivityThread.handleStopActivity (ActivityThread.java:4431)
  at android.app.servertransaction.StopActivityItem.execute (StopActivityItem.java:41)
  at android.app.servertransaction.TransactionExecutor.executeLifecycleState (TransactionExecutor.java:145)
  at android.app.servertransaction.TransactionExecutor.execute (TransactionExecutor.java:70)
  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:1947)
  at android.os.Handler.dispatchMessage (Handler.java:106)
  at android.os.Looper.loop (Looper.java:214)
  at android.app.ActivityThread.main (ActivityThread.java:7037)
  at java.lang.reflect.Method.invoke (Native method)
  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run (RuntimeInit.java:494)
  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:965)
```

```
"main" prio=5 tid=1 Native
  | group="main" sCount=1 dsCount=0 obj=0x7489c000 self=0xefb85400
  | sysTid=4808 nice=-10 cgrp=default sched=0/0 handle=0xf281b534
  | state=S schedstat=( 610312014 16731815 1177 ) utm=34 stm=27 core=0 HZ=100
  | stack=0xff76c000-0xff76e000 stackSize=8MB
  | held mutexes=
  #00  pc 0000000000017418  /system/lib/libc.so (syscall+28)
  #01  pc 00000000000b7059  /system/lib/libart.so (_ZN3art17ConditionVariable16WaitHoldingLocksEPNS_6ThreadE+92)
  #02  pc 000000000027d38d  /system/lib/libart.so (_ZN3art3JNI9NewStringEP7_JNIEnvPKti+216)
  #03  pc 00000000018d9afd  /data/app/com.android.chrome-1/base.apk (???)
  at org.chromium.android_webview.AwContents.nativeInit (Native method)
  at org.chromium.android_webview.AwContents.<init> (PG:77)
  at vn.run (PG:15)
  at aKZ.a (PG:13)
  at aLa.run (unavailable:2)
  at org.chromium.base.task.PostTask.b (PG:13)
  at aKZ.a (PG:7)
  at com.android.webview.chromium.WebViewChromiumFactoryProvider.b (PG:6)
  at com.android.webview.chromium.WebViewChromium.init (PG:105)
  at android.webkit.WebView.<init> (WebView.java:636)
  at android.webkit.WebView.<init> (WebView.java:572)
  at android.webkit.WebView.<init> (WebView.java:555)
  at android.webkit.WebView.<init> (WebView.java:542)
  at android.webkit.WebView.<init> (WebView.java:532)
  at com.rhomobile.rhodes.webview.GoogleWebView.<init> (GoogleWebView.java:44)
  at com.rhomobile.rhodes.extmanager.RhoExtManagerImpl.createWebView (RhoExtManagerImpl.java:335)
  at com.rhomobile.rhodes.extmanager.RhoExtManagerImpl.onCreateActivity (RhoExtManagerImpl.java:912)
  at com.rhomobile.rhodes.RhodesActivity.onCreate (RhodesActivity.java:326)
  at android.app.Activity.performCreate (Activity.java:6679)
  at android.app.Instrumentation.callActivityOnCreate (Instrumentation.java:1118)
  at android.app.ActivityThread.performLaunchActivity (ActivityThread.java:2618)
  at android.app.ActivityThread.handleLaunchActivity (ActivityThread.java:2726)
  at android.app.ActivityThread.-wrap12 (ActivityThread.java)
  at android.app.ActivityThread$H.handleMessage (ActivityThread.java:1477)
  at android.os.Handler.dispatchMessage (Handler.java:102)
  at android.os.Looper.loop (Looper.java:154)
  at android.app.ActivityThread.main (ActivityThread.java:6119)
  at java.lang.reflect.Method.invoke! (Native method)
  at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run (ZygoteInit.java:969)
  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:859)
```

```
 #00  pc 0000000000239318  /data/app/com.app.name-cZQS9eON4CdqOFC40tNGbQ==/lib/arm/librhodes.so (js_s_NewORM_useNewOrm(std::string const&, rho::json::CJSONArray&, std::string const&, std::string const&, std::string const&)+452)
```

This is the most reported error, it always happens, even with rhodes 6, but it doesn't crash the app, although now it happens a lot more.
```
java.lang.NullPointerException: 
  at com.rhomobile.rhodes.RhodesActivity.safeGetInstance (RhodesActivity.java:624)
  at com.rhomobile.rhodes.RhodesService$12.run (RhodesService.java:1619)
  at android.os.Handler.handleCallback (Handler.java:873)
  at android.os.Handler.dispatchMessage (Handler.java:99)
  at android.os.Looper.loop (Looper.java:214)
  at android.app.ActivityThread.main (ActivityThread.java:7097)
  at java.lang.reflect.Method.invoke (Native Method)
  at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run (RuntimeInit.java:494)
  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:975)
```

The very first `require 'date'` fails with error:

```
Exception NoMethodError: undefined method 'new' for: #<NameError: undefined method 'strftime' for class 'Date'>
```

As a workaround:

```ruby
# app/application.rb

require 'rho/rhoapplication'
begin
  require 'date'
rescue
  require 'date'
end
...

class AppApplication < Rho::RhoApplication
 ...
end
…sCallbacks' flag.
Filing these here because rhomobile-docs project doesn't seem to be updated.

Documentation for *isRunOnSimulator* and *isDeviceSecured* is incorrect.

- *isRunOnSimulator* also applies to iOS, and returns true if run on Apple simulator. (I have not tested with RhoSimulator). Probably really moot, since simulator on iOS only runs with specially-built X86 image and would never apply with distributed application.

- *isDeviceSecured* description should be reworded a bit, since simulator check is included on iOS.

All of the methods are actually available on iOS, but of course those that are not applicable return *false*. It might be good to mention this in the documentation, as it will save developers the trouble of writing conditional code.
Hi,

I have a RhoMobile application, and I want to use partials for certain parts of the application. Also, I would like to categorize the partials into subfolders. I.e. I will have folders/files as follows:

app/Common/Widget1/_widget1.erb
app/Common/Widget2/_widget2.erb

etc., i.e. each widget has its own folder since there may be other files accompanying each widget.

However, when I try to use render :partial, it seems that it will not accept the file path as is, but will only use the last part of the path. I.e. when I use the following in some .erb file:

<%= render :partial => "Common/Widget1/widget1", locals: {etc} %>

then I will get a runtime error, claiming that the system cannot find "app/Widget1/_widget1.erb".

Is there anything I can do to ensure my partials can be found?

N.b. I'm using RhoStudio 5.5.

Regards,
Daníel
With iOS10, Apple defaulted *WKWebView* `allowLinksPreview` property to `true`.

This means that in a *WKWebView*, force touch on a link will first open a preview, and then with more force, will open the link.

However (at least in Rhodes) this opens in Safari browser rather than in the app. At least for the case of `ios_direct_local_requests = 0`. (I have not tried, but guess that if 1, it would try to open and get a 404 error in Safari, since no real server.)

For almost all cases, it is probably not desirable for this to be `true` in Rhodes. Opening in Safari will expose the server port, and invite examination and hacking. Even if it were to open within the Rhodes app *WKWebView*, it will often lead to unintended consequences, because in order to get the preview, then the request is made and the server calls the controller.

There might be cases where a developer wants to take advantage of this behavior, but it would almost certainly have to be enabled on a case-by-case basis for each link, and in any case would normally need to open within the app *WkWebView*, not in Safari. Developer would have to be aware of the consequences of the controller method call needed to fetch the preview and take it into account to insure no unintended side-effects.
`WebView.enableDragAndDrop` introduces a security vulnerability: it leaks internal URLs when dragging a button, link, etc.

If `ios_direct_local_requests = 0`, then this negates the security through obscurity of randomizing the server port. 

It could be mitigated in an app by not using URLs in the HTML, and using only Javascript callback registrations for navigation.

In general, WebView.enableDragAndDrop seems problematical. It would need to be intelligently enabled/disabled for specific pages and further for specific items on a page.

I suggest watching Cordova, etc. to see what they do about this. It is going to be a problem for WebView-based hybrid platforms, because you do not have effective fine-grain control over page elements.







In f7a7a7eed821709f143965e289fd9f997cac1fb9 a feature was added to enable global drag-and-drop for >= iOS 11.

The `rhoconfig.txt` setting:

`WebView.enableDragAndDrop = 0`

seems ineffective.




