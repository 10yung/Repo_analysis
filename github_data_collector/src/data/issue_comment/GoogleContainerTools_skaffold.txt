<!--
  Issues without logs and details are more complicated to fix.
  Please help us by filling the template below!
-->

### Expected behaviour
Skaffold only exits when instructed in dev mode
### Actual behaviour
After running `skaffold dev` and a few hours later I get the following error:

`deployer cleanup: reading manifests: kubectl create: Running [kubectl --context minikube create --dry-run -oyaml -f /Users/jonathan/projects/kludge/k8-dev/client/deployment-manifest.yaml -f /Users/jonathan/projects/kludge/k8-dev/api/deployment-manifest.yaml -f /Users/jonathan/projects/kludge/k8-dev/client/service-manifest.yaml -f /Users/jonathan/projects/kludge/k8-dev/api/service-manifest.yaml]`

`- stdout: - stderr: Unable to connect to the server: dial tcp 192.168.99.125:8443: connect: operation timed out: exit status 1`

### Information

- Skaffold version: v1.1.0
- Operating system: macOS Catalina 10.15.2
- Contents of skaffold.yaml:

```yaml
apiVersion: skaffold/v2alpha1
kind: Config
build:
  local:
    push: false
  artifacts:
    - image: jonathang1994/kludge-client
      context: client
      sync:
        manual:
          - src: 'pages/*.js'
            dest: '/usr/src/app'
          - src: 'components/*.js'
            dest: '/usr/src/app'
          - src: 'reducers/*.js'
            dest: '/usr/src/app'
          - src: 'actions/*.js'
            dest: '/usr/src/app'
          - src: 'helpers/*.js'
            dest: '/usr/src/app'
          - src: 'hoc/*.js'
            dest: '/usr/src/app'  
      docker:
        dockerfile: Dockerfile
    - image: jonathang1994/kludge-api
      context: api
      sync:
        manual:
          - src: 'resources/views/*.php'
            dest: '/var/www/api'
          - src: 'app/Models/*.php'
            dest: '/var/www/api'
          - src: 'app/Http/Controllers/*.php'
            dest: '/var/www/api'
      docker:
        dockerfile: Dockerfile
deploy:
  kubectl:
    manifests:
      - k8-dev/client/deployment-manifest.yaml
      - k8-dev/api/deployment-manifest.yaml
      - k8-dev/client/service-manifest.yaml
      - k8-dev/api/service-manifest.yaml
     
```

### Steps to reproduce the behaviour

Running `skaffold dev` and after a few hours of development or inactivity (like when my lap top goes in sleep mode for example), I get the `Unable to connect to the server: dial tcp 192.168.99.125:8443: connect: operation timed out: exit status 1` error.

I'm using docker for desktop on Mac, and I am running a Minikube cluster. 

Any ideas on why my connection keeps disconnecting? Thanks

Hopefully this is a fairly self-explanatory change.
Fixes #3222

Relates to n/a

Should merge before : n/a

Should merge after : n/a

**Description**

Add config flag to disable validation when using the kubectl deployer.
When enabled, `--validate=false` is passed to the `kubectl apply` and `kubectl create` commands.

**User facing changes**

n/a

**Before**

n/a

**After**

n/a

**Next PRs.**

n/a


**Submitter Checklist**

These are the criteria that every PR should meet, please check them off as you
review them:

- [x] Includes [unit tests](../DEVELOPMENT.md#creating-a-pr)
- [x] Mentions any output changes.
- [ ] Adds documentation as needed: user docs, YAML reference, CLI reference.
- [x] Adds integration tests if needed.

<!--
_See [the contribution guide](../CONTRIBUTING.md) for more details._
Double check this list of stuff that's easy to miss:
- If you are adding [a example to the `examples` dir](https://github.com/GoogleContainerTools/skaffold/tree/master/examples), please copy them to [`integration/examples`](https://github.com/GoogleContainerTools/skaffold/tree/master/integration/examples)
- Every new example added in [`integration/examples` dir](https://github.com/GoogleContainerTools/skaffold/tree/master/integration/examples), should be tested in [integration test](https://github.com/GoogleContainerTools/skaffold/tree/master/integration)
-->

**Reviewer Notes**

- [ ] The code flow looks good. 
- [ ] Unit test added.
- [ ] User facing changes look good.


**Release Notes**

- Add config option to disable validation when using the kubectl deployer.

This is a feature request to have a `--skip-deploy` similar to `--skip-build` in `skaffold init`. 
This would detect artifacts to prepare for `skaffold build`. 


This simplifies the code that an artifact has to implement to participate to an inferred sync. Instead of listing all the files in the workspace and mapping them to a destination, all is required is to return a list of sync rules.

This also makes it possible to support deletions for inferred sync rules.
Related to #10 

Tanka has been 'officially announced' by grafana.
https://grafana.com/blog/2020/01/09/introducing-tanka-our-way-of-deploying-to-kubernetes/

It is an interesting alternative to helm and seems to fit as possible deploy option for Skaffold.
### Expected behavior
When using skaffold with helm, running `skaffold dev` it should use the latest local image built.
### Actual behavior
When running `skaffold dev` it is building the image, but trying to use some remote image giving the following error:
```
Normal   Scheduled  60s                default-scheduler        Successfully assigned default/core-deployment-7cb45d7865-484pn to docker-desktop
  Normal   BackOff    26s (x2 over 55s)  kubelet, docker-desktop  Back-off pulling image "core"
  Warning  Failed     26s (x2 over 55s)  kubelet, docker-desktop  Error: ImagePullBackOff
  Normal   Pulling    12s (x3 over 58s)  kubelet, docker-desktop  Pulling image "core"
  Warning  Failed     10s (x3 over 56s)  kubelet, docker-desktop  Failed to pull image "core": rpc error: code = Unknown desc = Error response from daemon: pull access denied for core, repository does not exist or may require 'docker login': denied: requested access to the resource is denied
  Warning  Failed     10s (x3 over 56s)  kubelet, docker-desktop  Error: ErrImagePull
```

### Information

- Skaffold version: v1.1.0
- Helm version: 3.0.2
- Operating system: macOS Mojave
- Contents of skaffold.yaml:

```yaml
apiVersion: skaffold/v1
kind: Config
build:
  artifacts:
    - image: core
      context: applications/core
      docker:
        dockerfile: Dockerfile
      sync:
        infer:
          - "**/*"

deploy:
   helm:
     releases:
       - name: cluster
         chartPath: .helm
```

values.yaml
```yaml
replicaCount: 1

application:
  client: asseco
  name: cluster
  services:
    core:
      name: core
      image: core
      enabled: 
```

application.yaml
```yaml
---
{{- range $key, $val := .Values.application.services -}}
{{- if $val.enabled -}}
apiVersion: apps/v1
kind: Deployment
metadata:
    name: {{ $val.name }}-deployment
    release: {{ $.Name }}
spec:
  replicas: 1
  selector:
    matchLabels:
      component: {{ $val.name }}
  template:
    metadata:
      labels:
        component: {{ $val.name }}
    spec:
      containers:
        - name: {{ $val.name }}
          image: {{ $val.image }}
          ports:
            - containerPort: 3000
 
---
apiVersion: v1
kind: Service
metadata:
  name: {{ $key }}-service
spec:
  type: ClusterIP
  selector:
    component: {{ $key }}
  ports:
    - port: 3000
      targetPort: 3000
---
{{- end -}}
{{- end -}}
```
Signed-off-by: David Gageot <david@gageot.net>

Hi,
I have a remote k8s cluster as my deployment target. `Skaffold` is great tool for kubernetes development.
But now I can't tail log from pods in remote kubernetes cluster (this feature only work in local cluster).
So great when this feature is available