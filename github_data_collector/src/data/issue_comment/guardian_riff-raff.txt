In the preview screen, when you have lots of tasks but only want to kick-off some at the top, it's annoying to have to scroll all the way down.

Also, the "run tasks" label isn't active, i.e. the HTML should be

```html
<input type="checkbox" id="selectedKey_1">
<label for="selectedKey_1">Run tasks</label>
```

so that when you click on the text, it (de)activates the checkbox.

- [ ] Test on CODE
Deploy (/deployment/request)

We have two projects
- mobile-n10n:notification
- mobile-n10n:notificationworkerlambda

If you select mobile-n10n:notification in the deploy view, the build history shown on the right is a mix of both projects - this risks being quite confusing as it may suggest the wrong build is deployed on PROD.

This is likely because the build history is queried by a contains or starts with match, instead of a complete match.
https://github.com/guardian/riff-raff/pull/532/files adds a new index - this changes modifies the app to make use of the same timestamp conversion function as is used in the index (otherwise the index will not be used)>
A scheduled job (see #476) can fail to kick off for a few reasons and it should be really obvious through the interface when this has happened. Similarly, if a scheduled job fails someone probably wants to hear about it.

We might:
 - Add a status dashboard that shows all failed scheduled jobs
 - Add a topic or other notification mechanism for letting people know about failed jobs.
It makes sense that the scheduler introduced in #476 should avoid deploying on bank holidays.

One approach for doing this might be to download https://www.gov.uk/bank-holidays/england-and-wales.ics at build time and add it to resources. This could then be parsed at startup (perhaps that should be verified at build time?) and quartz configured appropriately using a HolidayCalendar.
Even though the build 12366 reached the 100% of the process of deploying, RiffRaff didn't mark it as `Completed`.
As far as I'm aware we are mostly deploying the master branch to PROD, and very rarely branches (except emergency fixes and such)

It would be wise to have a big warning if you were about to deploy anything else than master to the PROD environment.

Even though it never happen to me (yet), I _did_ scare myself a couple of time by mechanically picking "PROD" in the dropdown.
The S3 upload (both standalone and also within the autoscaling type) prefixes the `package` when it uploads files (by default, unless disabled by setting `prefixPackage: false`.

This comes from the package name (aka deployment name in `riff-raff.yaml`). It is not possible to customise this, but there are good reasons for doing so in more complex configuration files. I suggest the behaviour should be to use the app name instead which can already be overridden in the configuration.

The example in question is this `riff-raff.yaml`: https://github.com/guardian/grid/blob/82c4d53afa0e0cbab1d6f3b4f361e0c102fcbc70/usage/conf/riff-raff.yaml

It winds up uploading files into `media-service/TEST/upload` whereas it should probably upload into `media-service/TEST/usage` as app is overridden.

This is an easy change to make in all places that S3Upload is used, my only concern is that this is a breaking behaviour change and it's not clear how many places would be impacted. We might need to review all riff-raff.yaml files to figure out how many files use an S3 upload task and also override app in the same deployment.

/cc @akash1810 @philwills 
If a deployment template contains a parameter with a non-default value (e.g. `prefixStage: false`), but then a deployment based on that template overrides the parameter with its default value, then the following warning is given, despite the override being necessary (as far as I understand it).

![image](https://cloud.githubusercontent.com/assets/8754692/26830436/cd0bec50-4ac0-11e7-85f3-d41ec49b7f89.png)
The CAS proxy has this project name: `MemSub::Subscriptions::Content Authorisation Proxy (CAS-Proxy)` - it contains parentheses, and this seems to stop the `projectName` filter from working:

Searching for [`MemSub::Subscriptions::Content Authorisation Proxy (CAS-Proxy)`](https://riffraff.gutools.co.uk/deployment/history?projectName=MemSub%3A%3ASubscriptions%3A%3AContent%20Authorisation%20Proxy%20(CAS-Proxy)&page=1):
----
![image](https://cloud.githubusercontent.com/assets/52038/21432523/e1b1936a-c863-11e6-884f-1a2fff6a4dff.png)



...but if we trim off the part of the search term with parentheses, we get results:

Searching for [`MemSub::Subscriptions::Content Authorisation Proxy `](https://riffraff.gutools.co.uk/deployment/history?projectName=MemSub%3A%3ASubscriptions%3A%3AContent%20Authorisation%20Proxy%20&page=1):
----

![image](https://cloud.githubusercontent.com/assets/52038/21432542/efa723b8-c863-11e6-984d-ffadd6f1268e.png)
