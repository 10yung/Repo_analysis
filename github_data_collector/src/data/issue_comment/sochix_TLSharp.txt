Hi
Is there a way to see status on (last seen recently) mode?
for example: was online status

thanks.
That port contains only nestandard2.0 due crosscompat. NETStandard 2.0 projects can be used under .net.
Dropped .NET only dependencies. Now project uses netstandard deps only.
Removed some old files in Requests, for better compile.
Remove nuspec usage. Now all in .csproj.

If that project need such upgrade merge & change it for project needs.

Here is one commit changes from #679 PR. All changes is merged and cleaned. All dep's updates reverted. 
If that project need such upgrade merge & change it for project needs.
Hi,

I currently implement a Timer that fetches `GetHistoryAsync` every 3 seconds and after some minutes, it does not work, it's a bit strange!

I tried to display some `Flags` and others and nothing changes.

Any idea of the reason? do I make an error using a `Timer` object?

Best regards
Why when using GetUserDialogsAsync it returns only 101 chat (not the whole list). How to fix it?

Hello. I'm writing simple app that connects to the telegram server and requests members count of channel and do some other stuff. I want the application to work constantly and when the connection is broken, it will reconnect automatically.
After 8..24 hours i get an exception in GetUserDialogsAsync function:
`System.AggregateException: One or more errors occurred. (Not connected!)
 ---> System.InvalidOperationException: Not connected!
   at TLSharp.Core.TelegramClient.RequestWithDcMigration(TLMethod request)
   at TLSharp.Core.TelegramClient.SendRequestAsync[T](TLMethod methodToExecute)
   at TLSharp.Core.TelegramClient.GetUserDialogsAsync(Int32 offsetDate, Int32 offsetId, TLAbsInputPeer offsetPeer, Int32 limit)
   --- End of inner exception stack trace ---
   at System.Threading.Tasks.Task`1.GetResultCore(Boolean waitCompletionNotification)
   at Coworkings.UserClient.GetChannelInfo(String channelName) in C:\Develop\CoworkingBot\CoworkingBot\Clients\UserClient.cs:line 227`

Ok, in case of errors i try to reconnect:
```
        public bool Reconnect()
        {
            try
            {
                const int sleepTimeMs = 5000;

                client.Dispose();

                for (int i = 0; i < 3; i++)
                {
                    try
                    {
                       if (!client.IsConnected)
                        {
                            client.ConnectAsync().Wait();
                            logger.Debug("Connect OK");
                        }

                        if (!client.IsConnected)
                        {
                            logger.Error("Ошибка подключения");
                            Thread.Sleep(sleepTimeMs);
                            continue;
                        }

                        if (!client.IsUserAuthorized())
                        {
                            logger.Error("Нет авторизации");
                            Thread.Sleep(sleepTimeMs);
                            continue;
                        }

                        if (client.IsUserAuthorized())
                        {
                            logger.Info("UserClient авторизован");
                        }

                        return IsInitialized();
                    }
                    catch (FloodException ex)
                    {
                        logger.Error("Received FloodException. Sleep to " + ex.TimeToWait + " sec...");
                        logger.Error(ex.ToString());
                        Thread.Sleep(ex.TimeToWait);
                        Thread.Sleep(sleepTimeMs);
                        continue;
                    }
                    catch (InvalidOperationException ex)
                    {
                        logger.Error(ex.ToString());
                        Thread.Sleep(sleepTimeMs);
                        continue;
                    }
                    catch (Exception ex)
                    {
                        logger.Error(ex.ToString());
                        Thread.Sleep(sleepTimeMs);
                        continue;
                    }
                }
            }
            catch (Exception ex)
            {
                logger.Error(ex.ToString());
            }
            return false;
        }
```

But it doesn't work. Reconnect() returns true, but client.GetUserDialogsAsync() throw exception again.
how I authorization user with c# project?
How can I iterate through all types of dialogs, that user have ( client.GetUserDialogsAsync() )  (chat/channel/user) and if (title == "my needed string" ) send a message to it?
Anywhere catch an exception related with stronged named assembly?

When we invoke the method Client.ConnectAsync ...

We download from nuget and also compiled the project clone from github

the detailed exception (in portuguese):

Não foi possível carregar arquivo ou assembly 'Ionic.ZLib, Version=2.0.0.14, Culture=neutral, PublicKeyToken=null' ou uma de suas dependências. É necessário um assembly de nome forte. (Exceção de HRESULT: 0x80131044)":"Ionic.ZLib, Version=2.0.0.14, Culture=neutral, PublicKeyToken=null"}
