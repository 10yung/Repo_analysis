#### Source
PPA on Ubuntu

#### Environment
Albert v. 0.14.21
DESKTOP_SESSION=gnome-xorg
XDG_SESSION_TYPE=x11
XDG_SESSION_DESKTOP=gnome-xorg
XDG_CURRENT_DESKTOP=GNOME

#### Steps to reproduce
Enable only **Applications** and **Files** extensions
Run `nethogs`

#### Expected behaviour
No network traffic

#### Actual behaviour
In `nethogs` when `albert` is idle I can see that `albert` is generating network traffic. Why is `albert` doing that?

as subject, there are no updates since 1 year now
#### Environment
albert --report:
        Albert version: 0.16.1
            Build date: Aug 21 2019 12:01:49
            Qt version: 5.12.2
  QT_QPA_PLATFORMTHEME: 
       Binary location: /usr/bin/albert
                   PWD: /home/nuno
                 SHELL: /usr/bin/zsh
                  LANG: en_US.UTF-8
      XDG_SESSION_TYPE: x11
   XDG_CURRENT_DESKTOP: i3
       DESKTOP_SESSION: i3
   XDG_SESSION_DESKTOP: i3
                    OS: Ubuntu 19.04
     OS (type/version): ubuntu/19.04
             Build ABI: x86_64-little_endian-lp64
  Arch (build/current): x86_64/x86_64
 Kernel (type/version): linux/5.0.0-37-generic

#### Steps to reproduce
Go to Settings
select a field and press the tab key

#### Expected behaviour
selection follows the order from the top to the bottom 

#### Actual behaviour
selection jumps around
I have created this python plugin to show the man page of a command in yelp (_instead of console_):
```
# -*- coding: utf-8 -*-

"""Open man page in Yelp.

This extension provides a single item which opens yelp with man page of 'command'

Synopsis: <trigger> <command>"""

from shutil import which
from albertv0 import *

__iid__ = "PythonInterface/v0.1"
__prettyname__ = "Graphical man"
__version__ = "1.0"
__trigger__ = "man "
__author__ = "Juan Simón"
__dependencies__ = ["yelp"]
iconPath = iconLookup("help-browser")

for dep in __dependencies__:
	if not which(dep):
		raise Exception("'%s' is not in $PATH." % dep)
		
def handleQuery(query):
	if query.isTriggered:
		return Item(
			id=__prettyname__,
			icon=iconPath,
			text=__prettyname__,
			subtext="Showing man page in Yelp of '%s'" % query.string,
			completion=query.rawString,
			actions=[
				ProcAction("Showing man page in Yelp of '%s'" % query.string, ['yelp','man:'+query.string])
			]
		)
```
I am with a group called MerOS, we are making a multi-purpose distribution that can be ran live off a USB,

The lead idea maker, found this project and would like to include it in the OS, 

Can we? 
As title and figure
![屏幕截图](https://user-images.githubusercontent.com/47813293/71538558-070f4400-2968-11ea-98d2-e7d514e62b12.png)

This commit fixes #860 and allows super key to be used as modifier. Good news for i3/dmenu users.
Albert crashes at startup when I have any Win-Key using Hotkey.

I had to delete the settings and set it up again to get it working. 

If it is not possible to fix the win-key, can Albert show an error that Win-key may not be used?

_Originally posted by @bkqtnte10 in https://github.com/albertlauncher/albert/issues/832#issuecomment-559860064_
I'd like to be able to return more data from results than simply a sub-text item. For example:

* file-system launcher that could tell you: filename, file type, thumbnail, file size, permissions, modification time, etc.
* ps wrapper that shows the process resource use
* document browser with page count, cover thumbnail language, title, authors, etc.

I'm not quite sure of the ideal UI for this, perhaps a dual pane layout:

```
---------------------------------------------
| Search                                    |
---------------------------------------------
| Result 1 (hilight) | File type: Pdf       |
| Result 2           | Size:      500kB     |
| Result 3           | Title:     Doc title |
| Result 4           | Author:    Dr Foo    |
---------------------------------------------
```
or an "interleaved layout", but this puts much tighter practical limits on the info returned (or the frame gets huge):
```
---------------------------------------------
| Search                                    |
---------------------------------------------
| Result 1 (hilight)                        |
|   File type: Pdf                          |
|   Size:      500kB                        |
|   Title:     Doc title                    |
|   Author:    Dr Foo                       |
---------------------------------------------
| Result 2                                  |
|   File type: Pdf                          |
|   Size:      500kB                        |
.....
---------------------------------------------
```


#### Steps to reproduce

`albert show` under any wayland compositor.

#### Expected behaviour

show

#### Actual behaviour

crash

#### Version

Built from master with https://github.com/albertlauncher/albert/pull/804 applied (to get past earlier wayland crash).

#### Environment
```
❯ albert --report 
        Albert version: 0.16.1
            Build date: Nov  4 2019 06:13:50
            Qt version: 5.13.2
  QT_QPA_PLATFORMTHEME: qt5ct
       Binary location: /usr/bin/albert
                   PWD: /home/eric
                 SHELL: /usr/bin/zsh
                  LANG: en_US.UTF-8
      XDG_SESSION_TYPE: tty
   XDG_CURRENT_DESKTOP: 
       DESKTOP_SESSION: 
   XDG_SESSION_DESKTOP: 
                    OS: Arch Linux
     OS (type/version): arch/unknown
             Build ABI: x86_64-little_endian-lp64
  Arch (build/current): x86_64/x86_64
 Kernel (type/version): linux/5.3.11-arch1-1
```
#### Trace
```
❯ coredumpctl info
           PID: 590302 (albert)
           UID: 1000 (eric)
           GID: 1000 (eric)
        Signal: 11 (SEGV)
     Timestamp: Mon 2019-11-25 00:42:53 PST (13min ago)
  Command Line: bin/albert
    Executable: /home/eric/src/github.com/albertlauncher/albert-build/bin/albert
 Control Group: /user.slice/user-1000.slice/session-1.scope
          Unit: session-1.scope
         Slice: user-1000.slice
       Session: 1
     Owner UID: 1000 (eric)
       Boot ID: 493ef9910b7f4ce9afa96ea6265916d6
    Machine ID: a48fe9a7ff994789a35fe7ad090cd8d7
      Hostname: chip
       Storage: /var/lib/systemd/coredump/core.albert.1000.493ef9910b7f4ce9afa96ea6265916d6.590302.1574671373000000000000.lz4
       Message: Process 590302 (albert) of user 1000 dumped core.
                
                Stack trace of thread 590302:
                #0  0x00007f6bcb5a10c9 XQueryExtension (libX11.so.6)
                #1  0x00007f6bcb5947e4 XInitExtension (libX11.so.6)
                #2  0x00007f6bc9a01c5f XextAddDisplay (libXext.so.6)
                #3  0x00007f6bc99fc051 XShapeQueryExtension (libXext.so.6)
                #4  0x00007f6bab668902 n/a (libwidgetboxmodel.so)
                #5  0x00007f6bcb06f8ef _ZN7QWidget5eventEP6QEvent (libQt5Widgets.so.5)
                #6  0x00007f6bcb02b4e5 _ZN19QApplicationPrivate13notify_helperEP7QObjectP6QEvent (libQt5Widgets.so.5)
                #7  0x00007f6bcb034e11 _ZN12QApplication6notifyEP7QObjectP6QEvent (libQt5Widgets.so.5)
                #8  0x00007f6bcb93ad12 _ZN16QCoreApplication15notifyInternal2EP7QObjectP6QEvent (libQt5Core.so.5)
                #9  0x00007f6bcb0679a0 _ZN14QWidgetPrivate30sendPendingMoveAndResizeEventsEbb (libQt5Widgets.so.5)
                #10 0x00007f6bcb06b894 _ZN14QWidgetPrivate11show_helperEv (libQt5Widgets.so.5)
                #11 0x00007f6bcb06eb85 _ZN14QWidgetPrivate10setVisibleEb (libQt5Widgets.so.5)
                #12 0x00007f6bab6662c0 n/a (libwidgetboxmodel.so)
                #13 0x000055fe583ef850 n/a (/home/eric/src/github.com/albertlauncher/albert-build/bin/albert)
                #14 0x000055fe583f519a n/a (/home/eric/src/github.com/albertlauncher/albert-build/bin/albert)
                #15 0x000055fe583f4ea4 n/a (/home/eric/src/github.com/albertlauncher/albert-build/bin/albert)
                #16 0x000055fe583f48ba n/a (/home/eric/src/github.com/albertlauncher/albert-build/bin/albert)
                #17 0x00007f6bcb966c20 _ZN11QMetaObject8activateEP7QObjectiiPPv (libQt5Core.so.5)
                #18 0x00007f6bcc5451c1 n/a (libQt5Network.so.5)
                #19 0x00007f6bcb966ac1 _ZN11QMetaObject8activateEP7QObjectiiPPv (libQt5Core.so.5)
                #20 0x00007f6bcb973742 _ZN15QSocketNotifier9activatedEiNS_14QPrivateSignalE (libQt5Core.so.5)
                #21 0x00007f6bcb973a92 _ZN15QSocketNotifier5eventEP6QEvent (libQt5Core.so.5)
                #22 0x00007f6bcb02b4e5 _ZN19QApplicationPrivate13notify_helperEP7QObjectP6QEvent (libQt5Widgets.so.5)
                #23 0x00007f6bcb034e11 _ZN12QApplication6notifyEP7QObjectP6QEvent (libQt5Widgets.so.5)
                #24 0x00007f6bcb93ad12 _ZN16QCoreApplication15notifyInternal2EP7QObjectP6QEvent (libQt5Core.so.5)
                #25 0x00007f6bcb993766 n/a (libQt5Core.so.5)
                #26 0x00007f6bc9ad13ee g_main_context_dispatch (libglib-2.0.so.0)
                #27 0x00007f6bc9ad3201 n/a (libglib-2.0.so.0)
                #28 0x00007f6bc9ad3241 g_main_context_iteration (libglib-2.0.so.0)
                #29 0x00007f6bcb992b13 _ZN20QEventDispatcherGlib13processEventsE6QFlagsIN10QEventLoop17ProcessEventsFlagEE (libQt5Core.so.5)
                #30 0x00007f6bcb93983c _ZN10QEventLoop4execE6QFlagsINS_17ProcessEventsFlagEE (libQt5Core.so.5)
                #31 0x00007f6bcb941676 _ZN16QCoreApplication4execEv (libQt5Core.so.5)
                #32 0x000055fe583edc17 n/a (/home/eric/src/github.com/albertlauncher/albert-build/bin/albert)
                #33 0x00007f6bca9e6153 __libc_start_main (libc.so.6)
                #34 0x000055fe583db20e n/a (/home/eric/src/github.com/albertlauncher/albert-build/bin/albert)
```


