When using the autorun module to get the `autorunsc.exe` output, the file only contains a header but no content is there.
I have had to rewrite large portions of Kansa to allow for it to run in my weaker machine. Just running against 400 machines required 8 gigs of RAM due to it opening PSsessions with all of them. Due to this I had to rewrite the get-target function calls to listen to your throttle limit. I also had to rewrite the log collections to even make log parser work for analysis. And rewrite the get-analysis function to handle errors. Because running something that takes 2+ hours for only 400 machines and then have an analysis fail is wasteful. Please update Kansa to actually be useful for weaker machines and scale larger than 1-200 machines with out failure. And not quit on analysis. Or at least allow for an analysis option to run on a folder after targetdata has been acquired. No options allow me to post analyze. I had to fake the outputfolder so it had to rerun on 1 machine and then do analysis. 
@davehull Please DM me at your earliest convenience.  I am an employee at a large financial institution and we have been continuing development of the Kansa project internally for the last 3 years.  We've made a lot of really cool enhancements and we're interested in contributing them back to the community.  Our IP/legal/openSource teams have asked me to reach out to you to start a dialog about the best way for us to contribute (pull/merge vs fork vs other).  I'd love to talk with you about it.

We have successfully achieved running Kansa realtime against up to 150K endpoints with integration in our ELK stack and live metrics/dashboards, new IR modules, etc...we think the InfoSec community could really benefit from this work, and we could benefit from other contributors adding modules that fit in our enhanced framework. You can reach me on Twitter @Jon14119114
I ran 
```
PS C:\Tools\Kansa-master> ls -r *.ps1 | Unblock-File
PS C:\Tools\Kansa-master> Set-ExecutionPolicy Unrestricted
PS C:\Tools> streams -sd .\Kansa-master\ #I have SysInternals on my Path
PS C:\Tools\Kansa-master> .\kansa.ps1 -Target $env:COMPUTERNAME -ModulePath .\Modules -Verbose
```
But it errors out saying: 
```
VERBOSE: Found .\Modules\Modules.conf.
VERBOSE: Running modules:
Get-PrefetchListing
Get-WMIRecentApps
Get-Netstat
Get-DNSCache
Get-ProcsWMI
Get-LogUserAssist
Get-SvcFail
Get-SvcTrigs
Get-WMIEvtFilter
Get-WMIFltConBind
Get-WMIEvtConsumer
Get-PSProfiles
Get-SchedTasks
Get-File
Get-LocalAdmins
VERBOSE: Found logging.conf
Caught: Cannot validate argument on parameter 'Session'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
Script completed with warnings or errors. See C:\Tools\Kansa-master\Output_20190313154552\Error.Log for details.
```
Here are the contents of the error log.
```
Connecting to remote server **** failed with the following error message : The client cannot connect to the destination specified in the request. Verify that the service on the destination is running and is accepting requests. Consult the logs and documentation for the WS-Management service running on the destination, most commonly IIS or WinRM. If the destination is the WinRM service, run the following command on the destination to analyze and configure the WinRM service: "winrm quickconfig". For more information, see the about_Remote_Troubleshooting Help topic.
Exit-Script function was passed an error, this may be a duplicate that wasn't previously cleared, or Kansa.ps1 has crashed.
Cannot validate argument on parameter 'Session'. The argument is null or empty. Provide an argument that is not null or empty, and then try the command again.
```
Hello all,

I'm getting this WARNING in my Kansa output during analysis.  I've been trying to play with where to put the DATADIR directive and how to populate it.  The netstat collector is running and collecting data.  Can anyone lend any insight please?

WARNING:  Analysis script, .\Analysis\Net\Get-NetstatDistinctLocal24.ps1, missing # DATADIR directive, skipping analysis
A simple module to read remote systems registry keys.
I usually use it to baseline registry keys used usually for persistence.

I have also complied a list of keys listed in the MITRE ATT&CK framework. Not sure if these keys should be hardcoded in the module?
I was having trouble getting this to run. After switching from -tsv to -csv it began working properly:

> C:\Users\<user>\Desktop\Kansa-master\Kansa-master\Modules\Log\Get-AppCompatCache - Original.ps1 :
>AppCompatCacheParser.exe not found on CSC-DURAM-VM2
>At line:1 char:1
>+ & '.\Get-AppCompatCache - Original.ps1'
>+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
>    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
>    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Get->AppCompatCache - Original.ps1

`<#
.SYNOPSIS
Get-AppCompatCache.ps1
When run via Kansa.ps1 with -Pushbin flag, this module will copy 
AppCompatCacheParser.exe to the remote system, then run 
AppCompatCacheParser.exe --csv $AppCompatCacheParserOutputPath on the remote system, 
and return the output data as a powershell object.

AppCompatCacheParser.exe can be downloaded from http://ericzimmerman.github.io/

.NOTES
Kansa.ps1 directives
OUTPUT CSV
BINDEP .\Modules\bin\AppCompatCacheParser.exe
#>


#Setup Variables
$AppCompatCacheParserPath = ($env:SystemRoot + "\AppCompatCacheParser.exe")
$Runtime = ([String] (Get-Date -Format yyyyMMddHHmmss))
$suppress = New-Item -Name "ACCP-$($Runtime)" -ItemType Directory -Path $env:Temp -Force
$AppCompatCacheParserOutputPath = $($env:Temp + "\ACCP-$($Runtime)")

if (Test-Path ($AppCompatCacheParserPath)) {
    #Run AppCompatCacheParser.exe
    $suppress = & $AppCompatCacheParserPath --csv $AppCompatCacheParserOutputPath
    #Output the data.
    Import-Csv -Delimiter "`t" "**$AppCompatCacheParserOutputPath\*.csv"**
    
    #Delete the output folder.
    $suppress = Remove-Item $AppCompatCacheParserOutputPath -Force -Recurse
        
} else {
    Write-Error "AppCompatCacheParser.exe not found on $env:COMPUTERNAME"
}`
Updated SVCAll module and analysis files.  Added modules and analysis files for Scheduled Tasks, and a series of Registry and File locations relevant to Malware persistence mechanisms documented by MITRE's ATT&CK matrix.
I get an error running `Log\Get-LogOpenSavePidlMRU.ps1`
![image](https://user-images.githubusercontent.com/6843296/38062031-7f8876ee-32b7-11e8-8b67-130e67d16f4a.png)

I changed line 19
```
Get-RegKeyValueNData 'HKU\S-1-5-21-2127521184-1604012920-1887927527-8646616\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\OpenSavePidlMRU\`*'
```
to 
```
Get-RegKeyValueNData 'HKCU\Software\Microsoft\Windows\CurrentVersion\Explorer\ComDlg32\OpenSavePidlMRU\`*'
```
and that appeared to fix it and return a value, property list. I'm not sure if this is correct or not though?

![image](https://user-images.githubusercontent.com/6843296/38062105-d6a5e588-32b7-11e8-8a17-5f0820eb8e6f.png)

Let me know if that looks correct to you and I will add it to PR #180 
Hello, 

I just downloaded kansa today and used the ASEP\Get-Autorunsc.ps1. 

The output does not contain the autorun output i expect. See the output below. 

Kindly advise. 

PSComputerName,"RunspaceId","PSShowComputerName","Length"
Machine_name,"56d62496-1558-41e8-b9e8-05682612a8bd","True","0"


