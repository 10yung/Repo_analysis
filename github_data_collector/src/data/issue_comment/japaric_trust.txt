Any chance that Trust supports Gitlab?
I was getting an error until I made this change.
Hello, would it be possible to port `trust` to GitHub Actions? Either as an alternative or replacing the current scripts. It would be nice for downstream repositories to be able to transition to GitHub Actions and maintain the same platform compatibility.

japaric/cross has moved to rust-embedded/cross.  Update japaric/cross references to reflect this.
If `--target` isn't supplied there is a dependency on `rustc` to find the target triple.

https://github.com/japaric/trust/blob/08c86c03efb887c33abd4bd5bc3677f81bac98e7/install.sh#L99-L102

https://github.com/japaric/trust/blob/08c86c03efb887c33abd4bd5bc3677f81bac98e7/install.sh#L127

Given the usage instructions at https://github.com/japaric/trust#use-the-binary-releases-on-travis-ci, it surprised me that the script uses `rustc` to find the target triple.

If we could determine `target` by using commands like `uname -a` this script would be significantly more portable.

I'll try and dig up what could work across macOS and Linux.
Could trust get support for generating WASM32 binaries?

Example:

https://github.com/mcandre/remy/blob/master/wasm32.Dockerfile
None
A unit test failure in my Travis CI failed to show a proper backtrace. Looking at the `.travis.yml` file it does not seems that `RUST_BACKTRACE=1` is set.

Would:
```
env:
  global:
    - RUST_BACKTRACE=1
```
be sufficient? (with the same for appveyor?)
Did not investigate too closely yet, filling so I donâ€™t forget.

Goal is to run tests for all the iOS targets.

* **aarch64-apple-ios**: when running `cross --test`, `error: could not execute process `<test executable>` (never executed)`
* **armv7-apple-ios**: when running `cross --build`, `ld: library not found for -lcrt1.3.1.o`
* **armv7s-apple-ios**: when running `cross --build`, `ld: library not found for -lcrt1.3.1.o`
* **i386-apple-ios**:  when running `cross --build`, `ld: building for OSX, but linking against dylib built for iOS (/Applications/Xcode-9.4.1.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator11.4.sdk/usr/lib/libobjc.tbd). file '/Applications/Xcode-9.4.1.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator11.4.sdk/usr/lib/libobjc.tbd' for architecture i386`
* **x86_64-apple-ios**: when running `cross --build`, `ld: building for OSX, but linking against dylib built for iOS (/Applications/Xcode-9.4.1.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator11.4.sdk/usr/lib/libobjc.tbd). file '/Applications/Xcode-9.4.1.app/Contents/Developer/Platforms/iPhoneSimulator.platform/Developer/SDKs/iPhoneSimulator11.4.sdk/usr/lib/libobjc.tbd' for architecture x86_64`