Hello,
first: **thank you** for the great guide you put together: this gentle intro is very well done and I wish it could be part of the official documentation.

Next, while trying some code from chapter 2, generic functions, I noticed that the generic multiplication does not need the `Copy` trait (I am using rust 1.37.0). Maybe you could add a short explanation of why that is not needed anymore (if that is the case).

Thanks a lot for all your great work, that I hope you have time to continue :)
In [1. Basics ~ Matching](https://stevedonovan.github.io/rust-gentle-intro/1-basics.html#matching) inclusive range should be written `..=`:

```
warning: `...` range patterns are deprecated
 --> src/main.rs:5:10
  |
5 |         0...3 => "small",
  |          ^^^ help: use `..=` for an inclusive range
  |
  = note: `#[warn(ellipsis_inclusive_range_patterns)]` on by default
```
The index page says

> There will be some uphill but the view will be inspiring; the community is unusually pleasant and happy to help. There is the Rust Users Forum and an active subreddit which is unusually well-moderated. The [FAQ](https://www.rust-lang.org/en-US/faq.html) is a good resource if you have specific questions.

The original FAQ was moved ([bug 291](https://github.com/rust-lang/www.rust-lang.org/issues/291)) to https://prev.rust-lang.org/en-US/faq.html. This needs to be fixed.
I may be missing something, but the text says that this snippet from the closures section "Can't be done", but it seems to compile without any trouble (using rustc 1.38.0). Thanks for your work on this guide!
. 
```rust
fn main() {
    let mut s = "world";

    // closure does a mutable borrow of s
    let mut changer = || s = "world";

    changer();
    // does an immutable borrow of s
    assert_eq!(s, "world");
}
```
Title pretty much explains it. I was going to do a pull request but wasn't sure how to explain it (I'm a rust newb).

I found this: https://stackoverflow.com/questions/27852613/why-does-printing-a-pointer-print-the-same-thing-as-printing-the-dereferenced-po?rq=1

It seems that [`failure`](https://github.com/rust-lang-nursery/failure) is the new way to handle errors in Rust, and if I understand correctly it may become the suggested or default Rust error handling method in future. The "[Error Handling](https://stevedonovan.github.io/rust-gentle-intro/6-error-handling.html)" chapter should include a section on [`failure`](https://github.com/rust-lang-nursery/failure).
I guess it should be like this?
I started reading your gentle introduction to Rust, and noticed this line on the first page:

> There will be some uphill but the view will be inspiring; the community is unusually pleasant and happy to help. There is the Rust Users Forum and an active subreddit which is unusually well-moderated.

I have to say that this is completely false, and many people know it. It's not just me. Many people have complaints about the toxic and divisive Rust community, the biased moderation, and the censorship. It is especially bad on the subreddit. There are threads where posts have been mass deleted because they went against the narrative, questioning decisions that had been made (such as when Ashley Williams was added to the team). These were perfectly innocent posts, not being hostile or attacking anyone, merely stating facts and questioning the decisions, and they just got deleted.

I myself have been subjected to attacks by the Rust community, because of my political beliefs. One of the moderators on the subreddit actually PMed me and called me a Nazi because I happened to support an elected president. Other members on the subreddit went through my post history and called me a Nazi or a bigot just because of my political opinion, when I was perfectly polite to them and only wanted help learning the Rust programming language. They had the nerve to call me bigoted, when they were the ones showing bigotry. It's just insane.

I doubt this will get much attention, as you have your opinion and consider the Rust community to be good. But to me this is just totally false and is ignoring a very real problem, and just brushing it under the carpet out of sight. Ignoring it and making false promises isn't the way to solve this. Dealing with it and improving it is. In my opinion, people new to Rust should be warned that the community is not welcoming, so that they know what to expect and will not get an unpleasant surprise later on.
Small spelling mistake.