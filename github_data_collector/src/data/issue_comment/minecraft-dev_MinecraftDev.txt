Please include the following information in all bug reports:

* Minecraft Development for IntelliJ plugin version
- 2019.2-1.3.2
* IntelliJ version
- 2019.2.4 (build 192.7142.36)
- Latest version is 2019.3.1 (build 193.5662.53)
* Operating System (this has come up enough times to be important)
- Windows 10
* Target platforms
  * Either where the issue occurs
  * Or where the feature request is relevant

![CaptureTemp](https://user-images.githubusercontent.com/6370453/71788053-eccf0900-2fec-11ea-94f7-40baac1878d6.PNG)


For feature requests, try to avoid vague requests. The more details there are explaining what the feature request is, how it should work,
and why it would be useful, the more likely it'll be able to be add quickly.  Feel free to be vague if you have a general idea that
something might be cool, but you can't think of specifics, but these are less likely to be prioritized.

For issues, bugs, or error stack traces, always include a stack trace if there is one. Otherwise, the more information you can provide in
terms of how to reproduce the problem, the more likely it'll be fixed. If there is something specific about your project, a link to the
GitHub project can be very helpful.

## Line addition request to fix minecraft assets where forge misses it on intellij
* IntelliJ version: IntelliJ IDEA 2019.3.1
* Target platforms
  * Minecraft Forge 1.8 > 1.15

build.gradle
```yaml
sourceSets { main { output.resourcesDir = output.classesDir } }
```

Please include the following information in all bug reports:

* Minecraft Development for IntelliJ plugin version
2019.3-1.3.2

* IntelliJ version
Intellij IDEA 2019.3.1 (Ultimate Edition)

* Operating System (this has come up enough times to be important)
Ubuntu 18.04

This error occurres every time, i start the intellij IDEA 2019.3.1. This error wasn't there in Intellij IDEA 2019.2

Stacktrace:
```
com.intellij.diagnostic.PluginException: File type detector com.demonwav.mcdev.nbt.filetype.NbtFileTypeDetector@7c923782 does not implement getDetectedFileTypes(), leading to suboptimal performance. Please implement the method. [Plugin: com.demonwav.minecraft-dev]
	at com.intellij.ide.plugins.PluginManagerCore.createPluginException(PluginManagerCore.java:405)
	at com.intellij.diagnostic.PluginProblemReporterImpl.createPluginExceptionByClass(PluginProblemReporterImpl.java:12)
	at com.intellij.diagnostic.PluginException.createByClass(PluginException.java:58)
	at com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.getDetectorsForType(FileTypeManagerImpl.java:1129)
	at com.intellij.openapi.fileTypes.impl.FileTypeManagerImpl.isFileOfType(FileTypeManagerImpl.java:1183)
	at com.intellij.lang.aspectj.psi.presentation.AjFileIconPatcher.patchIcon(AjFileIconPatcher.java:21)
	at com.intellij.util.IconUtil.lambda$static$0(IconUtil.java:154)
	at com.intellij.ui.IconDeferrerImpl.deferImpl(IconDeferrerImpl.java:83)
	at com.intellij.ui.IconDeferrerImpl.defer(IconDeferrerImpl.java:73)
	at com.intellij.util.IconUtil.getIcon(IconUtil.java:182)
	at com.intellij.psi.impl.ElementBase.getElementIcon(ElementBase.java:220)
	at com.intellij.psi.impl.ElementBase.doComputeIconNow(ElementBase.java:110)
	at com.intellij.psi.impl.ElementBase.lambda$computeIconNow$2(ElementBase.java:97)
	at com.intellij.util.AstLoadingFilter.disallowTreeLoading(AstLoadingFilter.java:125)
	at com.intellij.util.AstLoadingFilter.disallowTreeLoading(AstLoadingFilter.java:114)
	at com.intellij.psi.impl.ElementBase.computeIconNow(ElementBase.java:97)
	at com.intellij.psi.impl.ElementBase.lambda$static$0(ElementBase.java:41)
	at com.intellij.ui.CoreIconManager.lambda$createDeferredIcon$0(CoreIconManager.java:38)
	at com.intellij.ui.DeferredIconImpl.evaluate(DeferredIconImpl.java:264)
	at com.intellij.ui.DeferredIconImpl.lambda$null$0(DeferredIconImpl.java:152)
	at com.intellij.ui.IconDeferrerImpl.evaluateDeferred(IconDeferrerImpl.java:111)
	at com.intellij.ui.DeferredIconImpl.lambda$null$1(DeferredIconImpl.java:152)
	at com.intellij.openapi.application.impl.ApplicationImpl.tryRunReadAction(ApplicationImpl.java:997)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.lambda$runInReadActionWithWriteActionPriority$0(ProgressIndicatorUtils.java:73)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.lambda$runWithWriteActionPriority$1(ProgressIndicatorUtils.java:127)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$2(CoreProgressManager.java:163)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:585)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:531)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:59)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:150)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.runWithWriteActionPriority(ProgressIndicatorUtils.java:116)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.runInReadActionWithWriteActionPriority(ProgressIndicatorUtils.java:73)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.runInReadActionWithWriteActionPriority(ProgressIndicatorUtils.java:94)
	at com.intellij.ui.DeferredIconImpl.lambda$paintIcon$4(DeferredIconImpl.java:151)
	at com.intellij.util.concurrency.BoundedTaskExecutor.doRun(BoundedTaskExecutor.java:222)
	at com.intellij.util.concurrency.BoundedTaskExecutor.access$200(BoundedTaskExecutor.java:30)
	at com.intellij.util.concurrency.BoundedTaskExecutor$1.execute(BoundedTaskExecutor.java:201)
	at com.intellij.util.ConcurrencyUtil.runUnderThreadName(ConcurrencyUtil.java:221)
	at com.intellij.util.concurrency.BoundedTaskExecutor$1.run(BoundedTaskExecutor.java:190)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)
	at java.base/java.lang.Thread.run(Thread.java:834)
```

closes #666
Be kind, Kyle.

Signed-off-by: Chris Sanders <zidane@spongepowered.org>
I chose 1.12 because this is the lowest version after https://github.com/minecraft-dev/minecraftdev.org/commit/207a95040fb6d536f781272358322a55fd21292a
**Minecraft Development for IntelliJ plugin version**:
2019.2-1.3.1

**IntelliJ version**: 
IntelliJ IDEA 2019.2.2 (Ultimate Edition)
Build #IU-192.6603.28, built on September 6, 2019

**Operating System**: 
Windows 10

**Description**:
I set the author and it was generated as:
```authors=""MelanX""```
There are 2 ```"``` too much. Because of that the client will not be running.
Plugin Name: Minecraft Development
Plugin Version: 2019.1-1.2.23
OS Name: Mac OS X
Java Version: 1.8.0_202-release
Java VM Vendor: JetBrains s.r.o
App Name: IDEA
App Full Name: IntelliJ IDEA
App Version Name: IntelliJ IDEA
Is EAP: false
App Build: IU-191.7479.19
App Version: 2019.1.3
Last Action: GotoDeclaration

```
java.lang.Exception
	at com.intellij.psi.stubs.StubTreeLoaderImpl.diagnoseLengthMismatch(StubTreeLoaderImpl.java:180)
	at com.intellij.psi.stubs.StubTreeLoaderImpl.checkLengthMatch(StubTreeLoaderImpl.java:150)
	at com.intellij.psi.stubs.StubTreeLoaderImpl.readFromVFile(StubTreeLoaderImpl.java:118)
	at com.intellij.psi.stubs.StubTreeLoaderImpl.readOrBuild(StubTreeLoaderImpl.java:53)
	at com.intellij.psi.impl.compiled.ClsFileImpl.getStubTree(ClsFileImpl.java:486)
	at com.intellij.psi.impl.compiled.ClsFileImpl.getStub(ClsFileImpl.java:458)
	at com.intellij.psi.impl.compiled.ClsFileImpl.getClasses(ClsFileImpl.java:134)
	at com.intellij.core.CoreJavaDirectoryService.getPsiClasses(CoreJavaDirectoryService.java:70)
	at com.intellij.core.CoreJavaDirectoryService.getClasses(CoreJavaDirectoryService.java:55)
	at com.intellij.psi.impl.PsiElementFinderImpl.getClasses(PsiElementFinderImpl.java:86)
	at com.intellij.psi.impl.PsiElementFinderImpl.getClasses(PsiElementFinderImpl.java:77)
	at com.intellij.psi.impl.JavaPsiFacadeImpl.getClasses(JavaPsiFacadeImpl.java:293)
	at com.intellij.psi.impl.file.PsiPackageImpl.getClasses(PsiPackageImpl.java:158)
	at com.intellij.psi.impl.file.PsiPackageImpl.processDeclarations(PsiPackageImpl.java:317)
	at com.intellij.psi.impl.source.PsiJavaFileBaseImpl.processPackageDeclarations(PsiJavaFileBaseImpl.java:484)
	at com.intellij.psi.impl.source.PsiJavaFileBaseImpl.processCurrentPackage(PsiJavaFileBaseImpl.java:398)
	at com.intellij.psi.impl.source.PsiJavaFileBaseImpl.processDeclarationsNoGuess(PsiJavaFileBaseImpl.java:334)
	at com.intellij.psi.impl.source.PsiJavaFileBaseImpl.access$200(PsiJavaFileBaseImpl.java:40)
	at com.intellij.psi.impl.source.PsiJavaFileBaseImpl$MyCacheBuilder.compute(PsiJavaFileBaseImpl.java:595)
	at com.intellij.psi.impl.PsiCachedValueImpl.doCompute(PsiCachedValueImpl.java:49)
	at com.intellij.util.CachedValueBase.lambda$getValueWithLock$0(CachedValueBase.java:236)
	at com.intellij.openapi.util.RecursionManager$1.doPreventingRecursion(RecursionManager.java:116)
	at com.intellij.util.CachedValueBase.getValueWithLock(CachedValueBase.java:237)
	at com.intellij.psi.impl.PsiCachedValueImpl.getValue(PsiCachedValueImpl.java:38)
	at com.intellij.psi.impl.source.PsiJavaFileBaseImpl.processDeclarations(PsiJavaFileBaseImpl.java:314)
	at com.intellij.psi.scope.util.PsiScopesUtil.treeWalkUp(PsiScopesUtil.java:69)
	at com.intellij.psi.scope.util.PsiScopesUtil.treeWalkUp(PsiScopesUtil.java:51)
	at com.intellij.psi.scope.util.PsiScopesUtil.resolveAndWalk(PsiScopesUtil.java:218)
	at com.intellij.psi.scope.util.PsiScopesUtil.resolveAndWalk(PsiScopesUtil.java:149)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.resolve(PsiJavaCodeReferenceElementImpl.java:501)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.access$100(PsiJavaCodeReferenceElementImpl.java:44)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:383)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl$OurGenericsResolver.resolve(PsiJavaCodeReferenceElementImpl.java:375)
	at com.intellij.psi.impl.source.resolve.ResolveCache.lambda$resolveWithCaching$1(ResolveCache.java:203)
	at com.intellij.openapi.util.RecursionManager$1.doPreventingRecursion(RecursionManager.java:116)
	at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:202)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:797)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:788)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.multiResolve(PsiJavaCodeReferenceElementImpl.java:434)
	at com.intellij.psi.impl.source.PsiJavaCodeReferenceElementImpl.advancedResolve(PsiJavaCodeReferenceElementImpl.java:427)
	at com.intellij.psi.impl.source.PsiClassReferenceType.resolveGenerics(PsiClassReferenceType.java:194)
	at com.intellij.psi.impl.TypeCorrector.correctType(TypeCorrector.java:41)
	at com.intellij.psi.impl.PsiClassImplUtil.correctType(PsiClassImplUtil.java:726)
	at com.intellij.psi.impl.ScopedClassHierarchy.calcImmediateSupersWithCapturing(ScopedClassHierarchy.java:164)
	at com.intellij.psi.impl.ScopedClassHierarchy.lambda$getImmediateSupersWithCapturing$2(ScopedClassHierarchy.java:147)
	at com.intellij.openapi.util.RecursionManager$1.doPreventingRecursion(RecursionManager.java:116)
	at com.intellij.psi.impl.ScopedClassHierarchy.getImmediateSupersWithCapturing(ScopedClassHierarchy.java:147)
	at com.intellij.psi.impl.PsiClassImplUtil.getScopeCorrectedSuperTypes(PsiClassImplUtil.java:731)
	at com.intellij.psi.impl.PsiClassImplUtil.processSuperTypes(PsiClassImplUtil.java:741)
	at com.intellij.psi.impl.PsiClassImplUtil.processDeclarationsInClassNotCached(PsiClassImplUtil.java:715)
	at com.intellij.psi.impl.PsiClassImplUtil.lambda$createMembersMap$2(PsiClassImplUtil.java:395)
	at com.intellij.util.containers.ConcurrentFactoryMap$2.create(ConcurrentFactoryMap.java:181)
	at com.intellij.util.containers.ConcurrentFactoryMap.get(ConcurrentFactoryMap.java:45)
	at com.intellij.psi.impl.PsiClassImplUtil$MembersMap.get(PsiClassImplUtil.java:357)
	at com.intellij.psi.impl.PsiClassImplUtil$MembersMap.access$000(PsiClassImplUtil.java:349)
	at com.intellij.psi.impl.PsiClassImplUtil.processCachedMembersByName(PsiClassImplUtil.java:507)
	at com.intellij.psi.impl.PsiClassImplUtil.processDeclarationsInClass(PsiClassImplUtil.java:465)
	at com.intellij.psi.impl.PsiClassImplUtil.processDeclarationsInClass(PsiClassImplUtil.java:442)
	at com.intellij.psi.impl.source.PsiClassImpl.processDeclarations(PsiClassImpl.java:488)
	at com.intellij.psi.scope.util.PsiScopesUtil.treeWalkUp(PsiScopesUtil.java:69)
	at com.intellij.psi.scope.util.PsiScopesUtil.treeWalkUp(PsiScopesUtil.java:51)
	at com.intellij.psi.scope.util.PsiScopesUtil.resolveAndWalk(PsiScopesUtil.java:218)
	at com.intellij.psi.scope.util.PsiScopesUtil.resolveAndWalk(PsiScopesUtil.java:149)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl.resolveToVariable(PsiReferenceExpressionImpl.java:370)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl.resolve(PsiReferenceExpressionImpl.java:251)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl.access$000(PsiReferenceExpressionImpl.java:46)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl$OurGenericsResolver.resolve(PsiReferenceExpressionImpl.java:190)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl$OurGenericsResolver.resolve(PsiReferenceExpressionImpl.java:178)
	at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:203)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl$OurGenericsResolver$1.elementFinished(PsiReferenceExpressionImpl.java:229)
	at com.intellij.psi.JavaRecursiveElementWalkingVisitor$1.elementFinished(JavaRecursiveElementWalkingVisitor.java:35)
	at com.intellij.psi.JavaRecursiveElementWalkingVisitor$1.elementFinished(JavaRecursiveElementWalkingVisitor.java:32)
	at com.intellij.util.WalkingState.next(WalkingState.java:97)
	at com.intellij.util.WalkingState.walkChildren(WalkingState.java:61)
	at com.intellij.util.WalkingState.elementStarted(WalkingState.java:52)
	at com.intellij.psi.PsiWalkingState.elementStarted(PsiWalkingState.java:79)
	at com.intellij.psi.JavaRecursiveElementWalkingVisitor.visitElement(JavaRecursiveElementWalkingVisitor.java:41)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl$OurGenericsResolver$1.visitReferenceExpression(PsiReferenceExpressionImpl.java:222)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl.accept(PsiReferenceExpressionImpl.java:818)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl$OurGenericsResolver.resolveAllQualifiers(PsiReferenceExpressionImpl.java:212)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl$OurGenericsResolver.resolve(PsiReferenceExpressionImpl.java:189)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl$OurGenericsResolver.resolve(PsiReferenceExpressionImpl.java:178)
	at com.intellij.psi.impl.source.resolve.ResolveCache.lambda$resolveWithCaching$1(ResolveCache.java:203)
	at com.intellij.openapi.util.RecursionManager$1.doPreventingRecursion(RecursionManager.java:116)
	at com.intellij.psi.impl.source.resolve.ResolveCache.resolveWithCaching(ResolveCache.java:202)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:797)
	at com.intellij.psi.impl.PsiImplUtil.multiResolveImpl(PsiImplUtil.java:788)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl.multiResolve(PsiReferenceExpressionImpl.java:377)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl.advancedResolve(PsiReferenceExpressionImpl.java:539)
	at com.intellij.psi.impl.source.tree.java.PsiReferenceExpressionImpl.resolve(PsiReferenceExpressionImpl.java:839)
	at com.demonwav.mcdev.i18n.translations.identifiers.ReferenceTranslationIdentifier.identify(ReferenceTranslationIdentifier.kt:25)
	at com.demonwav.mcdev.i18n.translations.identifiers.ReferenceTranslationIdentifier.identify(ReferenceTranslationIdentifier.kt:23)
	at com.demonwav.mcdev.i18n.translations.identifiers.TranslationIdentifier.identifyUnsafe(TranslationIdentifier.kt:29)
	at com.demonwav.mcdev.i18n.translations.Translation$Companion.fold(Translation.kt:109)
	at com.demonwav.mcdev.i18n.I18nFoldingBuilder.buildFoldRegions(I18nFoldingBuilder.kt:20)
	at com.intellij.lang.folding.LanguageFolding.buildFoldingDescriptors(LanguageFolding.java:75)
	at com.intellij.lang.folding.CompositeFoldingBuilder.buildFoldRegions(CompositeFoldingBuilder.java:42)
	at com.intellij.lang.folding.LanguageFolding.buildFoldingDescriptors(LanguageFolding.java:75)
	at com.intellij.codeInsight.folding.impl.FoldingUpdate.getFoldingsFor(FoldingUpdate.java:246)
	at com.intellij.codeInsight.folding.impl.FoldingUpdate.getFoldingsFor(FoldingUpdate.java:226)
	at com.intellij.codeInsight.folding.impl.CodeFoldingManagerImpl.buildInitialFoldings(CodeFoldingManagerImpl.java:192)
	at com.intellij.openapi.fileEditor.impl.text.PsiAwareTextEditorImpl.loadEditorInBackground(PsiAwareTextEditorImpl.java:50)
	at com.intellij.openapi.fileEditor.impl.text.AsyncEditorLoader.lambda$tryLoadEditor$4(AsyncEditorLoader.java:163)
	at com.intellij.psi.impl.PsiDocumentManagerBase.lambda$commitAndRunReadAction$4(PsiDocumentManagerBase.java:507)
	at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:974)
	at com.intellij.openapi.application.ReadAction.compute(ReadAction.java:57)
	at com.intellij.psi.impl.PsiDocumentManagerBase.commitAndRunReadAction(PsiDocumentManagerBase.java:505)
	at com.intellij.openapi.fileEditor.impl.text.AsyncEditorLoader.lambda$tryLoadEditor$5(AsyncEditorLoader.java:166)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.lambda$runWithWriteActionPriority$1(ProgressIndicatorUtils.java:121)
	at com.intellij.openapi.progress.impl.CoreProgressManager.lambda$runProcess$2(CoreProgressManager.java:164)
	at com.intellij.openapi.progress.impl.CoreProgressManager.registerIndicatorAndRun(CoreProgressManager.java:586)
	at com.intellij.openapi.progress.impl.CoreProgressManager.executeProcessUnderProgress(CoreProgressManager.java:532)
	at com.intellij.openapi.progress.impl.ProgressManagerImpl.executeProcessUnderProgress(ProgressManagerImpl.java:86)
	at com.intellij.openapi.progress.impl.CoreProgressManager.runProcess(CoreProgressManager.java:151)
	at com.intellij.openapi.progress.util.ProgressIndicatorUtils.runWithWriteActionPriority(ProgressIndicatorUtils.java:110)
	at com.intellij.openapi.fileEditor.impl.text.AsyncEditorLoader.tryLoadEditor(AsyncEditorLoader.java:165)
	at com.intellij.openapi.fileEditor.impl.text.AsyncEditorLoader.lambda$scheduleLoading$2(AsyncEditorLoader.java:122)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at com.intellij.util.concurrency.BoundedTaskExecutor.doRun(BoundedTaskExecutor.java:220)
	at com.intellij.util.concurrency.BoundedTaskExecutor.access$100(BoundedTaskExecutor.java:26)
	at com.intellij.util.concurrency.BoundedTaskExecutor$2.lambda$run$0(BoundedTaskExecutor.java:198)
	at com.intellij.util.ConcurrencyUtil.runUnderThreadName(ConcurrencyUtil.java:224)
	at com.intellij.util.concurrency.BoundedTaskExecutor$2.run(BoundedTaskExecutor.java:194)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
```

```
Outdated stub in index: jar:///Users/mrds/awsworkspace/MDSSReleaseWeek39/src/MyDaySubsystemService/build/lib/MyDaySubsystemService-1.0.jar!/com/amazon/mydaysubsystem/activity/LocationActivity.class indexed at 1571851930000 with document size -1, doc=null, docSaved=true, wasIndexedAlready=true, queried at 1571851930000
indexed lengths={chars=-1, bytes=3606}
doc length=-1
file length=0
cached PSI class com.intellij.psi.impl.compiled.ClsFileImpl
projects with file: 1
```

[FabricMC](https://fabricmc.net) is becoming increasingly popular for modding 1.14 and above.

I hereby suggest adding support similar to all other platforms supported. The tools required can be found on the [FabricMC Github](https://github.com/FabricMC) and an example mod can be found at [FabricMC/fabric-example-mod](https://github.com/FabricMC/fabric-example-mod).
