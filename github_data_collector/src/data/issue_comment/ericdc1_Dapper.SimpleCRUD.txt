I've added 2 methods in SimpleCRUD to override SqlMapper.AddTypeHandler methods.
This override will store in a list all types managed with handlers in Dapper.
I've also changed GetScaffoldableProperties method to get properties with handlers too.
This will fix the issue #217 .
The member Geometrys of type Npgsql.LegacyPostgis.PostgisGeometry cannot be used as a parameter value.
How to deal with postgresql geometry?can show demo thanks
New Feature:
support oracle dbms
"Dapper.SimpleCRUD.SetDialect(Dapper.SimpleCRUD.Dialect.MySQL)"
How do I use it when a project with multiple types of databases? (sqlserver,mysql) 
these are never being called on the simpleCRUD calls.

is this by design?

```
 public class LongArrayHandler: SqlMapper.ITypeHandler
    {
        public object Parse(Type destinationType, object value)
        {
            return JsonConvert.DeserializeObject<long[]>(value.ToString());
        }

        public void SetValue(IDbDataParameter parameter, object value)
        {
            parameter.Value = (value == null)
                ? (object)DBNull.Value
                : JsonConvert.SerializeObject(value);
            parameter.DbType = DbType.String;
        }
    }

```
Is batch insertion implemented?

The method GetScaffoldableProperties doesn't correctly pull the right type when figuring out what properties to update.

For example, if I have 

`ClassTwo : ClassOne<ClassTwo>` 

it only pulls the properties from ClassOne and not ClassTwo. I can try and add more info if needed
 optimistic lock like this

public class User
{
    public int Id { get; set; }
    public string Name { get; set; }
    public int Age { get; set; }
   [**OptimisticLock(IntType)]//or [OptimisticLock(TimesampType)]
    public int Version{ get; set; }//int or timesamp**
}

connection.Update(entity);

SQL
int version
Update [Users] Set (strFirstName=@FirstName, LastName=@LastName, Age=@Age) **,Version=@Version+1** Where ID = @ID  **AND Version=@Version**

timesamp version
Update [Users]
Set (strFirstName=@FirstName, LastName=@LastName, Age=@Age)
Where ID = @ID  **AND Version=@Version**

if return rowcount=0
throw the optimistic lock exception 
New Feature:
Allow to Pass Interface Type to Insert,InsertAsync,Update & UpdateAsync.
This could be useful when you have to Insert/Update records of many table using the same Interface, 
Eg: changing the name by using the IName interface.
Update<T> & Insert<T> will then use the instance base type to identify the good Query/Columns

Fixes
UpdateAsync signature is now fully async

Other (Unit Tests):
Added 4 Tests for Methods changes
Put SQL Instance Name in string constant to make it easier to change when local instance is not.\sqlexpress
https://stackoverflow.com/questions/2521592/difference-between-ienumerable-count-and-length.
