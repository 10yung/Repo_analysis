个人觉得作者构建的demo, maven项目依赖过于复杂，对新手非常不友好。demo的主要目的是通过简单的例子让然快速入手，有一个直观的理解。还有在order服务中try阶段手动抛出异常，导致分布式事务一致性失败。

Terminator的实现中线程安全，也没有全局变量，是否可以使用静态方法执行invoke?
现在只有使用文档,对于新用户来说学习成本太高了. 能否出些设计文档. 至少核心设计写一下

springData那种服务调用方式（直接通过RestTemplate）的话，怎么传递TransactionContext，现在在tcc服务方的TransactionContext参数为空，主服务的事务和调用服务的事务不在一起，现有的框架能支持这种吗？
![image](https://user-images.githubusercontent.com/30400766/69217668-20271700-0baa-11ea-8afc-aa56f118dc2f.png)

confirm红包执行失败 定时没有发起补偿 是不是哪少配置了
以下为粗略读了一便源码后的个人理解，伪代码
```
public interface BizService {
    boolean tryIt();
    boolean confirm();
    boolean cancel();
}
```
```
public class Manager {
    private List<BizService> bizList = new ArrayList<BizService>();
    public void invoke() {
        boolean result = true;
        for (BizService service : bizList) {
            result = result && service.tryIt();
        }
        if (result) {
            for (BizService service : bizList) {
                boolean res = service.confirm();
                if (!res) {
                    // 由recoverJob完成
                }
            }
        } else {
            for (BizService service : bizList) {
                service.cancel();
            }
        }
    }
}
```
其中的BizService为需要事务管理的业务实现， Manager为整个事务的协调者，在本框架中为root吧  
建议：是否可以写个实现原理的文章放在这里
好让想了解详细实现过程的人看到
原先该项目只支持到2.5.x，如果现在将dubbo的代理之类的路径全部替换成apache.dubbo，是不是就能够支持dubbo2.7.x版本？