- Added tests for UIColorInputError. 
- Improved functionality for argb2rgba converting. 
- Removed .missingHashMarkAsPrefix from UIColorInputError enum. 
- Updated readme.

`No such module 'UIColor_Hex_Swift'`
How can i fix this problem?

<img width="266" alt="schermata 2018-02-08 alle 22 52 38" src="https://user-images.githubusercontent.com/22498435/36000317-d2e0f5ec-0d22-11e8-8d38-ee3fbf16bb19.png">

<img width="703" alt="schermata 2018-02-08 alle 22 53 27" src="https://user-images.githubusercontent.com/22498435/36000354-ef2f5cac-0d22-11e8-89ee-8b6f4a31e4f3.png">

not sure how efficient these are yet since they use advance o(n) parsing for likely utf8 single byte strings

you'd call this method in the else not hex clause

func rgbaStringToVals(rgba: String) -> (r: CGFloat,g: CGFloat,b: CGFloat,a: CGFloat) {
    var red   = CGFloat(0.0)
    var green = CGFloat(0.0)
    var blue  = CGFloat(0.0)
    var alpha = CGFloat(1.0)

```
if rgba.hasPrefix("rgba(") {
    let sInd = advance(rgba.startIndex,5)
    let eInd = advance(rgba.startIndex,count(rgba)-1)
    var num = rgba[sInd..<eInd]
    var loc = num.componentsSeparatedByString(",")
    if count(loc) < 4 {
        println("unable to find 4 color values from string \(rgba) default color used rgba(0,0,0,1)")
    }
    else {
        red = CGFloat(loc[0].toInt()!)/CGFloat(255.0)
        green = CGFloat(loc[1].toInt()!)/CGFloat(255.0)
        blue = CGFloat(loc[2].toInt()!)/CGFloat(255.0)
        alpha = CGFloat(loc[3].toInt()!)/CGFloat(255.0)
    }
}
else if rgba.hasPrefix("rgb(") {
    let sInd = advance(rgba.startIndex,4)
    let eInd = advance(rgba.startIndex,count(rgba)-1)
    var num = rgba[sInd..<eInd]
    var loc = num.componentsSeparatedByString(",")
    if count(loc) < 3 {
        println("unable to find 3 color values from string \(rgba) default color used rgba(0,0,0,1)")
    }
    else {
        red = CGFloat(loc[0].toInt()!)/CGFloat(255.0)
        green = CGFloat(loc[1].toInt()!)/CGFloat(255.0)
        blue = CGFloat(loc[2].toInt()!)/CGFloat(255.0)
    }

}
else {
    println("String \(rgba)does not have #hex or rgb() or rgba() format default color used rgba(0,0,0,1)")
}
return (red,green,blue,alpha)
```

}
