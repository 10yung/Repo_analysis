version 6.0.5
The --port argument is ignored:
```
etserver --port 3022 -v 9 --logtostdout
[INFO 2020-01-17 20:40:29,290 etserver-main TerminalServerMain.cpp:139] In child, about to start server.
[INFO 2020-01-17 20:40:29,291 etserver-main TcpSocketHandler.cpp:202] Listening on 0.0.0.0:2022/2/1/6
[INFO 2020-01-17 20:40:29,291 etserver-main TcpSocketHandler.cpp:202] Listening on 0.0.0.0:2022/10/1/6
[FATAL 2020-01-17 20:40:29,291 etserver-main PipeSocketHandler.cpp:98] Error: (98): Address already in use
[WARNING 2020-01-17 20:40:29,291 etserver-main PipeSocketHandler.cpp:98] Aborting application. Reason: Fatal log at [/tmp/et-20200117-87840-19sobro/EternalTerminal-et-v6.0.5/src/base/PipeSocketHandler.cpp:98]
[1]    89552 abort      etserver --port 3022 -v 9 --logtostdout
```
I keep getting "Error starting ET process through ssh, please make sure your ssh works first". 
And of course ssh and mosh both work between the same client/server. Anyone know what might be wrong?
ET It works fine on my BeagleBoneBlack running Ubuntu.
ET fails with the above message on all 3 of my Tinkerboards all running the same Ubuntu Bionic as the BeagleBoneBlack.
All 4 systems are using the same ssh config files and the same et.cfg file.
Any suggestions?

thanks in advance
iomari

Sometimes the remote server changes its address, and cannot be addressed by a domain name.
Would love to have a way to change the server IP address/name on an already running session(s). Like:
`et --switch-sessions 192.168.1.2:rpi4.local` (in `from:to` format).

I just found the et project and wanted to try it out. I installed it via the AUR packages for [server][aur_server] and [client][aur_client]. I didn't setup anything and just startet the server part on my server, opened the 2022 port in iptables and tried to connect. Sadly it doesn't work and I don't know what I'm doing wrong. enabling verbose output doesn't show me more ether.

```
$ ssh kaede                                                                                                                                                                           
Last login: Mon Dec  9 10:47:07 2019 from 77.247.82.194
Welcome to fish, the friendly interactive shell
xengi@kaede ~> pacman -Q eternalterminal-server
eternalterminal-server 6.0.4-1
xengi@kaede ~> sudo iptables-save | grep 2022
-A TCP -p tcp -m tcp --dport 2022 -m comment --comment "allow et" -j ACCEPT
xengi@kaede ~> sudo systemctl status et
● et.service - Eternal Terminal
     Loaded: loaded (/usr/lib/systemd/system/et.service; disabled; vendor preset: disabled)
     Active: active (running) since Mon 2019-12-09 10:43:40 CET; 1min 57s ago
    Process: 299060 ExecStart=/usr/bin/etserver --daemon --cfgfile=/etc/et.cfg (code=exited, status=0/SUCCESS)
   Main PID: 299062 (etserver)
      Tasks: 9 (limit: 38250)
     Memory: 1.3M
     CGroup: /system.slice/et.service
             └─299062 /usr/bin/etserver --daemon --cfgfile=/etc/et.cfg

Dec 09 10:43:40 kaede systemd[1]: Starting Eternal Terminal...
Dec 09 10:43:40 kaede systemd[1]: et.service: Supervising process 299062 which is not our child. We'll most likely not notice when it exits.
Dec 09 10:43:40 kaede systemd[1]: Started Eternal Terminal.
xengi@kaede ~> exit
Shared connection to 555.115.13.162 closed.
$ ssh kaede.mydomain.com
ssh: connect to host kaede.mydomain.com port 22: Network is unreachable
$ pacman -Q eternalterminal-client                                                                                                                                                    
eternalterminal-client 6.0.4-1
$ et  --verbose 0 kaede
Could not reach the ET server: kaede:2022
$ et  --verbose 9 kaede.mydomain.com
Error starting ET process through ssh, please make sure your ssh works first
```

```
# ~/.ssh/config
Include ~/.ssh/config.d/*.conf
```

```
# ~/.ssh/config.d/20_wired.conf
Host kaede
    #HostName kaede.mydomain.com
    HostName 555.115.13.162
    Port 10022
    Include ~/.ssh/config.d/xengi.identity
```

```
# ~/.ssh/config.d/xengi.identity
User xengi
IdentitiesOnly yes
IdentityFile ~/.ssh/id_ed25519
IdentityFile ~/.ssh/id_rsa
```

[aur_client]: https://aur.archlinux.org/packages/eternalterminal-client/
[aur_server]: https://aur.archlinux.org/packages/eternalterminal-server/
Hi. 

Having a quite dynamic list of servers makes me almost impossible to use et since it requires a record in ssh config for every server with non-standard ssh-port. 

Could you, please, make a cli-switch for that to avoid these edits?

I'd prefer to set such port using `:` after the hostname and leave `-p` for non-standard et port which is less often, I guess.
Hi, now that you've merged the two PRs that I submitted, I was wondering if you could tag a new release and call it v6.0.5?

Then I can contact the FreeBSD package maintainers about updating the package to include the rc.d service file that my PR added, as well as for them to include the default config in the package also.
Add Raspbian build instructions
- install dependencies: `python3-protobuf protobuf-compiler`
- correct the`/etc/systemd/system/et.service` file to point to `/usr/local/bin/etserver`

## Message of the day
`/etc/motd` doesn't show when connecting with EternalTerminal. Is this intentional/can I re-enable it?
By default Eternal Terminal server will bind to all interfaces.

In my case that is not desirable and I would like to limit it to listen only on a specific network interface / selection of IPv4 and IPv6 addresses.

Most server software will allow you to configure this, such as for example OpenSSH.
When I install Eternal Terminal on FreeBSD from the official package repository with `pkg install eternalterminal`, I notice that there is no rc.d service file included.

```bash
pkg info -l eternalterminal
```

```text
eternalterminal-5.1.9_4:
	/usr/local/bin/et
	/usr/local/bin/etserver
	/usr/local/bin/etterminal
	/usr/local/bin/htm
	/usr/local/bin/htmd
	/usr/local/share/licenses/eternalterminal-5.1.9_4/APACHE20
	/usr/local/share/licenses/eternalterminal-5.1.9_4/LICENSE
	/usr/local/share/licenses/eternalterminal-5.1.9_4/catalog.mk
```

On both Linux (systemd) and macOS (launchd), etserver is run as a service so I am assuming that it should be run as a service on FreeBSD as well.