
First of all, thank you fort his incredible library.
There's a very small bug which displays the third (the first and the second work fine) label (in your example it's the word "IT") always in white, at the first launch.
After switching the tabs, it displays correctly in the color set in the Inspector View.

Hope to see the bug solved soon!
Again, thank you so much!
Perhaps there could be a "noItemSelected"-ish setting, that initializes the view without any item selected?
I'm getting the following error:

Overlapping accesses to 'colors', but modification requires exclusive access; consider copying to a local variable
Hello and thanks for the great work you've done on the project. I'm facing an issue where the delegate method is not being called when the selected index is changed via a swipe. I'm monitoring via the following delegate method `segmentedControl(_ segmentedControl: SJFluidSegmentedControl, didChangeFromSegmentAtIndex fromIndex: Int, toSegmentAtIndex toIndex:Int)` and it appears that if the user scrolls quickly to a new segment index this is not called as the `toIndex` is not updated.

Is there another delegate function I should be monitoring for this or is it unexpected behavior? I really like the project here and will be using it in my app if I can resolve this.

Thanks for taking the time to read/respond.
When using in Swift4,
the App is showing weird Curves - but not the expected ones as in sample video:

<img width="376" alt="fluid" src="https://user-images.githubusercontent.com/1550805/34852570-9f782544-f72f-11e7-9511-c5f9dc514432.png">

This commit fixes the build errors associated with Swift 4.
Add supported to Swift4
I've been reading inside the code and was wondering if there was a way to change the shadow colour to another colour aside from that of the segment
Hi,

I noticed something strange with the segment control I created programmatially with SJFluidSegmentedControl. The third segment appears faded/lighter in color than the 2nd segment. Please see screenshot below. 

![screen shot 2017-09-07 at 12 11 07 pm](https://user-images.githubusercontent.com/16856855/30173440-ab8fd8b8-93c5-11e7-91df-eac6c007e366.png)

When I select a different segment (2nd or 3rd) and then go back to the first segment, the third segment is no longer faded. I was trying to troubleshoot this and noticed changing the transition style from .fade (default) to .none will cause the 2nd segment to also look faded and selecting different segments will not correct the problem. But how can I correct this issue so the 3rd segment shows up correctly when the view is loaded?

![screen shot 2017-09-07 at 12 15 35 pm](https://user-images.githubusercontent.com/16856855/30173624-4ef6a568-93c6-11e7-9744-02298abec406.png)

Here is my code:
```
//
//  ViewController.swift
//  TestSJFluidSegmentedControl
//
//  Created by Jack Ngai on 9/7/17.
//  Copyright Â© 2017 Jack Ngai. All rights reserved.
//

import UIKit
import SJFluidSegmentedControl


class ViewController: UIViewController, SJFluidSegmentedControlDelegate, SJFluidSegmentedControlDataSource {
    
    lazy var mySegmentControl:SJFluidSegmentedControl = {
        [unowned self] in
        let segmentControl = SJFluidSegmentedControl(frame: CGRect(x: 50, y: 100, width: 300, height: 50))
        segmentControl.dataSource = self
        segmentControl.delegate = self
        segmentControl.backgroundColor = UIColor(red:0.85, green:0.85, blue:0.85, alpha:0.2)
        segmentControl.textColor = UIColor.red
        segmentControl.transitionStyle = .fade // Changing to .none will make all other segments look faded, .slide has is the same as .fade
        segmentControl.textFont = UIFont(name: "Montserrat-Regular", size: 12) ?? UIFont.systemFont(ofSize: 12)
        segmentControl.cornerRadius = 10
        segmentControl.shadowsEnabled = false
        segmentControl.shapeStyle = .roundedRect
        return segmentControl
    }()
    

    override func viewDidLoad() {
        super.viewDidLoad()
        // Do any additional setup after loading the view, typically from a nib.
        
        view.addSubview(mySegmentControl)
        //mySegmentControl.translatesAutoresizingMaskIntoConstraints = false
        
    }

    override func didReceiveMemoryWarning() {
        super.didReceiveMemoryWarning()
        // Dispose of any resources that can be recreated.
    }


    func numberOfSegmentsInSegmentedControl(_ segmentedControl: SJFluidSegmentedControl) -> Int {
        return 3
    }
    
    func segmentedControl(_ segmentedControl: SJFluidSegmentedControl, titleForSegmentAtIndex index: Int) -> String? {
        switch index{
        case 0:
            return "THIS WEEK"
        case 1:
            return "THIS MONTH"
        case 2:
            return "THIS YEAR"
        default:
            return ""
        }
    }
    
    func segmentedControl(_ segmentedControl: SJFluidSegmentedControl, gradientColorsForSelectedSegmentAtIndex index: Int) -> [UIColor] {
        return [UIColor.red]
    }
    
}
```
Thanks for taking the time to read my question.
