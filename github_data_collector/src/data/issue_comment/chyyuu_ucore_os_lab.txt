The missing '!' resulted in the problem that make grade was not able to get full mark in lab5
在kdebug.c 的print_stackframe(void) 方法中,第6行有这样一段注释描述:`// (3.2) (uint32_t)calling arguments [0..4] = the contents in address (uint32_t)ebp +2 [0..4]`
但是实验指导书中, 所显示的args数目是4个。所以这里的 `[0..4]`应该都改为`[0..3]`
When running ```make qemu``` for lab 3, it fails with the following error

```
+++ switch to  user  mode +++
page fault at 0xc0100210: U/R [protection fault].
not valid addr c0100210, and can not find it in vma
trapframe at 0xc0122fb4
  edi  0x0000807c
  esi  0x00010074
  ebp  0xc0122fa8
  oesp 0xc0122fd4
  ebx  0x00010074
  edx  0xc0108f27
  ecx  0x00000000
  eax  0x0000001e
  ds   0x----0023
  es   0x----0023
  fs   0x----0023
  gs   0x----0023
  trap 0x0000000e Page Fault
  err  0x00000005
  eip  0xc0100210
  cs   0x----001b
  flag 0x00003286 PF,SF,IF,IOPL=3
  esp  0x0000003f
  ss   0x----0023
kernel panic at kern/trap/trap.c:209:
    handle pgfault failed. invalid parameter
```

This happens when ```lab1_switch_test()``` is invoked. I noticed that in lab answers ```lab1_switch_test``` is commented. I wonder why switching between user/kernel mode cause error in lab 3.

BTW, in order to make sure that the problem is not caused by my own lab 3 code, I completed the kernel/user mode switch part in lab 2 answer code. The same error occurs.
I've tried running ```make grade``` for lab 1 - lab 3 (**the lab codes_answers, not my own code**), and they all fails with Error 1.

Platform: macOs Catalina

- lab1_result
```
Check Output:            (1.0s)
  -check ring 0:                             no $qemu_out
  -check switch to ring 3:                   no $qemu_out
  -check switch to ring 0:                   no $qemu_out
  -check ticks:                              no $qemu_out
Total Score: 0/40
make: *** [grade] Error 1
```

- lab2_result
```
Check PMM:               (1.0s)
  -check pmm:                                no $qemu_out
  -check page table:                         no $qemu_out
  -check ticks:                              no $qemu_out
Total Score: 0/50
make: *** [grade] Error 1
```

- lab3_result
```
Check SWAP:              (1.0s)
  -check pmm:                                no $qemu_out
  -check page table:                         no $qemu_out
  -check vmm:                                no $qemu_out
  -check swap page fault:                    no $qemu_out
  -check ticks:                              no $qemu_out
Total Score: 0/45
make: *** [grade] Error 1
```
Lab0保护模式和分段机制
最后一段
```比如，你可以使用RPL=3的段描述符来确保给定的操作所使用的段可以在用户模式中访问。```
应该是DPL=3？
[kern/mm/default_pmm.c](https://github.com/chyyuu/ucore_os_lab/blob/master/labcodes/lab2/kern/mm/default_pmm.c) 中：

> // LAB2 EXERCISE 1: YOUR CODE
> // you should rewrite functions: `default_init`, `default_init_memmap`, `default_alloc_pages`, `default_free_pages`.

但是这四个函数已经被实现了
陈渝老师您好 ，为了这个项目 我花了一年学c/c++和操作系统原理，对汇编不太懂，请问这个项目用的是什么汇编?
arm的还是x86的呢？ 如果是x86则是intel的还是at&t的？我现在刚学完8086的，对这些不太懂， 我想知道接下来怎么学
* Replace BBL by OpenSBI
* Fix ecall SYS_EXEC in S-Mode (due to BBL -> OpenSBI)
* Update README
* Fix `sfence.vm` -> `sfence.vma`
* Switch to riscv64 toolchain
* Replace BBL by OpenSBI
* Fix ecall SYS_EXEC in S-Mode (due to BBL -> OpenSBI)
* Add Travis CI ([build pass](https://travis-ci.org/wangrunji0408/ucore_os_lab/builds/569356612))
* Update README
如果你的机型是64位，但是无法新建64位，都是32位的，可以尝试如下：
1：开机重启，按f12.
2：进入BIOS中，高级选项，选择virtualization，设定其为enable。
我刚开始没找到virtualization，然后我直接搜索的，如果可以直接搜索，会更方便。