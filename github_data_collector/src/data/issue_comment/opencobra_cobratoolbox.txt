When using `printRxnFormula`, the function prints wrong genes without replacing and/or operators. Unfortunately, `testPrintRxnFormula.m `bypasses this bug because of the use of `model.grRules` instead of `model.rules`. 

You can reproduce the problem by using the code below _(the first reaction is chosen arbitrarily)_ :
```
>> load('ecoli_core_model.mat');
>> model = rmfield(model, 'grRules'); % removed to use model.rules;

>> printRxnFormula(model, 'rxnAbbrList', model.rxns(1), 'gprFlag', true);
ACALD acald[c] + coa[c] + nad[c]  <=> accoa[c] + h[c] + nadh[c]  (b1817) | (b1773)

>> model.rules{1}
ans =  '(x(6)) | (x(35))'

>> model.genes([6 35])'
ans =  {'b0351'}    {'b1241'}

```
I believe the problem is caused by the lines `190-192`, that is:

```
rule = regexprep(model.rules{rxnID},'|','or');
rule = regexprep(rule,'&','and');
rule = regexprep(rule,'x\((?<id>[0-9]+)\)','${model.genes{num2str($1)}}');
```

Escapes are required for the expressions in the first two lines, so, changing `|` to`\|`, and `&` to `\&` solves this problem in my case. For the wrong gene name output, since  `num2str()` converts numeric values to decimal representations, the function returns `model.genes{49}` instead of `model.genes{1}`.

```
>> model.genes{1}
ans =  'b0008'

>> model.genes{'1'}
ans =  'b1723'

>> model.genes{49}
ans =  'b1723
```
Using `str2num` instead of `num2str` fixes the problem. 

To sum up, possible solution is to replace the lines `190-192` with the following:
```
rule = regexprep(model.rules{rxnID},'\|','or');
rule = regexprep(rule,'\&','and');
rule = regexprep(rule,'x\((?<id>[0-9]+)\)','${model.genes{str2num($1)}}');
```

Note that the same behavior exists in the `proteinFlag` section as well, lines `198-200`. It is better to check all the uses of `num2str()` when indexing, in the whole toolbox. 

Additionally, I'd like to mention that I am not very familiar with the uses of regular expression functions, my solutions might not be the correct solutions.

Hope this helps,
Handan

- [X] Tried to solve the issue on my own
- [X] Retried to run my code with the latest version of The COBRA Toolbox
- [X] Checked that a similar issue has not already been opened


fix problem with windows

**I hereby confirm that I have:**

- [X] Tested my code on my own machine
- [X] Followed the guidelines in the [Contributing Guide](https://opencobra.github.io/cobratoolbox/docs/contributing.html)
- [X] Selected `develop` as a target branch (top left drop-down menu)

*(Note: You may replace [ ] with [X] to check the box)*

In previous versions of the cobratoolbox I could sample the e_coli_core network using the master-branch of the cobratoolbox.
The model correctly had 23 dimensions after separating out the degenerate dimensions.

After grabbing the latest commit in all submodules and on the master branch however, the
cobratoolbox finds too many degenerate equations and the e_coli_core model is left with just 2 non-degenerate dimensions.

I can fix my Problem by using an older version of the repository I had on a different computer,
I just thought I'd let you know.

**I hereby confirm that I have:**

- [x] Tried to solve the issue on my own
- [x] Retried to run my code with the latest version of The COBRA Toolbox
- [x] Checked that a similar issue has not already been opened

A new attempt since the bug remains, this time via devTools. If the input file of lrsOutputReadRay is an empty file, the function gets stuck in an infinite loop. Personally I have never been able to run testAll successfully because of this. A quick fix where an empty input file throws an error.

**I hereby confirm that I have:**

- [x] Tested my code on my own machine
- [x] Followed the guidelines in the [Contributing Guide](https://opencobra.github.io/cobratoolbox/docs/contributing.html)
- [x] Selected `develop` as a target branch (top left drop-down menu)

*(Note: You may replace [ ] with [X] to check the box)*

Hi
I have ran a microbiome modeling data with 95 samples and about 200 taxons.
But it's about 3weeks that is performing FVA with CPLEX 128 (fvatype=1) on 1 sample without any changing. Matlab shows Busy status and CPU is working too.
I checked fvaCt and it shows structures for just 18 samples.
I deleted that sample and ran again by another Matlab env but it happened again on another sample.
Is it OK? Should this analyse takes long about 3weeks on a sample for FVA?
@almut-heinken @rmtfleming 

**I hereby confirm that I have:**

- [X] Tried to solve the issue on my own
- [X] Retried to run my code with the latest version of The COBRA Toolbox
- [X] Checked that a similar issue has not already been opened

*(Note: You may replace [ ] with [X] to check the box)*

*Please include a short description of enhancement here*

**I hereby confirm that I have:**

- [X ] Tested my code on my own machine
- [ X] Followed the guidelines in the [Contributing Guide](https://opencobra.github.io/cobratoolbox/docs/contributing.html)
- [ X] Selected `develop` as a target branch (top left drop-down menu)

*(Note: You may replace [ ] with [X] to check the box)*

cc: @chaitrasarathy
*I am trying to use the random sampling method of cobratoolbox to obtain all possible flux distribution for the maximal growth rate condition. I try to fulfill this goal by using sampleCbModel in cobratoolbox. However, I encountered the problem of "x0 is not interior". I have searched a lot similar issues online, but no solution works for me. I will really appreciate if anyone can help to fix this problem!

Here is how I formulate my optimization problem:
Step1: using normal FBA to obtain the maiximal growth rate under given constraint settings for substrates
Step2: Using the same constraints settings in Step1, in addition, fix the growth rate as the maximal growth rate obtained from Step1, call sampleCbModel function with parameters as below:
    options.nStepsPerPoint = 200;
    options.nPointsReturned = 10000;  %% since my reactions number in total > 8000
    options.toRound = 1;
    [ModelSampling, SampleResults] = sampleCbModel(Cobra_model, [], [], options);

Error message:
Checking for width 0 facets...
Currently (P.A, P.b) are in 10734 dimensions
Checking for width 0 facets...
Starting parallel pool (parpool) using the 'local' profile ... connected to 4 workers.
Found 4627 degenerate reactions, adding them to the equality subspace.
> In preprocess (line 169)
  In chrrSampler (line 110)
  In sampleCbModel (line 162)
  In runFBA_urea_obj_CBRS_Growth (line 112)
  In normalizeAndRunFBA_consMass_Cobra (line 47)
  In runSimulation_consMass_Cobra (line 67)
  In Food_maxGrowth_Cobra (line 87)
  In getDietGrowthRate (line 28)
  In DietRandomSampling (line 106) 
Warning: Rank deficient, rank = 7988, tol =  7.610415e-06. 
Now in 2739 dimensions after restricting
Removed 12210 zero rows
Preconditioning A with gmscale
Rounding...
Error using mve_solver_cobra (line 29)
x0 not interior

Error in mve_run_cobra (line 32)
    [x,E2,converged] = mve_solver_cobra(A,b,x0,maxiter,tol2,reg); %Ben

Error in preprocess (line 250)
            [T_shift, Tmve,converged] = mve_run_cobra(P.A,P.b, x0,reg);


Error in chrrSampler (line 110)
    [roundedPolytope] = preprocess(P,options);

Error in sampleCbModel (line 162)
        [samples, modelSampling] = chrrSampler(model, nStepsPerPoint, nPointsReturned, toRound, modelSampling, useFastFVA,optPercentage);

I have checked both lower bound/upper bound of the model, all of them are within range of [-1000,1000], no Inf/-Inf

Therefore, I was really confused why this happens.
I will really appreciate if you can give any suggestions to fix this.

By the way, the solver during above calculation is "Gurobi"*

**I hereby confirm that I have:**

- X Tried to solve the issue on my own
- X Retried to run my code with the latest version of The COBRA Toolbox
- X Checked that a similar issue has not already been opened

*(Note: You may replace [ ] with [X] to check the box)*

https://prince.lcsb.uni.lu/jenkins/job/COBRAToolbox-pr-auto-macOS/MATLAB_VER=R2018b,label=lcsbs-mac-pro/1493/consoleFull

testQFCA.m is only reliably compatible with gurobi and needs to be bypassed if gurobi is not present
1.  I  tried to remove the genes from the model and want to also remove the rxn related from the model if the grrule is empty. I am using the function `removeGenesFromMode`.

I tested the function using `testModelManipulation`
```
%Test removal of a gene
modelMod1 = removeGenesFromModel(modelMod,'G1');
```
The code above is in the line 458. After that, I run this one:
`modelMod1 = removeGenesFromModel(modelMod,'b3553','keepReactions',0);`
 rxn `2DGULRx` has the grRule `b3553`, but in the modelMod1, even though the grRule has changed to empty, but the rxn is still there. 

2. `originalGPRs, deletedReaction `optional output for this function may not be assigned during the function


**I hereby confirm that I have:**

- [X] Tried to solve the issue on my own
- [X] Retried to run my code with the latest version of The COBRA Toolbox
- [X] Checked that a similar issue has not already been opened

