
`FdChannel::FdChannel(EventLoop* l, evpp_socket_t f, bool r, bool w)
    : loop_(l), attached_(false), event_(nullptr), fd_(f) {
    DLOG_TRACE << "fd=" << fd_;
    assert(fd_ > 0);
    events_ = (r ? kReadable : 0) | (w ? kWritable : 0);
    event_ = new event;
    memset(event_, 0, sizeof(struct event));
}`

The socket returns fd = 0 in this code. My program crashes. 
fd = 0 this is normal.
Connector::~Connector() {
    DLOG_TRACE;
    assert(loop_->IsInLoopThread());
    if (status_ == kDNSResolving) {
        assert(!chan_.get());
        assert(!dns_resolver_.get());
        assert(!timer_.get());
    } else if (!IsConnected()) {
        // A connected tcp-connection's sockfd has been transfered to TCPConn.
        // But the sockfd of unconnected tcp-connections need to be closed by myself.
        _DLOG_TRACE << "close(" << chan_->fd() << ")";
        _assert(own_fd_);
        assert(chan_->fd() == fd_);__
        EVUTIL_CLOSESOCKET(fd_);
        fd_ = INVALID_SOCKET;
    }

    assert(fd_ < 0);
    chan_.reset();
}

上面_DLOG_TRACE << "close(" << chan_->fd() << ")";与     assert(chan_->fd() == fd_);会导致异常。主要原因是在部分连接失败情况下，chan为空，而这里没有判断。我现在是把他们注释掉了。希望能够及时修复，谢谢


I met this error when I run cmake -DCMAKE_BUILD_TYPE=Debug ..
I install Boost by using yum install boost, but cmake cnnot find boost. Then I install boost by source code. It generate some boost file in /usr/lib. Then run cmake -DCMAKE_BUILD_TYPE=Debug .., it doesn't have any error.
Then I run make -j, I met similiar error.
glog/logging.h cannot found.
event2/event.h cannot found.
gflags/gflags.h cannot found.
Then I install glog、libevent、gflags all by source code. It works. You shouldn't install them by yum install ***.





这是编译环境：
```
compiling evn:
Apple clang version 11.0.0 (clang-1100.0.33.8)
Target: x86_64-apple-darwin19.0.0
Thread model: posix
InstalledDir: /Library/Developer/CommandLineTools/usr/bin
```
这是编译错误：
```
/Users/3rdParty/vcpkg/buildtrees/evpp/src/v0.7.0-3c45459401/evpp/server_status.h:28:9: error: multiple conversions from switch condition type 'const std::atomic<Status>' to an integral or enumeration type
        H_CASE_STRING_BIGIN(status_);
        ^                   ~~~~~~~
/Users/3rdParty/vcpkg/buildtrees/evpp/src/v0.7.0-3c45459401/evpp/utility.h:7:36: note: expanded from macro 'H_CASE_STRING_BIGIN'
#define H_CASE_STRING_BIGIN(state) switch(state){
                                   ^      ~~~~~
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/atomic:928:5: note: conversion to enumeration type 'evpp::ServerStatus::Status'
    operator _Tp() const volatile _NOEXCEPT {return load();}
    ^
/Library/Developer/CommandLineTools/usr/bin/../include/c++/v1/atomic:930:5: note: conversion to enumeration type 'evpp::ServerStatus::Status'
    operator _Tp() const _NOEXCEPT          {return load();}
    ^
1 error generated.

```
根据 [Stack Overflow](https://stackoverflow.com/questions/25143860/implicit-conversion-from-class-to-enumeration-type-in-switch-conditional) 给出的解释，该错误是因为 `status_.load()`函数的隐式转换造成的错误。
I am not able to compile the code after i turned on HTTPS from cmake.

Unable to resolve "EVPP_HTTP_CLIENT_SUPPORTS_SSL" macro ?

This enables evpp to be compiled and used with C++17.
如文中所述
https://blog.csdn.net/zieckey/article/details/69803011#commentsedit
3种队列提供的百万级每秒的处理能力太差了。
不要把lambda当对象，而是当做流，用多线程写入单线程读取的流代替元素级并发队列。
最高可获取2500万/s的异步处理能力（1或2线程写单线程读@E3 1230v2 3.3GHz）！
libevent能够配置自定义的内存分配、内存释放接口，请问evpp是否支持。