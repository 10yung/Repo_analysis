### Is your enhancement related to a problem? Please describe.
<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->

I'm currently trying to run Che on IBM Kubernetes Service (IKS). When you authenticate against the cluster, IKS gives you the following command to run:
```
export KUBECONFIG=/Users/johncollier/.bluemix/plugins/container-service/clusters/<some-cluster>/kube-config.yml
```

When that command is run, your current terminal session will then be configured against that cluster. 

An entry under `~/.kube/config` is **not** created however when you configure the cluster. 

When I go to run `chectl server:start --platform=k8s --installer=operator --domain=<domain>`, the command fails with the following error:
```
johns-mbp-3:~ johncollier$ chectl server:start --platform=k8s --installer=operator --domain=<domain>
  âœ– Verify Kubernetes API
    â†’ Failed to connect to Kubernetes API. serviceaccounts is forbidden: User "s
â€¦
    ðŸ‘€  Looking for an already existing Che instance
Eclipse Che logs will be available in '/var/folders/68/4ts5xvrx067bb614t74jpb9c0000gn/T/chectl-logs/1579277503234'
 â€º   Error: Failed to connect to Kubernetes API. serviceaccounts is forbidden: 
 â€º   User "system:anonymous" cannot list resource "serviceaccounts" in API 
 â€º   group "" in the namespace "default"
```

This is because Che doesn't see the exported Kube config in `$KUBECONFIG` and is trying to install into a different cluster (whose context has long since expired).

### Describe the solution you'd like
<!-- A clear and concise description of what you want to happen. -->
It would be nice if Chectl supported scenarios where the kube config was exported under the `KUBECONFIG` environment variable. This would allow Chectl to work against Kubernetes platforms like IKS that only provide the user with a Kube config file to export in their terminal. It would also be nice, as it could also mean users wouldn't have to reconfigure their default Kubernetes context if they wanted to quickly install Che on another cluster.

### Describe alternatives you've considered
Manually creating the kube config entry in `~/.kube/config` works, but it's a hassle and the certificates for the config expire every 12 or so hours, so I have re-do that step whenever I reconfigure against the cluster.

Manually installing the Che operator from operatorhub works fine too.

### What should be considered to be done
Currently, the release job of che-plugin-broker only builds and pushes dockerimages.
It would be nice if it also would push git tag otherwise it should be done manually after each release.

P.S. it might be possible only if CentOS CI could provide release script token that can be used for pushing to GitHub.

Links:
https://ci.centos.org/view/Devtools/job/devtools-che-plugin-broker-release/
https://github.com/eclipse/che-plugin-broker/blob/master/.cico/cico_build_release.sh

### Additional Context
Ask Radim about token we can use here ;)
### Describe the bug
We used to have docs.war deployed with Che Server 
https://github.com/eclipse/che/blob/master/assembly/assembly-main/src/assembly/assembly.xml#L29
It allows the user to see the documentation that is actual for the Deployed version of Che.
For some reasons, `docs/che-7` is not available anymore
![Screenshot_20200117_144720](https://user-images.githubusercontent.com/5887312/72618679-4bc54400-3944-11ea-9650-08605b6ece94.png)


### Che version
<!-- (if workspace is running, version can be obtained with help/about menu) -->
 - [ ] latest
 - [x] nightly
 - [ ] other: please specify

### Steps to reproduce
1. Deploy Che
2. Open Dashboard.
3. Click Docs link that is located in the footer of `Workspaces page`.

### Expected behavior
Local Docs site is opened.

### Runtime
   - [ ] kubernetes (include output of `kubectl version`) 
   - [ ] Openshift (include output of `oc version`)
   - [x] minikube (include output of `minikube version` and `kubectl version`)
   - [x] minishift (include output of `minishift version` and `oc version`)
   - [ ] docker-desktop + K8S (include output of `docker version` and `kubectl version`)
   - [ ] other: (please specify)

### Installation method
   - [x] chectl <!--(please specify the options of chectl tool) -->
   - [x] che-operator <!--(version of che-operator) -->
   - [ ] minishift-addon
   - [ ] I don't know

### Environment
   - [x] my computer 
       - [ ] Windows
       - [x] Linux
       - [ ] macOS
   - [ ] Cloud
       - [ ] Amazon
       - [ ] Azure
       - [ ] GCE
       - [ ] other (please specify) 
   - [ ] other: please specify
### What does this PR do?
* fixes Ide.closeAllNotifications method which was not functional, replacing the logic with use of NotificationCenter instead
* adds a new method Ide.waitDialogShell into the Ide class which allows handling of the full-screen notification overlays
* adds runTaskWithDialogShell method into the common class which handles tasks that don't have an exit code toast displayed after they're executed (namely webserver containing devfiles)
* adds a new Python Django devfile test
* fixes some small typos

### What issues does this PR fix or reference?
#15735 

tracking issue for https://github.com/redhat-developer/rh-che/issues/1764

### What does this PR do?
Fixes to update testNG to more actual version (7.0.0)

### What issues does this PR fix or reference?

### Describe the bug
I was no able  to open workspace with a direct like this `https://che-che.apps-crc.testing/admin/gogo`
<img width="1134" alt="Ð—Ð½Ñ–Ð¼Ð¾Ðº ÐµÐºÑ€Ð°Ð½Ð°  Ð¾ 08 41 26" src="https://user-images.githubusercontent.com/1614429/72593472-56acb400-3905-11ea-8fa6-dbc1f8626a8a.png">
<img width="1677" alt="Ð—Ð½Ñ–Ð¼Ð¾Ðº ÐµÐºÑ€Ð°Ð½Ð°  Ð¾ 08 40 33" src="https://user-images.githubusercontent.com/1614429/72593477-590f0e00-3905-11ea-8ea0-6851f6898179.png">
<img width="1250" alt="Ð—Ð½Ñ–Ð¼Ð¾Ðº ÐµÐºÑ€Ð°Ð½Ð°  Ð¾ 08 39 38" src="https://user-images.githubusercontent.com/1614429/72593483-5e6c5880-3905-11ea-8ead-40ca54f11225.png">



### Che version
<!-- (if workspace is running, version can be obtained with help/about menu) -->
 - [ ] latest
 - [x] nightly
 - [ ] other: please specify

### Steps to reproduce
1. Create a workspace.
2. Open a direct link in a separate tab of the browser.
3. The workspace is not loaded correctly.

### Expected behavior
Workspace loaded correctly.

### Runtime
   - [ ] kubernetes (include output of `kubectl version`) 
   - [X] Openshift (include output of `oc version`)
   - [ ] minikube (include output of `minikube version` and `kubectl version`)
   - [ ] minishift (include output of `minishift version` and `oc version`)
   - [ ] docker-desktop + K8S (include output of `docker version` and `kubectl version`)
   - [ ] other: (please specify)

### Screenshots
<!-- If applicable, add screenshots to help explain your problem. -->

### Installation method
   - [x] chectl <!--(please specify the options of chectl tool) -->
   - [ ] che-operator <!--(version of che-operator) -->
   - [ ] minishift-addon
   - [ ] I don't know

### Environment
   - [ ] my computer 
       - [ ] Windows
       - [ ] Linux
       - [x] macOS
   - [ ] Cloud
       - [ ] Amazon
       - [ ] Azure
       - [ ] GCE
       - [ ] other (please specify) 
   - [ ] other: please specify

### Additional context
<!-- Add any other context about the problem here. -->

Check job on Cent OS infra
### Is your enhancement related to a problem? Please describe.
<!-- A clear and concise description of what the problem is. Ex. I'm always frustrated when [...] -->
As reported by @bryantson, it appears that the k8s plugin in CRW 2 (and thus Che 7.3) requires the yaml extension too.

### Describe the solution you'd like
<!-- A clear and concise description of what you want to happen. -->

It seems we need to append this line [0] into this plugin's meta.yaml [1] so that the kubernetes plugin will ALSO load the yaml plugin on startup.

[0] https://github.com/redhat-developer/codeready-workspaces/blob/master/dependencies/che-plugin-registry/v3/plugins/redhat/vscode-yaml/0.4.0/meta.yaml#L23

[1] https://github.com/redhat-developer/codeready-workspaces/blob/master/dependencies/che-plugin-registry/v3/plugins/ms-kubernetes-tools/vscode-kubernetes-tools/1.0.4/meta.yaml#L19

We should do the same in upstream for Che plugin registry too.

### Describe alternatives you've considered
<!--A clear and concise description of any alternative solutions or features you've considered. -->

### Additional context
<!-- Add any other context or screenshots about the enhancement here. -->

<!--
  To make it easier for us to help you, please include as much useful information as possible.

  Useful Links:
  - Documentation: https://www.eclipse.org/che/docs
  - Contributing: https://github.com/eclipse/che/blob/master/CONTRIBUTING.md

  Eclipse Che has public chat on:

  - Mattermost: https://mattermost.eclipse.org/eclipse/channels/eclipse-che

  Before opening a new issue, please search existing issues https://github.com/eclipse/che/issues
-->

### Describe the bug
create a project, i.e. cloning https://github.com/maxandersen/jbang and run ./gradlew in a terminal.

when using ephemeral on che.openshift.io it will run out of disk space very quickly with no warning and after that the workspace/UI is just dead.

Only way out afaicis was to kill the workspace meaning I would have lost my changes.

### Che version
<!-- (if workspace is running, version can be obtained with help/about menu) -->
 - [ ] latest
 - [ ] nightly
 - [x] other: che.openshift.io

che should not freeze or if it will freeze on out of disk should protect user from taking up the disk space.
