$uri="172.245.118.60"
$headers=@{
"content-length"= "215"
"cache-control"= "max-age=0"
"upgrade-insecure-requests"= "1"
"user-agent"= "Mozilla/5.0 (Linux; Android 9; LM-G710) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/76.0.3809.132 Mobile Safari/537.36"
"sec-fetch-mode"= "navigate"
"sec-fetch-user"= "?1"
"content-type"= "application/x-www-form-urlencoded"
"dnt"= "1"
"accept"= "text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3"
"sec-fetch-site"= "none"
"accept-encoding"= "gzip, deflate, br"
"accept-language"= "zh-CN,zh;q=0.9,en-US;q=0.8,en;q=0.7"
}
Invoke-WebRequest $uri -Method Post -Headers $headers



There are some issues when using it inside tmux 2.9a, it renders incorrec
t characters and doesn't allow to use arrow keys, neither to use it at all actually, tried in different terminals:

- Termite
- rxvt-unicode
- xterm
- alacritty

using both zsh and bash and evertything works fine on it's own, but in tmux it presents this problem (screenshot in link)

I'm using archlinux and tmux 2.9a

tried installation from AUR, with golang and from source, problem persists and it's only when inside tmux

[screenshot](https://i.imgur.com/J9lV3I5.

**Edit**

it works when changing TERM variable inside tmux  either from tmux-256color to tmux or screen-256color to screen
Looks like httplab disappeared from Snap https://snapcraft.io/search?q=httplab

It's possible to create new snaps automatically in CI 
https://docs.snapcraft.io/build-snaps/ci-integration
Windows 7

I can only insert values; I can't type over or delete.
Backspace brings up a keybinding menu.
Projects like [brew](https://brew.sh/) provides a handy way to install.
It would be great to have something similar that depending on your architecture, fetches the righ binary and copies it to some `$PATH`.

A simple bash script should be enough to start,
Having webserver port sourced from config file (~/.httplab) could be a nice addition. I can implement that if there's any interest. 
Having configurable key bindings would be a nice addition.
I can implement this to store custom key bindings in ~/.httplab, is this a good place for such change?
This PR simply includes  the `gzip-support` originally branch authored by @m1ome with the merge conflicts resolved. I didn't want that PR to go to waste!

Originally PR #24 

Hi @gchaincl,

i have separated the error handling stuff into this PR.
Hope that it makes more sense to you (and your git history)

Regards