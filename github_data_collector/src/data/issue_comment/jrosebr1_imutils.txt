
In perspective.py:

```
from scipy.spatial import distance as dist
...
D = dist.cdist(tl[np.newaxis], rightMost, "euclidean")[0]
```

You ought to be able to do this without importing SciPy, something like:

```
D = np.linalg.norm(rightMost - tl, ord=2, axis=1)
```
Hi 
I tried to upgrade imutils with the following command:
`pip install --upgrade imutils`
But this message appear: 
ERROR: Cannot uninstall 'imutils'. It is a distutils installed project and thus we cannot accurately determine which files belong to it which would lead to only a partial uninstall.
how can I fix this?
Thanks
I am following your instructions at https://www.pyimagesearch.com/2017/02/06/faster-video-file-fps-with-cv2-videocapture-and-opencv/, it's great for me. But I have problems when I try to edit my code according to your instructions. It's:

vs = FileVideoStream(args["input"]).start()
time.sleep(1.0)
while vs.more():
.....

the error is: AttributeError: 'function' object has no attribute 'more'
I get filevideostream.py from this https://github.com/jrosebr1/imutils/blob/master/imutils/video/filevideostream.py
Please help me, thank you


https://github.com/jrosebr1/imutils/blob/df65a77087548b5952431cc8006d66bcca7b1abc/imutils/video/webcamvideostream.py#L38

someone just showed up freenode's #opencv with this.
I'm on arch linux and ive got an error running a python script here: http://ix.io/22ii that imports imutils.
Heres the error when I run python3 file.py: http://ix.io/22ih.
Heres the error when I run python2 file.py: http://ix.io/22il.

I've then installed python-imutils git files from arch wiki found here: https://aur.archlinux.org/packages/python-imutils/ and https://aur.archlinux.org/packages/python2-imutils/.

I was hoping this installs the module so its available when I run python3 file.py.

This is the makepkg build of python-imutils: http://ix.io/22im
and this is the makepkg build of python2-imutils: http://ix.io/22in

At this point im still getting the very first error (http://ix.io/22ii ). Why might python3 still not recognize the imutils module? What else do I need to consider here?


1) I would like to print out the current values to the console.
2) Because I want specific value for HSV in OpenCV, I need to change the range for H from [0,255] to [0,179]
When the WebcamVideoStream class is stopped, the underlying cv2.VideoCapture class isn't released properly (when starting the WebcamVideoStream class no frames are returned). By adding the self.stream.release() the cv2.VideoCapture class is released and the stated error is fixed
Hello @jrosebr1 

I want to say thank you so much because I have learned a lot in [pyimagsearch](pyimagesearch.com). However, I am currently resizing an image to a specific dimensions `width x height` and I would like to discuss why in your `imutils.resize` you don't accept both sizes. 
https://github.com/jrosebr1/imutils/blob/df65a77087548b5952431cc8006d66bcca7b1abc/imutils/convenience.py#L65

I remember that you said in one of your books and also here in the README that "special care needs to be taken to ensure that the aspect ratio is maintained". However, I would like to resize to a specific resolution lets say `216x122`and I will care of the ratio and resize the image and after that, I crop the image in the center with the size required I will continue maintaining the ratio. 

```python
    def get_resize_image(image, width, height):
        (h, w) = image.shape[:2]
        # calculate the ratio of the original image
        R = w / h
        # calculate the ratio of the new dimensions
        r = width / height

        # cropping starting points
        start_w = 0
        start_h = 0

        # check if the original ratio is greate than the new one
        # and resize the image from that new sizes
        if R > r:
            # get the new width with the correct ratio
            new_w = (height * w) / h
            # find the center of the new width
            start_w = int((new_w - width) / 2)
            # resize the image
            resized = cv2.resize(image, (int(new_w), height), interpolation=cv2.INTER_AREA)

        else:
            # get the new height with the correct ratio
            new_w = (width * h) / w
            # find the center of the new height
            start_h = int((new_h - height) / 2)
            # resize the image
            resized = cv2.resize(image, (width, int(new_h)), interpolation=cv2.INTER_AREA)

        # crop the image to the sizes required
        return resized[start_h:(start_h + height), start_w:(start_w + width)]
```

 
Exception in thread Thread-1:
Traceback (most recent call last):
  File "/usr/lib/python3/dist-packages/picamera/camera.py", line 1704, in capture_continuous
    'Timed out waiting for capture to end')
picamera.exc.PiCameraRuntimeError: Timed out waiting for capture to end

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "/usr/lib/python3.7/threading.py", line 917, in _bootstrap_inner
    self.run()
  File "/usr/lib/python3.7/threading.py", line 865, in run
    self._target(*self._args, **self._kwargs)
  File "/usr/local/lib/python3.7/dist-packages/imutils/video/pivideostream.py", line 39, in update
    for f in self.stream:
  File "/usr/lib/python3/dist-packages/picamera/camera.py", line 1710, in capture_continuous
    encoder.close()
  File "/usr/lib/python3/dist-packages/picamera/encoders.py", line 431, in close
    self.stop()
  File "/usr/lib/python3/dist-packages/picamera/encoders.py", line 419, in stop
    self._close_output()
  File "/usr/lib/python3/dist-packages/picamera/encoders.py", line 349, in _close_output
    mo.close_stream(output, opened)
  File "/usr/lib/python3/dist-packages/picamera/mmalobj.py", line 371, in close_stream
    stream.flush()
  File "/usr/lib/python3/dist-packages/picamera/array.py", line 238, in flush
    self.array = bytes_to_rgb(self.getvalue(), self.size or self.camera.resolution)
  File "/usr/lib/python3/dist-packages/picamera/array.py", line 127, in bytes_to_rgb
    'Incorrect buffer length for resolution %dx%d' % (width, height))
picamera.exc.PiCameraValueError: Incorrect buffer length for resolution 1920x1080


