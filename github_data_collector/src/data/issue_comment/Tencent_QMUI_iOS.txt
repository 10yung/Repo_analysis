**Bug 表现**

偶然发现，一个`vc` 的`viewDidLoad`中获取的 `self.navigationController == nil`，初步排查可以确认，此`vc`应该有正确的被加到导航栏栈里，且在 `viewWillAppear`内获取的 `self.navigationController != nil`.
后将怀疑点转到此`vc` 所继承的`QMUICommonTableViewController`，经过排查，可能为如下的原因：

```objc
@implementation ViewControllerB //  instance of QMUICommonTableViewController

- (instancetype)initWithStyle:(UITableViewStyle)style
{
    if (self = [super initWithStyle:style]) {

        self.textView = [[QMUITextView alloc] init];
        
        // 下面两行是触发问题的关键：
        self.textView.delegate = self;
        self.textView.contentInset = UIEdgeInsetsMake(0, 3, 0, 0);

       // 注意: 此时并没有将 self.textView add 到 self.view
    }
    return self;
}

/*
问题可能出在 给 textView 设置 contentInset 时，会触发 textView.delegate 的 'scrollViewDidChangeAdjustedContentInset:'方法
在 QMUICommonTableViewController 的'scrollViewDidChangeAdjustedContentInset'方法内，访问了 self.tableView
而 tableView 的 getter 方法内又 '[self loadViewIfNeeded]'，因此导致 viewDidLoad 被『提前』唤起
*/

- (void)viewDidLoad
{
    [super viewDidLoad];
    self.view.backgroundColor = UIColor.whiteColor;
    
    if (!self.navigationController) {
        // 在 viewDidLoad 异常的无法获取 self.navigationController
        // 说明 viewDidLoad 被『提前创建了』
        NSLog(@"=====");
    }
}

@end
```

**如何重现**

[附件 Demo 直接复现](https://github.com/Tencent/QMUI_iOS/files/4075448/dddddd.zip)


**预期的表现**

正常情况下，`viewDidLoad`方法内应该可以获取到 `self.navigationController`，除非`viewDidLoad`被『提前』唤起

**可能的原因**

问题可能出在 给 `textView` 设置 `contentInset` 时，会触发 `textView.delegate` 的 `scrollViewDidChangeAdjustedContentInset:`方法
在 `QMUICommonTableViewController` 的`scrollViewDidChangeAdjustedContentInset`方法内，访问了 `self.tableView`
而 `tableView` 的 `getter` 方法又调用了`[self loadViewIfNeeded]`，因此导致 `viewDidLoad` 被『提前』唤起

**其他信息**
 - 设备: All
 - iOS 版本: [iOS 11+]
 - Xcode 版本: [Xcode 11.3]
 - QMUI 版本: [4.0.4]

**Bug 表现**
mjrefreshheader和showEmptyViewWithImage方法合用的时候出现显示bug

**截图**
`[self showEmptyViewWithImage:[UIImage imageNamed:@"tz_pic_hdxxmrt"] text:@"测试测试" detailText:@"奥斯卡" buttonTitle:@"按时" buttonAction:nil];
    self.tableView.mj_header = [MJRefreshStateHeader headerWithRefreshingBlock:^{
        [self hideEmptyView];
        dispatch_after(dispatch_time(DISPATCH_TIME_NOW, (int64_t)(1.f * NSEC_PER_SEC)), dispatch_get_main_queue(), ^{
            [self.tableView.mj_header endRefreshing];
            
            [self showEmptyViewWithImage:[UIImage imageNamed:@"tz_pic_hdxxmrt"] text:@"测试测试" detailText:@"奥斯卡" buttonTitle:@"按时" buttonAction:nil];
        });
    }];`

**如何重现**
1. 新建一个工程，将代码加进去
2. 下拉刷新，观察emptyview 的位置
3. 在松开手的时候emptyview会向上移动，刷新完毕后又会向下移动回到原来的位置

**预期的表现**
emptyview应该固定在tableview跟随一起滑动

**其他信息**
 - 设备: iPhone模拟器
 - iOS 版本: [iOS 13.3]
 - Xcode 版本: [Xcode 11.3]
 - QMUI 版本: [4.0.4]

**Bug 表现**
pieProgres预设边距后,转动过程中间距消失,等到停止后才重新显示.
**截图**

**如何重现**
1. Demo中把QDPieProgressViewController的代码修改为
- (void)handleSliderTouchUpInside:(UISlider *)slider {
    [self.progressView2 setProgress:slider.value animated:YES];
}

2. 活动进度条时progressView2转动时没有了边距,停下来的时候重新显示边距(默认有边距).

**预期的表现**
转动时应该有边距

**其他信息**
所有设备 
**Bug 表现**
QMUI 从 4.0.0-beta 更新到 4.0.4 后无法启动

**截图**
![WX20200103-100812](https://user-images.githubusercontent.com/4312700/71703696-fdc32300-2e10-11ea-84ad-7efd35ade60f.png)

**如何重现**
1. 修改 Podfile 将版本修改至 4.0.4
2. 使用 `pod update` 更新
3. 根据仓库中最新的 `QMUIConfigurationTemplate` 修改 `QMUIConfigurationTemplate.m`

**预期的表现**
正常情况下不应该无法启动

**其他信息**
 - 设备: iPhone Xr
 - iOS 版本: iOS 13.3
 - Xcode 版本: Xcode 11.3
 - QMUI 版本: 4.0.4
 - 在同样的环境下 4.0.0-beta 不会有问题

<details>
<summary>QMUIConfigurationTemplate.m 内容</summary>
<p>

```objc
/*****
 * Tencent is pleased to support the open source community by making QMUI_iOS available.
 * Copyright (C) 2016-2019 THL A29 Limited, a Tencent company. All rights reserved.
 * Licensed under the MIT License (the "License"); you may not use this file except in compliance with the License. You may obtain a copy of the License at
 * http://opensource.org/licenses/MIT
 * Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.
 *****/

//
//  QMUIConfigurationTemplate.m
//  qmui
//
//  Created by QMUI Team on 15/3/29.
//

#import "QMUIConfigurationTemplate.h"
#import <QMUIKit/QMUIKit.h>

@implementation QMUIConfigurationTemplate

#pragma mark - <QMUIConfigurationTemplateProtocol>

- (void)applyConfigurationTemplate {
    
    // === 修改配置值 === //
    
    #pragma mark - Global Color
    
    QMUICMI.clearColor = UIColorMakeWithRGBA(255, 255, 255, 0);                 // UIColorClear : 透明色
    QMUICMI.whiteColor = UIColorMake(255, 255, 255);                            // UIColorWhite : 白色（不用 [UIColor whiteColor] 是希望保持颜色空间为 RGB）
    QMUICMI.blackColor = UIColorMake(0, 0, 0);                                  // UIColorBlack : 黑色（不用 [UIColor blackColor] 是希望保持颜色空间为 RGB）
    QMUICMI.grayColor = UIColorMake(179, 179, 179);                             // UIColorGray  : 最常用的灰色
    QMUICMI.grayDarkenColor = UIColorMake(163, 163, 163);                       // UIColorGrayDarken : 深一点的灰色
    QMUICMI.grayLightenColor = UIColorMake(198, 198, 198);                      // UIColorGrayLighten : 浅一点的灰色
    QMUICMI.redColor = UIColorMake(250, 58, 58);                                // UIColorRed : 红色
    QMUICMI.greenColor = UIColorMake(159, 214, 97);                             // UIColorGreen : 绿色
    QMUICMI.blueColor = UIColorMake(49, 189, 243);                              // UIColorBlue : 蓝色
    QMUICMI.yellowColor = UIColorMake(255, 207, 71);                            // UIColorYellow : 黄色
    
    QMUICMI.linkColor = UIColorMake(56, 116, 171);                              // UIColorLink : 文字链接颜色
    QMUICMI.disabledColor = UIColorGray;                                        // UIColorDisabled : 全局 disabled 的颜色，一般用于 UIControl 等控件
    QMUICMI.backgroundColor = nil;                                              // UIColorForBackground : 界面背景色，默认用于 QMUICommonViewController.view 的背景色
    QMUICMI.maskDarkColor = UIColorMakeWithRGBA(0, 0, 0, .35f);                 // UIColorMask : 深色的背景遮罩，默认用于 QMAlertController、QMUIDialogViewController 等弹出控件的遮罩
    QMUICMI.maskLightColor = UIColorMakeWithRGBA(255, 255, 255, .5f);           // UIColorMaskWhite : 浅色的背景遮罩，QMUIKit 里默认没用到，只是占个位
    QMUICMI.separatorColor = UIColorMake(222, 224, 226);                        // UIColorSeparator : 全局默认的分割线颜色，默认用于列表分隔线颜色、UIView (QMUI_Border) 分隔线颜色
    QMUICMI.separatorDashedColor = UIColorMake(17, 17, 17);                     // UIColorSeparatorDashed : 全局默认的虚线分隔线的颜色，默认 QMUIKit 暂时没用到
    QMUICMI.placeholderColor = UIColorMake(196, 200, 208);                      // UIColorPlaceholder，全局的输入框的 placeholder 颜色，默认用于 QMUITextField、QMUITextView，不影响系统 UIKit 的输入框
    
    // 测试用的颜色
    QMUICMI.testColorRed = UIColorMakeWithRGBA(255, 0, 0, .3);
    QMUICMI.testColorGreen = UIColorMakeWithRGBA(0, 255, 0, .3);
    QMUICMI.testColorBlue = UIColorMakeWithRGBA(0, 0, 255, .3);
    
    
    #pragma mark - UIControl
    
    QMUICMI.controlHighlightedAlpha = 0.5f;                                     // UIControlHighlightedAlpha : UIControl 系列控件在 highlighted 时的 alpha，默认用于 QMUIButton、 QMUINavigationTitleView
    QMUICMI.controlDisabledAlpha = 0.5f;                                        // UIControlDisabledAlpha : UIControl 系列控件在 disabled 时的 alpha，默认用于 QMUIButton
    
    #pragma mark - UIButton
    QMUICMI.buttonHighlightedAlpha = UIControlHighlightedAlpha;                 // ButtonHighlightedAlpha : QMUIButton 在 highlighted 时的 alpha，不影响系统的 UIButton
    QMUICMI.buttonDisabledAlpha = UIControlDisabledAlpha;                       // ButtonDisabledAlpha : QMUIButton 在 disabled 时的 alpha，不影响系统的 UIButton
    QMUICMI.buttonTintColor = UIColorBlue;                                      // ButtonTintColor : QMUIButton 默认的 tintColor，不影响系统的 UIButton
    
    QMUICMI.ghostButtonColorBlue = UIColorBlue;                                 // GhostButtonColorBlue : QMUIGhostButtonColorBlue 的颜色
    QMUICMI.ghostButtonColorRed = UIColorRed;                                   // GhostButtonColorRed : QMUIGhostButtonColorRed 的颜色
    QMUICMI.ghostButtonColorGreen = UIColorGreen;                               // GhostButtonColorGreen : QMUIGhostButtonColorGreen 的颜色
    QMUICMI.ghostButtonColorGray = UIColorGray;                                 // GhostButtonColorGray : QMUIGhostButtonColorGray 的颜色
    QMUICMI.ghostButtonColorWhite = UIColorWhite;                               // GhostButtonColorWhite : QMUIGhostButtonColorWhite 的颜色
    
    QMUICMI.fillButtonColorBlue = UIColorBlue;                                  // FillButtonColorBlue : QMUIFillButtonColorBlue 的颜色
    QMUICMI.fillButtonColorRed = UIColorRed;                                    // FillButtonColorRed : QMUIFillButtonColorRed 的颜色
    QMUICMI.fillButtonColorGreen = UIColorGreen;                                // FillButtonColorGreen : QMUIFillButtonColorGreen 的颜色
    QMUICMI.fillButtonColorGray = UIColorGray;                                  // FillButtonColorGray : QMUIFillButtonColorGray 的颜色
    QMUICMI.fillButtonColorWhite = UIColorWhite;                                // FillButtonColorWhite : QMUIFillButtonColorWhite 的颜色
    
    #pragma mark - TextInput
    QMUICMI.textFieldTintColor = nil;                                           // TextFieldTintColor : QMUITextField、QMUITextView 的 tintColor，不影响 UIKit 的输入框
    QMUICMI.textFieldTextInsets = UIEdgeInsetsMake(0, 7, 0, 7);                 // TextFieldTextInsets : QMUITextField 的内边距，不影响 UITextField
    QMUICMI.keyboardAppearance = UIKeyboardAppearanceDefault;                   // KeyboardAppearance : UITextView、UITextField、UISearchBar 的 keyboardAppearance
    
    #pragma mark - UISwitch
    QMUICMI.switchOnTintColor = nil;                                            // SwitchOnTintColor : UISwitch 打开时的背景色（除了圆点外的其他颜色）
    QMUICMI.switchOffTintColor = nil;                                           // switchOffTintColor : UISwitch 关闭时的背景色（除了圆点外的其他颜色）
    QMUICMI.switchTintColor = nil;                                              // SwitchTintColor : UISwitch 关闭时的周围边框颜色
    QMUICMI.switchThumbTintColor = nil;                                         // SwitchThumbTintColor : UISwitch 中间的操控圆点的颜色
    
    #pragma mark - NavigationBar
    
    QMUICMI.navBarHighlightedAlpha = 0.2f;                                      // NavBarHighlightedAlpha : QMUINavigationButton 在 highlighted 时的 alpha
    QMUICMI.navBarDisabledAlpha = 0.2f;                                         // NavBarDisabledAlpha : QMUINavigationButton 在 disabled 时的 alpha
    QMUICMI.navBarButtonFont = nil;                                             // NavBarButtonFont : QMUINavigationButtonTypeNormal 和 UINavigationBar 上的 UIBarButtonItem 的字体
    QMUICMI.navBarButtonFontBold = nil;                                         // NavBarButtonFontBold : QMUINavigationButtonTypeBold 的字体
    QMUICMI.navBarBackgroundImage = [UIImageMake(@"State_BG1") resizableImageWithCapInsets:UIEdgeInsetsMake(0, 0, 0, 0) resizingMode:UIImageResizingModeStretch];                                        // NavBarBackgroundImage : UINavigationBar 的背景图
    QMUICMI.navBarShadowImage = nil;                                            // NavBarShadowImage : UINavigationBar.shadowImage，也即导航栏底部那条分隔线，配合 NavBarShadowImageColor 使用。
    QMUICMI.navBarShadowImageColor = nil;                                       // NavBarShadowImageColor : UINavigationBar.shadowImage 的颜色，如果为 nil，则显示系统默认 shadowImage，如果为全透明，则不显示 shadowImage，如果为除了 nil 和全透明外的其他颜色，则会将这个颜色叠加到 NavBarShadowImage 上显示出来，如果不存在 NavBarShadowImage，则使用一张 1px 高的图片作为默认图。
    QMUICMI.navBarBarTintColor = nil;                                           // NavBarBarTintColor : UINavigationBar.barTintColor，也即背景色
    QMUICMI.navBarStyle = UIBarStyleDefault;                                    // NavBarStyle : UINavigationBar 的 barStyle
    QMUICMI.navBarTintColor = UIColorWhite;                                              // NavBarTintColor : QMUINavigationController.navigationBar 的 tintColor，也即导航栏上面的按钮颜色，由于 tintColor 不支持 appearance，所以这里只支持 QMUINavigationController
    QMUICMI.navBarTitleColor = UIColorWhite;                                             // NavBarTitleColor : UINavigationBar 的标题颜色，以及 QMUINavigationTitleView 的默认文字颜色
    QMUICMI.navBarTitleFont = nil;                                              // NavBarTitleFont : UINavigationBar 的标题字体，以及 QMUINavigationTitleView 的默认字体
    QMUICMI.navBarLargeTitleColor = nil;                                        // NavBarLargeTitleColor : UINavigationBar 在大标题模式下的标题颜色，仅在 iOS 11 之后才有效
    QMUICMI.navBarLargeTitleFont = nil;                                         // NavBarLargeTitleFont : UINavigationBar 在大标题模式下的标题字体，仅在 iOS 11 之后才有效
    QMUICMI.navBarBackButtonTitlePositionAdjustment = UIOffsetZero;             // NavBarBarBackButtonTitlePositionAdjustment : 导航栏返回按钮的文字偏移
    QMUICMI.sizeNavBarBackIndicatorImageAutomatically = YES;                    // SizeNavBarBackIndicatorImageAutomatically : 是否要自动调整 NavBarBackIndicatorImage 的 size 为 (13, 21)
    QMUICMI.navBarBackIndicatorImage = nil;                                     // NavBarBackIndicatorImage : 导航栏的返回按钮的图片，图片尺寸建议为(13, 21)，否则最终的图片位置无法与系统原生的位置保持一致
    QMUICMI.navBarCloseButtonImage = [UIImage qmui_imageWithShape:QMUIImageShapeNavClose size:CGSizeMake(16, 16) tintColor:NavBarTintColor];     // NavBarCloseButtonImage : QMUINavigationButton 用到的 × 的按钮图片
    
    QMUICMI.navBarLoadingMarginRight = 3;                                       // NavBarLoadingMarginRight : QMUINavigationTitleView 里左边 loading 的右边距
    QMUICMI.navBarAccessoryViewMarginLeft = 5;                                  // NavBarAccessoryViewMarginLeft : QMUINavigationTitleView 里右边 accessoryView 的左边距
    QMUICMI.navBarActivityIndicatorViewStyle = UIActivityIndicatorViewStyleGray;// NavBarActivityIndicatorViewStyle : QMUINavigationTitleView 里左边 loading 的主题
    QMUICMI.navBarAccessoryViewTypeDisclosureIndicatorImage = [[UIImage qmui_imageWithShape:QMUIImageShapeTriangle size:CGSizeMake(8, 5) tintColor:nil] imageWithRenderingMode:UIImageRenderingModeAlwaysTemplate];     // NavBarAccessoryViewTypeDisclosureIndicatorImage : QMUINavigationTitleView 右边箭头的图片
    
    #pragma mark - TabBar
    
    QMUICMI.tabBarBackgroundImage = nil;                                        // TabBarBackgroundImage : UITabBar 的背景图
    QMUICMI.tabBarBarTintColor = nil;                                           // TabBarBarTintColor : UITabBar 的 barTintColor
    QMUICMI.tabBarShadowImageColor = nil;                                       // TabBarShadowImageColor : UITabBar 的 shadowImage 的颜色，会自动创建一张 1px 高的图片
    QMUICMI.tabBarStyle = UIBarStyleDefault;                                    // TabBarStyle : UITabBar 的 barStyle
    QMUICMI.tabBarItemTitleFont = nil;                                          // TabBarItemTitleFont : UITabBarItem 的标题字体
    QMUICMI.tabBarItemTitleColor = nil;                                         // TabBarItemTitleColor : 未选中的 UITabBarItem 的标题颜色
    QMUICMI.tabBarItemTitleColorSelected = nil;                                 // TabBarItemTitleColorSelected : 选中的 UITabBarItem 的标题颜色
    QMUICMI.tabBarItemImageColor = nil;                                         // TabBarItemImageColor : UITabBarItem 未选中时的图片颜色
    QMUICMI.tabBarItemImageColorSelected = nil;                                 // TabBarItemImageColorSelected : UITabBarItem 选中时的图片颜色
    
    #pragma mark - Toolbar
    
    QMUICMI.toolBarHighlightedAlpha = 0.4f;                                     // ToolBarHighlightedAlpha : QMUIToolbarButton 在 highlighted 状态下的 alpha
    QMUICMI.toolBarDisabledAlpha = 0.4f;                                        // ToolBarDisabledAlpha : QMUIToolbarButton 在 disabled 状态下的 alpha
    QMUICMI.toolBarTintColor = nil;                                             // ToolBarTintColor : UIToolbar 的 tintColor，以及 QMUIToolbarButton normal 状态下的文字颜色
    QMUICMI.toolBarTintColorHighlighted = [ToolBarTintColor colorWithAlphaComponent:ToolBarHighlightedAlpha];   // ToolBarTintColorHighlighted : QMUIToolbarButton 在 highlighted 状态下的文字颜色
    QMUICMI.toolBarTintColorDisabled = [ToolBarTintColor colorWithAlphaComponent:ToolBarDisabledAlpha];         // ToolBarTintColorDisabled : QMUIToolbarButton 在 disabled 状态下的文字颜色
    QMUICMI.toolBarBackgroundImage = nil;                                       // ToolBarBackgroundImage : UIToolbar 的背景图
    QMUICMI.toolBarBarTintColor = nil;                                          // ToolBarBarTintColor : UIToolbar 的 tintColor
    QMUICMI.toolBarShadowImageColor = nil;                                      // ToolBarShadowImageColor : UIToolbar 的 shadowImage 的颜色，会自动创建一张 1px 高的图片
    QMUICMI.toolBarStyle = UIBarStyleDefault;                                   // ToolBarStyle : UIToolbar 的 barStyle
    QMUICMI.toolBarButtonFont = nil;                                            // ToolBarButtonFont : QMUIToolbarButton 的字体
    
    #pragma mark - SearchBar
    
    QMUICMI.searchBarTextFieldBackgroundImage = nil;                            // SearchBarTextFieldBackgroundImage : QMUISearchBar 里的文本框的背景图，图片高度会决定输入框的高度
    QMUICMI.searchBarTextFieldBorderColor = nil;                                // SearchBarTextFieldBorderColor : QMUISearchBar 里的文本框的边框颜色
    QMUICMI.searchBarBackgroundImage = nil;                                     // SearchBarBackgroundImage : 搜索框的背景图，如果需要设置底部分隔线的颜色也请绘制到图片里
    QMUICMI.searchBarTintColor = nil;                                           // SearchBarTintColor : QMUISearchBar 的 tintColor，也即上面的操作控件的主题色
    QMUICMI.searchBarTextColor = nil;                                           // SearchBarTextColor : QMUISearchBar 里的文本框的文字颜色
    QMUICMI.searchBarPlaceholderColor = UIColorPlaceholder;                     // SearchBarPlaceholderColor : QMUISearchBar 里的文本框的 placeholder 颜色
    QMUICMI.searchBarFont = nil;                                                // SearchBarFont : QMUISearchBar 里的文本框的文字字体及 placeholder 的字体
    QMUICMI.searchBarSearchIconImage = nil;                                     // SearchBarSearchIconImage : QMUISearchBar 里的放大镜 icon
    QMUICMI.searchBarClearIconImage = nil;                                      // SearchBarClearIconImage : QMUISearchBar 里的文本框输入文字时右边的清空按钮的图片
    QMUICMI.searchBarTextFieldCornerRadius = 2.0;                               // SearchBarTextFieldCornerRadius : QMUISearchBar 里的文本框的圆角大小，-1 表示圆角大小为输入框高度的一半
    
    #pragma mark - TableView / TableViewCell
    
    QMUICMI.tableViewEstimatedHeightEnabled = YES;                              // TableViewEstimatedHeightEnabled : 是否要开启全局 UITableView 的 estimatedRow(Section/Footer)Height
    
    QMUICMI.tableViewBackgroundColor = nil;                                     // TableViewBackgroundColor : Plain 类型的 QMUITableView 的背景色颜色
    QMUICMI.tableSectionIndexColor = nil;                                       // TableSectionIndexColor : 列表右边的字母索引条的文字颜色
    QMUICMI.tableSectionIndexBackgroundColor = nil;                             // TableSectionIndexBackgroundColor : 列表右边的字母索引条的背景色
    QMUICMI.tableSectionIndexTrackingBackgroundColor = nil;                     // TableSectionIndexTrackingBackgroundColor : 列表右边的字母索引条在选中时的背景色
    QMUICMI.tableViewSeparatorColor = UIColorSeparator;                         // TableViewSeparatorColor : 列表的分隔线颜色
    
    QMUICMI.tableViewCellNormalHeight = UITableViewAutomaticDimension;          // TableViewCellNormalHeight : QMUITableView 的默认 cell 高度
    QMUICMI.tableViewCellTitleLabelColor = nil;                                 // TableViewCellTitleLabelColor : QMUITableViewCell 的 textLabel 的文字颜色
    QMUICMI.tableViewCellDetailLabelColor = nil;                                // TableViewCellDetailLabelColor : QMUITableViewCell 的 detailTextLabel 的文字颜色
    QMUICMI.tableViewCellBackgroundColor = nil;                                 // TableViewCellBackgroundColor : QMUITableViewCell 的背景色
    QMUICMI.tableViewCellSelectedBackgroundColor = UIColorMake(238, 239, 241);  // TableViewCellSelectedBackgroundColor : QMUITableViewCell 点击时的背景色
    QMUICMI.tableViewCellWarningBackgroundColor = UIColorYellow;                // TableViewCellWarningBackgroundColor : QMUITableViewCell 用于表示警告时的背景色，备用
    QMUICMI.tableViewCellDisclosureIndicatorImage = nil;                        // TableViewCellDisclosureIndicatorImage : QMUITableViewCell 当 accessoryType 为 UITableViewCellAccessoryDisclosureIndicator 时的箭头的图片
    QMUICMI.tableViewCellCheckmarkImage = nil;                                  // TableViewCellCheckmarkImage : QMUITableViewCell 当 accessoryType 为 UITableViewCellAccessoryCheckmark 时的打钩的图片
    QMUICMI.tableViewCellDetailButtonImage = nil; // TableViewCellDetailButtonImage : QMUITableViewCell 当 accessoryType 为 UITableViewCellAccessoryDetailButton 或 UITableViewCellAccessoryDetailDisclosureButton 时右边的 i 按钮图片
    QMUICMI.tableViewCellSpacingBetweenDetailButtonAndDisclosureIndicator = 12; // TableViewCellSpacingBetweenDetailButtonAndDisclosureIndicator : 列表 cell 右边的 i 按钮和向右箭头之间的间距（仅当两者都使用了自定义图片并且同时显示时才生效）
    
    QMUICMI.tableViewSectionHeaderBackgroundColor = UIColorMake(244, 244, 244);                         // TableViewSectionHeaderBackgroundColor : Plain 类型的 QMUITableView sectionHeader 的背景色
    QMUICMI.tableViewSectionFooterBackgroundColor = UIColorMake(244, 244, 244);                         // TableViewSectionFooterBackgroundColor : Plain 类型的 QMUITableView sectionFooter 的背景色
    QMUICMI.tableViewSectionHeaderFont = UIFontBoldMake(12);                                            // TableViewSectionHeaderFont : Plain 类型的 QMUITableView sectionHeader 里的文字字体
    QMUICMI.tableViewSectionFooterFont = UIFontBoldMake(12);                                            // TableViewSectionFooterFont : Plain 类型的 QMUITableView sectionFooter 里的文字字体
    QMUICMI.tableViewSectionHeaderTextColor = UIColorGrayDarken;                                        // TableViewSectionHeaderTextColor : Plain 类型的 QMUITableView sectionHeader 里的文字颜色
    QMUICMI.tableViewSectionFooterTextColor = UIColorGray;                                              // TableViewSectionFooterTextColor : Plain 类型的 QMUITableView sectionFooter 里的文字颜色
    QMUICMI.tableViewSectionHeaderAccessoryMargins = UIEdgeInsetsMake(0, 15, 0, 0);                     // TableViewSectionHeaderAccessoryMargins : Plain 类型的 QMUITableView sectionHeader accessoryView 的间距
    QMUICMI.tableViewSectionFooterAccessoryMargins = UIEdgeInsetsMake(0, 15, 0, 0);                     // TableViewSectionFooterAccessoryMargins : Plain 类型的 QMUITableView sectionFooter accessoryView 的间距
    QMUICMI.tableViewSectionHeaderContentInset = UIEdgeInsetsMake(4, 15, 4, 15);                        // TableViewSectionHeaderContentInset : Plain 类型的 QMUITableView sectionHeader 里的内容的 padding
    QMUICMI.tableViewSectionFooterContentInset = UIEdgeInsetsMake(4, 15, 4, 15);                        // TableViewSectionFooterContentInset : Plain 类型的 QMUITableView sectionFooter 里的内容的 padding
    
    QMUICMI.tableViewGroupedBackgroundColor = nil;                                                      // TableViewGroupedBackgroundColor : Grouped 类型的 QMUITableView 的背景色
    QMUICMI.tableViewGroupedCellTitleLabelColor = TableViewCellTitleLabelColor;                         // TableViewGroupedCellTitleLabelColor : Grouped 类型的 QMUITableView cell 里的标题颜色
    QMUICMI.tableViewGroupedCellDetailLabelColor = TableViewCellDetailLabelColor;                       // TableViewGroupedCellDetailLabelColor : Grouped 类型的 QMUITableView cell 里的副标题颜色
    QMUICMI.tableViewGroupedCellBackgroundColor = TableViewCellBackgroundColor;                         // TableViewGroupedCellBackgroundColor : Grouped 类型的 QMUITableView cell 背景色
    QMUICMI.tableViewGroupedCellSelectedBackgroundColor = TableViewCellSelectedBackgroundColor;         // TableViewGroupedCellSelectedBackgroundColor : Grouped 类型的 QMUITableView cell 点击时的背景色
    QMUICMI.tableViewGroupedCellWarningBackgroundColor = TableViewCellWarningBackgroundColor;           // tableViewGroupedCellWarningBackgroundColor : Grouped 类型的 QMUITableView cell 在提醒状态下的背景色
    QMUICMI.tableViewGroupedSectionHeaderFont = UIFontMake(12);                                         // TableViewGroupedSectionHeaderFont : Grouped 类型的 QMUITableView sectionHeader 里的文字字体
    QMUICMI.tableViewGroupedSectionFooterFont = UIFontMake(12);                                         // TableViewGroupedSectionFooterFont : Grouped 类型的 QMUITableView sectionFooter 里的文字字体
    QMUICMI.tableViewGroupedSectionHeaderTextColor = UIColorGrayDarken;                                 // TableViewGroupedSectionHeaderTextColor : Grouped 类型的 QMUITableView sectionHeader 里的文字颜色
    QMUICMI.tableViewGroupedSectionFooterTextColor = UIColorGray;                                       // TableViewGroupedSectionFooterTextColor : Grouped 类型的 QMUITableView sectionFooter 里的文字颜色
    QMUICMI.tableViewGroupedSectionHeaderAccessoryMargins = UIEdgeInsetsMake(0, 15, 0, 0);                     // TableViewGroupedSectionHeaderAccessoryMargins : Grouped 类型的 QMUITableView sectionHeader accessoryView 的间距
    QMUICMI.tableViewGroupedSectionFooterAccessoryMargins = UIEdgeInsetsMake(0, 15, 0, 0);                     // TableViewGroupedSectionFooterAccessoryMargins : Grouped 类型的 QMUITableView sectionFooter accessoryView 的间距
    QMUICMI.tableViewGroupedSectionHeaderDefaultHeight = UITableViewAutomaticDimension;                 // TableViewGroupedSectionHeaderDefaultHeight : Grouped 类型的 QMUITableView sectionHeader 的默认高度（也即没使用自定义的 sectionHeaderView 时的高度），注意如果不需要间距，请用 CGFLOAT_MIN
    QMUICMI.tableViewGroupedSectionFooterDefaultHeight = UITableViewAutomaticDimension;                 // TableViewGroupedSectionFooterDefaultHeight : Grouped 类型的 QMUITableView sectionFooter 的默认高度（也即没使用自定义的 sectionFooterView 时的高度），注意如果不需要间距，请用 CGFLOAT_MIN
    QMUICMI.tableViewGroupedSectionHeaderContentInset = UIEdgeInsetsMake(16, 15, 8, 15);                // TableViewGroupedSectionHeaderContentInset : Grouped 类型的 QMUITableView sectionHeader 里的内容的 padding
    QMUICMI.tableViewGroupedSectionFooterContentInset = UIEdgeInsetsMake(8, 15, 2, 15);                 // TableViewGroupedSectionFooterContentInset : Grouped 类型的 QMUITableView sectionFooter 里的内容的 padding
    
    #pragma mark - UIWindowLevel
    QMUICMI.windowLevelQMUIAlertView = UIWindowLevelAlert - 4.0;                // UIWindowLevelQMUIAlertView : QMUIModalPresentationViewController、QMUIPopupContainerView 里使用的 UIWindow 的 windowLevel
    
    #pragma mark - QMUILog
    QMUICMI.shouldPrintDefaultLog = YES;                                        // ShouldPrintDefaultLog : 是否允许输出 QMUILogLevelDefault 级别的 log
    QMUICMI.shouldPrintInfoLog = YES;                                           // ShouldPrintInfoLog : 是否允许输出 QMUILogLevelInfo 级别的 log
    QMUICMI.shouldPrintWarnLog = YES;                                           // ShouldPrintInfoLog : 是否允许输出 QMUILogLevelWarn 级别的 log
    
    #pragma mark - QMUIBadge
    
    QMUICMI.badgeBackgroundColor = UIColorRed;                                  // BadgeBackgroundColor : UIBarButtoItem、UITabBarItem 上的未读数的背景色
    QMUICMI.badgeTextColor = UIColorWhite;                                      // BadgeTextColor : UIBarButtoItem、UITabBarItem 上的未读数的文字颜色
    QMUICMI.badgeFont = UIFontBoldMake(11);                                     // BadgeFont : UIBarButtoItem、UITabBarItem 上的未读数的字体
    QMUICMI.badgeContentEdgeInsets = UIEdgeInsetsMake(2, 4, 2, 4);              // BadgeContentEdgeInsets : UIBarButtoItem、UITabBarItem 上的未读数与圆圈之间的 padding
    QMUICMI.badgeCenterOffset = CGPointMake(10, -9);                            // BadgeCenterOffset : UIBarButtoItem、UITabBarItem 上的未读数相对于 item 中心的偏移
    QMUICMI.badgeCenterOffsetLandscape = CGPointMake(10, -9);                   // BadgeCenterOffsetLandscape : UIBarButtoItem、UITabBarItem 上的未读数在横屏下相对于 item 中心的偏移
    
    QMUICMI.updatesIndicatorColor = UIColorRed;                                 // UpdatesIndicatorColor : UIBarButtoItem、UITabBarItem 上的未读红点的颜色
    QMUICMI.updatesIndicatorSize = CGSizeMake(7, 7);                            // UpdatesIndicatorSize : UIBarButtoItem、UITabBarItem 上的未读红点的大小
    QMUICMI.updatesIndicatorCenterOffset = CGPointMake(10, -9);                 // UpdatesIndicatorCenterOffset : UIBarButtoItem、UITabBarItem 上的未读红点相对于 item 中心的偏移
    QMUICMI.updatesIndicatorCenterOffsetLandscape = CGPointMake(10, -9);        // UpdatesIndicatorCenterOffsetLandscape : UIBarButtoItem、UITabBarItem 上的未读红点在横屏下相对于 item 中心的偏移
    
    #pragma mark - Others
    
    QMUICMI.automaticCustomNavigationBarTransitionStyle = YES;                   // AutomaticCustomNavigationBarTransitionStyle : 界面 push/pop 时是否要自动根据两个界面的 barTintColor/backgroundImage/shadowImage 的样式差异来决定是否使用自定义的导航栏效果
    QMUICMI.supportedOrientationMask = UIInterfaceOrientationMaskPortrait;           // SupportedOrientationMask : 默认支持的横竖屏方向
    QMUICMI.automaticallyRotateDeviceOrientation = NO;                          // AutomaticallyRotateDeviceOrientation : 是否在界面切换或 viewController.supportedOrientationMask 发生变化时自动旋转屏幕
    QMUICMI.statusbarStyleLightInitially = YES;                                  // StatusbarStyleLightInitially : 默认的状态栏内容是否使用白色，默认为 NO，也即黑色
    QMUICMI.needsBackBarButtonItemTitle = NO;                                   // NeedsBackBarButtonItemTitle : 全局是否需要返回按钮的 title，不需要则只显示一个返回image
    QMUICMI.hidesBottomBarWhenPushedInitially = YES;                             // HidesBottomBarWhenPushedInitially : QMUICommonViewController.hidesBottomBarWhenPushed 的初始值，默认为 NO，以保持与系统默认值一致，但通常建议改为 YES，因为一般只有 tabBar 首页那几个界面要求为 NO
    QMUICMI.preventConcurrentNavigationControllerTransitions = YES;             // PreventConcurrentNavigationControllerTransitions : 自动保护 QMUINavigationController 在上一次 push/pop 尚未结束的时候就进行下一次 push/pop 的行为，避免产生 crash
    QMUICMI.navigationBarHiddenInitially = NO;                                  // NavigationBarHiddenInitially : QMUINavigationControllerDelegate preferredNavigationBarHidden 的初始值，默认为NO
    QMUICMI.shouldFixTabBarTransitionBugInIPhoneX = YES;                         // ShouldFixTabBarTransitionBugInIPhoneX : 是否需要自动修复 iOS 11 下，iPhone X 的设备在 push 界面时，tabBar 会瞬间往上跳的 bug
    QMUICMI.shouldFixTabBarButtonBugForAll = YES;                                // ShouldFixTabBarButtonBugForAll : 是否要对 iOS 12.1.1 及以后的版本也修复手势返回时 tabBarButton 布局错误的 bug(issue #410)，默认为 NO
    QMUICMI.shouldPrintQMUIWarnLogToConsole = IS_DEBUG;                         // ShouldPrintQMUIWarnLogToConsole : 是否在出现 QMUILogWarn 时自动把这些 log 以 QMUIConsole 的方式显示到设备屏幕上
    QMUICMI.sendAnalyticsToQMUITeam = YES;                                      // SendAnalyticsToQMUITeam : 是否允许在 DEBUG 模式下上报 Bundle Identifier 和 Display Name 给 QMUI 统计用
    QMUICMI.dynamicPreferredValueForIPad = NO;                                  // DynamicPreferredValueForIPad : 当 iPad 处于 Slide Over 或 Split View 分屏模式下，宏 `PreferredValueForXXX` 是否把 iPad 视为某种屏幕宽度近似的 iPhone 来取值。
    if (@available(iOS 13.0, *)) {
        QMUICMI.ignoreKVCAccessProhibited = NO;                                     // IgnoreKVCAccessProhibited : 是否全局忽略 iOS 13 对 KVC 访问 UIKit 私有属性的限制
        QMUICMI.adjustScrollIndicatorInsetsByContentInsetAdjustment = NO;           // AdjustScrollIndicatorInsetsByContentInsetAdjustment : 当将 UIScrollView.contentInsetAdjustmentBehavior 设为 UIScrollViewContentInsetAdjustmentNever 时，是否自动将 UIScrollView.automaticallyAdjustsScrollIndicatorInsets 设为 NO，以保证原本在 iOS 12 下的代码不用修改就能在 iOS 13 下正常控制滚动条的位置。
    }
}

// QMUI 2.3.0 版本里，配置表新增这个方法，返回 YES 表示在 App 启动时要自动应用这份配置表。仅当你的 App 里存在多份配置表时，才需要把除默认配置表之外的其他配置表的返回值改为 NO。
- (BOOL)shouldApplyTemplateAutomatically {
    return YES;
}

@end
```
</p>
</details>

<details><summary>控制台内容</summary><p>

```
2020-01-03 10:02:50.254179+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.256341+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.256416+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.256477+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.256528+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.256577+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.256626+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.256672+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.257495+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.257545+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.257597+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.258076+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.258126+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.258176+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.259092+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.259141+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.259187+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.259501+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.259557+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.260284+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.260332+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.260384+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.260737+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.260787+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.260834+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.261172+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.261219+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.261267+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.261439+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.261717+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.261774+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.262105+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.262152+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.262277+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.262628+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.262852+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.263726+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.263774+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.263822+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.263872+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.263917+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.264429+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.264476+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.264521+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.264969+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.265018+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.265072+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.265122+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.265168+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.266171+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.266222+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.266268+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.267592+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.267638+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.267836+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.268580+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.268632+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.268684+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.269143+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.269199+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.269247+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.269633+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.269685+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.269737+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.269912+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.269962+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.271487+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.271541+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.271588+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.271659+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.271709+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.271756+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.273497+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.273541+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.274393+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.274445+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.274495+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.275672+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.275723+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.275776+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.275825+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.275992+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.276039+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.276085+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.276133+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.277549+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.277600+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.277648+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.277693+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.277739+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.278232+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.278282+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.278330+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.278377+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.278513+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.278566+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.279817+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.279864+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.279910+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.280202+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.280252+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.280301+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.280348+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.280398+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.280450+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.280563+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.281396+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.281445+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.281708+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.281759+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.281998+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.282048+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.282093+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.282477+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.282534+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.282617+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.282863+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.283005+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.283244+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.283393+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.283514+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.283684+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.283684+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的\346\227时机
2020-01-03 10:02:50.283734+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.283958+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.284091+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.284686+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.284743+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.284787+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.285134+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | ，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.285134+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | \347\252窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.285183+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.286070+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.286125+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288004+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288087+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288138+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288192+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288238+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288289+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288338+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288383+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288504+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288680+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288847+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.288994+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.289264+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.289315+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.290015+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.290071+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.290117+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.290165+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.290213+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.291133+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.291187+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.291337+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.291519+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.291565+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292168+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292218+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292266+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292479+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292532+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292632+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292683+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292735+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.292784+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.293090+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.293263+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.293393+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.293514+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.293624+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.293736+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.294029+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.294197+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.294334+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.294448+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.294554+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.295094+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.295260+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.295354+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296128+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296323+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296407+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296475+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296527+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296804+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296866+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296921+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.296980+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.297032+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.297084+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.297263+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.297311+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.297610+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.297666+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.297743+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298082+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298141+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298191+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298264+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298317+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298381+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298549+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298617+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298690+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298783+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298832+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.298893+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299051+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299104+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299170+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299413+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299476+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299530+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299578+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299630+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299697+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299750+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.299797+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.300510+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.300555+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.300605+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.300785+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.300835+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.300968+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.301033+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.301102+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.301153+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.301358+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.301409+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.301457+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.301576+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.301622+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.302459+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.302510+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.302869+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.302931+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.302992+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.303493+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.303542+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.303746+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.303801+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.303853+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.303901+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.303958+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304008+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304056+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304105+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304250+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304394+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304523+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304678+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304784+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.304913+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.305030+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.305141+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.305208+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.305415+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.305535+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.305675+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.305834+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.306101+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.306227+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.306357+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.306655+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.306707+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.306772+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.307048+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.307099+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.307707+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.307765+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.307819+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.308286+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.308335+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.308382+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.308748+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.308801+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.308848+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.308914+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.308966+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.309164+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.309225+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.309635+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.309689+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.309735+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310106+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310166+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310213+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310582+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310633+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310683+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310734+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310787+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310927+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.310975+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.311578+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.311629+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.311684+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.311736+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.311798+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.311864+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.312481+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.312567+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.312618+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.312668+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.312722+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.312794+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.312854+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.312900+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.313155+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.313205+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.313254+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.313453+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.313606+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.313882+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.313932+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.314046+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.314519+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.314635+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.314874+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.314920+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.315600+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.315654+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.315710+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.315834+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.315880+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.316072+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.316127+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.316171+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.316636+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.316681+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.317254+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.317308+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.317364+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.317416+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.317464+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.317542+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.317599+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.317650+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.318281+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.318327+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.318497+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.318548+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.318964+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.319014+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.319260+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.319308+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.319376+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.319686+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.319735+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.319789+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.320049+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.320106+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.320157+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.320279+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.320330+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.320379+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.320426+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.321050+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.321105+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.321506+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.321558+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.321604+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.321810+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.321869+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.321920+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.322216+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.322262+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.322477+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.322658+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.322719+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.323035+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.323086+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.323132+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.323529+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.323577+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.323973+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324036+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324086+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324086+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的\346\227时机
2020-01-03 10:02:50.324133+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324184+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324235+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324296+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324351+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324400+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324453+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324571+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324678+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324787+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.324898+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.325038+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.325243+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.325367+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.326584+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.326633+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.327452+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.327505+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.327551+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.327973+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328025+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328100+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328147+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328200+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328534+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328601+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328648+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328897+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.328965+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.329034+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.329699+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.329770+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.329999+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.330056+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.330135+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.330192+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.330241+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.330292+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.330933+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.330985+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.331072+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.331248+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.331296+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.331574+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.331623+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.331783+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.331833+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.331882+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.332688+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.332741+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.332786+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.333240+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.333355+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.333544+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.333692+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.333803+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.333950+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.334634+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.334692+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.334745+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.335275+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.335337+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.335385+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.335568+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.335622+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.335909+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
2020-01-03 10:02:50.336097+0800 alarm[54149:9106596] +[UIWindow(QMUIUserInterfaceStyleWillChangeNotification) load]_block_invoke_3:49 | QMUILogLevelWarn | UITraitCollection+QMUI | 窗口 : <UIWindow: 0x10583d7a0; frame = (0 0; 414 896); gestureRecognizers = <NSArray: 0x282fb9ef0>; layer = <UIWindowLayer: 0x282158580>> 设置了 overrideUserInterfaceStyle 属性，可能会影响 QMUIUserInterfaceStyleWillChangeNotification 的时机
warning: could not execute support code to read Objective-C class data in the process. This may reduce the quality of type information available.
考虑下面这种页面结构：
![tabbardarkmode](https://user-images.githubusercontent.com/11780294/71572966-82195b80-2b1c-11ea-8177-515a995a51fc.png)

一旦在 `visibleViewControlle `触发 **dark mode** 之后，`QMUIConfiguration`如下属性都可能改变:
```objc
@property(nonatomic, strong, nullable) UIImage  *tabBarBackgroundImage;
@property(nonatomic, strong, nullable) UIColor  *tabBarBarTintColor;
@property(nonatomic, strong, nullable) UIColor  *tabBarShadowImageColor;
@property(nonatomic, assign) UIBarStyle         tabBarStyle;
@property(nonatomic, strong, nullable) UIFont   *tabBarItemTitleFont;
@property(nonatomic, strong, nullable) UIColor  *tabBarItemTitleColor;
@property(nonatomic, strong, nullable) UIColor  *tabBarItemTitleColorSelected;
@property(nonatomic, strong, nullable) UIColor  *tabBarItemImageColor;
@property(nonatomic, strong, nullable) UIColor  *tabBarItemImageColorSelected;
```
拿 `tabBarStyle` 举例：
```objc
- (void)setTabBarStyle:(UIBarStyle)tabBarStyle {
    _tabBarStyle = tabBarStyle;
#ifdef IOS13_SDK_ALLOWED
    if (@available(iOS 13.0, *)) {
        self.tabBarAppearance.backgroundEffect = [UIBlurEffect effectWithStyle:tabBarStyle == UIBarStyleDefault ? UIBlurEffectStyleSystemChromeMaterialLight : UIBlurEffectStyleSystemChromeMaterialDark];
        [self updateTabBarAppearance];
    } else {
#endif
        [UITabBar appearance].barStyle = tabBarStyle;
        [self.appearanceUpdatingTabBarControllers enumerateObjectsUsingBlock:^(UITabBarController * _Nonnull tabBarController, NSUInteger idx, BOOL * _Nonnull stop) {
            tabBarController.tabBar.barStyle = tabBarStyle;
        }];
#ifdef IOS13_SDK_ALLOWED
    }
#endif
}
```
此时的`self.appearanceUpdatingTabBarControllers` 是空的，因为如下方式是拿不到我要的`UITabbarController`的：
```objc
- (NSArray <UIViewController *>*)qmui_existingViewControllersOfClass:(Class)class {
    NSMutableSet *viewControllers = [NSMutableSet set];
    ...
    if ([self isKindOfClass:UINavigationController.class]) {
        [viewControllers addObjectsFromArray:[((UINavigationController *)self).visibleViewController qmui_existingViewControllersOfClass:class]];
    }
    if ([self isKindOfClass:UITabBarController.class]) {
        [viewControllers addObjectsFromArray:[((UITabBarController *)self).selectedViewController qmui_existingViewControllersOfClass:class]];
    }
    ....
    return viewControllers.allObjects;
}
```

因此只能在`VC1 `内通过`qmui_themeDidChangeByManager`进行手动修改
```objc
- (void)qmui_themeDidChangeByManager:(QMUIThemeManager *)manager identifier:(__kindof NSObject<NSCopying> *)identifier theme:(__kindof NSObject *)theme
{
    [super qmui_themeDidChangeByManager:manager identifier:identifier theme:theme];
    
    ....
    
    //  需要手动刷新样式
    UIImage *tabBarBackgroundImage = [identifier isEqualToString:WEThemeIdentifierDark] ? [[UIImage qmui_imageWithColor:UIColorMake(249, 249, 249)] resizableImageWithCapInsets:UIEdgeInsetsMake(1, 1, 1, 1)] : nil;
    UIColor *tabBarBarTintColor = nil;
    UIColor *tabBarShadowImageColor = UIColorSeparator;
    UIBarStyle tabBarStyle = [identifier isEqualToString:WEThemeIdentifierDark] ? UIBarStyleBlack : UIBarStyleDefault;
    UIFont *tabBarItemTitleFont = nil;
    UIColor *tabBarItemTitleColor = UIColorGray6;
    UIColor *tabBarItemTitleColorSelected = DefaultThemeColor;
    UIColor *tabBarItemImageColor = UIColorGray6;
    UIColor *tabBarItemImageColorSelected = DefaultThemeColor;
    
    self.tabBar.backgroundImage = tabBarBackgroundImage;
    if (@available(iOS 13.0, *)) {
        UITabBarAppearance *tabBarAppearance = [[UITabBarAppearance alloc] init];
        [tabBarAppearance configureWithDefaultBackground];
        tabBarAppearance.backgroundColor = tabBarBarTintColor;
        tabBarAppearance.shadowColor = tabBarShadowImageColor;
        tabBarAppearance.backgroundEffect = [UIBlurEffect effectWithStyle:tabBarStyle == UIBarStyleDefault ? UIBlurEffectStyleSystemChromeMaterialLight : UIBlurEffectStyleSystemChromeMaterialDark];
        [tabBarAppearance qmui_applyItemAppearanceWithBlock:^(UITabBarItemAppearance * _Nonnull itemAppearance) {
            NSMutableDictionary<NSAttributedStringKey, id> *attributes = itemAppearance.normal.titleTextAttributes.mutableCopy;
            attributes[NSFontAttributeName] = tabBarItemTitleFont;
            attributes[NSForegroundColorAttributeName] = tabBarItemTitleColor;
            itemAppearance.normal.titleTextAttributes = attributes.copy;
            attributes[NSForegroundColorAttributeName] = tabBarItemTitleColorSelected;
            itemAppearance.selected.titleTextAttributes = attributes.copy;
            itemAppearance.normal.iconColor = tabBarItemImageColor;
            itemAppearance.selected.iconColor = tabBarItemImageColorSelected;
        }];
        self.tabBar.standardAppearance = tabBarAppearance;
    } else {
        UITabBar.appearance.backgroundImage = tabBarBackgroundImage;
        UITabBar.appearance.barTintColor = tabBarBarTintColor;
        UITabBar.appearance.shadowImage = [UIImage qmui_imageWithColor:tabBarShadowImageColor size:CGSizeMake(1, PixelOne) cornerRadius:0];
        UITabBar.appearance.barStyle = tabBarStyle;
        NSMutableDictionary<NSString *, id> *textAttributes = [[NSMutableDictionary alloc] initWithDictionary:[[UITabBarItem appearance] titleTextAttributesForState:UIControlStateNormal]];
        if (tabBarItemTitleFont) {
            textAttributes[NSFontAttributeName] = tabBarItemTitleFont;
        }
        if (tabBarItemTitleColor) {
            textAttributes[NSForegroundColorAttributeName] = tabBarItemTitleColor;
        }
        NSMutableDictionary<NSString *, id> *selected_textAttributes = [[NSMutableDictionary alloc] initWithDictionary:[[UITabBarItem appearance] titleTextAttributesForState:UIControlStateSelected]];
        if (tabBarItemTitleColorSelected) {
            selected_textAttributes[NSForegroundColorAttributeName] = tabBarItemTitleColorSelected;
        }
        [UITabBarItem.appearance setTitleTextAttributes:textAttributes forState:UIControlStateNormal];
        [UITabBarItem.appearance setTitleTextAttributes:selected_textAttributes forState:UIControlStateSelected];
        UITabBar.appearance.tintColor = tabBarItemImageColorSelected;
        self.tabBar.barStyle = tabBarStyle;
        self.tabBar.barTintColor = tabBarBarTintColor;
        self.tabBar.shadowImage = [UIImage qmui_imageWithColor:tabBarShadowImageColor size:CGSizeMake(1, PixelOne) cornerRadius:0];
        [self.tabBar.items enumerateObjectsUsingBlock:^(UITabBarItem * _Nonnull obj, NSUInteger idx, BOOL * _Nonnull stop) {
            [obj setTitleTextAttributes:textAttributes forState:UIControlStateNormal];
            [obj setTitleTextAttributes:selected_textAttributes forState:UIControlStateSelected];
            [obj qmui_updateTintColorForiOS12AndEarlier:tabBarItemImageColor];
        }];
        self.tabBar.tintColor = tabBarItemImageColorSelected;
    }
}

```

需要手动修改的东西非常多，也都是`QMUIConfiguration`里复制出来的重复代码...能否将`QMUIConfiguration`内对于 `UITabbar`修改的代码开放出来，比如抽一个方法到头文件，方便一些特殊页面结构快速修改

**Bug 表现**
问题的具体描述
QMUITableViewCell.m 第103行到112行
if (hasCustomTextLabelEdgeInsets) {
            **textLabelFrame.origin.x += self.textLabelEdgeInsets.left - self._imageEdgeInsets_.right;**
            textLabelFrame.origin.y += self.textLabelEdgeInsets.top - self.textLabelEdgeInsets.bottom;
            textLabelFrame.size.width = fmin(CGRectGetWidth(textLabelFrame), CGRectGetWidth(self.contentView.bounds) - CGRectGetMinX(textLabelFrame));
        }
        if (hasCustomDetailLabelEdgeInsets) {
            **detailTextLabelFrame.origin.x += self.detailTextLabelEdgeInsets.left - self._detailTextLabelEdgeInsets_.right;**
            detailTextLabelFrame.origin.y += self.detailTextLabelEdgeInsets.top - self.detailTextLabelEdgeInsets.bottom;
            detailTextLabelFrame.size.width = fmin(CGRectGetWidth(detailTextLabelFrame), CGRectGetWidth(self.contentView.bounds) - CGRectGetMinX(detailTextLabelFrame));
        }
加粗代码中的斜体bug，
个人认为detailTextLabelFrame.origin.x += self.detailTextLabelEdgeInsets.left - self.detailTextLabelEdgeInsets.right;
应该是detailTextLabelFrame.origin.x += self.detailTextLabelEdgeInsets.left - self.imageEdgeInsets.right;
不然会导致同时设置了 cell.detailTextLabelEdgeInsets = UIEdgeInsetsMake(0, 30, 0, 95); 的左右边距后detailTextLabel超出视图。
但是 接着又发现设置了右边距没有效果，detailTextLabel宽度是没有减去edge.right,不知是故意忽略右边距还是什么

**Bug 表现**
问题的具体描述
`include of non-modular header inside framework module`
**截图**
Bug 现场的界面截图，或者 Xcode 控制台的错误信息截图，有问题的代码截图

**如何重现**
1. ...
2. ...

**预期的表现**
正常情况下，应该是什么表现

**其他信息**
 - 设备: [例如模拟器、iPhone、iPad]
 - iOS 版本: [iOS 13.x]
 - Xcode 版本: [Xcode 11.x]
 - QMUI 版本: [4.x.x]

```
    - ERROR | xcodebuild:  /Users/XIN/Library/Developer/Xcode/DerivedData/App-enogpuztdirpgkfwwmixvaokccvp/Build/Products/Release-iphonesimulator/KDDChatModule/KDDChatModule.framework/Headers/KDDChatTextView.h:9:9: error: include of non-modular header inside framework module 'KDDChatModule.KDDChatTextView': '/Users/XIN/Library/Developer/Xcode/DerivedData/App-enogpuztdirpgkfwwmixvaokccvp/Build/Products/Release-iphonesimulator/QMUIKit/QMUIKit.framework/Headers/QMUITextView.h' [-Werror,-Wnon-modular-include-in-framework-module]
```

私有 Pod 依赖了 QMUIKit, 私有  pod 以 static framework 形式发版，lint 验证不过，显示 QMUIKit 不支持 modular framework
您好！
我在控制器里创建了一个QMUISearchController，我的控制器不需要显示searchBar，所以我没有设置列表的tableHeaderView = searchController.searchBar
我希望通过点击一个按钮触发进入搜索状态,我发现调用setActive:(BOOL)active animated:(BOOL)animated这个方法，无法进入。
请问这种情况，我是否必须设置searchBar，才能使用setActive方法吗?
**Bug 表现**
参见视频
[1576734249430697.mp4.zip](https://github.com/Tencent/QMUI_iOS/files/3982095/1576734249430697.mp4.zip)

**如何重现**
1.  使用 QMUI Demo，以 Present 形式打开 QDThemeViewController 
2. 关闭自动响应 iOS 13 系统样式
3. 切换主题即可复现

**预期的表现**
QMUI 提供的主题切换应该与系统深色模式的切换行为保持一致

**其他信息**
 - 设备: 模拟器、iPhone
 - iOS 版本: [iOS 13.3]
 - Xcode 版本: [Xcode 11.3]
 - QMUI 版本: [4.0.4]

**可能的问题**

QMUI 提供的主题切换是从 `window.rootViewController.view` 开始遍历所有的 View并修改主题，但 present 出的页面并不在在 `window.rootViewController.view` hierarchy 内，因此导致 present 出的页面没有被修改
 
```objc
- (void)notifyThemeChanged {
    [[NSNotificationCenter defaultCenter] postNotificationName:QMUIThemeDidChangeNotification object:self];
    
    [UIApplication.sharedApplication.windows enumerateObjectsUsingBlock:^(__kindof UIWindow * _Nonnull window, NSUInteger idx, BOOL * _Nonnull stop) {
        if (!window.hidden && window.alpha > 0.01 && window.rootViewController) {
            [window.rootViewController qmui_themeDidChangeByManager:self identifier:self.currentThemeIdentifier theme:self.currentTheme];
            if (window.rootViewController.isViewLoaded) {
//                [window.rootViewController.view _qmui_themeDidChangeByManager:self identifier:self.currentThemeIdentifier theme:self.currentTheme shouldEnumeratorSubviews:YES];
                [window _qmui_themeDidChangeByManager:self identifier:self.currentThemeIdentifier theme:self.currentTheme shouldEnumeratorSubviews:YES];
            }
        }
    }];
}
```
**Bug 表现**
项目中集成了QMUI后发现tabbaritem选中状态的文字显示不全了，默认显示没问题，当选中一次后就会变成'...'



**截图**
<img src="https://s2.ax1x.com/2019/12/14/Q2Od2Q.png" alt="Q2Od2Q.png" border="0" />



**预期的表现**
文字正常显示

**其他信息**
 - 设备: 6s
 - iOS 版本:13.2.3
 - Xcode 版本:11.3
 - QMUI 版本: 4.0.4