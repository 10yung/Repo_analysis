
接入方：hostport固定格式需要改为:
```
hostPort := cfg.Adapters[cfg.App+"."+cfg.Server+".GoWebObjAdapter"].Endpoint.Host + ":" + strconv.Itoa(int(port))
zipkintracing.Init("http://127.0.0.1:9411/api/v2/spans", true, true, true, hostPort, cfg.App+"."+cfg.Server)
```
*.tars 文件定义如下。
int updateById(int id, dataInfo DataInfo);

我的服务提供方的代码样例大致如下 
               
func (ci *ServiceImpl) UpdateById(ctx context.Context, Id int32, DataInfo *res.DataInfo) (ret int32, err error) {
   return PARAM_ERR, errors.New("param[ModifyUser] invalid")
}

我本意是  将   PARAM_ERR = -1 返回给调用方， 
实际情况是   调用方在调用  这段代码会  hold住 直至超时

如果将代码    errors.New("param[ModifyUser] invalid")   改成  nil ，即如下 

func (ci *ServiceImpl) UpdateById(ctx context.Context, Id int32, DataInfo *res.DataInfo) (ret int32, err error) {
   return PARAM_ERR, nil
}

 则 调用方 不会hold住至超时，而是 得到   PARAM_ERR = -1的结果


个人觉得这个现象不合理



merge to dev

util/rogger:
    1.showing func name without pkg name when logLevel is debug;
    2.supported colored logLevel string when use console writer;

---
util/rogger:
  1 debug日志级别下，显示函数的名字(移除了函数包名）
  2 在使用console writer的情况下，logger level 彩色高亮显示

go 1.13版本的test工具 修改了flag的使用方式(https://github.com/golang/go/commit/fbc6a972226f889d2ab1150468755615098ee80f)，与application.go的flag会出现冲突。
导致单元测试失败
Usage of ./add.test:
  -config string
    	init config path

另外自行创建服务使用flag包，也无法使用tars包，存在同样的问题。

建议修改application的flag使用方式。
setting.go中MaxInvoke=0，且项目中没有其它地方修改该值，起AdminObj的时候使用到该参数。

tcpHandle.Handle()中关闭时直接调用了gpool.Release()方法，并没有判断空值的操作

代码追踪到只有一处对fpool进行了初始化，并且是在MaxInvoke>0的时候才会初始化。

请问这样是不是存在空指针隐？

是否应该上报 url.path?
发现采用 TarsGo client 向 TarsCpp server 请求时，如果并发突增，会导致出现 TARSSERVERQUEUETIMEOUT 错误。但此时的 msg.Resp.SResultDesc 是空的，导致调用方调用 err.Error() 只能拿到 ""，这会让程序员非常困惑。
I am developing my app based on TarsGo.
Now I need to get the config address and notify address in ServerConfig, but current version of TarsGo does not export such two field.

Can TarsGo exports this two field of ServerConfig or add a method to get the value of them ? The latter may be better.