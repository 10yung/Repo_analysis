#### Description of what you did:

Adding more reserved model name words relating to SQL specific syntax. Using the following list to grab a few that might be used to create models: https://docs.actian.com/psql/psqlv13/index.html#page/sqlref%2Fsqlkword.htm%23ww79654

#### My PR is a:

- [ ] üí• Breaking change
- [x] üêõ Bug fix #4983
- [ ] üíÖ Enhancement
- [ ] üöÄ New feature

#### Main update on the:

- [ ] Admin
- [ ] Documentation
- [ ] Framework
- [x] Plugin

#### Manual testing done on the following databases:

- [ ] Not applicable
- [ ] MongoDB
- [x] MySQL
- [ ] Postgres
- [x] SQLite

**Describe the bug**
- Time field shows value as Invalid Date on List view
- DateTime field shows only date on List view

**Steps to reproduce the behavior**
1. Create model that contains time and datetime fields
2. Add new entry with any values
3. Go back to list view

**Expected behavior**
Time fields shows time instead of trying to be parse as date.
DateTime fields shows date and time

**System**
- Node.js version: 12.14.1
- NPM version: 6.13.4
- Strapi version: beta 18.4
- Database: sqlite
- Operating system: Mac OS High Sierra

<!--
Hello üëã Thank you for submitting a pull request.

To help us merge your PR, make sure to follow the instructions below:
- Create or update the documentation.
- Create or update the tests.
- Refer to the issue you are closing in the PR description - fix #issue
- Specify if the PR is in WIP (work in progress) state or ready to be merged
-->

#### Description of what you did:

RFC-822 doesn't require double quotes around the descriptive name in an email address.  Currently emails from Strapi arrive with the sender name wrapped in unnecessary double quotes; this fixes the sender descriptive name to comply with RFC-822.

#### My PR is a:

- [ ] üí• Breaking change
- [x] üêõ Bug fix
- [ ] üíÖ Enhancement
- [ ] üöÄ New feature

#### Main update on the:

- [ ] Admin
- [ ] Documentation
- [ ] Framework
- [x] Plugin

#### Manual testing done on the following databases:

- [x] Not applicable
- [ ] MongoDB
- [ ] MySQL
- [ ] Postgres
- [ ] SQLite

<!--
Hello üëã Thank you for submitting a pull request.

To help us merge your PR, make sure to follow the instructions below:
- Create or update the documentation.
- Create or update the tests.
- Refer to the issue you are closing in the PR description - fix #issue
- Specify if the PR is in WIP (work in progress) state or ready to be merged
-->

#### Description of what you did:

<!--
Replace [ ] by [x] to check these checkboxes!
-->

#### My PR is a:

- [ ] üí• Breaking change
- [ ] üêõ Bug fix
- [x] üíÖ Enhancement
- [ ] üöÄ New feature

#### Main update on the:

- [ ] Admin
- [ ] Documentation
- [ ] Framework
- [x] Plugin

#### Manual testing done on the following databases:

- [x] Not applicable
- [ ] MongoDB
- [ ] MySQL
- [ ] Postgres
- [ ] SQLite


Addresses #4993,  I did not add the `send_each_at` parameter as it is not present in either the MailData interface definition or the `/mail/send` v3 API endpoint. It is the SMTP API which allows this parameter.
<!--
Hello üëã Thank you for submitting a pull request.

To help us merge your PR, make sure to follow the instructions below:
- Create or update the documentation.
- Create or update the tests.
- Refer to the issue you are closing in the PR description - fix #issue
- Specify if the PR is in WIP (work in progress) state or ready to be merged
-->

#### Description of what you did:

Fixed a small typo (changed `compatble` to `compatible`)

#### My PR is a:

- [ ] üí• Breaking change
- [x] üêõ Bug fix
- [ ] üíÖ Enhancement
- [ ] üöÄ New feature

#### Main update on the:

- [ ] Admin
- [x] Documentation
- [ ] Framework
- [ ] Plugin

#### Manual testing done on the following databases:

- [x] Not applicable
- [ ] MongoDB
- [ ] MySQL
- [ ] Postgres
- [ ] SQLite

<!--
Hello üëã Thank you for submitting a pull request.

To help us merge your PR, make sure to follow the instructions below:
- Create or update the documentation.
- Create or update the tests.
- Refer to the issue you are closing in the PR description - fix #issue
- Specify if the PR is in WIP (work in progress) state or ready to be merged
-->

#### Description of what you did:

<!--
Replace [ ] by [x] to check these checkboxes!
-->

#### My PR is a:

- [ ] üí• Breaking change
- [ ] üêõ Bug fix
- [ ] üíÖ Enhancement
- [ ] üöÄ New feature

#### Main update on the:

- [ ] Admin
- [ ] Documentation
- [ ] Framework
- [ ] Plugin

#### Manual testing done on the following databases:

- [ ] Not applicable
- [ ] MongoDB
- [ ] MySQL
- [ ] Postgres
- [ ] SQLite

**Describe the bug**
When using GraphQL, you are not able to pull a single Role by ID.

**Steps to reproduce the behavior**
Run the following in http://localhost:1337/graphql:

```
query {
  role(id: "5e1e5392793daa2610f139d8") {
    name
    description
  }
}
```

You get the following error: 

```
"message": "Cannot destructure property 'id' of 'ctx.params' as it is undefined.",
      "locations": [
        {
          "line": 2,
          "column": 3
        }
      ],
      "path": [
        "role"
      ],
      "extensions": {
        "code": "INTERNAL_SERVER_ERROR",
        "exception": {
          "stacktrace": [
```

Here is the stack trace directly: 
```
"TypeError: Cannot destructure property 'id' of 'ctx.params' as it is undefined.",
            "    at Object.getRole (c:\\projects\\projectName\\node_modules\\strapi-plugin-users-permissions\\controllers\\UsersPermissions.js:102:13)",
            "    at resolver (c:\\projects\\projectName\\node_modules\\strapi-plugin-users-permissions\\config\\schema.graphql:71:42)",
            "    at c:\\projects\\projectName\\node_modules\\strapi-plugin-graphql\\services\\Query.js:300:25",
            "    at processTicksAndRejections (internal/process/task_queues.js:97:5)"
```

**Expected behavior**
Return the role back to you with specified information.


**System**
- Node.js version: v13.5
- NPM version: 6.13.6
- Strapi version: v3.0.0-beta.18.4
- Database: Mongo
- Operating system: Windows 10


**Describe the bug**

After upgrading to beta.18.4, when starting the server, this message appears:

```
[2020-01-17T09:52:39.224Z] error Migration failed
[2020-01-17T09:52:39.225Z] error error: operator class "gin_trgm_ops" does not accept data type numeric
    at Connection.parseE (/fakepath/node_modules/pg/lib/connection.js:606:13)
    at Connection.parseMessage (/fakepath/node_modules/pg/lib/connection.js:403:19)
    at TLSSocket.<anonymous> (/fakepath/node_modules/pg/lib/connection.js:123:22)
    at TLSSocket.emit (events.js:223:5)
    at addChunk (_stream_readable.js:309:12)
    at readableAddChunk (_stream_readable.js:290:11)
    at TLSSocket.Readable.push (_stream_readable.js:224:10)
    at TLSWrap.onStreamRead (internal/stream_base_commons.js:181:23)
```

When adding `console.log(fields);` to pg/lib/connection.js, l.603, I get this before the above error:

```
{
  S: 'ERROR',
  V: 'ERROR',
  C: '42704',
  M: 'constraint "upload_file_size_unique" of relation "upload_file" does not exist',
  F: 'tablecmds.c',
  L: '8576',
  R: 'ATExecDropConstraint'
}
{
  S: 'ERROR',
  V: 'ERROR',
  C: '42704',
  M: 'constraint "upload_file_updated_at_unique" of relation "upload_file" does not exist',
  F: 'tablecmds.c',
  L: '8576',
  R: 'ATExecDropConstraint'
}
{
  S: 'ERROR',
  V: 'ERROR',
  C: '42704',
  M: 'constraint "upload_file_created_at_unique" of relation "upload_file" does not exist',
  F: 'tablecmds.c',
  L: '8576',
  R: 'ATExecDropConstraint'
}
{
  S: 'ERROR',
  V: 'ERROR',
  C: '42804',
  M: 'operator class "gin_trgm_ops" does not accept data type numeric',
  F: 'indexcmds.c',
  L: '1392',
  R: 'ResolveOpClass'
}
```

**Steps to reproduce the behavior**
1. Create a project with strapi@3.0.0-beta.18.3, create a DB and initiate it
2. Upgrade to 3.0.0-beta.18.4
3. Run
4. See error

**Expected behavior**
No error

**System**
- Node.js version: 12.14.1
- NPM version: 6.13.4
- Strapi version: 3.0.0-beta.18.4
- Database: postgresql
- Operating system: MacOS

Thanks in advance!

<!--
Hello üëã Thank you for submitting an issue.

Before you start, please make sure your issue is understandable and reproducible.
To make your issue readable make sure you use valid Markdown syntax.

https://guides.github.com/features/mastering-markdown/
-->

## **Describe the bug**
Apollo breaks when it tries to query strapi for a dynamic field with multiple types. This problem seems to occur only using apollo because in graphql sandbox everything works fine

## **Steps to reproduce the behaviour**
### Strapi (Backend)
1. Go to Strapi admin panel with qraphql plugin instaled
2. Create a dynamic field with more than 1 component

### Nuxt.js (Frontend)
1. Send query using apollo to strapi for dynamic field
2. See errors about missing fields

## **Expected behavior**
Apollo gets an array of fields with multiple types from the dynamic field

## **Screenshots**
![Screenshot from 2020-01-16 16-28-29](https://user-images.githubusercontent.com/27703720/72539260-54077b80-387f-11ea-958a-37340e0332a6.png)
![Screenshot from 2020-01-16 16-46-12](https://user-images.githubusercontent.com/27703720/72539547-c0827a80-387f-11ea-9077-de4292f33b01.png)

## **System**
### Strapi (Backend)
- Node.js version: v12.13.1
- NPM version: 6.13.4
- Strapi version: 3.0.0-beta.18.4
- Database: SQLite
- Operating system: Linux

### Nuxt.js (Frontend)
- "nuxt": "^2.9.2",
- "graphql": "^14.5.8",
- "graphql-tag": "^2.10.1",
- "@nuxtjs/apollo": "^4.0.0-rc18",



## **Additional context**
It seems to be more of apollo's bug than strapi's tho. All solutions I found revolves around adding apollo [`IntrospectionFragmentMatcher`](https://www.apollographql.com/docs/react/data/fragments/#fragments-on-unions-and-interfaces) to the backend but I have no idea how to correctly implement it in strapi. :(

This issue makes dynamic fields with graphql/apollo virtually unusable so I think it would be good if someone would look into it, and maybe made some tutorial or mention in docs how to set up dynamic fields correctly in strapi with qraphql :)
<!--
Hello üëã Thank you for submitting an issue.

Before you start, please make sure your issue is understandable and reproducible.
To make your issue readable make sure you use valid Markdown syntax.

https://guides.github.com/features/mastering-markdown/
-->

**Describe the bug**
I am developing a shift management app. Currently, there is only one new Content-Type which is like this:
![jobs](https://user-images.githubusercontent.com/55078059/72473142-bbc1b600-37ee-11ea-9b13-8f98acf496c3.png)

Important note: **Creator** is a one-to-one relationship with User and **Enrollers** is a one-to-many relationship with User

I make multiple instances for Users and Jobs

And here is the result if I get all jobs ##Request1
![3jobsintotal](https://user-images.githubusercontent.com/55078059/72475384-73f15d80-37f3-11ea-92b1-50037897b349.png)

And here is the result if I get all job which includes "trungemployee" in enrollers ##Request2
![trungemployeejobs](https://user-images.githubusercontent.com/55078059/72475691-1c9fbd00-37f4-11ea-92f5-0dd4ba07a682.png)
This should not be correct here as all Jobs Enrollers has the user with username trungemployee

Even funnier this is the result if I get all job which includes "trinhemployee" in enrollers ##Request3
![trinhemployeejob](https://user-images.githubusercontent.com/55078059/72475871-81f3ae00-37f4-11ea-9659-2af2aeb27546.png)
The only one result does not even have trinhemployee as the employee

Additionally, I tried the test with **enrollers id 1** ##Request4 
![enrolleridjob](https://user-images.githubusercontent.com/55078059/72476246-6c32b880-37f5-11ea-8183-40a4e25d6200.PNG)
This should show nothing as I dont have jobs with enrollers id equal to 1

One final test, I tried to test it with **enrollers id 4** ##Request5
![enrollerid4](https://user-images.githubusercontent.com/55078059/72476671-73a69180-37f6-11ea-9f11-4650ab47a0c4.PNG)
Is it referencing **job id** instead of **enrollers id** here?

Final note: all queries using **creator** in **where** with the above conditions result in expected behaviors. So I am not sure what is the case with **enrollers**.

**Steps to reproduce the behavior**
You can make the same Content-Type, and some instances to reproduce this issue.

**Expected behavior**
1/ Expect ##Request2 to response jobs with id 1, 2, 4 (right now none are responded)
2/ Expect ##Request3 to response jobs with id 1 and 2 (right now job id 4 is responded)
3/ Expect ##Request4 to response jobs with no jobs (right now job id 1 is responded)
3/ Expect ##Request5 to response jobs with id 1, 2(right now job id 4 is responded)

**Screenshots**
Provided above

**Code snippets**
Provided above

**System**
- Node.js version: v10.15.3
- NPM version:6.4.1
- Strapi version: "3.0.0-beta.18.4",
- Database: sqlite
- Operating system: Windows 10

**Additional context**
Add any other context about the problem here.
