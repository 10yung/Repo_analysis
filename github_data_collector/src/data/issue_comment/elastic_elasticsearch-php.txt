### Summary of problem or feature request
ConnectionInterface::performRequest method signature does not match Connection::performRequest method signature.

This causes mocking the class with Phake to fail.


### Code snippet of problem
ConnectionInterface.php
```php
    /**
     * @param  null $body
     * @return mixed
     */
    public function performRequest(string $method, string $uri, array $params = [], $body = null, array $options = [], Transport $transport = null);
```

Connection.php
```php
    /**
     * @param  string    $method
     * @param  string    $uri
     * @param  array     $params
     * @param  null      $body
     * @param  array     $options
     * @param  Transport $transport
     * @return mixed
     */
    public function performRequest(string $method, string $uri, ?array $params = [], $body = null, array $options = [], Transport $transport = null)
    {
       //  ....
    }
```


### System details

- PHP Version: 7.1
- ES-PHP client version: 7.4 and 7.5
### Summary of problem or feature request

The file SmartSerializer.php encode $data into a json string if this variable is an array. If it is an empty array, you transform it into '{}' and that's ok (line 38 of this file). But sometimes, if it's not empty, you can have inside a part which is an empty array, like in Global Aggragations:
```
{
 ...,
  "aggs": {
    "all_documents": {
      "global": {},   <---- ES waits this value, but json_encode will return "global": []
      "aggs": {
        ...
      }
    }
  },
  ...
}
```
I think you should replace each string '[]' into '{}'.

Thanks a lot

### System details

- PHP Version 7.3
- ES-PHP client version 7.4
- Elasticsearch version 7.4
### Summary of problem or feature request

<!-- Please describe your problem/feature request here. -->
Hello! I always get this exception, but only when use putMapping().
`$client->indices()->exists($params)`, `$client->indices()->create($params)`, `$client->indices()->delete($params)`, `$client->indices()->getMapping($params)`
work as expected, but when try `$client->indices()->putMapping($params)`, I've got this error message: 

> Elasticsearch\Common\Exceptions\NoNodesAvailableException  : No alive nodes found in your cluster


### System details

<!--
Please include these details about your system!
If they are omitted, the ticket will be deprioritized
over other users requests/tickets.
-->

- Operating System: CentOS 7
- PHP Version: 7.2.22
- Elasticsearch version: 7.4.2 (official docker container)
We need to use namespace for native function in all the code base. This is for performance reason. 
Read this [blog post](https://veewee.github.io/blog/optimizing-php-performance-by-fq-function-calls/) for more information.
### Summary of problem or feature request

If we index documents one by one and set the `body` parameter to be a serialized string, elastic client's serializer is happy with that and returns it as is, however, I can't find a way to do this for bulk requests because it seems bulk requests only accept associative array for document body object.


### Code snippet of problem
Example from: https://www.elastic.co/guide/en/elasticsearch/client/php-api/current/indexing_documents.html#_bulk_indexing
```php
    $params['body'][] = [
        'index' => [
            '_index' => 'my_index',
            '_id'    => $i
        ]
    ];

    // Currently:
    $params['body'][] = [
        'my_field'     => 'my_value',
        'second_field' => 'some more values'
    ];

    // Proposed:
    $params['body'][] = '{}' // serialized string - won't work - parse error - expected object
    $params['body'][] = [ (object) '{}' ] // Won't work, casting the parent array also won't work

```

```php
// Indexing one by one works with serialized data
 $client
            ->index(
                [
                    'index' => $index,
                    'id' => $id,
                    'body' => '{}' // This works
                ]
            );
```

-->

### System details

- Operating System: Debian
- PHP Version: 7.3
- ES-PHP client version: 7.4
- Elasticsearch version: 7.4
### Summary of problem or feature request

<!-- Please describe your problem/feature request here. -->
I want partial string match in full text search.

### Code snippet of problem
My current code look like this
'body' => [
                    'query' => [
                        'match' => [
                            '_all' => "$string"
                        ]
                    ]
                ]

Example : If I user **transfer** word as search then it will search only for **transfer** , I want like **transferring** also come in search result

As per documentation I had tried 
 'match' => [
                            '_all' => "*.$string.*"
                        ]
But its not working.

Any solution for this?
<!--
If applicable, please include a copy of your code
which triggers the suspected bug.

You may use the markdown php code tags to format your paste:

```php
$params = ['foo'];
```
-->

### System details

<!--
Please include these details about your system!
If they are omitted, the ticket will be deprioritized
over other users requests/tickets.
-->

- Operating System
- PHP Version
- ES-PHP client version
- Elasticsearch version
### Summary of problem or feature request

I can see that in v.7 the port has disappeared from the host. After further digging I see it's been specifically requested and fixed in https://github.com/elastic/elasticsearch-php/issues/548 & https://github.com/elastic/elasticsearch-php/pull/782

Perhaps it is a valid use case (although I don't really understand it), but the change seems to be causing problems elsewhere - now the port is missing from the log messages too.

### Code snippet of problem

Here is an example of what is sent to the logger now:
```
array(8) {
  ["message"]=>
  string(66) "curl -XDELETE 'http://127.0.0.1/sineflow-esb-test-bar?pretty=true'"
  ["context"]=>
  array(0) {
  }
  ["level"]=>
  int(200)
  ["level_name"]=>
  string(4) "INFO"
  ["channel"]=>
  string(10) "sfes_trace"
  ["datetime"]=>
  object(DateTime)#108 (3) {
    ["date"]=>
    string(26) "2019-08-03 12:53:10.801795"
    ["timezone_type"]=>
    int(3)
    ["timezone"]=>
    string(15) "Europe/Helsinki"
  }
  ["extra"]=>
  array(1) {
    ["backtrace"]=>
    NULL
  }
  ["formatted"]=>
  string(112) "[2019-08-03 12:53:10] sfes_trace.INFO: curl -XDELETE 'http://127.0.0.1/sineflow-esb-test-bar?pretty=true' [] []
"
}
array(8) {
  ["message"]=>
  string(9) "Response:"
  ["context"]=>
  array(5) {
    ["response"]=>
    array(1) {
      ["acknowledged"]=>
      bool(true)
    }
    ["method"]=>
    string(6) "DELETE"
    ["uri"]=>
    string(38) "http://127.0.0.1/sineflow-esb-test-bar"
    ["HTTP code"]=>
    int(200)
    ["duration"]=>
    float(0.026726)
  }
  ["level"]=>
  int(100)
  ["level_name"]=>
  string(5) "DEBUG"
  ["channel"]=>
  string(10) "sfes_trace"
  ["datetime"]=>
  object(DateTime)#111 (3) {
    ["date"]=>
    string(26) "2019-08-03 12:53:10.802988"
    ["timezone_type"]=>
    int(3)
    ["timezone"]=>
    string(15) "Europe/Helsinki"
  }
  ["extra"]=>
  array(1) {
    ["backtrace"]=>
    NULL
  }
  ["formatted"]=>
  string(189) "[2019-08-03 12:53:10] sfes_trace.DEBUG: Response: {"response":{"acknowledged":true},"method":"DELETE","uri":"http://127.0.0.1/sineflow-esb-test-bar","HTTP code":200,"duration":0.026726} []
"
}
```

Based on this information, I should be able to type in the terminal:
```
curl -XDELETE 'http://127.0.0.1/sineflow-esb-test-bar?pretty=true'
```
But of course this doesn't work, as it's trying to reach port 80, instead of 9200

Please merge the [elasticsearch-x-pack-php](https://github.com/elastic/elasticsearch-x-pack-php) repository into the Client.
FIX [Error: Cannot use object of type Elasticsearch\Common\Exceptions\Missing404Exception as array](https://github.com/elastic/elasticsearch-php/issues/831)
in version 6.1, when I want to update the age field, it deletes the other fields in the index and only age field will be remain. this problem doesn't occur in version 6.0.

> my package version: version 6.1


- $endpoint->getURI()


```
/player/player/65152/_update"
```

- $endpoint->getBody()


```
array:1 [▼
  "doc" => array:1 [▼
    "age" => 21
  ]
]
```

```php5
    /**
     * updating a model
     *
     * @param Searchable|BaseModel $model
     */
    public function updated($model)
    {
        if ($model->getDirty()) {
            $partial['doc'] = $model->getDirty();
            $id = $model->getKeyName();
            $this->elasticSearch->update([
                'index' => $model->getSearchIndex(),
                'type'  => $model->getSearchType(),
                'id'    => $model->$id,
                'body'  => $partial,
            ]);
        }
    }
```