I'm wondering about compatibility.
The only feature I would like to see added to GraphSketcher is support for TeX math expressions. 

Perhaps using https://github.com/kostub/iosMath for the implementation.
While it is possible to pick a color BEFORE creating an object like a line, curve or text, it is no longer possible to change an object's color or to pick a color other than black for the canvas. Any attempts to change colors of objects or the canvas immediately revert to black.

GraphSketcher fills a needed space for presentation graphs so I'm hopeful this can be easily corrected.
First, thanks for working on this. I use it a ton. 
I updated to OS X 10.11.6 last night and now graphsketcher is hanging and I have to force quit. I'm getting the hang anytime I try to modify a graph a previously created graph. Possibly at other times as well-- I have not investigated very much yet. 

This is also happening with the last release from Omni. I have not been experiencing other issues since the OS update. (I'm a math teacher, and not a programmer, sorry if that's a lame description.)

This is hands down the best graphing utility for economics graphs.  I'm not sure how much overlap there is between windows and mac software but I'll put a bounty out for someone to create this for windows.  The alternatives are just so poor!

Adding data with oscillations of extreme(ish) points, renders the line to be below the axis, even though the values represented on the Y-axis are "0".

![image](https://cloud.githubusercontent.com/assets/49066/5432516/2b12405a-8490-11e4-94c6-e670f5b175ac.png)

Verified this to be the same on the 'old' Omni version as well.

Is this a bug or is it functioning as designed given the smoothing extrapolation carried out by the line algorithm?

Thank you.

Seems that the defaults make it impossible to configure a graph of descending positive values as you go up the Y-axis.

Am I missing a tweak that would fix it?

When GraphSketcher was still OmniGraphSketcher, it was set up to handle automatic software updates using our open source [OmniSoftwareUpdate](https://github.com/omnigroup/OmniGroup/tree/master/Frameworks/OmniSoftwareUpdate) framework. We didn't want the open source app to be dependent on Omni's software update feeds at [update.omnigroup.com](http://update.omnigroup.com/), so we pulled that integration before we published the app to this github repository.

If anyone does start working on GraphSketcher here, though, it would sure be nice if people using the app could get notified of those updates without having to check a webpage.

So, here are some possibilities:

If someone were to take on the work of publishing GraphSketcher builds in the App Store, then the App Store will automatically update those builds for anyone who downloads it that way. This is the only way that the iPad app can ever make it into the hands of the general public again—but setting up an App Store developer account and going through the submission and review cycle for each update does involve some work and expense.

Alternatively, for the Mac app, we could simply re-integrate OmniSoftwareUpdate. The code side of integrating this would be fairly easy since we pulled it out in a single commit that we could reverse (for those at Omni, see r199852). But that's not the complete solution: someone would also need to do some sysadmin work to publish an appcast RSS feed somewhere to advertise those updates. (We have a script which updates Omni's feeds for nightly builds which I'd be happy to donate.)

Of course, all of this only really matters if GraphSketcher actually has some updates worth publishing. So this isn't an immediate priority, just something to consider once we get to that point.

I'd really like to know if someone is going to accept commits to the master branch if any.

Or can just everybody just work on their "features" and commit back.

I'm just curious at this time. -About the organization of this rather large project. I haven't played around with it enough to know if there are any features I miss. :)

Thanks.

(And I am very grateful, for the opportunity to look into the codebase of the Pro's. -Third Christmas this year! )

(Following up on a Twitter message now that I found the GitHub project page)

The current build of GraphSketcher doesn't have any resources for languages other than English.

Now…the current build is localizable (editable .nib, yeah!!), so I took the opportunity to work on an update for the old French localization.
All .strings and .nib are now ready, but the HTML files are not done yet.
There is also a PDF file with a list of shortcut. I can't currently localize it without having the source document that has been used to generate it.

Now… I'm not too familiar with GitHub, and especially when it comes to committing a localization.
Any suggestion?
