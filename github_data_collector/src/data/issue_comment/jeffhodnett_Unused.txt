Add pdf support.
in  Images.xcassets, there is different name between   Images.xcassets and image ...


crash message

---

Process:               Unused [59136]
Path:                  /Users/USER/Library/Developer/Xcode/DerivedData/Unused-beclpkhgtkonvkbgvtcdwhquktce/Build/Products/Debug/Unused.app/Contents/MacOS/Unused
Identifier:            com.jeffhodnett.Unused
Version:               1.1 (1)
Code Type:             X86-64 (Native)
Parent Process:        ??? [1]
Responsible:           Unused [59136]
User ID:               501

Date/Time:             2015-11-03 17:51:42.117 +0800
OS Version:            Mac OS X 10.11.1 (15B42)
Report Version:        11
Anonymous UUID:        85DE645C-46C3-A892-0E96-9C2F7E236D08

Time Awake Since Boot: 700000 seconds

System Integrity Protection: enabled

Crashed Thread:        51  Dispatch queue: com.apple.root.default-qos

Exception Type:        EXC_CRASH (SIGABRT)
Exception Codes:       0x0000000000000000, 0x0000000000000000
Exception Note:        EXC_CORPSE_NOTIFY

Application Specific Information:
**\* Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Failed to set posix_spawn_file_actions for fd -1 at index 0 with errno 9'
terminating with uncaught exception of type NSException
abort() called

Problem:
for filename in `find %@ -name '*.%@'`; do cat $filename 2>/dev/null | grep -o %@ ; done

The for filename part will separate file names by the space character, so if you want to search in a file "/Users/XXX/Desktop/Test/Classes/UI Animations/Constants.h", it would try and search "/Users/XXX/Desktop/Test/Classes/UI" and "Animations/Constants.h" and not find either.

Solution:
find %@ -name '*.%@' -exec grep -o '%@' {} \;

This is a good deal faster and will use the whole filename as intended.

I have the following project structure:
Project/
- Images/
- Project/*.(m|h|xib)
- Project.xcodeproj

The folder that I set in Unused is top-level Project folder.

It finds for example album_photo_bg.png which is used.

```
Project$ grep -R album_photo_bg .
./Project/DVPhotoViewCell.xib:                                          <string key="NSResourceName">album_photo_bg.png</string>
./Project/DVPhotoViewCell.xib:          <string key="album_photo_bg.png">{107, 97}</string>
./Project/DVPhotoViewController.xib:                                            <string key="NSResourceName">album_photo_bg.png</string>
./Project/DVPhotoViewController.xib:            <string key="album_photo_bg.png">{107, 97}</string>
./Project.xcodeproj/project.pbxproj:        DC258482175E37BB0009DF75 /* album_photo_bg.png in Resources */ = {isa = PBXBuildFile; fileRef = DC258480175E37BB0009DF75 /* album_photo_bg.png */; };
./Project.xcodeproj/project.pbxproj:        DC258483175E37BB0009DF75 /* album_photo_bg@2x.png in Resources */ = {isa = PBXBuildFile; fileRef = DC258481175E37BB0009DF75 /* album_photo_bg@2x.png */; };
./Project.xcodeproj/project.pbxproj:        DC258480175E37BB0009DF75 /* album_photo_bg.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = album_photo_bg.png; sourceTree = "<group>"; };
./Project.xcodeproj/project.pbxproj:        DC258481175E37BB0009DF75 /* album_photo_bg@2x.png */ = {isa = PBXFileReference; lastKnownFileType = image.png; path = "album_photo_bg@2x.png"; sourceTree = "<group>"; };
./Project.xcodeproj/project.pbxproj:                DC258480175E37BB0009DF75 /* album_photo_bg.png */,
./Project.xcodeproj/project.pbxproj:                DC258481175E37BB0009DF75 /* album_photo_bg@2x.png */,
./Project.xcodeproj/project.pbxproj:                DC258482175E37BB0009DF75 /* album_photo_bg.png in Resources */,
./Project.xcodeproj/project.pbxproj:                DC258483175E37BB0009DF75 /* album_photo_bg@2x.png in Resources */,
```

from tiwtter:

@ScottDavisRVA 

 it might prove useful to also be able to find class files that go unreferenced. Possibly even unused methods as well.

Say you pull in a third party framework (eg. KIF) that has image resources for a tutorial page. These aren't ever compiled in to the app, but they show up as unused in Unused.app, creating extra noise that will always be there. It'd be nice if you could "ignore" results (triggered by Delete key or another action) which would put these in a .unusedignore file alongside the Xcode project. Alternatively you could use support a .unusedignore file format without adding UI, I'd say the .gitgnore format is a fine start.

Fix issue with images names that do not having file extensions not coming up in the results. 

I.e

[UIImage imageNamed:@"some_image_name"]

not being checked as it does not have a file extension
