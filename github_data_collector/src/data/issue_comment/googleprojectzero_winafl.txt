Hi, 

In my previous issues:
https://github.com/googleprojectzero/winafl/issues/225
I managed to run winafl successfully on x64 platform. 

But actually my target platform is (windows 10+ Qualcomm ARM64), so I copied everything to the windows arm device and ran again. 

When I ran the following command in DynamoRIO-Windows-7.1.0-1\bin32 directory, 
drrun.exe -c winafl.dll -debug -target_module test_main.exe -target_offset 0x118B0 -fuzz_iterations 10 -nargs 2 -- test_main.exe myfile.txt
Nothing print out.

When I ran my program alone:
test_main.exe myfile.txt
It works as expected. 

When I try to ran drrun.exe without arguments:
drrun.exe
It could print out the usage info.

I don't know what is the problem here. 

Do you know if DynamoRIO-Windows-7.1.0-1 also works on windows-arm devices?
Do you know the "-target_offset" would change on x64 against arm platform? 

Thanks for your help. 

Guilan

i am running winafl 1.1.6 and dynamorio DynamoRIO-Windows-7.1.0-1 on 16 core machine and every few hours i am getting this issue:
![Screen Shot 2020-01-02 at 12 54 49 PM](https://user-images.githubusercontent.com/28854132/71653504-56d27e80-2d5f-11ea-87ad-c181ee9cf8c9.png)

i am running winafl 1.1.6 and dynamorio DynamoRIO-Windows-7.1.0-1 on 4 core machine and every few hours i am getting this issue:
![Windows 7-2019-12-11-08-50-15](https://user-images.githubusercontent.com/22524976/70588959-62190b00-1bf4-11ea-86ed-45c3400165a9.png)

it seems that .cur_input file is also increasing to around 1 gb, actual input files are around 64-92kb only. so looks like input file are not getting closed and data is just getting appended to it?
![Windows 7-2019-12-11-08-48-53](https://user-images.githubusercontent.com/22524976/70589041-ad331e00-1bf4-11ea-8c9d-d4813d6494c4.png)
any ideas?

when i use "-fuzz_interations 5000" it shows :
ASSERT FAILURE: c:\work\winafl\source\winafl.c:947:(0) (invalid options)
Hi,
I tried to fuzz IrfanView and I have found the correct offset, but there was an error as the title, so, what is the cause of this problem?
Hi @ivanfratric!
I was trying to fuzz ffmpeg on Windows. 
First, I used drrun.exe to find correct target_offset, I set the offset of main as the target_offset, but there was waring as title, what caused this problem, I made sure that the the "exit" function is called in main.
Hi,
I am not understanding about how winafl implements persistent fuzzing for a target program. I think winafl saves the register(sp and cp) value in  function "pre_fuzz_handle" function, and restores the register(sp and ) value in function "post_fuzz_handle",but there is nothing operations about restoring memory data. Is my understanding correct?
Sorry this is a question rather than an issue, I reposted it here since there were no replies on afl-users list (https://groups.google.com/forum/#!topic/afl-users/x-GbNuqnvEM).

 I was trying WinAFL and followed the tutorials from README.md . I had a simple program `from_file.exe` (zipped source code `from_file.c` attached below) which was built with "cl.exe from_file.c" and a mingw command `file from_file.exe` tells that ".\from_file.exe: PE32 executable (console) Intel 80386, for MS Windows".
[from_file.c.zip](https://github.com/googleprojectzero/winafl/files/3734419/from_file.c.zip)

 And I confirmed that when executing `C:\Users\hchen017\tools\DynamoRIO-7.1.0-1\bin32\drrun.exe --  from_file.exe from_file.exe`, it can correctly output the expected results "CASE_13 [nread>16] common".

However, when I tried to fuzz it with any of the following commands (where "inputs" are the input directory with a simple seed file and "outputs" is an empty directory.), it always reports the "usage" message, which indicates that these command options are incorrect.

    C:\Users\hchen017\tools\winafl\bin64\afl-fuzz.exe -i inputs -o outputs -t 4000 -- -D C:\Users\hchen017\tools\DynamoRIO-7.1.0-1\bin32 -nargs 1  -- C:\Users\hchen017\tools\targets\simple\from_file.exe @@
    C:\Users\hchen017\tools\winafl\bin64\afl-fuzz.exe -i inputs -o outputs -t 4000 -D C:\Users\hchen017\tools\DynamoRIO-7.1.0-1\bin32 -nargs 1  -- C:\Users\hchen017\tools\targets\simple\from_file.exe @@
    C:\Users\hchen017\tools\winafl\bin64\afl-fuzz.exe -i inputs -o outputs -t 4000 -- -D C:\Users\hchen017\tools\DynamoRIO-7.1.0-1\bin32  -- C:\Users\hchen017\tools\targets\simple\from_file.exe @@
    C:\Users\hchen017\tools\winafl\bin64\afl-fuzz.exe -i inputs -o outputs -t 4000 -D C:\Users\hchen017\tools\DynamoRIO-7.1.0-1\bin32  -- C:\Users\hchen017\tools\targets\simple\from_file.exe @@

And by adding some "printf"s in source code I noticed that https://github.com/googleprojectzero/winafl/blob/master/afl-fuzz.c#L7595 the value of "i == argc" is true.

So where I've got wrong?
Hello. The application crashes when I try to make sure that the target is working correctly under DynamoRIO with -c WinAFL.dll client module.
I try this:
`D:/.../DynamoRIO-Windows-7.91.18151-0/bin64/drrun.exe -c winafl.dll -debug -target_module UnityPlayer.dll -target_offset 0x87DB90 -coverage_module UnityPlayer.dll -fuzz_iterations 10 -nargs 1 -- SCPSL.exe -batchmode -nographics`

By running the same thing and connecting the debugger to the application, I get an exception in different places where there is an attempt to write some data to a segment that does not have write permissions:
`00007FF7752195D0 movaps  xmmword ptr [**rcx**-10h], xmm0 <==== Exception here` 
```
WINDBG>r
rax=00000203b256ec20 rbx=00000203b50bc020 **rcx=00000203b256ec30**
rdx=0000000002fc5470 rsi=0000000000000000 rdi=00000203b256ec20
rip=00007ff7752195d0 rsp=00000021b34fea38 rbp=00000203b551c110
 r8=0000000000000474  r9=0000000000000008 r10=00000203b5534090
r11=00000203b256ec20 r12=00000203af8e2d20 r13=00000203b4f288a8
r14=0000000000000000 r15=00000203b046dbf0
iopl=0         nv up ei pl nz na pe cy
cs=0033  ss=002b  ds=002b  es=002b  fs=0053  gs=002b             efl=00010203
00007ff7`752195d0 0f2941f0        movaps  xmmword ptr [rcx-10h],xmm0 ds:00000203`b256ec20=00000000000000000000000000000000
```

Address 0x203B256EC30 belongs to a segment with a base address of 0x203b2560000, which doesn't have write permission.
```
   BaseAddress      EndAddress+1        RegionSize     Type       State                 Protect             Usage
--------------------------------------------------------------------------------------------------------------------------
...
+      203`b2560000      203`b2570000        0`00010000 MEM_PRIVATE MEM_COMMIT  PAGE_EXECUTE_READ                  <unknown>  [UH..H..PH.u.H...]  <=========== Address 0x203B256EC30 belong to this segment, which doesn't have write permission.
+      203`b2570000      203`b25b0000        0`00040000 MEM_PRIVATE MEM_COMMIT  PAGE_READWRITE                     <unknown>  [H...............]
...
```
As a result, I get exception code c0000005 (ACCESS VIOLATION).

afl.SCPSL.exe.17084.0000.proc.log
```
Module loaded, dynamorio.dll
Module loaded, UnityPlayer.dll
Module loaded, winafl.dll
Module loaded, drx.dll
Module loaded, drreg.dll
Module loaded, drmgr.dll
Module loaded, drwrap.dll
Module loaded, SCPSL.exe
Module loaded, AcGenral.dll
Module loaded, OPENGL32.dll
Module loaded, GLU32.dll
Module loaded, WINHTTP.dll
Module loaded, WindowsCodecs.dll
Module loaded, VERSION.dll
Module loaded, MPR.dll
Module loaded, WINMMBASE.dll
Module loaded, WINMM.dll
Module loaded, apphelp.dll
Module loaded, HID.DLL
Module loaded, dxcore.dll
Module loaded, SspiCli.dll
Module loaded, USERENV.dll
Module loaded, UMPDC.dll
Module loaded, POWRPROF.dll
Module loaded, AppCore.dll
Module loaded, MSASN1.dll
Module loaded, profapi.dll
Module loaded, bcrypt.dll
Module loaded, Windows.Storage.dll
Module loaded, ucrtbase.dll
Module loaded, CRYPT32.dll
Module loaded, CRYPTSP.dll
Module loaded, CFGMGR32.dll
Module loaded, msvcp_win.dll
Module loaded, win32u.dll
Module loaded, bcryptPrimitives.dll
Module loaded, gdi32full.dll
Module loaded, KERNELBASE.dll
Module loaded, SECHOST.dll
Module loaded, KERNEL32.dll
Module loaded, WS2_32.dll
Module loaded, ADVAPI32.dll
Module loaded, IMM32.dll
Module loaded, combase.dll
Module loaded, msvcrt.dll
Module loaded, OLEAUT32.dll
Module loaded, RPCRT4.dll
Module loaded, SHLWAPI.dll
Module loaded, SHELL32.dll
Module loaded, SETUPAPI.dll
Module loaded, GDI32.dll
Module loaded, SHCORE.dll
Module loaded, USER32.dll
Module loaded, ole32.dll
Module loaded, ntdll.dll
Instrumenting UnityPlayer.dll with the 'bb' mode
Module loaded, UxTheme.dll
In OpenFileW, reading D:/Steam/steamapps/common/SCP Secret Laboratory/SCPSL_Data/boot.config
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\app.info
Module loaded, MSWSOCK.dll
Module loaded, PSAPI.DLL
Module loaded, CRYPTBASE.dll
Module loaded, mono-2.0-bdwgc.dll
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\Managed\mscorlib.dll
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\Managed\mscorlib.dll.dll.la
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\Managed/mono/aot-cache/amd64/mscorlib.dll.dll.la
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\Managed\mscorlib.dll.config
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\MonoBleedingEdge\etc\mono\assemblies\mscorlib\mscorlib.config
In OpenFileW, reading C:\Users\User0\.mono\assemblies\mscorlib\mscorlib.config
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\MonoBleedingEdge\etc\mono\config
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\globalgamemanagers
Module loaded, AudioPluginDissonance.dll
Module loaded, MSCTF.dll
In OpenFileW, reading C:\Users\User0\AppData\LocalLow\Hubert Moszka\SCPSL\output_log.txt
In OpenFileW, reading C:\Users\User0\AppData\LocalLow\Hubert Moszka\SCPSL\output_log.txt
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\Resources\unity default resources
Module loaded, CLBCatQ.DLL
Module loaded, DEVOBJ.dll
Module loaded, MMDevAPI.DLL
Module loaded, WinTypes.dll
Module loaded, AudioSes.DLL
Module loaded, ResourcePolicyClient.dll
Module loaded, AVRT.dll
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\Managed\UnityEngine.dll
...
Module loaded, discord-rpc.dll
In OpenFileW, reading \\?\pipe\discord-ipc-0
In OpenFileW, reading \\?\pipe\discord-ipc-1
In OpenFileW, reading \\?\pipe\discord-ipc-2
In OpenFileW, reading \\?\pipe\discord-ipc-3
In OpenFileW, reading \\?\pipe\discord-ipc-4
In OpenFileW, reading \\?\pipe\discord-ipc-5
In OpenFileW, reading \\?\pipe\discord-ipc-6
In OpenFileW, reading \\?\pipe\discord-ipc-7
In OpenFileW, reading \\?\pipe\discord-ipc-8
In OpenFileW, reading \\?\pipe\discord-ipc-9
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\Managed\advapi32.dll.la
In OpenFileW, reading D:\Steam\steamapps\common\SCP Secret Laboratory\SCPSL_Data\Managed\advapi32.dll.la
In OpenFileW, reading \\?\pipe\discord-ipc-0
In OpenFileW, reading \\?\pipe\discord-ipc-1
In OpenFileW, reading \\?\pipe\discord-ipc-2
In OpenFileW, reading \\?\pipe\discord-ipc-3
In OpenFileW, reading \\?\pipe\discord-ipc-4
In OpenFileW, reading \\?\pipe\discord-ipc-5
In OpenFileW, reading \\?\pipe\discord-ipc-6
In OpenFileW, reading \\?\pipe\discord-ipc-7
In OpenFileW, reading \\?\pipe\discord-ipc-8
In OpenFileW, reading \\?\pipe\discord-ipc-9
Exception caught: c0000005
crashed
WARNING: Target function was never called. Incorrect target_offset?
Coverage map follows:
```

I don't get any crash when I try this:
`D:/0my/src/DynamoRIO-Windows-7.91.18151-0/bin64/drrun.exe -- SCPSL.exe -batchmode -nographics`

Not sure if the problem is WinAFL, DynamoRIO or something else.

Versions:
-------------------------
Windows 10 Pro version 10.0.18362 build 18362
DynamoRIO-Windows-7.91.18151-0
MSVC 10.0.18362.0
I'm trying to fuzz an application that starts up, spawns a lot of threads, and both connects to a server and acts as a server. Using drrun with the debug mode, it hits my target function if I manually send data to it that hits the correct function.
However, when using winafl with the custom net fuzzer plugin, the application seems to hang. Winafl will continually call the net fuzzer plugin to send data, but the application itself hangs and never fully finishes fully initializing to bring up all its network connections. Checking the application logs, I can see it only seems to output a few of the lines related to its initialization, but otherwise isn't continuing.

I have no idea how to even debug this to see what could be the cause of the hang, and it the application runs correctly under drrun and drcov.