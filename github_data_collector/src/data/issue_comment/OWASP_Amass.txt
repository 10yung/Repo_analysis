It would be interesting to be able to run amass as a daemon and be able to submit requests via a webapi and retrieve the results in a service bus like RabbitMq.
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x10 pc=0xab7a3c]

goroutine 532 [running]:
sync.(*RWMutex).RLock(...)
	/usr/lib/go-1.13/src/sync/rwmutex.go:48
github.com/OWASP/Amass/v3/graph/db.(*CayleyGraph).AllNodesOfType(0x0, 0x10f87fe, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0)
	/build/amass-5YnjMR/amass-3.3.1/graph/db/cayley.go:153 +0x5c
github.com/OWASP/Amass/v3/graph.(*Graph).EventList(0xc000380100, 0xc00032a030, 0x1, 0x1)
	/build/amass-5YnjMR/amass-3.3.1/graph/event.go:103 +0x4c
github.com/OWASP/Amass/v3/enum.(*Enumeration).submitKnownNames(0xc000450420, 0xc0002042a0)
	/build/amass-5YnjMR/amass-3.3.1/enum/io.go:21 +0xda
created by github.com/OWASP/Amass/v3/enum.(*Enumeration).Start
	/build/amass-5YnjMR/amass-3.3.1/enum/enum.go:192 +0x53e

SanityChecks: Resolver 1.1.1.1 failed to resolve good names
SanityChecks: Resolver 64.6.65.6 failed to resolve good names
SanityChecks: Resolver 77.88.8.1 failed to resolve good names
SanityChecks: Resolver 64.6.64.6 failed to resolve good names
SanityChecks: Resolver 1.0.0.1 failed to resolve good names
SanityChecks: Resolver 8.8.4.4 failed to resolve good names
SanityChecks: Resolver 8.8.8.8 failed to resolve good names
SanityChecks: Resolver 74.82.42.42 failed to resolve good names
Have been trying to run Amass in Parallel but it seems to only want to process 1 command at a time (running from command line), looking at htop the over URLs wait for the first one to be processed.
Has anyone managed to get to work in Parallel or if not have a idea of why it will not work in parallel or of a work around I could use.
![image](https://user-images.githubusercontent.com/45323129/71789132-bb455480-3063-11ea-8df0-583abc46f4f8.png)

Hi what is thr exact go get link for amass ? ..  the link provided at the page doesnt seem to work. 
go get -v -u github.com/OWASP/Amass/v3/..
I am filing this as a new issue to avoid clogging up a closed issue (#305).

I am seeing this with the latest 3.4.2 using the release binary for Linux x64 on Ubuntu 19.10.

`-passive` will return hundreds of results, but replacing `-passive` with `-ip` will return no (or occasionally very few) results, even though spot-checking some of the subdomains found passively shows that they do actually resolve to IP addresses (or CNAMEs).

Here's a minimal example which demonstrates the above:
```
$ ./amass enum -v -passive -src -noalts -include Pastebin -d twitter.com 
Querying Pastebin for twitter.com subdomains
[Pastebin]        pic.twitter.com
[Pastebin]        mobile.twitter.com
[Pastebin]        happening.mobile.twitter.com
[Pastebin]        careers.twitter.com
[Pastebin]        www.twitter.com
[Pastebin]        university.twitter.com
[Pastebin]        hoping.twitter.com
[Pastebin]        blog.twitter.com
[Pastebin]        about.twitter.com
[Pastebin]        search.twitter.com
[Pastebin]        support.twitter.com
[Pastebin]        developer.twitter.com
[Pastebin]        1pic.twitter.com
[Pastebin]        tpic.twitter.com
[Pastebin]        connected.twitter.com
[Pastebin]        tweetdeck.twitter.com
[Pastebin]        api.twitter.com
[Pastebin]        nwww.twitter.com
[Pastebin]        studio.twitter.com
[Pastebin]        ads-api.twitter.com

OWASP Amass v3.4.2                                https://github.com/OWASP/Amass
--------------------------------------------------------------------------------
20 names discovered - api: 20
```
Then clear the cache to remove any side effects:
```
$ rm -r ~/.config/amass/
```
And here's the same command but with `-passive` replaced with `-ip`:
```
$ ./amass enum -v -ip -src -noalts -include Pastebin -d twitter.com 
Querying Pastebin for twitter.com subdomains
No names were discovered
```
Spot checking one of the passive subdomains shows that it does in fact resolve:
```
$ host mobile.twitter.com 
mobile.twitter.com has address 104.244.42.6
mobile.twitter.com has address 104.244.42.198
mobile.twitter.com has address 104.244.42.134
mobile.twitter.com has address 104.244.42.70
```
This is on a home network with no DNS interception or rewriting, and no VPN (although I did try it over a VPN as well just to avoid any issues with my home network and got the same results).

I also built the Docker image and ran it that way, getting the same results ("No names were discovered").

(After some bisecting it seems to me like it stopped working between 3.0.3 and 3.0.4 but I'm not 100% sure).

If I capture the network traffic in Wireshark whilst the Amass command is running I can actually see the valid DNS response coming back from one of the DNS servers, but for some reason Amass is ignoring it (there are no messages printed about false-positives or false-negatives relating to the DNS resolvers):

![image](https://user-images.githubusercontent.com/856675/71313892-7d2b1c80-2437-11ea-8e8a-f4a89c56db64.png)

@caffix: Please let me know if there's anything else I can do to help debug this? Thank you.
I just installed amass. I wanted to run `amass enum --passive -d domain.com`. But it's showing me an error:
```
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x10 pc=0xacd83c]

goroutine 517 [running]:
sync.(*RWMutex).RLock(...)
        /usr/local/go/src/sync/rwmutex.go:48
github.com/OWASP/Amass/v3/graph/db.(*CayleyGraph).AllNodesOfType(0x0, 0x11204d5, 0x5, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, 0x0, ...)
        /home/tareque/go/pkg/mod/github.com/!o!w!a!s!p/!amass/v3@v3.4.2/graph/db/cayley.go:167 +0x5c
github.com/OWASP/Amass/v3/graph.(*Graph).EventList(0xc000192870, 0xc000190088, 0x1, 0x1)
        /home/tareque/go/pkg/mod/github.com/!o!w!a!s!p/!amass/v3@v3.4.2/graph/event.go:113 +0x6e
github.com/OWASP/Amass/v3/enum.(*Enumeration).submitKnownNames(0xc0000a4000, 0xc0002f8580)
        /home/tareque/go/pkg/mod/github.com/!o!w!a!s!p/!amass/v3@v3.4.2/enum/io.go:26 +0x230
created by github.com/OWASP/Amass/v3/enum.(*Enumeration).Start
        /home/tareque/go/pkg/mod/github.com/!o!w!a!s!p/!amass/v3@v3.4.2/enum/enum.go:191 +0x4f6
```

```
tareque@DELL:/mnt/c/Users/Tareque/linux$ amass -version
v3.4.2
tareque@DELL:/mnt/c/Users/Tareque/linux$ go env
GO111MODULE="on"
GOARCH="amd64"
GOBIN=""
GOCACHE="/home/tareque/.cache/go-build"
GOENV="/home/tareque/.config/go/env"
GOEXE=""
GOFLAGS=""
GOHOSTARCH="amd64"
GOHOSTOS="linux"
GONOPROXY=""
GONOSUMDB=""
GOOS="linux"
GOPATH="/home/tareque/go"
GOPRIVATE=""
GOPROXY="https://proxy.golang.org,direct"
GOROOT="/usr/local/go"
GOSUMDB="sum.golang.org"
GOTMPDIR=""
GOTOOLDIR="/usr/local/go/pkg/tool/linux_amd64"
GCCGO="gccgo"
AR="ar"
CC="gcc"
CXX="g++"
CGO_ENABLED="1"
GOMOD="/dev/null"
CGO_CFLAGS="-g -O2"
CGO_CPPFLAGS=""
CGO_CXXFLAGS="-g -O2"
CGO_FFLAGS="-g -O2"
CGO_LDFLAGS="-g -O2"
PKG_CONFIG="pkg-config"
GOGCCFLAGS="-fPIC -m64 -pthread -fmessage-length=0 -fdebug-prefix-map=/tmp/go-build603623396=/tmp/go-build -gno-record-gcc-switches"
```
I'm having an issue where Amass is hanging when i run the command  " amass enum -src -ip -brute -min-for-recursive 2 -json amass.$DOMAIN.json -d $DOMAIN ". At a certain point, it just keeps displaying "Average DNS queries performed: 0/sec" which goes on for days. (screenshot [attached)]. I am running this as a cronjob so this could be the reason why it happens.

OS version: Ubuntu 18.04.2 LTS

![Screen Shot 2019-12-18 at 10 53 20 AM](https://user-images.githubusercontent.com/8119153/71102287-3bc01600-2186-11ea-842f-196800612cbf.png)


According to the [documentation](https://github.com/OWASP/Amass/blob/master/doc/user_guide.md#the-gremlin-section) a TinkerPop server is supported. However, with the 
[Commit 16a64221886902346257870d295bb418d46bf7da](https://github.com/OWASP/Amass/commit/16a64221886902346257870d295bb418d46bf7da) it appears all Gremlin references have been removed.

Will support be added back? Are there still plans to support an external graph db?