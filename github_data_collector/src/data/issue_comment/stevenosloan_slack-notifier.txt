We just upgraded to Ruby 2.7 and are seeing some deprecation warnings:

```
/Users/nateburt/.rvm/gems/ruby-2.7.0/gems/slack-notifier-2.3.2/lib/slack-notifier/util/link_formatter.rb:32: warning: Using the last argument as keyword parameters is deprecated; maybe ** should be added to the call
/Users/nateburt/.rvm/gems/ruby-2.7.0/gems/slack-notifier-2.3.2/lib/slack-notifier/util/link_formatter.rb:38: warning: The called method `initialize' is defined here
```

I've also noticed that there hasn't been any new commits since 2018, is this library still maintained or should we switch to https://github.com/slack-ruby/slack-ruby-client?
I created an incoming slack webhook and chose a public channel (let's call it channel x) and I can send messages to this channel normally, but if I try to send messages to a different channel (using the channel option) on the same webhook, it does not work and sends the message to channel x

```ruby
notifier = Slack::Notifier.new "WEBHOOK_URL" # webhook for channel x
notifier.ping "Hello x" # sends message to channel x

notifier.ping "Hello y", channel: "#y" # still sends message to channel x not y
```

I'm not sure if slack disallowed this recently or what but it's not working now

I'm using slack-notifier v2.3.1
The library doesn't allow `[` and `]` inside a markdown link text to occur, while the spec allows:
- matching, unescaped `[` and `]`
- escaped `\[` and `\]`.

(I came here via https://gitlab.com/gitlab-org/gitlab-ce/issues/66601, where the formatting of commit messages is broken when the message includes `[` and `]`. I'd try to solve it on the gitlab side, but that's only possible when escaped brackets are picked up correctly.)

This code that we had as a monkey patch on Slack::Notifier allows the raw NET::HTTP response to be sent back with the Slack::Notifier::APIError. We thought this would be beneficial to others and allow us to remove the monkey patch from our codebase.


I have an `Account` model where account has many `Matter`. On creating matter, system send notification to a private slack channel configured with associated account.

On slack `Incoming WebHooks` configuration every channel has different hook url but I only configured one in to my app environment which seems not send messages always to all channels - `https://hooks.slack.com/services/TXXXXXX/BXXXXXXX/XXXXXXXXXX`

On matter creation callback, I used like following: 
```
client = Slack::Notifier.new web_hook_url_from_environment_var
client.ping message, {channel: '#channel-name-configured-into-assoc-account'}
```

Should I configure/initialise associated channel's webhook url? 

Does anyone have any suggestion?
the at: keyword creates "@[name]" (as a string in the message) but it doesn't ping them
Fixes #105

Changed the regexp pattern for markdown links to work correctly with parenthesis.

Also see: https://rubular.com/r/WfdZ1arvF6PNWO
The link formatting does not work correctly if a markdown link is nested inside parenthesis.

### Example

**Input**

```markdown
([Compare changes](http://url.com/compare/before...after))
```

**Expected Result**

```
(<http://url.com/compare/before...after|Compare changes>)
```

**Actual Result**

```
(<http://url.com/compare/before...after)|Compare changes>
```
Hi @stevenosloan! Thanks so much for this tool!

Might you be willing to accept a PR that allowed it to work not only with webhooks, by using legacy or bot api tokens? This would ideally allow the ability to set ~~username and~~ avatar.

(I'm trying to make a team tool that I would empower any team member to set it up, and I hope to avoid resulting messages confusingly coming from the user who supplied the token.)
Hi,

When I pass the seemingly valid string to Slack::Notifier:

```"*On <a href=\"http://localhost:3001/\">http://localhost:3001/</a>*\n\n*<a href=\"http://localhost:3001/admin/contractors/1\">David Cameron</a>'s membership has been rejected by Duncan Stuart*\n\n*Rejection Notes*\n\nUnsuccessful PM\n\n"```

I get the following error:

```
expected no Exception, got #<NoMethodError: undefined method `[]' for nil:NilClass> with backtrace:
         # /Users/samuelstickland/.rvm/gems/ruby-2.5.0/gems/slack-notifier-2.3.2/lib/slack-notifier/util/link_formatter.rb:60:in `block in sub_html_links'
```

It works fine without any HTML links. If there something I am doing wrong or is this a bug?