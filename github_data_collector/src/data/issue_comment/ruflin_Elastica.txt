Currently, a completion suggest request like this:
```
{
   "search_suggest" : {
      "completion" : {
         "field" : "name_suggest"
      },
      "prefix" : "nirv"
   }
}
```
returns all fields for each hit. I can't find a way to configure it so it just returns the fields I need. Seems like it may be faster if it didn't have to send everything back?

I tried adding:
```
public function setSource($params): self
{
	return $this->setParam('_source', $params);
}
```
But it gives me error.
**unexpected token [START_ARRAY] after [_source]**

I'm using elasticsearch 7.5
I created a new Abstract Transport to use the new [Symfony HttpClient](https://symfony.com/doc/current/components/http_client.html) component as HTTP client with Elastica.

https://github.com/jolicode/elastically/pull/15

I'm willing to contribute this back to Elastica but I'm not sure it's appropriate to add in the core, as it's not standalone (needs `symfony/http-client`) and does not provide new features (except for Symfony Framework users).

What do you think, **should I create a PR here?**
Another concern of mine is #944 - one day we might not have transport in Elastica :tada: but rely on the core `elasticsearch-php` client.

Thanks! :+1: :kissing: 


When analyzing a code using the iterator in a `foreach($scroll as $resultSet)` with phpstan, the following error is reported:

```
Argument of an invalid type Elastica\ResultSet|null supplied for foreach, only iterables are supported.
```

There is quite a debate about the return type of an `Iterator::current()`, as it should always return the item in the collection.
Invoking the `current()` when "out of bounds" of the collection is expected not to happen, as the `Iterator::valid()` should be called first.


Hi guys, the option to establish contexts in the suggestions does not exist the method as such. I have a complement that I had to add on my own if you need to inform me. regards

https://www.elastic.co/guide/en/elasticsearch/reference/current/search-suggesters.html
Hi guys I have an error trying to create index with your settings and analysis.

Can indexes be created from Elastica or cannot and do I have to do it from console?
**JSON:**
`{
    "settings": {
        "index": {
            "number_of_shards": 2,
            "number_of_replicas": 1
        },
        "analysis": {
            "analyzer": {
                "categoryIdAnalyzer": {
                    "type": "custom",
                    "tokenizer": "whitespace"
                },
                "std_lang": {
                    "type": "standard",
					"stopwords": "_english_"
                }
            },
            "filter": []
        }
    },
...`

**Code**
`// Create Index
$elasticaIndex->create([], true);

// Settings Index
if (isset($indexMapping['settings']['index'])) {
	$elasticaIndex->setSettings($indexMapping['settings']['index']);
}

// Settings Analysis
if (isset($indexMapping['settings']['analysis'])) {
	$elasticaIndex->analyze($indexMapping['settings']['analysis']);
}

// Define mapping
$mapping = new Mapping($indexMapping['mappings']['properties']);

// Response
if ($response = $elasticaIndex->setMapping($mapping)) {
	print('CreateIndex-Success: '.$value. PHP_EOL);
	$return = !$response->hasError();
} else {
	print('CreateIndex-Error: '.$value. PHP_EOL);
	$logger = $this->container->get("logger");
	$logger->critical("Elasticsearch Index Creation Failed.");    
}`
Hello,

I build a query via a raw php array, and when I request with : 

```
$client->getIndex('index')
	->getType('type')
	->search($arrayQuery)
	->getResults()
;
```

I am getting this error :

```
{
  "type": "https:\/\/tools.ietf.org\/html\/rfc2616#section-10",
  "title": "An error occurred",
  "detail": "Call to a member function toArray() on array",
  "trace": [
    {
      "namespace": "",
      "short_class": "",
      "class": "",
      "type": "",
      "function": "",
      "file": "\/var\/www\/html\/vendor\/ruflin\/elastica\/lib\/Elastica\/Query.php",
      "line": 333,
      "args": []
    },
    {
      "namespace": "Elastica",
      "short_class": "Query",
      "class": "Elastica\\Query",
      "type": "->",
      "function": "toArray",
      "file": "\/var\/www\/html\/vendor\/ruflin\/elastica\/lib\/Elastica\/Search.php",
      "line": 456,
      "args": []
    },
    ...
   ]
}
```

The failing line is :

`if (isset($this->_params['post_filter']) && 0 === count(($this->_params['post_filter'])->toArray())) {`

Removing this line fix the issue (in this case).

I am not sure on how to fix this, and if this is really a bug or a misuse from me.

If this is a bug, I can do a PR checking for the `post_filter` being an array already or not.

Thanks, and happy new year :)

Hi guys, I have a problem updating or adding 200 to 200 limit documents. I am changing everything for the new version of ES. but I have this error:

`path:_bulk
method:POST
data:
{
  "update":{
    "_type":"listings",
    "_id":46772011
  }
}
{
  "doc":{
    "address":{
      "city": "DALLAS"
    }
  }
}`

at the time it is adding _type instead of _index
code: 
`if ($ids = $module->getUpsertStash()) {
                $elasticaClient = $this->container->get("search.engine")->getElasticaClient();

                if ($response = $elasticaClient->updateDocuments($ids) and $response->hasError()) {
                    $logger->critical("Elasticsearch Request Error", ["error" => $response->getError()]);
                }

                $module->clearUpsertStash();
            }`

Hello Elastica team !
I faced a problem that i\`m getting success response from requests which were failed due to exceeded size of payload (by default it`s 100 mb in Elasticsearch).

Here https://github.com/ruflin/Elastica/blob/master/lib/Elastica/Bulk.php#L335 in $response we still can find `_status = 413` but in $bulkResponseSet there will be no information related to bad request and we can`t handle this issue.

![Screen Shot 2019-12-20 at 6 23 34 PM](https://user-images.githubusercontent.com/8236853/71268550-e63a6380-2355-11ea-9c41-52eadd63bae6.png)

Please validate this issue and give me a feedback. 

Regards,
Ruslan
