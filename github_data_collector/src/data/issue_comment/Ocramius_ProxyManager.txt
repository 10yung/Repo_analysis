Updates the requirements on [vimeo/psalm](https://github.com/vimeo/psalm) to permit the latest version.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/vimeo/psalm/releases">vimeo/psalm's releases</a>.</em></p>
<blockquote>
<h2>Improve template handling between different templated functions</h2>
<p>Bugfixes</p>
<ul>
<li>resolve <code>static</code> inside trait appropriately (<a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2521">#2521</a>)</li>
<li>improve handling of generic type resolution from one templated function into another templated function (<a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2508">#2508</a>)</li>
<li>check for array assignment inside assignment operations (<a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2526">#2526</a>)</li>
<li>improve <code>array_push</code> handling around known array shapes</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/vimeo/psalm/commit/8e54e3aa060fc490d86d0e2abbf62750516d40fd"><code>8e54e3a</code></a> Use forked collections for now</li>
<li><a href="https://github.com/vimeo/psalm/commit/7d3dd47efa82c420c2ef43f89643e625e6e658dc"><code>7d3dd47</code></a> Added support for preg_grep (<a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2523">#2523</a>)</li>
<li><a href="https://github.com/vimeo/psalm/commit/b375ebf06f8a8b9efc0d83a567d55ff877cbf593"><code>b375ebf</code></a> Fix test</li>
<li><a href="https://github.com/vimeo/psalm/commit/26876b9a1393f08364007901a1ef0f8d05f23167"><code>26876b9</code></a> array_push shouldn’t change list type</li>
<li><a href="https://github.com/vimeo/psalm/commit/ca31931a53d5f7db2fe667aa5b14b6fd57292803"><code>ca31931</code></a> Explain bool assertions (<a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2528">#2528</a>)</li>
<li><a href="https://github.com/vimeo/psalm/commit/d3fb0181cb6b8b7c4268e6602b3ced229ffdce80"><code>d3fb018</code></a> Fix <a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2527">#2527</a> - no crash when template cannot be resolved</li>
<li><a href="https://github.com/vimeo/psalm/commit/0c7851ae21e09ebfa7992d58bfe1f9f6bfe43988"><code>0c7851a</code></a> Fix <a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2526">#2526</a> - always check for array assignment in assignop</li>
<li><a href="https://github.com/vimeo/psalm/commit/e3e3296dd9da3808e03705494a41105e01b9bac1"><code>e3e3296</code></a> Test doctrine collections (<a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2524">#2524</a>)</li>
<li><a href="https://github.com/vimeo/psalm/commit/55c2f7faa2a3803739ca5f6024012e5b4d06082e"><code>55c2f7f</code></a> Fix <a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2508">#2508</a> - don’t replace templated types with generic ones inside own function</li>
<li><a href="https://github.com/vimeo/psalm/commit/37496e956908a7f5853ed921b115d0b2f76fbfd3"><code>37496e9</code></a> amending travis config, 7.4snapshot &gt; 7.4 (<a href="https://github-redirect.dependabot.com/vimeo/psalm/issues/2516">#2516</a>)</li>
<li>Additional commits viewable in <a href="https://github.com/vimeo/psalm/compare/3.7.0...3.8.1">compare view</a></li>
</ul>
</details>
<br />


Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
I have class with accessing to private property within final method like this:
```
class ClassWithFinalMethodAndPrivateProperty
{
    private $prop = 'privet';

    final public function finalMethod()
    {
        return $this->prop;
    }
}
```
I get `Cannot access private property $prop` error if I call finalMethod on valueHolder proxy of this class.

Is there such limitation for Value HolderProxy using or did I something wrong? Can't find any mentions about it in documentation or issues.


> **Disclaimer:** this issue was originally submitted here: https://github.com/PHP-DI/PHP-DI/issues/669 . The context is about PHP-DI.

When the class gets destroyed in its life cycle, the `__destruct` method gets called and, if there's one implementation in the original class, the proxy class tries to execute the base class implementation. But looks like the proxy class is getting destroyed before creating a instance for the base class and, as there's no check for null values, we get the following error:

```
[Wed Jun 12 00:52:18 2019] ::1:59011 [500]: / - Uncaught Error: Call to a member function __destruct() on null in <Project-path>\var\proxies\ProxyManagerGeneratedProxy__PM__<CLASS_NAME>Generated8d9f8c89dc680a18cbf6f65f21952d52.php:55
Stack trace:
#0 <Project-path>\vendor\php-di\php-di\src\Proxy\ProxyFactory.php(60): ProxyManagerGeneratedProxy\__PM__\<CLASS_NAME>\Generated8d9f8c89dc680a18cbf6f65f21952d52->__destruct()
#1 <Project-path>\vendor\php-di\php-di\src\Proxy\ProxyFactory.php(74): DI\Proxy\ProxyFactory->createProxy('<CLASS_NAME>', Object(Closure))
#2 <Project-path>\vendor\php-di\php-di\src\Compiler\ObjectCreationCompiler.php(140): DI\Proxy\ProxyFactory->generateProxyClass('<CLASS_NAME>')
#3 <Project-path>\vendor\php-di\php-di\src\Compiler\ObjectCreationCompiler.php(39): DI\Compiler\Obje in <Project-path>\var\proxies\ProxyManagerGeneratedProxy__PM_<CLASS_NAME>Generated8d9f8c89dc680a18cbf6f65f21952d52.php on line 55
```

The project path and class full qualified names were hidden because it's a private project, where the class is related to database connectivity.

That class just access authorization data and creates a new connection instance. The `__destruct` method implementation exists to ensure the connection will be closed when the class gets destroyed. 

In this scenario the class was never used and that's why I believe it's getting destructed before creating an instance for the original class.
Note: this will require a major version bump, because it will effectively lead to failed installations (rather than `composer update` sticking to previous versions).

See https://github.com/Roave/you-are-using-it-wrong

 * [x] Requires #465
 * [x] Requires #463

Fixes #427

So far, this is just a stub fixing *one* of the many proxy `types`
See https://github.com/infection/infection/issues/486#issuecomment-423764688
Right now just failing (crashing) test assets.

Related to #350.
tempname will not work on location that includes proxy php class file name, as passed  in location. This is generated in generate() as from the $this->fileLocator->getProxyFileName($className). In reality we need the dirname base path of the desired location to pass into tempname.
