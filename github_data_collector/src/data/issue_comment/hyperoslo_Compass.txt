I'd like you to release current master as 6.0.1 or 6.1.0 for Swift 4.2 support.

Thanks.
How can I pass two or more parameters so that later they would be available using 

```
location.arguments["param1"]
location.arguments["param2"]
```

is it possible? Or I should use only payload for this case?
For controllers need couple parameters. Is it possible to pass parameters like
userId{userId}, taskId{taskId}
?
I am a bit confused as to how to actually use this.  

if I have a route in the form of "profile: {userId}"

and I call Navigator.navigate(urn: ? )

What am I supposed to be passing in there?

I know how to use single word routes, but not sure how to actually pass information in

I have tried stuff like "profile/userId/1" and "profile:userId:1" and "profile:userId/1" and "profile: {1}" and so on but it always errors going into my catch

We will convert Compass to be in Swift 4 soon. This is not really big changes, but we can take this advantage to do some refactoring. Some are breaking changes. My proposals are

- Refactor Navigator to be used as instance. And inject `scheme` and `Router` into it. An app usually does not need many `Navigator`, and use can just set it as the current one. This also promotes the use of `Router`

```swift
let navigator = Navigator(scheme: "compass", routers: routers)
Navigator.current = navigator
```

- Right now `Navigator` and `Router` seem to confuse users. Like we declare `Router`, but also configure `Navigator.routes`. The above `Navigator instance` will make the composition clear `Navigator -> Router -> Routable`
- Refactor Router to be more flexible. Not all routers depend on `currentController`, some like `preLogin` prefers to switch rootViewController
- Remove `ErrorRoutable`, as we can handle via `try catch` with `navigate` function

What do you think @hyperoslo/ios ?
Constructs the `Location.path` based on the `URL.host` + `URL.path`, so that URLs such as `scheme://callback/path` are supported.