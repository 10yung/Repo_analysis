
Hi!

This library is awesome, it will be great if it could be ported to Swift 4
GitHub changed the way Markdown headings are parsed, so this change fixes it.

See [bryant1410/readmesfix](https://github.com/bryant1410/readmesfix) for more information.

Tackles bryant1410/readmesfix#1

Whenever I try to unblur a view by using `view.unblur()` or `view.blur(blurRadius: 0)` app crashes by throwing exception: fatal error: unexpectedly found nil while unwrapping an Optional value.

Here's the Stacktrace:

* thread #1: tid = 0x6679c, 0x0000000106a3fc50 libswiftCore.dylib`function signature specialization <preserving fragile attribute, Arg[2] = Dead, Arg[3] = Dead> of Swift._fatalErrorMessage (Swift.StaticString, Swift.StaticString, Swift.StaticString, Swift.UInt, flags : Swift.UInt32) -> Swift.Never + 96, queue = 'com.apple.main-thread', stop reason = EXC_BAD_INSTRUCTION (code=EXC_I386_INVOP, subcode=0x0)
    frame #0: 0x0000000106a3fc50 libswiftCore.dylib`function signature specialization <preserving fragile attribute, Arg[2] = Dead, Arg[3] = Dead> of Swift._fatalErrorMessage (Swift.StaticString, Swift.StaticString, Swift.StaticString, Swift.UInt, flags : Swift.UInt32) -> Swift.Never + 96
  * frame #1: 0x000000010538db49 TouchIDDemo`LoginWithPasswordVC.(self=0x00007fd71fc094d0) -> ()).(closure #1).(closure #1) + 105 at LoginWithPasswordVC.swift:61
    frame #2: 0x000000010538b067 TouchIDDemo`thunk + 39 at TouchIDVC.swift:0
    frame #3: 0x00000001092910cd libdispatch.dylib`_dispatch_client_callout + 8
    frame #4: 0x000000010926d16c libdispatch.dylib`_dispatch_continuation_pop + 1091
    frame #5: 0x00000001092821de libdispatch.dylib`_dispatch_source_latch_and_call + 195
    frame #6: 0x000000010927ad79 libdispatch.dylib`_dispatch_source_invoke + 1098
    frame #7: 0x0000000109271afc libdispatch.dylib`_dispatch_main_queue_callback_4CF + 1006
    frame #8: 0x0000000108ccae49 CoreFoundation`__CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__ + 9
    frame #9: 0x0000000108c9037d CoreFoundation`__CFRunLoopRun + 2205
    frame #10: 0x0000000108c8f884 CoreFoundation`CFRunLoopRunSpecific + 420
    frame #11: 0x000000010dd62a6f GraphicsServices`GSEventRunModal + 161
    frame #12: 0x000000010700dc68 UIKit`UIApplicationMain + 159
    frame #13: 0x000000010539041f TouchIDDemo`main + 111 at AppDelegate.swift:12
    frame #14: 0x00000001092dd68d libdyld.dylib`start + 1

  thread #2: tid = 0x667e0, 0x000000010960c4e2 libsystem_kernel.dylib`__workq_kernreturn + 10
    frame #0: 0x000000010960c4e2 libsystem_kernel.dylib`__workq_kernreturn + 10
    frame #1: 0x0000000109723791 libsystem_pthread.dylib`_pthread_wqthread + 1426
    frame #2: 0x00000001097231ed libsystem_pthread.dylib`start_wqthread + 13

  thread #3: tid = 0x667e1, 0x000000010960c4e2 libsystem_kernel.dylib`__workq_kernreturn + 10
    frame #0: 0x000000010960c4e2 libsystem_kernel.dylib`__workq_kernreturn + 10
    frame #1: 0x0000000109723791 libsystem_pthread.dylib`_pthread_wqthread + 1426
    frame #2: 0x00000001097231ed libsystem_pthread.dylib`start_wqthread + 13

  thread #4: tid = 0x667e2, 0x000000010960ce5a libsystem_kernel.dylib`kevent_qos + 10, queue = 'com.apple.libdispatch-manager'
    frame #0: 0x000000010960ce5a libsystem_kernel.dylib`kevent_qos + 10
    frame #1: 0x000000010928269f libdispatch.dylib`_dispatch_mgr_wait_for_event + 79
    frame #2: 0x000000010927c070 libdispatch.dylib`_dispatch_mgr_invoke + 248
    frame #3: 0x000000010927be72 libdispatch.dylib`_dispatch_mgr_thread + 54

  thread #5: tid = 0x667e3, 0x000000010960c4e2 libsystem_kernel.dylib`__workq_kernreturn + 10
    frame #0: 0x000000010960c4e2 libsystem_kernel.dylib`__workq_kernreturn + 10
    frame #1: 0x0000000109723791 libsystem_pthread.dylib`_pthread_wqthread + 1426
    frame #2: 0x00000001097231ed libsystem_pthread.dylib`start_wqthread + 13

  thread #6: tid = 0x667e4, 0x000000010960438a libsystem_kernel.dylib`mach_msg_trap + 10, name = 'com.apple.uikit.eventfetch-thread'
    frame #0: 0x000000010960438a libsystem_kernel.dylib`mach_msg_trap + 10
    frame #1: 0x00000001096037d7 libsystem_kernel.dylib`mach_msg + 55
    frame #2: 0x0000000108c90ba4 CoreFoundation`__CFRunLoopServiceMachPort + 212
    frame #3: 0x0000000108c90021 CoreFoundation`__CFRunLoopRun + 1345
    frame #4: 0x0000000108c8f884 CoreFoundation`CFRunLoopRunSpecific + 420
    frame #5: 0x0000000105486760 Foundation`-[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 274
    frame #6: 0x000000010550e1b1 Foundation`-[NSRunLoop(NSRunLoop) runUntilDate:] + 78
    frame #7: 0x0000000107a90741 UIKit`-[UIEventFetcher threadMain] + 118
    frame #8: 0x0000000105496654 Foundation`__NSThread__start__ + 1243
    frame #9: 0x0000000109723aab libsystem_pthread.dylib`_pthread_body + 180
    frame #10: 0x00000001097239f7 libsystem_pthread.dylib`_pthread_start + 286
    frame #11: 0x00000001097231fd libsystem_pthread.dylib`thread_start + 13

  thread #8: tid = 0x667f3, 0x000000010960c4e2 libsystem_kernel.dylib`__workq_kernreturn + 10
    frame #0: 0x000000010960c4e2 libsystem_kernel.dylib`__workq_kernreturn + 10
    frame #1: 0x0000000109723791 libsystem_pthread.dylib`_pthread_wqthread + 1426
    frame #2: 0x00000001097231ed libsystem_pthread.dylib`start_wqthread + 13
I'd be cool to also add Cocoapods support. I done this implementation myself last month for my library. Just follow [this post](https://guides.cocoapods.org/making/making-a-cocoapod.html) and [this checklist](https://github.com/thellimist/EZPods).
