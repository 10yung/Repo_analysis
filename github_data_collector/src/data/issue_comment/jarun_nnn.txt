Usage:
Either pipe command output into `nnn` or redirect a file to `stdin`. The paths must be separated by `\0`.
E.g. `find -size +1M | nnn` or `nnn < list_of_files.txt`

Up to 65,536 paths can be read at a time, and no more than 256M will be read from `stdin`. Reads are done in chunks of 512K.

A tmp directory is created and symlinks to the given paths are created with paths being as compressed as can be i.e. no directories are created that only contain another directory. This directory is removed on exit. Currently the symlinks are not followed for operations like remove and such. I'll do that tomorrow.

I didn't have much quality time to spend on time so it took a _bit_ longer that I would've liked but I haven't forgotten about it. Hopefully the code isn't that horrid.

This is really WIP, and I'm going to stop looking for bugs as I keep finding more and more as I get more and more tired.
Rolled from #386.

### For next release

- [x] program option `-e` replaces `NNN_USE_EDITOR`
- [x] program option `-t` replaces `NNN_IDLE_TIMEOUT`
- [x] quit with error code on <kbd>Q</kbd>
- [x] additional key <kbd>F5</kbd> to toggle hidden
- [x] fix crash on entering empty dir, then Down

### Proposed features and tasks (up for grabs)

- [ ] take list of files as input and show
- [ ] add PCRE code within a macro and add Makefile target to compile with PCRE library
- [ ] support pre-defined filters like bookmarks
- [ ] Cygwin package
- [ ] update the `nnn.vim` plugin to show a persistent bar (https://github.com/mcchrish/nnn.vim/issues/46)
- [ ] a video exploring `nnn` plugins

Anything else which would add value (please discuss in this thread).

List of [completed features and tasks](https://github.com/jarun/nnn/wiki/Feature-history).