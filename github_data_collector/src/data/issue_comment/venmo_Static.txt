There are a number of issues from a couple years ago plus PRs ready for review that haven't been looked at in awhile. Just wondering if this library is still being actively maintained.
None
Hi, I am looking for 1 of these things:

+ A way to set `detailText` inside selection
+ Another library with the amazing simplicity, but not just for static tables.

        yp.yearSelected.subscribe(onNext: { year in
            self.settings.year = year
            // Set Value Here!
        }).disposed(by: self.disposeBag)

        ...Row(text: "Change Year", detailText: year, selection: {
              self.present(yp, animated: true)
        }, accessory: .disclosureIndicator)...
![image](https://user-images.githubusercontent.com/13869303/51943911-b7876780-23e8-11e9-91e9-f6a4293ab098.png)

Access to the the row data (including the context dictionnary) within this handler can be useful.

Hello! 

I am using a Row with UISwitch as seen in the example project [here](https://github.com/venmo/Static/blob/aff7d21885af405c130ba689b2a88a9ad37611de/Example/ViewController.swift#L58). 
However when scrolling down the table and then up again, the switch loses its `on` state.

Tested straight from example project:
<p align="center"><img src="https://user-images.githubusercontent.com/11541888/48482324-aa5ad380-e810-11e8-8845-a670e1f7a6f4.gif" width="200" height="400"/></p>

Is this due to cell reusing? How can I preserve switch state on scroll?

Thanks

EDIT: This is the way I'm using it. Am I doing something wrong?

`var value: Bool = false`

```
Row(text: "UISwitch", accessory: .switchToggle(value: self.value) { [unowned self] newValue in
     self.value = newValue
})
```
How do i implement a search bar?
Not sure it this was intentional, but the the old sections were not being passed to the `refreshTableSections()` method, preventing the incremental updating behaviour that appears to already be implemented.

Also note that I made the `sections` argument of the `refreshTableSections()` method nonnull because the property on the data source is also nonnull.

This answers the question mentioned here: https://github.com/venmo/Static/issues/89
As reported in #78 I decided to make small PR with possibility to quickly access two methods of `UITableViewDelegate`:
- `tableView(_:, willDisplayHeaderView:, forSection:)`
- `tableView(_:, willDisplayFooterView:, forSection:)`

The reason we need to have the simplest possibility to access those method is that `UIKit` somehow overrides header view appearance (for `UITableViewHeaderFooterVIew`) and those two methods can be used for configuring header/footer correctly.

The solution here is to provide two closures:
- `dataSource.willDisplayHeader: ((UIView, Int) -> Void)?`
- `dataSource.willDisplayFooter: ((UIView, Int) -> Void)?`

I wish we could have better architecture for that than just a properties with closures, but this solution fulfills two most important requirements:
- provides expected feature
- don't introduce any breaking change into `Static`
Hello! Thanks again for sharing this!
I'm trying to present a view controller with a Popover style when the user touches the DetailButton inside a cell.
The thing is i haven't found yet a solution to get the sourceRect or the accessoryView itself.

```swift
accessory: .DetailButton({ [unowned self] in
    let detailButton = // Thats what i need 
    let vc = UIViewController()
    vc.modalPresentationStyle = .Popover
    vc.preferredContentSize = CGSize(width: 100, height: 200)
    vc.popoverPresentationController?.sourceView = detailButton
    vc.popoverPresentationController?.sourceRect = detailButton.bounds
    vc.popoverPresentationController?.permittedArrowDirections = .Any
    vc.popoverPresentationController?.delegate = self
    self.presentViewController(vc, animated: true, completion: nil)
})
```

Anyone have a solution to this since we don't have any arguments in the Selection closure?

Thanks! üëçüëçüëç
