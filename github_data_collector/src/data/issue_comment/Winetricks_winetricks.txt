enables remapping of modifier keys for mac keyboards. See Wine Bug 35351

This is only applicable in Wine >= 3.17 and when using macdriver=mac
In all of my games japanese characters come in squares instead of the fonts.. I tried installing all fonts and cjk using winetricks it does install all but is unable to install aliases.. When i click on OK after selecting japanese fonts it just after few seconds pops back up unticked.. What is this behavious? All the other things getting installed just not the aliases. Without that I dont think CJK characters will be displayed.
I try again from scratch; i addressed comments and the dlls don`t have DllRegisterServer so no need to register
When using winetricks to install dotnet, cabextract is required. If this is missing, the GUI will issue a pop up saying so. However, when using the CLI to install dotnet, the fact that cabextract is missing is not mentioned. The installation terminates without error and without success.

(winetricks 20191224-next)
As apparently I`m complete github-looser/noob I open it as issue instead of pull request....

Please add verb "expand", it`s useful to extract files from .msu files (until wusa is implemented)
The script can be found here:
 https://github.com/PietJankbal/temporary_stuff/blob/master/expand.txt

Can be used to for example extract files from Windows Media Feature Pack (.msu) , see https://github.com/Winetricks/winetricks/issues/1132
and https://raw.githubusercontent.com/PietJankbal/temporary_stuff/master/wmf62.txt

Side-note: the downloaded Vista service pack also contains 64-bit dinput8, so that issue could be resolved fairly easily

Regards

For https://github.com/Winetricks/winetricks/issues/1151

@DarkShadow44, could you confirm this fixes your application?
I get "Unable to detect wine dlls, please file an issue on Github"
I run wine from the 64bit build dir.
My exports are like this:
```
export WINE=/home/gverm/Desktop/64Bit/wine
export WINESERVER=/home/gverm/Desktop/64Bit/wineserver
```
I was running `WINEARCH=win32 ./winetricks.sh -q dotnet30sp1` when encountering this problem.
I tried both on a system where I build with mingw (macOS) and one where I build without (ArchLinux).
Compiled with mcs (mono C# compiler)

For https://github.com/Winetricks/winetricks/issues/971

Note to self: review/retest when back at a PC.
It would be nice to have the mfc1* dlls in separate verbs. Mostly for debugging purposes (as to only install/override the things you absolutely need).

I might have a look at this myself if I have time, but anyone can feel free to have a go at it.
I'm currently testing a `wine32on64` build on macOS Catalina so needing to make use of
```
export WINE=wine32on64
```
Well it kinda works but then `wine64` isn't used instead the contents of `$WINE` gets used again, so I'd tried to also add 

```
export WINE64=wine64
```
That didn't work only the contents of `$WINE` gets used still

This section is the cause, it would be useful if an exception could be added incase `WINE` & `WINE64` are set that this doesn't get used.
https://github.com/Winetricks/winetricks/blob/266bc27a785fbff5a17a8235d629aa43fc51f6df/src/winetricks#L4926-L4935

Something like this could avoid the above issue.
```
if [[ -z ${WINE64} ] ]; then
  if [ "${WINE%??}64" = "$WINE" ]; then 
     WINE64="${WINE}" 
 elif command -v "${WINE}64" >/dev/null 2>&1; then 
     WINE64="${WINE}64" 
 else 
     # Handle case where wine binaries (or binary wrappers) have a suffix 
     WINE64="$(dirname "$WINE")/" 
     [ "$WINE64" = "./" ] && WINE64="" 
     WINE64="${WINE64}$(basename "$WINE" | sed 's/^wine/wine64/')" 
 fi 
fi
```

I'm unable to use the default name of `wine` or I would break compatibility when moving the wrapper onto a system not running macOS Catalina