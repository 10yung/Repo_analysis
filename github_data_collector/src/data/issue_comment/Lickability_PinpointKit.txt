# Feature Proposal
In iOS 10, our [default log collecting became impossible](https://github.com/Lickability/PinpointKit/issues/205). In iOS 13, it’s possible once again to read logs using `os_log`.

Determine how we can make use of `os_log` to collect logs like we do on iOS 9-.

[https://twitter.com/davedelong/status/1136295382516883456](https://twitter.com/davedelong/status/1136295382516883456)
# Feature Proposal
In Xcode 11, we can now use Swift Package Manager for dependencies. Perform the necessary work for others to integrate PinpointKit as a Swift Package.
## Expected Behavior
Send may be greyed out but users will have no clue as to how to proceed. adding an alert to say "Mail app not found - please install from appstore" or something will help.

## Actual Behavior


## Steps to Reproduce the Problem

  1. delete Mail app from device.
  2. run pinpointkit UI. 
  3. click send from screenshot.
  4. email composer has send button greyed out.

## Specifications

  - Version:
  - Platform:

# Feature Proposal

Consider moving `FeedbackConfiguration.Body` to be nested under `Feedback` instead.
Release the latest `master` for Swift 5 / Xcode 10.2 users.

We have run into an issue with setting tintcolor of all annotationviews when using 
```swift
UIView.appearance().tintColor = .someColor
```

Granted this is not best practice at all, but I think the issue could be circumvented by setting tintColor on every subview when it's added to the `AnnotationsView`. Right now this is only done whenever the tintColor changes.
When building a project that uses PinpointKit via CocoaPods that has a deployment target of 12+, the following warning appears due to the use of `GLKView` within `BlurAnnotationView`.

> 'GLKView' is deprecated: first deprecated in iOS 12.0 - OpenGLES API deprecated. (Define GLES_SILENCE_DEPRECATION to silence these warnings)

Migrate off from `GLKit` for iOS 12+.
See #205 for history.
Now that we’ve reached 1.0, we’ll want a better strategy for releasing updates as changes come in. Assigning to myself and @Twigz to work on the following together:

- [ ] Automate as much of the release process as we reasonably can
- [ ] Document the steps for creating a new release
- [ ] Determine release schedule, or more likely what will warrant an update

See [this comment](https://github.com/Lickability/PinpointKit/issues/212#issuecomment-278464190) wherein I describe how one could provide a custom `LogCollector` implementation.

Consider whether we should have more detailed instructions like this (or examples) for how one could customize PinpointKit. Our current README has a [Customization](https://github.com/Lickability/PinpointKit#customization) section, but it’s possible that more detailed information could help users get started.