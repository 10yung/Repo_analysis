Keep-alive flag in socket settings removed. This flag is probably  causing problems with node connectivity after network outages, for example, see https://github.com/ergoplatform/ergo/issues/894 

Foreach traversal of `data.modifiers` can happen in different order, because order of map entries is not guaranteed.

See `class ModifiersSpec(maxMessageSize: Int)`
```
curl -X POST "http://127.0.0.1:9053/utils/hash/blake2b" -H "accept: application/json" -H "Content-Type: application/json" -d "7yaASMijGEGTbttYHg1MrXnWB8EbzjJnFLSWvmNoHrXV"

{
  "error": 400,
  "reason": "bad.request",
  "detail": "The request content was malformed:\nexpected whitespace or eof got y (line 1, column 2)"
}
```
In this PR Scorex validation framework is extended with new type of validator which allows to perform validation without rule tables (which could be excessive in many cases). So now validators fall into two categories -- `regular` and `tagged`.
When we are going to apply some persistent modifier (block) to the Node in NodeViewHolder we are processing modifier step by step:
1) Append it to History and collect some changes (ProgressInfo)
2) In case of success, apply changes to State
3) After each successful applying notify History via reportModifierIsValid method.

From a History point of view History.reportModifierIsValid execution means that we applied a new Tip to our chain. For example, in HybridApp HybridHistrory.reportModifierIsValid updating of best block (tip) is done.

From other side, if we have some Fork, then before applying fork blocks to the State, we should do a rollback to some branch point first. But in this case no notification of History provided.

So, at least for me, "reportModifierIsValid" naming is misleading. Also absence of notification after State rollback seems strange.

Can you explain current logic?
Thanks a lot!
`PeerInfo.lastSeen` does not work properly as it contains a timestamp a particular `PeerInfo` instance was created.

Extract separate actors for the Node View Holder components to eliminate synchronized sections and enable actor model for the data isolation and synchronization.
Fixes #325