I want to be able to filter files based on different file extensions. One idea would be to pass a middleware after the upload which handles it. Like this:

```javascript
app.post("/upload", S3.upload.fields([{
    name: 'video',
    maxCount: 1,
}, {
    name: 'subtitles',
    maxCount: 1,
}]), validateUploadForms, validateUploadSizes, async function(req, res, next) {

    console.log("Success");

});

function validateUploadSizes(req, res, next) {

    if (req.files.video[0].size > 2000) {
        return next();
    } else {

        res.json({
            response: Strings.ERROR
        });

        return next(new Error);

    }

}
```

But the problem here is that the file is already finished uploading so I will have to waste extra space and time on removing it. 

Another idea would be to do something like this:

```javascript
app.post("/upload", S3.upload.single("video"), S3.upload.single("audio"), validateUploadForms, async function(req, res, next) {

    console.log("Success");

});
```

And then use the `fieldSize`/`fileSize` property. But I am unsure on how it would work like. The problem here is that I can't use multiple `upload.single` middlewares.

What can I do? I am using S3/MulterS3
- fix all test case .. 

![fixed-test-case](https://user-images.githubusercontent.com/43971542/72666113-54368100-3a0f-11ea-8bb9-9ea7c36f3410.png)


- add the coverage script by add `nyc`.

![add-coverage](https://user-images.githubusercontent.com/43971542/72666135-821bc580-3a0f-11ea-9bf1-110457268d37.png)

- update the ci pipeline.
- cleanup .gitignore + locks.

merge #831 #830 #829 here .. 
fix #827 #829 ..
Should update the nodejs versions and add test for CI.. 
This test is not the only one that fails, if you fix it, it will result in failure in other tests .. 
As for Coverage, it's not exsit ..

![image](https://user-images.githubusercontent.com/43971542/72666008-23a21780-3a0e-11ea-9a46-af81b80c7e8b.png)

This PR replaces [`mkdirp`](https://www.npmjs.com/package/mkdirp) which doesn't seem to be maintained anymore with [`make-dir`](https://www.npmjs.com/package/make-dir).

I realize that v2 of multer likely [won't use storage engines at all](https://github.com/expressjs/multer/pull/399), but maybe this can make it into v1.x.

All tests pass, and I don't believe this should be breaking for anyone, as it should function exactly the same as `mkdirp` did previously. `make-dir` was created to replace `mkdirp`.

Likely closes #139 but I don't have a windows machine to test on.

I also added a test to make sure that a path is created when `diskStorage` is given a string for `destination`, as per the docs.
[https://github.com/expressjs/multer/issues/823#issue-550190406](url)

I using `var upload = multer({dest: './upload'}).array('photo', 3).`

```
If upload 5 files, returned error message "files exceeding the limit 2"
If upload 7 files, returned error message "files exceeding the limit 4"
```

my code
If upload 7 files
```
var express = require('express');
var multer = require('multer');
var app = express();
var upload = multer({dest: './upload'}).array('photo', 3)
function uploadMiddleware(request, response, next) {
    upload(request, response, (err)=>{
        if (error instanceof MulterError) {
            res.status(400).send({error: 'files exceeding the limit 4'});
        } else {
            next();
        }
    })
}
app.post('/upload',uploadMiddleware, function (request, response) {

})
app.listen(8888)
```
`.array('photo', 3)` is I setting the max upload number.
I hope according to client number of uploads, returned client exceeds(3) a specifie.(return error message `files exceeding the limit **(max number - upload number)` )
But, before storage and `if (err instanceof multer.MulterError);` I can't get request.files‘s number.

I don't know what to do
Thanks very much!!
I am using multer's upload.single to extract a csv file from request. When converting the buffer given by multer upload to string I observed localized text characters (like À) is getting converted to some random chahracter( like ï¿½ ).The encoding which multer uses is 7bit. Is there any way to get data in utf-8 encoding.
Multer's file details:
  fieldname: 'file',
  originalname: 'SampleIncentive.csv',
  encoding: '7bit',
  mimetype: 'text/csv',
Hi!

I would like to limit an array upload based on the total size of the files. How would I be able to configure this? I tried playing with `fieldSize` but that did not seem to work. The other limitations `fileSize` and `files` do work.
Node.js runs the multer test suite in [citgm](https://github.com/nodejs/citgm). We relatively frequently encounter errors in one of the tests where the test suite times out.

See https://ci.nodejs.org/view/Node.js-citgm/job/citgm-smoker/2142/nodes=centos7-ppcle/testReport/junit/(root)/citgm/multer_v1_4_2/ (available ~7 days).

It would be great to increase the timeout for the test or to fix it in a way that it becomes more reliable.
Hello! I'm using the [cls-hooked](https://www.npmjs.com/package/cls-hooked) library, which let's me use continuous local storage in my express app. After I use the `multer.file` middleware, my context is lost.

I patched the middleware using the solution proposed [here](https://github.com/othiym23/node-continuation-local-storage/issues/29#issuecomment-226965698) and now it works fine. I'm letting you know just in case you want to fix it.

Cheers,


**Additional info**
Node version: 10.15.3
Express version: 4.16.3
Multer version: 1.4.2
CLS Hooked version: 4.2.2
OS: Ubuntu 18.04.3 LTS