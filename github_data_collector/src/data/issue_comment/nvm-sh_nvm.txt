#### Operating system and version:
macOS Catalina.

#### `nvm debug` output:
as no `nvm` command becomes available, it's hard to answer this one.

#### `nvm ls` output:
as no `nvm` command becomes available, it's hard to answer this one.

#### How did you install `nvm`?
install script in readme

#### What steps did you perform?
just executed the script in the readme

#### What happened?
it couldn't find any file to put `nvm` environment variables, because no `~/.zshrc` file was there after a clean Catalina installation.

#### What did you expect to happen?
I was expecting `nvm` to check, as last resort, for `if [ "$SHELL" = "/bin/zsh" ]; then ...` and eventually create by itself the `$HOME/.zshrc` file with those entries.

#### Is there anything in any of your profile files that modifies the `PATH`?
Nope.
When NVM_DIR is a link, nvm mistakenly returns the error

nvm is not compatible with the npm config "prefix" option: currently set to "/data/jenkins-misc/nvm/versions/node/v8.10.0"
Run `npm config delete prefix` or `nvm use --delete-prefix v8.10.0` to unset it.

With this fix nvm will check correctly that the prefix is inside the NVM_DIR
#### Operating system and version:
Ubuntu 18.04 

#### How did you install `nvm`?
install script in readme, curl

#### What steps did you perform?
Install & Update Script
#### What happened?
0curl: (7) Failed to connect to raw.githubusercontent.com port 443: Connection refused
Currently the **nvm.sh** script does not handle directories that are symbolic links.  This is a common problem on servers that use symbolic links to persistent drives.  For example, an admin might want to install nvm into **/opt/local/node**, but the real location (without the symlinks) is **/files2/opt-local/node/nvm**.  This results in:

```
export NVM_DIR=/opt/local/node/nvm && . "$NVM_DIR/nvm.sh"
nvm is not compatible with the npm config "prefix" option: currently set to "/files2/opt-local/node/nvm/versions/node/v8.11.3"
Run `npm config delete prefix` or `nvm use --delete-prefix v8.11.3 --silent` to unset it.
```

Assuming the admin knows this issue and uses the real directory, there is no problem:
```
export NVM_DIR=/files2/opt-local/node/nvm && . "$NVM_DIR/nvm.sh"
```

The small change I am providing will get the real directory to avoid the problem with symbolic links.  

I don't know if **cd -P** is available on all Linux systems, but I have tested in MacOS, RedHat, AWS AMI and Debian.
<!-- Thank you for being interested in nvm! Please help us by filling out the following form if youâ€˜re having trouble. If you have a feature request, or some other question, please feel free to clear out the form. Thanks! -->

#### Operating system and version:
linux shared hosting

#### `nvm debug` output:
<details>
<!-- do not delete the following blank line -->

```sh
nvm --version: v0.35.2
$SHELL: /bin/bash
$SHLVL: 2
${HOME}: /home/ap1fdge2fak1
${NVM_DIR}: '${HOME}/.nvm'
${PATH}: /usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:${HOME}/perl5/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/cpanel/composer/bin:/opt/puppetlabs/bin:/opt/dell/srvadmin/bin:/usr/local/bin:/usr/X11R6/bin:${HOME}/bin:/usr/local/bin:/usr/X11R6/bin
$PREFIX: ''
${NPM_CONFIG_PREFIX}: ''
$NVM_NODEJS_ORG_MIRROR: ''
$NVM_IOJS_ORG_MIRROR: ''
shell version: 'GNU bash, version 4.1.2(2)-release (x86_64-redhat-linux-gnu)'
uname -a: 'Linux 2.6.32-954.3.5.lve1.4.66.el6.x86_64 #1 SMP Thu Jun 20 11:00:35 EDT 2019 x86_64 x86_64 x86_64 GNU/Linux'
curl: /usr/bin/curl, curl 7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.27.1 zlib/1.2.3 libidn/1.18 libssh2/1.4.2
wget: /usr/bin/wget, GNU Wget 1.12 built on linux-gnu.
git: /usr/local/cpanel/3rdparty/lib/path-bin/git, git version 2.19.1
grep: /bin/grep, grep (GNU grep) 2.20
awk: /bin/awk, GNU Awk 3.1.7
sed: /bin/sed, GNU sed version 4.2.1
cut: /bin/cut, cut (GNU coreutils) 8.4
basename: /bin/basename, basename (GNU coreutils) 8.4
rm: /bin/rm, rm (GNU coreutils) 8.4
mkdir: /bin/mkdir, mkdir (GNU coreutils) 8.4
xargs: /usr/bin/xargs, xargs (GNU findutils) 4.4.2
nvm current: none
which node: which: no node in (/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:${HOME}/perl5/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/cpanel/composer/bin:/opt/puppetlabs/bin:/opt/dell/srvadmin/bin:/usr/local/bin:/usr/X11R6/bin:${HOME}/bin:/usr/local/bin:/usr/X11R6/bin)
which iojs: which: no iojs in (/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:${HOME}/perl5/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/cpanel/composer/bin:/opt/puppetlabs/bin:/opt/dell/srvadmin/bin:/usr/local/bin:/usr/X11R6/bin:${HOME}/bin:/usr/local/bin:/usr/X11R6/bin)
which npm: which: no npm in (/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/jdk/bin:${HOME}/perl5/bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/cpanel/3rdparty/lib/path-bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin:/opt/cpanel/composer/bin:/opt/puppetlabs/bin:/opt/dell/srvadmin/bin:/usr/local/bin:/usr/X11R6/bin:${HOME}/bin:/usr/local/bin:/usr/X11R6/bin)
npm config get prefix: bash: npm: command not found
npm root -g: bash: npm: command not found
```
</details>

#### `nvm ls` output:
<details>
<!-- do not delete the following blank line -->

```sh
    iojs-v3.3.1
       v12.14.1
        v13.6.0
default -> node (-> v13.6.0)
iojs -> iojs-v3.3 (-> iojs-v3.3.1) (default)
node -> stable (-> v13.6.0) (default)
stable -> 13.6 (-> v13.6.0) (default)
unstable -> N/A (default)
lts/* -> lts/erbium (-> v12.14.1)
lts/argon -> v4.9.1 (-> N/A)
lts/boron -> v6.17.1 (-> N/A)
lts/carbon -> v8.17.0 (-> N/A)
lts/dubnium -> v10.18.0 (-> N/A)
lts/erbium -> v12.14.1

```
</details>

#### How did you install `nvm`?
<!-- (e.g. install script in readme, Homebrew) -->
wget/curl

#### What steps did you perform?
wget installed nvm properly

#### What happened?
nvm install fine, node install failed w glibc errors

#### What did you expect to happen?
nvm install node

#### Is there anything in any of your profile files that modifies the `PATH`?
<!--  (e.g. `.bashrc`, `.bash_profile`, `.zshrc`, etc) -->
uncertain

<!-- Please remove the following section if it does not apply to you -->
#### If you are having installation issues, or getting "N/A", what does `curl -I --compressed -v https://nodejs.org/dist/` print out?
<details>
<!-- do not delete the following blank line -->

```sh
* About to connect() to nodejs.org port 443 (#0)
*   Trying 104.20.22.46... connected
* Connected to nodejs.org (104.20.22.46) port 443 (#0)
* Initializing NSS with certpath: sql:/etc/pki/nssdb
*   CAfile: /etc/pki/tls/certs/ca-bundle.crt
  CApath: none
* SSL connection using TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
* Server certificate:
* 	subject: CN=*.nodejs.org,OU=PositiveSSL Wildcard,OU=Domain Control Validated
* 	start date: Oct 21 00:00:00 2019 GMT
* 	expire date: Jan 18 23:59:59 2022 GMT
* 	common name: *.nodejs.org
* 	issuer: CN=Sectigo RSA Domain Validation Secure Server CA,O=Sectigo Limited,L=Salford,ST=Greater Manchester,C=GB
> HEAD /dist/ HTTP/1.1
> User-Agent: curl/7.19.7 (x86_64-redhat-linux-gnu) libcurl/7.19.7 NSS/3.27.1 zlib/1.2.3 libidn/1.18 libssh2/1.4.2
> Host: nodejs.org
> Accept: */*
> Accept-Encoding: deflate, gzip
> 
< HTTP/1.1 200 OK
HTTP/1.1 200 OK
< Date: Wed, 08 Jan 2020 17:16:37 GMT
Date: Wed, 08 Jan 2020 17:16:37 GMT
< Content-Type: text/html
Content-Type: text/html
< Connection: keep-alive
Connection: keep-alive
< Set-Cookie: __cfduid=d438fbbd618a38f645ce7d9b6271e0a201578503797; expires=Fri, 07-Feb-20 17:16:37 GMT; path=/; domain=.nodejs.org; HttpOnly; SameSite=Lax
Set-Cookie: __cfduid=d438fbbd618a38f645ce7d9b6271e0a201578503797; expires=Fri, 07-Feb-20 17:16:37 GMT; path=/; domain=.nodejs.org; HttpOnly; SameSite=Lax
< Cache-Control: max-age=14400
Cache-Control: max-age=14400
< CF-Cache-Status: HIT
CF-Cache-Status: HIT
< Age: 80
Age: 80
< Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
Expect-CT: max-age=604800, report-uri="https://report-uri.cloudflare.com/cdn-cgi/beacon/expect-ct"
< Vary: Accept-Encoding
Vary: Accept-Encoding
< Server: cloudflare
Server: cloudflare
< CF-RAY: 551fd1fdd866cee4-IAD
CF-RAY: 551fd1fdd866cee4-IAD
< Content-Encoding: gzip
Content-Encoding: gzip

< 
* Connection #0 to host nodejs.org left intact
* Closing connection #0
```
</details>

```sh
$ nvm install --lts
Installing latest LTS version.
Local cache found: ${NVM_DIR}/.cache/src/node-v12.14.0/node-v12.14.0.tar.xz
Checksums match! Using existing downloaded archive ${NVM_DIR}/.cache/src/node-v12.14.0/node-v12.14.0.tar.xz
$>./configure --prefix=/c/Users/user/.nvm/versions/node/v12.14.0 <
which: no python2.7 in (/c/Users/user/bin:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/mingw64/bin:/usr/bin:/c/Users/user/bin:/c/Program Files/Java/jdk1.8.0_191/bin:/c/Program Files/dotnet:/c/Program Files/Microsoft SQL Server/130/Tools/Binn:/c/xampp/php:/c/ProgramData/ComposerSetup/bin:/cmd:/c/Program Files/nodejs:/c/BC5/BIN:/c/Users/user/AppData/Local/Microsoft/WindowsApps:/c/Users/user/AppData/Roaming/Composer/vendor/bin:/c/Users/user/AppData/Local/Programs/Microsoft VS Code/bin:/c/Users/user/AppData/Local/GitHubDesktop/bin:/c/Windows/System32:/c/Users/user/AppData/Roaming/npm:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Program Files/npm/bin:/c/Program Files/npm/bin)
which: no python2 in (/c/Users/user/bin:/mingw64/bin:/usr/local/bin:/usr/bin:/bin:/mingw64/bin:/usr/bin:/c/Users/user/bin:/c/Program Files/Java/jdk1.8.0_191/bin:/c/Program Files/dotnet:/c/Program Files/Microsoft SQL Server/130/Tools/Binn:/c/xampp/php:/c/ProgramData/ComposerSetup/bin:/cmd:/c/Program Files/nodejs:/c/BC5/BIN:/c/Users/user/AppData/Local/Microsoft/WindowsApps:/c/Users/user/AppData/Roaming/Composer/vendor/bin:/c/Users/user/AppData/Local/Programs/Microsoft VS Code/bin:/c/Users/user/AppData/Local/GitHubDesktop/bin:/c/Windows/System32:/c/Users/user/AppData/Roaming/npm:/usr/bin/vendor_perl:/usr/bin/core_perl:/c/Program Files/npm/bin:/c/Program Files/npm/bin)
./configure: line 3: exec: python: not found
nvm: install v12.14.0 failed!
```
As a developer more regularly engaged with `npm`'s command aliases, I would like a way to use the same kinds of shortened syntax with `nvm`. For example:

 - `npm i` == `npm install`
 - `npm rm` == `npm uninstall`
 - etc.

It seems odd to me that `nvm` doesn't consistently use long- or short-form verbs for commands in the documentation. For example:

 - `nvm ls` instead of `nvm list`
 - `nvm uninstall` instead of `nvm rm` (`nvm rm` doesn't even work)

How can I get better command consistency with `nvm`? I'd be happy to consider working on PR for this, but I don't know where to start.
https://github.com/nvm-sh/nvm/blob/master/nvm.sh#L2968-L2972

This line results in the following output:

> N/A: version "N/A -> N/A" is not yet installed.
You need to run "nvm install N/A" to install it before using it.

A more helpful message would be something like "No version parameter set. Set it by ...."
alpine
----

/tmp # nvm install 12.13.0
Downloading and installing node v12.13.0...
Downloading https://nodejs.org/dist/v12.13.0/node-v12.13.0-linux-x64.tar.gz...
wget: unrecognized option: progress=bar
BusyBox v1.30.1 (2019-06-12 17:51:55 UTC) multi-call binary.

Usage: wget [-c|--continue] [--spider] [-q|--quiet] [-O|--output-document FILE]
	[--header 'header: value'] [-Y|--proxy on/off] [-P DIR]
	[-S|--server-response] [-U|--user-agent AGENT] [-T SEC] URL...

Retrieve files via HTTP or FTP
<!-- Thank you for being interested in nvm! Please help us by filling out the following form if youâ€˜re having trouble. If you have a feature request, or some other question, please feel free to clear out the form. Thanks! -->

#### Operating system and version:
OpenBSD 6.6

#### `nvm debug` output:
<details>
<!-- do not delete the following blank line -->

```sh
nvm --version: v0.35.1
$SHELL: /usr/local/bin/zsh
$SHLVL: 2
${NVM_DIR}: '${HOME}/.nvm'
$PREFIX: ''
${NPM_CONFIG_PREFIX}: ''
$NVM_NODEJS_ORG_MIRROR: ''
$NVM_IOJS_ORG_MIRROR: ''
shell version: 'zsh 5.7.1 (x86_64-unknown-openbsd6.6)'
uname -a: 'OpenBSD 6.6 GENERIC.MP#510 amd64'
curl: /usr/local/bin/curl, curl 7.67.0 (x86_64-unknown-openbsd6.6) libcurl/7.67.0 LibreSSL/3.0.2 zlib/1.2.3 nghttp2/1.40.0
wget: not found
git: /usr/local/bin/git, git version 2.24.0
ls: grep:: No such file or directory
grep: grep: aliased to grep  (grep), grep version 0.9
awk: /usr/bin/awk, awk: unknown option --version ignored
sed: /usr/bin/sed, sed: unknown option -- -
cut: /usr/bin/cut, cut: unknown option -- -
basename: /usr/bin/basename, basename: unknown option -- -
rm: /bin/rm, rm: unknown option -- -
mkdir: /bin/mkdir, mkdir: unknown option -- -
xargs: /usr/bin/xargs, xargs: unknown option -- -
nvm current: system
which node: /usr/local/bin/node
which iojs: iojs not found
which npm: /usr/local/bin/npm
npm config get prefix: /usr/local
npm root -g: /usr/local/lib/node_modules
```
</details>

#### `nvm ls` output:
<details>
<!-- do not delete the following blank line -->

```sh
->       system
iojs -> N/A (default)
node -> stable (-> N/A) (default)
unstable -> N/A (default)
lts/* -> lts/erbium (-> N/A)
lts/argon -> v4.9.1 (-> N/A)
lts/boron -> v6.17.1 (-> N/A)
lts/carbon -> v8.16.2 (-> N/A)
lts/dubnium -> v10.17.0 (-> N/A)
lts/erbium -> v12.13.1 (-> N/A)

```
</details>

#### How did you install `nvm`?
<!-- (e.g. install script in readme, Homebrew) -->
curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.1/install.sh | bash

#### What steps did you perform?
nvm install 12

#### What happened?
tar does not recognize -J
```
Can not determine how many core(s) are available, running in single-threaded mode.                                                                                            
Please report an issue on GitHub to help us make nvm run faster on your computer!                                                                                             
Clang v3.5+ detected! CC or CXX not specified, will use Clang as C/C++ compiler!                                                                                              
Downloading https://nodejs.org/dist/v12.13.1/node-v12.13.1.tar.xz...                                                                                                          
####################################################################################################################################################################### 100.0%
Computing checksum with sha256 -q                                                                                                                                             
Checksums matched!                                                                                                                                                            
tar: unknown option -- J                                                                                                                                                      
usage: tar {crtux}[014578befHhjLmNOoPpqsvwXZz]                                                                                                                                
           [blocking-factor | archive | replstr] [-C directory] [-I file]                                                                                                     
           [file ...]                                                                                                                                                         
       tar {-crtux} [-014578eHhjLmNOoPpqvwXZz] [-b blocking-factor]                    
           [-C directory] [-f archive] [-I file] [-s replstr] [file ...]
nvm: install v12.13.1 failed!
```

#### What did you expect to happen?
Successfully install node version 12

#### Is there anything in any of your profile files that modifies the `PATH`?
<!--  (e.g. `.bashrc`, `.bash_profile`, `.zshrc`, etc) -->
N/A
