<!--
Thanks for using coobjc!
-->

### Context and Description

在ios11.1中，无论是UIWebView还是UIWebView执行JS都会闪退

### Environment Details

* coobjc version:1.2.6
* iOS version: 11.1(ios其他版本没有出现)
* Xcode version:xcode11.2
* Other informations:

### Code
```
- (void)viewWillAppear:(BOOL)animated
{
    co_launch(^{
        UIWebView *web = [[UIWebView alloc] init];
        [web stringByEvaluatingJavaScriptFromString:@"var a=1"];
    });
}
```

### Stack
```
#0	0x000000018b24bc60 in JSC::BuiltinExecutables::createExecutable(JSC::VM&, JSC::SourceCode const&, JSC::Identifier const&, JSC::ConstructorKind, JSC::ConstructAbility) ()
#1	0x000000018b24f994 in JSC::BuiltinExecutables::functionPrototypeApplyCodeExecutable() ()
#2	0x000000018b6755fc in JSC::functionPrototypeApplyCodeGenerator(JSC::VM&) ()
#3	0x000000018b5897c0 in JSC::FunctionPrototype::addFunctionProperties(JSC::ExecState*, JSC::JSGlobalObject*, JSC::JSFunction**, JSC::JSFunction**, JSC::JSFunction**) ()
#4	0x000000018b688200 in JSC::JSGlobalObject::init(JSC::VM&) ()
#5	0x000000018b69203c in JSC::JSGlobalObject::finishCreation(JSC::VM&, JSC::JSObject*) ()
#6	0x000000018c45d4f8 in WebCore::JSDOMGlobalObject::finishCreation(JSC::VM&, JSC::JSObject*) ()
#7	0x000000018cc5c36c in WebCore::JSDOMWindowBase::finishCreation(JSC::VM&, WebCore::JSDOMWindowProxy*) ()
#8	0x000000018cbe6b38 in WebCore::JSDOMWindow::finishCreation(JSC::VM&, WebCore::JSDOMWindowProxy*) ()
#9	0x000000018cc600a8 in WebCore::JSDOMWindowProxy::setWindow(WTF::RefPtr<WebCore::DOMWindow>&&) ()
#10	0x000000018d2b1d40 in WebCore::ScriptController::createWindowProxy(WebCore::DOMWrapperWorld&) ()
#11	0x000000018d2b3620 in WebCore::ScriptController::initScript(WebCore::DOMWrapperWorld&) ()
#12	0x000000018d8355bc in -[WebFrame(WebInternal) _stringByEvaluatingJavaScriptFromString:forceUserGesture:] ()
#13	0x000000018e047a6c in -[UIWebView stringByEvaluatingJavaScriptFromString:] ()
#14	0x0000000102dfd2d8 in __47-[KMDiscoverListViewController viewWillAppear:]_block_invoke at /Users/idivines/Downloads/coobjc-master/Examples/coobjcBaseExample/coobjcBaseExample/UI/View Controllers/Discover List/KMDiscoverListViewController.m:39
#15	0x0000000102f014ac in -[COCoroutine execute] at /Users/idivines/Downloads/coobjc-master/coobjc/co/COCoroutine.m:111
#16	0x0000000102f01ab0 in co_exec at /Users/idivines/Downloads/coobjc-master/coobjc/co/COCoroutine.m:84
#17	0x0000000102ed8a20 in coroutine_main at /Users/idivines/Downloads/coobjc-master/cocore/coroutine.m:189
Enqueued from com.apple.main-thread (Thread 1) Queue : com.apple.main-thread (serial)
#0	0x0000000103225280 in _dispatch_introspection_queue_item_enqueue_hook ()
#1	0x0000000103204c50 in _dispatch_queue_push ()
#2	0x0000000102ed6ffc in -[CODispatch dispatch_async_block:] at /Users/idivines/Downloads/coobjc-master/cocore/CODispatch.m:120
#3	0x0000000102f0253c in -[COCoroutine resume] at /Users/idivines/Downloads/coobjc-master/coobjc/co/COCoroutine.m:224
#4	0x0000000102dfd228 in co_launch [inlined] at /Users/idivines/Library/Developer/Xcode/DerivedData/coobjcBaseExample-fgmirdsavivlplbvbjlaebcijqcf/Build/Products/Debug-iphoneos/coobjc/coobjc.framework/Headers/coobjc.h:54
#5	0x0000000102dfd1f0 in -[KMDiscoverListViewController viewWillAppear:] at /Users/idivines/Downloads/coobjc-master/Examples/coobjcBaseExample/coobjcBaseExample/UI/View Controllers/Discover List/KMDiscoverListViewController.m:37
```


### Environment Details

* coobjc version:1.2.0
* iOS version:13.2.3
* Xcode version:10.3
* Other informations:

### Expected behavior
编译通过

### Actual behavior
在多处类似 [obj objectAtIndex:indexPath.row] 的地方出现错误：
Multiple methods named 'objectAtIndex:' found with mismatched result, parameter type or attributes

### Steps to Reproduce
#import <coobjc.h>写入pch文件

![image](https://user-images.githubusercontent.com/16209754/66698567-99ad2900-ed11-11e9-91a5-8bec49917529.png)

Use `co_delay()` cause a circular reference between `COTimeChan` and `CODispatchTimer`

![EB9CE5DB-B9F8-4A75-964F-A58C97488898](https://user-images.githubusercontent.com/9649401/62933034-e8af0e80-bdf3-11e9-9987-31765a9b6f9e.png)
在NSArray *co_batch_await(NSArray * awaitableList)函数中为什么会将错误替换进result？

我的场景是使用batch_await调用好几个接口，然后拿到结果刷新页面，但是如果其中一个接口调用失败我将调用reject
        NSError *err = [NSError errorWithDomain:@"data error" code:-1 userInfo:nil];
        [promise reject:err];
这样，而调用batch_await之后，由于
                 NSError *error = co_getError();
                    if (error) {
                        [result replaceObjectAtIndex:i withObject:error];
                    }
前面数组中得到的结果也是有error，我在结果取值result[1]的时候并没有得到想要的结果，而是error，这样再走下面的逻辑程序就会有问题，为什么不能将错误放入co_getError中，
想await中那样，最后取得错误另外处理，否则每个result[1], result[2]，我都需要判断返回的结果是否有错，再走正常逻辑
        NSArray *recommentArray = result[1];
        if (![recommentArray isKindOfClass:[NSError class]]) {
            goodsObj.recommendArray = recommentArray;
        }

        NSMutableArray *goodsColorInfo = result[2];
        if (![goodsColorInfo isKindOfClass:[NSError class]]) {
            [self getHuiMaiColorAndStyleInfo:goodsColorInfo];
        }
这样比较繁琐


请问下`COSequence` 这个类是自己封装的吗？
内部是使用`COCoroutine` 生成器去实现批量下载的吗？
而且demo 中 使用
```objc
COCoroutine *co1 = xx
[co1  next]
``` 
next 方法no found
现在有多少人在用这个呢？稳定了吗？
<!--
Thanks for using coobjc!
-->

### Context and Description

<!-- A description of the issue. -->

### Environment Details

* coobjc version:1.2.0
* iOS version:12
* Xcode version:10.2.1
* Other informations:

### Expected behavior

<!-- What do you think should happen? -->

### Actual behavior

<!-- What actually happens? -->
import cocore header error in coobjc

### Steps to Reproduce

### method call stacks

<!-- when bugs happens-->


堆栈
![image](https://user-images.githubusercontent.com/10847925/58527500-7885e900-8205-11e9-9558-c43f97509fe0.png)

推测崩溃的代码行：coroutine.m:237