- MSSQL Extension Version: 1.8.0
- VSCode Version: 1.41.1
- OS Version: Windows 10 1903

Steps to Reproduce:

1. Create new query and connect to existing SQL connection
2. Peak Definition or Go to Definition or Ctrl + Click a function object
    => new attempt file with name dbo.sql and content:
    CREATE SCHEMA [dbo]
    GO

Implemented Query History feature. 
- MSSQL Extension Version: 1.8
- VSCode Version: 1.41.1
- OS Version: Windows 10 1909

## Steps to Reproduce:

1. With the NVDA screen reader enabled, start Code, connect to a data base and create a new query.
2. Type a basic select query and press ctrl+shift+e to execute it.
3. Press ctrl+m to allow tab to move focus
4. Tab to the grid output

## Expected result
Keyboard navigation behaves like excel, e.g. left/right arrow move through columns, up/down arrow move through rows

## Actual result
The focus ends up at the section that contains the output grid.

See https://www.w3.org/TR/wai-aria-practices/examples/grid/dataGrids.html for example implementations.

Note that in Azure Data Studio, the accessibility is worse. It's not clear to me how this product is related to azure data studio, it seems to have similar functionality.
Updating reporter package.
- MSSQL Extension Version: 1.8.0
- VSCode Version: 1.41.0
- OS Version: 10.14.6

Steps to Reproduce:

1. Execute a SQL cursor that contains dynamic SQL that results in several returns being displayed at the same time in the results pane. 
1. Use the mouse wheel or drag the bar on the right to scroll vertically through the results
1. notice that the display of the results is intermittent, appearing and disappearing seemingly at random.  see: https://www.screencast.com/t/07UCUWTFS

This is a big issue when the purpose of the code is to locate the queries (generated by the cursor's dynamic sql) that are returning results.

thanks.

-IAN

- MSSQL Extension Version: 1.8
- VSCode Version: 1.40.2 (user)
- OS Version: Windows 10

Steps to Reproduce:

1.  Connect server
2.  Expand Databases node
3. Right-click on any database, select New Query (should work fine)
4. Left-click on server to collapse
5. Right-click on server and select "Refresh"
6. Expand server (should display databases as well)
7. Right-click on any listed database and select "New Query"
8. Error pops up in toast:

Error running command mssql.objectExplorerNewQuery: Cannot read property 'connectionCredentials' of undefined. This is likely caused by the extension that contributes mssql.objectExplorerNewQuery.

Same steps above work fine if Server/Refresh is done with tree still expanded (i.e. don't left-click on server before refresh).


- MSSQL Extension Version: 1.8

Setup:
- Have two Azure subscriptions, say Sub1 and Sub2
- Have a SQL DB in one of the subscriptions, say Sub2

Steps to Reproduce:

1. Sign into Sub1
2. Try to connect to SQL DB and Create Firewall Rule
3. Get error that DB is not in subscription.
4. Use "Azure Sign In" to switch to Sub2
5. Try to connect to SQL DB and Create Firewall Rule

Expected: Firewall rule created and server connected

Actual: Still get error message about not being able to locate server in subscription.  Need to restart VS Code and connect again to successfully create rule.

![image](https://user-images.githubusercontent.com/599935/70566993-ed899200-1b49-11ea-8b21-ef6604da232a.png)





- MSSQL Extension Version: 1.7.1 (and previous)
- VSCode Version: 1.40.2
- OS Version: Debian 9

Steps to Reproduce:

1. Open VSCode to a new document
2. Set syntax to SQL
3. Connect to SQLServer
4. Write a query which contains 'FOR JSON AUTO', eg:
``` sql
SELECT
  q.QuoteID,
  (
    SELECT 
      c.FirstName + ' ' + c.Surname AS Contact
    FROM Contacts c
    WHERE c.ContactID = q.ContactID
    FOR JSON AUTO
  ) AS Contacts
FROM Quotes q
WHERE q.QuoteID = 98624
;
```
5. View squiggly red line underneath 'JSON'
6. Check Problems tab: Incorrect syntax near 'JSON'.
![20191204171624_vscode_sql_json_syntax_error png](https://user-images.githubusercontent.com/19176116/70164629-6bb4e700-16b9-11ea-94cf-f0fdc34771ff.png)

Similar looking issue here:  #1339 

While we are doing work here, we should do the work to move to azure pipelines.

@abist let me know if you are over extended here and I can take this.