I faced with Crash on Meizu 16th device
Fatal Exception: java.lang.NullPointerException: Attempt to invoke virtual method 'void android.graphics.Matrix.set(android.graphics.Matrix)' on a null object reference
       at android.graphics.Shader.copyLocalMatrix(Shader.java:159)
       at android.graphics.LinearGradient.copy(LinearGradient.java:129)
       at android.graphics.ComposeShader.copy(ComposeShader.java:96)
       at android.graphics.Shader.mzReversalCopy(Shader.java:134)
       at com.meizu.nightmode.MzNightModeManager.beforeDrawColor(MzNightModeManager.java:651)
       at com.meizu.nightmode.MzNightModeManager.beforeDrawColor(MzNightModeManager.java:631)
       at android.view.RecordingCanvas.drawRect(RecordingCanvas.java:622)
       at io.supercharge.shimmerlayout.ShimmerLayout.drawShimmer(ShimmerLayout.java:261)
       at io.supercharge.shimmerlayout.ShimmerLayout.dispatchDrawShimmer(ShimmerLayout.java:250)
       at io.supercharge.shimmerlayout.ShimmerLayout.dispatchDraw(ShimmerLayout.java:106)
       at android.view.View.draw(View.java:19239)
       at android.view.View.updateDisplayListIfDirty(View.java:18180)
       at android.view.View.draw(View.java:18958)
       at android.view.ViewGroup.drawChild(ViewGroup.java:4236)
       at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)
       at android.view.View.draw(View.java:19239)
       at android.view.View.updateDisplayListIfDirty(View.java:18180)
       at android.view.View.draw(View.java:18958)
       at android.view.ViewGroup.drawChild(ViewGroup.java:4236)
       at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)
       at android.view.View.updateDisplayListIfDirty(View.java:18171)
       at android.view.View.draw(View.java:18958)
       at android.view.ViewGroup.drawChild(ViewGroup.java:4236)
       at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)
       at android.view.View.draw(View.java:19239)
       at android.view.View.updateDisplayListIfDirty(View.java:18180)
       at android.view.View.draw(View.java:18958)
       at android.view.ViewGroup.drawChild(ViewGroup.java:4236)
       at android.support.design.widget.CoordinatorLayout.drawChild(CoordinatorLayout.java:1254)
       at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)
       at android.view.View.updateDisplayListIfDirty(View.java:18171)
       at android.view.View.draw(View.java:18958)
       at android.view.ViewGroup.drawChild(ViewGroup.java:4236)
       at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)
       at android.view.View.updateDisplayListIfDirty(View.java:18171)
       at android.view.View.draw(View.java:18958)
       at android.view.ViewGroup.drawChild(ViewGroup.java:4236)
       at android.view.ViewGroup.dispatchDraw(ViewGroup.java:4022)
       at android.view.View.updateDisplayListIfDirty(View.java:18171)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4220)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4200)
       at android.view.View.updateDisplayListIfDirty(View.java:18139)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4220)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4200)
       at android.view.View.updateDisplayListIfDirty(View.java:18139)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4220)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4200)
       at android.view.View.updateDisplayListIfDirty(View.java:18139)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4220)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4200)
       at android.view.View.updateDisplayListIfDirty(View.java:18139)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4220)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4200)
       at android.view.View.updateDisplayListIfDirty(View.java:18139)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4220)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4200)
       at android.view.View.updateDisplayListIfDirty(View.java:18139)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4220)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4200)
       at android.view.View.updateDisplayListIfDirty(View.java:18139)
       at android.view.ViewGroup.recreateChildDisplayList(ViewGroup.java:4220)
       at android.view.ViewGroup.dispatchGetDisplayList(ViewGroup.java:4200)
       at android.view.View.updateDisplayListIfDirty(View.java:18139)
       at android.view.ThreadedRenderer.updateRootDisplayList(ThreadedRenderer.java:705)
       at android.view.ThreadedRenderer.draw(ThreadedRenderer.java:803)
       at android.view.ViewRootImpl.draw(ViewRootImpl.java:3025)
       at android.view.ViewRootImpl.performDraw(ViewRootImpl.java:2828)
       at android.view.ViewRootImpl.performTraversals(ViewRootImpl.java:2375)
       at android.view.ViewRootImpl.doTraversal(ViewRootImpl.java:1408)
       at android.view.ViewRootImpl$TraversalRunnable.run(ViewRootImpl.java:6853)
       at android.view.Choreographer$CallbackRecord.run(Choreographer.java:979)
       at android.view.Choreographer.doCallbacks(Choreographer.java:791)
       at android.view.Choreographer.doFrame(Choreographer.java:726)
       at android.view.Choreographer$FrameDisplayEventReceiver.run(Choreographer.java:965)
       at android.os.Handler.handleCallback(Handler.java:790)
       at android.os.Handler.dispatchMessage(Handler.java:99)
       at android.os.Looper.loop(Looper.java:164)
       at android.app.ActivityThread.main(ActivityThread.java:6707)
       at java.lang.reflect.Method.invoke(Method.java)
       at com.android.internal.os.RuntimeInit$MethodAndArgsCaller.run(RuntimeInit.java:438)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:886)

Hi. thanks for this library , can you please update dependencies to support androidx 
thanks 
This PR adds Kotlin powerful features for the library and the sample APP, I did a simple work which is converting your existing code from Java to kotlin, I hope this is a Good PR.

I noticed ShimmerRecyclerView does support only one shimmer layout at a time. I mean, like recyclerview's adapter - multiple viewTypes are not supported in this library. 
Hi,

It looks like since the mShimmerLayoutManager is only created once when View is created, calling methods like setGridChildCount or setDemoLayoutManager don't have any effect.

So, for example a simple layout with a just a RecyclerView can't be reused with different grid child count or grid child count can't be changed on orientation change etc.
While using ShimmerRecyclerView, I am not able to set the width of the mask to 1. In Android studio setDemoShimmerMaskWidth is showing error.
Thanks a lot for the hard work and the great library and sorry for the 2 issues opened in a short time!

Another thing I noticed is some incorrect scrolling behavior when using setReverseLayout and stackFromEnd.

One of the major places we tried to use ShimmerRecyclerView is inside a chat fragment.
The logic in this part is particularly complex concerning the scrolling part and we have to combine several settings of a RecyclerView, as well as doing some additional handling on top of it, to have an appropriate scrolling experience.

One of the things we have done is to combine setReverseLayout and stackFromEnd settings on a RecyclerView for some complex reasons.
However, when switching to ShimmerRecyclerView and keeping the exact same logic, the scrolling behavior is broken and I could not make it work accordingly.
One of the major issue is that it seems to always scroll to the top after loading items, even when forcing some scroll to the bottom.

Both this issue and #38 are not so critical for our project, to be honest.
Our alternative is to have both a RecyclerView and a ShimmerRecyclerView in our layout and to display the ShimmerRecyclerView with the shimmer effect enabled during loading, and to hide it in profit of the RecyclerView when items are loaded (the recyclerview being in charge of displaying the items, thus avoiding these issues).
However, would definitely be a nice to have to simply have the ShimmerRecyclerView and toggle the effect when necessary, rather than using both ShimmerRecyclerView and RecyclerView and switching between and the other.

I am using ShimmerRecyclerView within a fragment.
If I scroll to an element in the list, open a new activity by clicking that element and then go back to the list, the scroll will be reset to the top.

If I replace the ShimmerRecyclerView with a normal RecyclerView, the scrolling is restored correctly, so it seems to be an issue coming from the ShimmerRecyclerView.
