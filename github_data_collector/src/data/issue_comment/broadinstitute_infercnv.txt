When comparing the last part of chromosomes, the higher matrix data value is observed in observation than in reference, and more is amplified in infer graph.
Can you tell me why the pre_cnv_regions.dat and I6 HMM, Bayesian intensities are there more amplified in references?
The last chromosome has about 10 geniuses. Can you do that because it's too small?


![image](https://user-images.githubusercontent.com/59091518/72433945-d0e21900-37dd-11ea-9223-ba6e627af364.png)




In summary, the infercnv graph and HMM_intensities graph of the last chromosome had conflicting results.

thank you

Hi,

I performed run and add_to_seurat. 
It was successful, but I couldn't understand the columns of the meta.data. 
I read https://github.com/broadinstitute/infercnv/wiki/Extracting-features, but I'm sure what each column represents. Is there any explanation available? Thanks.

```
 "has_cnv_chr1"                  "has_loss_chr1"                 "has_dupli_chr1"
"proportion_cnv_chr1"          "proportion_loss_chr1"          "proportion_dupli_chr1"
"proportion_scaled_cnv_chr1"    "proportion_scaled_loss_chr1"    "proportion_scaled_dupli_chr1"
...
"top_loss_1"                    "top_loss_2"                   "top_loss_3"
...
```
I run infercnv separately for each patient using the same reference genome and cells. After that, I need to merger the infercnv objects. Is there any built-in function I can use?  Thanks!
infercnv::plot_cnv(infercnv_obj,out_dir=out_dir,cluster_by_groups=T,color_safe_pal=FALSE,x.center=1,x.range=c(0.6,1.4),title="inferCNV",obs_title="Observations (Cells)",
+                    ref_title="References (Cells)", output_format="png", output_filename="infercnv.grpF")
INFO [2019-12-23 06:25:06] ::plot_cnv:Start
INFO [2019-12-23 06:25:06] ::plot_cnv:Current data dimensions (r,c)=9968,2728 Total=27420959.5974631 Min=0.17894579059261 Max=8.56586175836465.
INFO [2019-12-23 06:25:06] ::plot_cnv:Depending on the size of the matrix this may take a moment.
INFO [2019-12-23 06:25:07] plot_cnv_observation:Start
INFO [2019-12-23 06:25:07] Observation data size: Cells= 2258 Genes= 9968
INFO [2019-12-23 06:25:07] clustering observations via method: ward.D
ERROR [2019-12-23 06:25:07] Unexpected error, should not happen.
Error in .plot_cnv_observations(infercnv_obj = infercnv_obj, obs_data = obs_data,  : 
  Error

![image](https://user-images.githubusercontent.com/31929730/71340459-edfc3280-2524-11ea-8902-faf4b67e45cd.png)

I have only 2000 cells, and 5000 features. But the step 18 has run for 1 hours, and it seems that it gets stuck in this step? Any ideas or suggestions?

Here is the screenshot:
![image](https://user-images.githubusercontent.com/31929730/71327955-735bf480-24dd-11ea-98eb-893c49353694.png)

Now, I am running the new version of infercnv, and there are so many intermediate results. I don't want to save those results, so I was wondering which parameter I should set to stop the infercnv outputs the intermediate results, and only output the final result to save my space.
inferCNV can generate the final heatmap with only one annotation bar, but I wonder if I could add another annotation bar? and how?
Hi,
I am using inferCNV 1.0.4 for my data set. I have given 4 groups as references. And three groups as observations.

infercnv_obj = infercnv::run(infercnv_obj,
                                             cutoff=0.1,
                                            analysis_mode = "subclusters", out_dir="Results",                            
                                            denoise=TRUE,
                                            HMM=TRUE,
                                            cluster_by_groups=TRUE,
                                            tumor_subcluster_pval=0.05)

I can see, final heatmap is fine. 4 groups has been represented as References and 3 groups as observations. But when I checked following text file:

HMM_CNV_predictions.HMMi6.rand_trees.hmm_mode-subclusters.Pnorm_0.5.pred_cnv_genes.dat
HMM_CNV_predictions.HMMi6.rand_trees.hmm_mode-subclusters.Pnorm_0.5.pred_cnv_regions.dat

I have found, cnv has been reported in all references (4 groups) also. How is it possible?



Hi,

Using the `infercnv_1.3.1`

Would like to know how `num_ref_groups` affects final results.

With same set of sample cells and reference cells. I tried diff `num_ref_groups`, results looked so different:

### num_ref_groups = 1
![infercnv](https://user-images.githubusercontent.com/42717675/70198212-335ce980-1749-11ea-82f9-faae5a674f51.png)

### num_ref_groups = 4
![infercnv_1](https://user-images.githubusercontent.com/42717675/70198204-2dff9f00-1749-11ea-9ddd-f3fc16f1472d.png)

1. Why the reference heatmap looks different. In `num_ref_groups = 1` case, it seems that there are several cnv blocks, for example, chr4 and chr6. Based on those blocks, I decided using 4 reference groups, because this is what it looks like on the heatmap. However, these cnv blocks are gone after using `num_ref_groups = 4`.
2. Am I correct to use `num_ref_groups = 4` or there are some better way to judge whether I did things correctly.
3. Why final results looked so different using different `num_ref_groups`.

Thank you very much!


Hey, 

I trid to run the program by following commands:

```
infercnv_obj = CreateInfercnvObject(raw_counts_matrix=counts, annotations_file=annot, gene_order_file=gene, ref_group_names=ref.groups, chr_exclude=c("X","Y","MT"))
infercnv_obj = infercnv::run(infercnv_obj, cutoff=0.1, out_dir=Outdir, cluster_by_groups=FALSE, k_obs_groups=10, analysis_mode="subclusters", denoise=TRUE, HMM=TRUE, num_threads=4, resume_mode=T)
```

then, I got the following error during: 
```
STEP 18: Run Bayesian Network Model on HMM predicted CNV's
...
INFO [2019-11-20 11:17:08] plot_cnv_observation:Start
INFO [2019-11-20 11:17:08] Observation data size: Cells= 5494 Genes= 4218
INFO [2019-11-20 11:17:08] clustering observations via method: ward.D
```
```
Error in cp("(") : node stack overflow
Calls: <Anonymous> ... add.internal -> add.internal -> add.internal -> add.internal -> cp
Execution halted
```

The inputs should be OK, because I run these successfully by setting other parameters.

Here are my sessionINFO()
```
R version 3.6.0 (2019-04-26)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: CentOS Linux 7 (Core)

Matrix products: default
BLAS/LAPACK: /software/compilers_and_libraries_2018.1.163/linux/mkl/lib/intel64_lin/libmkl_gf_lp64.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C              
 [3] LC_TIME=en_US.UTF-8        LC_COLLATE=en_US.UTF-8    
 [5] LC_MONETARY=en_US.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=en_US.UTF-8       LC_NAME=C                 
 [9] LC_ADDRESS=C               LC_TELEPHONE=C            
[11] LC_MEASUREMENT=en_US.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] grid      stats     graphics  grDevices utils     datasets  methods  
[8] base     

other attached packages:
 [1] ggplot2_3.2.1     infercnv_1.3.1    cowplot_1.0.0     reshape2_1.4.3   
 [5] dplyr_0.8.3       plyr_1.8.4        Seurat_3.1.1      R.utils_2.9.0    
 [9] R.oo_1.23.0       R.methodsS3_1.7.1 magrittr_1.5      colorout_1.2-1   

loaded via a namespace (and not attached):
  [1] TH.data_1.0-10              Rtsne_0.15                 
  [3] colorspace_1.4-1            modeltools_0.2-22          
  [5] ggridges_0.5.1              futile.logger_1.4.3        
  [7] XVector_0.26.0              GenomicRanges_1.38.0       
  [9] leiden_0.3.1                listenv_0.7.0              
 [11] npsurv_0.4-0                ggrepel_0.8.1              
 [13] mvtnorm_1.0-11              coin_1.3-1                 
 [15] codetools_0.2-16            splines_3.6.0              
 [17] doParallel_1.0.15           lsei_1.2-0                 
 [19] libcoin_1.0-5               zeallot_0.1.0              
 [21] jsonlite_1.6                ica_1.0-2                  
 [23] argparse_2.0.1              cluster_2.1.0              
 [25] rjags_4-10                  png_0.1-7                  
 [27] uwot_0.1.4                  sctransform_0.2.0          
 [29] compiler_3.6.0              httr_1.4.1                 
 [31] backports_1.1.5             assertthat_0.2.1           
 [33] Matrix_1.2-17               lazyeval_0.2.2             
 [35] limma_3.42.0                formatR_1.7                
 [37] htmltools_0.4.0             tools_3.6.0                
 [39] rsvd_1.0.2                  igraph_1.2.4.1             
 [41] coda_0.19-3                 gtable_0.3.0               
 [43] glue_1.3.1                  GenomeInfoDbData_1.2.2     
 [45] RANN_2.6.1                  Rcpp_1.0.3                 
 [47] Biobase_2.46.0              vctrs_0.2.0                
 [49] gdata_2.18.0                ape_5.3                    
 [51] nlme_3.1-142                iterators_1.0.12           
 [53] gbRd_0.4-11                 lmtest_0.9-37              
 [55] fastcluster_1.1.25          stringr_1.4.0              
 [57] globals_0.12.4              lifecycle_0.1.0            
 [59] irlba_2.3.3                 gtools_3.8.1               
 [61] future_1.15.0               edgeR_3.28.0               
 [63] MASS_7.3-51.4               zlibbioc_1.32.0            
 [65] zoo_1.8-6                   scales_1.1.0               
 [67] sandwich_2.5-1              parallel_3.6.0             
 [69] SummarizedExperiment_1.16.0 lambda.r_1.2.4             
 [71] RColorBrewer_1.1-2          SingleCellExperiment_1.8.0 
 [73] reticulate_1.13             pbapply_1.4-2              
 [75] gridExtra_2.3               reshape_0.8.8              
 [77] stringi_1.4.3               S4Vectors_0.24.0           
 [79] foreach_1.4.7               caTools_1.17.1.2           
 [81] BiocGenerics_0.32.0         BiocParallel_1.20.0        
 [83] bibtex_0.4.2                GenomeInfoDb_1.22.0        
 [85] matrixStats_0.55.0          Rdpack_0.11-0              
 [87] SDMTools_1.1-221.1          rlang_0.4.1                
 [89] pkgconfig_2.0.3             bitops_1.0-6               
 [91] lattice_0.20-38             ROCR_1.0-7                 
 [93] purrr_0.3.3                 htmlwidgets_1.5.1          
 [95] tidyselect_0.2.5            RcppAnnoy_0.0.14           
 [97] R6_2.4.1                    IRanges_2.20.0             
 [99] gplots_3.0.1.1              multcomp_1.4-10            
[101] DelayedArray_0.12.0         withr_2.1.2                
[103] pillar_1.4.2                findpython_1.0.5           
[105] fitdistrplus_1.0-14         survival_3.1-7             
[107] RCurl_1.95-4.12             tibble_2.1.3               
[109] future.apply_1.3.0          tsne_0.1-3                 
[111] crayon_1.3.4                futile.options_1.0.1       
[113] KernSmooth_2.23-16          plotly_4.9.1               
[115] locfit_1.5-9.1              data.table_1.12.6          
[117] metap_1.1                   digest_0.6.22              
[119] tidyr_1.0.0                 RcppParallel_4.4.4         
[121] stats4_3.6.0                munsell_0.5.0              
[123] viridisLite_0.3.0          
```
So how to fix it?


