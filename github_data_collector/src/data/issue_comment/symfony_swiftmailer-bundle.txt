Its possible to send an email without "to" address, only setting bcc?

I'm using the Swiftmailer bundle v3.2.8 in Symfony 4.3

![Captura de pantalla 2019-11-13 a las 14 04 54](https://user-images.githubusercontent.com/13980708/68766155-a11c6680-061e-11ea-9887-c0506a645ec2.png)

After these code executes, no email is sent.

_What is the issue?_

When multiple requests happen with the profiler enabled before the first one and without a kernel reboot between them, there is no way to find out what happened in each of the requests. 

For example, if request 1 sends an email and request 2 sends another email, the `getMessageCount()` method will return `2` after the second email, despite the fact that actually a single email has been sent in it.

_When was the issue introduced?_

Probably here: #197 

_Why does it happen?_

See: https://symfony.com/doc/current/profiler/data_collector.html#creating-a-custom-data-collector

The `collect` method is supposed to collect the data for the _given_ request, rather than all the logged data.

Thankfully, it is guaranteed to be called once _per requesst_, so having a way to match the logs with the request is not that important. However, it is important to know what has already been collected (which, in its current implementation, it doesn't).

The reset method is supposed to remove all the information collected with the `collect()` method. What exists there is fine now, but it has no effect because of the fact that `collect()`  actually looks at all the data available  rather than only what is new.

_Potential Solution_

Do not call `reset` each time collect is called. Instead, have collect remember where it left off logs processing and only process new logs - add results to the already existing one.

Let me know if I should propose a PR. I'm not very familiar with the code/testing infrastructure you have set up, but I could try.

EmailSenderListener refactored so it has early returns e better understandable code with only one indentation level.
When using a configuration like this:

```
swiftmailer:
    disable_delivery: "%env(TEST_MAIL_DISABLE_DELIVERY)%"
    # send all emails to a specific address
    delivery_addresses:
        - "%env(TEST_MAIL_DELIVERY_ADDRESS)%"
```

the value of TEST_MAIL_DISABLE_DELIVERY is ignored, and delivery is always disabled. Furthermore, if that env var isn't used anywhere else, the container will fail to build saying that this variable is unused.

The only solution I have right now is use php for the configuration, parse out the env value manually, and assign the value that way. But, this setting should use the env var value like any other.
[fix] Resolve ignore stream_options treatment

If you use stream_options to send an email, the setting is ignored if you use URL or if you put the configuration directly in swiftmailer.yaml

With these changes, the issues are solved.
We have several issues with problems with stream_options setting. For instance, issue #220 and #172.

I have checked that the problems are presents in version 4.3.2 of symfony and version 3.2.8 of swiftmailer-bundle.

This issue is to resume all of the cases and solve them with a new pull request.

### Description
I have setup a separate environment (lets say. `stage`) and I have a `config/packages/stage/swiftmailer.yaml` file.
```yaml
swiftmailer:
    delivery_addresses: ['catcher@email.com']
```

I have `delivery_addresses` set but the email recipients are not being overridden like in the `dev` environment.

Interestingly, `delivery_addresses` setting only work in the *dev* environment.

### Environment
* Symfony v4.2.8
* Swiftmailer v6.2.1

### Expected behavior
`delivery_addresses` configured in config/packages/{{ environment }}/swiftmailer.yml works for each environment.

### Actual behavior
`delivery_addresses` only works in `dev` environment
When you do not want to define a default mailer (there are good reasons you might not want to), the [compiler pass](https://github.com/symfony/swiftmailer-bundle/blob/856c19b6989cf7431403f98161cedd6f4f5fdf1a/DependencyInjection/Compiler/RegisterPluginsPass.php#L27) throws.

This is the reason:
```php
// \Symfony\Bundle\SwiftmailerBundle\DependencyInjection\Compiler\RegisterPluginsPass:27
if (!$container->findDefinition('swiftmailer.mailer') || !$container->getParameter('swiftmailer.mailers')) {
    return;
}
```
Because `findDefinition` throws.

Note: I do not use the default mailer anywhere. Only two places with explicit injection configured to inject a non default mailer instance. Not autowired.
After upgrading a symfony project, I got an error parsing the config for swiftmailer.  The item that seemed to be causing the issue was "cafile".  I had stream_options defined in both config.yml and config-dev.yml.  Only in the dev file I added the cafile item.  On upgrade it caused an issue.   

My config.yml has this:
```
swiftmailer:
    transport: "%mailer_transport%"
    host:      "%mailer_host%"
    username:  "%mailer_user%"
    password:  "%mailer_password%"
    auth_mode: "%mailer_auth_mode%"
    port:      "%mailer_port%"
    encryption: "%mailer_encryption%"
#    spool:     { type: memory }
    logging:  true
    stream_options:
        ssl:
            allow_self_signed: true
            verify_peer: false
            verify_peer_name: false
```

but my config_dev.yml has this:
```
swiftmailer:
    spool:     { type: memory }
    stream_options:
        ssl:
            allow_self_signed: true
            verify_peer: false
            verify_peer_name: false
            cafile: "C:\\php7\\cacert.pem"
```
Notice the extra line for the "cafile" that is not in the config.yml.  

Why should  this make a difference?