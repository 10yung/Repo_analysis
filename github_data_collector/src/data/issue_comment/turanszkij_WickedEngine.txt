Translator tool can mess up bone/object parenting hierarchy and causes the model to blow up. Not exactly sure of the conditions, but happens a lot.
![ShadowResolution](https://user-images.githubusercontent.com/3905646/71629215-90698500-2bb9-11ea-9c28-c865a7349db6.jpg)

Is there a setting I need to tweak? I don't remember this being a problem before. 
build SPIRV got some error。the file  "cullingShaderHF.hlsli" is exist，but a fatal error reportted:  'cullingShaderHF.hlsli' file not found. 

[build_SPIRV_errors.log](https://github.com/turanszkij/WickedEngine/files/4010207/build_SPIRV_errors.log)

Most visible in less detailed shadow cascades.
Controller test is very bare bones, need better way that visualizes inputs, playerindex, change vibration effect, change LED color.
Documentation should be rewritten basically. Some large refactors should be finished first, like #64 #58 

Would be nice to add a system diagram.
Decide the convention, I saw there are some member with lower camel case, others with upper camel case, or something like result_passed, maybe good would be to have lower camel case for struct members (IE: TextureDesc)
Remove all shader specialization and keep only Shader with ShaderStage maybe.

What do you think?
MSAAResolve should be part of RenderPass and not expose it like it is now. In Vulkan, it is generally recommended to do this as part of a renderpass, so shouldn't maintain a version that is potentially less optimal than it should be.
DownloadResource is currently designed to stall the GPU, but easy to use. However, this is not good practice and difficult to implement in DX12 and Vulkan. Instead, DownloadResource() functionality should be removed and instead add the ability to:

-CopyBuffer/CopyTexture or CopyResource
-Readback staging buffer/texture

Like GPU queries, it will be up to the user to "ringbuffer" downloading resources. Helper functionality could be added, just like GPUQueryRing to safely read back resources without stalling the GPU.