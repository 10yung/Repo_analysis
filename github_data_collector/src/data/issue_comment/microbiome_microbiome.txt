Some time series data sets need to be added for examples.
BMI categories differ by population. group_bmi function could have multiple options
The read_mothur2phyloseq example is currently broken. The inst/extdata datasets will need to be moved to a separate data package or tutorial.
I would like to perform a pairwise adonis test with phyloseq object and a unifrac distance matrix but I don't know how?

Example:
data(GlobalPatterns)
metadata <- as(sample_data(GlobalPatterns), "data.frame")
dist.uf <- phyloseq::distance(GlobalPatterns, method = "unifrac")
ps.adonis <- adonis(dist.uf ~ SampleType, data = metadata, perm=9999)

SampleType 8 3.4957 0.43696 4.2046 0.66427 1e-04 ***

The adonis test showed that SampleType does explain part of the variation, but I want to know which Samples are different from each other.. With betadisper paired test is easy to perform, but I don't know how to do this within the adonis function with a uf distance matrix?

ps.disper <- betadisper(dist.uf, metadata$SampleType)
permutest(ps.disper, pair=TRUE)

Response: Distances
Df Sum Sq Mean Sq F N.Perm Pr(>F)
Groups 8 0.042397 0.0052996 2.9572 999 0.027 *
Residuals 17 0.030466 0.0017921

Signif. codes: 0 ‘’ 0.001 ‘’ 0.01 ‘’ 0.05 ‘.’ 0.1 ‘ ’ 1

Pairwise comparisons:
![image](https://user-images.githubusercontent.com/37101233/65871904-b5164c80-e37f-11e9-9a30-59409d14b26d.png)

The pairwise.adonis function does only include Bray-curtis and Jaccard distance..

Thank you in advance!

I am having issues converting my phyloseq object to the correct format in order to run the association analysis. If anyone can provide a workflow it would be greatly appreciated. 

The plot_landscape() and other functions fail if the named metadata variable is not present in the metadata (for instance color = "nationality" when the metadata does not have nationality). This should generate an informative error message stating that the referred variable is not available in the data (and perhaps show the available options).
Figure 3 type of plots from the [review](https://doi.org/10.1016/j.mib.2015.04.004) ?
Hi microbiome team,
Over in dada2 land we are interested in linking our package with other excellent Bioconductor microbiome packages. The primary way we have done this so far is to integrate "stubs" into [our tutorial](https://benjjneb.github.io/dada2/tutorial.html), which is by far our most accessed piece of documentation. To date, we have added brief examples and links to the DECIPHER package for their IDTaxa method, and the phyloseq package for more general microbiome analysis.

Would the microbiome team be amenable to dada2 adding a microbiome package stub to our tutorial? Do you have any suggestions on what sort of Rmarkdown code might be effective? (it should probably show "importing" of dada2 workflow data into microbiome and maybe the generation of a plot?)

I'm also interested in any other cross-linking ideas you might have. I think you all are doing great work!

I am trying to run the aggregate_taxa(pseq, "Genus") function on a phyloseq, using the microbiome package version 1.2.1. If I remove the phy_tree (phy_tree <- NULL) from the phyloseq object prior to running the function - I remember this was in a tutorial I followed previously - , I get the following error running the aggregate_taxa function:

> Error in `[<-`(`*tmp*`, nam, , value = colSums(matrix(d[taxa, ], ncol = nsamples(mypseq)))) : 
>   subscript out of bounds

When including the phy_tree, aggregate_taxa works (with the message "The top parameter to be implemented when phy_tree is available."), but plot_composition() gives an error on dimnames.

`ps.gen <- microbiome::aggregate_taxa(ps, "Genus", top = 10)`

> The top parameter to be implemented when phy_tree is available.

`plot.composition.CountAbun <- plot_composition(ps.gen, sample.sort="Description") + theme(legend.position = "bottom") + scale_fill_brewer("Genus", palette = "Paired") + theme_bw() +     theme(axis.text.x = element_text(angle = 90)) + ggtitle("Count abundance") + guide_italics + theme(legend.title = element_text(size=18))`

> Error in dimnames(x) <- dn :  length of 'dimnames' [1] not equal to array extent

Could anyone help me solve this issue? Thanks in advance.