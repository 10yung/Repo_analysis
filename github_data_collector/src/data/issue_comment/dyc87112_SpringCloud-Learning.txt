![image](https://user-images.githubusercontent.com/30524505/69742419-b4c7e100-1177-11ea-9ffd-be344a5f426e.png)


服务端注册看上去正常
![image](https://user-images.githubusercontent.com/3771334/65532685-d9f96280-df2e-11e9-88fa-21a4908964f1.png)

消费端初始化出错
org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'demoAppApplication.TestController': Injection of @org.apache.dubbo.config.annotation.Reference dependencies is failed; nested exception is java.lang.IllegalStateException: Failed to check the status of the service com.gsh56.demo.service.api.HelloService. No provider available for the service com.gsh56.demo.service.api.HelloService from the url spring-cloud://localhost:9090/org.apache.dubbo.registry.RegistryService?application=demo-app&default.lazy=false&default.sticky=false&dubbo=2.0.2&interface=com.gsh56.demo.service.api.HelloService&lazy=false&methods=hello&pid=12640&register.ip=192.168.90.35&release=2.7.1&side=consumer&sticky=false&timestamp=1569343527514 to the consumer 192.168.90.35 use dubbo version 2.7.1


当我用docker创建好了consul容器 以dev方式启动后,在http://localhost:8500/ui/dc1/services 页面中是可以看到consul-client服务的.调用client的dc方法也可正常获取到服务列表.但是使用loadBalancerClient.choose("consul-client")时,获取到的服务为null.导致下面的服务调用直接报空指针异常.请问大神这个是为什么.
docker的consul启动命令如下:
$ docker run -d --name=dev-consul -p 8500:8500 consul
报错：
Caused by: org.springframework.context.ApplicationContextException: Unable to start EmbeddedWebApplicationContext due to missing EmbeddedServletContainerFactory bean.


楼主，IDEA中，多个微服务能否在同一个窗口运行呢？因为，为每一个微服务开一个窗口，比较繁琐，随着服务越来越多，调试非常不方便
楼主，你好！看了你的博客所以买了你的书，书上的版本比较旧了，最新版Finchley版本上集成Logsatsh跑不起，其他的微服务也有微小的变化，可否更新一下教程呢？谢谢！另外，新项目用最新版本还是老版本呢？

No qualifying bean of type [] found for dependency: expected at least 1 bean which qualifies as autowire candidate for this dependency.

启动时出现，是因为接口没有实现类，这个问题怎么解决？还是说feign不是这么用的？谢谢！
**1.pom.xml如下**
	
```
<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.7.RELEASE</version>
		<relativePath/> 
	</parent>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
		<spring-cloud.version>Dalston.SR3</spring-cloud.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-eureka-server</artifactId>
		</dependency>		
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
```

**2.application.properties**
```
spring.application.name=eureka-server
server.port=1001
eureka.instance.hostname=localhost
eureka.client.register-with-eureka=false
eureka.client.fetch-registry=false
```

**3.http://localhost:1001/无示显示Dashboard，只返回一个xml**
![default](https://user-images.githubusercontent.com/25293955/33419737-c27626aa-d5e6-11e7-9205-49dbd8bb482d.png)


