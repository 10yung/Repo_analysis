My apologies if a solution/method for this already exists (from a bit of googling around and reading the docs, I did not find any help on the matter). Now that floating windows are a thing in vim as well, will command-t also support this feature?

Many thanks for the awesome work on this and your other plugins!  (I use them all üòÑ)
First of all I absolutely love this project and am really thankful to all of you for making it.

**Problem**
Ever since I recreated my VM a few weeks ago and reinstalled Command-T, the tag fuzzy find feature has been broken. When I open up the tag search menu, the prompt (>>) does not show and I cannot type anything.

When I hit Ctrl+c, I see the following error:
```
Command-T [Tags]                                                                                                                                                                                                                                            0,0-1          All
>>
Error detected while processing function commandt#TagFinder:
line    2:
NoMethodError: undefined method `map' for nil:NilClass
Interrupt: Press ENTER or type command to continue
```

**My environment:**
I think I am on some version on master, following 5.0.3, based on the following snipped in docs/command-t.text:
```
HISTORY                                         command-t-history

master (not yet released)

- Fix possible E434 when trying to jump to some help targets.
- Use execute() when available to avoid possible issues with
  potentially nested calls to :redir.
- Fix conflict with vim-cool plugin (#354).
- Close match listing after buffer deletion to avoid likely errors on
  subsequent interactions (#357, patch from Andrius Grabauskas).

5.0.3 (19 September 2018)

- Fix unlisted buffers showing up in :CommandTBuffer listing on Neovim.
- Fix edge cases with opening selections in tabs (#315).
- Fix possible degenerate performance of :CommandTBuffer and
  :CommandTMRU on Neovim.
- Handle missing match listing buffer in Neovim (#342).
```

```
  ~/main/kernel: lsb_release -a
LSB Version:    core-2.0-amd64:core-2.0-noarch:core-3.0-amd64:core-3.0-noarch:core-3.1-amd64:core-3.1-noarch:core-3.2-amd64:core-3.2-noarch:core-4.0-amd64:core-4.0-noarch:core-4.1-amd64:core-4.1-noarch:security-4.0-amd64:security-4.0-noarch:security-4.1-amd64:security-4
.1-noarch
Distributor ID: Ubuntu
Description:    Ubuntu 14.04.5 LTS
Release:        14.04
Codename:       trusty


  ~/main/kernel: vim --version
VIM - Vi IMproved 7.4 (2013 Aug 10, compiled Dec 18 2015 21:31:10)
Included patches: 1-882
Modified by pkg-vim-maintainers@lists.alioth.debian.org
Compiled by buildd@
Huge version without GUI.  Features included (+) or not (-):
+acl             +farsi           +mouse_netterm   +syntax
+arabic          +file_in_path    +mouse_sgr       +tag_binary
+autocmd         +find_in_path    -mouse_sysmouse  +tag_old_static
-balloon_eval    +float           +mouse_urxvt     -tag_any_white
-browse          +folding         +mouse_xterm     +tcl
++builtin_terms  -footer          +multi_byte      +terminfo
+byte_offset     +fork()          +multi_lang      +termresponse
+cindent         +gettext         -mzscheme        +textobjects
-clientserver    -hangul_input    +netbeans_intg   +title
-clipboard       +iconv           +path_extra      -toolbar
+cmdline_compl   +insert_expand   +perl            +user_commands
+cmdline_hist    +jumplist        +persistent_undo +vertsplit
+cmdline_info    +keymap          +postscript      +virtualedit
+comments        +langmap         +printer         +visual
+conceal         +libcall         +profile         +visualextra
+cryptv          +linebreak       +python          +viminfo
+cscope          +lispindent      -python3         +vreplace
+cursorbind      +listcmds        +quickfix        +wildignore
+cursorshape     +localmap        +reltime         +wildmenu
+dialog_con      +lua             +rightleft       +windows
+diff            +menu            +ruby            +writebackup
+digraphs        +mksession       +scrollbind      -X11
-dnd             +modify_fname    +signs           -xfontset
-ebcdic          +mouse           +smartindent     -xim
+emacs_tags      -mouseshape      -sniff           -xsmp
+eval            +mouse_dec       +startuptime     -xterm_clipboard
+ex_extra        +mouse_gpm       +statusline      -xterm_save
+extra_search    -mouse_jsbterm   -sun_workshop    -xpm
   system vimrc file: "$VIM/vimrc"
     user vimrc file: "$HOME/.vimrc"
 2nd user vimrc file: "~/.vim/vimrc"
      user exrc file: "$HOME/.exrc"
  fall-back for $VIM: "/usr/share/vim"
Compilation: gcc -c -I. -Iproto -DHAVE_CONFIG_H     -g -O2 -fPIE -fstack-protector --param=ssp-buffer-size=4 -Wformat -Werror=format-security -U_FORTIFY_SOURCE -D_FORTIFY_SOURCE=1      -I/usr/include/tcl8.6  -D_REENTRANT=1  -D_THREAD_SAFE=1  -D_LARGEFILE64_SOURCE=1
Linking: gcc   -L. -Wl,-Bsymbolic-functions -Wl,-z,relro -L/build/buildd/ruby1.9.1-1.9.3.484/debian/lib -rdynamic -Wl,-export-dynamic -Wl,-E  -Wl,-Bsymbolic-functions -fPIE -pie -Wl,-z,relro -Wl,-z,now -Wl,--as-needed -o vim        -lm -ltinfo -lnsl  -lselinux  -lacl -lattr -lgpm -ldl  -L/usr/lib -llua5.2 -Wl,-E  -fstack-protector -L/usr/local/lib  -L/usr/lib/perl/5.18/CORE -lperl -ldl -lm -lpthread -lcrypt -L/usr/lib/python2.7/config-x86_64-linux-gnu -lpython2.7 -lpthread -ldl -lutil -lm -Xlinker -export-dynamic -Wl,-O1 -Wl,-Bsymbolic-functions  -L/usr/lib/x86_64-linux-gnu -ltcl8.6 -ldl -lz -lpthread -lieee -lm -lruby-1.9.1 -lpthread -lrt -ldl -lcrypt -lm  -L/usr/lib


  ~/.vim/bundle/command-t: ruby --version
ruby 1.9.3p484 (2013-11-22 revision 43786) [x86_64-linux]
```

Ruby version in Vim:
```
:ruby puts "#{RUBY_VERSION}-p#{RUBY_PATCHLEVEL}"
1.9.3-p484
```

Please let me know if there's more info I can give or anything I can do to help. Thank you!
Hi everyone!
here's what I got: 

``` 
Vim Ruby version: 2.6.5-p114
Expected version: 2.6.3-p62
    # ruby 2.6.3p62 (2019-04-16 revision 67580) [universal.x86_64-darwin19]
```
```
ruby extconf.rb
checking for float.h... yes
checking for ruby.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for fcntl.h... yes
checking for stdint.h... yes
checking for sys/errno.h... yes
checking for sys/socket.h... yes
checking for ruby/st.h... yes
checking for st.h... yes
checking for pthread_create() in -lpthread... yes
creating Makefile
```
 ok, but

```
‚ùØ make
compiling ext.c
compiling heap.c
compiling match.c
compiling matcher.c
compiling watchman.c
linking shared-object ext.bundle
ld: warning: directory not found for option '-L/Applications/Xcode.app/Contents/Developer/Platforms/MacOSX.platform/Developer/SDKs/MacOSX10.15.Internal.sdk/usr/local/lib'
```
There's no `MacOSX10.15.Internal.sdk` dfolder, but `MacOSX10.15.sdk` and content  of `/Applications/Xc/C/D/P/MacOSX.platform/Developer/SDKs/MacOSX10.15.sdk/usr` is
```
‚ùØ ls
bin     include lib     libexec share
```
should i recompile with `ruby` version `2.6.3-p62`? 
Thanks for any thoughts 
Homebrew now has ruby listed as a dependency for both vim and macvim, which means there are version conflicts together with RVM (and likely rbenv). I have confirmed that the comment at https://github.com/wincent/command-t/issues/341#issuecomment-522216390 fixes this issue (for my computer running Catalina and macvim from homebrew), and am adding these to the instructions so they are easier for others to find.
I'm trying to work on [linkchecker](https://github.com/linkchecker/linkchecker) and I get the following error, most likely because there's a file in the test scaffolding with a non-UTF-8 filename:

<details>

```
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:84:in `=~'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:84:in `path_excluded?'                        
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:39:in `block (2 levels) in paths!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:38:in `each_line'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:38:in `block in paths!'
/usr/lib/ruby/2.5.0/open3.rb:205:in `popen_run'
/usr/lib/ruby/2.5.0/open3.rb:95:in `popen3'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:27:in `paths!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:37:in `paths'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/finder.rb:39:in `sorted_matches_for'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/finder.rb:39:in `sorted_matches_for'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:307:in `list_matches'
(eval):3:in `list_matches'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:360:in `list_matches!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:266:in `clear'
(eval):3:in `clear'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:380:in `show'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:147:in `show_file_finder'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:84:in `=~'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:84:in `path_excluded?'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:39:in `block (2 levels) in paths!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:38:in `each_line'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:38:in `block in paths!'
/usr/lib/ruby/2.5.0/open3.rb:205:in `popen_run'
/usr/lib/ruby/2.5.0/open3.rb:95:in `popen3'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:27:in `paths!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:37:in `paths'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/finder.rb:39:in `sorted_matches_for'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/finder.rb:39:in `sorted_matches_for'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:307:in `list_matches'
(eval):3:in `list_matches'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:360:in `list_matches!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:266:in `clear'
(eval):3:in `clear'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:380:in `show'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:147:in `show_file_finder'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:84:in `=~'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:84:in `path_excluded?'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:39:in `block (2 levels) in paths!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:38:in `each_line'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:38:in `block in paths!'
/usr/lib/ruby/2.5.0/open3.rb:205:in `popen_run'
/usr/lib/ruby/2.5.0/open3.rb:95:in `popen3'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:27:in `paths!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:37:in `paths'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/finder.rb:39:in `sorted_matches_for'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/finder.rb:39:in `sorted_matches_for'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:307:in `list_matches'
(eval):3:in `list_matches'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:360:in `list_matches!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:266:in `clear'
(eval):3:in `clear'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:380:in `show'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:147:in `show_file_finder'
Error detected while processing function commandt#FileFinder:
line    2:
ArgumentError: invalid byte sequence in UTF-8
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:84:in `=~'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:84:in `path_excluded?'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:39:in `block (2 levels) in paths!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:38:in `each_line'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:38:in `block in paths!'
/usr/lib/ruby/2.5.0/open3.rb:205:in `popen_run'
/usr/lib/ruby/2.5.0/open3.rb:95:in `popen3'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner/find_file_scanner.rb:27:in `paths!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/scanner/file_scanner.rb:37:in `paths'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/finder.rb:39:in `sorted_matches_for'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/finder.rb:39:in `sorted_matches_for'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:307:in `list_matches'
(eval):3:in `list_matches'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:360:in `list_matches!'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:266:in `clear'
(eval):3:in `clear'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:380:in `show'
/home/mg/.vim/bundle/command-t/ruby/command-t/lib/command-t/controller.rb:147:in `show_file_finder'
(eval):3:in `show_file_finder'
eval:1:in `<main>'
Press ENTER or type command to continue
```

</details>

To reproduce:

- git clone https://github.com/linkchecker/linkchecker
- cd linkchecker
- vim +CommandT

The bad file is in `tests/checker/data/dir/`.

I'm fine with Command-T being unable to open or even list this file, but denying me access to the rest of the tree is a bit inconvenient.
Recently Command-T has been slow to update. A vim profile revealed it was actually matchit.vim (for whatever reason). I disabled that and the issue improved dramatically but it is still slow.

I ran a benchmark and these are my results.

```
Rehearsal -----------------------------------------------------
pathological        5.710000   0.020000   5.730000 (  5.737230)
command-t           3.060000   0.000000   3.060000 (  3.068981)
chromium (subset)   3.420000   0.180000   3.600000 (  2.245106)
chromium (whole)   10.380000   0.040000  10.420000 (  2.852794)
big (400k)         15.570000   0.050000  15.620000 (  4.173315)
------------------------------------------- total: 38.430000sec

                        user     system      total        real
pathological        5.850000   0.010000   5.860000 (  5.867898)
command-t           2.750000   0.000000   2.750000 (  2.752038)
chromium (subset)   3.420000   0.190000   3.610000 (  2.293511)
chromium (whole)   10.600000   0.070000  10.670000 (  3.032051)
big (400k)         15.330000   0.050000  15.380000 (  4.214814)
Rehearsal -----------------------------------------------------
```

This is on a i7 4790k with 16GB ram, in an ubuntu 16.04 virtual machine (VirtualBox) with 4 cpu's and 8GB Ram.

One might think this was something to do with the virtual machine. But this has never been an issue in the past and nothing has really changed. I can only imagine I must be an edge case as this kind of performance drop wouldn't go unnoticed.

Have there been any significant changes to the code base that may have caused this?
Can I select files that I open frequently and put them in a CommandT list; so that I open the CommandT list to open a file from them?! 

I don't mean a list of the most recent opened file, I mean that I specifically select the files to be in that list.

How can I do that?!
I love this plugin. 

I'd like to be able to use it to open a particular directory in the explore view. At the moment I'm finding a file in the target directory and doing ":Ex" but I feel like there is probably a better way. 

Bonus - I'm also interested in using CommandT to effectively as a launcher - I sometimes want to find a, say, pdf and open it without leaving vim - atm I'm opening it in vim and doing :!open "%" - but, again, I feel like that's a rubbish way (particularly with big files).
When opening command-t and selecting a file, the error occurs:
```
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/session.rb:63:in `block in request'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/session.rb:107:in `main_thread_only'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/session.rb:48:in `request'          
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/api.rb:84:in `call'       
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/client.rb:34:in `method_missing'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider/vim.rb:19:in `public_send'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider/vim.rb:19:in `method_missing'
/home/user/.config/nvim/plugged/command-t/ruby/command-t/lib/command-t/finder.rb:43:in `open_selection'
/home/user/.config/nvim/plugged/command-t/ruby/command-t/lib/command-t/controller.rb:473:in `open_selection'
/home/user/.config/nvim/plugged/command-t/ruby/command-t/lib/command-t/controller.rb:237:in `accept_selection'
(eval):3:in `accept_selection'                                                                                
eval:1:in `<main>'            
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider.rb:45:in `eval'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider.rb:45:in `block (2 levels) in __define_ruby_execute'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider.rb:101:in `block (2 levels) in __wrap_client'       
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider.rb:123:in `__with_std_streams'               
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider.rb:100:in `block in __wrap_client'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider.rb:109:in `__with_exception_handling'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider.rb:99:in `__wrap_client'             
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/ruby_provider.rb:44:in `block in __define_ruby_execute'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/plugin/handler.rb:51:in `call'                         
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/host.rb:98:in `block in wrap_plugin_handler'
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/host.rb:36:in `handle'                      
/var/lib/gems/2.5.0/gems/neovim-0.7.1/lib/neovim/host.rb:28:in `block in run'
Error detected while processing function commandt#private#AcceptSelection[1]..provider#ruby#Call:
line   17:                                                                                       
RuntimeError: Vim(edit):E325: ATTENTION
Press ENTER or type command to continue
```

It'll still open the file. `:UpdateRemotePlugins` didn't help.
When the prompt is opened and a text is tried to pasted by Command + V, `e21: cannot make changes, 'modifiable' is off` error happens and text doesn't get pasted.

OS: MacOs
Terminal: Terminal Version 2.7 (377)