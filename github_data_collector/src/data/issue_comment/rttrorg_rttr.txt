

I have two separate files in static library (any kind of project will do). Let's call the files `a.cpp` with class `A` and `b.cpp` with class `B`. Each has one occurrence of `RTTR_REGISTRATION`.
Code in `main.cpp` does not depend on `B` directly in any way except `rttr::type<B>::get()` call. Since there are no hard dependencies, linker is throwing `b.obj` away from linking. All static objects from `b.cpp` file are gone and `RTTR_REGISTRATION` is never called.

For a moment I assumed `rttr` dealt with this problem in a way I'm now aware of yet. As it turns out this is yet to be solved.

Because of this linker behavior engines tends to have one huge file referencing known types or dummy function from files containing them. It does not even have to be called as long as linker sees reference.

Do you by any chance have solution to this problem?
Is it possible to reflect the contained key and value types of associative and sequential containers, given only the `rttr::type` of the container?

I don't see a way of doing that, apart from `get_template_arguments`, but I think that it is a no-go since the positions of key and value types depend on the underlying container type.

**Edit.** My goal is to recursively visit an `rttr::type` and find specific kinds of metadata.
I am trying to use RTTR to add reflection to existing OpenGL drawing commands. I am on Windows 10, VS 2019.

This is in my entry file, above `main`:

    #include <GL/glew.h>
    #include <GLFW/glfw3.h>
    #include <rttr/registration>
    
    using namespace rttr;
    
    static const GLenum TGL_LINES = GL_LINES;
    void tBegin(GLenum mode) {
        glBegin(mode);
    }
    void tEnd() {
        glEnd();
    }
    void tVertex2f(float x, float y) {
        glVertex2f(x, y);
    }
    
    RTTR_REGISTRATION
    {
        using namespace rttr;
        // with registration lines removed, program runs without error
        registration::property_readonly("GL_LINES", &TGL_LINES);
        registration::method("begin", &tBegin);
        registration::method("end", &tEnd);
        registration::method("vertex2f", &tVertex2f);
    }


I am able to build successfully but at runtime upon registering the reflections, VS gives an Exception Unhandled dialog popup for `ucrtbase.dll`:

    Unhandled exception at 0x7677CAA2 (ucrtbase.dll) in glfw-node.exe:
    An invalid parameter was passed to a function that considers invalid parameters fatal.

When the `registration::property_readonly` and `registration::method` lines are removed, the program runs without issue, including OpenGL.
If I just do:
```
  registration::class_<glm::mat4>("glm::mat4")
        .constructor<>();
```

Compilation fail with this error, it seems that rttr has troubles while deducting integral template arguments for an object.

home/umalon/srcs/rttr/install/include/rttr/detail/misc/template_type_trait_impl.h: In instantiation of ‘static std::vector<rttr::type> rttr::detail::template_type_trait<T<N1, N2, T1> >::get_template_arguments() [with T = glm::mat; T1 = float; int N1 = 4; int N2 = 4]’:
/home/umalon/srcs/rttr/install/include/rttr/detail/type/type_data.h:332:119:   required from ‘std::unique_ptr<rttr::detail::type_data> rttr::detail::make_type_data() [with T = glm::mat<4, 4, float, glm::packed_highp>]’
/home/umalon/srcs/rttr/install/include/rttr/detail/type/type_impl.h:304:94:   required from ‘rttr::detail::enable_if_t<std::integral_constant<bool, ((! std::is_function< <template-parameter-1-1> >::value) && (! std::is_same<T, void>::value))>::value, rttr::type> rttr::detail::create_or_get_type() [with T = glm::mat<4, 4, float, glm::packed_highp>; rttr::detail::enable_if_t<std::integral_constant<bool, ((! std::is_function< <template-parameter-1-1> >::value) && (! std::is_same<T, void>::value))>::value, rttr::type> = rttr::type]’
/home/umalon/srcs/rttr/install/include/rttr/detail/type/type_impl.h:371:52:   required from ‘static rttr::type rttr::type::get() [with T = glm::mat<4, 4, float, glm::packed_highp>]’
/home/umalon/srcs/rttr/install/include/rttr/detail/registration/registration_impl.h:99:35:   required from ‘rttr::registration::class_<Class_Type, Visitor_List>::class_(rttr::string_view) [with Class_Type = glm::mat<4, 4, float, glm::packed_highp>; Visitor_List = rttr::type_list<>; rttr::string_view = rttr::basic_string_view<char>]’
/home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.cpp:72:48:   required from here
/home/umalon/srcs/rttr/install/include/rttr/detail/misc/template_type_trait_impl.h:137:1: error: no matching function for call to ‘rttr::type::get<4>()’
  137 | RTTR_ADD_TYPE_TRAIT_SPECIALIZATION(int)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/umalon/srcs/rttr/install/include/rttr/type.h:1234,
                 from /home/umalon/srcs/rttr/install/include/rttr/detail/variant/variant_impl.h:31,
                 from /home/umalon/srcs/rttr/install/include/rttr/variant.h:1159,
                 from /home/umalon/srcs/rttr/install/include/rttr/registration.h:38,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.hpp:2,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.cpp:1:
/home/umalon/srcs/rttr/install/include/rttr/detail/type/type_impl.h:368:18: note: candidate: ‘template<class T> static rttr::type rttr::type::get()’
  368 | RTTR_INLINE type type::get() RTTR_NOEXCEPT
      |                  ^~~~
/home/umalon/srcs/rttr/install/include/rttr/detail/type/type_impl.h:368:18: note:   template argument deduction/substitution failed:
In file included from /home/umalon/srcs/rttr/install/include/rttr/detail/variant/variant_impl.h:31,
                 from /home/umalon/srcs/rttr/install/include/rttr/variant.h:1159,
                 from /home/umalon/srcs/rttr/install/include/rttr/registration.h:38,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.hpp:2,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.cpp:1:
/home/umalon/srcs/rttr/install/include/rttr/type.h:323:32: note: candidate: ‘template<class T> static rttr::type rttr::type::get(T&&)’
  323 |         RTTR_LOCAL static type get(T&& object) RTTR_NOEXCEPT;
      |                                ^~~
/home/umalon/srcs/rttr/install/include/rttr/type.h:323:32: note:   template argument deduction/substitution failed:
In file included from /home/umalon/srcs/rttr/install/include/rttr/detail/comparison/compare_equal.h:91,
                 from /home/umalon/srcs/rttr/install/include/rttr/detail/variant/variant_data_policy.h:37,
                 from /home/umalon/srcs/rttr/install/include/rttr/detail/variant/variant_impl.h:36,
                 from /home/umalon/srcs/rttr/install/include/rttr/variant.h:1159,
                 from /home/umalon/srcs/rttr/install/include/rttr/registration.h:38,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.hpp:2,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.cpp:1:
/home/umalon/srcs/rttr/install/include/rttr/detail/misc/template_type_trait_impl.h:137:1: error: no matching function for call to ‘rttr::type::get<4>()’
  137 | RTTR_ADD_TYPE_TRAIT_SPECIALIZATION(int)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
In file included from /home/umalon/srcs/rttr/install/include/rttr/type.h:1234,
                 from /home/umalon/srcs/rttr/install/include/rttr/detail/variant/variant_impl.h:31,
                 from /home/umalon/srcs/rttr/install/include/rttr/variant.h:1159,
                 from /home/umalon/srcs/rttr/install/include/rttr/registration.h:38,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.hpp:2,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.cpp:1:
/home/umalon/srcs/rttr/install/include/rttr/detail/type/type_impl.h:368:18: note: candidate: ‘template<class T> static rttr::type rttr::type::get()’
  368 | RTTR_INLINE type type::get() RTTR_NOEXCEPT
      |                  ^~~~
/home/umalon/srcs/rttr/install/include/rttr/detail/type/type_impl.h:368:18: note:   template argument deduction/substitution failed:
In file included from /home/umalon/srcs/rttr/install/include/rttr/detail/variant/variant_impl.h:31,
                 from /home/umalon/srcs/rttr/install/include/rttr/variant.h:1159,
                 from /home/umalon/srcs/rttr/install/include/rttr/registration.h:38,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.hpp:2,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.cpp:1:
/home/umalon/srcs/rttr/install/include/rttr/type.h:323:32: note: candidate: ‘template<class T> static rttr::type rttr::type::get(T&&)’
  323 |         RTTR_LOCAL static type get(T&& object) RTTR_NOEXCEPT;
      |                                ^~~
/home/umalon/srcs/rttr/install/include/rttr/type.h:323:32: note:   template argument deduction/substitution failed:
In file included from /home/umalon/srcs/rttr/install/include/rttr/detail/comparison/compare_equal.h:91,
                 from /home/umalon/srcs/rttr/install/include/rttr/detail/variant/variant_data_policy.h:37,
                 from /home/umalon/srcs/rttr/install/include/rttr/detail/variant/variant_impl.h:36,
                 from /home/umalon/srcs/rttr/install/include/rttr/variant.h:1159,
                 from /home/umalon/srcs/rttr/install/include/rttr/registration.h:38,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.hpp:2,
                 from /home/umalon/sorgenti/engine_git/engineJam/playgrounds/moving_forward/pretty_printers.cpp:1:
/home/umalon/srcs/rttr/install/include/rttr/detail/misc/template_type_trait_impl.h:137:1: error: could not convert ‘{<expression error>, <expression error>, rttr::type::get() [with T = float]()}’ from ‘<brace-enclosed initializer list>’ to ‘std::vector<rttr::type>’
  137 | RTTR_ADD_TYPE_TRAIT_SPECIALIZATION(int)
      | ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
      | |
      | <brace-enclosed initializer list>




I compiled it by Visual Studio 2019 and appeared compiler errors "src\rttr\variant.h(780,14): error C2039: 'string': is not a member of 'std'". It could be resolve by adding #include <string>
I'm trying to attach external functions as methods to a type in order to extend what can I do on a type without touching the class definition, e.g:

`struct myType {
  int data;
  RTTR_ENABLE()
}`

```
void dump_myType(myType* src) { ... }

RTTR_REGISTRATION
{
    rttr::registration::class_<myType>("myType")
         .constructor<>()
         .property("data", &myType::data)
         .method("dump", &dump_myType);
}
```
And then i call it with:
```
myType t;
method tdump = type::get(t).get_method("dump");
tdump.invoke(t,&t);
```

And it actually works, i also did this for integers, std::string and so on

```
RTTR_REGISTRATION
{
    rttr::registration::class_<int>("int")
         .method("dump", &dump_int);
}
```

Is this the correct way to achieve this behaviour?
Prefix options with RTTR_ and if it's added as a subdirectory, turn everything off (examples, docs, etc.)
Hello,
When I try to disable BUILD_RTTR_DYNAMIC option on cmake generator, it emits a lot of errors about missing target as follows

```
CMake Error at src/unit_tests/CMakeLists.txt:47 (add_executable):
  Target "unit_tests" links to target "RTTR::Core" but the target was not
  found.  Perhaps a find_package() call is missing for an IMPORTED target, or
  an ALIAS target is missing?

CMake Error at src/examples/json_serialization/CMakeLists.txt:42 (add_executable):
  Target "json_example" links to target "RTTR::Core" but the target was not
  found.  Perhaps a find_package() call is missing for an IMPORTED target, or
  an ALIAS target is missing?

CMake Error at src/examples/library_loading/library_loader_example/CMakeLists.txt:42 (add_executable):
  Target "library_loader_example" links to target "RTTR::Core" but the target
  was not found.  Perhaps a find_package() call is missing for an IMPORTED
  target, or an ALIAS target is missing?

CMake Error at src/examples/scripting/CMakeLists.txt:42 (add_executable):
  Target "scripting_example" links to target "RTTR::Core" but the target was
  not found.  Perhaps a find_package() call is missing for an IMPORTED
  target, or an ALIAS target is missing?

CMake Error at src/unit_tests/CMakeLists.txt:49 (add_dependencies):
  The dependency target "RTTR::Core" of target "unit_tests" does not exist.

CMake Error at src/examples/json_serialization/CMakeLists.txt:42 (add_executable):
  Target "json_example" links to target "RTTR::Core" but the target was not
  found.  Perhaps a find_package() call is missing for an IMPORTED target, or
  an ALIAS target is missing?

CMake Error at src/unit_tests/base_library/CMakeLists.txt:45 (add_library):
  Target "unit_test_base" links to target "RTTR::Core" but the target was not
  found.  Perhaps a find_package() call is missing for an IMPORTED target, or
  an ALIAS target is missing?

CMake Error at src/unit_tests/plugin/CMakeLists.txt:45 (add_library):
  Target "unit_test_plugin" links to target "RTTR::Core" but the target was
  not found.  Perhaps a find_package() call is missing for an IMPORTED
  target, or an ALIAS target is missing?
```

I figure that's because there's no link to RTTR::Core_Lib_STL in those projects.
Is there a reason for the missing link?

I've also submitted a PR that disables Benchmarks, Unit Tests, and Examples if the user disables BUILD_RTTR_DYNAMIC, you might want to take a look.
[Fix disabling dynamic/shared version of RTTR #247](https://github.com/rttrorg/rttr/pull/247)