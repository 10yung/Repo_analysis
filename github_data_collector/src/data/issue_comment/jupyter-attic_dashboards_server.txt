Hi,
I'm trying to get dashboards server working, using the Cloud Foundry setup. I can upload a notebook/dashboard to the server, and I can communicate directly with the kernel gateway. However, there is a problem when trying to view a dashboard. When trying to open INTRO, I get an error (500 internal server error, but if I follow the failed resource I get this:)

Error 404
Error getting notebook info: /home/vcap/node_modules/jupyter-dashboards-server/data/api/kernels - ENOENT: no such file or directory, stat


The failure happens in line 194 in the dashboards-server api routes file:
[https://github.com/jupyter-attic/dashboards_server/blob/master/routes/api.js](https://github.com/jupyter-attic/dashboards_server/blob/master/routes/api.js
)

I think the RegEx on line 182 is to blame. Anyone having the same issue?
You make clear that `dashboardss_server` is retired in the Readme.txt file. However, if it is retired, it's there another solution? Or in any case we should keep using dashboards_server? I saw this project in action yesterday, and it is pretty neat, that's why I ask.

Thanks!
x
I have a dashboard notebook which uses Output widgets and callbacks to bind outputs of one cell to widgets rendered in another.  This lets me have a single set of controls that effect several different plots and then use the layout extension to lay them out nicely.  While all the above works in the notebook and the preview dashboard when I publish this to the dashboard server the output widgets don't render (if I move them back into a single monolithic @interact block they do render).  I think this might be related to the fact that Output widgets have only recently gotten support in embedded bundles (issue [1410](https://github.com/jupyter-widgets/ipywidgets/pull/1410) in ipywidgets).  Any idea if there is a way around this since it makes it quite hard to build a nicely laid out dashboard.


I lost a lot of time because the server was displaying in log 
`STACK: undefined` and jupyterhub was only showing `500: Internal Server Error`. After adding displaying explicit error msg I found out it was permissions issue 
`
Filed to upload file: EACCES: permission denied, open '/srv/dashboards/notebook/Untilted3.ipynb'
`
I think it would be useful to display whole error msg.


Hi,
I am trying to increase the KERNEL_RETENTIONTIME from 30000 milliseconds to 50000, I changed that value in these files:

- in docker-compose as env variable
![image](https://user-images.githubusercontent.com/18538611/29098399-357011bc-7c6d-11e7-89ee-d73680e450ae.png)

- in config.json file (/usr/local/lib/node_modules/jupyter-dashboards-server/config.json)
![image](https://user-images.githubusercontent.com/18538611/29098430-5784a740-7c6d-11e7-931f-d40ecda82f62.png)

- in api.js  file (/usr/local/lib/node_modules/jupyter-dashboards-server/routes/api.js)
![image](https://user-images.githubusercontent.com/18538611/29098482-901a9024-7c6d-11e7-9c37-700e0e1d8713.png)

For every change I restarted my container, but anything could change this waiting time, i have a table that render result in more or less 40 seconds, and I'm blocked to see the result due this limit.

![image](https://user-images.githubusercontent.com/18538611/29098638-6e616218-7c6e-11e7-8a63-b3f326facb51.png)


Thanks!!



![untitled](https://user-images.githubusercontent.com/747410/29028317-7f579380-7ba1-11e7-9568-e43ea7f958f2.jpg)

Hi,
Dropdown widget in dashboard server is being displayed to up instead to down, and this cause an overlapping by the limit of the browser window
- dashboard_server = 0.7
- jupyter_notebook (5.0.0) (anaconda)
- Ipywidgets = 6

![dashboard issue](https://user-images.githubusercontent.com/18538611/29003651-999a4f7c-7a88-11e7-80a0-886211389f9e.png)


Hi there,

I am trying my best to follow the instructions [here](https://www.youtube.com/watch?v=aXR2d9k9-h4&t=3s), [here](https://github.com/ch41rmn/PyConAU2016_-_Interactive_Data_Displays_With_Jupyter_Notebooks), and [here](https://github.com/jupyter-incubator/dashboards_server) in order to deploy a dashboard as a web app.

I work for a school board and the end-users of my reports are those who do not know how to program, but would love to use widgets to explore the data interactively. (So, I'm basically Alice). 

I've installed the packages specified in the documentation, and done the following to get the kernal gateway, notebook server, and dashboard server running.

```
# run the kernel gateway in the background using default settings
jupyter-kernelgateway &
# listening on port 8888

# run the notebook server
juputer notebook &
# listening on port 8889

# run the dashboard server
jupyter-dashboards-server --NOTEBOOKS_DIR=`pwd` --KERNEL_GATEWAY_URL=http://127.0.0.1:8888 &
# listening on port 3000
```

However, when I go to 127.0.0.1:8888 and select my notebook, nothing shows up except for the following:

![jup](https://user-images.githubusercontent.com/4624246/28682488-2846d396-72cb-11e7-8c6c-8bbbd46341d5.PNG)

The notebook has a few "select" widgets and they interact with one another calling python callbacks to do certian things. Here is a part of what the notebook looks like:

![before](https://user-images.githubusercontent.com/4624246/28682553-6737a170-72cb-11e7-94b7-d2880213e111.PNG)

Could you please help me to understand what I am doing wrong, and even if the notebook were to show up, what I would have to do to share it with another user (and have it maintain interactivity). 

Thanks very much,

Al


I'm interested in using two widgets with the Jupyter Dashboard Server:
- `IPython.display.FileLinks`
- `fileupload.FileUploadWidget` from https://pypi.python.org/pypi/fileupload/

These widgets work successfully from the notebook view, but when I deploy to the Jupyter Dashboard Server these widgets don't appear.

Other widgets such as the dropdown menu from `@interact(hue=['smoker', 'sex', 'time', 'day'])` in `hello_world.ipynb` and `ipywidgets.IntSlider` work just fine in the dashboard server.

I'm running the servers using the `docker_deploy` solution from https://github.com/jupyter-incubator/dashboards_setup. I've modified the Dockerfiles for both the notebook and kernel to include `RUN pip install fileupload`.

I'm not sure if this is a bug or if I'm missing a crucial step for making this work.