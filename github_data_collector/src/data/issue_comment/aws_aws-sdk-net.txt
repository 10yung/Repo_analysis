In accordance with:
https://aws.amazon.com/blogs/developer/introducing-retry-throttling/

https://github.com/aws/aws-sdk-net/blob/40fbe04bd50fd0718fc0804fbf2d0b68b89122c2/sdk/src/Core/Amazon.Runtime/Pipeline/RetryHandler/DefaultRetryPolicy.cs#L200
I did a binary search of the NuGet versions for NuGet AWSSDK.Core to find exactly when the breakage occurs to me.

I can connect and describe S3 buckets successfully up to 3.3.101, but if I update to anything newer (even just 3.3.101.1), then I get 403 errors at my first command.

Inmost exception message: The remote server returned an error: (403) Forbidden.
HRESULT: -2146233079

Middle exception message: The remote server returned an error: (403) Forbidden.
HRESULT: -2146233088

Outer exception message: The AWS Access Key Id you provided does not exist in our records.
HRESULT: -2146233088

I did my binary search through NuGet AWSSDK.Core versions to find the breaking point without changing anything in my code at all, just switching the installed version and testing each time.

Exception occurs at my first call for data, which is an s3 ListBuckets call, like this:

Amazon.S3.AmazonS3Client s3 = …
s3.ListBuckets();  // <- 403 exception

If I revise my code so my first actual call is an ec2.DescribeVps() call, I get the same result

Amazon.EC2.AmazonEC2Client ec2 = …
foreach … ec2.DescribeVpcs().Vpcs    // <- 403 exception

## Your Environment
<!--- Include as many relevant details about the environment where the bug was discovered -->
* AWSSDK.Core version used: 3.3.101.1
* Service assembly and version used: ? (Don't know what this means)
* Operating System and version: Windows 10
* Visual Studio version: Visual Studio 2017
* Targeted .NET platform: .NET 4.8
I am using config & credential files, and have verified the AWS keys multiple times --plus of course they work when I set the Core version to 3.3.101.


[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html
Something has changed between 3.3.109.4 and 3.3.110

I got an email from AWS saying we are using an old version of the S3 SDK. So I upgraded and it's caused alot of pain.

I went from 3.3.106.2, all the way to 3.3.110.12, and it caused an outage. 

I then proceeded to try:

3.3.106.2 - OK 300-500ms
3.3.107 - OK 300-500ms
3.3.108 - OK 300-500ms
3.3.109 - OK 300-500ms
3.3.109.4 - OK 300-500ms (December 12 release)
3.3.110 - BAD (every request > 2.5s) (December 13 release)
3.3.110.12 - BAD (every request > 2.5s)

(the high latency Singapore to Oregon)

The version of Core is the latest one (3.3.104.16) for all the tested versions above. So I believe it's isolated to JUST the S3 assembly. 

## Expected Behavior
Should be fast to create expiring urls.

## Current Behavior
I'm unsure which part has gotten slow, but between creating the client and generating the url, it's slow.

## Possible Solution
I can't find the changes between the 2 versions.

## Steps to Reproduce (for bugs)
In a loop, create an instance of S3 client (inside the loop), and generate an expiring url. 

## Context
This is causing requests in IIS to queue up and take 2+ seconds, as they queue up they begin to take longer and longer until they take the site offline due to 100% CPU usage.

## Your Environment
Windows 10 / Windows Server 2019
.NET Core 4.8
AWSSDK.Core (any)
AWSSDK.S3 3.3.110 onward

I'm trying to use `PaginatedResourceFactory.Create<S3Object, ListObjectsRequest, ListObjectsResponse>` to get informations about S3 objects , but I'm receiving this exception: **System.ArgumentException: 'AmazonS3Client has no method called ListObjectsAsync'**
I'm using the same idea of the method **EnumerateFiles(string searchPattern, SearchOption searchOption)** from this [class ](https://github.com/aws/aws-sdk-net/blob/master/sdk/src/Services/S3/Custom/_bcl/IO/S3DirectoryInfo.cs)

## Expected Behavior
Get files from S3 using PaginatedResourceFactory

## Current Behavior
I'm receiving this exception **System.ArgumentException: 'AmazonS3Client has no method called ListObjectsAsync'** when I call the method **EnumerateFiles**.

## Steps to Reproduce (for bugs)
1- Install the lasted version of AWSS3 SDK
2- Use this method:

```
 public IEnumerable<S3FileInfo> EnumerateFiles(string searchPattern, SearchOption searchOption)
        {
            IEnumerable<S3FileInfo> files = null;
            var request = new ListObjectsRequest
            {
                BucketName = BucketName,
                Delimiter = "/",
                Prefix = S3Helper.EncodeKey(key)
            };

            files = new EnumerableConverter<S3Object, S3FileInfo>
                (((IEnumerable<S3Object>)(PaginatedResourceFactory.Create<S3Object, ListObjectsRequest, ListObjectsResponse>(new PaginatedResourceInfo()
                        .WithClient(S3Client)
                        .WithMethodName("ListObjectsAsync")
                        .WithRequest(request)
                        .WithItemListPropertyPath("S3Objects")
                        .WithTokenRequestPropertyPath("Marker")
                        .WithTokenResponsePropertyPath("NextMarker"))))
                    .Where(s3Object => !string.Equals(S3Helper.DecodeKey(s3Object.Key), key, StringComparison.Ordinal) && !s3Object.Key.EndsWith("\\", StringComparison.Ordinal)),
                    s3Object => new S3FileInfo(S3Client, BucketName, S3Helper.DecodeKey(s3Object.Key)));


            //handle if recursion is set
            if (searchOption == SearchOption.AllDirectories)
            {
                IEnumerable<S3DirectoryInfo> foldersToSearch = EnumerateDirectories();
                foreach (S3DirectoryInfo dir in foldersToSearch)
                {
                    files = files.Concat(dir.EnumerateFiles(searchPattern, searchOption));
                }
            }

            //filter based on search pattern
            var regEx = WildcardToRegex(searchPattern);
            files = files.Where(s3fileInfo => Regex.IsMatch(s3fileInfo.Name, regEx, RegexOptions.IgnoreCase));
            return files;
        }
```

3- Call the method 

## Context
I ported my current project to .Net Core. After ported it, I notice [these methods](https://github.com/aws/aws-sdk-net/blob/master/sdk/src/Services/S3/Custom/_bcl/IO/S3DirectoryInfo.cs) don't exist anymore. These methods are critical for my application and I tried to use the same idea of the old SDK.

## Your Environment
* AWSSDK.S3 version used: 3.3.110.11
* Operating System and version: Windows 10 Enterprise
* Visual Studio version: Microsoft Visual Studio Enterprise 2019
Version 16.4.2
* Targeted .NET platform: .NET Standard 2.0

## .NET Core Info

* .NET Core version used for development: 3.1.100
* .NET Core version installed in the environment where application runs:  3.1.100
* Output of `dotnet --info`:  SDK do .NET Core (refletindo qualquer global.json):
 Version:   3.1.100
 Commit:    cd82f021f4

Ambiente de runtime:
 OS Name:     Windows
 OS Version:  10.0.17134
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.1.100\

Host (useful for support):
  Version: 3.1.0
  Commit:  65f04fb6db



If you import AWSSDK.S3 in a Xamarin.Mac project using NuGet and try to build, it will fail with the following error:

    MMP : error MM2001: Could not link assemblies. Reason: Error while processing references of 'PasswordManagement, Version=1.0.7312.14322, Culture=neutral, PublicKeyToken=null'
    --- inner exception
    Mono.Linker.LoadException: Error while processing references of 'PasswordManagement, Version=1.0.7312.14322, Culture=neutral, PublicKeyToken=null' ---> Mono.Linker.LoadException: Error while processing references of 'AWSSDK.S3, Version=3.3.0.0, Culture=neutral, PublicKeyToken=885c28607f98e604' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'PCLCrypto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'PCLCrypto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c'
      at Mono.Cecil.BaseAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000ff] in /Users/builder/jenkins/workspace/archive-mono/2019-08/ios/release/external/cecil/Mono.Cecil/BaseAssemblyResolver.cs:172 
      at Mono.Linker.AssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000b2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/AssemblyResolver.cs:123 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00009] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:232 
       --- End of inner exception stack trace ---
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00033] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:240 
      at Mono.Linker.LinkContext.ResolveReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00024] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:289 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00029] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:52 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
       --- End of inner exception stack trace ---
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00053] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:56 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
       --- End of inner exception stack trace ---
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00053] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:56 
      at MonoMac.Tuner.LoadOptionalReferencesStep.ProcessAssemblyReferences (Mono.Cecil.AssemblyDefinition assembly) [0x0004b] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/Tuning.cs:309 
      at MonoMac.Tuner.LoadOptionalReferencesStep.ProcessAssembly (Mono.Cecil.AssemblyDefinition assembly) [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/Tuning.cs:297 
      at Mono.Linker.Steps.BaseStep.Process (Mono.Linker.LinkContext context) [0x0002e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/BaseStep.cs:61 
      at Mono.Linker.Pipeline.ProcessStep (Mono.Linker.LinkContext context, Mono.Linker.Steps.IStep step) [0x0000f] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/Pipeline.cs:134 
      at Mono.Linker.Pipeline.Process (Mono.Linker.LinkContext context) [0x00011] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/Pipeline.cs:126 
      at MonoMac.Tuner.Linker.Process (MonoMac.Tuner.LinkerOptions options, MonoMac.Tuner.MonoMacLinkContext& context, System.Collections.Generic.List`1[System.String]& assemblies) [0x00059] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/Tuning.cs:88 
    ---
    --- inner exception
    Mono.Linker.LoadException: Error while processing references of 'AWSSDK.S3, Version=3.3.0.0, Culture=neutral, PublicKeyToken=885c28607f98e604' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'PCLCrypto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'PCLCrypto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c'
      at Mono.Cecil.BaseAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000ff] in /Users/builder/jenkins/workspace/archive-mono/2019-08/ios/release/external/cecil/Mono.Cecil/BaseAssemblyResolver.cs:172 
      at Mono.Linker.AssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000b2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/AssemblyResolver.cs:123 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00009] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:232 
       --- End of inner exception stack trace ---
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00033] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:240 
      at Mono.Linker.LinkContext.ResolveReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00024] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:289 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00029] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:52 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
       --- End of inner exception stack trace ---
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00053] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:56 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
    ---
    --- inner exception
    Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'PCLCrypto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'PCLCrypto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c'
      at Mono.Cecil.BaseAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000ff] in /Users/builder/jenkins/workspace/archive-mono/2019-08/ios/release/external/cecil/Mono.Cecil/BaseAssemblyResolver.cs:172 
      at Mono.Linker.AssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000b2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/AssemblyResolver.cs:123 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00009] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:232 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00033] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:240 
      at Mono.Linker.LinkContext.ResolveReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00024] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:289 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00029] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:52 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
    ---
    --- inner exception
    Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'PCLCrypto, Version=1.0.0.0, Culture=neutral, PublicKeyToken=d4421c8a4786956c'
      at Mono.Cecil.BaseAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000ff] in /Users/builder/jenkins/workspace/archive-mono/2019-08/ios/release/external/cecil/Mono.Cecil/BaseAssemblyResolver.cs:172 
      at Mono.Linker.AssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000b2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/AssemblyResolver.cs:123 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00009] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:232 
    ---
      at MonoMac.Tuner.Linker.Process (MonoMac.Tuner.LinkerOptions options, MonoMac.Tuner.MonoMacLinkContext& context, System.Collections.Generic.List`1[System.String]& assemblies) [0x00218] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/Tuning.cs:116 
      at Xamarin.Bundler.Driver.Link () [0x001b1] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/driver.cs:1454 
      at Xamarin.Bundler.Driver.Pack (System.Collections.Generic.IList`1[T] unprocessed) [0x004e2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/driver.cs:778 
      at Xamarin.Bundler.Driver.Main2 (System.String[] args) [0x010be] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/driver.cs:510 
      at Xamarin.Bundler.Driver.Main (System.String[] args) [0x00015] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/driver.cs:205 
    The command exited with code 1.


If I then import PCLCrypto directly in the project, I get the following error:

    MMP : error MM2001: Could not link assemblies. Reason: Error while processing references of 'PasswordManagement, Version=1.0.7312.14322, Culture=neutral, PublicKeyToken=null'
    --- inner exception
    Mono.Linker.LoadException: Error while processing references of 'PasswordManagement, Version=1.0.7312.14322, Culture=neutral, PublicKeyToken=null' ---> Mono.Linker.LoadException: Error while processing references of 'AWSSDK.S3, Version=3.3.0.0, Culture=neutral, PublicKeyToken=885c28607f98e604' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065'
      at Mono.Cecil.BaseAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000ff] in /Users/builder/jenkins/workspace/archive-mono/2019-08/ios/release/external/cecil/Mono.Cecil/BaseAssemblyResolver.cs:172 
      at Mono.Linker.AssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000b2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/AssemblyResolver.cs:123 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00009] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:232 
       --- End of inner exception stack trace ---
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00033] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:240 
      at Mono.Linker.LinkContext.ResolveReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00024] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:289 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00029] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:52 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
       --- End of inner exception stack trace ---
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00053] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:56 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
       --- End of inner exception stack trace ---
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00053] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:56 
      at MonoMac.Tuner.LoadOptionalReferencesStep.ProcessAssemblyReferences (Mono.Cecil.AssemblyDefinition assembly) [0x0004b] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/Tuning.cs:309 
      at MonoMac.Tuner.LoadOptionalReferencesStep.ProcessAssembly (Mono.Cecil.AssemblyDefinition assembly) [0x00001] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/Tuning.cs:297 
      at Mono.Linker.Steps.BaseStep.Process (Mono.Linker.LinkContext context) [0x0002e] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/BaseStep.cs:61 
      at Mono.Linker.Pipeline.ProcessStep (Mono.Linker.LinkContext context, Mono.Linker.Steps.IStep step) [0x0000f] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/Pipeline.cs:134 
      at Mono.Linker.Pipeline.Process (Mono.Linker.LinkContext context) [0x00011] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/Pipeline.cs:126 
      at MonoMac.Tuner.Linker.Process (MonoMac.Tuner.LinkerOptions options, MonoMac.Tuner.MonoMacLinkContext& context, System.Collections.Generic.List`1[System.String]& assemblies) [0x00059] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/Tuning.cs:88 
    ---
    --- inner exception
    Mono.Linker.LoadException: Error while processing references of 'AWSSDK.S3, Version=3.3.0.0, Culture=neutral, PublicKeyToken=885c28607f98e604' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065'
      at Mono.Cecil.BaseAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000ff] in /Users/builder/jenkins/workspace/archive-mono/2019-08/ios/release/external/cecil/Mono.Cecil/BaseAssemblyResolver.cs:172 
      at Mono.Linker.AssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000b2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/AssemblyResolver.cs:123 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00009] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:232 
       --- End of inner exception stack trace ---
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00033] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:240 
      at Mono.Linker.LinkContext.ResolveReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00024] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:289 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00029] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:52 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
       --- End of inner exception stack trace ---
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00053] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:56 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
    ---
    --- inner exception
    Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065' ---> Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065'
      at Mono.Cecil.BaseAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000ff] in /Users/builder/jenkins/workspace/archive-mono/2019-08/ios/release/external/cecil/Mono.Cecil/BaseAssemblyResolver.cs:172 
      at Mono.Linker.AssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000b2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/AssemblyResolver.cs:123 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00009] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:232 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00033] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:240 
      at Mono.Linker.LinkContext.ResolveReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00024] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:289 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00029] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:52 
      at Mono.Linker.Steps.LoadReferencesStep.ProcessReferences (Mono.Cecil.AssemblyDefinition assembly) [0x00046] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker.Steps/LoadReferencesStep.cs:54 
    ---
    --- inner exception
    Mono.Cecil.AssemblyResolutionException: Failed to resolve assembly: 'Xamarin.iOS, Version=0.0.0.0, Culture=neutral, PublicKeyToken=84e04ff9cfb79065'
      at Mono.Cecil.BaseAssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000ff] in /Users/builder/jenkins/workspace/archive-mono/2019-08/ios/release/external/cecil/Mono.Cecil/BaseAssemblyResolver.cs:172 
      at Mono.Linker.AssemblyResolver.Resolve (Mono.Cecil.AssemblyNameReference name, Mono.Cecil.ReaderParameters parameters) [0x000b2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/AssemblyResolver.cs:123 
      at Mono.Linker.LinkContext.Resolve (Mono.Cecil.IMetadataScope scope) [0x00009] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/builds/mono-ios-sdk-destdir/ios-sources/external/linker/src/linker/Linker/LinkContext.cs:232 
    ---
      at MonoMac.Tuner.Linker.Process (MonoMac.Tuner.LinkerOptions options, MonoMac.Tuner.MonoMacLinkContext& context, System.Collections.Generic.List`1[System.String]& assemblies) [0x00218] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/Tuning.cs:116 
      at Xamarin.Bundler.Driver.Link () [0x001b1] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/driver.cs:1454 
      at Xamarin.Bundler.Driver.Pack (System.Collections.Generic.IList`1[T] unprocessed) [0x004e2] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/driver.cs:778 
      at Xamarin.Bundler.Driver.Main2 (System.String[] args) [0x010be] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/driver.cs:510 
      at Xamarin.Bundler.Driver.Main (System.String[] args) [0x00015] in /Users/builder/jenkins/workspace/xamarin-macios/xamarin-macios/tools/mmp/driver.cs:205 
    The command exited with code 1.
  Done executing task "Mmp" -- FAILED.

Which is quite weird as it tries to resolve the Xamarin.iOS assembly while this is definitely a C# project.

## Expected Behavior
The project should build properly without Linker errors.

## Current Behavior
The project fails to build, initially with an error loading the PCLCrypto assembly and then with an error loading Xamarin.iOS assembly after referencing PCLCrypto NuGet package.

## Steps to Reproduce (for bugs)

1. Download the following project: [LinkerErrorTest.zip](https://github.com/aws/aws-sdk-net/files/4035380/LinkerErrorTest.zip)
2. Build it (you will get the PCLCrypto error)
3. Import PCLCrypto NuGet package
4. Build it again (you will get the Xamarin.iOS error)

## Context
I'm converting my Xamarin.Mac Full project to a Xamarin.Mac Modern project. With the Xamarin.Mac Full framework I had no issue with the package.

## Your Environment
* AWSSDK.S3 version used: 3.3.109
* Operating System and version: macOS 10.15 (19A583)
* Visual Studio version: Mac 8.4 Preview (8.4 build 2637)
* Targeted .NET platform: Xamarin.Mac
Hi, 

As mentioned in the title, I get the following error, when I try to run ScanAsync in blazor wasm:
Property AllowAutoRedirect is not supported. I'm not getting, why this happens. Am I doing something wrong?



## Expected Behavior
I want to retrieve Data from a DynamoDB Table with a ScanCondition

## Current Behavior
Currently I get the Exception Property AllowAutoRedirect is not supported.

## Steps to Reproduce (for bugs)
My setup is the following:
.NETCore 3.1 blazor template for webassembly.
Installed Nuget:
```
AWSSDK.Extensions.NETCore.Setup
AWSSDK.DynamoDBv2 
```

in Startup.cs
```
        public void ConfigureServices(IServiceCollection services)
        {
            services.AddDefaultAWSOptions(new AWSOptions(){
                Region = Amazon.RegionEndpoint.EUWest1,
                Credentials  = new BasicAWSCredentials("", "")
            });
            services.AddAWSService<IAmazonDynamoDB>();
            services.AddSingleton<DataService>();
           
        }
```

in DataService.cs
```
    public class DataService
    {   
        private readonly IAmazonDynamoDB _dynamoDbClient;
        
        public DataService(IAmazonDynamoDB dynamoDbClient){
            _dynamoDbClient = dynamoDbClient;
        }

        public async Task<List<Data>> GetData (string client=""){
           try{
                using(var context = new DynamoDBContext (_dynamoDbClient)){
                    var data= await context.ScanAsync<Data>(
                        new List<ScanCondition>(){
                            new ScanCondition("ID",ScanOperator.BeginsWith, client )
                            }).GetRemainingAsync();
                    return data.ToList();
                }
           }
           catch(Exception ex){
               Console.WriteLine(ex.Message);
               return new List<Data>();
           }
        }
    }
```

## Your Environment
.NETCore 3.1 blazor template for webassembly.
Installed Nuget:
```
AWSSDK.Extensions.NETCore.Setup
AWSSDK.DynamoDBv2 
```

## .NET Core Info
.NET Core SDK (reflecting any global.json):
 Version:   3.1.100
 Commit:    cd82f021f4

Runtime Environment:
 OS Name:     Windows
 OS Version:  10.0.18362
 OS Platform: Windows
 RID:         win10-x64
 Base Path:   C:\Program Files\dotnet\sdk\3.1.100\

Host (useful for support):
  Version: 3.1.0
  Commit:  65f04fb6db

.NET Core SDKs installed:
  3.1.100 [C:\Program Files\dotnet\sdk]

.NET Core runtimes installed:
  Microsoft.AspNetCore.All 2.1.14 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.All]
  Microsoft.AspNetCore.App 2.1.14 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.AspNetCore.App 3.1.0 [C:\Program Files\dotnet\shared\Microsoft.AspNetCore.App]
  Microsoft.NETCore.App 2.1.14 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.NETCore.App 3.1.0 [C:\Program Files\dotnet\shared\Microsoft.NETCore.App]
  Microsoft.WindowsDesktop.App 3.1.0 [C:\Program Files\dotnet\shared\Microsoft.WindowsDesktop.App] 


Fixes https://github.com/aws/aws-sdk-net/issues/1495

When using AmazonOrganizationsClient we sometimes getting "AWS Organizations can't complete your request because another request is already in progress" with "TooManyRequestsException".

while looking at the runtime implementation I've noticed this:
https://github.com/aws/aws-sdk-net/blob/a1c5dec2369e463133edd146d93cbdb7d274c032/sdk/src/Core/Amazon.Runtime/Pipeline/RetryHandler/DefaultRetryPolicy.cs#L87-L94

Its seems reasonable to act the same as was done in aws-sdk-js (https://github.com/aws/aws-sdk-js/pull/2246) and add the "TooManyRequestsException" to the default retry policy.

<!--- Provide a general summary of the issue in the Title above -->
AmazonS3Config inherits ClientConfig which calls the virtual Initialize method. AmazonS3Config overrides Initialize and calls UpdateEndpointForUsEast1Regional. So users of the AmazonS3Config class don't have a chance to set the USEast1RegionalEndpointValue property before UpdateEndpointForUsEast1Regional is called.
## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->
This is what I want to do, but currently new AmazonS3Config() throws an exception.
```
var awsCredentials = new BasicAWSCredentials("MyAccessKey", "MySecretKey");

var amazonS3Config = new AmazonS3Config();
amazonS3Config.RegionEndpoint = RegionEndpoint.USEast1;
amazonS3Config.USEast1RegionalEndpointValue = S3UsEast1RegionalEndpointValue.Regional;

var amazonS3Client = new AmazonS3Client(awsCredentials, amazonS3Config);
```
## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- Include full errors, uncaught exceptions, stack traces, and relevant logs -->
<!--- To turn on SDK logging, follow instructions provided [here][logging] -->
<!--- If service responses are relevant, please include Fiddler-captured wirelogs -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->
My company has our own secret management system so we don't use the AWS SDK credential manager. We also run our websites as a network service if that makes a difference. When creating an instance of AmazonS3Config we get the following error.
```
System.TypeInitializationException: The type initializer for 'Amazon.Runtime.Internal.Settings.PersistenceManager' threw an exception. ---> System.UnauthorizedAccessException: Access to the path 'C:\Windows\system32\config\systemprofile' is denied.
   at System.IO.FileSystem.CreateDirectory(String fullPath)
   at System.IO.Directory.CreateDirectory(String path)
   at Amazon.Runtime.Internal.Settings.PersistenceManager..cctor()
   --- End of inner exception stack trace ---
   at Amazon.Util.Internal.SettingsManager.GetSettings()
   at Amazon.Util.Internal.SettingsManager.TryGetObjectByProperty(String propertyName, String value, String& uniqueKey, Dictionary`2& properties)
   at Amazon.Runtime.CredentialManagement.NetSDKCredentialsFile.TryGetProfile(String profileName, CredentialProfile& profile)
   at Amazon.Runtime.CredentialManagement.CredentialProfileStoreChain.TryGetProfile(String profileName, CredentialProfile& profile)
   at Amazon.S3.AmazonS3Config.CheckCredentialsFile()
   at Amazon.S3.AmazonS3Config.GetEndpointFlagValueForUsEast1Regional()
   at Amazon.S3.AmazonS3Config.UpdateEndpointForUsEast1Regional()
   at Amazon.S3.AmazonS3Config.Initialize()
   at Amazon.Runtime.ClientConfig..ctor()
   at Amazon.S3.AmazonS3Config..ctor()
```
## Possible Solution
<!--- Not required, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->
Remove the call to UpdateEndpointForUsEast1Regional from Initialize. Maybe call it from the constructor of AmazonS3Client instead. Adding a try/catch block could also solve the issue.
## Steps to Reproduce (for bugs)
<!--- Provide a self-contained, concise snippet of code that can be inserted into a -->
<!--- basic .NET console application to replicate the bug -->
<!--- For more complex issues provide a repo with the smallest sample that reproduces the bug -->
<!--- Including business logic or unrelated code makes diagnosis more difficult -->
Restrict access to the path that credential files are stored in. Then run the code snippet from the Expected Behavior section. When run on our Windows servers under the Network Service user the sdk tries to go to this path: "C:\Windows\system32\config\systemprofile".
## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->
I want to set the USEast1RegionalEndpointValue property in code so the sdk doesn't try to fetch it from a file or environment variable, because we don't have that set up.
## Your Environment
<!--- Include as many relevant details about the environment where the bug was discovered -->
* AWSSDK.Core version used: 3.3.104.7
* AWSSDK.S3 version used: 3.3.110.2
* .NET Core version used: 2.2

[logging]: http://docs.aws.amazon.com/sdk-for-net/v3/developer-guide/net-dg-config-other.html
<!--- Provide a general summary of your changes in the Title above -->
## Description
<!--- Describe your changes in detail -->
Test input with Arn.IsArn before trying to Arn.Parse. See Issue #1488.

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
<!--- If it fixes an open [issue][issues], please link to the issue here -->
Avoids many First Chance Exceptions when calling S3Client.GetPresignedUrl with a bucket instead of an Access Point.

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [ ] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
Also fixed partition typo in malformedErrorMessage.

## Checklist
<!--- Go over all the following points, and put an `x` in all the boxes that apply -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My code follows the code style of this project
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have read the **README** document
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed

## License
<!--- The SDK is released under the [Apache 2.0 license][license], so any code you submit will be released under that license -->
<!--- For substantial contributions, we may ask you to sign a [Contributor License Agreement (CLA)][cla] -->
<!--- Put an `x` in the below box if you confirm that this request can be released under the Apache 2 license -->
- [x ] I confirm that this pull request can be released under the Apache 2 license

[issues]: https://github.com/aws/aws-sdk-net/issues
[license]: http://aws.amazon.com/apache2.0/
[cla]: http://en.wikipedia.org/wiki/Contributor_License_Agreement