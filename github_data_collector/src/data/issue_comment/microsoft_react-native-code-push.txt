### Steps to Reproduce
1. Create a React Native project
2. Add `@CodePush` decorator, with `installMode: InstallMode.ON_NEXT_SUSPEND`.

### Expected Behavior
Bundle should update when app is suspended.

### Actual Behavior
Works on Android, but not on iOS, even after leaving app foregrounded for several minutes, then backgrounded for several minutes, and repeating the process several times. Force restarting the app also does not cause it to update on iOS. Other InstallMode's work as expected.

Looking at the source code, I don't even see any iOS-specific logic for this `InstallMode`, if not supported for iOS shouldn't the docs be updated to reflect that?

Version:
react-native-code-push: 6.0.0
react-native: 0.61.5
react: 16.9.0
Thanks so much for filing an issue or feature request! Please fill out the following (wherever relevant):

### Steps to Reproduce
This happens on iPhone, I encountered this on iPhone X and iPhone 11 Pro max, Android is fine.
Not all the time, but it's serious problem in my opinion.
0. Release a silent update (not mandatory)
1. Open app, the app then notices there is newer version.
2. Put it into background (just go to home, don't quit the app). Leave it in background for a while (in my case it's > 9 minutes).
3. Open app. The moment when the app open, it applies the update from CodePush.
4. And crash right after that.
Codepush then rollback to the last bundle, it means that the user never gets the update! This is definitely not what I want!
By the way, in the meantime, is there any way to disable codepush rollback feature?

### Expected Behavior
Obviously it won't be crashed.

### Actual Behavior
I got this log from bugsnag, in production.
```

STACKTRACE

EXC_BAD_ACCESS Attempted to dereference garbage pointer 0x6ae8245f6f80. 
    /node_modules/react-native/ReactCommon/cxxreact/Instance.cpp:61:14 loadApplication
    /node_modules/react-native/ReactCommon/cxxreact/Instance.cpp:95:5 loadScriptFromString
    /node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm:1336:29 __51-[RCTCxxBridge executeApplicationScript:url:async:]_block_invoke
    /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin/../include/c++/v1/functional:1799:16 operator()
    /node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm:276:20 -[RCTCxxBridge _tryAndHandleError:]
    /node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm:1319:3 -[RCTCxxBridge executeApplicationScript:url:async:]
    /node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm:1299:3 -[RCTCxxBridge enqueueApplicationScript:url:onComplete:]
    /node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm:915:5 -[RCTCxxBridge executeSourceCode:sync:]
    /node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm:390:7 __21-[RCTCxxBridge start]_block_invoke_2
    /usr/lib/system/libdispatch.dylib __dispatch_call_block_and_release
    /usr/lib/system/libdispatch.dylib __dispatch_client_callout
    /usr/lib/system/libdispatch.dylib __dispatch_root_queue_drain
    /usr/lib/system/libdispatch.dylib __dispatch_worker_thread2
    /usr/lib/system/libsystem_pthread.dylib __pthread_wqthread

THREADS

Thread 0
    /usr/lib/system/libsystem_kernel.dylib ___unlink
    /usr/lib/system/libsystem_kernel.dylib _unlink
    /usr/lib/system/libremovefile.dylib ___removefile_tree_walker
    /usr/lib/system/libremovefile.dylib _removefile
    Frameworks/Foundation.framework/Foundation -[NSFilesystemItemRemoveOperation main]
    Frameworks/Foundation.framework/Foundation ___NSOPERATION_IS_INVOKING_MAIN__
    Frameworks/Foundation.framework/Foundation -[NSOperation start]
    Frameworks/Foundation.framework/Foundation -[NSFileManager removeItemAtPath:error:]
    /node_modules/react-native-code-push/ios/CodePush/CodePushPackage.m:563:19 +[CodePushPackage rollbackPackage]
    /node_modules/react-native-code-push/ios/CodePush/CodePush.m:563:5 -[CodePush rollbackPackage]
    /node_modules/react-native-code-push/ios/CodePush/CodePush.m:402:13 -[CodePush initializeUpdateAfterRestart]
    /node_modules/react-native-code-push/ios/CodePush/CodePush.m:375:9 -[CodePush init]
    /node_modules/react-native/React/Base/RCTModuleData.mm:77:65 __44-[RCTModuleData initWithModuleClass:bridge:]_block_invoke
    /node_modules/react-native/React/Base/RCTModuleData.mm:124:39 -[RCTModuleData setUpInstanceAndBridge]
    /node_modules/react-native/React/Base/RCTUtils.m:267:5 RCTUnsafeExecuteOnMainQueueSync
    /node_modules/react-native/React/Base/RCTModuleData.mm:293:7 -[RCTModuleData instance]
    /node_modules/react-native/React/CxxBridge/RCTCxxBridge.mm:859:17 __49-[RCTCxxBridge _prepareModulesWithDispatchGroup:]_block_invoke
    /usr/lib/system/libdispatch.dylib __dispatch_call_block_and_release
    /usr/lib/system/libdispatch.dylib __dispatch_client_callout
    /usr/lib/system/libdispatch.dylib __dispatch_main_queue_callback_4CF$VARIANT$armv81
    Frameworks/CoreFoundation.framework/CoreFoundation ___CFRUNLOOP_IS_SERVICING_THE_MAIN_DISPATCH_QUEUE__
    Frameworks/CoreFoundation.framework/CoreFoundation ___CFRunLoopRun
    Frameworks/CoreFoundation.framework/CoreFoundation _CFRunLoopRunSpecific
    PrivateFrameworks/GraphicsServices.framework/GraphicsServices _GSEventRunModal
    PrivateFrameworks/UIKitCore.framework/UIKitCore _UIApplicationMain
    MyApp/main.m:14:12 main
    /usr/lib/system/libdyld.dylib _start
```

Full log includes other threads
[bugsnag_error_stacktrace_EXC_BAD_ACCESS_event_5e1712e800555a0520d00000.txt](https://github.com/microsoft/react-native-code-push/files/4040304/bugsnag_error_stacktrace_EXC_BAD_ACCESS_event_5e1712e800555a0520d00000.txt)


### Environment

* react-native-code-push version: 6.0.0
* react-native version: 0.61.5
* iOS/Android/Windows version: iOS
* Does this reproduce on a debug build or release build? Release
* Does this reproduce on a simulator, or only on a physical device? Physical device.

(The more info the faster we will be able to address it!)

Hello,
I tried to update my app with codepush several times but no updates are found when i restart the app.

### Steps to Reproduce
1. Install the library for RN > 0.60
2. Push an update with codepush release-react Production
3. Restart the app

### Expected Behavior
The app should be updated

### Actual Behavior
Nothing happens, when i fetch the log with adb i see that No update is found and the app is up to date (even though i have several pending updates).
```
[09:47:10] Checking for update.
[09:47:11] App is up to date.
```
When i fetch the log of the play store released app i have the following notice : 
```[CodePush] Unable to get the hash of the binary's bundled resources - "codepush.gradle" may have not been added to the build definition.```

### Environment

* react-native-code-push version: 6.0.0
* react-native version: 0.60.4
* iOS/Android/Windows version: Android 10
* Does this reproduce on a debug build or release build? Release build
* Does this reproduce on a simulator, or only on a physical device? Physical device

Any help ? Thanks

This PR fixes an error we encountered in a hybrid (Swift + React Native) app we’re developing. 
We use cocoapods and RN 0.61.1, so the setup with autolinking was simple, however when building the iOS app, we got a build failure with a message of "JWT.h file not found" in the CodePushUpdateUtils.m file (same for SSZipArchive in CodePushPackage.m).

  In this PR we change the imports of JWT and SSZipArchive to a similar style that is used throughout the project for native React modules. This fixes the issue on our end and shouldn’t break anything for anyone else due to the conditional character of the import statements.

  Would appreciate any input on this and of course will answer any questions that would help reproduce if needed.
If there is required update, I want to download it asap, and I'd like to start checking for it before JS code even starts loading.

Is it possible to initialize check inside native iOS code (AppDelegate.m)?
Thanks so much for filing an issue or feature request! Please fill out the following (wherever relevant):

### Steps to Reproduce
1.
2. 
3.

### Expected Behavior
push file to codepush with oss, alway 

### Actual Behavior
push file to codepush,storage_type is oss, alway occerd a error and the codepush process exited

```
  STACK TRACE AND/OR SCREENSHOTS
```

### Reproducible Demo

events.js:160
      throw er; // Unhandled 'error' event
      ^

Error: ENOENT: no such file or directory, open '/tmp/codepush_AwZ4CCWCKeTy9t1eb3fJuZMiMAcX5ply/955ee56672757b5405e47c5181516c2d640cb928d54066e552ffa8f5512451f5/dataCenter/CodePush/index.android.bundle'
    at Error (native)

### Environment

* react-native-code-push version:
* react-native version:
* iOS/Android/Windows version:
* Does this reproduce on a debug build or release build?
* Does this reproduce on a simulator, or only on a physical device?

(The more info the faster we will be able to address it!)

Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.11 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.11...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.11&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/microsoft/react-native-code-push/network/alerts).

</details>
### Steps to Reproduce
1. Add Jitsi plugin
2. Add CodePush plugin

### Expected Behavior
What you expected to happen?
Code Push works on Android 

### Actual Behavior
What actually happens?
```
12-26 15:06:01.610 27889 27991 E ReactNativeJS: TypeError: null is not an object (evaluating 'n.IsAndroid')
12-26 15:06:01.620 27889 27991 E ReactNativeJS: Invariant Violation: Module AppRegistry is not a registered callable module (calling runApplication)
12-26 15:06:01.623 27889 27991 E ReactNativeJS: TypeError: null is not an object (evaluating 't.NativeModules.LocaleDetector.locale')
12-26 15:06:01.632 27889 27992 E AndroidRuntime: FATAL EXCEPTION: mqt_native_modules
12-26 15:06:01.632 27889 27992 E AndroidRuntime: com.facebook.react.common.JavascriptException: TypeError: null is not an object (evaluating 'n.IsAndroid'), stack:
12-26 15:06:01.632 27889 27992 E AndroidRuntime: <unknown>@759:85
12-26 15:06:01.632 27889 27992 E AndroidRuntime: v@2:1474

```

### Reproducible Demo

Trying to add code push to github.com/RocketChat/Rocket.Chat.ReactNative

iOS works just fine , Android throws that error

### Environment

* react-native-code-push version:  6.0.0
* react-native version: 0.61.1
* iOS/Android/Windows version: Android 9
* Does this reproduce on a debug build or release build?  Release Build only
* Does this reproduce on a simulator, or only on a physical device? Both


Related issue https://github.com/jitsi/jitsi-meet/issues/4960
Thanks so much for filing an issue or feature request! Please fill out the following (wherever relevant):

### Steps to Reproduce
1. Show Modal
2. call Codepush.restartApp
3. App restart with Modal has still showing and can't hidden

### Expected Behavior
What you expected to happen?
App really restart

### Actual Behavior
What actually happens?
```
 Im making CustomDialog for UpdateDialog. sometime, after calling Codepush.restartApp, app restart with Dialog is still showing. This behavior is incorrect. 
```

### Environment

* react-native-code-push version: 6.0.0
* react-native version: 0.61.5
* iOS/Android/Windows version: iOS 11.4
* Does this reproduce on a debug build or release build? Debug
* Does this reproduce on a simulator, or only on a physical device? Physical Device

(The more info the faster we will be able to address it!)

Thanks so much for filing an issue or feature request! Please fill out the following (wherever relevant):

### Steps to Reproduce
1.gradle version ：com.android.tools.build:gradle:3.4.2
2. 
3.

### Expected Behavior
codepush.gradle can not generate CodePush hash file in apk

### Actual Behavior
What actually happens?
```
  STACK TRACE AND/OR SCREENSHOTS
```

### Reproducible Demo

* Download https://github.com/Microsoft/react-native-code-push/archive/master.zip and unzip. From `Examples` folder run `node create-app.js appName react-native@0.47.1 react-native-code-push@5.0.0-beta` command to generate plain CodePushified React Native app. Please see description on top of `create-app.js` file content if needed
* If you can't reproduce the bug on it, provide us as much info as possible about your project

### Environment

* react-native-code-push version:
* react-native version:
* iOS/Android/Windows version:
* Does this reproduce on a debug build or release build?
* Does this reproduce on a simulator, or only on a physical device?

(The more info the faster we will be able to address it!)
