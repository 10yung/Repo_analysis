

Hello @scana !

I want to try your plugin next week, it seems super useful. 

One thing is that half of my Gradle is in Groovy (`build.gradle`) while the other half is in Kotlin (`build.gradle.kts`). 

As you can see here, it's almost the same except for the parenthesis and double quotes (like in java) instead of single quotes)

https://github.com/jmfayard/gradle-kotlin-dsl-libs/blob/50dace493f87711e1fead346160a9dcf12d3cd43/build.gradle.kts#L40-L49

```diff
-implementation 'com.square.retrofit:retrofit2:2.3.0'
+implementation("com.square.retrofit:retrofit2:2.3.0")
```

Actually the latter syntax is totally valid in a `build.gradle` too!

I could try to submit a pull request if you are interested
I've used [gradle-versions-plugin](https://github.com/ben-manes/gradle-versions-plugin) for this, but something similar with IDE support could also modify `build.gradle` to apply the updated versions.
This isn't a big issue, but I'm curious why the plugin depends on Android support being enabled in IntelliJ - seems like it should work with any Gradle project, android or not.
It seems that modules using pure java gradle plugin do not handle "implementation" keyword for dependencies.

The plugin should be able to detect whether `implementation` plugin is supported and use it or fallback to `compile` keyword
Often I use "Ok, Gradle" inside of a build.gradle file, when I'm already at the position to insert the dependency. Would be nice to have a button to do this, instead of copying the dependency and then have to paste it.

Maybe reuse the "OK" button therefore. IMHO this button is not intuitve, since it just closes the dialog. That's not what I expect. Even more when the tool is called "Ok, Gradle", then I would expect the magic happens on "OK".

This proposal is probably an rival to #4
Research about searching through internal nexus repositories added by a user (or fetched from repos declared in build.gradle files)