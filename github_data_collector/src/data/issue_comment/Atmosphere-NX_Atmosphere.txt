Fixes a bug in fusee/exo, adds new masterkey vectors, adds dev signing support into sept

## Feature Request

I'm studying this amazing project, and I think that we could improve the documentation.

### What feature are you suggesting?

- [`fuse.md`](https://github.com/Atmosphere-NX/Atmosphere/blob/master/docs/components/fusee/fusee.md)
  - missing explaining what is `fusee-mtc`
- [`exosphere.md`](https://github.com/Atmosphere-NX/Atmosphere/blob/master/docs/components/exosphere.md)
  - I think that the `upcoming software exploits` already is obsoleted. Was it really had a big role with Jamais Vu and Déja Vu?
  - `Exosphère currently only contains one extension` is obsoleted. On [0.8.3 released](https://www.reddit.com/r/SwitchHaxing/comments/ajf0u0/atmosphere_083_released/) a new extension was added. Are there others extensions?
  - what is the purpose of the folders `lp0fw`, `rebootstub` and `sc7fw`?
- [`stratosphere.md`](https://github.com/Atmosphere-NX/Atmosphere/blob/master/docs/components/stratosphere.md):
  - would be nice to say that `fs_mitm` is a module inside of a bigger module called `ams_mitm` that it has many others mitm modules
- [`thermosphere.md`](https://github.com/Atmosphere-NX/Atmosphere/blob/master/docs/components/thermosphere.md) and [`troposphere.md`](https://github.com/Atmosphere-NX/Atmosphere/blob/master/docs/components/troposphere.md):
  - both documents say that these features isn't implemented yet, but there are some code on respectively folders... is it up to date?

I would love to help in this improvements, but I'm still very beginner in this project. If someone could help me to improve these documentations, I would be very happy =]

## Bug Report

### What's the issue you encountered?

When modifying the `override_config.ini` at runtime (through ftp or mtp servers for example), if Atmosphere cannot find the appropriate setting in the config, it does not fall back to the default value like it does during startup. This creates an issue when the user wants to delete all custom override settings in hopes of it resetting to default values.

### How can the issue be reproduced?

1. Set the value of `program_id` under `[hbl_config]` to the ID of your game
2. Observe that hbmenu now opens through your game, and doesn't open through the album
3. Without rebooting Atmosphere, remove the `program_id` setting or the ini file entirely (e.g., the user is lazy and hopes that it changes back to the album ID)
4. Observe that hbmenu still opens through your game and doesn't open through the album

### Crash Report

N/A

### System Firmware Version

Switch FW 9.1.0

### Environment?

I think it's pretty clear that this is an Atmosphere issue.
Using latest release Atmosphere 0.10.2-master-d5458960.

### Additional context?

- [The relevant function in the source code for updating the override config](https://github.com/Atmosphere-NX/Atmosphere/blob/master/libraries/libstratosphere/source/cfg/cfg_override.cpp#L294)
  - As you can see, it only changes the value if it can parse the option in the ini file. If it can't find the option, it keeps using the previous value.
## Bug Report

On all the Atmo 0.10.x release the docs/cheats.md documentation does not reflect the changes done on AMS 0.10 on:
/atmosphere/titles shoud be updated with /atmosphere/contents
## Feature Request

### What feature are you suggesting?
#### Overview:
- To add seperated atmosphere folders for each sysMMC & emuMMC instances (that can contain different LayeredFS / kip / exefs / nxthemes patches / saves redirection / or even an entirely different version of Atmosphere ) so as not to interfere with other eMMC instances.

Note: This is mentioned in Atmosphere 0.9.0's changelog (Quote: "In addition, some niceties (e.g. having a separate Atmosphere folder per emummc instance) still need some thought put in before they can be implemented in a way that makes everyone happy."), but other than this, there is no other information to be found.

#### Smaller Details: 

- For sysMMC, it can either continue (or by default) to grab /sd_root/atmosphere/ folder for use, or add an extra config line to change the location of it. 
- As for emuMMC, the location of the atmosphere folder may be configured in /sd_root/emuMMC/emummc.ini (e.g. atmosphere_path=emuMMC/RAW1/atmosphere)
(hekate can also add support to change this line to achieve a fully configured environment without manually modifying emummc.ini)

#### Nature of Request:  
- Addition

### What component do you feel this would best fit within?
- [Fusée](https://github.com/Atmosphere-NX/Atmosphere#components)</br>
  - Atmosphère's custom bootloader.</br>
- [**Thermosphère**](https://github.com/Atmosphere-NX/Atmosphere#components)</br>
  - Atmosphère's emuNAND implementation.</br>

*I'm not sure where to fit this in, since I'm not familiar with how the internals of Atmosphere work.

### Why would this feature be useful?
This can allow users and developers to quickly reboot to different instances of eMMC to test and use their desired controlled environment, instead of manually altering folders on SD card or even swapping to another card each time they want to use different patches.

*Words and solution are abruptly thrown together, my brain is not really functioning right atm, I can explain more details if anything is unclear.
The service worked fine as a standalone process, but is having a few issues as part of ams-mitm. Pull request opened for code reviews, since this issues need to be worked out.
A full reimplementation of NCM.

### Major firmwares for testing:
- [x] 8.1.0
- [x] 7.0.0
- [x] 6.0.0
- [x] 5.1.0
- [x] 5.0.0
- [x] 4.1.0
- [x] 4.0.0
- [x] 3.0.0
- [x] 2.1.0
- [x] 2.0.0
- [x] 1.0.0
This would be really nice, one-bit debugging really sucks (especially for early boot bugs).
This is a fully functional + tested implementation of #532.

Note, copying from @Adubbz comment on #532:

Mentioned this on Discord but will also put this here for record keeping. It needs to be confirmed that nothing from prodinfo is cached and can potentially be compared with the current values and subsequently be included in telemetry. This was a potential issue with vertigo's implementation too which I don't believe was looked into.
