Fixes #4664
So some weeks ago I noticed that the documentation under `docs/code` mention several interfaces that currently don't exist in ML.NET's codebase. They existed back in TLC... and perhaps some of them, if not all of them, actually made it into ML.NET before version 1.0 release... but the case is that they no longer exist, so I just wanted to update them.

After looking into the TLC code, I decided to make the following replacements in the docs:
ISchema -> DataViewSchema
IRandom -> System.Random
IRow -> DataViewRow
IRowCursor and ICursor -> DataViewRowCursor

Still, there are some mentions to IDataReader, which doesn't exist in ML.NET, and I wouldn't be sure how to handle that case.

### Side notes
1. **About IRandom**: In TLC it seems that only `SysRandom `and `TauswortheHybrid ` implemented `IRandom`. In ML.NET `IRandom` and `SysRandom` don't exist, but `TauswortheHybrid` inherits from System.Random. So I guess it's safe to replace `IRandom` for "System.Random" in the docs.
Dear all,

Unless I am mistaken there is currently a single model suitable for time-series forecasting (ForecastBySsa). 

The other models within this catalogue target anomaly detection. There are various alternative methods that may be used to forecast time. 

It would be nice to have a choice and the option to try a different method.

Thank you

Fig
### System information

- **OS version/distro**: Windows
- **.NET Version (eg., dotnet --info)**:  .NET Framework 4.8

### Issue
I would like to know how I can leverage a datatable or some similar type instead of using model classes.  To start with, I am currently able to successfully train and predict with a model class using the multi-class classification.  The current model in my setup looks like this:

     public class MultiClassInput
      {
        [ColumnName("Statement")]
        public string Statement { get; set; }
        [ColumnName("Label")]
        public string Label { get; set; }
      }

I am essentially creating a List<MultiClassInput> from data in a datatable.  Some sample data I used to successfully train and predict:
 
                    v_ModelTrainingData.Rows.Clear();
                    v_ModelTrainingData.Rows.Add("I need to Reset Password", "#ITSupport");
                    v_ModelTrainingData.Rows.Add("I want to Reset Password", "#ITSupport");
                    v_ModelTrainingData.Rows.Add("Password Reset", "#ITSupport");
                    v_ModelTrainingData.Rows.Add("Reset My Password", "#ITSupport");
                    v_ModelTrainingData.Rows.Add("Pass Reset", "#ITSupport");
                    v_ModelTrainingData.Rows.Add("Pay Bill", "#Billing");
                    v_ModelTrainingData.Rows.Add("Pay Invoice", "#Billing");
                    v_ModelTrainingData.Rows.Add("Billing Problems", "#Billing");
                    v_ModelTrainingData.Rows.Add("Review Charges", "#Billing");
                    v_ModelTrainingData.Rows.Add("Pay Charges", "#Billing");
                    v_ModelTrainingData.Rows.Add("Invoice Problem", "#Billing");

What I would like to do is figure out some way to have a user pick a column to be the label -- that way I can support multiple columns of data to act as input to the training process without creating multiple classes.  Everything I have found so far looks like it requires a known model class.  Any thoughts on how I can achieve this? Thanks.

### Source code / logs
Read documentation for loading data: https://docs.microsoft.com/en-us/dotnet/machine-learning/how-to-guides/load-data-ml-net
Hello,

Do you plan on adding Feature Contribution to multi class classification problem?

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 72fdbc4e-fdca-27da-91d3-93fb0d397185
* Version Independent ID: ad7c3810-5cdf-5fc8-b856-7ce0a0f2e2f1
* Content: [FeatureContributionCalculatingEstimator Class (Microsoft.ML.Transforms)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.ml.transforms.featurecontributioncalculatingestimator?view=ml-dotnet#feedback)
* Content Source: [dotnet/xml/Microsoft.ML.Transforms/FeatureContributionCalculatingEstimator.xml](https://github.com/dotnet/ml-api-docs/blob/live/dotnet/xml/Microsoft.ML.Transforms/FeatureContributionCalculatingEstimator.xml)
* Product: **dotnet-ml-api**
* GitHub Login: @natke
* Microsoft Alias: **nakersha**
Due to test in private agent pool, these 2 tests seems crashing test host process, try to disable them.

https://dev.azure.com/dnceng/public/_build?definitionId=712&_a=summary


Start the test process from a managed place instead directly from xunit, that will give us better control:
1. logging and restart test process if crashes
2. retry flaky test with everything reset
3. logging when test process hangs

Fixed #2461 

TextLoader now checks whether the given file in path exists. If the file is missing, a clear exception stating that the file is missing is given, instead of stating that some field is missing some unknown attribute.
Our `F1` metric can currently return a `NaN` value when both the precision and recall are zero, as `F1 = 2 * precision * recall / (precision + recall)`, which turns into `0 / 0`. Precision/recall being zero occurs for a trivial model which always guesses the majority class zero.

We should return `F1=0.0` instead of `NaN`  -- this is done in sklearn ([code](https://github.com/scikit-learn/scikit-learn/blob/4b82c4450b759f4efd0dbad2840739ffc416e533/sklearn/metrics/classification.py#L927-L929)), and others ([note](https://github.com/dice-group/gerbil/wiki/Precision,-Recall-and-F1-measure#dividing-by-0)) 
<br/>Our `F1` calculation code:
https://github.com/dotnet/machinelearning/blob/610ffcb67083c2e5e6e1a14884ba24b1da0384c7/src/Microsoft.ML.Data/Evaluators/BinaryClassifierEvaluator.cs#L483

See background: https://github.com/dotnet/machinelearning/issues/4648#issuecomment-574886743
AutoML API code is not handing `NaN` values for metrics. During the sweep, when a model returns a `NaN` value for the metric being optimized, AutoML crashes.

See background: https://github.com/dotnet/machinelearning/issues/4648#issuecomment-574886743