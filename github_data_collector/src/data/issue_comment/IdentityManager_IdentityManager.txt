I just installed IdentityManager, and each time when I run the project on localhost, i get "HTTPS required" and have not been able at all to remove this requirement from my localhost application. I've checked the configuration and Application_Start methods as well and have yet to be able to get this removed so I can continue. Any ideas?

I'm using Visual Studio's Community 2015 (if that helps at all, maybe there is a setting I can uncheck?). And I used this link as my tutorial to set it up: https://www.scottbrady91.com/ASPNET-Identity/Identity-Manager-using-ASPNET-Identity
I setup Manager under https://localhost:44301/manager
I setup Admin under https://localhost:44301/admin

Each site is using Cookie Authentication with separate startup code.
Each site is using UseOpenIdConnectAuthentication
Each site is using AdditionalSignOutType "oidc"
Each site has their own cookie name.

using HostSecurityConfiguration (Manager)
using AdminHostSecurityConfiguration (Admin)

Admin has it's own Role name
Manager has it's own Role name

The user is given both roles in the IdSrv.

The issue is that if you login to Manager all is well. Local Storage is good and Cookie is created. 

If you jump over to the Admin Url then you get an error. The cookie isn't created. You are forced to logout and then you hit back to login and all is well.

If you jump over to admin. The issue happens.

It seems to be an issue if these sites are under the same domain with sub virtual directories.

I don't think the cookie is the issue. I think that the Local Storage key that is created first is the issue and it should be a unique name.

I can solve the issue by separating these sites to manager.domain.com or admin.domain.com (But I don't want to do that)

I hope I was clear enough. 
Does anyone know how to resolve this or is this a bug?

Also, I have another site where I'm just using local storage only with oidc-client-js and don't have this issue. Seems like the cookie creations process has failed me.
I want to impliment role based authentication in my web Api projetc
i had added  scope with the name of role and assigned with  admin,user,superadmin
in my controller used 
[Route("getallsupportcategorieslu")]
        **[Authorize(Roles ="admin")]**
        public IHttpActionResult GetAllSupportCategoriesLU()
        {
            try
            {
                return Ok(_supportApplicationService.GetAllSupportCategoriesLU());
            }
            catch (Exception ex)
            {
                return BadRequest(ex.Message);
            }
        }
but it is not working

we are using bearer token. client side we are using angulr js they pass bearer token.
token authentication is working fine. but role based authentication not working. 

can you please provide the sollution for any code needed for role based authentication and how to pass the roles in bearer token and how i can get the roles for authentication. 

Hi,
I've configured my Identity Server in a self-hosted enviroment just fine. In the same project I also have mapped routes to Identity Manager and Identity Admin (/idm and /admin). Both of them are using `LocalhostSecurityConfiguration`.
When a login in IdentityManager for the first time it works as expected, but if I open a new tab and access the Identity Admin, in order to get access to it I need to click on the logout button and then I can click on the login button to get into the system. The problem is that when I do that I lose access to Identity Manager, so I need to do these steps again there, that is, click on the logout then login, and after that I lose access to Identity Admin that I just have logged in.
Does this happen because of the `LocalhostSecurityConfiguration`? Is that expected to happen? How can I try to fix it, any ideas?
Hi In past I have used this repo to build Identity Manger 
https://github.com/IdentityManager/IdentityManager

Now we are moving to Identity server4. So just wondering to be in sync do we need to update anything with Identity manager as it used some reference of Identityserver3.core ? Or it doesn't matter? Or best bet to build our own new account admin/
Also I don't find recent updates or any new build for Identity Manger. Do you guys still support? 
 
Hello,

Does anybody have a document that explains how to install and use this software with an existing web application that has Individual User Accounts already installed.

I viewed two videos from the wiki and could not follow all the steps because the presenter moved so fast with the coding and never showed what it looked like when it was finished.

There should be one place where a person could copy all of the code to put into the Startup.cs file.
I know how to use Nuget to install the packages, but I don't know all of the other coding that needs to be done to get it up and running for my web application.

Any help would be gratefully appreciated.

Thanks,
Tony
Is it possible? For example, Iâ€™ve mapped 3 routes for IdentityServer, IdentityManager and IdentityServer.Admin in MVC application and configured one default OpenIdConnectAuthentication with mvc client scopes and clientId. It works until I try to login in IdentityManager or IdentityServer.Admin, after that I catch error because module trying with settings configured in OpenIdConnectAuthentication for mvc application.
Maybe somehow I can configure OpenIdConnectAuthentication for each map, or something else?

I've read the article and watched both videos, IDM is working great with the included admin page but it's not wired up to the AccountController that WebAPI template generates, did I miss a step where I inherit from it or was I suppose to start creating a new one from scratch.  I feel like this is never clearly covered in neither tutorial.
Updated AutoMapper to version 4.2.0 to support new versions of AutoMapper.
- Updated mapper in RoleQueryResultResourceData
- Updated mapper in UserQueryResultResourceData

#257 
I am trying to change from LocalhostSecurityConfiguration which works to HostSecurityConfiguration. 
When using HostSecurityConfiguration I am however getting 

> Error: You are not authorized to use this service.

I am getting 401 on /admin/api and in the request header I can see that Authorization header is set to Authorization:Bearer HVLA6zFWS9NCcR3Me9usgeKKmJkd6gY4KmMWCd68zjGu0w7JYqGzEpM6y_83A0L1qRosoPN65L81GZslHASWdClnv3_s6LQ3U-zZC_2e8iGIttBphxFq56zhTZABzO2iw8PopfIvEz5epPMTJOwoyM8jot_nIjmzn8th1WKFG5c9jgiudqpxTQ6otx5n_BTrRH7Iw9cSkWPHqef-JukoDJPIyJGQcC7_itq6Y3YXF_ltnr4pgjVYc3pMwXlC2StHrh0Hgwytb5j4J3s14uFhjhE0Qt7qY4VmYiJiMXn3t2k

Server and client is within the same host and the configuration looks like this. 

`app.Map("/admin", adminApp => {

                adminApp.UseOpenIdConnectAuthentication(new OpenIdConnectAuthenticationOptions {
                    AuthenticationType = "oidc",
                    Authority = AppSettings.IdentityServerAuthority.TrimEnd('/') + "/identity",
                    ClientId = global::IdentityManager.Constants.IdMgrClientId,
                    RedirectUri = AppSettings.IdentityServerAuthority.TrimEnd('/') + "/admin",
                    ResponseType = "id_token",
                    UseTokenLifetime = false,
                    Scope = "openid " + global::IdentityManager.Constants.IdMgrScope,
                    SignInAsAuthenticationType = "Cookies",
                    Notifications = new Microsoft.Owin.Security.OpenIdConnect.OpenIdConnectAuthenticationNotifications {
                        SecurityTokenValidated = n => {
                            n.AuthenticationTicket.Identity.AddClaim(new Claim("id_token", n.ProtocolMessage.IdToken));
                            return Task.FromResult(0);
                        },
                        RedirectToIdentityProvider = async n => {
                            if (n.ProtocolMessage.RequestType == Microsoft.IdentityModel.Protocols.OpenIdConnectRequestType.LogoutRequest) {
                                var result = await n.OwinContext.Authentication.AuthenticateAsync("Cookies");
                                if (result != null) {
                                    var id_token = result.Identity.Claims.GetValue("id_token");
                                    if (id_token != null) {
                                        n.ProtocolMessage.IdTokenHint = id_token;
                                        n.ProtocolMessage.PostLogoutRedirectUri = AppSettings.IdentityServerAuthority.TrimEnd('/') + "/admin";
                                    }
                                }
                            }
                        }
                    }
                });

                var factory = new IdentityManagerServiceFactory();
                factory.ConfigureSimpleIdentityManagerService("SASCargo.BC.Identity.ConnectionString");

                //adminApp.CreatePerOwinContext(Context.Create);
                //adminApp.CreatePerOwinContext<UserManager>(UserManager.Create);

                adminApp.UseIdentityManager(new IdentityManagerOptions() {
                    Factory = factory,
                    //SecurityConfiguration = new LocalhostSecurityConfiguration()
                    //{
                    //    RequireSsl = false
                    //}
                    SecurityConfiguration = new HostSecurityConfiguration() {
                        RequireSsl = false,
                        AdminRoleName = Constants.Roles.Administrator,
                        HostAuthenticationType = "Cookies",
                        ShowLoginButton = true,
                        RoleClaimType = "role",
                        NameClaimType = "name"
                    }
                });
            });`

I have attached my log file.
[application.txt](https://github.com/IdentityManager/IdentityManager/files/789521/application.txt)

The value of the local storage variable TokenManager.token is {"access_token":"HVLA6zFWS9NCcR3Me9usgeKKmJkd6gY4KmMWCd68zjGu0w7JYqGzEpM6y_83A0L1qRosoPN65L81GZslHASWdClnv3_s6LQ3U-zZC_2e8iGIttBphxFq56zhTZABzO2iw8PopfIvEz5epPMTJOwoyM8jot_nIjmzn8th1WKFG5c9jgiudqpxTQ6otx5n_BTrRH7Iw9cSkWPHqef-JukoDJPIyJGQcC7_itq6Y3YXF_ltnr4pgjVYc3pMwXlC2StHrh0Hgwytb5j4J3s14uFhjhE0Qt7qY4VmYiJiMXn3t2k","expires_at":1487701957,"scope":""}


Currently I am stuck, so any help will be greatly appreciated.