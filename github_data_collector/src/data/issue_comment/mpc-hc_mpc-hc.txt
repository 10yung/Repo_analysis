Steroscopic 3D video and images (Specifically, Side by Side) usually need to be edited in some software before they can be presented on a 3D TV as the left and right halves of the image must be "squshed" horisontally in place (so a large black column appears in the middle and two smaller columns on the left and right edge).

Additionally, fine adjustments to the seperation and the left/right eye elevation need to be made to correct for lens calibration issues with the source recording.
Currently there is no playback software which allows the user to make these adjustments to the source video in real time.
This feature provides all this functionality allowing raw 3D SBS content to be viewed on a TV without the need of recompression and time consuing video/image editing

The keys for controlling all this are within the hot key screen at the bottom and are currently mapped in a similar form to the WASD movement but
using the IJKL keys to avoid conflicing with more critical keys.

I and K shift the left eye up/down and the right eye down/up
J and L shift the eyes apart and closer together.
The top left and right of these keys are the U and O keys which shrink and enlarge the left and right images.
Over to the left, the 'S' key enables and disables the horisontal Squish of each eye. This is default to enabled.
The purpose is in case someone has pre-squished left and right eyes but wants to adjust the seperation/elevation.

To enable/disable all this 3D functionality, simply press the '3' key.

A sample 3D SBS image is included for testing.
![SBS_3D_Sample_Image](https://user-images.githubusercontent.com/48649311/64488688-8c98a800-d242-11e9-8e7e-daf63d7db14e.jpg)

Note: It works best with video because images only draw once so changes made to the 3D settings only update on screen if the window is resized.

Note: There was an error when I was trying to compile the latest source before doing this work in MainFrm.cpp so I did a hacky fix (type casting  CComQIPtr<IBaseFilter> pBF = (CComQIPtr<IBaseFilter>)(bIsSplitter ? (CComQIPtr<IBaseFilter>) pSS : (CComQIPtr<IBaseFilter>)pObject); )

![1](https://user-images.githubusercontent.com/48649311/64488756-88b95580-d243-11e9-9604-49631e24a28c.png)
![2](https://user-images.githubusercontent.com/48649311/64488757-88b95580-d243-11e9-9360-baa94a5540bf.png)
![3](https://user-images.githubusercontent.com/48649311/64488758-8951ec00-d243-11e9-9fa5-f43c29517f64.png)
![4](https://user-images.githubusercontent.com/48649311/64488759-8951ec00-d243-11e9-9473-1b570f521be9.png)
![5](https://user-images.githubusercontent.com/48649311/64488760-8951ec00-d243-11e9-9c0f-7f38ae7d6daf.png)
![6](https://user-images.githubusercontent.com/48649311/64488761-8951ec00-d243-11e9-86cf-353ac7dff590.png)
![7](https://user-images.githubusercontent.com/48649311/64488762-8951ec00-d243-11e9-9f72-365df8deb8fb.png)

Until some proper technology is used, this change would make the video a bit more responsive.

The change is small enough, so that browser CPU utilization is kept below 7% on average (while the normal is about 3-4% on i5-4430). 50ms delay would make the video more stable, but CPU usage would be double.
when playing a media file, user can click "Grab Audio" from the context menu by right click the mouse(the menu item will be checked), then the player will start to record audio as MP3 file to the personal music folder, until user unchecked the menu item or the media file stopped playing.
If the menu item has been checked before playing, the when a media file begin to play, the audio will be recorded automatically.
@kasper93 
This enables streaming Youtube videos with youtube-dl by giving a Youtube URL in the Open File dialogue or on the command line. Supports individual videos and playlists. Requires youtube-dl to be present in PATH variable. 
https://trac.mpc-hc.org/ticket/6303#comment:1
"IDS_INTERNAL_LAVF_WMV" is missing line breaks
https://trac.mpc-hc.org/ticket/5905#comment:4
Following _Compilation.md_, MPC-HC was unable to compile, with many missing includes, in Windows 10/Visual Studio 2017 until I selected **Windows Universal CRT SDK** under "Individual Components -> Compilers, build tools, and runtimes". Selecting and ensuring that **Windows Universal CRT SDK** allowed compilation without issues.
Updates the output settings page to automatically reload the current file at the same seek position after changing the video, audio, or subtitle renderers so the changes are visible immediately.
This adds an option in advanced settings to allow users to customize the default filename used for snapshots when using File > Save Image (or pressing F5). Currently snapshot filenames are hardcoded like `video.mkv_snapshot_01.12_[2017.08.01_16.59.08]`. This option lets users choose their own filename format string, defaulted to `%f_snapshot_%t_[%Y.%m.%d_%H.%M.%S]` to copy current behavior.

Trac: https://trac.mpc-hc.org/ticket/4241

Instead of creating a ticket for this personal minor annoyance I had a go at compiling and contributing to MPC-HC. Not sure if it's interesting enough for the main release, but here's a pull request in case you feel it is up to standard.

The changes: 
As I'm always accidentally moving the window instead of seeking, which also restores it from it's maximized (non-fullscreen) state, I've added a setting under Advanced which controls the ability to drag the main window on client area controls (video panel, toolbar, infobar, statusbar). It's enabled by default to be backwards compatible.