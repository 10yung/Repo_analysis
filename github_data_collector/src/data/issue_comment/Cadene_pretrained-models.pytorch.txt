I found mime-type bug.
Default inceptionv3() can't hand over num_classes to models.inception_v3() when pretrained == False
So I added argument 'num_classes' when calling inception_v3()
已经解决了win10下的训练自己的数据问题，加Q群857449786 注明models 共同研究
Hi, there.
This PR fixes the typo of the url of WideResNet50
My editor say Undefined variable 'normalize', so i want to know where normalize is defined ? 
Hi I would prefer to store the weight file locally instead instead of downloading it (as the download speed is very slow). What is is the best way of doing this? Specifically, I would prefer to pass a path to inceptionrestnetv2
`self.inception = inceptionresnetv2(num_classes=1000, pretrained='imagenet', weight_path="/to/weight")`
The last pooling layer of SENet should be change from `self.avg_pool = nn.AvgPool2d(7, stride=1)` to `self.avg_pool = nn.AdaptiveAvgPool2d((1, 1))` so that the model can take different input size.
when i  python setup.py install

Processing dependencies for pretrainedmodels==0.7.4
error: torch 0.1.12.post2 is installed but torch==1.2.0 is required by {'torchvision'}

Hi Cadene, nice work! 👍  
Is there any efficient way to fine-tune these models on other datasets?

do you have a example with this note:
By default, models will be downloaded to your $HOME/.torch folder. You can modify this behavior using the $TORCH_MODEL_ZOO variable as follow: export TORCH_MODEL_ZOO="/local/pretrainedmodels
Hi Cadene, Thanks a lot for providing these models. I am relatively new to PyTorch
I am finding it difficult to generate Class Activation Maps for my trained model (InceptionResnetV2) on XRay images. 

When i see some tutorial, I observe the following:
```
self.feature_extractor = model.module.densenet121.features
self.feature_extractor.eval()
self.classifier = model.module.densenet121.classifier
```
So here, type(feature_extractor) is torch.nn.modules.container.Sequential as the above code is for Densenet model taken from pytorch vision library. How do I generate features and classifier as the above code for InceptionResnetV2 from Pretrainedmodels? 