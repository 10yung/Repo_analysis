Osgood doesn't respond properly to Nginx or any other load balancer I tested so far... like https://github.com/kasvith/simplelb and https://github.com/yyyar/gobetween

Osgood servers return the following error when invoked this way: 

`route not found: GET http://64.5.6.7:3000:3031 /hello`

It appears to want to include the origin port of the proxy (3000) in the search for a valid script to run for some reason. Osgood returns `Hello World` fine when invoked directly, it's just not working through load balancing, where as all other servers return to the reverse proxy as expected e.g. `python -m SimpleHTTPServer 3031`. 

The error message is from this line:

https://github.com/IntrinsicLabs/osgood/blob/c50893bcf3bd59c41df7e2d5059006c618b6fc83/src/main.rs#L258

I'm not a rust programmer but it looks like further up the program the origin is worked out from the combined header `hyper::header::Host` which always includes the extra port if present?? Perhaps something like `hyper::header::Origin::host` is meant OR even `hyper::header::Host::hostname` to gather just the IP.

https://github.com/IntrinsicLabs/osgood/blob/c50893bcf3bd59c41df7e2d5059006c618b6fc83/src/main.rs#L93

If it helps anyone, the workaround/hack I have in place for nginx is to set the upstream name to `localhost` so it gets through the origin check in osgood (no port supplied).

```
/etc/nginx/sites-available/default

server {
...
  location / {
    proxy_pass  http://localhost;
  }
...
}
upstream localhost  {
  server localhost:3031;
  server localhost:3032;
}
```

p.s. thank you for giving us securable v8 isolates!
Hi, 

The osgood project looks really cool. I especially like your api and build script for building v8. Is there any chance you would consider publishing osgood-v8 as a crate so that your v8 bindings could be used in other projects?