I've attempted to install via homebrew and manually compiling the code. In either case I get the same error: 
```
baircrack-osdep-1.3.0.dylib libaircrack-osdep.dylib; }; })
libtool: install: /usr/bin/install -c .libs/libaircrack-osdep.lai /usr/local/lib/libaircrack-osdep.la
make[4]: Nothing to be done for `install-data-am'.
  CC       aircrack_ng-aircrack-ng.o
error: unable to rename temporary 'aircrack_ng-aircrack-ng-d4224957.o.tmp' to output file 'aircrack_ng-aircrack-ng.o': 'Operation not permitted'
1 error generated.
make[2]: *** [aircrack_ng-aircrack-ng.o] Error 1
make[1]: *** [install-recursive] Error 1
make: *** [install-recursive] Error 1
```

I attempted to search for the file 'aircrack_ng-aircrack-ng-d4224957.o.tmp' and could not find it, so I believe the issue is that file is failing to be created. Not sure why though.

# Description

While 802.11ax is still draft, equipment already exists. Decode the rates in the beacons/probes and do the calculation like with 802.11ac/802.11n. Need to look into the *HE Capabilities* IE.

See 0c2d30209a19c844b118eab689ef36958e6c39b6
# Issue type

- Defect - Incorrect value displayed/received/stored
- Defect - Unexpected behavior (obvious or confirmed in the forum)

# System information

- OS: Linux

# Aircrack-ng version

- Version: 1.5.2
- Commit Revision hash: 1f07048

# Defect
## How to reproduce the issue

When starting airodump-ng, hit the 'o' key. It will automatically color clients linked to AP shown in the top section. However, newly added APs don't get colors. If there are unassociated clients, they will also get the same color as the other client (see PR #2088).
# Description

Some of the scripts use optparse. This has been deprecated in favor of argparse.

## Related

#2107: Airgraph-ng updates
airodump-ng can receive and interpret key strokes while running. 
Press `a` key multiple times and airodump-ng shows STA only.

Is it possible to show STA only by command-line option?
Improve some string handling that could lead to SEGVs; also eliminate the FORTIFY_SOURCE warnings
Hello, 

I'm using aircrack-ng 1.5.2_rev-8e552786 on kali linux 5.3.9-3kali1 (2019-11-20) x86_64 GNU/Linux

the problem is the following:
airodump-ng see my AP and receive the beacons (channel 36 (5Ghz)) BUT when I run aireplay-ng -0 on the same channel, aireplay-ng say me this:
14:25:28  Waiting for beacon frame (BSSID: XX:XX:XX:XX:XX:XX) on channel 36
14:25:38  No such BSSID available.

aireplay-ng need the -D switch to work.

I got the same problem with aireplay-ng -9, it say that injection is working but don't find my AP.
free() the memory and also prevent corruption if another thread changes the elapsed_time string _during_ the sprintf.
An older version of clang, 3.9 was used for the `.clang-format` file. However, it is getting hard to come by, and migrating to a more recent version is ideal.

Version would most likely be v6 as it is the common denominator in a lot of distro.

Would need to check that it still matches formatting and adjust parameters if necessary.

# Issue type

- Defect - Incorrect value displayed/received/stored

# System information

- OS:
Linux hironori 4.19.0-6-amd64 #1 SMP Debian 4.19.67-2+deb10u1 (2019-09-20) x86_64 GNU/Linux
- CPU:
Intel(R) Core(TM) i5-9400F CPU @ 2.90GHz
- Wireless card and chipset (if relevant):
ASUSTek Computer, Inc. USB-AC56 802.11a/b/g/n/ac Wireless Adapter [Realtek RTL8812AU]
Realtek Semiconductor Corp. RTL8812AU 802.11a/b/g/n/ac 2T2R DB WLAN Adapter

# Aircrack-ng version

- Version:
Aircrack-ng 1.5.2

- Commit Revision hash:
rev 4e79066a

# Defect
## `ap_cur->security` value is incorrect
![screenairodump-ng](https://user-images.githubusercontent.com/42118570/69336352-5aa6b780-0c6f-11ea-8830-0e244d38b847.png)

airodump-ng/dump_write.c (206)
```
if ((ap_cur->security & (STD_OPN | STD_WEP | STD_WPA | STD_WPA2)) == 0)
    fprintf(opt.f_txt, " ");
else
{
    if (ap_cur->security & STD_WPA2)
    {
        if (ap_cur->security & AUTH_SAE || ap_cur->security & AUTH_OWE)
            fprintf(opt.f_txt, " WPA3");
        fprintf(opt.f_txt, " WPA2");
    }
    if (ap_cur->security & STD_WPA) fprintf(opt.f_txt, " WPA");
    if (ap_cur->security & STD_WEP) fprintf(opt.f_txt, " WEP");
    if (ap_cur->security & STD_OPN) fprintf(opt.f_txt, " OPN");
}
```

the lines above are written to the file, but the protocol is not defined in the file either

`ap_cur->security` is equal to `9376` in all lines in the screenshot

commands before launch airodump-ng:
```
ip link set
ip link set <interface> up
ip link set <interface> down
iw dev <interface> set type monitor
ip link set <interface> up
airodump-ng <interface>
```