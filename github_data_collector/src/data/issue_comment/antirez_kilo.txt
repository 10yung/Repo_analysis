Still under 1 kloc

change style.
if this pull request will be approved, whole file style will change to kernel style in less than one week.
There is a heap overflow caused by integer overflow in kilo.c.
POC:
```
python -c "print '\t'*477218598" > ./exp
```
In command line:
```
make CC="clang-4.0 -fsanitize=address"
./kilo  ./exp
```
Output:
```
=================================================================
==18601==ERROR: AddressSanitizer: heap-buffer-overflow on address 0x608000000077 at pc 0x00000050f641 bp 0x7ffd0126fe50 sp 0x7ffd0126fe48
WRITE of size 1 at 0x608000000077 thread T0
    #0 0x50f640  (/home/kirin/kilo/kilo+0x50f640)
    #1 0x50fde0  (/home/kirin/kilo/kilo+0x50fde0)
    #2 0x511ae0  (/home/kirin/kilo/kilo+0x511ae0)
    #3 0x514833  (/home/kirin/kilo/kilo+0x514833)
    #4 0x7f99a53a0b96  (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)
    #5 0x41c339  (/home/kirin/kilo/kilo+0x41c339)

0x608000000077 is located 0 bytes to the right of 87-byte region [0x608000000020,0x608000000077)
allocated by thread T0 here:
    #0 0x4d1990  (/home/kirin/kilo/kilo+0x4d1990)
    #1 0x50f45e  (/home/kirin/kilo/kilo+0x50f45e)
    #2 0x50fde0  (/home/kirin/kilo/kilo+0x50fde0)
    #3 0x511ae0  (/home/kirin/kilo/kilo+0x511ae0)
    #4 0x514833  (/home/kirin/kilo/kilo+0x514833)
    #5 0x7f99a53a0b96  (/lib/x86_64-linux-gnu/libc.so.6+0x21b96)

SUMMARY: AddressSanitizer: heap-buffer-overflow (/home/kirin/kilo/kilo+0x50f640) 
Shadow bytes around the buggy address:
  0x0c107fff7fb0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c107fff7fc0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c107fff7fd0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c107fff7fe0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
  0x0c107fff7ff0: 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00 00
=>0x0c107fff8000: fa fa fa fa 00 00 00 00 00 00 00 00 00 00[07]fa
  0x0c107fff8010: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8020: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8030: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8040: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
  0x0c107fff8050: fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa fa
Shadow byte legend (one shadow byte represents 8 application bytes):
  Addressable:           00
  Partially addressable: 01 02 03 04 05 06 07 
  Heap left redzone:       fa
  Freed heap region:       fd
  Stack left redzone:      f1
  Stack mid redzone:       f2
  Stack right redzone:     f3
  Stack after return:      f5
  Stack use after scope:   f8
  Global redzone:          f9
  Global init order:       f6
  Poisoned by user:        f7
  Container overflow:      fc
  Array cookie:            ac
  Intra object redzone:    bb
  ASan internal:           fe
  Left alloca redzone:     ca
  Right alloca redzone:    cb
==18601==ABORTING
```
Analyze:
There is an integer overflow in function editorUpdateRow:
```
    for (j = 0; j < row->size; j++)
        if (row->chars[j] == TAB) tabs++;

    row->render = malloc(row->size + tabs*8 + nonprint*9 + 1);
    idx = 0;
    for (j = 0; j < row->size; j++) {
        if (row->chars[j] == TAB) {
            row->render[idx++] = ' ';
......
```
The space size being malloc will be calculated based on the number of TABs in one row.
When the number of TAB is too big,it will lead to Integer Overflow. And it will lead to heap-buffer-overflow finally.
I tried to debug the program using GDB and VS Code, but since the code uses escape sequences on Terminal for display, it can interfere with GDB output. For example, when a program calls `write(1, "\x1b[6n" , 4)` GDB will just hang there and not continue. How can I debug in this case? Thanks!
just for the records:

Fedora release 29

gcc (GCC) 8.2.1 20181215 (Red Hat 8.2.1-6)


In file included from /usr/include/termios.h:25,
                 from kilo.c:40:
/usr/include/features.h:184:3: warning: #warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE" [-Wcpp]
 # warning "_BSD_SOURCE and _SVID_SOURCE are deprecated, use _DEFAULT_SOURCE"
   ^~~~~~~
kilo.c: In function ‘editorRefreshScreen’:
kilo.c:953:19: warning: implicit declaration of function ‘time’; did you mean ‘tee’? [-Wimplicit-function-declaration]
     if (msglen && time(NULL)-E.statusmsg_time < 5)
                   ^~~~
                   tee

I get an error when kilo is compiled, but why does it work. Why is that?
The compiler I are using is Clang

this picture is a from original version
<img width="185" alt="2018-10-13 2 08 44" src="https://user-images.githubusercontent.com/12508269/46907322-bde1f880-cf4b-11e8-9783-e5c1b2006bd6.png">

this picture is a fixed version.
<img width="385" alt="2018-10-13 4 01 05" src="https://user-images.githubusercontent.com/12508269/46907331-da7e3080-cf4b-11e8-92ee-5e0f60f9bfd1.png">

The only need for `_BSD_SOURCE` is a single use of the trivial, but non-standard, `strdup()`. The only need for `_GNU_SOURCE` is for `getline()`. This function was standardized by POSIX 10 years ago, so you only need to ask for it with `_POSIX_C_SOURCE`.

Also added time.h which is only included by luck via the removed feature test macros.

This is better than PR #5 because `_DEFAULT_SOURCE` isn't needed at all.

When characters like "ä", "ö" or "å" are typed in the editor, the showable cursor shifts 2 times to the right (one time more than it should). However, the characters typed after this will not appear right before the showable cursor, but two or more columns to the left depending on how many non-English characters you have typed. I didn't investigate what was causing this problem.
Call FIND_RESTORE_HL make a memory leak