- develop basic image depthwiseconv
- looped test
- buffer kernel name fix.

针对问题：（1）当前Paddle-Lite 预测库需要引用以下头文件。但只有`paddle_api.h`头文件中声明用户接口。
```
paddle_use_ops.h  
paddle_use_kernels.h  
paddle_use_passes.h      
paddle_api.h
```
（2）当前Paddle-Lite动态库不需要调用`paddle_use_**.h`头文件，动态库静态库调用方法不对齐。
本PR解决方案：将`paddle_use_**.h`三个头文件放入`paddle_api.cc`代码中，用户调用paddle_api预测库不需要额外引用`paddle_use_**.h`三个头文件。

fix conv_transpose and bn fusion bug, conv_transpose weights [cin,cout,kh,kw], diff with conv weights shape [cout, can, kh, kw]
1.  重构fp32 5x5s1 dw conv, 支持任意pad， 支持relu， relu6，leakey融合。
2. WARNING: 为提升通用性牺牲了一部分性能，相比于之前版本约1 / 5性能损失 

Replace GRU compute axv codes with jit
# 状态：WIP单测出错正在看，等review

## 更新后

多出以下：

- 打印维度信息（input、filter、output）；
- Kernel具体方法（如direct、gemm、depthwise）；
- Kernel相关的参数信息remark（具体参数）；
- GOPS。

```shell
===== Detailed Profiler Summary: N/A, Exclude 0 warm-ups =====
Operator Type             Kernel Name                              Remark       Input        Filter       Output       GOPs         Avg (ms)     Min (ms)     Max (ms)     Last (ms)
calib                                                                                                                  0.000000     0.025390     0.023000     0.051000     0.026000
conv2d                    direct/arm/int8_t/NCHW                   3x3s2p1g1    1x3x128x128  8x3x3x3      1x8x64x64    0.001769     0.144360     0.140000     0.217000     0.140000
conv2d                    gemm/arm/int8_t/NCHW                     1x1s1p0g1    1x8x64x64    8x8x1x1      1x8x64x64    0.000524     0.052840     0.050000     0.129000     0.052000
conv2d                    depthwise/arm/int8_t/NCHW                3x3s1p1g8    1x8x64x64    8x1x3x3      1x8x64x64    0.000590     0.055860     0.054000     0.066000     0.057000
conv2d                    gemm/arm/int8_t/NCHW                     1x1s1p0g1    1x8x64x64    4x8x1x1      1x4x64x64    0.000262     0.027500     0.027000     0.036000     0.027000
conv2d                    gemm/arm/int8_t/NCHW                     1x1s1p0g1    1x4x64x64    24x4x1x1     1x24x64x64   0.000786     0.122690     0.118000     0.154000     0.122000
conv2d                    depthwise/arm/int8_t/NCHW                3x3s2p1g24   1x24x64x64   24x1x3x3     1x24x32x32   0.000442     0.056950     0.054000     0.140000     0.056000
conv2d                    gemm/arm/int8_t/NCHW                     1x1s1p0g1    1x24x32x32   6x24x1x1     1x6x32x32    0.000295     0.020630     0.019000     0.030000     0.021000
calib                                                                                                                  0.000000     0.003530     0.003000     0.005000     0.004000
conv2d                    gemm/arm/int8_t/NCHW                     1x1s1p0g1    1x6x32x32    36x6x1x1     1x36x32x32   0.000442     0.053050     0.051000     0.108000     0.052000
conv2d                    depthwise/arm/int8_t/NCHW                3x3s1p1g36   1x36x32x32   36x1x3x3     1x36x32x32   0.000664     0.073620     0.070000     0.129000     0.078000
```

add bitmain backend 
support resnet50 on BM1682