In your setup.py these extra ' quotes break conda builds and are not required, I think:

```python
"yapf >= '0.28'; python_version < '3.6'",
"black >= '19.3'; python_version >= '3.6'",
```

I think they should be better:

```python
"yapf >= 0.28; python_version < 3.6",
"black >= 19.3; python_version >= 3.6",
```

Maybe you try if your build process works without them (I think they should) and then you could remove these quotes?

Just got badly trapped by trying to use `lab_black` when running Jupyter notebook, it would be best if this could be done transparently on the plugin side. there should be a way to determine if it's run inside either? 
I would really like to permanently enable `nb_black` in Jupyter Notebook, but unfortunately, when I put `c.InteractiveShellApp.extensions = ['nb_black]` in my IPython profile, I get the output `<IPython.core.display.Javascript object>` after each line of evaluation in IPython.

Editing `~/.local/lib/python3.7/site-packages/jupyter_core/tests/dotipython/profile_default/ipython_config.py` worked as intended, but is not a very elegant solution.

Is there any possibility to specify a IPython profile which should only be used by Jupyter?  Or maybe make `nb_black` more agnostic towards IPython, so that it only shows effect in Jupyter Notebook?
nb_black 1.0.6

listing a path ending with `/` results in an error
`ls ./`

ERROR:root:Cannot parse: 1:4: ls ./
Traceback (most recent call last):
  File "/usr/local/lib/python3.6/dist-packages/lab_black.py", line 210, in format_cell
    formatted_code = _format_code(cell)
  File "/usr/local/lib/python3.6/dist-packages/lab_black.py", line 29, in _format_code
    return format_str(src_contents=code, mode=FileMode())
  File "/usr/local/lib/python3.6/dist-packages/black.py", line 669, in format_str
    src_node = lib2to3_parse(src_contents.lstrip(), mode.target_versions)
  File "/usr/local/lib/python3.6/dist-packages/black.py", line 758, in lib2to3_parse
    raise exc from None
black.InvalidInput: Cannot parse: 1:4: ls ./

And listing a path without `/` - `ls /something/else` formats the path, which shouldn't be the case.
It seems that black by default deletes trailing semicolons in notebook cells. As these are commonly used to suppress the output of the cells, this can be a bit annoying.
Is there any possibility to tell nb_black / black to change this behaviour?

I know that I can just write None in the last line of each python cell but this makes the code kind of ugly.

Thanks in advance and kind regards,
Carsten
Hi

First of all, thank you for this extension.

I plan to use nb_black  and Jupyter Notebooks to generate blog posts, where  code blocks are indented.  This means I would like to set the line length to 65 (ie not the default).

I would also like to preserve single quote strings (a black option).

Can you indicate where in your code it might be possible to change the default parameters for black?

Second:
I am running Jupyter lab Version 0.35.3, in an environment as below

```
python version : 3.7.1 (default, Dec 10 2018, 22:54:23) [MSC v.1915 64 bit (AMD64)]
python environment : ac5-py37
pandas version : 0.23.4
current wkg dir: C:\Users\donrc\Documents\JupyterNotebooks\OSMNXNotebookProject\develop
Notebook name: Communities.ipynb
Notebook run at: 2019-08-03 18:45:44.954269 local time
Notebook run at: 2019-08-03 08:45:44.954269 UTC
Notebook run on: Windows-10-10.0.18362-SP0

<IPython.core.display.Javascript object>
```

You will notice that Jupyterlab displays after each cell execution (I assume this is unintended behaviour)

```

<IPython.core.display.Javascript object>
```
I am running nb_black as below

```
(ac5-py37) C:\Users\donrc>conda list nb_black
# packages in environment at D:\Anaconda3\envs\ac5-py37:
#
# Name                    Version                   Build  Channel
nb_black                  1.0.6                      py_0    conda-forge
```
Now I can't reproduce this behaviour in smaller Notebooks, so you may see fit to ignore this until I can :)

Third, invoking ```%load_ext lab_black```  seems to stick with the notebook.  Even if you reload the notebook and delete the %load_ext cell, the black formatting is still applied to new cells.  You may wish to mention that you turn it off by a %unload_ext lab_black  call.

Happy to supply more info if needed

Don Cameron