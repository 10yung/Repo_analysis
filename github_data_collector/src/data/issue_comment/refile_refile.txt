This patch adds support for the credentials feature introduced in rails 5.2.

The code patch has been updated to also check that the `secret_key_base` is also actually set. This is more in-line with the logic of `config.secret_key_base` in [Rails 5.2](https://api.rubyonrails.org/v5.2.1/classes/Rails/Application.html#method-i-secret_key_base) and whit what other gems like [Devise](https://github.com/plataformatec/devise/blob/master/lib/devise/secret_key_finder.rb) do.

We can't use `config.secret_key_base` since it doesn't exist on Rails versions before 5.2.

Replaces https://github.com/refile/refile/pull/595
Closes https://github.com/refile/refile/issues/593
This patch adds support for a new `quality` parameter that will be forwarded to the image processor.

This patch requires https://github.com/refile/refile-mini_magick/pull/23

**Specs**

Specs are missing since I couldn't find any information on how to run them and I was also not sure how the specs are build up. I can see that there are some dummy processors used that work with strings rather than images. I would love to get some help and add specs for the new parameter.

**Version Requirements**

Since this change requires a specific version of the `refile-mini_magick` gem we would need to somehow ensure that the correct version is present.

Since the gem dependency points from `refile-mini_magick` to `refile` I'm not sure how we would enforce this.

Other processors would also now need to support this option which might makes no sense for non-image based processors.

Maybe another patch is needed first that exposes the supported options on each image processor. I'll love to hear your thoughts on how to solve this problem.
I believe rails 6 has switched to credentials, i.e. Rails.application.credentials.secret_key_base, any plans to update this code?

https://github.com/refile/refile/blob/47778bdfceb81dc34f348a050232e7ab70a85e44/lib/refile/rails.rb#L31

Thanks!
I tried upload using internet explorer, firefox or chrome into windows xp using files of extensions xlsx, zip and pptx. And into the parameters the content-type its empty.
Just with windows.
When creating any object with an attachment, the tempfile is closed before it can be read.

My temporary fix is to add this the first line of the create method in the controller, where Subscriber is the model and file is the attachment field:

`params[:subscriber][:file].tempfile.open`

What might be causing the file to close prematurely? Refile version 0.6.2 rails version 5.2.1
We are using refile for video upload and storage. The problem is that on download refile streams the data through the application and it fills up the servers' tmp space and create more strain on the system.

Is there a way to download the file directly from S3?
This would close out #555 (if it gets pulled in). I published this @ https://www.npmjs.com/package/testing-refile-tristanoneil for testing purposes so you can try it out with `npm install --save testing-refile-tristanoneil`. The package only includes `refile.js` in addition to `README.md`, `History.md`, `LICENSE.txt` and `package.json` (`npm` publishes these files by default). It does appear that [`refile`](https://www.npmjs.com/package/refile) is already taken on NPM so the package name would likely have to be changed, I'll leave that up to the maintainer though as to what it should be.
In my project I'm not using the Rails asset pipeline. I'm trying to use `presigned` for my s3 uploads but realized it requires the presence of the Javascript library. It'd be nice to import this as an NPM package in my entry file.
I know in paperclip it is built in as of 4.0 that Base64 encoded images will upload without any extra work.  Does refile have any built in support for uploading Base64 images?

Leaving out `autosave` will only save the attachments when the parent record is created

http://api.rubyonrails.org/classes/ActiveRecord/AutosaveAssociation.html
