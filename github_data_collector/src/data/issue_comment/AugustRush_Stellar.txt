Hello, I would like to collaborate with the Spanish translation, is it done?
For months now I have problem using Stellar with Carthage. I have to ways to solve the problems: 1/ by "manually" building Stellar framework after changing stuff in Xcode project or 2/ by adding sources to my project. But as for now the last option does not work because the code imported using Carthage is not the last one on GitHub...

So there is definitely something wrong with Carthage.
Hello,

As is, the examples do not support Xcode 9.  Can they be updated to support Xcode 9 and at least Swift 3?
With `0.66` this exception is thrown on very basic animation:

``` swift
myView.makeAlpha(0.0)
      .duration(aDuration)
      .autoreverses()
      .repeatCount(someRepetitions)
      .completion {
            // Some statements
              myView.removeFromSuperview()
            }
      .animate()
```

Let's say it's a find of _flash_.

I tried other animation like `makeSize`or `makeColor` but same behavior.

This _flash_ portion of code is called several times on a sequence basis. On the first call everything is fine. The exception is raises on the second call.  
Between these two calls of _flash_ there is an animation using `CATransaction`. On the completion block of this animation the second call of _flash_ is then made.

``` Swift
CATransaction.begin()
CATransaction.setCompletionBlock({
      // call to flash animations
})

...

CATransaction.commit()
```

This error came after I decided to use `CATransaction` to use it's completion block.


Hi,

Interesting library! 

Latest release here is 0.66, while on pods you can only find 0.61.  Any reason to keep it that way? Could you update it there too? So we don't need to point this specific branch.

Thank you,
H.
Using `makeAlpha` of `0.66` generates the `Unsupport this animation type!`
(btw, Unsupport is not word ... `Do not support this animation type!` is better)

Reverting back to 0.65 fixed the issue by using the following in the Podfile 
`pod 'Stellar', :git => 'https://github.com/AugustRush/Stellar', :commit => '5249167900b1eb136ce71543af7817a9fa5535cb'`
I want to use Stellar with my project but I have this `Value of type 'UIView' has no member` error in my very first attempt to use Stellar on an UIView.

I use Carthage to install Stellar the same way as other libraries. It's like Stellar is not "installed". Installation using Stellar 0.65 is OK, and the usual Carthage installation has been followed.
Then, I used the direct inclusion of `Sources`directory and everything is fine.

I have clean project. This is a weird behavior... Any idea? Is there special configuration for Carthage command?

Still awesome animation library. Loving it the more I use it.

Feature request. Would be nice if I could call cancelAllAnimations() on a UIView. and it'll stop all ongoing and planned animations.


What are your thought about this?

Oftentimes I need to also animate affine scale. However this one is not supported by stellar. I wrote the following set of extensions to make it uniform with Stellar's syntax. 

What are your thoughts? Do you see any systemic issue?

`struct CABasicAnimatedView  {
    
    let view: UIView
    let animation: CABasicAnimation
}

extension UIView {
    
    func makeAffineUniformScale(from from: CGFloat, to: CGFloat) -> CABasicAnimatedView {
        
        let animation = CABasicAnimation(keyPath: KeyPaths.Transform.scale)
        let animatedView = CABasicAnimatedView(view: self, animation: animation)
        
        animatedView.animation.fromValue = from
        animatedView.animation.toValue = to
        
        return animatedView
    }
}

extension CABasicAnimatedView {
    
    func duration(duration: NSTimeInterval) -> CABasicAnimatedView {
        
        self.animation.duration = duration
        
        return self
    }
    
    func timingFunction(timingFunction: CAMediaTimingFunction) -> CABasicAnimatedView {
        
        self.animation.timingFunction = timingFunction
        
        return self
    }
    
    func animate() {
        
        CATransaction.begin()
        self.view.layer.addAnimation(self.animation, forKey: nil)
        CATransaction.commit()
        
        self.view.transform = CGAffineTransformMakeUniformScale(self.animation.toValue as! CGFloat) }
}

func CGAffineTransformMakeUniformScale(scale: CGFloat) -> CGAffineTransform {
    
    return CGAffineTransformMakeScale(scale, scale)
}`
just run any example from demo and click multiple times - animation breaks
