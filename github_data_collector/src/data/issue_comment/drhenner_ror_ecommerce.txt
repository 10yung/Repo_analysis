
https://github.com/drhenner/ror_ecommerce/blob/3db5a29000ac93d6b896469511004e450d019042/app/models/referral.rb#L10

with current validation code, I can create referrals with same email adrress with lowercase/uppercase as attached.

![image](https://user-images.githubusercontent.com/42279873/55834239-0e8f7400-5adf-11e9-9627-0697d4981ddb.png)

I believe here should use 
`validates :email,             
                                presence:   true,
                                uniqueness: {case_sensitive: false},
                                format:     { with: CustomValidators::Emails.email_validator }`

As per commit message.
To fix issues
https://github.com/drhenner/ror_ecommerce/issues/193
As per commit message.
To fix issues
https://github.com/drhenner/ror_ecommerce/issues/194
https://github.com/drhenner/ror_ecommerce/issues/195
Hi There,

Did not see the issue, but the server at  ror-e.herokuapp.com is down and not working.
```
ror_ecommerce/app/./models/cart.rb:107:    shopping_cart_items.map(&:total).sum
ror_ecommerce/app/./models/cart.rb:115:    shopping_cart_items.map(&:quantity).sum
```
to 
```
shopping_cart_items.sum(:total)
shopping_cart_items.sum(:total)
```
doing sum is faster in db side

ror_ecommerce/app/views/admin/users/show.html.erb:22:          <li><label># of Items</label><%= shipment.order_items.count %></li>
When rendering the products,  link_to, image_tag and some other functions are used to generate corresponding label, however they might be expensive, and the contents generated actually have a lot of things in common. It's possible to use string replace to achieve this function. 
Also, when the product.status_stock is 'low stock', the same ribbon image will be rendered, so there is no need to generate the image_tag every time, we can put it out of the loop and reuse it when necessary. 
Here is my patch, it somewhat make the code a little bit hard to read, but it indeed improve performance, especially when one page have a lot of products to show.
```
diff --git a/app/views/products/index.html.erb b/app/views/products/index.html.erb
index 834be42..b0e968d 100644
--- a/app/views/products/index.html.erb
+++ b/app/views/products/index.html.erb
@@ -7,17 +7,18 @@
Here is my patch  
   <div id='interesting_items' >
     <ul id='interesting_items-list'>
+      <% low_stock = image_tag("ribbons/low_stock.png",
+                                 width: 63, height: 62,
+                                 class: 'upper_left_overlay' ) %>
+      <% no_image = image_tag("no_image_medium.jpg") %>
+      <% image = "<img src = 'image_path' alt = ''/>" %>
       <% @products.each_with_index do |product, i| %>
         <li id='interesting_product_<%= i %>' class=''>
           <div class='interesting_items-image'>
-
-            <%= link_to product_path(product), title: product.name do %>
-
+            <a title = '<%= product.name %>' href = '<%= product_path(product)%>'>
               <div class='no-hover-show'>
                 <% if product.hero_variant.try(:low_stock?) %>
-                  <%= image_tag("ribbons/#{product.stock_status}.png",
-                                 width: 63, height: 62,
-                                 class: 'upper_left_overlay' ) %>
+                  <%= low_stock %>
                 <% end %>
                 <div class='hover-details unfade'>
                   <p class='bottom-hover-details'>
@@ -29,8 +30,15 @@
                   </p>
                 </div>
               </div>
-              <%= link_to image_tag(product.featured_image(:medium)), product_path(product), title: product.name, class:  'clearfix' %>
-            <% end %>
+              <a title = '<%= product.name %>' class:  'clearfix' href = '<%= product_path(product)%>' >
+               <% if product.featured_image(:medium) != "no_image_medium.jpg" %>
+                   <%= image.gsub('image_path', product.featured_image(:medium)).html_safe %>
+               <% else %>
+                   <%= no_image %>
+               <% end %>
+              </a>
+            </a>
           </div>
 
           <div class='interesting_items-details'><%= product.name %><br/>

```
app/controllers/application_controller.rb
```
129    session_cart.cart_items.each do |item|
130      item.update_attribute(:user_id, user.id ) if item.user_id != user.id
131   end
```
replaced by update_all
```
session_cart.cart_items.where.not(user_id: user.id).update_all(user_id: user.id)
```
ror_ecommerce/app/views/admin/rma/return_authorizations/_form.html.erb

<% return_item = @return_authorization.return_items.detect {|p| p.order_item_id == item.id } %>
will issue a query to get all return_items of @return_authorization, and then detect them to find the one with specified item.id.
However, use find_by will only issue the query use where condition
@return_authorization.return_items.find_by(order_item_id:  item.id)

