I'm attempting to use immutable @ConfigurationProperties objects with @ConstructorBinding.  Despite the opinion of many, I like my constructors to declare Optionals for optional arguments.  

Currently I get a null value passed into my constructor if the property doesn't exist.  It would be nice if an empty optional could be provided if the argument is of type optional and the value is null.  Thoughts?

Juergen's suggestion https://github.com/spring-projects/spring-framework/issues/18505#issuecomment-453435966 works great for mutable ConfigurationProperties classes but not immutable ones.

For further details, I'd like to have a class like so:
```
@ConfigurationProperties
public class SomeProperties {
  @NotNull private final Optional<String> someConfig;

  @ConstructorBinding
  public SomeProperties(Optional<String> someConfig) {
    this.someConfig = someConfig;
  }

  public Optional<String> getSomeConfig() {
    return someConfig;
  }
}
```
Instead my class looks like:
```
@ConfigurationProperties
public class SomeProperties {
  @NotNull private final Optional<String> someConfig;

  @ConstructorBinding
  public SomeProperties(Optional<String> someConfig) {
    this.someConfig = someConfig == null ? Optional.empty() : someConfig;
  }

  public Optional<String> getSomeConfig() {
    return someConfig;
  }
}
```
This failure is from `hasRecreateSchemaActionSet`:

```
Could not reach any contact point, make sure you've provided valid addresses (showing first 1, use getErrors() for more: Node(endPoint=/172.17.0.1:32832, hostId=null, hashCode=401ca295): com.datastax.oss.driver.api.core.DriverTimeoutException: [s0|control|id: 0x97060aa4, L:/172.17.0.1:54734 - R:/172.17.0.1:32832] init query OPTIONS: timed out after 500 ms)
```

It looks like we could do with increasing a timeout somewhere. 500ms doesn't appear to be enough time for a response to be received reliably.
`spring-boot-starter-cloud-connectors` was [deprecated in Spring Boot `2.2.0`](https://github.com/spring-projects/spring-boot/issues/17877). We should consider removing it in `2.3.0`. 

Hi,

this PR fixes #19794 as discussed + a little polishing for `exclude`s that were in the same example scope.

Cheers,
Christoph
<!--
Thanks for raising a Spring Boot issue. Please take the time to review the following
categories as some of them do not apply here.

🙅 "Please DO NOT Raise an Issue" Cases
- Question
STOP!! Please ask questions about how to use something, or to understand why something isn't
working as you expect it to, on Stack Overflow using the spring-boot tag.
- Security Vulnerability
STOP!! Please don't raise security vulnerabilities here. Head over to https://pivotal.io/security to learn how to disclose them responsibly.
- Managed Dependency Upgrade
You DO NOT need to raise an issue for a managed dependency version upgrade as there's a semi-automatic process for checking managed dependencies for new versions before a release. BUT pull requests for upgrades that are more involved than just a version property change are still most welcome.
- With an Immediate Pull Request
An issue will be closed as a duplicate of the immediate pull request, so you don't have to raise an issue if you plan to create a pull request immediately.

🐞 Bug report (please don't include this emoji/text, just add your details)
Please provide details of the problem, including the version of Spring Boot that you
are using. If possible, please provide a test case or sample application that reproduces
the problem. This makes it much easier for us to diagnose the problem and to verify that
we have fixed it.

🎁 Enhancement (please don't include this emoji/text, just add your details)
Please start by describing the problem that you are trying to solve. There may already
be a solution, or there may be a way to solve it that you hadn't considered.


TIP: You can always edit your issue if it isn't formatted correctly.
     See https://guides.github.com/features/mastering-markdown 
-->

Reactor Netty 0.9.4 will be released on Monday and fixes a back compatibility issue
<!--
Thanks for raising a Spring Boot issue. Please take the time to review the following
categories as some of them do not apply here.

🙅 "Please DO NOT Raise an Issue" Cases
- Question
STOP!! Please ask questions about how to use something, or to understand why something isn't
working as you expect it to, on Stack Overflow using the spring-boot tag.
- Security Vulnerability
STOP!! Please don't raise security vulnerabilities here. Head over to https://pivotal.io/security to learn how to disclose them responsibly.
- Managed Dependency Upgrade
You DO NOT need to raise an issue for a managed dependency version upgrade as there's a semi-automatic process for checking managed dependencies for new versions before a release. BUT pull requests for upgrades that are more involved than just a version property change are still most welcome.
- With an Immediate Pull Request
An issue will be closed as a duplicate of the immediate pull request, so you don't have to raise an issue if you plan to create a pull request immediately.

🐞 Bug report (please don't include this emoji/text, just add your details)
Please provide details of the problem, including the version of Spring Boot that you
are using. If possible, please provide a test case or sample application that reproduces
the problem. This makes it much easier for us to diagnose the problem and to verify that
we have fixed it.

🎁 Enhancement (please don't include this emoji/text, just add your details)
Please start by describing the problem that you are trying to solve. There may already
be a solution, or there may be a way to solve it that you hadn't considered.


TIP: You can always edit your issue if it isn't formatted correctly.
     See https://guides.github.com/features/mastering-markdown 
-->

We should consider using `infinispan-bom` instead of listing Infinispan modules explicitly, considering the large number of Inifinispan modules Spring Boot manages. 

The [current BOM as of `10.1.0.Final`](https://search.maven.org/artifact/org.infinispan/infinispan-bom/10.1.0.Final/pom) includes dependency management for non-Infinispan artifacts (see [ISPN-11115](https://issues.redhat.com/browse/ISPN-11115)) and includes several modules that may not be necessary. 
This includes removing modules that were made obsolete (notably `infinispan-spring4-*`) and adding modules that are new in 10.1.0.
Provide the ability to customize Couchbase Data type key.