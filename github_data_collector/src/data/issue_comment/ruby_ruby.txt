
The story started when I inspected this reline commit https://github.com/ruby/ruby/commit/f8ea2860b0cac1aec79978e6c44168802958e8af . I wondered about so few changes in tests although there was a hard change to string encodings on the Windows backend. So I tried to run the tests alone and got encoding related failures as expected. After some back and forth I realized that the way how `make test-all` is running makes the difference. If it's running with `-j` it succeeds and without `-j` it fails. So `make test-all` was joking in CI!

The two attached commits first fix the MinTTY detection that caused the difference in test results and then it fixes the encoding related failures caused by commit f8ea2860b0cac1aec79978e6c44168802958e8af .

These were all deprecated in Ruby 2.7.

I noticed this default size while working on something else, and it intrigued me.

It was set to 1000 in a4a2b9be7a55bb61d17cf9673ed0d2a93bb52d31.

However on ruby-2.7.0p0, there are much more than 1k frozen string right after boot:

```
$ ruby -robjspace -e 'p ObjectSpace.each_object(String).select { |s| s.frozen? && ObjectSpace.dump(s).include?(%{"fstring":true})}.uniq.count'
5948
```

The gain is likely very minor, but it's also a very simple change (which I suppose don't require a redmine ticket).

@mame what do you think ?
```
lourens@CarbonX1:~/src/ruby/ruby$ make benchmark ITEM=constants COMPARE_RUBY=~/src/ruby/trunk/ruby OPTS="-v --repeat-count 12 --repeat-result median"
/usr/local/bin/ruby --disable=gems -rrubygems -I./benchmark/lib ./benchmark/benchmark-driver/exe/benchmark-driver \
            --executables="compare-ruby::/home/lourens/src/ruby/trunk/ruby -I.ext/common --disable-gem" \
            --executables="built-ruby::./miniruby -I./lib -I. -I.ext/common  ./tool/runruby.rb --extout=.ext  -- --disable-gems --disable-gem" \
            $(find ./benchmark -maxdepth 1 -name 'constants' -o -name '*constants*.yml' -o -name '*constants*.rb' | sort) -v --repeat-count 12 --repeat-result median
compare-ruby: ruby 2.8.0dev (2020-01-15T01:50:53Z master ac93cf4ff8) [x86_64-linux]
built-ruby: ruby 2.8.0dev (2020-01-15T02:06:58Z opt-const-at 3d5e2d4f68) [x86_64-linux]
Calculating -------------------------------------
                     compare-ruby  built-ruby 
                 all     412.156k    519.808k i/s -      1.000M times in 2.443206s 1.932313s
           inherited     431.349k    522.407k i/s -      1.000M times in 2.338914s 1.930936s

Comparison:
                              all
          built-ruby:    519808.1 i/s 
        compare-ruby:    412156.0 i/s - 1.26x  slower

                        inherited
          built-ruby:    522406.7 i/s 
        compare-ruby:    431348.9 i/s - 1.21x  slower
```
macOS's 'make (test-bundled-gems)' job is currently 'frozen' and runs for 6 hours.  Use a 'sparse matrix' format to add test timeouts to all macOS Actions tests.

Small update to MinGW.
 

see: https://bugs.ruby-lang.org/issues/16505
The following code should pass one positional argument and one block
one.

```
args = [->{}]
foo(*args, &args.pop)
```

However, the old implementation passes no argument because the
expression of the block argument (`args.pop`) is executed before the
rest argument is passed.

By this change, the passed rest argument is duplicated before
`args.pop` is executed.
(This duplication is omitted when the expression of the block
argument is "getblockparamproxy" because it has no side effect.)

[Bug #16504]