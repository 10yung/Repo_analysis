<!-- DO NOT DELETE 
validate_template=false
template_path=.github/ISSUE_TEMPLATE.md
-->

### Step 2: Describe your environment

  * Android device: Pixel 3
  * Android OS version: 10
  * Google Play Services version: 19.8.31
  * Firebase/Play Services SDK version: core:17.2.1, auth:19.2.0
  * FirebaseUI version: 6.0.2

### Step 3: Describe the problem:

When signing in by using the account of a deactivated user, `IdpResponse` returns an error code of `5`, yet error code for `ERROR_USER_DISABLED` in `ErrorCodes.java` has a value of `12`, while code `5` means `ANONYMOUS_UPGRADE_MERGE_CONFLICT`

https://github.com/firebase/FirebaseUI-Android/blob/4b06d16e77ae41964edcd37953dc0c97c6d271ed/auth/src/main/java/com/firebase/ui/auth/ErrorCodes.java#L72

#### Steps to reproduce:

Deactivate a user in the Firebase Console, try to sign in with that user by using FirebaseUI-Android
  
#### Observed Results:

`IdpResponse.fromResultIntent(data).getError().getErrorCode()` returns a value of `5`
The message of `.getError().toString()` is "_com.firabase.ui.auth.FirebaseUiException: User account merge conflict_"
  
#### Expected Results:

`IdpResponse.fromResultIntent(data).getError().getErrorCode()` returns a value of `12`
  
#### Relevant Code:

  ```
@Override
protected void onActivityResult(int requestCode, int resultCode, Intent data) {
    super.onActivityResult(requestCode, resultCode, data);
    if (requestCode == RC_SIGN_IN) {
        final IdpResponse response = IdpResponse.fromResultIntent(data);
        if (resultCode == RESULT_OK) {
            final FirebaseUser user = FirebaseAuth.getInstance().getCurrentUser();
            user.getIdToken(false).addOnCompleteListener(new OnCompleteListener<GetTokenResult>() {
                @Override public void onComplete(@NonNull Task<GetTokenResult> task) {
                    MyFirebaseManager.analyzeUser("on_activity_result", user, task, response.isNewUser());
                }
            });
        }
        else {
            // Sign in failed. If response is null the user canceled the
            // sign-in flow using the back button. Otherwise check
            // response.getError().getErrorCode() and handle the error.
            // ...
            if (response == null) {
                MyFirebaseManager.signInCancelled();
            }
            else {
                FirebaseUiException thing = response.getError();
                MyFirebaseManager.signInFailed(response.getError().getErrorCode()); // <----
            }
        }
     }
}
 ```

<!-- DO NOT DELETE 
validate_template=false
template_path=.github/ISSUE_TEMPLATE.md
-->
### Environment

  * Android device: Pixel 2 XL
  * Android OS version: 10
  * Google Play Services version: Phone 19.5.30
  * Firebase/Play Services SDK version: com.google.firebase:firebase-auth:19.1.0
  * FirebaseUI version: 6.0.2
  
### Describe the problem
When trying to sign in using an existing account from an anonymous user, I am getting the following exception:
```
com.firebase.ui.auth.FirebaseUiException: No supported providers.
        at com.firebase.ui.auth.viewmodel.idp.SocialProviderResponseHandler$1$2.onSuccess(SocialProviderResponseHandler.java:95)
        at com.firebase.ui.auth.viewmodel.idp.SocialProviderResponseHandler$1$2.onSuccess(SocialProviderResponseHandler.java:88)
        at com.google.android.gms.tasks.zzn.run(Unknown Source:4)
```

#### Steps to reproduce:

  1. Sign in with anonymous provider 
  2. Sign up with a new account (In my case using a Google account)
  3. Sign out from the non anonymous account
  4. Sign in with anonymous provider
  5. Sign in with the existing Google account created in step 2
  
#### Observed Results:

  * Step 5 above will fail with "FirebaseUiException: No supported providers."
  
#### Relevant Code:

The code of the project I am working on is open source and available here: https://github.com/niqo01/social-cats-playground/tree/nm/firebaseAuthAnonymousIssue
I created a branch to freeze the code with the issue `nm/firebaseAuthAnonymousIssue`

AuthUI  intent code: 
```
    fun createSignInIntent(): Intent {
        return authUI.createSignInIntentBuilder()
            .enableAnonymousUsersAutoUpgrade()
            .setAvailableProviders(PROVIDERS)
            .build()
    }
```
https://github.com/niqo01/social-cats-playground/blob/nm/firebaseAuthAnonymousIssue/auth/ui/src/androidMain/kotlin/AndroidAuthUi.kt#L39

List of supported providers: 
```
val PROVIDERS = listOf(IdpConfig.PhoneBuilder().build(), IdpConfig.GoogleBuilder().build())
```
https://github.com/niqo01/social-cats-playground/blob/nm/firebaseAuthAnonymousIssue/auth/ui/src/androidMain/kotlin/AndroidAuthUi.kt#L10

Firebase auth configuration:
![firebase_auth](https://user-images.githubusercontent.com/1121251/67722067-6fa46980-f995-11e9-8bf8-2755c75efd93.png)

#### Additional notes
While debugging, I was able to see that the call to `auth.fetchSignInMethodsForEmail(email)` from the auth ui library was called with the proper email. However the number of signInMethods return is 0.
https://github.com/firebase/FirebaseUI-Android/blob/master/auth/src/main/java/com/firebase/ui/auth/util/data/ProviderUtils.java#L195
<!-- DO NOT DELETE 
validate_template=false
template_path=.github/ISSUE_TEMPLATE.md
-->

Welcome to FirebaseUI and thanks for submitting an issue!

Please take a look at [open issues](https://github.com/firebase/FirebaseUI-Android/issues?q=is%3Aopen+is%3Aissue), as well as [resolved issues](https://github.com/firebase/FirebaseUI-Android/issues?q=is%3Aissue+is%3Aclosed), to see if your issue is either already being addressed, or has been solved by someone else.

If not, please feel free to fill in the following info so we can help faster!

### Step 1: Are you in the right place?

  * For issues or feature requests related to the code **in this repository** file a GitHub issue.
  * For general technical questions, post a question on [StackOverflow](http://stackoverflow.com/) tagged appropriately.
  * For general Firebase discussion, use the [firebase-talk google group](https://groups.google.com/forum/#!forum/firebase-talk)
  * For help troubleshooting your application that does not fall under one of the above categories, reach out to the [personalized Firebase support channel](https://firebase.google.com/support/contact/troubleshooting/)

### Step 2: Describe your environment

  * Android device: ___Samsung __
  * Android OS version: _____ 9 
  * Google Play Services version: _____11.4.2
  * Firebase/Play Services SDK version: _____11.4.2
  * FirebaseUI version: ____6.0.2
  
### Step 3: Describe the problem:
In some phones the text and edit text fields are invisible.  Works fine on most phones 
![Uploading image.pngâ€¦]()
 
![WhatsApp Image 2019-10-26 at 10 10 28 PM](https://user-images.githubusercontent.com/7124091/67623942-cb151100-f848-11e9-9a90-3f9c9872888b.jpeg)

#### Steps to reproduce:
  1. _____Click on phone or email login to see this

  2. _____
  3. _____
  
#### Observed Results:

  * What happened?  This could be a description, `logcat` output, etc.
  
#### Expected Results:

  * What did you expect to happen?
  
#### Relevant Code:

  ```
  // TODO(you): code here to reproduce the problem
  ```

<!-- DO NOT DELETE 
validate_template=false
template_path=.github/ISSUE_TEMPLATE.md
-->
  * FirebaseUI version: 6.0.2
  
Problem Description:
When creating an `AuthMethodPickerLayout` object to make a custom layout for the login screen, 
you have to set button ids of the auth providers that you chose.
When you choose `EmailBuilder` as a provider but without providing a button id for it while creating the `AuthMethodPickerLayout` object the app crashes and shows this error in log cat:
`Caused by: java.lang.IllegalStateException: No button found for auth provider: password`

**So the problem here is the "password" word, it should say "email" or "EmailBuilder."**

I thought that this could be misleading to some people so I created this issue.

#### Steps to reproduce:

  1. Create an `AuthMethodPickerLayout `object to make a custom layout.
  2. Choose `EmailBuilder` as a provider but without providing a button id for it while creating the object.
  
#### Observed Results:

`Caused by: java.lang.IllegalStateException: No button found for auth provider: password`
  
#### Expected Results:

`Caused by: java.lang.IllegalStateException: No button found for auth provider: email`


This works for both battery mode and the dark mode toggle in API 29.

Fixes #1464 
<!-- DO NOT DELETE 
validate_template=false
template_path=.github/ISSUE_TEMPLATE.md
-->

It can often be the case that the calling code will have a good idea what email address the user is going to use to sign in with (for example, when resuming after sending a verification email).

It would make things smoother for the end user if we could have a method to pre-populate the email address field in the email sign in page. Something like:
`AuthUI.IdpConfig.EmailBuilder().setEmail("someone@example.com").build()`

<!-- DO NOT DELETE 
validate_template=false
template_path=.github/ISSUE_TEMPLATE.md
-->

### Describe your environment

  * Android device: Samsung Galaxy S9 (US) (the issue happened in more than one device in Firebase Test Lab)
  * Android OS version: API Level 26
  * Google Play Services version: 16.0.1
  * Firebase/Play Services SDK version: 16.0.8
  * FirebaseUI version: 4.2.1
  
### Step 3: Describe the problem:

Sometimes, when trying to sign in using email authentication, the sign-in fails with the error `com.google.firebase.FirebaseTooManyRequestsException: The sms quota for this project has been exceeded.`. This error seems incorrect as I'm not using SMS verification at all.

The sign-in/up that fails uses email-password only. Google and Facebook are enabled for users to use but they are not used when this error happens.

#### Steps to reproduce:

  1. Add FirebaseUI to an app with Email, Google and Facebook authentication:

```
startActivityForResult(authUI.createSignInIntentBuilder()
                               .setAvailableProviders(listOf(GoogleBuilder().build(),
                                                             FacebookBuilder().build(),
                                                             EmailBuilder().build()))
                               .setLogo(R.drawable.img_logo_auth_firebase)
                               .setTheme(R.style.AppTheme_NoActionBar)
                               .setIsSmartLockEnabled(false, false)
                               .build(), RC_SIGN_IN)
```

  2. Sign in using email.

**IMPORTANT:** This error doesn't happen always, only sometimes.  
  
#### Observed Results:

App logs that show the error:
  
```
05-31 15:31:15.575: I/AuthChimeraService(17208): Executing request: ProxyRequest[ url: https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?alt=proto&key=AIzaSyAoDYMA20kdNy-hROrNp0ofU28Nk6fzT_A, method: 1 ]
05-31 15:31:15.580: I/HWComposer(702): getActiveConfigs: Attempted to access invalid display -1
05-31 15:31:15.585: I/System.out(17208): (HTTPLog)-Static: isSBSettingEnabled false
05-31 15:31:15.585: I/System.out(17208): (HTTPLog)-Static: isSBSettingEnabled false
05-31 15:31:15.596: I/HWComposer(702): getActiveConfigs: Attempted to access invalid display -1
05-31 15:31:15.613: I/HWComposer(702): getActiveConfigs: Attempted to access invalid display -1
05-31 15:31:15.643: E/Volley(17208): [1968] BasicNetwork.performRequest: Unexpected response code 400 for https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?alt=proto&key=AIzaSyAoDYMA20kdNy-hROrNp0ofU28Nk6fzT_A
05-31 15:31:15.644: I/AuthChimeraService(17208): Error description received from server: QUOTA_EXCEEDED : Exceeded quota for verifying passwords.
05-31 15:31:15.651: W/FirebaseAuth(17208): [PhoneNumberAuthPostProcessor] postProcess starts
05-31 15:31:15.651: W/FirebaseAuth(17208): [PhoneNumberAuthPostProcessor] postProcess ends
05-31 15:31:15.656: E/propClient(4592): PropClient failed to load
05-31 15:31:15.658: E/AuthUI(3596): A sign-in error occurred.
05-31 15:31:15.658: E/AuthUI(3596): com.google.firebase.FirebaseTooManyRequestsException: The sms quota for this project has been exceeded. [ Exceeded quota for verifying passwords. ]
05-31 15:31:15.658: E/AuthUI(3596): 	at com.google.firebase.auth.api.internal.zzds.zzb(Unknown Source:31)
05-31 15:31:15.658: E/AuthUI(3596): 	at com.google.firebase.auth.api.internal.zzew.zza(Unknown Source:11)
05-31 15:31:15.658: E/AuthUI(3596): 	at com.google.firebase.auth.api.internal.zzeo.zzc(Unknown Source:33)
05-31 15:31:15.658: E/AuthUI(3596): 	at com.google.firebase.auth.api.internal.zzep.onFailure(Unknown Source:49)
05-31 15:31:15.658: E/AuthUI(3596): 	at com.google.firebase.auth.api.internal.zzdy.dispatchTransaction(Unknown Source:18)
05-31 15:31:15.658: E/AuthUI(3596): 	at com.google.android.gms.internal.firebase_auth.zzb.onTransact(Unknown Source:12)
05-31 15:31:15.658: E/AuthUI(3596): 	at android.os.Binder.execTransact(Binder.java:682)
05-31 15:31:15.664: E/propClient(4596): PropClient failed to load
05-31 15:31:15.664: E/propClient(4594): PropClient failed to load
05-31 15:31:15.670: W/WBPasswordHandler(3596): signInWithEmailAndPassword failed.
05-31 15:31:15.670: W/WBPasswordHandler(3596): com.google.firebase.FirebaseTooManyRequestsException: The sms quota for this project has been exceeded. [ Exceeded quota for verifying passwords. ]
05-31 15:31:15.670: W/WBPasswordHandler(3596): 	at com.google.firebase.auth.api.internal.zzds.zzb(Unknown Source:31)
05-31 15:31:15.670: W/WBPasswordHandler(3596): 	at com.google.firebase.auth.api.internal.zzew.zza(Unknown Source:11)
05-31 15:31:15.670: W/WBPasswordHandler(3596): 	at com.google.firebase.auth.api.internal.zzeo.zzc(Unknown Source:33)
05-31 15:31:15.670: W/WBPasswordHandler(3596): 	at com.google.firebase.auth.api.internal.zzep.onFailure(Unknown Source:49)
05-31 15:31:15.670: W/WBPasswordHandler(3596): 	at com.google.firebase.auth.api.internal.zzdy.dispatchTransaction(Unknown Source:18)
05-31 15:31:15.670: W/WBPasswordHandler(3596): 	at com.google.android.gms.internal.firebase_auth.zzb.onTransact(Unknown Source:12)
05-31 15:31:15.670: W/WBPasswordHandler(3596): 	at android.os.Binder.execTransact(Binder.java:682)
05-31 15:31:15.673: E/propClient(4595): PropClient failed to load
05-31 15:31:15.674: E/propClient(4592): PropClient failed to load
05-31 15:31:15.704: E/propClient(4598): PropClient failed to load
05-31 15:31:15.714: I/HWComposer(702): getActiveConfigs: Attempted to access invalid display -1
05-31 15:31:15.721: E/propClient(4601): PropClient failed to load
05-31 15:31:15.723: E/propClient(4600): PropClient failed to load
05-31 15:31:15.730: E/propClient(4599): PropClient failed to load
05-31 15:31:15.730: I/HWComposer(702): getActiveConfigs: Attempted to access invalid display -1
05-31 15:31:15.763: E/propClient(4603): PropClient failed to load
05-31 15:31:15.858: E/propClient(4604): PropClient failed to load
05-31 15:31:15.896: D/ConnectivityService(1398): filterNetworkStateForUid() uid: 10220 networkInfo: [type: WIFI[] - WIFI, state: CONNECTED/CONNECTED, reason: (unspecified), extra: "wl-ftl-mt44-1-5", failover: false, available: true, roaming: false, metered: false]
05-31 15:31:15.902: E/propClient(4605): PropClient failed to load
05-31 15:31:15.904: W/StorageManager(1398): getStorageLowBytes lowPercent : 5, lowBytes : 2803014860, maxLowBytes : 524288000
```

#### Expected Results:

The app signs in successfully using FirebaseUI.
  
#### Relevant Code:

These are the library versions I'm using: 

``` 
// Firebase UI 
implementation("com.firebaseui:firebase-ui-auth:4.2.1") 
implementation("com.facebook.android:facebook-login:4.38.0") 

// Firebase 
implementation("com.google.firebase:firebase-core:16.0.8") 
implementation("com.google.firebase:firebase-messaging:17.6.0") 
implementation("com.google.firebase:firebase-config:16.5.0") 
``` 
<!-- DO NOT DELETE 
validate_template=false
template_path=.github/ISSUE_TEMPLATE.md
-->

Hello, 
This issue is similar to:
Similar to https://github.com/firebase/FirebaseUI-Android/issues/1475

**The problem:**
When enable .enableAnonymousUsersAutoUpgrade() in AuthUI.getInstance().createSignInIntentBuilder(), and after signing in anonymously and then signing with Twitter/Facebook account that does not have an email attached to their accounts, gives an error "Unkown error". However, when signing in anonymously and then signing in with Twitter/Facebook account that has an email attached to them, things work fine. 

It looks like enableAnonymousUsersAutoUpgrade() have an issue when trying to upgrade an anonymous account using Twitter/Facebook account which doesn't have an email attached to them.

**Steps to reproduce:**
1. Sign in anonymously
2. Sign in with Twitter/Facebook account that does not have an email attached their accounts.

**Observed Results:**
07-12 17:14:10.282 10030-10030/com.com2us.pixelgo.android.google.global.normal.pixelbnb E/AuthUI: A sign-in error occurred.
    java.lang.NullPointerException: Email cannot be empty
        at com.firebase.ui.auth.util.data.ProviderUtils.fetchSortedProviders(ProviderUtils.java:191)
        at com.firebase.ui.auth.viewmodel.idp.SocialProviderResponseHandler$1.onFailure(SocialProviderResponseHandler.java:85)
        at com.google.android.gms.tasks.zzl.run(Unknown Source)
        at android.os.Handler.handleCallback(Handler.java:739)
        at android.os.Handler.dispatchMessage(Handler.java:95)
        at android.os.Looper.loop(Looper.java:158)
        at android.app.ActivityThread.main(ActivityThread.java:7224)
        at java.lang.reflect.Method.invoke(Native Method)
        at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1230)
        at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1120)


<img width="924" alt="Screen Shot 2019-07-12 at 5 16 10 PM" src="https://user-images.githubusercontent.com/52842703/61164834-daf12b00-a4cd-11e9-8358-aed23cdda104.png">

Hope someone can help.  Thank you!


<!-- DO NOT DELETE 
validate_template=false
template_path=.github/ISSUE_TEMPLATE.md
-->

### Describe your environment

  * Android device: motorola  Nexus 6
  * Android OS version: 7.1.1
  * Google Play Services version: _____
  * Firebase/Play Services SDK version: 16.0.9
  * FirebaseUI version: 5.0.0
  
### Describe the problem:
I'm using firebase authentication on my android app and recently I got an email regarding significant number of crashes with this stack trace:
Caused by java.lang.NullPointerException: Attempt to read from field 'int com.firebase.ui.auth.a.a.d.c' on a null object reference
       at com.firebase.ui.auth.ui.AppCompatBase.onCreate + 32(AppCompatBase.java:32)
       at com.firebase.ui.auth.ui.email.EmailActivity.onCreate + 72(EmailActivity.java:72)
  
#### Relevant Code:

  ```java
    @NonNull
    public Intent buildSignInIntent() {
        List<AuthUI.IdpConfig> selectedProviders = new ArrayList<>();
        selectedProviders.add(new AuthUI.IdpConfig.EmailBuilder().build());
        selectedProviders.add(new AuthUI.IdpConfig.FacebookBuilder().build());
        selectedProviders.add(new AuthUI.IdpConfig.GoogleBuilder().build());

        AuthUI.SignInIntentBuilder builder = AuthUI.getInstance().createSignInIntentBuilder()
                .setLogo(AuthUI.NO_LOGO)
                .setTheme(R.style.AppTheme)
                .setIsSmartLockEnabled(!BuildConfig.DEBUG /* credentials */, true /* hints */)
                .setAvailableProviders(selectedProviders)
                .enableAnonymousUsersAutoUpgrade();

        AuthMethodPickerLayout customLayout = new AuthMethodPickerLayout
                .Builder(R.layout.fragment_register)
                .setGoogleButtonId(R.id.custom_google_signin_button)
                .setEmailButtonId(R.id.custom_email_signin_button)
                .setFacebookButtonId(R.id.custom_facebook_signin_button)
                .setTosAndPrivacyPolicyId(R.id.custom_tos)
                .build();

        builder.setAuthMethodPickerLayout(customLayout);

        builder.setTosAndPrivacyPolicyUrls(Constants.TermsOfUseLink, Constants.PrivacyPolicyLink);

        return builder.build();
    }
  ```
How could I fix it? Thanks in advance.