- Added framework and test schemes for each supported platform. 
- Made the schemes Shared for Carthage support.
- Deintegrated CocoaPods.
- Added the Kiwi dependency as a git submodule.
- Bumped the pod version.
- Raised the minimum deployment version to 6.0 to support bitcode.
It is a special implementation in some kind.
Many people try to make tons of code in swift in super fast network  / json parsing / DI / etc.

I can't find any appropriate implementation of state machine for objective-c.

This one is the best. ( Or even only one )

I would like to help.

Installing 2.2.1 version with Pod TKStateMachine.h and TKStateMachine.m are different from what I see in Github and dotDescription property is not available. 

Hello, please merge my commit for support events with same name.

- Added dynamic framework targets for OS X and iOS
- Shared and added schemes to repository

Resolves #36

Is there any interest in adding Carthage support?

At a glance, it seems like it should be compatible with TransitionKit's current use of CocoaPods, since it's used only for test targets rather than being a dependency.

As far as I can tell, the changes necessary would be to add a framework target and a shared scheme.

Thanks for the great tool!

Just a simple addition that allows the addition of events using notation.
Example from the README file:

```
[inboxStateMachine addEventWithNotation:@"Deleted->UnDelete->Read"];
```

Which adds an event named 'UnDelete' for transitions from the Deleted state to the Read state.
I found this useful and more visual in my opinion.

The user can comma separate the source states:

```
[inboxStateMachine addEventWithNotation:@"Read,Deleted->Mark as Unread->Read"];
```

Added a few tests to accomodate the new changes.
Hope everything is up to standard.

Cheers,
Hisham

This PR implements a possible solution for the requirement described in #25 . 

The external interface of TKEvent changed slightly (destinationState -> destinationStates), so existing code might break.

We appreciate your feedback.

# Overview

This PR addresses the changes suggested in this [issue](https://github.com/blakewatters/TransitionKit/issues/32) to release a new version of the pod that included the latest commits.

In particular this PR bumps the existing version to `2.2.2`.
# Testing

The cocoapods version used was `0.39.0` as opposed to `0.37.2` used in the previous version (2.2.1)

v2.2.1 was released here https://github.com/blakewatters/TransitionKit/commit/8a07aec66bdfd60341276d075ab2880ff96e17c7

and the PR containing the change on `TKState` merged here https://github.com/blakewatters/TransitionKit/commit/4c4b69ff60c71b3bbbd0c7ac9b4ae9fee6ede096

Are you planning on releasing v2.2.2 with the latest changes added?

Thanks.
