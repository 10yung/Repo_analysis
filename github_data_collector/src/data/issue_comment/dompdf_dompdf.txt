When the PDFLib backend is in use and an element on the page is styled with a border radius the clipping path is rendered incorrectly. This is because the method used to define the clipping path (clipping_roundrectangle) just calls the `clipping_rectangle` method. As a result the path drawn by the non-rounded method does not overlap the path of the container element in a way that results in appropriate clipping.

Example HTML:
```
<div style="width: 200px; height: 200px; border: 10px solid black; border-radius: 50px; background-color: orange;"></div>
```

Output:
![clipping](https://user-images.githubusercontent.com/485897/72674002-95468980-3a3f-11ea-82de-8ebc7e641325.png)

While in the process of upgrading a product to PHP 7.2, we ran into an issue where Adapter/PDFLib::_set_line_style performs a count on $dash. In some cases, $dash is null instead of an empty array.

It appears that this method was called with null because the calling methods have $style defaulted to null in the parameter lists.

I can see two possible solutions to this:
1. Update Adapter/PDFLib::_set_line_style to cast $dash to array:
```
    /**
     * Sets the line style
     *
     * @param float  $width
     * @param        $cap
     * @param string $join
     * @param array  $dash
     *
     * @return void
     */
    protected function _set_line_style($width, $cap, $join, $dash)
    {
+       $dash = (array)$dash;
        if (count($dash) == 1) {
            $dash[] = $dash[0];
        }
```
2. Update the default parameters that cause the null to be empty array:
Four methods in Canvas: line, rectangle, polygon, circle
Ex:
```
- function rectangle($x1, $y1, $w, $h, $color, $width, $style = null)
+ function rectangle($x1, $y1, $w, $h, $color, $width, $style = [])
```
Four methods in Adpater/PDFLIb corresponding to the Canvas methods
Ex:
```
     * @param float $x1
     * @param float $y1
     * @param float $w
     * @param float $h
     * @param array $color
     * @param float $width
-    * @param null  $style
+    * @param array  $style
     */
-  public function rectangle($x1, $y1, $w, $h, $color, $width, $style = null)
+  public function rectangle($x1, $y1, $w, $h, $color, $width, $style = [])
```

Both of these above solutions appear to resolve the issue and I can create a PR with a solution, let me know which is preferred and if you would like me to create the PR.
Is it possible to preset a pdf document to use duplex (both sides of a sheet of paper) printing when creating a PDF with dompdf?

I've seen that in Word docs this presetting parameter is possible, but not sure if it is possible with pdf's....

Tried to ask via stackoverflow but the question was closed as not being a software question.
![pdf print duplex](https://user-images.githubusercontent.com/1445761/72423713-a449e500-377c-11ea-8ba3-d4761f35f5b0.png)

landscape output not returning .always return portrait output only 
Problem: It failed to load custom font from external

Solution: Add write permission to vendor/dompdf/dompdf/lib/fonts directory

Hope this help.
I'm concerned about updates here hindering my ability to upgrade to PHP 7.4 quickly.  The past 2 releases for this package were almost a year apart.  Currently the [milestone for 0.8.4](https://github.com/dompdf/dompdf/milestone/11) contains 45 more open issues.  There's a few issues here related to PHP 7.4 compatibility that releasing sooner rather than later, would add a decent amount of value to the community, allowing folks to proceed with upgrading to PHP 7.4 who don't need to take advantage of the other bug fixes.  Is the team open to shipping a smaller release, containing smaller improvements/fixes?

Warning: "continue" targeting switch is equivalent to "break". Did you mean to use "continue 2"? in /Dompdf6/src/Dompdf.php on line 610

Warning: "continue" targeting switch is equivalent to "break". Did you mean to use "continue 2"? in /Dompdf6/src/Dompdf.php on line 631

Warning: "continue" targeting switch is equivalent to "break". Did you mean to use "continue 2"? in /Dompdf6/lib/Cpdf.php on line 467

Warning: "continue" targeting switch is equivalent to "break". Did you mean to use "continue 2"? in /Dompdf6/lib/Cpdf.php on line 474

Warning: "continue" targeting switch is equivalent to "break". Did you mean to use "continue 2"? in /Dompdf6/lib/Cpdf.php on line 481

Warning: "continue" targeting switch is equivalent to "break". Did you mean to use "continue 2"? in /Dompdf6/lib/Cpdf.php on line 488

Warning: "continue" targeting switch is equivalent to "break". Did you mean to use "continue 2"? in /Dompdf6/src/Css/Stylesheet.php on line 1360
I am developing a wordpress plugin to generate a certificate in pdf using dompdf. I have designed the certificate in html and css and its displaying ok. The problem i have now is generating the pdf as it breaks and does not take into account my css. Below is is my code;

certificate.php

<div id="pf1" class="pf w0 h0" data-page-no="1">
    <div class="pc pc1 w0 h0"><img class="bi x0 y0 w1 h1" alt="" src="<?php echo plugin_dir_url( __FILE__ ) . 'ddc.png'; ?>" />
        <div class="t m0 x1 h2 y1 ff1 fs0 fc0 sc0 ls0 ws0">American Company File Number: 802 818 691</div>
        <div class="t m1 x2 h3 y2 ff2 fs1 fc1 sc0 ls1 ws0">TRAINING CERTIFICATE</div>
        <div class="t m0 x3 h2 y3 ff1 fs0 fc0 sc0 ls0 ws1">2425 West Loop South (suite 200), Houston, Texas 77027, USA
        </div>

preview_certificate.php

add_action( 'admin_print_styles', 'custom_css_files' );

// Load css files for the various certificates

function custom_css_files(){
    $a = get_form_values();
    $training_course_name = $a[training_course_name];
if(($_GET["page"] == "preview_certificate") && ("DEFENSIVE DRIVING" == $training_course_name))
    {
	wp_enqueue_style( 'certificates_stylesheet_ddc1');
	wp_enqueue_style( 'certificates_stylesheet_ddc2'); 
	wp_enqueue_style( 'certificates_stylesheet_ddc3');
	
	}
}

// generate certificate


require_once 'dompdf/autoload.inc.php';

require_once 'dompdf/lib/html5lib/Parser.php';
require_once 'dompdf/lib/php-font-lib/src/FontLib/Autoloader.php';
require_once 'dompdf/lib/php-svg-lib/src/autoload.php';
require_once 'dompdf/src/Autoloader.php';
Dompdf\Autoloader::register();

 use Dompdf\Dompdf;

function generate_certificate($training_course_name,$card_delegate_name)
{
	
global $dompdf;

// instantiate and use the dompdf class
 
$dompdf = new Dompdf(array('enable_remote' => true));

  if(("T-HUET" == $training_course_name))
    {

    include "certificates/thuet/thuet.php";
  
    }

$dompdf->loadHtml($certificate_preview);

// (Optional) Setup the paper size and orientation
$dompdf->setPaper('A4', 'portrait');

// Render the HTML as PDF
$dompdf->render();

// Output the generated PDF to Browser
ob_end_clean();
echo $dompdf->stream($card_delegate_name, array("Attachment" => true));
}

Please this is just extract from my code good enough to understand what i have done. Its not complete. Any help will be appreciated


I have tried installing dompdf on laragon windows, it is already running normally.

this is my localhost specification

- Laragon php 7.2.19
- normal phpmodule by laragon
- install dompdf 0.8.3 using composer

Then I moved all my projects to vps, and dompdf could not be run when I open it it says 404

this is my VPS specification

- Centos7
- Apache
- php 7.2.25

I tried installing the dom and mbstring modules, but it still doesn't work

is this wrong about the settings in my codeigniter (but I run locally its fine) or php on my vps that has problems

Please help

Getting following warning while using DOMPDF for Drupal print module:

> Warning: Use of undefined constant DOMPDF_DIR - assumed 'DOMPDF_DIR' (this will throw an Error in a future version of PHP) in require_once() (line 22 of ... /dompdf/include/autoload.inc.php).