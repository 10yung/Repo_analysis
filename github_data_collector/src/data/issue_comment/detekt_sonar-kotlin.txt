The following error occur when i try to build something:

> io.gitlab.arturbosch.detekt.sonar.jacoco.KotlinJaCoCoSensor has unsatisfied dependency 'interface org.sonar.plugins.java.api.JavaResourceLocator' for constructor 'public io.gitlab.arturbosch.detekt.sonar.jacoco.KotlinJaCoCoSensor(org.sonar.api.batch.fs.FileSystem,org.sonar.plugins.java.api.JavaResourceLocator,org.sonar.java.JavaClasspath)' from org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer@3a62c01e:133<[Immutable]:org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer@125290e5:213<[Immutable]:org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer@15a34df2:7<[Immutable]:org.sonar.core.platform.ComponentContainer$ExtendedDefaultPicoContainer@70f43b45:30<|
Does the Jacoco support in SonarQube 5.6.4 for a multi module & multi language project. I am trying to get it work but no luck. 

Issues

1. No coverage reported for kotlin code. 
2. Not counting the number of tests written in kotlin.

Is there a n example available to refer?

Hello,
I was in a discussion with SonarSource and they said that the individual contributor of the Community plugins have to request for the their plugin to be included in the Update Center on SonarQube.

As we use an enterprise edition of SonarQube, by policy we use only official plugins on our SonarQube instance. We've had a lot of requests to support kotlin on our instance, so could you please let us know if you have any plans to make it available on the update center?

Regards,
Vismay
We have following project structure:

```
app
modules/module1
modules/module2
detekt.yaml
```

Setting `/detekt.yaml` as configuration path in Sonar/Kotlin/Detekt results in following error:

```
Provided path '/â€¦/ca4c5a47ac213f623228/modules/detekt.yaml' does not exist
```

Because `tryFindDetektConfigurationFile` looks for file in module directory, then if not found looks on directory above which doesn't work if module is nested deeper.

https://github.com/arturbosch/sonar-kotlin/blob/30125207e3c45142d0f89b2515c8174fd80204a6/src/main/kotlin/io/gitlab/arturbosch/detekt/sonar/sensor/DetektConfiguration.kt#L49-L67

Ideal solution would be to support "absolute" path that starts with `/` and do something like:

```kotlin
if (path.startsWith("/")) {
  configFile = File(rootProjectPath, path)
} else {
  configFile = File(baseDir, path)
}
```

Where `rootProjectPath` is absolute path to the root of the project.
Hi.
I'm using sonar-kotlin plugin from master branch, and I can't see the jacoco report.
This is my gradle configuration

```
 property "sonar.projectKey", "project-android"
        property "sonar.projectName", "project-android"
        property "sonar.projectVersion", "1.0"
        property "sonar.java.sources", "src/main/java"
        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "${project.buildDir}/intermediates/classes/dev1/debug/<package>"
        property "sonar.java.binaries", "${project.buildDir}/intermediates/classes/dev1/<package>,{project.buildDir}/tmp/kotlin-classes/dev1DebugUnitTest/<package> "
        property "sonar.java.test.binaries", "${project.buildDir}/intermediates/classes/test/dev1/debug/<package>,${project.buildDir}/tmp/kotlin-classes/dev1DebugUnitTest/<package> "
        property "sonar.tests", "src/test/java, src/test/kotlin, src/androidTest/java"
        property "sonar.java.coveragePlugin", "jacoco"
        property 'sonar.junit.reportsPath', "${project.buildDir}/test-results/testDev1DebugUnitTest"
        property "sonar.jacoco.reportPaths", "${project.buildDir}/jacoco/testDev1DebugUnitTest.exec"
        property "sonar.jacoco.itReportPaths", "${project.buildDir}/jacoco/mergeDev1DebugCoverageReports.exec"
        property "sonar.android.lint.report", "build/outputs/lint-results.xml"

```

And I'm receiving this output:

```
Missing blame information for the following files:
  * /Users/StudioProjects/project-android/app/src/test/kotlin/<package>/Test1.kt
  * /Users/StudioProjects/project-android/app/src/test/kotlin/<package>/Test2.kt
  * /Users/StudioProjects/project-android/app/src/test/java/<package>/Test3.java
 ...
This may lead to missing/broken features in SonarQube
Analyzing 20 kotlin files: 
Resource not found: <package>.*******Test
Resource not found: <package>.*******Test
Resource not found: <package>.*******Test
Resource not found: <package>.*******Test
Resource not found: <package>.*******Test

```
I'm running these tasks
`./gradlew testDev1DebugUnitTest kaptDev1DebugUnitTestKotlin dev1DebugUnitTestCoverage
`
and after "push" the reports to sonar, I'm receiving empty code coverage 
https://docs.sonarqube.org/display/SONAR/Update+Center