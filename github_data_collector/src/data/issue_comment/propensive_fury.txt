This should test whether the latest version of Bloop works now.
BSP traces are very useful for debugging, but writing them all the time (as older versions used to do) is an overkill. I think a good middle ground would be writing the trace to a user-defined output file when a special flag is present.


## Steps to reproduce

1. Start Fury as a Nailgun daemon.
1. Compile `fury/frontend`
1. Introduce a compilation error in one of the modules on which `fury/frontend` depends, e. g. `fury/compile`.
1. Recompile `fury/frontend`. Observe the incomplete graph and a build diagnostic message (or multiple messages)
1. Restore the incorrect code to the state _exactly_ as before the error was introduced.
1. Recompile `fury/frontend`. Observe the _complete graph_ and zero exit code despite the diagnostic messages.

## Notes
* The spurious diagnostic messages don't appear if the fixed code has differences (e. g. in variable names) from the original code.
* The spurious notification [`build/publishDiagnostics`](https://github.com/build-server-protocol/build-server-protocol/blob/master/docs/specification.md#publish-diagnostics), which signals compilation errors, contains the lines of code as they appeared before the error has been fixed.
    * However, this is not the same notification that might have been cached anywhere inside Fury; it is a new notification sent by the build server, which contains outdated information.
    * This doesn't prevent the server to compile the corrected code successfully.
* This also happens in the watch mode, as automatic recompilation is triggered.
* This issue is one of possibly multiple causes that constitute #883.

We don't get dependency suggestions from projects in imported layers any more.
None
We should support configuration of packaging for JAR files, which sits "on top of" the graph of modules.
