When deleting fake directories that tools like Hadoop create, this tool ends up deleting the entire directory even if not empty... See this https://issues.apache.org/jira/browse/HADOOP-13230 

For example, if I have:
test_run123/foo.bar

and the hadoop-aws code tries to delete the "fake" directory test_run123/ it ends up deleting foo.bar. The real S3 SDK leaves the foo.bar file alone, and only tries to delete the "fake" directory, which should be expected behavior for this tool.




Is this project using continuous integration services (e.g., Travis-CI or Jenkings)? Or has it used at any point of its lifetime?
I faced this issue when I tried to create bucket from ansible. This is provision.yml ansible playbook.
```
---
- hosts: remote_server
  gather_facts: false
  become: yes
  environment: "{{ env_params }}"
  vars_files:
    - vars/main.yml
  tasks:
    - s3_bucket:
        name: s3backup
        s3_url: http://s3.amazonaws.com:4567

```
It created bucket but resulted `Bucket request payment failed to apply in the expected time` error. I saw multiple requests like this in fakes3 console:
```
localhost - - [11/Dec/2018:00:37:59 EST] "GET / HTTP/1.1" 200 303                                                                                                                                                                                                              
- -> /                                                                                                                                                                                                                                                                         
localhost - - [11/Dec/2018:00:37:59 EST] "PUT /s3backup HTTP/1.1" 200 0                                                                                                                                                                                                        
- -> /s3backup                                                                                                                                                                                                                                                                 
localhost - - [11/Dec/2018:00:37:59 EST] "HEAD /s3backup HTTP/1.1" 200 0                                                                                                                                                                                                       
- -> /s3backup                                                                                                                                                                                                                                                                 
localhost - - [11/Dec/2018:00:37:59 EST] "GET /s3backup?versioning HTTP/1.1" 200 217                                                                                                                                                                                           
- -> /s3backup?versioning                                                                                                                                                                                                                                                      
localhost - - [11/Dec/2018:00:37:59 EST] "GET /s3backup?requestPayment HTTP/1.1" 200 217                                                                                                                                                                                       
- -> /s3backup?requestPayment                                                                                                                                                                                                                                                  
localhost - - [11/Dec/2018:00:38:00 EST] "PUT /s3backup?requestPayment HTTP/1.1" 200 0                                                                                                                                                                                         
- -> /s3backup?requestPayment                                                                                                                                                                                                                                                  
localhost - - [11/Dec/2018:00:38:00 EST] "GET /s3backup?requestPayment HTTP/1.1" 200 217                                                                                                                                                                                       
- -> /s3backup?requestPayment                                                                                                                                                                                                                                                  
localhost - - [11/Dec/2018:00:38:05 EST] "GET /s3backup?requestPayment HTTP/1.1" 200 217                                                                                                                                                                                       
- -> /s3backup?requestPayment                                                                                                                                                      
localhost - - [11/Dec/2018:00:38:10 EST] "GET /s3backup?requestPayment HTTP/1.1" 200 217                                                                                           
- -> /s3backup?requestPayment                                                                                                                                                      
localhost - - [11/Dec/2018:00:38:15 EST] "GET /s3backup?requestPayment HTTP/1.1" 200 217                                                                                           
- -> /s3backup?requestPayment                                                                                                                                                      
localhost - - [11/Dec/2018:00:38:20 EST] "GET /s3backup?requestPayment HTTP/1.1" 200 217                                                                                           
- -> /s3backup?requestPayment                                                                                                                                                                                                                                           
...
```
Ansible sent more than 20 times this request and time was out. So it would be better if fakes3 supports this request.
Here is the doc about this request https://docs.aws.amazon.com/AmazonS3/latest/API/RESTrequestPaymentGET.html
Love this library... great work!

Minor issue, but when submitting a part in a multipart upload the error is not very descriptive when using 0 as PartNumber. It took me a while to figure out that I was indexing with 0 instead of 1 PartNumber. 

### To Reproduce 

1. Create a multipart upload 
2. Submit a part with PartNumber 0

### Result

This will succeed. It should give an error saying you can't upload a part with a PartNumber of 0.

### Sample response from S3
Here's the response I get from S3. 
```xml
<?xml version="1.0" encoding="UTF-8"?>
<Error>
    <Code>InvalidArgument</Code>
    <Message>Part number must be an integer between 1 and 10000, inclusive</Message>
    <ArgumentName>partNumber</ArgumentName>
    <ArgumentValue>0</ArgumentValue>
    <RequestId>[RequestIdHere]</RequestId>
    <HostId>[HostIdHere]</HostId>
</Error>
```
Error: X-Amz-Content-Sha256 is not allowed
With: Latest aws-sdk-js (doing client side uploads)

I was running a containerized image for demo purposes and got 'X-Amz-Content-Sha256 is not allowed' on requests.

Latest master has support for setting CORS headers but it is unreleased. This actually helps but I needed to make my own image to be able to use it.
So until this gets released or fixed you can use my image to pass CORS headers (not really production grade because it takes fake-s3 from master)

https://hub.docker.com/r/mrister/fake-s3/
https://github.com/mrister/fake-s3

Getting below exception in one of the project whereas it works perfectly fine in other.
Dont have ANY idea what seems wrong here.. Does AWS SDK version matter.. **The project where it works is having aws-java-sdk-s3-1.11.63 and where it doesnt is having aws-java-sdk-s3-1.10.72**.


 require at org/jruby/RubyKernel.java:956
  require at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb:55
   <main> at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/openssl.rb:1
  require at org/jruby/RubyKernel.java:956
  require at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb:55
   <main> at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/webrick/ssl.rb:1
  require at org/jruby/RubyKernel.java:956
  require at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb:55
   <main> at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/webrick/ssl.rb:10
  require at org/jruby/RubyKernel.java:956
  require at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb:55
   <main> at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/webrick/https.rb:1
  require at org/jruby/RubyKernel.java:956
   (root) at uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/webrick/https.rb:12
   <main> at uri:classloader:/gems/fakes3-0.2.4/lib/fakes3/server.rb:1
Disconnected from the target VM, address: '127.0.0.1:56475', transport: 'socket'

org.jruby.embed.EvalFailedException: (LoadError) load error: jopenssl/load -- java.lang.IncompatibleClassChangeError: Implementing class

	at org.jruby.embed.internal.EmbedEvalUnitImpl.run(EmbedEvalUnitImpl.java:131)
	at org.jruby.embed.ScriptingContainer.runUnit(ScriptingContainer.java:1307)
	at org.jruby.embed.ScriptingContainer.runScriptlet(ScriptingContainer.java:1352)
	at com.elsevier.smd.s3.LocalS3.<init>(LocalS3.java:29)
	at com.elsevier.smd.junit.rules.s3.LocalS3Statement.evaluate(LocalS3Statement.java:18)
	at com.elsevier.smd.junit.rules.ClassAndMethodRuleCheckingStatement.evaluate(ClassAndMethodRuleCheckingStatement.java:80)
	at org.junit.rules.RunRules.evaluate(RunRules.java:20)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.junit.runner.JUnitCore.run(JUnitCore.java:137)
	at com.intellij.junit4.JUnit4IdeaTestRunner.startRunnerWithArgs(JUnit4IdeaTestRunner.java:68)
	at com.intellij.rt.execution.junit.IdeaTestRunner$Repeater.startRunnerWithArgs(IdeaTestRunner.java:47)
	at com.intellij.rt.execution.junit.JUnitStarter.prepareStreamsAndStart(JUnitStarter.java:242)
	at com.intellij.rt.execution.junit.JUnitStarter.main(JUnitStarter.java:70)
Caused by: org.jruby.exceptions.RaiseException: (LoadError) load error: jopenssl/load -- java.lang.IncompatibleClassChangeError: Implementing class
	at org.jruby.RubyKernel.require(org/jruby/RubyKernel.java:956)
	at uri_3a_classloader_3a_.META_minus_INF.jruby_dot_home.lib.ruby.stdlib.rubygems.core_ext.kernel_require.require(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb:55)
	at RUBY.<main>(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/openssl.rb:1)
	at org.jruby.RubyKernel.require(org/jruby/RubyKernel.java:956)
	at uri_3a_classloader_3a_.META_minus_INF.jruby_dot_home.lib.ruby.stdlib.rubygems.core_ext.kernel_require.require(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb:55)
	at RUBY.<main>(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/webrick/ssl.rb:1)
	at org.jruby.RubyKernel.require(org/jruby/RubyKernel.java:956)
	at uri_3a_classloader_3a_.META_minus_INF.jruby_dot_home.lib.ruby.stdlib.rubygems.core_ext.kernel_require.require(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb:55)
	at RUBY.<main>(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/webrick/ssl.rb:10)
	at org.jruby.RubyKernel.require(org/jruby/RubyKernel.java:956)
	at uri_3a_classloader_3a_.META_minus_INF.jruby_dot_home.lib.ruby.stdlib.rubygems.core_ext.kernel_require.require(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/rubygems/core_ext/kernel_require.rb:55)
	at RUBY.<main>(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/webrick/https.rb:1)
	at org.jruby.RubyKernel.require(org/jruby/RubyKernel.java:956)
	at RUBY.(root)(uri:classloader:/META-INF/jruby.home/lib/ruby/stdlib/webrick/https.rb:12)
	at RUBY.<main>(uri:classloader:/gems/fakes3-0.2.4/lib/fakes3/server.rb:1)


Test ignored.

On S3 when using paginatior to list files if you pass the prefix key but a blank value you get back the contents key in the response however on fake s3 if you do the same you get a common prefix key in the response and no contents.
Hello, 
I have FakeS3 setup on Ubuntu 14.04 LTS 64 bit

I have an S3 application developed using the AWS S3 C++ API.  Using this application I am able to successfully upload files to S3 but I'm now getting to the point where I'd like to test with some REALLY big files.  For cost (and time) reasons I'd like to use FakeS3.

I am starting FakeS3 on the ubuntu box using these arguments:
`fakes2 -r /home/dev/fakes3_root/ -p 4567 -H fakes3.local`

I am able to upload successfully to S3 a 16MB and a 500MB file.  Each of these uploads uses the S3 multipart API and succeeds.  When I switch to FakeS3 the 16MB file uploads successfully but FakeS3 appears to fail with the 500MB file.  For info: the parts are uploaded in 5MB blocks.

Here's the output from S3 when it appears to go wrong.  Any help appreciated.
[create_500MB_object.txt](https://github.com/jubos/fake-s3/files/1803038/create_500MB_object.txt)

Also works with a 100MB, and a 201MB file.  Fails with 301MB file.
Regards,
Paul


I am running a Vagrant VM with Ubuntu 16.04 and I have set up fake-s3 in there. It's running per the default description in the readme. Then I run a simple bash script that runs a curl command that sends a .conf file to the fake-s3 storage.

In doing that, I get the following error:

```
[2018-03-11 15:28:39] ERROR NoMethodError: undefined method `gsub' for nil:NilClass
        /var/lib/gems/2.3.0/gems/fakes3-1.2.1/lib/fakes3/server.rb:290:in `do_POST'
        /usr/lib/ruby/2.3.0/webrick/httpservlet/abstract.rb:107:in `service'
        /usr/lib/ruby/2.3.0/webrick/httpserver.rb:140:in `service'
        /usr/lib/ruby/2.3.0/webrick/httpserver.rb:96:in `run'
        /usr/lib/ruby/2.3.0/webrick/server.rb:296:in `block in start_thread'

```
My bash script does not even use the `gsub` command anywhere in it. Can anyone help me figure this out?

When running fakes3, I got below error

$fakes3
/usr/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `gem_original_require': /usr/lib/ruby/gems/1.8/gems/fakes3-1.2.1/lib/fakes3/cli.rb:57: syntax error, unexpected ':', expecting ')' (SyntaxError)
...cert_path,ssl_key_path, quiet: !!options[:quiet])
                              ^
/usr/lib/ruby/gems/1.8/gems/fakes3-1.2.1/lib/fakes3/cli.rb:57: syntax error, unexpected ')', expecting kEND
        from /usr/lib/ruby/site_ruby/1.8/rubygems/custom_require.rb:31:in `require'
        from /usr/lib/ruby/gems/1.8/gems/fakes3-1.2.1/bin/fakes3:5
        from /usr/bin/fakes3:19:in `load'
        from /usr/bin/fakes3:19

Same as running

fakes3 -r /mnt/fakes3_root -p 4567

Is there a work around? Thanks.