Hi all,

Having run into some issues with using Scanner to read files within the Browser.FS filesystem, I've tried the following on your demo page just to confirm it's not something in my project:

import java.util.Scanner;
import java.io.File;

public class FileTest {
  public static void main(String[] args) throws Exception {
    File f = new File("test.txt");
    Scanner fr = new Scanner(f);
    System.out.println("About to try to read...");
    while (fr.hasNextLine())
    {
        System.out.println(fr.nextLine());
    }
  }
}

I get the same symptoms as in my own project that uses Doppio; the Scanner is instantiated seemingly without incident, but the moment one tries to do anything that involves reading the file, execution seems to hang. It fails silently in that the browser does not block and no console errors are generated.

Attempting a similar simple line-by-line read from a test file using BufferedReader(new FileReader(FILENAME)) works fine - so there seems to be something causing problems in the interaction between Scanner and the Browser.FS-based filesystem.

Have hacked around it for now by using an alternate version of Scanner - see http://nifty.stanford.edu/2006/reges-anagrams/ - but the year on that says it all! Would be nice if the "real" Scanner could be made to work...
I'm following the instructions in readme file to set up a simple project. But JVM filed to initialize. From network log, the last file loaded was rt.jar. All files have been downloaded successfully.

```
    at Object.assert [as default] (assert.ts:8)
    at ConstantPool.parse (ConstantPool.ts:1324)
    at new ReferenceClassData (ClassData.ts:830)
    at BootstrapClassLoader.ClassLoader.defineClass (ClassLoader.ts:129)
    at ClassLoader.ts:469
    at processItem (util.ts:129)
    at ClassLoader.ts:464
    at file_system.ts:750
    at NoSyncFile.close (preload_file.ts:402)
    at cb (file_system.ts:746)
```
Hi,

I using @ng-idle/core for Sessiontimeout. Is there any way to reset the time in angular itself.

Thanks..
Related to #509

Majority of Java usage right now is on the server-side, as a backend. Also having an applet-like app is -although great technical wise- not amazing from user experience point of view.

I'm trying to experiment something on this side, which is running a backend server using doppio, and use an iframe in the browser to interact with it. But I'm failing and running out of ideas. Thus I need some help :)

What I'm trying to do? Getting a [minimal embedded jetty server](https://wiki.eclipse.org/Jetty/Tutorial/Jetty_HelloWorld) into a jar file to run in doppio. It's not working properly but still if it works then it's going nowhere.

It will theoretically open port 8080 on the host machine and listen for connection. But the host is a browser and it does not understand what is listening to port 8080.
I'm trying to fake it to make the process locate the iframe instead and interact with it. In the previous example, that iframe can be as simple as a blank page pointing to `localhost:8080` and the end result will be getting `<h1>Hello World</h1>` in it.
This is rather a discussion than a bug, putting my thoughts here since I couldn't find a discussion list.

Correct me if I'm wrong but right now Doppio can be used only through CLI in some kind of emulated terminal. I saw a 5 years old branch for graphics that never progressed too far.
I don't have much experience in this, but I can imagine that best way to get Graphics to work is to dump all the pixels into some kind of HTML Canvas. It will then work similar to an Applet, with major exception that the VM is built-in rather than required by the user.

Has this been considered before, and research results?

PrintService[] printServices = PrintServiceLookup.lookupPrintServices(null, null);
 System.out.println("Number of print services: " + printServices.length);
 for (PrintService printer : printServices) {
        System.out.println("Printer: " + printer.getName());
}
While Executing the above code the doppio through the following Exception.

java.lang.UnsatisfiedLinkError: Native method 'sun.print.CUPSPrinter.initIDs()Z' not implemented.
1).  Uploaded a simple GUI game:

/home $ java -jar Oblotteration.jar
Exception in thread "main" java.lang.ClassNotFoundException: LOblotteration ;
at java.lang.Class.forName0(Native Method)
at java.lang.Class.forName(Class.java:348)
at doppio.JarLauncher.main(JarLauncher.java:32)

Not sure whats wrong, Oblotteration.jar runs perfectly on Linux, Windows, and Mac OS.
Nothing in my code uses / references "LOblotteration", so don't understand this error message.


2). Also tried to run the Fib example suggested:

/home $ javac classes/demo/Fib.java
Please be patient; this command may need to download resources from the network.
classes/demo/Fib.java:4: error: cannot access String
  public static void main(String[] args) {
                          ^
  bad class file: /home/vendor/java_home/lib/rt.jar(java/lang/String.class)
    unable to access file: Error: EIO: null
    Please remove or make sure it appears in the correct subdirectory of the cla
sspath.
Compiler failed.


3).  Uploaded a a ProGuarded Lottery Number Selector GUI app and it did nothing - no errors, nothing.
java -jar LotteryNumberSelector_proguard.jar
and it just returned to the command line - no GUI, no errors, nothing.


What are the limitations on the JARs I can upload / run in a browser ?
Can they use / include other JARs ?  e.g. can I upload apps that connect to SQL Server (requires an extra jar: sqljdbc42.jar) ?

Keep up the great work.  Very exciting project !

Moose

Some of the APIs used in the examples will be removed in v2.0. Also, the newer API greatly simplifies file system setup!
Failed to run provided example (Mac, node 6.11.2)

% ../../doppio -cp example example.App


Encountered error: TypeError: Cannot read property 'getLoader' of undefined
TypeError: Cannot read property 'getLoader' of undefined
    at a.getLoader (/Volumes/Unix/workspace/doppio/src/threading.ts:709:49)
    at a.throwNewException (/Volumes/Unix/workspace/doppio/src/threading.ts:1159:44)
    at b.a.throwClassNotFoundException (/Volumes/Unix/workspace/doppio/src/ClassLoader.ts:341:12)
    at a.cb (/Volumes/Unix/workspace/doppio/src/ClassLoader.ts:554:14)
    at a.run (/Volumes/Unix/workspace/doppio/src/threading.ts:552:12)
    at a.run (/Volumes/Unix/workspace/doppio/src/threading.ts:851:12)
    at Immediate.<anonymous> (/Volumes/Unix/workspace/doppio/src/threadpool.ts:84:16)
    at runCallback (timers.js:672:20)
    at tryOnImmediate (timers.js:645:5)
    at processImmediate [as _immediateCallback] (timers.js:617:5)

Hello,
I followed the instructions to put Doppio inside a web page, but I wasn't able to run a jar in a web page: I get a blank page.

I attach my project (I omit java_home content because it's too big): what's wrong?
[myapp.zip](https://github.com/plasma-umass/doppio/files/1210017/myapp.zip)

Thank you very much for any help.

P.S.: Does the browser have to load all the java_home content (97 MB)? If it's so, I figure that it cannot be used in real world use cases.