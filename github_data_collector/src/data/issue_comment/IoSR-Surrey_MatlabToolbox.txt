When kernelDensity interpolation fails, it is because all values in y are the same. In such cases, it is desired to have maximum possible horizontal spread of samples in the scatter (as it would have if all but one value in y are the same, or values in y are close together). Thus, maxDisplacement should be 1, not 0, in the catch clause.

Fixes #14
The showScatter option should create a scatter plot of the underlying data for each box overlayed on the plot. The data should have a random x-axis offset with respect to the box centre. However, all data points with value 0 do not get such a random offset, or all get the same offset.
In any case they look like a single dot.
Hello,
this is a great toolbox and is liked the styling and the customization of the boxplots. However, I stumbled upon a bug in the calculation of the median. This script and the corresponding figure should clarify this issue:

`data = [1 1 1 2 4 6 7];`

`figure`
`subplot( 1, 2, 1 )`
`b = iosr.statistics.boxPlot( data' );`
`title( {'IoSR-Surrey'; ...`
`        'Matlab Toolbox'; ...`
 `      ['Median = ' num2str(b.statistics.median)]} )`

`subplot( 1, 2, 2 )`
`boxplot(data');`
`title( {'MatLab R2018b'; ...`
`        'Statistics and Machine Learning Toolbox'; ...`
`       ['Median = ' num2str(median(data))]} )`

![iosrBug](https://user-images.githubusercontent.com/43955862/66431182-cc0e0c00-ea1b-11e9-8e25-7b2dcd6e1d41.png)

Hopefully this bug can be easily fixed.
I have a boxplot as follows:

ax=iosr.statistics.boxPlot(y,'showLegend',true);

ax.handles.legend.FontSize=10; %This line doesn't work even after changing it.

I even tried going into the function and adding
set(obj.handles.legend,'FontSize',16); % in line 1977 (where the legend is created)

but all this does is make the legend box bigger, not the font..
Modified description.