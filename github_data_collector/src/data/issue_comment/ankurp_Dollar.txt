In order to use Swift Package Manager to add Dollar as a dependency in Xcode 11, the `Package.swift` file must specify at least one target.

This PR updates Package.swift to add Dollar as a target.
## What
I install Dollar through Carthage. Run and build are fine.
But when distribute to itunes connect. It throws this error:
```
ERROR ITMS-90056: "This bundle Payload/XXX.app/Frameworks/Dollar.framework is invalid. The Info.plist file is missing the required key: CFBundleVersion. Please find more information about CFBundleVersion at https://developer.apple.com/documentation/bundleresources/information_property_list/cfbundleversion"
```

![Screenshot 2019-08-07 at 11 03 56 AM](https://user-images.githubusercontent.com/42597220/62593493-7e84fe00-b909-11e9-8c84-e7a670074360.png)

   
````swift
func fullfill(element: Any, count: Int) {
}

let a = [1, 2, 3, 4]
a.fullfill(0, 2) // [1, 2, 3, 4, 0, 0]

````

`fullfill` will extend the array with several numbers of elements.

    
For example I cannot currently do this:

`$.omit(myDictionary, keys: ["one", "two", "three"])`

But must instead do this:

`$.omit(myDictionary, keys: "one", "two", "three")`

For lots of design paradigms (e.g. my blacklisted set of keys is shared and represented as an array, or I've derived the list of keys from an API and don't have them as individual values), this is frustrating.

[This thread](http://stackoverflow.com/questions/24024376/passing-an-array-to-a-function-with-variable-number-of-args-in-swift) indicates that there is no language-specific way to pass an array into a variadic parameter. Thus I think `$` should support this (the variadic versions can call into the array versions)
