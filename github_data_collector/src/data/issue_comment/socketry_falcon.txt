I'm on macOS Mojave and use the latest Falcon and I'm not sure what's exactly causing the connections but I'm getting this error

```
 6m54s    error: #<Async::Task:0x1bddc incoming connection #<Addrinfo: [::1]:52103 TCP> [fd=26] (failed)> [pid=24051] [2020-01-15 16:21:41 +0100]
               |   NoMethodError: undefined method `headers' for nil:NilClass
               |   â†’ ~/.gem/ruby/2.7.0/gems/protocol-http-0.13.0/lib/protocol/http/content_encoding.rb:47 in `call'
               |     ~/.gem/ruby/2.7.0/gems/protocol-http-0.13.0/lib/protocol/http/middleware.rb:40 in `call'
               |     ~/.gem/ruby/2.7.0/gems/async-http-0.50.0/lib/async/http/server.rb:64 in `block in accept'
               |     ~/.gem/ruby/2.7.0/gems/async-http-0.50.0/lib/async/http/protocol/http1/server.rb:58 in `each'
               |     ~/.gem/ruby/2.7.0/gems/async-http-0.50.0/lib/async/http/server.rb:53 in `accept'
               |     ~/.gem/ruby/2.7.0/gems/async-io-1.27.1/lib/async/io/socket.rb:99 in `block in accept_each'
               |     ~/.gem/ruby/2.7.0/gems/async-io-1.27.1/lib/async/io/socket.rb:137 in `block in accept'
               |     ~/.gem/ruby/2.7.0/gems/async-1.24.1/lib/async/task.rb:256 in `block in make_fiber'
```

I guess this would not have happened :)
There is a nice explanation here: https://superuser.com/questions/1492207/neterr-cert-revoked-in-chrome-chromium-introduced-with-macos-catalina
Obviously Falcon is generating a self-signed certificate valid for 10 years which is much more than 825 days. Maybe something else is wrong and should be fixed.
https://github.com/rack/rack/issues/1374
in case of running rack application `env['rack.input']` is a `Falcon::Adapters::Input` with body `Protocol::HTTP1::Body::Fixed` which has `#empty?` method.
Since body is not rewindable it's the only way to define if it has content or not.

this issue related to problem in general
https://github.com/rack/rack/issues/1148

this issue related to specific problem when using `falcon` `sinja` gems together
https://github.com/mwpastore/sinja/issues/19

not sure if it works correctly with http2 or not
I'm trying to use falcon on production in one app that I'm creating. Now I'm blind of logs, I don't know what happen when I run the app it don't show any logs of requests only the database interactions.

I'm running my app using `foreman` with the command `falcon serve -b http://0.0.0.0:9292`. Everything is running on a container. I didn't change anything on the `config/enviroment/production.rb` it's running all the rails default.

Can someone help me with this?
In investigating #86 I encountered a second issue, whereby any headers after one we send which is in caps with underscores were being dropped.

Firstly, I know its not really compliant with de-facto HTTP standards, where all headers are capitalised with dashes between them, but it is a thing that exists and I can't find anything in the HTTP standard which explicitly says it isn't supported.

I'm quite happy to resolve this issue myself if you can give a pointer to either the right place (in which case I'll submit a PR), or the HTTP standard that says it shouldn't be supported (in which case I'll go away and fix our code).
This is an attempt to resolve #86
We're attempting to migrate our Heroku hosted application to Falcon, but hitting an issue where `rack.url_scheme` in the request environment seems to be incorrectly set to `http` rather than `https` - this causes all requests to be intercepted by some middleware and throws us into an infinite loop of responses with a 307 status code redirecting to the SSL version of the URL.

The attached screenshot shows the interpreted protocol - the purple line indicates HTTPS, while the orange one is HTTP. As you can see when we deployed Falcon into our staging environment the protocol switched for all requests, and then returns to HTTPS when we deploy with Puma instead.

![Screenshot](https://user-images.githubusercontent.com/362/68605602-9b9b1100-04a4-11ea-8c19-6f150c63ce70.png)

Monitoring is being done via Honeycomb, using their [rack-honeycomb](https://github.com/honeycombio/rack-honeycomb) gem - the specific line in question can be found [here](https://github.com/honeycombio/rack-honeycomb/blob/d99397c142ba081a13b718863efae8ddfad06052/lib/rack/honeycomb/middleware.rb#L119), which indicates somewhere in Falcon's HTTP stack the URL scheme is not being set.
Rack [PR 1181](https://github.com/rack/rack/pull/1181) merged 20 days ago.
GitHub was rendering as a tab spaced ruby code, with this change is a real two space ruby class :D