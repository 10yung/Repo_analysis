| Q                   | A
| ------------------- | -----
| Bug report?         | yes
| Feature request?    | yes
| Swoft version       | 2.0.8
| Swoole version      | x.y.z 
| PHP version         | 7.3.1 
| Runtime environment | Mac

**Describe the bug**
2020/01/18-17:25:57 [INFO] Swoft\Processor\EnvProcessor:handle(60) Env file(/Users/mazheng/Documents/Projects/PhpProjects/swoft/.env) is loaded
PHP Fatal error:  Declaration of App\Validator\Rule\AlphaDashRule::validate(array $data, string $propertyName, $item, $default = NULL): array must be compatible with Swoft\Validator\Contract\RuleInterface::validate(array $data, string $propertyName, $item, $default = NULL, $strict = false): array in /Users/mazheng/Documents/Projects/PhpProjects/swoft/app/Validator/Rule/AlphaDashRule.php on line 23

**Expected behavior**
框架无法运行

**Screenshots**
If applicable, add screenshots to help explain your problem.
<img width="841" alt="Screen Shot 2020-01-18 at 5 27 09 PM" src="https://user-images.githubusercontent.com/24238335/72661666-e8a4e180-3a17-11ea-8dc0-14f320bf4963.png">


**Details**

> Describe what you are trying to achieve and what goes wrong.

```php
public function validate(array $data, string $propertyName, $item, $default = null): array
```



> 解决方案

```php
  public function validate(array $data, string $propertyName, $item, $default = null,$strict = false): array
```


你好，在AOP中PointExecution注解无法声明类的方法。

1.代码
[2020-01-15_215334.pdf](https://github.com/swoft-cloud/swoft/files/4065199/2020-01-15_215334.pdf)

[2020-01-15_215408.pdf](https://github.com/swoft-cloud/swoft/files/4065200/2020-01-15_215408.pdf)

2.报错
[2020-01-15_215553.pdf](https://github.com/swoft-cloud/swoft/files/4065210/2020-01-15_215553.pdf)

3.问题所在
\swoft2\vendor\doctrine\annotations\lib\Doctrine\Common\Annotations\DocParser.php 977行
这里会判断该对象是不是常亮？这里应该是有问题的
![20200115215729](https://user-images.githubusercontent.com/25098996/72439760-75fef080-37e2-11ea-9fb7-eee6ee45349d.png)


![image](https://user-images.githubusercontent.com/32477526/72335727-70c67680-36fa-11ea-9b0d-5f0d98357209.png)
~~~
docker run -p 18306:18306 -v /f/dev/swoft:/var/www/swoft --name swoft swoft

docker: Error response from daemon: error while creating mount source path '/host_mnt/f/dev/swoft': mkdir /host_mnt/f: file exists.
~~~
这个该怎么解决？

| Q                   | A
| ------------------- | -----
| Bug report?         | yes
| Feature request?    | yes
| Swoft version       | 2.0.7)
| Swoole version      |4.4.3)
| PHP version         | 7.1)
| Runtime environment |CentOS 7

**Describe the bug**
子类当中调用父类带有aop的方法，aop对应的操作没有执行。在子类当中直接调用该方法，aop对应的操作有执行
**Expected behavior**
子类当中调用父类带有aop的方法，正常运行

**Screenshots**

**Details**
子类及父类均为bean
Aspects detail:

```json
// paste output here
{
  "aspect": {
    "Swoft\\Limiter\\Aspect\\LimiterAspect": {
      "order": 9223372036854776000,
      "point": {
        "annotation": {
          "include": [
            "Swoft\\Limiter\\Annotation\\Mapping\\RateLimiter"
          ],
          "exclude": []
        }
      },
      "advice": {
        "around": [
          "Swoft\\Limiter\\Aspect\\LimiterAspect",
          "around"
        ]
      }
    },
    "Swoft\\Breaker\\Aspect\\BreakerAspect": {
      "order": 9223372036854776000,
      "point": {
        "annotation": {
          "include": [
            "Swoft\\Breaker\\Annotation\\Mapping\\Breaker"
          ],
          "exclude": []
        }
      },
      "advice": {
        "around": [
          "Swoft\\Breaker\\Aspect\\BreakerAspect",
          "around"
        ]
      }
    },
    "App\\Aspect\\ModelCache\\CacheAspect": {
      "order": 9223372036854776000,
      "point": {
        "annotation": {
          "include": [
            "App\\Annotation\\ModelCache\\Cache"
          ],
          "exclude": []
        }
      },
      "advice": {
        "around": [
          "App\\Aspect\\ModelCache\\CacheAspect",
          "cache"
        ]
      }
    },
    "App\\Aspect\\ModelCache\\MultiCacheAspect": {
      "order": 9223372036854776000,
      "point": {
        "annotation": {
          "include": [
            "App\\Annotation\\ModelCache\\MultiCache"
          ],
          "exclude": []
        }
      },
      "advice": {
        "around": [
          "App\\Aspect\\ModelCache\\MultiCacheAspect",
          "cache"
        ]
      }
    }
  }
}
```

> Provide minimal script to reproduce the issue

```php
// paste code
```

Hello can anyone point me to some good documentation or tutorial on swoft. Have trans versed all the search engines and can't find anything concrete
当拦截方法中存在`protected` 访问限定的方法时，提示 `App\Exception\Handler\HttpExceptionHandler:handle(40) Undefined index xxx (at xxx/swoft/aop/src/Concern/AopTrait.php line 76)`


找到了对应的代码 在 `swoft\stdlib\src\Reflections.php` 中
```php 
namespace Swoft\Stdlib;
use ...
final class Reflections {
    .................................
    * @throws ReflectionException
     */
    public static function cacheReflectionClass(ReflectionClass $reflectionClass): void
    {
    .................................
        $reflectionMethods = $reflectionClass->getMethods(ReflectionMethod::IS_PUBLIC);

        self::$pool[$className]['name']     = $reflectionClass->getName();
        self::$pool[$className]['comments'] = $reflectionClass->getDocComment();

        foreach ($reflectionMethods as $reflectionMethod) {
            $methodName   = $reflectionMethod->getName();
            $methodParams = [];
      .................................
}
```
在这行代码中，只获取了`public` 修饰符方法
`$reflectionMethods = $reflectionClass->getMethods(ReflectionMethod::IS_PUBLIC);`

这个是 [swoft.org](https://www.swoft.org/documents/v2/basic-components/aop/#heading8) 上的文档介绍
![image](https://user-images.githubusercontent.com/18079535/71761060-8c16d200-2f01-11ea-8c53-421296d94b29.png)

实际上只能拦截 `public` 修饰符的方法 和 文档上描述的不一致

我使用的版本是 
*  Swoft: 2.0.7
*  Swoole: 4.4.13
*  php: 7.1.26


| Q                   | A
| ------------------- | -----
| Bug report?         | yes
| Feature request?    | no
| Swoft version       | 2.0.7
| Swoole version      | 4.4.8
| PHP version         | 7.3.12
| Runtime environment | CentOS 7

**Details**

全局中间件，在抛出异常的情况下，无法携带已设置的响应头.
The global middleware cannot carry the Http response header when it throws an exception.

这是官方文档提供的跨域中间件示例: [CorsMiddleware](https://www.swoft.org/documents/v2/core-components/http-server/#heading17)
This is an example of cross-domain middleware provided by the official documentation.
```php
/**
     * Process an incoming server request.
     * @param ServerRequestInterface $request
     * @param RequestHandlerInterface $handler
     * @return ResponseInterface
     * @inheritdoc
     */
    public function process(ServerRequestInterface $request, RequestHandlerInterface $handler): ResponseInterface
    {
        if ('OPTIONS' === $request->getMethod()) {
            $response = Context::mustGet()->getResponse();
            return $this->configResponse($response);
        }
        $response = $handler->handle($request);
        return $this->configResponse($response);
    }

    private function configResponse(ResponseInterface $response)
    {
        return $response
            ->withHeader('Access-Control-Allow-Origin', 'http://mysite')
            ->withHeader('Access-Control-Allow-Headers', 'X-Requested-With, Content-Type, Accept, Origin, Authorization')
            ->withHeader('Access-Control-Allow-Methods', 'GET, POST, PUT, DELETE, PATCH, OPTIONS');
    }

```

当抛出异常
When we throw an exception in the controller.

```php
/**
     * Test
     * @RequestMapping(route="/test", method={RequestMethod::POST})
     * @return Response
     * @throws \Exception
     */
    public function captcha(): Response
    {
          throw new Exception('foo');
    }
```

然后用 curl 访问该控制器.
Then we access this url.

```shell
curl  beed.zhixiu.vip/api -I
```
Response: 
```
HTTP/1.1 200 OK
Server: nginx
Date: Thu, 02 Jan 2020 09:08:02 GMT
Content-Type: application/json; charset=utf-8
Content-Length: 2214
Connection: keep-alive
**{Missing some headers here!}**  <<<-------
```

虽然可以通过 `nginx.conf` 来解决：
Although it can be solved by `nginx.conf`，Is there a more elegant way？:
```
 # for cors
add_header Access-Control-Allow-Origin *;
add_header Access-Control-Allow-Headers *;
add_header Access-Control-Allow-Methods *;
```


| Q                   | A
| ------------------- | -----
| Bug report?         | yes
| Feature request?    | no
| Swoft version       | v2.0.7
| Swoole version      | 4.4.4
| PHP version         | 7.3.0
| Runtime environment | Alpine

**Describe the bug**
我的rpc服务端由于内存溢出崩溃了.客户端发出消息后一直在等待数据返回.从而造成了`假死`现象

**Expected behavior**
* 希望配置的rpc客户端的读写超时时间能够生效
* 在服务端出现异常而导致客户端总是获取不到数据的时候能够抛出异常
* 另外希望能够根据rpc接口设置更细粒度的超时时间(只是提一下,不重要)


**Details**

> /vendor/swoft/rpc-client/src/Connection.php中的recv方法直接写入了-1

```php
/**
 * @return string|bool
 */
public function recv()
{
    return $this->connection->recv((float)-1);
}
```



#### 超时设置( 摘自swoole手册 Coroutine\Client->recv )
* 传入了$timeout，优先使用制定的timeout参数
* 未传入$timeout，但在connect时指定了超时时间，自动以connect超时时间作为recv超时时间
* 未传入$timeout，未设置connect超时，将设置为-1表示永不超时
* 发生超时的错误码为ETIMEDOUT
| Q                   | A
| ------------------- | -----
| Bug report?         | yes
| Feature request?    | no
| Swoft version       | 2.0.7
| Swoole version      | 4.4.13
| PHP version         | 7.2.26
| Runtime environment | ubuntu18.04.1

**Describe the bug**
对于支持GET、POST的请求，验证请求参数时，只能对post参数验证通过，GET参数始终验证不通过

**Expected behavior**
A clear and concise description of what you expected to happen.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Details**

> Describe what you are trying to achieve and what goes wrong.

```php
返回实际结果：[]
理论返回结果：{"start":"2019-01-01", "end":"2019-02-02"}

```

> Provide minimal script to reproduce the issue

```php
    /**
     * Customize the validator with userValidator
     *
     * @RequestMapping()
     *
     * @Validate(validator="userValidator", type=ValidateType::GET)
     *
     * @param Request $request
     *
     * @return array
     */
    public function validateCustomer(Request $request): array
    {
        return $request->getParsedBody();
    }
```

建议通过创建模型的方式来创建数据库表，这样还会少一步数据库迁移，个人感觉比较方便