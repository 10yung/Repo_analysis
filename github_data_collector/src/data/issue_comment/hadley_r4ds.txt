focusses -> focuses
In Section 3.5 

> The first argument of facet_wrap() should be a formula, which you create with ~ followed by a variable name (here “formula” is the name of a data structure in R, not a synonym for “equation”). The variable that you pass to facet_wrap() should be discrete.

However, the ggplot2 documentation for `facet_wrap()` states that the formula interface is there for compatibility in favour of `vars()`: 

> For compatibility with the classic interface, can also be a formula or character vector. Use either a one sided formula, ~a + b, or a character vector, c("a", "b").

In ### Problems, you're saying that readr misjudged columns. According to my R, it first judged `x` column as `col_double()` and `y` column as `col_logical()`. But your logic seems like readr judged `x` column as `col_integer()` and `y` column as `col_character()`. I understood what you tried to explain, but maybe readr increased its performance as time passed?

The link in the last line of Chap. 27.1 

> Both cheatsheets are also available at http://rstudio.com/cheatsheets.

yields a 404 error. 

I guess it moved to: https://rstudio.com/resources/cheatsheets/
In transform.Rmd (Chapter 5, Data Transformation), under Counts (5.6.3), we removed na.rm = TRUE when computing mean because all NAs for arr_delay were already removed when creating not_cancelled dataset.
Currently the book (https://r4ds.had.co.nz/data-visualisation.html#geometric-objects) says:
"The best way to get a comprehensive overview is the ggplot2 cheatsheet, which you can find at http://rstudio.com/cheatsheets."

The link seems broken to me. I think it has moved to https://rstudio.com/resources/cheatsheets/, which contains a link to the ggplot2 cheatsheet: https://github.com/rstudio/cheatsheets/raw/master/data-visualization-2.1.pdf
Proposed fix related to this issue: https://github.com/hadley/r4ds/issues/807

A more comprehensive fix should perhaps discuss why "`{,m}`: at most m" does not work (or warn the reader that it does not)?

Or perhaps the error message when using `{,m}` is clear enough and the inclusion of `{,m}` in the book is intentional (in the sense that it discusses a valid regex, albeit one that does not work with `stingr`, and is judiciously not included in the examples of `stingr` applications)?

(The second commit corrects some small typos in the "Iteration" chapter)
https://github.com/hadley/r4ds/blob/ce824d0a33149b34c7b1cacabf8636e132970592/strings.Rmd#L363

As I was writing lecture notes based on the "strings" chapter, I stumbled upon the exact same issue as described in this Reddit thread: https://www.reddit.com/r/rprogramming/comments/8oyy1a/stringr_str_view_repetition_at_most_n_times/

On my end, it looked like this. The intention was to show that there would be no match in this case. Instead, I get an error:

`str_view_all("Misery, Misery, Misery that’s what Lord and Miller have chosen", "(Misery, ){,3}")`

`Error in stri_locate_all_regex(string, pattern, omit_no_match = TRUE,  : 
  Error in {min,max} interval. (U_REGEX_BAD_INTERVAL)`

One of the answerers on Reddit explains:

> "`stringr` uses ICU regular expressions, which apparently do not have the `{,m}` notation - use the explicit `{n,m}`."

Since the `{,m}` "method" is presented as a viable option in the latest version of the book and I did not see an open issue related to this, I thought I'd mention it here.

Perhaps the error message when using `{,m}` is clear enough and the inclusion of `{,m}` in the book is intentional (in the sense that it discusses a valid regex, albeit one that does not work with `stingr`, and is judiciously not included in the examples of `stingr` applications)?