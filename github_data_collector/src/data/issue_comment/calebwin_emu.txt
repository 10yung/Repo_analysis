Without quotes around version numbers in a TOML file, i.e. `em = 0.3.0`, Cargo gives the error `expected newline, found a period at line 10 column 9`. crates.io always uses quotes, and adding the quotes solves the problem. 

The usage instructions should be copy-pastable, and thus, should also use quotes.
I read about gpufs.  It has a capability to access files from within gpu kernel functions.  Are there any plans to provide file io apis from within emu's gpu kernel functions? i.e. open file, create file, write/read, close.

Thank you for listening.

Are there any plans to provide string or byte array handling capability from within emu kernels?
I believe it would be feasible if there was more support for integer types within emu.
I understand both cuda/opencl provide integer support within kernels.

Thank you for listening.
Hello!

Is there currently any way to manually list and select the OpenCL device?

Thanks! :)
Are you aware of [Futhark](https://github.com/diku-dk/futhark) ?

They let the user write GPU code with highlevel functions (in a dedicated language) that are then optimized and compiled down to openCL or Cuda.

As a long term goal, using a similar approach (or integrating with their optimizer), you could let the user use an iterator (`gpu_iter()` ?) and optimize the code at compile time.
I'm trying to run the tests for the `arithmetic` example (`env RUST_BACKTRACE=1 cargo test`), but am getting undefined behaviour. In most cases a double free is detected and the program crashes:

```
running 2 tests
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
X server found. dri2 connection failed!
double free or corruption (top)
error: process didn't exit successfully: `/home/cedwards/git/emu/examples/arithmetic/target/debug/deps/arithmetic-8e93e645dd4fd0c6` (signal: 6, SIGABRT: process abort signal)
```
Hey

is it planned to support binding to CUDA in the future?
It would be a great enhancement I think :)

Best regards
Chips
Hi!
Your library is getting more and more popular.
Would you please use [gitflow](https://ru.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow)? At least would you please protect `master` branch from pushing into it without pull requests even for administrators? It will help people to track your progress and it will help you not to screw up undeliberately by pushing unwanted code into `master` branch.

Best regards
The only things Emu functions can really accept right now are vectors (technically arrays/pointers) and primitive data (f32 or i32). Simple structures could be accepted with 2 changes.

-A change to the language so you can declare what kind of structs you accept and how to unpackage primitive data from them in the declaration of the Emu function
-A change to the build! macro to generate a function that can accept structs of a certain type and unpackage them into primitive data to send to the Emu function.

Before these changes are implemented, we should think about how the general interface to an Emu user should change. How should they pass structs to functions in a way that is most seamless.