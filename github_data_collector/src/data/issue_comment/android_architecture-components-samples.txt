
Hi, is it safe to observe a LiveData instance stored in ViewModel directly from a View ?
This is what i'm doing, it's working, but i don't know if i'am missing some implications of doing this.

```
@BindingAdapter("stateLive")
fun <T> AsyncLayout.setStateLive(stateLive: LiveData<Resource<T>>?) {
    stateLive?.apply {
        val observer: Observer<Resource<T>> = Observer { it ->
            it?.apply {
                if (isLoading) {
                    state = AsyncLayout.State.LOADING
                    return@Observer
                }
                state = if (success()) AsyncLayout.State.SUCCESS else AsyncLayout.State.ERROR
            }
        }
        observeForever(observer)
        onDestroyView = {
            stateLive.removeObserver(observer)
        }
    }
}
```
question:Why replace/remove instead of add/hide inside FragmentNavigator?thank you
OK, so the main problem here, is that using the sample code, all fragments are created to ON RESUME State, so this means if I have 5 fragments with networking on behind or with another stuff the calls are going to be made, the databinding is going to do their works, etc ? any workaround for this problem? Or is this a Feature of Android Navigation Component?



webview layout always recreates when navigating back
In an activity, if I perform an operation like:
```kotlin
val subMenu = navigationView.menu.findItem(R.id.monitored_apps).subMenu
subMenu.clear()
for(...) {
    subMenu.add(groupId, 0, index, name).setChecked( getIsChecked(name) )
}
```
then after selecting an item from the navigation view does not respect android:checkableBehavior="single"

i.e. The item checked programatically in the above code remains checked even when choosing a different item from the navigation view.

The result is that after selecting some item, there are total two items checked in the navigation view.
I have tried navigation adventure (demo), it looks good and it is intuitive; however, It has come to my attention that after performing a stress test on the navigation buttons, it bugs: the screen whitens out

![leaderboard](https://user-images.githubusercontent.com/10422134/70700334-e0e07780-1cca-11ea-825a-32291d99eb05.png)

Use DaggerApplication  DaggerAppCompatActivity DaggerFragment inject, and remove AppInjector.kt Injectable
Hi 

I work fine in sample.

But when I click fast between tabs

onCreateView is not trigger in fragment 

Will get empty view

Any solution?
https://github.com/android/architecture-components-samples/blob/72183dfd43bd6311d4a3acae46560ebebc5098c0/BasicSample/app/src/main/java/com/example/android/persistence/ui/ProductFragment.java#L94

Under the new AndroidX Navigation framework:
When jumping from Fragment A to Fragment B, and back to A, the onActivityCreate() will be called again for Fragment A. If the viewModel is not created every time in onActivityCreate, then the liveData in viewModel will observe again and notifies more than one Observer.
Although for current sample this is fine, I think it is better that the observe should be in Fragment onCreate. 