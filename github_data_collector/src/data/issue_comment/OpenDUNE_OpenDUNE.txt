I tried it !
I downloaded and installer http://www.openwatcom.org/download.php

Open a CMD.exe
Setup the ENV:
`..\..\WATCOM\owsetenv.bat
`
Copy the
`rev.c.in
`
to
`rev.c`

Modified the line 39
`const uint8 g_opendune_revision_modified = !!MODIFIED!!;
`
to
`const uint8 g_opendune_revision_modified = 0;
`

then in same CMD.exe `wccbuild.bat`.
=> OK bin\opendune.exe created
I copied as asked the original Dune2 1.07 data files (including dune2.exe) to data/.
But launching it yelds:
Not compatible ...

I also tried to launch the DOS4G provided in Watcom ... same result.

So, installed DOS2BOX
https://sourceforge.net/projects/dosbox/
mount the drive where I compiled it (opendune and watcom should be on same drive)
typed
```
cd OPENDU~1\BIN
<pathTo>\DOS4GW.EXE OPENDUNE.EXE
```

And there it is =)
Upon launching the game on OpenBSD, OpenDUNE immediately segfaults.
gdb backtrace attached.

[opendune-gdb.txt](https://github.com/OpenDUNE/OpenDUNE/files/3412551/opendune-gdb.txt)

Hi there,

OpenDUNE user on GNU/Linux without Pulse here.
Timidity DOES work, but music is out of sync sometimes...
So I am trying the mt32 emulation way. I am building OpenDUNE after configuring with:
`./configure --with-asound --without-oss --without-pulse --with-sdl2 --with-munt`

Munt was build from sources on the repo:
https://github.com/munt/munt.git
Then I build mt32emu, installed it, and OpenDune DOES detect it at configure and build time.
Then of course opendune.ini has:

```
mt32midi=1
mt32rompath=data/

```

(Yes, data is the right path for my MT32 ROMs).

However, when I try to run OpenDune, I get regarding music:

`open(/dev/dsp) : No such file or directory
`

This error message comes from mt32 emulation somehow, which is stupidly trying to access the old OSS interface.

So, is there a way to build mt32emu for ALSA and NOT OSS? Some other way to make OpenDUNE work with mt32 emulation?
(But, honestly, internal OPL emulation or OGG/FLAC music is a waaaay better solution than some external emulation...)
https://github.com/OpenDUNE/OpenDUNE/blob/1fd55812859dfe85c574b793e237b6500ee72d0c/src/map.c#L1591

```
packed = Tile_PackTile(Tile_MoveByRandom(tile, Tools_Random_256() & 0x3F, true));
```

`Tile_PackTile` is a macro and `Tile_MoveByRandom` called twice here because of that.
The difference is 3 or 6 calls to `Tools_Random_256()` in this line. Resulting map can differ because of different `Tools_Random_256()` in next calls.

Is that expected and works like in original or is this a bug ?
on linux 18.10 after configure, make, make install there is no data dir created in the output folder

i saw a line about this

https://github.com/OpenDUNE/OpenDUNE/blob/master/Makefile.bundle.in#L144

would be nice to automatically copy the data dir from bin in the repository to the install location
As far as I know, the build fails on OpenBSD


Good evening,

this is not exactly an issue but rather a request for advices/support.

I'm porting OpenDUNE on Haiku. The port works and the game is playable, although with no sound, with a minor patch you can fine [here](https://github.com/theclue/haikuports/blob/opendune/games-strategy/opendune/patches/opendune-0.9.patchset) (mostly related to system paths). This is based on OpenDUNE v0.9 release.

The game builds well on both SDL and SDL2, but with the latter is extremely slow, so I rever back to SDL for now.

But I have a serious issue with keyboard: basically all the keys are totally messed up (for example, hitting 'n' send the code for '9'). I noticed it while naming a savegame.

The issue goes away with SDL2 (but as I said, the game is unplayable with SDL2).

Do you have an idea on what could cause the issue?
When running the game with SDL fullscreen mode, which adds scaling,
we might receive mousePosX and mousePosY values that are one pixel
too high. This causes artifacts when scrolling the map down, since
the mouse cursor is not hidden, since the value is unexpected and
not properly handled. This fix unsures that all mouse input
drivers always clamps at the correct values.
All these changes were done under Fedora 28 x86_64 (gcc 8.1.1). There are good chances that these changes will be beneficial to other Linux distributions as well.

The changes to "src/video/video_sdl2.c" are the most critical as without these, I don't consider the game to be playable on my setup.
Hi,
I have a problem with compilation on Debian 9.4, could you help, please?

```
gcc version 6.3.0 20170516 (Debian 6.3.0-18+deb9u1) 

gbajson@misio:/var/tmp/OpenDUNE$ ./findversion.sh 
ge4e1470f		0	ge4e1470f

```


```
gbajson@misio:/var/tmp/OpenDUNE$ make
make[1]: Entering directory '/var/tmp/OpenDUNE/objs/release'
[SRC] Compiling and linking depend
[SRC] DEP CHECK (all files)
[SRC] Compiling animation.c
[SRC] Compiling audio/driver.c
[SRC] Compiling audio/dsp_pulse.c
[SRC] Compiling audio/midi_alsa.c
In file included from /usr/include/alsa/asoundlib.h:54:0,
                 from /var/tmp/OpenDUNE/src/audio/midi_alsa.c:8:
/usr/include/alsa/pcm.h:1010:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘void’
 static inline void snd_pcm_pack_audio_tstamp_config(unsigned int *data,
               ^~~~
/usr/include/alsa/pcm.h:1018:15: error: expected ‘=’, ‘,’, ‘;’, ‘asm’ or ‘__attribute__’ before ‘void’
 static inline void snd_pcm_unpack_audio_tstamp_report(unsigned int data, unsigned int accuracy,
               ^~~~
Makefile:179: recipe for target 'audio/midi_alsa.o' failed
make[1]: *** [audio/midi_alsa.o] Error 1
make[1]: Leaving directory '/var/tmp/OpenDUNE/objs/release'
Makefile:43: recipe for target 'all' failed
make: *** [all] Error 1

```