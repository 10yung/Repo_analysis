
Just wondering what the deal is, as there the number of issues is growing and there doesn't seem to be any response from devs.

Anyone know?
Let's say I have a task to run every ten minutes but job only need to run on 9.30am to 12pm of the day.

Is there way currently to do it?
As per #271, this can result in an uncaught exception. This should be handled better as uncaught exceptions that are known should be fixed. 
In the server, the VM environment scheduler gets stop after 25-30(Not sure about exact) days.
 Our scheduler executes the below rule.

`const k = schedule.scheduleJob('* * * * *', async() => { console.log('This job runs every 1 minute.'); });
`
Does anybody have an idea about why my node scheduler process stops? I checked the logs and there were no errors in logs.
I tried to run on an AWS lambda function. As expected it did not run. And that makes sense as the memory is cleared when the function returns.

Is there any other way to deploy this on an AWS lambda function?
`    this.job.execute(fireDate);              ^  TypeError: Cannot read property 'execute' of undefined`
We are observing a scenario in a given duration such as 3 mins we are supposed to schedule some 10 jobs which are cpu intensive, out of which considerable number of jobs are not getting triggered lets say 5 jobs are missing, How do we resolve this kind of Issue
I use `typescript` to write code and found that `tz` is not found in `RecurrenceRule` in `@types/node-schedule`.
please update it.
Thanks.
Hi, I had an issue, the callback is fired before the job method.

сode to reproduce
```javascript
const schedule = require('node-schedule')

const j = new schedule.Job(
  'test',
  function () { console.log('run job method') },
  function () { console.log('run on complete callback') }
)

j.schedule('*/5 * * * * *')
```
output
```
$ node jobs.js 
> run on complete callback
> run job method
```

- node v10.14.0
- node-schedule 1.3.2