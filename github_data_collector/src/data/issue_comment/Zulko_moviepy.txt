… is read-only" in line 45

<!-- Please tick when you have done these. They don't need to all be completed before the PR is created -->
- [x] If this is a bugfix, I have provided code that clearly demonstrates the problem and that works when used with this PR
- [ ] I have added a test to the test suite, if necessary
- [ ] I have properly documented new or changed features in the documention, or the docstrings
- [ ] I have properly documented unusual changes to the code in the comments around it
- [ ] I have made note of any breaking/backwards incompatible changes

When using moviepy/video/fx/headblur.py I get the error (numpy 1.17.4):
  File "/usr/lib/python3.7/site-packages/moviepy/video/fx/headblur.py", line 45, in fl
    im[y1:y2, x1:x2] = mask*blurred + (1-mask)*orig

It seems that im is readonly and it also won't accept "im.setflags(write=1)":
  ValueError: cannot set WRITEABLE flag to True of this array

Therefore it seems we need to copy im and modify that.
<!-- Please tick when you have done these. They don't need to all be completed before the PR is created -->
- [ ] If this is a bugfix, I have provided code that clearly demonstrates the problem and that works when used with this PR
- [ ] I have added a test to the test suite, if necessary
- [ ] I have properly documented new or changed features in the documention, or the docstrings
- [ ] I have properly documented unusual changes to the code in the comments around it
- [ ] I have made note of any breaking/backwards incompatible changes

I've been writing a program and I'm a beginner to python but got the hang of it quickly because I have a lot of experience with other languages. I've been getting an error and I have no clue how to fix it. 

It's a program that takes a video and puts the transcript through Cleverbot and makes video responses in between lines. It's part of a project I'm involved in with an aim of controlling a YouTube channel semi-automatically using Python.

_____________________________________________________________________________________________

The full code (it's all over the place, I know):

 import time
import random
import datetime
import ffmpeg
import ffmpy
from moviepy.editor import *
from selenium import webdriver
import selenium.webdriver.support.ui as ui
from selenium.webdriver.common.keys import Keys
from gtts import gTTS
import os

project_id = random.randint(100000000, 999999999)
os.mkdir(str(project_id))

input_video = VideoFileClip("input.mp4")
game_footage = VideoFileClip("gameplay.mp4")
final_render = input_video.subclip(0, 1)
current_r = input_video.subclip(0, 1)
current_c = input_video.subclip(0, 1)
current_edited = input_video.subclip(0, 1)

browser = webdriver.Chrome("C:\\Users\\jdsee\\Pictures\\chromedriver_win32\\chromedriver.exe")
browser.get("https://www.cleverbot.com/")
input_box = browser.find_element_by_name("stimulus")

with open("venv/data.txt", "r") as my_file:
    data = my_file.readlines()

for line_number in range(0, 3):
    line_time_1 = line_number * 2
    line_string_1 = line_number * 2 + 1
    line_time = data[line_time_1]
    line_string = data[line_string_1]
    if line_number == 0:
        start_time_v = "0:00"
        end_time_v = data[2]
    else:
        start_time_v = data[line_number * 2]
        end_time_v = data[line_number * 2 + 2]
    time_string_s = "00:" + start_time_v.rstrip() + ",00"
    time_string_e = "00:" + start_time_v.rstrip() + ",00"
    ts1 = datetime.datetime.strptime(time_string_s, "%H:%M:%S,%f")
    s_seconds = 60 * ts1.minute + ts1.second
    ts2 = datetime.datetime.strptime(time_string_e, "%H:%M:%S,%f")
    e_seconds = 60 * ts2.minute + ts2.second
    print(line_number, line_time, line_string)
    time.sleep(2)
    input_box.send_keys(line_string)
    time.sleep(5)
    output_text_1 = browser.find_element_by_id("line1")
    output_text = output_text_1.text
    print(output_text)
    speech = gTTS(text=output_text, lang='en', slow=False)
    speech.save(str(project_id) + "/tts" + str(line_number) + ".mp3")
    current_edited = input_video.subclip(s_seconds, e_seconds)
    current_c = game_footage.subclip(0, 5).set_audio(str(project_id) + "/tts" + str(line_number) + ".mp3")
    current_r = input_video.subclip(0, 1)
    if line_number == 0:
        current_r = concatenate_videoclips([current_edited.set_start(0), current_c.set_start(0)])
    else:
        current_r_new = concatenate_videoclips([current_r.set_start(0), current_edited.set_start(0), current_c.set_start(0)])
        current_r = current_r_new
    final_render = current_r

final_render.write_videofile(project_id + "/output.mp4", codec="libx264", audio_codec="mp3")
print("rendered " + project_id)
`
________________________________________________________________________________________________
**Error:**
 

 Traceback (most recent call last):

  File "C:/Users/jdsee/PycharmProjects/testfirst/app.py", line 61, in <module>
    current_r = concatenate_videoclips([current_edited.set_start(0), current_c.set_start(0)])
  File "<C:\Users\jdsee\PycharmProjects\testfirst\venv\lib\site-packages\decorator.py:decorator-gen-15>", line 2, in set_start
  File "C:\Users\jdsee\PycharmProjects\testfirst\venv\lib\site-packages\moviepy\decorators.py", line 29, in apply_to_mask
    newclip = f(clip, *a, **k)
  File "<C:\Users\jdsee\PycharmProjects\testfirst\venv\lib\site-packages\decorator.py:decorator-gen-14>", line 2, in set_start
  File "C:\Users\jdsee\PycharmProjects\testfirst\venv\lib\site-packages\moviepy\decorators.py", line 43, in apply_to_audio
    newclip.audio = f(newclip.audio, *a, **k)
  File "<C:\Users\jdsee\PycharmProjects\testfirst\venv\lib\site-packages\decorator.py:decorator-gen-13>", line 2, in set_start
  File "C:\Users\jdsee\PycharmProjects\testfirst\venv\lib\site-packages\moviepy\decorators.py", line 89, in wrapper
    return f(*new_a, **new_kw)
  File "<C:\Users\jdsee\PycharmProjects\testfirst\venv\lib\site-packages\decorator.py:decorator-gen-12>", line 2, in set_start
  File "C:\Users\jdsee\PycharmProjects\testfirst\venv\lib\site-packages\moviepy\decorators.py", line 13, in outplace
    newclip = clip.copy()
AttributeError: 'str' object has no attribute 'copy' 
________________________________________________________________________________________

Let me know if you found why this is, thanks!

(P.S. If you're going to run it, make sure you have a "data.txt" file in this format: 
"00:00
Insert Text
00:01
Example
00:02
Also make sure
00:03
There are at least 4 lines"
and 2 video files ("input.mp4" and "gameplay.mp4", can be anything)


<!-- Please tick when you have done these. They don't need to all be completed before the PR is created -->
- [ ] If this is a bugfix, I have provided code that clearly demonstrates the problem and that works when used with this PR
- [ ] I have added a test to the test suite, if necessary
- [ ] I have properly documented new or changed features in the documention, or the docstrings
- [ ] I have properly documented unusual changes to the code in the comments around it
- [ ] I have made note of any breaking/backwards incompatible changes

hi,
Just wanna get the frames number directly,
do not want to use **duration*fps**,
any help ?
thx

The file which needs to be manually edited now seems to be `config_defaults.py`._

- [ ] If this is a bugfix, I have provided code that clearly demonstrates the problem and that works when used with this PR
- [.] I have added a test to the test suite, if necessary
- [.] I have properly documented new or changed features in the documention, or the docstrings
- [.] I have properly documented unusual changes to the code in the comments around it
- [ ] I have made note of any breaking/backwards incompatible changes

#-*- coding:utf-8 -*-
from moviepy.editor import *

myclip = VideoFileClip("55.mp4").subclip(10,40)
t = u'55 도발'.encode('utf-8')
txtclip = TextClip(t, fontsize=50, color='red', font='NanumGothic').set_duration(5)
file = CompositeVideoClip([myclip, txtclip.set_pos(('center', 'bottom'))])

file.write_videofile('text.mp4')

in text.mp4, video display just 55, it ignore '도발'
How can i fix it..?
### Specifications

  - Python Version:3.62
  - Moviepy Version:1.0.0


<!--
Thank you for submitting this issue! If you are not reporting a bug, please delete all of the following text.
If you are reporting a bug, please ensure moviepy is updated to the latest version before submitting, as some bugs may only be present on older versions.

You can format code by putting ``` (that's 3 backticks) on a line by itself at the beginning and end of each code block.
-->
### Expected Behavior
Concatenate two videos using moviepy module.

### Actual Behavior
I got a  **ModuleNotFoundError: No module nameed 'moviepy'**

![error2](https://user-images.githubusercontent.com/33995055/71635445-848dbb00-2bd9-11ea-9013-9d0eb37f8ace.PNG)

### Steps to Reproduce the Problem
<!-- Please include code that demonstrates this problem so that we can reproduce it. For advice on how to do this, see https://stackoverflow.com/help/mcve -->

Details:

- The methodology of installation:

1. I Created an environment using Anaconda Navigator 1.9.7
2. Using a terminal of the environment created, I installed moviepy. The installation of moviepy was successful.
3. I opened a jupyter lab notebook and I ran the following sentences:

```
from moviepy.editor import VideoFileClip, concatenate_videoclips

clip1 = VideoFileClip("myvideo1.avi")

clip2 = VideoFileClip("myvideo2.avi")

final_clip = concatenate_videoclips([clip1,clip2])

final_clip.write_videofile("my_concatenation.avi")
```

4.-I obtained the error showed above.

- I created different environments and I used different ways to install moviepy, in order to discard any installation issues that could produce the error (**ModuleNotFoundError: No module nameed 'moviepy'**):

     1. pip install moviepy

     2.conda install moviepy

     3.pip install --trusted-host pypi.python.org moviepy

     4.conda install -c conda-forge moviepy

     5.conda install -c conda-forge/label/gcc7 moviepy

I obtained the same error **ModuleNotFoundError: No module nameed 'moviepy'**.

### Specifications

  - Python Version: 3.7.0
  - Moviepy Version: 0.2.3.5
  - Platform Name: Anaconda
  - Platform Version: 1.9.7

HI,
I have a sound with some beeps of 0.10 second at fixed intervals and I want to extract that particular time audio details as I will be using these details to compare with other sound files.
I am using below code to get frames details.


```
video = VideoFileClip('test_video3.mp4')
audio = video.audio
# audio.write_audiofile('custom.wav')
duration = video.duration # == audio.duration, presented in seconds, float
print(duration)
#note video.fps != audio.fps
step = 0.1
f = open("aframe.txt", "a")
for t in range(int(duration / step)): # runs through audio/video frames obtaining them by timestamp with step 100 msec
    t = t * step
    t = round(t,2)
    print(t)

    if t > audio.duration or t > video.duration: break
    audio_frame = audio.get_frame(t) #numpy array representing mono/stereo values
    f.write(str(audio_frame)+"\n")
	# print(audio_frame)
    if audio_frame[0] > 0 or audio_frame[1]>0:
	    video_frame = video.get_frame(t) #numpy array representing RGB/gray frame
	    video.save_frame("pics/"+str(t)+".png", t=t)
	    filename = "pics/"+str(t)+".png"
	    text = pytesseract.image_to_string(Image.open(filename))
	    print(text)

f.close()
```
Kindly help me.

Thanks in advance.
Aman

Hi, I am trying to convert a VideoClipFile that's already loaded into memory and convert to a binary stream so that I can save it to a cloud storage system.  However, the cloud storage system only accepts binary streams, so I can't just use the normal save.  The other option is to write the binary stream to file, then open it as a binary stream, but if I have thousands of videos that's going to be too costly.  Thanks for the help.