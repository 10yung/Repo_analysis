When I mess up the pin for my login or the connection fails, osxfuse locks up finder and gradually the rest of the system locks up and requires a hard reboot to clear.

I am on a 2019 Macbook Pro with MacOS Mojave 10.14.6
SSHFS version 2.5 (OSXFUSE SSHFS 2.5.0)
OSXFUSE 3.10.3
FUSE library version: 2.9.7
When my connection drop, the finder stop responding for a good 4 to 5 min.
No kernel panic, no crash report, just Finder is not Responding, then it come back to normal.
I am on Mojave, 10.14.6, using the osxfuse Beta.
Dumb weird edge case.

I have my password for an ssh server saved in an image document on my Mac.  I used sshfs to mount a remote server, and when it asked for the password, I went to go open the Image.  Finder couldn't open the Image "Preview" Viewer while SSHFS was waiting for my password.  When I tried to relaunch Finder, thinking it had crashed, it relaunched, but wouldn't let me open a finder window. 

I assume that OSXFuse/SSHFS causes a type of system-wide hang while it is in the process of mounting a drive.  This isn't really a big issue, but one I thought I would bring to your attention, and now that I know it happens I will be more aware of it in the future.

Great software, and a godsend.  Hope someone with the same edge/corner case finds this note useful.

```

OSX Catalina 10.15 (19A602)
MacBook Pro (15-inch, 2018)
2.2 GHz 6-Core Intel Core i7
16 GB 2400 MHz DDR4
Radeon Pro 555X 4 GB
Intel UHD Graphics 630 1536 MB


  Model Name:	MacBook Pro
  Model Identifier:	MacBookPro15,1
  Processor Name:	6-Core Intel Core i7
  Processor Speed:	2.2 GHz
  Number of Processors:	1
  Total Number of Cores:	6
  L2 Cache (per Core):	256 KB
  L3 Cache:	9 MB
  Hyper-Threading Technology:	Enabled
  Memory:	16 GB
  Boot ROM Version:	1037.0.78.0.0 (iBridge: 17.16.10572.0.0,0)
```
We use `fuse_setup()` and then `fuse_loop_mt()`. In Finder if you eject the volume, `fuse_loop_mt` exits with 0. Is there a way to hook into this functionality to provide better user experience, such as prompting the user to quit the client program?
Hello,
It seems to be a problem with deleting the .docx files using the LoopbackFS sample project (https://github.com/osxfuse/filesystems) on OSX Catalina. When deleting the .docx file, the callback removeItemAtPath is not called, and after the file is gone, a temp file .fuse_hidden0000 appears in the same directory. Do you know any solutions for this? Thanks in advance.
My file system is using the fuse argument parsing helpers, i.e. a construct like this
```
        struct fuse_args args = FUSE_ARGS_INIT(argc, argv);
        if (fuse_opt_parse(&args, NULL, myfs_opts, myfs_opt_proc))
                return -1;
```
This let me do things like
```
$ ./myfs -h
usage: myfs source mountpoint [options]

general options:
    -o opt,[opt...]        mount options
    -h   --help            print help
    -V   --version         print version

FUSE options:
    -d   -o debug          enable debug output (implies -f)
    -f                     foreground operation
    -s                     disable multi-threaded operation

    -o allow_other         allow access to other users
    -o allow_root          allow access to root
    -o auto_unmount        auto unmount on process termination
    -o nonempty            allow mounts over non-empty file/dir
    -o default_permissions enable permission checking by kernel
    -o fsname=NAME         set filesystem name
    -o subtype=NAME        set filesystem type
    -o large_read          issue large read requests (2.4 only)
    -o max_read=N          set maximum size of read requests

    -o hard_remove         immediate removal (don't hide files)
    -o use_ino             let filesystem set inode numbers
    -o readdir_ino         try to fill in d_ino in readdir
    -o direct_io           use direct I/O
    -o kernel_cache        cache files in kernel
    -o [no]auto_cache      enable caching based on modification times (off)
    -o umask=M             set file permissions (octal)
    -o uid=N               set file owner
    -o gid=N               set file group
    -o entry_timeout=T     cache timeout for names (1.0s)
    -o negative_timeout=T  cache timeout for deleted names (0.0s)
    -o attr_timeout=T      cache timeout for attributes (1.0s)
    -o ac_attr_timeout=T   auto cache timeout for attributes (attr_timeout)
    -o noforget            never forget cached inodes
    -o remember=T          remember cached inodes for T seconds (0s)
    -o nopath              don't supply path if not necessary
    -o intr                allow requests to be interrupted
    -o intr_signal=NUM     signal to send on interrupt (10)
    -o modules=M1[:M2...]  names of modules to push onto filesystem stack

    -o max_write=N         set maximum size of write requests
    -o max_readahead=N     set maximum readahead
    -o max_background=N    set number of maximum background requests
    -o congestion_threshold=N  set kernel's congestion threshold
    -o async_read          perform reads asynchronously (default)
    -o sync_read           perform reads synchronously
    -o atomic_o_trunc      enable atomic open+truncate support
    -o big_writes          enable larger than 4kB writes
    -o no_remote_lock      disable remote file locking
    -o no_remote_flock     disable remote file locking (BSD)
    -o no_remote_posix_lock disable remove file locking (POSIX)
    -o [no_]splice_write   use splice to write to the fuse device
    -o [no_]splice_move    move data while splicing to the fuse device
    -o [no_]splice_read    use splice to read from the fuse device

Module options:

[iconv]
    -o from_code=CHARSET   original encoding of file names (default: UTF-8)
    -o to_code=CHARSET      new encoding of the file names (default: UTF-8)

[subdir]
    -o subdir=DIR           prepend this directory to all paths (mandatory)
    -o [no]rellinks         transform absolute symlinks to relative
```
But when doing this on OS X I get this
```
usage: myfs source mountpoint [options]

general options:
    -o opt,[opt...]        mount options
    -h   --help            print help
    -V   --version         print version

FUSE options:
    -d   -o debug          enable debug output (implies -f)
    -f                     foreground operation
    -s                     disable multi-threaded operation

fuse: no mount point
```
I.e. there is both an error thrown about a missing mount point and (I assume here OSXFUSE has a lot of options) missing display of available mount options too.
Is OSXFUSE not fully supporting the Linux reference implementation of _fuse_opt_parse()_?

In the the callback _myfs_opt_proc()_, this is what is done when the help key is found
```
        case OPT_KEY_HELP:
                fprintf(stderr,
                        "usage: %s source mountpoint [options]\n"
                        "\n"
                        "general options:\n"
                        "    -o opt,[opt...]        mount options\n"
                        "    -h   --help            print help\n"
                        "    -V   --version         print version\n"
                        "\n", outargs->argv[0]);
                fuse_opt_add_arg(outargs, "-ho");
                fuse_main(outargs->argc, outargs->argv,
                                &dummy_ops, NULL);
                exit(0);
```
This comes from some example code from FUSE.
I can only guess it is here somewhere it goes south. Any suggestion what can be done to make this work also on OSXFUSE?

Just for info, the exact same sequence works as expected on other FUSE like clones, such as _WinFSP/Cygfuse_ and _Dokan_. If I remember correctly it also works on FreeBSD, but unfortunately I cannot verify that right now.

Or is it so simple that there are no more options to present?
Hi,

I got a new Mac, the OS version is macOS Mojave, 10.14.6. Then, I try to install osxfuse with the command "brew cask install osxfuse", but the installation is failed. I searched online and tried "csrutil disable" to recreate the /var/folders/zz files, but doesn't help. Below is the error logs. Does anyone have an idea about this error? Thanks in advance!

2019-10-10 11:40:11-07 QIOWU-M-71WQ shove[2466]: dstParentPath = /Library/Filesystems/osxfuse.fs/Contents/Resources/uninstall_osxfuse.app/Contents/_CodeSignature NSFileOwnerAccountID=0 NSFileSystemFileNumber=1228292 NSFileExtensionHidden=0 NSFileSystemNumber=16777220 NSFileSize=96 NSFileGroupOwnerAccountID=0 NSFileOwnerAccountName=root NSFileCreationDate=2018-07-01 17:01:02 +0000 NSFilePosixPermissions=493 NSFileType=NSFileTypeDirectory NSFileGroupOwnerAccountName=wheel NSFileReferenceCount=3 NSFileModificationDate=2018-07-01 17:01:02 +0000
2019-10-10 11:40:11-07 QIOWU-M-71WQ install_monitor[2441]: Re-included: /Applications, /Library, /System, /bin, /private, /sbin, /usr
2019-10-10 11:40:11-07 QIOWU-M-71WQ installd[2440]: PackageKit: releasing backupd
2019-10-10 11:40:11-07 QIOWU-M-71WQ installd[2440]: PackageKit: allow user idle system sleep
2019-10-10 11:40:11-07 QIOWU-M-71WQ installd[2440]: PackageKit: Install Failed: Error Domain=PKInstallErrorDomain Code=120 "An unexpected error occurred while moving files to the final destination." UserInfo={NSLocalizedDescription=An unexpected error occurred while moving files to the final destination., arguments=(
            "-f",
            "-s",
            "/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/C/PKInstallSandboxManager/EAD5F924-5AFB-4785-A4F9-44C7FBB28BF8.activeSandbox/Root",
            "/"
        ), NSUnderlyingError=0x7f9658f16800 {Error Domain=NSPOSIXErrorDomain Code=13 "Permission denied"}} {
            NSLocalizedDescription = "An unexpected error occurred while moving files to the final destination.";
            NSUnderlyingError = "Error Domain=NSPOSIXErrorDomain Code=13 \"Permission denied\"";
            arguments =     (
                "-f",
                "-s",
                "/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/C/PKInstallSandboxManager/EAD5F924-5AFB-4785-A4F9-44C7FBB28BF8.activeSandbox/Root",
                "/"
            );
        }
2019-10-10 11:40:11-07 QIOWU-M-71WQ installd[2440]: PackageKit: Running idle tasks
2019-10-10 11:40:11-07 QIOWU-M-71WQ installd[2440]: PackageKit: Removing client PKInstallDaemonClient pid=2439, uid=0 (/usr/sbin/installer)
2019-10-10 11:40:11-07 QIOWU-M-71WQ installer[2439]: install:didFailWithError:Error Domain=PKInstallErrorDomain Code=120 "An unexpected error occurred while moving files to the final destination." UserInfo={NSUnderlyingError=0x7f90a0663060 {Error Domain=NSPOSIXErrorDomain Code=13 "Permission denied"}, NSLocalizedDescription=An unexpected error occurred while moving files to the final destination., arguments=(
            "-f",
            "-s",
            "/var/folders/zz/zyxvpxvq6csfxvn_n0000000000000/C/PKInstallSandboxManager/EAD5F924-5AFB-4785-A4F9-44C7FBB28BF8.activeSandbox/Root",
            "/"
        )}
2019-10-10 11:40:11-07 QIOWU-M-71WQ installd[2440]: PackageKit: Done with sandbox removals
2019-10-10 11:40:11-07 QIOWU-M-71WQ installer[2439]: Install failed: The Installer encountered an error that caused the installation to fail. Contact the software manufacturer for assistance.

Best regards,
Qiong
No error while installing or mounting, but  it actually not getting mounted. ls to the mountpoint is blank.

$ sshfs -V
SSHFS version 2.5 (OSXFUSE SSHFS 2.5.0)
OSXFUSE 3.10.3
FUSE library version: 2.9.7
fuse: no mount point

Hello, bfleischer.

In Catalina Beta 9 (19A573a), Image files not opening through Finder and not showing thumbnail.
I think that it is similar to #615 issue.

You said that it was caused by a bug in Catalina and already fixed by Apple, 
but Preview application still cannot open the image files with “direct_io” mount option.
On the other hand, QuickTime Player works fine with audio or video files.

LoopbackFS example added “direct_io” mount option also has same issue.

Please check this issue.
Thanks!
call func "resourceAttributes",set icon for folder
in macOS 10.14 , icon sometimes incorrect