**Describe the bug**
When pointing satis to a Gitlab repo, it chooses a dist url that mirrors the source url instead of finding the Gitlab Release and using the dist zip artifact. 

**To Reproduce**
Make your `satis.json` look like this;
```
{
 "repositories": [
    { "type": "vcs", "url": "git@gitlab.com:group-name/project-name.git" },
  ],
  "require-all": true
}
```

Then run `satis build satis.json` and satis will create a packages.json that looks like this:

```
{
    "packages": {
        "group-name/project-name": {
            "v1.0.1": {
                "name": "group-name/project-name",
                "version": "v1.0.1",
                "version_normalized": "1.0.1.0",
                "source": {
                    "type": "git",
                    "url": "git@gitlab.com:group-name/project-name.git",
                    "reference": "68da091ec3d6891e8519095a8066b28eb2261c20"
                },
                "dist": {
                    "type": "zip",
                    "url": "https://gitlab.com/api/v4/projects/group-name%2Fproject-name/repository/archive.zip?sha=68da091ec3d6891e8519095a8066b28eb2261c20",
                    "reference": "68da091ec3d6891e8519095a8066b28eb2261c20",
                    "shasum": ""
                },
                "require": {
                    "composer/installers": "v1.0.6"
                },
                "require-dev": {
                    "wp-coding-standards/wpcs": "^2.2"
                },
                "time": "2020-01-13T04:39:57+00:00",
                "type": "wordpress-plugin"
            }
    }
}
```

**Expected behavior**

The dist is supposed to be a distributable build of my app, NOT the source code version stored in git. The dist version's scripts are minified, css is build from sass, and various other things have been optimized. The dist version is stored as a zip artifact referenced by the Gitlab Release.

The above dist.url is simply an API call to Gitlab to generate a zip of the files *as they appear within the git repo!* 

I expected satis to use the carefully constructed zip distributable that's associated with the Release. In my case, the url points to a Gitlab-CI artifact:

```
        "dist": {
                    "type": "zip",
                    "url": "https://gitlab.com/api/v4/projects/11301246/jobs/400678589/artifacts/project-name-1.0.1.zip",
                    "reference": "68da091ec3d6891e8519095a8066b28eb2261c20",
                    "shasum": ""
                },
```


**Describe the bug**
For repository "type:gitlab".
[Satisfy](https://github.com/ludofleury/satisfy/issues/116) is not working with "rearchive:false" option in "archive" section=download existing archive.

**To Reproduce**
Create satis.json with :
`
"repositories": [
        {
            "type": "gitlab",
            "url": "http://mygitlabrep/test/test.git",
            "installation-source": "dist"
        },
        ...
],
"archive": {
        "format": "zip",
        "rearchive": false, 
         ...
        "checksum": true
}
`
execute:
`
./bin/satis build satis.json web --no-ansi --verbose --repository-url=http://mygitlabrep/test/test.git --repository-strict
`

**Outcome**
``In Filesystem.php line 286:

[ErrorException]
copy(/tmp/composer_archiver5de50e72b0140/archive.zip?sha=686b4b3598e5314db0a5757590f0282413e02b41): failed to open stream: No such file or directory

Exception trace:
at /var/www/satisfy/vendor/composer/composer/src/Composer/Util/Filesystem.php:286
Composer\Util\ErrorHandler::handle() at n/a:n/a
copy() at /var/www/satisfy/vendor/composer/composer/src/Composer/Util/Filesystem.php:286
Composer\Util\Filesystem->copy() at /var/www/satisfy/vendor/composer/composer/src/Composer/Util/Filesystem.php:266
Composer\Util\Filesystem->copyThenRemove() at /var/www/satisfy/vendor/composer/composer/src/Composer/Util/Filesystem.php:343
Composer\Util\Filesystem->rename() at /var/www/satisfy/vendor/composer/satis/src/Builder/ArchiveBuilder.php:258
Composer\Satis\Builder\ArchiveBuilder->archive() at /var/www/satisfy/vendor/composer/satis/src/Builder/ArchiveBuilder.php:139
Composer\Satis\Builder\ArchiveBuilder->dump() at /var/www/satisfy/vendor/composer/satis/src/Console/Command/BuildCommand.php:195
Composer\Satis\Console\Command\BuildCommand->execute() at /var/www/satisfy/vendor/symfony/console/Command/Command.php:255
Symfony\Component\Console\Command\Command->run() at /var/www/satisfy/vendor/symfony/console/Application.php:934
Symfony\Component\Console\Application->doRunCommand() at /var/www/satisfy/vendor/symfony/console/Application.php:273
Symfony\Component\Console\Application->doRun() at /var/www/satisfy/vendor/composer/satis/src/Console/Application.php:56
Composer\Satis\Console\Application->doRun() at /var/www/satisfy/vendor/symfony/console/Application.php:149
Symfony\Component\Console\Application->run() at /var/www/satisfy/vendor/composer/satis/bin/satis:26`

**Expected behavior**
Archive for gitlab repository downloaded and stored in "dist" directory.

**Additional context**
There's no "archive.zip?sha=686b4b3598e5314db0a5757590f0282413e02b41" in directory, for corresponding commit, but it has simple "/tmp/composer_archiver5de50e72b0140/archive.zip" file.
So, question is-why satis tries to create file with name including hash it downloaded from.

```bash
composer_1  | Downloading https://packages.drupal.org/8/drupal/rules_ui%244f53cda18c2baa0c0354bb5f9a3ecbe5ed12ab4d8e11ba873c2f11161202b945.json
composer_1  | Writing /composer/cache/repo/https---packages.drupal.org-8/provider-drupal$rules-ui.json into cache
composer_1  | 
composer_1  | In ComposerRepository.php line 376:
composer_1  |                              
composer_1  |   [ErrorException]           
composer_1  |   Undefined index: packages  
composer_1  |                              
composer_1  | 
composer_1  | Exception trace:
composer_1  |   at /satis/vendor/composer/composer/src/Composer/Repository/ComposerRepository.php:376
composer_1  |  Composer\Util\ErrorHandler::handle() at /satis/vendor/composer/composer/src/Composer/Repository/ComposerRepository.php:376
composer_1  |  Composer\Repository\ComposerRepository->whatProvides() at /satis/vendor/composer/composer/src/Composer/DependencyResolver/Pool.php:204
composer_1  |  Composer\DependencyResolver\Pool->computeWhatProvides() at /satis/vendor/composer/composer/src/Composer/DependencyResolver/Pool.php:193
composer_1  |  Composer\DependencyResolver\Pool->whatProvides() at /satis/src/PackageSelection/PackageSelection.php:685
composer_1  |  Composer\Satis\PackageSelection\PackageSelection->selectLinks() at /satis/src/PackageSelection/PackageSelection.php:188
composer_1  |  Composer\Satis\PackageSelection\PackageSelection->select() at /satis/src/Console/Command/BuildCommand.php:184
composer_1  |  Composer\Satis\Console\Command\BuildCommand->execute() at /satis/vendor/symfony/console/Command/Command.php:255
composer_1  |  Symfony\Component\Console\Command\Command->run() at /satis/vendor/symfony/console/Application.php:934
composer_1  |  Symfony\Component\Console\Application->doRunCommand() at /satis/vendor/symfony/console/Application.php:273
composer_1  |  Symfony\Component\Console\Application->doRun() at /satis/src/Console/Application.php:49
composer_1  |  Composer\Satis\Console\Application->doRun() at /satis/vendor/symfony/console/Application.php:149
composer_1  |  Symfony\Component\Console\Application->run() at /satis/bin/satis:26
composer_1  | 
composer_1  | build [--repository-url [REPOSITORY-URL]] [--repository-strict] [--no-html-output] [--skip-errors] [--stats] [--] [<file> [<output-dir> [<packages>...]]]
composer_1  | 
drupal-composer-mirror_composer_1 exited with code 1
```

`/composer/cache/repo/https---packages.drupal.org-8/provider-drupal$rules-ui.json` file's content is an empty array.
**Describe the bug**
I am getting an array to string conversion error when attempting to build a specific package.

**To Reproduce**
Specify a package for the build command.

**Outcome**
```Loading config file /home/dkinne000/.composer/config.json
Loading config file /home/dkinne000/.composer/auth.json
Checked CA file /etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem: valid
Executing command (/var/www/cdxoc/html/satis): git branch --no-color --no-abbrev -v
Executing command (/var/www/cdxoc/html/satis): git describe --exact-match --tags
Executing command (/var/www/cdxoc/html/satis): git log --pretty="%H" -n1 HEAD
Executing command (/var/www/cdxoc/html/satis): hg branch
Executing command (/var/www/cdxoc/html/satis): fossil branch list
Executing command (/var/www/cdxoc/html/satis): fossil tag list
Executing command (/var/www/cdxoc/html/satis): svn info --xml
Failed to initialize global composer: Composer could not find the config file: /home/dkinne000/.composer/composer.json
To initialize a project, please create a composer.json file as described in the https://getcomposer.org/ "Getting Started" section
Reading /var/www/cdxoc/html/satis/vendor/composer/installed.json
Scanning packages

In PackageSelection.php line 182:
                              
  [ErrorException]            
  Array to string conversion  
                              

Exception trace:
  at /var/www/cdxoc/html/satis/src/PackageSelection/PackageSelection.php:182
 Composer\Util\ErrorHandler::handle() at n/a:n/a
 sprintf() at /var/www/cdxoc/html/satis/src/PackageSelection/PackageSelection.php:182
 Composer\Satis\PackageSelection\PackageSelection->select() at /var/www/cdxoc/html/satis/src/Console/Command/BuildCommand.php:183
 Composer\Satis\Console\Command\BuildCommand->execute() at /var/www/cdxoc/html/satis/vendor/symfony/console/Command/Command.php:255
 Symfony\Component\Console\Command\Command->run() at /var/www/cdxoc/html/satis/vendor/symfony/console/Application.php:934
 Symfony\Component\Console\Application->doRunCommand() at /var/www/cdxoc/html/satis/vendor/symfony/console/Application.php:273
 Symfony\Component\Console\Application->doRun() at /var/www/cdxoc/html/satis/src/Console/Application.php:49
 Composer\Satis\Console\Application->doRun() at /var/www/cdxoc/html/satis/vendor/symfony/console/Application.php:149
 Symfony\Component\Console\Application->run() at /var/www/cdxoc/html/satis/bin/satis:26

build [--repository-url [REPOSITORY-URL]] [--repository-strict] [--no-html-output] [--skip-errors] [--stats] [--] [<file> [<output-dir> [<packages>...]]]
```

**Expected behavior**
I expect Satis to reprocess the specified package.

**Additional context**
According to git bisect, the issue started with a July 10th commit:
```969905e4ef3217cf51319a24beca5e56d607c649 is the first bad commit
commit 969905e4ef3217cf51319a24beca5e56d607c649
Author: Pierre <pierre.basile@gmail.com>
Date:   Wed Jul 10 16:37:42 2019 +0200

    Update only one package / Add using documentation

:040000 040000 e628dba5982aa296d8b6fdf6110e5840f18518f4 5db09b717cc3644f5fda268eaef9dd97f874373c M      docs
:040000 040000 c71d67350e3fa975eaf9db22e2cddb5344a541b3 8b54082f022873c58f7176a7efc8c50510ff707a M      src
```

## --skip-errors NOT WORKING

My Commend: 

```shell 
php -d memory_limit=-1 bin/satis build satis.json web/ -v  --skip-errors 
```

Error Logs:

```shell


In RemoteFilesystem.php line 440:

  [Composer\Downloader\TransportException (404)]
  The "https://mirrors.aliyun.com/composer/p/web-ant/webant-corebundle%24f65f
  c56b2a887dfa8ae7c8550b26163f91d367ac5d63e5e9468b31c3bdccdcc3.json" file cou
  ld not be downloaded (HTTP/1.1 404 Not Found)

Exception trace:
  at /home/work/Kalista/vendor/composer/composer/src/Composer/Util/RemoteFilesystem.php:440
 Composer\Util\RemoteFilesystem->get() at /home/work/Kalista/vendor/composer/composer/src/Composer/Util/RemoteFilesystem.php:104
 Composer\Util\RemoteFilesystem->getContents() at /home/work/Kalista/vendor/composer/composer/src/Composer/Repository/ComposerRepository.php:687
 Composer\Repository\ComposerRepository->fetchFile() at /home/work/Kalista/vendor/composer/composer/src/Composer/Repository/ComposerRepository.php:358
 Composer\Repository\ComposerRepository->whatProvides() at /home/work/Kalista/vendor/composer/composer/src/Composer/DependencyResolver/Pool.php:204
 Composer\DependencyResolver\Pool->computeWhatProvides() at /home/work/Kalista/vendor/composer/composer/src/Composer/DependencyResolver/Pool.php:193
 Composer\DependencyResolver\Pool->whatProvides() at /home/work/Kalista/src/PackageSelection/PackageSelection.php:632
 Composer\Satis\PackageSelection\PackageSelection->selectLinks() at /home/work/Kalista/src/PackageSelection/PackageSelection.php:169
 Composer\Satis\PackageSelection\PackageSelection->select() at /home/work/Kalista/src/Console/Command/BuildCommand.php:183
 Composer\Satis\Console\Command\BuildCommand->execute() at /home/work/Kalista/vendor/symfony/console/Command/Command.php:255
 Symfony\Component\Console\Command\Command->run() at /home/work/Kalista/vendor/symfony/console/Application.php:934
 Symfony\Component\Console\Application->doRunCommand() at /home/work/Kalista/vendor/symfony/console/Application.php:273
 Symfony\Component\Console\Application->doRun() at /home/work/Kalista/src/Console/Application.php:49
 Composer\Satis\Console\Application->doRun() at /home/work/Kalista/vendor/symfony/console/Application.php:149
 Symfony\Component\Console\Application->run() at /home/work/Kalista/bin/satis:26
```
I have a set of github packages in my `satis.json` like:
```
  "repositories": [
    {
      "type": "git",
      "url": "git@github.com:user/package.git"
    },
```
and satis generates a page with Release links like:
```
http://myhomepage.com/git@github.com:user/package.git
```
which is obviously wrong. How to produce correct links?
# What I did

I'm running satis in Jenkins with the command `/satis/bin/satis build --no-interaction --no-ansi composer.json /build/out`

# What I expected to happen

I expected there to be no ansi control characters in the the output.

# What actually happened

I get the following output with ansi control characters:

```
[0m [91m
Reading composer.json of 99designs/phumbor (0.1.0)
 [0m [91m
 [0m [91mReading composer.json of 99designs/phumbor (0.1.1) [0m [91m
Reading composer.json of 99designs/phumbor (0.1.2) [0m [91m
Reading composer.json of 99designs/phumbor (0.1.3) [0m [91m
Reading composer.json of 99designs/phumbor (1.0.0) [0m [91m
Reading composer.json of 99designs/phumbor (1.0.1) [0m [91m
Reading composer.json of 99designs/phumbor (1.0.2) [0m [91m
Reading composer.json of 99designs/phumbor (1.1.0) [0m [91m
Reading composer.json of 99designs/phumbor (1.2.0) [0m [91m
Reading composer.json of 99designs/phumbor (1.2.1) [0m [91m
Reading composer.json of 99designs/phumbor (1.2.2) [0m [91m
 [0m [91mReading composer.json of 99designs/phumbor (cloneable-url-builder) [0m [91m
Reading composer.json of 99designs/phumbor (fix-urlencoding)
 [0m [91m
Reading composer.json of 99designs/phumbor (master)
 [0m [91mReading composer.json of squizlabs/php_codesniffer (1.3.1) 
```
Hello,
On BuildCommand if we have a package/repository filter, we load all packages to dump them with the PackagesBuilder :
```
if ($packageSelection->hasFilterForPackages() || $packageSelection->hasRepositoryFilter()) {
    // in case of an active filter we need to load the dumped packages.json and merge the
    // updated packages in
    $oldPackages = $packageSelection->load();
    $packages += $oldPackages;
    ksort($packages);
}

$packagesBuilder = new PackagesBuilder($output, $outputDir, $config, $skipErrors);
$packagesBuilder->dump($packages);
``` 

Is it really needed if providers option is enabled ?
If no, I can create a pull request to change the code
Using the latest version from master, specifying vcs (git) over http, Satis is requesting the password when the credentials are present in `auth.json` in Composer's home.

Giving it the password, it succeeds but doesn't offer to install them in the auth.json file.

running -vvv is states to following 2 lines:
```
Loading config file /home/ubuntu/.composer/config.json
Loading config file /home/ubuntu/.composer/auth.json
```

Oddly, running `composer exec satis build satis.json public` it works fine, albeit there's not Stdout. Suggesting there's an issue with the way the satis binary is reading the auth file?

When I set `only-best-candidates` flag, there is a situation I've found where Composer is calculating the wrong package. I cannot be sure it's a satis problem. I've not finished testing this, but wanted to capture the beginning of what I have.

The full satis.json is:
```
{
    "name": "govcms/satis-test",
    "homepage": "https://satis.govcms.gov.au",
    "repositories": [
        { "type": "composer", "url": "https://packagist.org" },
        { "type": "composer", "url": "https://packages.drupal.org/8" },
        { "type": "composer", "url": "https://asset-packagist.org" },
        { "type": "vcs", "url": "https://github.com/simesy/scaffold-tooling" }
    ],
    "require": {
        "govcms/govcms": "1.0-beta6",
        "simesy/scaffold-tooling": "dev-master"
    },
    "require-dependencies": true,
    "only-best-candidates": true
}
```

`govcms/govcms:1.0-beta6` requires `drupal/chosen:2.6`, while the latest version is 2.7. The relevant parts of the "chosen" packages coming from https://packages.drupal.org/8. 

## drupal/chosen

```
 "2.7.0":{
	"homepage":"https:\/\/www.drupal.org\/project\/chosen",
	"version":"2.7.0",
	"version_normalized":"2.7.0.0",
	"type":"drupal-module",
	"name":"drupal\/chosen",
	"require":{
	   "drupal\/chosen_lib":"*",
	   "drupal\/core":"~8.0"
	}
 },
 "2.6.0":{
	"homepage":"https:\/\/www.drupal.org\/project\/chosen",
	"version":"2.6.0",
	"version_normalized":"2.6.0.0",
	"type":"drupal-module",
	"name":"drupal\/chosen",
	"require":{
	   "drupal\/chosen_lib":"*",
	   "drupal\/core":"~8.0"
	}
 },
```

## drupal/chosen_lib

```
 "2.7.0":{
	"homepage":"https:\/\/www.drupal.org\/project\/chosen",
	"version":"2.7.0",
	"version_normalized":"2.7.0.0",
	"type":"metapackage",
	"name":"drupal\/chosen_lib",
	"require":{
	   "drupal\/chosen":"self.version",
	   "drupal\/core":"~8.0"
	}
 },
 "2.6.0":{
	"homepage":"https:\/\/www.drupal.org\/project\/chosen",
	"version":"2.6.0",
	"version_normalized":"2.6.0.0",
	"type":"metapackage",
	"name":"drupal\/chosen_lib",
	"require":{
	   "drupal\/chosen":"self.version",
	   "drupal\/core":"~8.0"
	}
 },
 
 ```

The resulting satis repo, when used as a source for `govcms/govcms:1.0-beta6`, results in only chosen 2.7. But logically, when getting the "best candidate" for drupal/chosen_lib, composer should determine that govcms requires chosen 2.6, which is constrained to chosen_lib 2.6.

I feel the use of "self.version" is having an impact here. 

When building a site the outcome is:

```
Loading composer repositories with package information
Updating dependencies (including require-dev)
Your requirements could not be resolved to an installable set of packages.

  Problem 1
    - drupal/chosen_lib 2.7.0 requires drupal/chosen 2.7.0 -> satisfiable by drupal/chosen[2.7.0].
    - drupal/chosen 2.6.0 requires drupal/chosen_lib * -> satisfiable by drupal/chosen_lib[2.7.0].
    - Can only install one of: drupal/chosen[2.7.0, 2.6.0].
    - govcms/govcms 1.0.0-beta6 requires drupal/chosen 2.6.0 -> satisfiable by drupal/chosen[2.6.0].
    - Installation request for govcms/govcms * -> satisfiable by govcms/govcms[1.0.0-beta6].
```










