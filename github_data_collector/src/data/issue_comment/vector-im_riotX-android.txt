Riot-Web provides a collection of frequently used reactions above the usual reaction list. Would be cool if RiotX could do the same. As that usually is a frequently used action, it might make sense to for example display a second row above or below the default reactions with those person-specific favorites (instead of putting these into the big emoji-selector, for which you have to press the menu item to get into).
It would be nice to have the option to hide everything that is not a message.
Hide things such as joins, exits, name changes, avatar changes, etc.
Since updating to build 0.14.0-dev-1623 the app crashes on startup: the riot logo briefly shows before it crashes.
It seems that Riot-Web has changed some wording when profile element are set/changed:

<img width="298" alt="image" src="https://user-images.githubusercontent.com/3940906/72666065-ee49f980-3a0e-11ea-919e-f1c29e445acc.png">

@nadonomy is it something we also have to report on mobile clients?
steps:
 1. send spam into a room
 2. "delete recent messages by user" in riot web
 3. open in riotxâ€”it will refuse to load messages beyond this point
None
I'm mainly going to be using Riot for work, though even if I'm not, I don't want notifications over night.

Please could we have a setting in notifications to allow turning them off between certain times that we can choose?
When I'm viewing the room list in dark mode, there's a indicator bar on the side which generally indicates new messages.

However, it also indicates when there's only joins/parts or other admin type information.

As a user, I don't want to be going through the rooms thinking there's new messages just to find out that someone has joined or has changed their profile picture.
To calm down those alarming badges:

<img width="369" alt="image" src="https://user-images.githubusercontent.com/3940906/72635422-1c6f0100-395d-11ea-9d3c-c42935ecbf6f.png">

To reproduce:
- jump to first unread message, or clicking to a permalink.
- Scroll to the live
- The SDK is forward paginating, new events are coming from the server
- Well we reach the live chunk (i.e. the gap is filled), we observe that the list scroll to the bottom.

It can be super annoying if the live chunk was big.

The considered solution is to add a new SendState `SYNCED_PAGINATION`, to distinguish if the event comes from the sync (so is live and timeline should automatically scroll, or from pagination, so the timeline should not automatically scroll.