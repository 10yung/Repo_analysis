Memory is allocated

https://github.com/google/brotli/blob/ee2a5e1540cbd6ef883a897499d9596307f7f7f9/research/brotli_decoder.c#L57

but at the end of function，never free it
There is no check for the failed malloc
https://github.com/google/brotli/blob/ee2a5e1540cbd6ef883a897499d9596307f7f7f9/c/fuzz/run_decode_fuzzer.c#L29

This in turn would cause a segfault， when buff is dereferenced
https://github.com/google/brotli/blob/ee2a5e1540cbd6ef883a897499d9596307f7f7f9/c/fuzz/run_decode_fuzzer.c#L30
In recent benchmarks  comparing brotli with other compressors, we see that brotli is often tested with a small lz window size. [TurboBench-Compression Benchmark](https://github.com/powturbo/TurboBench) is using large window brotli as default in the quality modes 10 and 11. Only the quality mode must be given as parameter to evaluate brotli.

Thanks to the submodule architecture Turbobench is frequently updated as other benchmarks.
I suggest putting a link on the brotli github repository, so to reduce the mistakes done by using sub-optimal options and to reduce the effect of other factors like I/O. 
see also the response from Jyrki Alakuijala in this [post](https://encode.su/threads/2119-Zstandard?p=62927&viewfull=1#post62927)
Hello,

I success to build Brotli and dictionary_generator with Bazel.
But how to create dictionary ? There is no example into cpp file.
I try `dictionary_generator.exe DICTIONARY` but help says there is `not enough argument`.

Maybe can you provide some full examples ?
'fin' is defined here, but may be NULL, please check 'if(fin == NULL)'

https://github.com/google/brotli/blob/ee2a5e1540cbd6ef883a897499d9596307f7f7f9/research/draw_histogram.cc#L178
Fixes #781
Related: #341, #351.

The underlying issue of log2 availability is fixed. However the cmake script still emits a FATAL_ERROR if the log2 function is not found at configure time:

https://github.com/google/brotli/blob/c435f066751ef83aa4194445085a70ad9d193704/CMakeLists.txt#L114

Simply removing the line is enough to build with `__ANDROID__` == 15.






I think that it would be good to flush currently committed changes and make new release :)

Hello. I see brotli provides a wide list of errors:

```
#define BROTLI_DECODER_ERROR_CODES_LIST...
/* Errors caused by invalid input */
...
/* Memory allocation problems */
...
```

Today all these error codes have only one group: `BROTLI_DECODER_RESULT_ERROR`.

```
static BROTLI_NOINLINE BrotliDecoderResult SaveErrorCode(
  BrotliDecoderState* s, BrotliDecoderErrorCode e) {
  ...
  switch (e) {
    ...
    default:
      return BROTLI_DECODER_RESULT_ERROR;
  } 
}
```

So if user want to know when decoder received corrupted source he have to list all **16 codes**. It makes too tight and unreliable connection between brotli implementation and application.

Can you please provide several error groups like: `BROTLI_DECODER_RESULT_CORRUPTED_SOURCE`, `BROTLI_DECODER_RESULT_ALLOCATION_FAILED` and etc? Thank you.
At least two reasons.

1. `decode.h` and `encode.h` both refer to `BROTLI_VERSION`.
2. CMake support would be improved; a file `FindBrotli.cmake` could easily return a version number in environments where `pkg-config` is not available.