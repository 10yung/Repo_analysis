Removes a hole in error codes introduced by removing H3_EARLY_RESPONSE in https://github.com/quicwg/base-drafts/pull/3208
Retry integrity protection (#3120) specifies the AES-GCM key and IV directly. While that works fine for people using TLS stacks that provide direct access to AES-GCM, it does not for people using TLS stacks that only provides access to TLS AEAD API. Previously, we have been consistent in using HKDF-Expand-Label in a specific way so that people could rely on the "TLS" stack generating AEAD contexts.

I think we can resolve the concern by simply changing the hard-coded AES-GCM key and IV we specify in the TLS draft to a set of values that can be derived by using the TLS AEAD API.
Closes #3366.
Fixes #3363
The presentation on low latency TCP options presents a way to convey max ack delay of ms, us and ns.  I don't think we need to do ns(?) in QUIC, but it's clear datacenter use cases will want us, so I believe we should change from ms to us.
https://datatracker.ietf.org/meeting/99/materials/slides-99-tcpm-tcp-low-latency-option-00


Notes that ack delays are right shifted by ack_delay_exponent when transmitted in ACK frames.

Fixes #3355
Fixes #3357
Fixes #3325.

Pleasantly, the same formula we've used for grease values elsewhere in HTTP/3 does not collide with any currently-assigned error code, so I've just reused it.  (We'll need to be cautious about 0x119, though.)  The same logic could be applied to transport error codes, but there's not much point.  If you're intolerant of the way your peer closed the connection, you might erroneously... close the connection?

Editorial-ish:  A recommendation which reserves some error code space we haven't used; modifies the IANA instructions.  Doesn't mandate or prohibit anything new.
Fixes #3334.

I decided to keep this pretty simple and leave the use or lack thereof unspecified, since we already know there's variation there.  I was hoping to avoid creating conflicts with #3309, but it made more sense to pull the association references into the same paragraph, which that PR also touches.  Sorry, @RyanAtGoogle!

Editorial-ish -- explicitly states a MAY that was previously implicit.
Fixes #3346, using mostly the text proposed in that issue.