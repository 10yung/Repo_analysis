## What happened?

Even though [production.yml](https://github.com/pydanny/cookiecutter-django/blob/master/%7B%7Bcookiecutter.project_slug%7D%7D/production.yml#L60) has Flower configured, [traefik.toml](https://github.com/pydanny/cookiecutter-django/blob/master/%7B%7Bcookiecutter.project_slug%7D%7D/compose/production/traefik/traefik.toml) doesn't contain anything related.

## What should've happened instead?

Flower should be working with Docker.


[//]: # (Thank you for helping us out: your efforts mean great deal to the project and the community as a whole!)

[//]: # (Before you proceed:)

[//]: # (1. Make sure to add yourself to `CONTRIBUTORS.rst` through this PR provided you're contributing here for the first time)
[//]: # (2. Don't forget to update the `docs/` presuming others would benefit from a concise description of whatever that you're proposing)


## Description

[//]: # (What's it you're proposing?)

Remove "os.environ.setdefault(&quot;DATABASE_URL&quot;,&quot;postgres://{}:{}@{}:{}/{}&quot;.format(os.environ['POSTGRES_USER'], os.environ['POSTGRES_PASSWORD'], os.environ['POSTGRES_HOST'], os.environ['POSTGRES_PORT'], os.environ['POSTGRES_DB']))&#10;os.environ.setdefault(&quot;CELERY_BROKER_URL&quot;, os.environ['REDIS_URL'])" from default Django console start script in PyCharm


## Rationale

[//]: # (Why does the project need that?)

Currently django console launch ends with KeyError because of "os.environ['POSTGRES_USER'], os.environ['POSTGRES_PASSWORD']...". This env variables is never mentioned in cookiecutter-django docs and quite confusing. Actually it's unnecessary to set this env variable in this script


## Use case(s) / visualization(s)

[//]: # ("Better to see something once than to hear about it a thousand times.")



## Description

Update files in `docs` directory according to the latest version of Sphinx, and updated related documentation.

## Rationale

Update based on the file content generated by the latest version(2.3.1) of `sphinx-quickstart`.


Rendering custom widgets from the projects root template directory
doesn't work out of the box.

See: https://stackoverflow.com/questions/45844032/django-templatedoesnotexist-in-case-of-a-custom-widget/46208414#46-208414

This changes the setting to use the same template finding logic that the
TEMPLATES setting uses.

## What happened?
On heroku we get errors for static files like
```
Navigated to https://app.herokuapp.com/
app.herokuapp.com/:1 Refused to apply style from 'https://app.herokuapp.com/static/CACHE/css/output.5f8f70551f02.css' because its MIME type ('text/html') is not a supported stylesheet MIME type, and strict MIME checking is enabled.
app.herokuapp.com/:1179 GET https://app.herokuapp.com/static/CACHE/js/output.83a0993870e8.js net::ERR_ABORTED 404 (Not Found)
```

## What should've happened instead?
Static files should simply work on heroku. Do whatever [django-heroku](https://devcenter.heroku.com/articles/django-app-configuration#settings-py-changes) does.

## Steps to reproduce

[//]: make a django-cookiecutter app
[//]: deploy to heroku
[//]: attempt to load a page that uses css or js

on heroku the env var `DJANGO_SETTINGS_MODULE` is `config.settings.production`.

Heroku outputs the following during build
```
$ gp heroku                                             
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 12 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 346 bytes | 346.00 KiB/s, done.                                              
Total 3 (delta 2), reused 0 (delta 0)
remote: Compressing source files... done.
remote: Building source:
remote:
remote: -----> Python app detected
remote:  !     Python has released a security update! Please consider upgrading to python-3.7.5
remote:        Learn More: https://devcenter.heroku.com/articles/python-runtimes
remote: -----> Installing SQLite3
remote: Sqlite3 successfully installed.
remote: -----> Installing requirements with pip
remote:
remote: -----> $ python manage.py collectstatic --noinput
remote:        158 static files copied to '/tmp/build_64a4468323052c69a0e5f3e6dbabba45/staticfiles', 470 post-processed.
remote:
remote: -----> Discovering process types
remote:        Procfile declares types -> release, web, worker
remote:
remote: -----> Compressing...
remote:        Done: 75.5M
remote: -----> Launching...
remote:  !     Release command declared: this new release will not be available until the command succeeds.
remote:        Released v23
remote:        https://app.herokuapp.com/ deployed to Heroku
remote:
remote: Verifying deploy... done.
remote: Running release command...
   b5644f6..7ef0bb1  master -> master
```
we see that django is detected and [heroku runs collectstatic automatically for django apps](https://devcenter.heroku.com/articles/django-assets#collectstatic-during-builds). However the destination is `/tmp/build_<number>/staticfiles`. The django cookiecutter app looks for static assets in `<hostname>/static/CACHE/{css,js}/<compressed_staticfile>.{js,css}`.

Maybe the production config needs to be updated to point to this `tmp` dir heroku makes.
## Django 3.0 support?

[//]: # (What's it you're proposing? How should it be implemented?)
when will django 3.0 be supported?



 

[//]: # (Why should this feature be implemented?)



 

[//]: # ("Better to see something once than to hear about it a thousand times.")



## What happened?

At …
https://github.com/pydanny/cookiecutter-django/blob/efbf164e84998a8d450133bd00c14c07b25bf8c4/%7B%7Bcookiecutter.project_slug%7D%7D/compose/production/django/entrypoint#L1
… it reads `#!/bin/sh` so the script has no guarantee to deal with Bash (and not just a POSIX shell) but then uses Bash features, e.g. `set -o pipefail`.


## What should've happened instead?

I would expect
- a) use of `#! /usr/bin/env bash` or
- b) a true POSIX shell script without use of Bashisms

Thank you!
## What happened?
I am using the precommit hooks as instructed at https://cookiecutter-django.readthedocs.io/en/latest/developing-locally.html

I have also chosen black as my formatter in the wizard as well as in my editor. When I go to commit the following form

```

class FooForm(forms.ModelForm):
    objective = forms.CharField(
        required=False, widget=forms.Textarea(attrs={"placeholder": "Objective",}),
    )

    class Meta:
        model = Foo
        fields = [
            "objective",
        ]
```
I get the error
```
$ gc
Trim Trailing Whitespace.............................(no files to check)Skipped
flake8...................................................................Failed
hookid: flake8

foo/forms.py:10:80: E231 missing whitespace after ','
```
Thats for the CharField trailing comma in the keyword args.

## What should've happened instead?
Flake8 should not complain about black's formatting.

## Steps to reproduce

[//]: make a cookiecutter app and select black
[//]: install precommit hooks
[//]: make a form like mine and attempt to commit

## Solution

Should we add https://github.com/peterjc/flake8-black ?
## What happened?
Multiple things:
- Altough, we set cloud_provider to None, follwing is set in `config/settings/production.py`:
`COMPRESS_STORAGE = "storages.backends.s3boto3.S3Boto3Storage"`
- Compressed static files are not available via Whitenoise, giving an error on page:

`compressor.exceptions.OfflineGenerationError: You have offline compression enabled but key "..." is missing from offline manifest. You may need to run "python manage.py compress"`




## What should've happened instead?
- Compress storage should be set to local configuration:
`COMPRESS_STORAGE = "compressor.storage.GzipCompressorFileStorage"`
- `compose/production/django/start` should be extended to this:
```
python /app/manage.py collectstatic --noinput
python /app/manage.py compress --force
python /app/manage.py collectstatic --noinput
```

See https://stackoverflow.com/questions/58712195/django-whitenoise-with-compressed-staticfiles for further information

## Steps to reproduce
Set up project with following settings:
- use_docker=y
- use_whitenoise=y
- use_compressor=y
- cloud_provider=3 (None)
## What happened?
I follow the instructions for deploying to heroku. When I open the heroku app I see "Internal Server Error". When I review the docs I see
```
2019-11-25T18:32:18.934502+00:00 app[web.1]: return self.render(context)
2019-11-25T18:32:18.934504+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/template/loader_tags.py", line 150, in render                                                                                    
2019-11-25T18:32:18.934506+00:00 app[web.1]: return compiled_parent._render(context)
2019-11-25T18:32:18.934508+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/template/base.py", line 163, in _render                                                                                          
2019-11-25T18:32:18.934510+00:00 app[web.1]: return self.nodelist.render(context)
2019-11-25T18:32:18.934512+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/template/base.py", line 937, in render                                                                                           
2019-11-25T18:32:18.934514+00:00 app[web.1]: bit = node.render_annotated(context)
2019-11-25T18:32:18.934516+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/template/base.py", line 904, in render_annotated                                                                                 
2019-11-25T18:32:18.934518+00:00 app[web.1]: return self.render(context)
2019-11-25T18:32:18.934520+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/template/loader_tags.py", line 62, in render                                                                                     
2019-11-25T18:32:18.934522+00:00 app[web.1]: result = block.nodelist.render(context)
2019-11-25T18:32:18.934524+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/template/base.py", line 937, in render                                                                                           
2019-11-25T18:32:18.934526+00:00 app[web.1]: bit = node.render_annotated(context)
2019-11-25T18:32:18.934527+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/template/base.py", line 904, in render_annotated                                                                                 
2019-11-25T18:32:18.934529+00:00 app[web.1]: return self.render(context)
2019-11-25T18:32:18.934531+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/templatetags/compress.py", line 142, in render                                                                               
2019-11-25T18:32:18.934533+00:00 app[web.1]: return self.render_compressed(context, self.kind, self.mode, forced=forced)                                                                                                                   
2019-11-25T18:32:18.934535+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/templatetags/compress.py", line 110, in render_compressed                                                                    
2019-11-25T18:32:18.934537+00:00 app[web.1]: cache_key, cache_content = self.render_cached(compressor, kind, mode)
2019-11-25T18:32:18.934539+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/templatetags/compress.py", line 88, in render_cached                                                                         
2019-11-25T18:32:18.934541+00:00 app[web.1]: cache_key = get_templatetag_cachekey(compressor, mode, kind)
2019-11-25T18:32:18.934543+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/cache.py", line 104, in get_templatetag_cachekey                                                                             
2019-11-25T18:32:18.934545+00:00 app[web.1]: "templatetag.%s.%s.%s" % (compressor.cachekey, mode, kind))
2019-11-25T18:32:18.934547+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/utils/functional.py", line 80, in __get__                                                                                        
2019-11-25T18:32:18.934549+00:00 app[web.1]: res = instance.__dict__[self.name] = self.func(instance)
2019-11-25T18:32:18.934551+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/base.py", line 200, in cachekey                                                                                              
2019-11-25T18:32:18.934553+00:00 app[web.1]: [self.content] + self.mtimes).encode(self.charset), 12)
2019-11-25T18:32:18.934555+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/utils/functional.py", line 80, in __get__                                                                                        
2019-11-25T18:32:18.934557+00:00 app[web.1]: res = instance.__dict__[self.name] = self.func(instance)
2019-11-25T18:32:18.934559+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/base.py", line 194, in mtimes                                                                                                
2019-11-25T18:32:18.934561+00:00 app[web.1]: for kind, value, basename, elem in self.split_contents()
2019-11-25T18:32:18.934563+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/css.py", line 18, in split_contents                                                                                          
2019-11-25T18:32:18.934565+00:00 app[web.1]: basename = self.get_basename(elem_attribs['href'])
2019-11-25T18:32:18.934567+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/base.py", line 95, in get_basename                                                                                           
2019-11-25T18:32:18.934569+00:00 app[web.1]: base_url = self.storage.base_url
2019-11-25T18:32:18.934571+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/utils/functional.py", line 256, in inner                                                                                         
2019-11-25T18:32:18.934573+00:00 app[web.1]: self._setup()
2019-11-25T18:32:18.934574+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/compressor/storage.py", line 120, in _setup                                                                                             
2019-11-25T18:32:18.934576+00:00 app[web.1]: self._wrapped = get_storage_class(settings.COMPRESS_STORAGE)()
2019-11-25T18:32:18.934578+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/core/files/storage.py", line 358, in get_storage_class                                                                           
2019-11-25T18:32:18.934581+00:00 app[web.1]: return import_string(import_path or settings.DEFAULT_FILE_STORAGE)
2019-11-25T18:32:18.934583+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/site-packages/django/utils/module_loading.py", line 17, in import_string                                                                              
2019-11-25T18:32:18.934585+00:00 app[web.1]: module = import_module(module_path)
2019-11-25T18:32:18.934587+00:00 app[web.1]: File "/app/.heroku/python/lib/python3.7/importlib/__init__.py", line 127, in import_module                                                                                                    
2019-11-25T18:32:18.934589+00:00 app[web.1]: return _bootstrap._gcd_import(name[level:], package, level)
2019-11-25T18:32:18.934596+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
2019-11-25T18:32:18.934598+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 983, in _find_and_load
2019-11-25T18:32:18.934600+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 953, in _find_and_load_unlocked                                                                                                                    
2019-11-25T18:32:18.934602+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed                                                                                                                  
2019-11-25T18:32:18.934604+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
2019-11-25T18:32:18.934606+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 983, in _find_and_load
2019-11-25T18:32:18.934608+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 953, in _find_and_load_unlocked                                                                                                                    
2019-11-25T18:32:18.934610+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 219, in _call_with_frames_removed                                                                                                                  
2019-11-25T18:32:18.934614+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 1006, in _gcd_import
2019-11-25T18:32:18.934616+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 983, in _find_and_load
2019-11-25T18:32:18.934618+00:00 app[web.1]: File "<frozen importlib._bootstrap>", line 965, in _find_and_load_unlocked                                                                                                                    
2019-11-25T18:32:18.934620+00:00 app[web.1]: ModuleNotFoundError: No module named 'storages'
2019-11-25T18:32:18.934622+00:00 app[web.1]: 10.109.218.102 - - [25/Nov/2019:18:32:18 +0000] "GET / HTTP/1.1" 500 0 "-" "-"     
```
pip freeze
```
$ heroku run pip freeze
Running pip freeze on ⬢ foobar... up, run.6133 (Hobby)
amqp==2.5.2
argon2-cffi==19.2.0
Babel==2.7.0
billiard==3.6.1.0
celery==4.3.0
certifi==2019.9.11
cffi==1.13.2
chardet==3.0.4
coreapi==2.3.3
coreschema==0.0.4
defusedxml==0.6.0
Django==2.2.7
django-allauth==0.40.0
django-anymail==7.0.0
django-appconf==1.0.3
django-celery-beat==1.5.0
django-compressor==2.3
django-crispy-forms==1.8.0
django-environ==0.4.5
django-model-utils==3.2.0
django-redis==4.10.0
django-timezone-field==3.1
djangorestframework==3.10.3
flower==0.9.3
gunicorn==20.0.0
idna==2.8
importlib-metadata==0.23
itypes==1.1.0
Jinja2==2.10.3
kombu==4.6.6
MarkupSafe==1.1.1
more-itertools==7.2.0
oauthlib==3.1.0
Pillow==6.2.1
psycopg2==2.8.3
pycparser==2.19
python-crontab==2.4.0
python-dateutil==2.8.1
python-slugify==4.0.0
python3-openid==3.1.0
pytz==2019.3
rcssmin==1.0.6
redis==3.3.11
requests==2.22.0
requests-oauthlib==1.3.0
rjsmin==1.1.0
six==1.13.0
sqlparse==0.3.0
text-unidecode==1.3
tornado==5.1.1
uritemplate==3.0.0
urllib3==1.25.7
vine==1.3.0
whitenoise==4.1.4
zipp==0.6.0
You are using pip version 9.0.2, however version 19.3.1 is available.
You should consider upgrading via the 'pip install --upgrade pip' command.
```

When I log in with `heroku run bash` and run `pip list` Django-compressor is listed correctly.

## What should've happened instead?
I should have seen the home page same as in local development

## Steps to reproduce

[//]: run app locally using custom bootstrap compilation and celery
[//]: deploy app using heroku cli and these instructions https://cookiecutter-django.readthedocs.io/en/latest/deployment-on-heroku.html
[//]: skip the aws steps (heroku config:set DJANGO_AWS_ACCESS_KEY_ID=) and the other aws configs
[//]: be sure to run the celery steps (celery_broker_url and ps:scale worker=1)
