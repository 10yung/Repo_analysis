
I think it would be nice to tag different issues with version numbers to see if the issue is related to the issues others have. Sometimes you can get some knowledge just reading the  issues and maybe out of date.
I'm using Piranha 7.1.0 (as we're not dotnet core 3.1 yet) embedded in another application. The preview feature in the manager works as expected in the debug environment, but when deployed it displays a page at the initial size but won't resize. In browser debugging there is an error "ReferenceError: $ is not defined" in piranha.min.js, which seems to suggest a lack of jquery. In the debug environment the same page includes the larger piranha-dev.js and doesn't give the error. 

This project originally had Piranha 6.0, but I've been following a 7.1 mvcweb example and I think I've made the necessary changes.
There was a search in manager in version 6, but not found in v 7.1  :( , when i tried to add it it not working!
Hi,

Amazing work guys, lovely! Still in the process of figuring out how it works and how may I use it for my own needs.

- 1st question that popped up is how would I use this to store and retrieve structured data via API endpoints? To use it as storage backend for mobile apps or so, for instance.

- 2nd question would be about multi-tenancy: is it supported and how?

Thanks,
Lucian




I am wanting to be able to retrieve archive posts by using query parameters and not just path parameters. For example, I would like to be able to query for a list of posts like this: `/postpage?year=2020&tag=newtag&page=3` rather than having to say `/postpage/year/2020/tag/newtag/page/3`

Is this currently possible?
Hello,

When adding posts,
How can I add a dynamic table with data from my database?

Any idea?

I can do it in static pages, but I dont know how to do in post.cshtml.

That's my future blog: http://rodolfoduarte-002-site7.ftempurl.com/

Great job anyway! Thanks in advance.

Rodolfo Duarte
how we can pin a post in main page 
I have created a custom module with a couple of blocks. One block contains a SelectField<T> with an enumeration type which is defined in the same module. 
Creating pages with blocks from that module works fine.
After creating a new version of the module I was unable to edit the pages because the generic type of the SelectField was stored including the assembly version in the database (table Piranha_PageRevisions):
`"CLRType": "Piranha.Extend.Fields.SelectField1[[MySelectType, MyModule, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null]]"`

Is it possible to store the generic type of a SelectField without the version or is there a workaround 
 available?
Since it's almost 2020 I thought it would be a good time do improve and do some redesign of the project templates. Please leave feedback on:

* What you would like to be included in a good template
* What different types of templates you would like to see