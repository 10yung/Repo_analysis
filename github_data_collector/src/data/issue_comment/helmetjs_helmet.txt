Can you explain? How to implement in angular 7 step by step?
Whilst migrating the main `helmet` package over to TypeScript, I discovered an issue to do with exporting types:

```
Property 'dnsPrefetchControl' of exported interface has or is using name 'DnsPrefetchControlOptions' from private module '"./node_modules/dns-prefetch-control/dist/index"'.
```

In this example, I believe the `DnsPrefetchControlOptions` type needs to be exported in the main module definition. However, because we are using CJS exports, we cannot simply prefix the type definition with `export` (as there can only be a single export). Instead, the [suggested way](https://stackoverflow.com/questions/48708410/typescript-error-an-export-assignment-cannot-be-used-in-a-module-with-other-exp) is to use namespaces:

```ts
/* eslint-disable @typescript-eslint/no-namespace */
namespace dnsPrefetchControl {
  export interface DnsPrefetchControlOptions {
    /* ... */
  }
}

// eslint-disable-next-line no-redeclare
function dnsPrefetchControl (options: dnsPrefetchControl.DnsPrefetchControlOptions = {}) {
  /* ... */
}
```

In the interest of preserving CJS exports, does this seem like a reasonable way for now? In the future, we can make a breaking change to use ES modules everywhere which would make things a lot nicer, but this change would at least make it possible to migrate this module to TypeScript. üëç 
Hi, 
I have a site build in Node/Express and I am trying to get around the Content Security Policy that blocks all inline scripts. I have used the example code at the [bottom of this page](https://helmetjs.github.io/docs/csp/). However it all works, it generates the nonce, the header is showing up properly, but as soon as I get to the last line of code, where it is supposed to inject the nonce into all the script tags, it just spits out that individual <script> tag onto a blank HTML page. It will not load my site anymore. 

Here is the code I get: 
![Screen Shot 2019-08-29 at 3 21 04 PM](https://user-images.githubusercontent.com/1406147/63977291-ada60f80-ca70-11e9-9e55-1032d5114c7b.png)

And here are the console errors I am getting: 
![Screen Shot 2019-08-29 at 3 22 35 PM](https://user-images.githubusercontent.com/1406147/63977382-efcf5100-ca70-11e9-91bd-39224e51e19e.png)

Has anyone else had this problem? 

There's a very early draft of [`Cross-Origin-Embedder-Policy` (COEP)](https://mikewest.github.io/corpp/).
However, I think it's worth tracking at this point. 

[This document](https://docs.google.com/document/d/1zDlfvfTJ_9e8Jdc8ehuV4zMEu9ySMCiTGMS9y0GU92k/mobilebasic#) also explains the relation to [CORP](https://github.com/helmetjs/helmet/issues/176), and [COOP](https://github.com/helmetjs/helmet/issues/177).

Documentation describes how to disable or configure specific features but I was wondering why wouldnt we just disable all and enable only the items we need? Or am I missing something?
Need to do this across Helmet, not just in this repo.
I noticed that for a while the helmetjs project has been active in reviewing updates to the DefinetelyTyped definitions for helmet and wondered if it was worth migrating the types to this repository.

They could still be a second class citizen, but it would mean users only need to include a single dependency to get the types and the helmet project would be able to ship changes more readily to the types without having to wait for the changes to go out via DT.

This may not be practical as it'll add overhead to the maintainership of helmet, but if time is already being spent to review the types it could actually reduce the effort even if changes are left to the community to submit PR's for.

As a user of helmet and typescript I'd be happy to help maintain the types and be tagged as a reviewer if in any community PR's.

This discussion has been bought over from https://github.com/DefinitelyTyped/DefinitelyTyped/pull/33507
Hey, I think it would be awesome if helmetjs would be more open for other frameworks (or use without any).

As far as I understand, this is already possible (https://github.com/helmetjs/helmet/issues/100), correct? I think it would be good to document this prominently in the repo.
See https://github.com/helmetjs/hpkp/issues/14.

Because this is a breaking change, it'll happen in Helmet version 4.