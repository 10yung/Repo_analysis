root@centos5:~ $ blueprint apply openldapclients
Traceback (most recent call last):
  File "/usr/local/bin/blueprint-apply", line 32, in <module>
    b = blueprint.cli.read(options, args)
  File "/usr/lib/python2.6/site-packages/blueprint/cli.py", line 70, in read
    return blueprint.Blueprint.checkout(name)
  File "/usr/lib/python2.6/site-packages/blueprint/__init__.py", line 58, in checkout
    tree = git.tree(commit)
  File "/usr/lib/python2.6/site-packages/blueprint/git.py", line 109, in tree
    status, stdout = git('show', '--pretty=format:%T', commit)
  File "/usr/lib/python2.6/site-packages/blueprint/git.py", line 83, in git
    raise GitError(p.returncode)
blueprint.git.GitError: -9

root@centos5:~ $ blueprint list
  * openldapclients
  pablotest

Any idea what's wrong?
Thanks!
With CentOS 7, the output format of "yum groupinfo" and "rpm -q" has changed slightly. This causes a failure when blueprint parses the the output during cache file creation (blueprintignore and blueprint-yum-exclusions).

This pull request fixes:
* parsing of "yum groupinfo" output
Package names may start with a '+' sign, preceeded by 3 or 4 spaces

* paring of "rpm-qR":
Prior to CentOS 7, all returned lines did include spaces (possibly located at the end of the line). With CentOS 7, no more trailing spaces are printed, causing the expression "line.rstrip()[0:line.find(' ')]" to fail for such line (stripping off the last character)


The installation listed [here](https://github.com/devstructure/blueprint#from-devstructures-debian-archive) is not working.

http://packages.devstructure.com/keyring.gpg
```
404 Not Found

Code: NoSuchBucket
Message: The specified bucket does not exist
BucketName: packages.devstructure.com
RequestId: 6FD714707C656BF0
HostId: dqbK6+zVVeHFvI+xIvb15KQSGN5lV2yJrSx724w81zc5S3sq6Ls4gmvo5LXjD1BtWl1GkUwftuo=
```
Hi Sir,

I have created blueprint after install gedit tool on my linux system(Azure VM with Cent OS).
when i ran the blueprint-show command ,  it is throwing below error message.

Please let me know how to fix this issue

Step 1 - sudo yum install gedit

Step 2 - sudo blueprint-show -S sample_BP

Traceback (most recent call last):
  File "/usr/bin/blueprint-show", line 63, in <module>
    filename = getattr(b, options.generate)(options.relaxed).dumpf()
  File "/usr/lib/python2.6/site-packages/blueprint/frontend/sh.py", line 333, in dumpf
    f.write('{0}\n'.format(out))
  File "/usr/lib64/python2.6/codecs.py", line 691, in write
    return self.writer.write(data)
  File "/usr/lib64/python2.6/codecs.py", line 351, in write
    data, consumed = self.encode(object, self.errors)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xe0 in position 4373: ordinal not in range(128)
[user@BluePrintProd tmp]$

Is there anything I could do to help further debug?

```
[root@node ~]# blueprint-create -S web-shell
# [blueprint] using cached blueprintignore(5) rules
# [blueprint] searching for PEAR/PECL packages
# [blueprint] searching for Yum packages
# [blueprint] searching for configuration files
# [blueprint] searching for APT packages
# [blueprint] searching for Ruby gems
# [blueprint] searching for npm packages
# [blueprint] searching for software built from source
# [blueprint] searching for Python packages
# [blueprint] searching for service dependencies
Traceback (most recent call last):
  File "/bin/blueprint-create", line 79, in <module>
    filename = getattr(b, options.generate)(options.relaxed).dumpf()
  File "/usr/lib/python2.7/site-packages/blueprint/frontend/sh.py", line 333, in dumpf
    f.write('{0}\n'.format(out))
  File "/usr/lib64/python2.7/codecs.py", line 691, in write
    return self.writer.write(data)
  File "/usr/lib64/python2.7/codecs.py", line 351, in write
    data, consumed = self.encode(object, self.errors)
UnicodeDecodeError: 'ascii' codec can't decode byte 0xcc in position 138: ordinal not in range(128)
```

Puppet and Chef seemed to work.

![blueprint screenshot](http://ww2.sinaimg.cn/large/61b8bbf4gw1eitpri5oi9j20fx08pq4u.jpg)

This trivial patch allows the PEAR package regular expression matcher to catch packages from all registered PEAR channels. I encountered this as an issue when trying to track the installation of Horde packages (http://www.horde.org/), which were mysteriously missing. Turns out that blueprint only issues a `pear list` which captures only the default channel at pear.php.net. To get all registered channels for PEAR packages, we need `pear list -a`.

Hello,

I've been using blueprint for quite a while now and felt like trying out the server but I found out it only supports S3 as a backend for storage.

Using pymongo I've added support for MongoDB in the server backend as a quick personnal project.
# Requirements (on top of existing ones):

```
sudo pip install pymongo
```
# Configuration:

Server side /etc/blueprint.cfg

```
[server]
backend = mongodb # mongodb or s3
address = localhost:5000 # address of your blueprint server
use_https = False # indicates if we should craft url with https or not
[mongodb] 
address = localhost # your MongoDB server address
port = 27017 # your MongoDB server port
collection = blueprint_tarballs # your MongoDB collection
database = blueprint # your MongoDB database
user = myuser # your MongoDB user with access to DB (optionnal)
password = mypassword # your MongoDB user password (optionnal)
```

Client side /etc/blueprint.cfg

```
[io]
server = http://localhost:5000
secret = mysuperverylongsecret
```

Would it be possible to modify the Makefile to allow local installation?

Normally projects allow you do do this...
`make PREFIX=$HOME/local install`

or in your case, it might be...
`make prefix=$HOME/local install`

I know it's old, but I'm trying to use the tool to migrate to a new server!

```
 $ sudo blueprint show my-first-blueprint
Traceback (most recent call last):
  File "/usr/local//bin/blueprint-show", line 66, in <module>
    b = blueprint.cli.read(options, args)
  File "/usr/lib/python2.6/site-packages/blueprint/cli.py", line 70, in read
    return blueprint.Blueprint.checkout(name)
  File "/usr/lib/python2.6/site-packages/blueprint/__init__.py", line 61, in checkout
    return cls(name, commit, **json.loads(content))
TypeError: __init__() keywords must be strings
```

```
$python --version
Python 2.6.2
$ git --version
git version 1.7.2.3
```
