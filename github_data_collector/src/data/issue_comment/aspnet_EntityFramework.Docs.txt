We are using transactions when we use UserManager alongside standard EF Core database updates. We are considering options 3 and 4 for the idempotency issue, however there is nothing in the article to explain how we can do that, due to the fact that UserManager has its own SaveChanges (which will not use acceptAllChangesOnSuccess: false).

Can the documentation be updated to explain either how to avoid this issue, or to clarify whether this will work when using UserManager methods within ExecuteInTransaction.

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 876c88d4-2972-d905-28d7-56f9e589f309
* Version Independent ID: 29002343-fa42-2f49-3362-53592039b26d
* Content: [Connection Resiliency - EF Core](https://docs.microsoft.com/en-us/ef/core/miscellaneous/connection-resiliency#feedback)
* Content Source: [entity-framework/core/miscellaneous/connection-resiliency.md](https://github.com/aspnet/EntityFramework.Docs/blob/master/entity-framework/core/miscellaneous/connection-resiliency.md)
* Product: **entity-framework**
* Technology: **entity-framework-core**
* GitHub Login: @rowanmiller
* Microsoft Alias: **avickers**
From #1675: Update "data access technology for Visual Studio" docs
is there any alternate way to handle the tostring...

```C#
            //ProductId is Int
            // ==> db.Products.Where(p=>p.ProductId.ToString().Contains("p"))
            //to check for the 2 in the 29, we require this kind of query
```

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: fd35b912-445c-e801-7f70-de73839db80d
* Version Independent ID: e558a081-5397-1e3f-1d58-abea3f72cad6
* Content: [Client vs. Server Evaluation - EF Core](https://docs.microsoft.com/en-us/ef/core/querying/client-eval#feedback)
* Content Source: [entity-framework/core/querying/client-eval.md](https://github.com/aspnet/EntityFramework.Docs/blob/master/entity-framework/core/querying/client-eval.md)
* Product: **entity-framework**
* Technology: **entity-framework-core**
* GitHub Login: @smitpatel
* Microsoft Alias: **avickers**
This (and all the other ExecuteSql* pages) use an example raw SQL of `SELECT * FROM [dbo].[SearchBlogs]({0})` but it's not immediately clear, nor is it mentioned anywhere, that SearchBlogs is a Table Valued Function. I don't find TVF use to be widespread in industry, and the phrase "SearchBlogs" could just as easily be a noun (table name, blogs about searches) as a verb (function name, search through blogs). I puzzled for some time over how this magic syntax enabled EF to know which column to search within, in the SearchBlogs table

I request that you consider (my order of preference):
* Using an example that references a simple and well used table name like Employees, Products or Orders, e.g. `ExecuteSqlRaw("SELECT * FROM [dbo].[Employees] WHERE LastName = {0}", lastNameValue)` or
* Using a name that was obviously verb, like `GetEmployeesByLastName({0})` or
* Clearly stating that SearchBlogs is a TVF

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 94d72251-da07-6c40-b230-4f826bce1dc8
* Version Independent ID: 85130bf8-e026-e6d1-cd32-ac115d6b10fd
* Content: [RelationalDatabaseFacadeExtensions.ExecuteSqlCommand Method (Microsoft.EntityFrameworkCore)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.relationaldatabasefacadeextensions.executesqlcommand?view=efcore-3.1)
* Content Source: [dotnet/xml/Microsoft.EntityFrameworkCore/RelationalDatabaseFacadeExtensions.xml](https://github.com/aspnet/EntityFramework.ApiDocs/blob/live/dotnet/xml/Microsoft.EntityFrameworkCore/RelationalDatabaseFacadeExtensions.xml)
* Product: **entity-framework-core**
* GitHub Login: @dotnet-bot
* Microsoft Alias: **divega**
This page says that it's information applies to EF Core from 2.0 to 3.1, but actually not everything applies to all those versions. I needed to check EFCore Github to find out that the overload of the Log method that accepts tuples to configure the log level is actually only available on EF Core 3.0 and later releases.

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 372eced4-f13f-db5d-9e7e-e9591aefc32a
* Version Independent ID: c68149db-fa8a-9e48-5014-c8989bbaf092
* Content: [WarningsConfigurationBuilder.Log Method (Microsoft.EntityFrameworkCore.Diagnostics)](https://docs.microsoft.com/en-us/dotnet/api/microsoft.entityframeworkcore.diagnostics.warningsconfigurationbuilder.log?view=efcore-3.1#feedback)
* Content Source: [dotnet/xml/Microsoft.EntityFrameworkCore.Diagnostics/WarningsConfigurationBuilder.xml](https://github.com/aspnet/EntityFramework.ApiDocs/blob/live/dotnet/xml/Microsoft.EntityFrameworkCore.Diagnostics/WarningsConfigurationBuilder.xml)
* Product: **entity-framework-core**
* GitHub Login: @dotnet-bot
* Microsoft Alias: **divega**
Given that EF Core 3.1 reintroduced support for .NET Standard 2.0, the mitigation sub-chapter of this breaking change may be changed to suggesting the upgrade to version 3.1:
[EF Core 3.0 targets .NET Standard 2.1 rather than .NET Standard 2.0](https://docs.microsoft.com/en-us/ef/core/what-is-new/ef-core-3.0/breaking-changes#ef-core-30-targets-net-standard-21-rather-than-net-standard-20)

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: e4d0e044-b0cb-21e2-19c1-2f137da671ac
* Version Independent ID: 1cbedd95-8640-1649-9967-d0ef71633534
* Content: [Breaking changes in EF Core 3.0 - EF Core](https://docs.microsoft.com/en-us/ef/core/what-is-new/ef-core-3.0/breaking-changes#ef-core-30-targets-net-standard-21-rather-than-net-standard-20)
* Content Source: [entity-framework/core/what-is-new/ef-core-3.0/breaking-changes.md](https://github.com/aspnet/EntityFramework.Docs/blob/master/entity-framework/core/what-is-new/ef-core-3.0/breaking-changes.md)
* Product: **entity-framework**
* Technology: **entity-framework-core**
* GitHub Login: @ajcvickers
* Microsoft Alias: **avickers**
Can MS provide guidance and code to Avoiding DbContext threading issues when using Blazor server-side? 

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: a47bf610-692d-9d40-d85f-aec1e2a87a07
* Version Independent ID: 3c94634a-4b17-bc13-7436-0c61aea03ab6
* Content: [Configuring a DbContext - EF Core](https://docs.microsoft.com/en-us/ef/core/miscellaneous/configuring-dbcontext#avoiding-dbcontext-threading-issues)
* Content Source: [entity-framework/core/miscellaneous/configuring-dbcontext.md](https://github.com/aspnet/EntityFramework.Docs/blob/master/entity-framework/core/miscellaneous/configuring-dbcontext.md)
* Product: **entity-framework**
* Technology: **entity-framework-core**
* GitHub Login: @rowanmiller
* Microsoft Alias: **avickers**


[Enter feedback here]


---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 7f431e6c-6c5f-9056-1486-99ba6b02c954
* Version Independent ID: 37943f43-c279-f190-b134-48f54ead1e38
* Content: [Connection strings and models - EF6](https://docs.microsoft.com/en-us/ef/ef6/fundamentals/configuring/connection-strings#feedback)
* Content Source: [entity-framework/ef6/fundamentals/configuring/connection-strings.md](https://github.com/aspnet/EntityFramework.Docs/blob/master/entity-framework/ef6/fundamentals/configuring/connection-strings.md)
* Product: **entity-framework**
* Technology: **entity-framework-6**
* GitHub Login: @divega
* Microsoft Alias: **avickers**
- Entity types aren't discovered unless referenced.
- Shadow FK column name is different

---
#### Document Details

⚠ *Do not edit this section. It is required for docs.microsoft.com ➟ GitHub issue linking.*

* ID: 9cbb86f3-378b-e83d-56c3-c0532192bd13
* Version Independent ID: c96b2fcb-8af0-f05b-e188-a6c59dd9f428
* Content: [Porting from EF6 to EF Core - EF](https://docs.microsoft.com/en-us/ef/efcore-and-ef6/porting/index#feedback)
* Content Source: [entity-framework/efcore-and-ef6/porting/index.md](https://github.com/aspnet/EntityFramework.Docs/blob/master/entity-framework/efcore-and-ef6/porting/index.md)
* Product: **entity-framework**
* Technology: **entity-framework-core**
* GitHub Login: @rowanmiller
* Microsoft Alias: **avickers**