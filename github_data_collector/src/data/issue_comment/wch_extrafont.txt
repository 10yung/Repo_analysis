I recently saw the package [sysfonts](https://cran.r-project.org/web/packages/sysfonts/sysfonts.pdf). It occurred to me that it will be a great addition to download/install Google Fonts using the extrafont package. Google Fonts seems to have an API. Not too familiar with the API and how/where sysfonts package download the fonts. If possible I will be happy to look at this a little more and add some functions. Will this be something of interest?
I made changes to add the `AppData/Local/Microsoft/Windows/Fonts` folder. This folder is used by Windows to install fonts without admin privileges. I tested the changes and did not had any problems. This merge addresses issue #68.
In Windows, fonts can be installed without admin privileges but they will be installed under `file.path(Sys.getenv()["LOCALAPPDATA"], "Microsoft", "Windows", "Fonts")`. This will be a nice enhancement to add this directory by default.
I'm having a recurring problem where I'm able to register and load a TrueType font, but the resulting plot falls back to Arial without any error or warning appearing.

I first had this problem with Montserrat (retrieved from google fonts). The problem persisted for several days, during which I:

* Restarted my R session,
* Removed and re-installed the `extrafontdb` package before re-importing the fonts;
* Restarted my computer; and
* Inspected the font table and warnings.

Nothing appeared to fix the problem, but when I went back a couple of days later, Montserrat was suddenly working perfectly (unfortunately, I never worked out why Montserrat suddenly started working).

Now I've acquired Gotham Bold and Gotham Black, and I'm having the same problem. There are no warnings or errors; when I `font_import()` and `loadfonts()` it appears to register on all devices:

```r
font_import(system.file('assets', 'fonts', package = 'climatecomms'), prompt = FALSE)
# Scanning ttf files in C:/Users/rensa/Code/climate-comms/inst/assets/fonts ...
# Extracting .afm files from .ttf files...
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\Gotham-Black.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/Gotham-Black
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\Gotham-BlackItalic.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/Gotham-BlackItalic
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\Gotham-Bold.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/Gotham-Bold
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\Gotham-BoldItalic.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/Gotham-BoldItalic
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\helvetica-neue-ltpro-bdcn.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/helvetica-neue-ltpro-bdcn
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\helvetica-neue-ltpro-ltcn.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/helvetica-neue-ltpro-ltcn
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\Montserrat-Bold.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/Montserrat-Bold
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\Montserrat-BoldItalic.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/Montserrat-BoldItalic
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\Montserrat-Regular.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/Montserrat-Regular
# C:\Users\rensa\Code\climate-comms\inst\assets\fonts\Montserrat-RegularItalic.ttf => C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics/Montserrat-RegularItalic
# Found FontName for 10 fonts.
# Scanning afm files in C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/metrics
# Writing font table in C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/fontmap/fonttable.csv
# Writing Fontmap to C:/Users/rensa/Documents/R/win-library/3.6/extrafontdb/fontmap/Fontmap...

loadfonts()
# Registering font with R using windowsFonts(): Gotham Black
# Registering font with R using windowsFonts(): Gotham Bold
# Registering font with R using windowsFonts(): HelveticaNeueLT Pro 57 Cn
# Registering font with R using windowsFonts(): HelveticaNeueLT Pro 47 LtCn
# Registering font with R using windowsFonts(): Montserrat
# Registering font with R using pdfFont(): Gotham Black
# Registering font with R using pdfFont(): Gotham Bold
# Registering font with R using pdfFont(): HelveticaNeueLT Pro 47 LtCn
# No regular (non-bold, non-italic) version of HelveticaNeueLT Pro 57 Cn. Skipping setup for this font.
# Registering font with R using pdfFont(): Montserrat
# Registering font with R using postscriptFont(): Gotham Black
# Registering font with R using postscriptFont(): Gotham Bold
# Registering font with R using postscriptFont(): HelveticaNeueLT Pro 47 LtCn
# No regular (non-bold, non-italic) version of HelveticaNeueLT Pro 57 Cn. Skipping setup for this font.
# Registering font with R using postscriptFont(): Montserrat

fonts()
# [1] "Gotham Black"                "Gotham Bold"                 "HelveticaNeueLT Pro 57 Cn"   "HelveticaNeueLT Pro 47 LtCn"
[5] "Montserrat" 
```

Everything looks good in `fonttable()` too. But I've tried test plots with both ggplto2 and base graphics using `png()`, `pdf()` and `cairo_pdf()` devices. Montserrat and my HelveticaNeue variants work perfectly, while Gotham Black and Gotham Bold default to Arial silently (note that they are read as separate font families but correctly show an Italic and a non-Italic variant for each):

```r
ggplot(mtcars, aes(x = mpg, y = disp)) +
  geom_point() +
  labs(title = 'Oh hello there') +
  theme_grey(base_family = 'Montserrat')
```
![image](https://user-images.githubusercontent.com/6520659/63899838-b6332180-ca41-11e9-9277-31777e377d68.png)

```r
ggplot(mtcars, aes(x = mpg, y = disp)) +
  geom_point() +
  labs(title = 'Oh hello there') +
  theme_grey(base_family = 'Gotham Black')
```
![image](https://user-images.githubusercontent.com/6520659/63899869-d7940d80-ca41-11e9-975c-1ac2fe2011b6.png)

This is with `extrafont` 0.17.0.9000 (GitHub: `wch/extrafont@227e6e3`) and `extrafontdb` (1.0) on R 3.6.0 on Windows 10 1903. (Should I not be using the CRAN version of `extrafontdb` with the dev reelase of `extrafont`?)
It would be wonderful to be able to change the font for point labels in ggplot (eg. using geom_text).
![Rplot](https://user-images.githubusercontent.com/22689109/59863907-91804680-933a-11e9-9207-0ac7e5a7fede.png)


Hi,

Thanks for the great package. I am using the extrafont in a shiny app. In my local computer, it works well in displaying the ggplot and plotly outputs and also downloading a report produced by rmarkdown in all formats (HTML,PDF,Word). But when I deploy the shiny app in a ubuntu server and load the fonts there, the font for outputs work well but the PDF report generated by rmarkdown cannot use the fonts. Do you have any suggestion for this problem?
Embed fonts works, but I'm having a hard time setting the font size, so I was hoping something like the options parameter for embed_fonts would be useful, but I can't find any documentation that describes how this might be used. Sad for me.
When using the package, almost everything works fine. An exception is the following: I cannot use the Cambria regular font because it never gets imported. It seems to be an odd bug, because it does detect and import the Cambria Bold, Cambria Italic and Cambria Bold Italic fonts, just not the regular.

I keep trying to call "font_import()", and getting:

    C:\Windows\Fonts\cambriab.ttf : Cambria-Bold already registered in fonts database. Skipping.
    C:\Windows\Fonts\cambriai.ttf : Cambria-Italic already registered in fonts database. Skipping.
    C:\Windows\Fonts\cambriaz.ttf : Cambria-BoldItalic already registered in fonts database. Skipping.

No mention, whatsoever, to 'cambria.ttf'. And when I navigate with Windows Explorer to "C:\Windows\Fonts\", it is there.
It seems that this library is no longer maintained, still an issue so others can maybe solve this problem.

When downloading a .ttf on Mac OS, it is stored in ~/Library/Fonts. Confusingly `extrafont` does find the font when running `font_import`. After import, it is also shown when running `fonts`. However, it still is not available for use.

It does work when moving the .ttf file to /Library/Fonts . Apparently this is the folder `extrafonts` looks. Make sure to remove the .ttf file from ~/Library/Fonts and rerun the `import_font`.
As [described here](https://stackoverflow.com/a/38596730/435093), I could not get Linux Libertine fonts to work without manually editing the `fonttable.csv` file to copy over the `FontName` to `FamilyName`.

It seems that extrafont relies on the Family name being unique, which is of course not the case for fonts that belong to the same family.