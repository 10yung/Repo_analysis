Sorry my english is not good

**Describe the bug**
A clear and concise description of what the bug is.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to '...'
2. Click on '....'
3. Scroll down to '....'
4. See error

**Expected behavior**
A clear and concise description of what you expected to happen.

**Screenshots**
If applicable, add screenshots to help explain your problem.
![Snipaste_2020-01-17_00-52-55](https://user-images.githubusercontent.com/44925133/72546803-60fb8d80-38c6-11ea-8905-f52723e6570a.png)


*Desktop (please complete the following information):**
 - OS: [e.g. iOS] Windows 7 6.1
 - IDE and version 
JetBrains Rider 2019.3.1
Build #RD-193.5662.14, built on December 20, 2019
 - AceJump version 3.5.9

**Additional context**
Add any other context about the problem here.

I would like the ability to repeat the last search in the same mode I did it with a hotkey. Allowing me to just type the next matching occurence of interest.



cf. https://github.com/AlexPl292/IdeaVim-EasyMotion/issues/8
IdeaVim has a [spiffy new logo](https://plugins.jetbrains.com/files/164/72656/icon/META-INF_pluginIcon.svg). It would be nice to have a logo for AceJump as well.
it would be great if acejump jumps would be added to the vim jump list so jumping to previous location using ctrl+o and ctrl+i is possible 
ref https://vim.fandom.com/wiki/Jumping_to_previously_visited_locations
**Describe the bug**
During the word motion, tags are repainted after typing the first letter of the two-letter tag.

**To Reproduce**
Steps to reproduce the behavior:
1. Open a document with a lot of words and put the caret on the start of the document
2. Start AceJump in word mode
3. Type the first letter of any two-letter tag

Check the attached screencast. Note that I'm trying to select the `OP` tag and after I type `O` all the words that start with `o` are tagged. So, looks like AceJump performs a search at this moment.

I was able to detect that the issue appears first time on 6a2d15de34f62be4e0fb950234bd7a6a59148b00 commit. 
Seems like there is a bug somewhere in `Tagger` or `Finder` file.

![Screen Recording 2019-11-07 at 20 29 25](https://user-images.githubusercontent.com/4203721/68413053-7eadc780-019e-11ea-99cb-46d997b12d53.gif)

![image](https://user-images.githubusercontent.com/7645818/64916416-2c5cb580-d7b0-11e9-9483-d5845782aac5.png)

version info
```
IntelliJ IDEA 2019.1.4 (Ultimate Edition)
Build #IU-191.8026.42, built on July 30, 2019

JRE: 1.8.0_212-release-1586-b4 x86_64
JVM: OpenJDK 64-Bit Server VM by JetBrains s.r.o
macOS 10.14.6
```
For example I just want to move to the next symbol **"="** using AceJump. I need:
1. Press combination for activation AceJump mode;
2. Type **"="**
3. Press **"Enter"**
4. Press **"Esc"**
It's really difficult for this simple action. Is it a simpler way?
I would prefer to just press **Alt** + **"="**.
I propose to realize hot keys for actions:
a) go to next symbol 
b) go to previous symbol.

For example I assign **Alt** + **d** key for "go to next symbol action". Then I just press **Alt**+**d**+**"="**. Or I assign **Right Alt** for this action and I just press **Right Alt** + **"="**
I'm using IntelliJ IDEA 2019.2 EAP (Build #IU-192.5281.24, built on June 19, 2019) and AceJump 3.5.6. AceJump settings dialog can't be open, it  throws the following exception:
```
java.lang.NoSuchMethodError: com.intellij.ui.layout.Cell.invoke$default(Lcom/intellij/ui/layout/Cell;Ljavax/swing/JComponent;[Lcom/intellij/ui/layout/CCFlags;ILcom/intellij/ui/layout/GrowPolicy;Ljava/lang/String;ILjava/lang/Object;)V
	at org.acejump.config.AceSettingsPanel$rootPanel$1$2.invoke(AceSettingsPanel.kt:50)
	at org.acejump.config.AceSettingsPanel.<init>(AceSettingsPanel.kt:53)
	at org.acejump.config.AceConfig$panel$2.invoke(AceConfig.kt:23)
	at org.acejump.config.AceConfig$panel$2.invoke(AceConfig.kt:12)
	at kotlin.SynchronizedLazyImpl.getValue(LazyJVM.kt:74)
	at org.acejump.config.AceConfig.getPanel(AceConfig.kt)
	at org.acejump.config.AceConfig.createComponent(AceConfig.kt:27)
	at org.acejump.config.AceConfig.createComponent(AceConfig.kt:12)
	at com.intellij.openapi.options.ex.ConfigurableWrapper.createComponent(ConfigurableWrapper.java:155)
	at com.intellij.openapi.options.ex.ConfigurableCardPanel.lambda$createConfigurableComponent$0(ConfigurableCardPanel.java:73)
	at com.intellij.openapi.application.impl.ApplicationImpl.runReadAction(ApplicationImpl.java:934)
	at com.intellij.openapi.application.ReadAction.compute(ReadAction.java:57)
	at com.intellij.openapi.options.ex.ConfigurableCardPanel.createConfigurableComponent(ConfigurableCardPanel.java:69)
	at com.intellij.openapi.options.ex.ConfigurableCardPanel.create(ConfigurableCardPanel.java:55)
	at com.intellij.openapi.options.newEditor.ConfigurableEditor$1.create(ConfigurableEditor.java:58)
	at com.intellij.openapi.options.newEditor.ConfigurableEditor$1.create(ConfigurableEditor.java:55)
	at com.intellij.ui.CardLayoutPanel.createValue(CardLayoutPanel.java:87)
	at com.intellij.ui.CardLayoutPanel.select(CardLayoutPanel.java:115)
	at com.intellij.ui.CardLayoutPanel.lambda$null$0(CardLayoutPanel.java:131)
	at com.intellij.openapi.application.TransactionGuardImpl$2.run(TransactionGuardImpl.java:312)
	at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.doRun(LaterInvocator.java:433)
	at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.runNextEvent(LaterInvocator.java:416)
	at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.run(LaterInvocator.java:399)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:776)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:727)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:746)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:782)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:731)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$8(IdeEventQueue.java:396)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:696)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:395)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:117)
	at java.desktop/java.awt.WaitDispatchSupport$2.run(WaitDispatchSupport.java:190)
	at java.desktop/java.awt.WaitDispatchSupport$4.run(WaitDispatchSupport.java:235)
	at java.desktop/java.awt.WaitDispatchSupport$4.run(WaitDispatchSupport.java:233)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.desktop/java.awt.WaitDispatchSupport.enter(WaitDispatchSupport.java:233)
	at java.desktop/java.awt.Dialog.show(Dialog.java:1063)
	at com.intellij.openapi.ui.impl.DialogWrapperPeerImpl$MyDialog.show(DialogWrapperPeerImpl.java:707)
	at com.intellij.openapi.ui.impl.DialogWrapperPeerImpl.show(DialogWrapperPeerImpl.java:432)
	at com.intellij.openapi.ui.DialogWrapper.doShow(DialogWrapper.java:1685)
	at com.intellij.openapi.ui.DialogWrapper.show(DialogWrapper.java:1644)
	at com.intellij.openapi.options.newEditor.SettingsDialog.lambda$show$0(SettingsDialog.java:76)
	at com.intellij.openapi.application.TransactionGuardImpl.runSyncTransaction(TransactionGuardImpl.java:82)
	at com.intellij.openapi.application.TransactionGuardImpl.submitTransactionAndWait(TransactionGuardImpl.java:148)
	at com.intellij.openapi.options.newEditor.SettingsDialog.show(SettingsDialog.java:76)
	at com.intellij.ide.actions.ShowSettingsUtilImpl.showSettingsDialog(ShowSettingsUtilImpl.java:84)
	at com.intellij.ide.actions.ShowSettingsAction.perform(ShowSettingsAction.java:54)
	at com.intellij.ui.mac.MacOSApplicationProvider$Worker.lambda$null$1(MacOSApplicationProvider.java:60)
	at com.intellij.ui.mac.MacOSApplicationProvider$Worker.lambda$submit$7(MacOSApplicationProvider.java:149)
	at com.intellij.openapi.application.TransactionGuardImpl.runSyncTransaction(TransactionGuardImpl.java:82)
	at com.intellij.openapi.application.TransactionGuardImpl.lambda$pollQueueLater$0(TransactionGuardImpl.java:67)
	at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.doRun(LaterInvocator.java:433)
	at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.runNextEvent(LaterInvocator.java:416)
	at com.intellij.openapi.application.impl.LaterInvocator$FlushQueue.run(LaterInvocator.java:399)
	at java.desktop/java.awt.event.InvocationEvent.dispatch(InvocationEvent.java:313)
	at java.desktop/java.awt.EventQueue.dispatchEventImpl(EventQueue.java:776)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:727)
	at java.desktop/java.awt.EventQueue$4.run(EventQueue.java:721)
	at java.base/java.security.AccessController.doPrivileged(Native Method)
	at java.base/java.security.ProtectionDomain$JavaSecurityAccessImpl.doIntersectionPrivilege(ProtectionDomain.java:85)
	at java.desktop/java.awt.EventQueue.dispatchEvent(EventQueue.java:746)
	at com.intellij.ide.IdeEventQueue.defaultDispatchEvent(IdeEventQueue.java:782)
	at com.intellij.ide.IdeEventQueue._dispatchEvent(IdeEventQueue.java:731)
	at com.intellij.ide.IdeEventQueue.lambda$dispatchEvent$8(IdeEventQueue.java:396)
	at com.intellij.openapi.progress.impl.CoreProgressManager.computePrioritized(CoreProgressManager.java:707)
	at com.intellij.ide.IdeEventQueue.dispatchEvent(IdeEventQueue.java:395)
	at java.desktop/java.awt.EventDispatchThread.pumpOneEventForFilters(EventDispatchThread.java:203)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForFilter(EventDispatchThread.java:124)
	at java.desktop/java.awt.EventDispatchThread.pumpEventsForHierarchy(EventDispatchThread.java:113)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:109)
	at java.desktop/java.awt.EventDispatchThread.pumpEvents(EventDispatchThread.java:101)
	at java.desktop/java.awt.EventDispatchThread.run(EventDispatchThread.java:90)
```
Small detail but I think it would increase visual feedback if the hint would be hidden for the current selection when cycling with ENTER. By only seeing the colored block caret, it makes the selection more distinct from the rest of the hints. I'm not 100% sure but I think it's worth a try at least!