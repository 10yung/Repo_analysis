So im trying to import the swift package, just to get the darn thing to start but i keep getting this error when ever i try to add package dependency: 
The package dependency graph can not be resolved; unable find any available tag for the following requirements:

Even if I have the Package.Swift in xcode I cant import Package becasue ill get hit with the

/Users/Stjames/Desktop/Instore/Package.swift:1:8: No such module 'PackageDescription'

Im having alot of trouble even getting started :(

any help would be great


I am using the Xcode version 11.1 targeting ios 12.0
![image](https://user-images.githubusercontent.com/17082256/67991211-b665be00-fc38-11e9-8c2a-bb29b9a50ee5.png)

I have just installed this framework pretending to make some automatization process with this framework on the native ios web browser. But I find this error at the beginning and I have no idea why. Can anyone help me to continue?
Hi @mkoehnke!

**Thank You:**
First, thank you for building this repo, I've only been able to use some of the basic features, but it's already been incredibly useful!

**Goal:**
I'm using WKZombie to open a website, login, wait for redirect, scrape video links, scrape each video source, and download the linked files. The video source is on the individual page of each video link.

**Problems:**
- Signing into social networks like LinkedIn.
- Performing many `URL Requests` at once causes the host to block access.

**Request:**
Could you please help teach how to `login to LinkedIn`, `delay URL requests`, and use `openThen`?

**Additional Notes:**
- Read WKZombie manual, reviewed iOS and MacOS demo, reviewed swift files in WKZombie pod, and searched Stack Overflow, Google, YouTube, and GitHub for examples.
- Using WKZombie with SwiftSoup.
Can `WKZombie` be used to generate a PDF file from the rendering of a webpage via either https and/or file url? (preferrably not as a image raster which is then placed into PDF)
The result always wraps `ActionError.networkRequestFailure` when browser execute script get the error.
But the underlying WKError could be helpful and real error reason in this case.

So could we make change to return the underlying error when execute script?
Is there any way to intercept all http(s) traffic? Thanks.
All these changes were made by Xcode 10.1 fix-its for Swift 4.2
Hi all, I tried to run the example but get the following issue:

[!] CocoaPods could not find compatible versions for pod "WKZombie":
  In Podfile:
    WKZombie (from `../`)

Specs satisfying the `WKZombie (from `../`)` dependency were found, but they required a higher minimum deployment target.

Any suggestions?
Is there any way to make the browser instance wait after .execute JavaScript? 

I am executing my own javascript. From the network requests in my MITM proxy I can see the expected requests being executed from the click of the login button. However I believe the result is handled too early. The body of the page is still the one of the browser before executing the document.getElementById('ContentPlaceHolder1_btnlogin').click() .

`browser.open(loginUrl) >>> browser.execute("document.getElementById('ContentPlaceHolder1_UserName').value='xxxxxx';document.getElementById('ContentPlaceHolder1_Password').value='yyyyyyy!';document.getElementById('ContentPlaceHolder1_btnlogin').click();") >>> browser.inspect() >>> browser.get(by: .XPathQuery("//body")) === handleResult`
```
 let url = URL(string: "http://192.168.2.5")!
        open(then: .wait(10.0))(url)
    >>> get(by: .id("UserName"))
    >>> setAttribute("value", value: "xxx")
    >>> get(by: .id("Password"))
    >>> setAttribute("value", value: "xyz")
    >>> get(by: .class("submitBtn"))
    >>> press(then: .wait(10.0))
    === { (apage: HTMLPage?) in
            print("\(apage)")
        }
```
this returns "nil" and I cannot figure out why. When I look at the logs, it says the node was nil.

```
SCRIPT
getElementByXpath("//*[@id='UserName']").setAttribute("value", "xxx"); document.documentElement.outerHTML;
[.]

SCRIPT
getElementByXpath("//*[@id='Password']").setAttribute("value", "xyz"); document.documentElement.outerHTML;
[]

nil
```

The following code fetches the submit button just fine, which is why I'm surprised the snippet above doesn't work. What am I missing?
```
 let url = URL(string: "http://192.168.2.5")!
        open(then: .wait(10.0))(url)
    >>> get(by: .id("UserName"))
    >>> setAttribute("value", value: "xxx")
    >>> get(by: .id("Password"))
    >>> setAttribute("value", value: "xyz")
    >>> get(by: .class("submitBtn"))
    === { (apage: HTMLElement?) in
            print("\(apage)")
        }
```