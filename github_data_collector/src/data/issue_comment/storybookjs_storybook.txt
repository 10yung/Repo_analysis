## What I did

- Addresses issue #8308 to re-enable HMR console logging, disabled after Storybook 5.2
**Is your feature request related to a problem? Please describe.**
I'm working on building an addon and when trying to pass graphql-tag DocumentNode(s) through parameters, data is lost (stringified) at a certain depth and queries are rendered useless.

**Describe the solution you'd like**
I'd like to be able to set the max depth (via register config?)

**Describe alternatives you've considered**
I also tried to avoid using the useParameter hook and to pass the parameter through the channel from decorator to panel. But it seems to have the same issue since all data in coming from the same store.

An alternative would be to find a solution that has an extreme or "infinite" max depth

**Are you able to assist bring the feature to reality?**
Not right now

**Additional context**
https://github.com/storybookjs/storybook/blob/next/lib/api/src/lib/store-setup.ts#L8
https://github.com/storybookjs/storybook/blob/c5d978335607deb4193f96be5e228101a0494d67/lib/api/src/index.tsx#L354
Issue: https://github.com/storybookjs/storybook/issues/9273

## What I did

- Moved `babel-plugin-react-docgen` and `babel-plugin-add-react-displayname` from `app/react` to docs addon.

## How to test

- Is this testable with Jest or Chromatic screenshots?
- Does this need a new example in the kitchen sink apps?
- Does this need an update to the documentation?

If your answer is yes to any of these, please make sure to include it in your PR.

<!--

Everybody: Please submit all PRs to the `next` branch unless they are specific to current release. Storybook maintainers cherry-pick bug and documentation fixes into the `master` branch as part of the release process, so you shouldn't need to worry about this.

Maintainers: Please tag your pull request with at least one of the following:
`["cleanup", "BREAKING CHANGE", "feature request", "bug", "documentation", "maintenance", "dependencies", "other"]`

-->

**Describe the bug**
When trying to apply styles (new or override) to Storybook components (not all have been tested, but should be), the styles do not get applied.

**To Reproduce**
See code sample below.

**Expected behavior**
Styles are applied.

**Screenshots**
![image](https://user-images.githubusercontent.com/5431637/72669494-ff7f1000-39e6-11ea-9a8b-f835da5d0631.png)

**Code snippets**
```
import { Form } from '@storybook/components'
import { css, styled } from '@storybook/theming'

const { Field } = Form

export const AField = styled(Field)`
    padding: 0;
    margin: 0;
    color: red;
`

export const BField = styled(Field)(({ theme }) => ({
    padding: 0,
    margin: 0,
    color: 'red',
}))

export const CField = styled(Field)(
    ({ theme }) => css`
        padding: 0;
        margin: 0;
        color: red;
    `,
)
```

**System:**
Environment Info:

  System:
    OS: Windows 10 10.0.18362
    CPU: (8) x64 Intel(R) Core(TM) i7-4720HQ CPU @ 2.60GHz
  Binaries:
    Node: 10.17.0 - C:\Program Files\nodejs\node.EXE
    Yarn: 1.15.2 - C:\Program Files (x86)\Yarn\bin\yarn.CMD
    npm: 6.11.3 - C:\Program Files\nodejs\npm.CMD
  Browsers:
    Edge: 44.18362.449.0

I'm using Chrome Version 79.0.3945.130 (Official Build) (64-bit), but browser doesn't matter.

"@storybook/addons": "^5.3.6",
"@storybook/api": "^5.3.6",
"@storybook/components": "^5.3.6",
"@storybook/core-events": "^5.3.6",
"@storybook/theming": "^5.3.6",

**Additional context**
This is true if using styled from @storybook/theming or from @emotion/styled and no matter which syntax is used.

Issue: #8571

## What I did

mdx-compiler-plugin now filters all potential children. 
added example to official storybook addon-docs.stories.mdx - multiple children
added test case to mdx-compiler-plugin.tests

## How to test
official storybook
yarn test --core
## What I did
The link to repo in empty knobs panel couldn't be triggered. The problem was with missing `cancel={false}` prop, because `Link` component has a `cancel={true}` by default.

## How to test
1. Go to Knobs addon panel
2. Check if no knobs are found
3. Click on the link to repo

- Is this testable with Jest or Chromatic screenshots? No
- Does this need a new example in the kitchen sink apps? No
- Does this need an update to the documentation? No
**Describe the bug**
When I run `@storybook/react-native-server` (5.3.6) I can't connect via local network e.g http://192.168.190.232:7007/

**To Reproduce**
I used this guide https://storybook.js.org/docs/guides/guide-react-native/

**Expected behavior**
I can connect via localhost and also via local ip adress. Thus I can develop in simulator but also on real device.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Code snippets**
If applicable, add code samples to help explain your problem.

**System:**
Please paste the results of `npx -p @storybook/cli@next sb info` here.
```text
  System:
    OS: macOS 10.15.2
    CPU: (4) x64 Intel(R) Core(TM) i7-7567U CPU @ 3.50GHz
  Binaries:
    Node: 10.17.0 - /usr/local/bin/node
    Yarn: 1.21.1 - /usr/local/bin/yarn
    npm: 6.13.4 - /usr/local/bin/npm
  Browsers:
    Chrome: 79.0.3945.130
    Firefox: 68.0.1
    Safari: 13.0.4
  npmPackages:
    @storybook/addon-actions: ^5.3.6 => 5.3.6
    @storybook/addon-links: ^5.3.6 => 5.3.6
    @storybook/addons: ^5.3.6 => 5.3.6
    @storybook/react-native: ^5.3.6 => 5.3.6
    @storybook/react-native-server: ^5.3.6 => 5.3.6
```

**Additional context**
Add any other context about the problem here.

**Describe the bug**
Live examples for next and current releases throw 404.

**To Reproduce**
Steps to reproduce the behavior:
1. Go to [https://storybook.js.org/docs/basics/live-examples/](url)
2. Click on any example from next and current releases.
3. See error: `404: NOT_FOUND
Code: RESOURCE_NOT_FOUND`

**Expected behavior**
Live examples for next and current releases should work.

**Screenshots**
<img width="470" alt="Screen Shot 2020-01-18 at 4 41 28 PM" src="https://user-images.githubusercontent.com/45042199/72666348-8fd24a80-3a11-11ea-87f4-4adaac789440.png">


**Describe the bug**

If you use Yarn v2, then you can't add Storybook to a simple Create React App, it crashes.

See https://github.com/yarnpkg/berry/issues/592#issuecomment-575895264

And the output here:

https://github.com/crubier/berry/commit/78acb633a0ad411ed173dae0a0037ab82fe346ad/checks?check_suite_id=407781418

**To Reproduce**

The following process is used in the workflow to reproduce this bug:

1. Install yarn v2: https://next.yarnpkg.com/getting-started/install
2. `yarn dlx create-react-app my-cra && cd my-cra` to init a crat react app
3. `yarn dlx -p @storybook/cli sb init` to init storybook, but *it fails here*
4.  Then I would do `yarn storybook` and that would be it.... ideally..

**Expected behavior**

Success

**Screenshots**

```
Error: Cannot find module 'commander'
Require stack:
- /Users/vincent/.yarn/berry/cache/@storybook-cli-npm-5.3.6-c196adf18e-1.zip/node_modules/@storybook/cli/bin/generate.js
- /Users/vincent/.yarn/berry/cache/@storybook-cli-npm-5.3.6-c196adf18e-1.zip/node_modules/@storybook/cli/bin/index.js
Require stack:
- /Users/vincent/.yarn/berry/cache/@storybook-cli-npm-5.3.6-c196adf18e-1.zip/node_modules/@storybook/cli/bin/generate.js
- /Users/vincent/.yarn/berry/cache/@storybook-cli-npm-5.3.6-c196adf18e-1.zip/node_modules/@storybook/cli/bin/index.js
    at Proxy.module_1.Module._resolveFilename (/private/var/folders/2g/yhlpschd00n71jykx6bgbp1w0000gn/T/tmp-69185QMHt9oBf5169/dlx-69185/.pnp.js:18118:54)
    at Proxy.module_1.Module._load (/private/var/folders/2g/yhlpschd00n71jykx6bgbp1w0000gn/T/tmp-69185QMHt9oBf5169/dlx-69185/.pnp.js:18001:40)
    at Object.<anonymous> (/Users/vincent/.yarn/berry/cache/@storybook-cli-npm-5.3.6-c196adf18e-1.zip/node_modules/@storybook/cli/bin/generate.js:1)
    at Generator.next (<anonymous>)
```

**System:**

```
âžœ npx -p @storybook/cli@next sb info

Environment Info:

  System:
    OS: macOS 10.15.2
    CPU: (12) x64 Intel(R) Core(TM) i7-8750H CPU @ 2.20GHz
  Binaries:
    Node: 10.15.3 - ~/.nvm/versions/node/v10.15.3/bin/node
    Yarn: 2.0.0-rc.23 - /usr/local/bin/yarn
    npm: 6.4.1 - ~/.nvm/versions/node/v10.15.3/bin/npm
  Browsers:
    Chrome: 79.0.3945.117
    Firefox: 71.0
    Safari: 13.0.4
```

**Additional context**
Trying to make Storybook work with yarn v2

**Describe the bug**
We have a Storybook 5.3.3 running perfectly fine in dev mode, components utilizing React 16.8.6, Styled Components 4.4 (also tried the new 5.0) and Typescript 3.7 (with ts-loader 6.2.1). 

When built for static deployment, things work fine except no styles get injected into the head, so all components are unstyled. Class names are generated fine, and no errors are thrown. Somehow, it appears that SC fails to work within Storybook's iframe?

To run the build, tried deploying to Surge as well as `npx http-server .out` per docs, same result :(

**To Reproduce**
Yet to repro using a bare-bones project setup... Just curious if it's a known issue?

**Expected behavior**
Styles should be present inside iframe head's `style` tag

**Screenshots**
<img width="585" alt="no-styles" src="https://user-images.githubusercontent.com/4442541/72654692-7e237100-3945-11ea-97d3-8f1b9769ca2e.png">

**System:**
```
  System
    OS: macOS 10.15.2
    CPU: (8) x64 Intel(R) Core(TM) i7-8569U CPU @ 2.80GHz
  Binaries:
    Node: 8.16.1 - ~/.nvm/versions/node/v8.16.1/bin/node
    Yarn: 1.21.1 - ~/Projects/philo-fe/node_modules/.bin/yarn
    npm: 6.4.1 - ~/.nvm/versions/node/v8.16.1/bin/npm
  Browsers:
    Chrome: 79.0.3945.117
    Firefox: 69.0.3
    Safari: 13.0.4
  npmPackages:
    @storybook/addon-a11y: ^5.3.3 => 5.3.3 
    @storybook/addon-actions: ^5.3.3 => 5.3.3 
    @storybook/addon-knobs: ^5.3.3 => 5.3.3 
    @storybook/addon-viewport: ^5.3.3 => 5.3.3 
    @storybook/react: ^5.3.3 => 5.3.3 
```