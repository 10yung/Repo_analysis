https://get.docker.com/rootless is out of sync with https://github.com/docker/docker-install/blob/master/rootless-install.sh
This fixes the warning showed in console log when trying to run apt-get install from a non interactive terminal. Warning is: `dpkg-reconfigure: unable to re-open stdin: No file or directory.`
Hi,

I would like to automate these steps to install docker as the rootless user for that I've created shell script.but while doing echo "export DOCKER_HOST=unix://$XDG_RUNTIME_DIR/docker.sock" using shell script it is not working.on manual, it is working fine. 
```shell
export USERID=$( id |grep uid | awk -F '[ ]' '{print $1}' | awk -F '[(]' '{print $1}'| awk -F '[=]' '{print $2}')
    sudo apt-get install -y uidmap
    curl -fsSL https://get.docker.com/rootless | sh
    echo "DOCKER_HOST=unix:///run/user/${USERID}/docker.sock">>~/.bashrc
    systemctl --user status docker
    systemctl --user start docker
```
Even though if I export this value to ~/.bashrc, it is not showing in system environment.
Could you please let me know how I can automatically add this value as env on the ubuntu machine.
Thanks
Rohit Thakur.
It allows user to use Docker version installed on his system.
I tried to install on a Ubuntu 19.10 using the script at get.docker.com with no success

```
$ curl -fsSL https://get.docker.com -o get-docker.sh
$ sh get-docker.sh
# Executing docker install script, commit: f45d7c11389849ff46a6b4d94e0dd1ffebca32c1
+ sudo -E sh -c apt-get update -qq >/dev/null
E: The repository 'https://download.docker.com/linux/ubuntu eoan Release' does not have a Release file.
```

Reason: `eoan` is missing at https://download.docker.com/linux/ubuntu/dists/

Same with the test version, for the same reason

```
curl -fsSL https://test.docker.com -o test-docker.sh
montra@connettizb:~$ sh test-docker.sh
# Executing docker install script, commit: 6bf300318ebaab958c4adc341a8c7bb9f3a54a1a
+ sudo -E sh -c apt-get update -qq >/dev/null
+ sudo -E sh -c apt-get install -y -qq apt-transport-https ca-certificates curl >/dev/null
+ sudo -E sh -c curl -fsSL "https://download.docker.com/linux/ubuntu/gpg" | apt-key add -qq - >/dev/null
Warning: apt-key output should not be parsed (stdout is not a terminal)
+ sudo -E sh -c echo "deb [arch=amd64] https://download.docker.com/linux/ubuntu eoan test" > /etc/apt/sources.list.d/docker.list
+ sudo -E sh -c apt-get update -qq >/dev/null
E: The repository 'https://download.docker.com/linux/ubuntu eoan Release' does not have a Release file.
```
According to  https://github.community/t5/GitHub-Actions/What-really-is-docker-3-0-6/td-p/30752 :


> chrispat [GitHub Staff] â€Ž09-05-2019 03:08 PM 
> 
> There are some very specific clauses in the docker EULA that, according to our lawyers, make it not possible to run a service that uses docker community edition and in our case the hosted runners constitute a service.  

If using Docker CE that is installed with this script require accepting [Docker EULA](https://www.docker.com/legal/docker-software-end-user-license-agreement), the script should show EULA and ask `y/N` user input.

If not, the EULA page should be updated for clarification.

Fixes https://github.com/docker/docker-install/issues/137
The script https://get.docker.com/rootless generates a systemd configuration in the home directory at `.config/systemd/user/docker.service`.
If we want to enable that service, `systemctl --user enable docker`would be the way to go. 

Unfortunately the target in the generated systemd config is `multi-user.target`. That would be fine for a system service but not for a user service (at least on fedora). It shall be changed to `default.target`.

Hello,

I was trying to install the rootless version of docker by following blog post:
https://engineering.docker.com/2019/02/experimenting-with-rootless-docker/
(I know it is half a year old now, but I could not find other instructions on installation)

Unfortunately, the script fails with:
```
gzip: stdin: not in gzip format
tar: Child returned status 1
tar: Error is not recoverable: exiting now
```

I dug in to the script a bit and it looks like the issue is coming from line 316 in rootless-install.sh:
```
curl -L -o rootless.tgz "$STATIC_RELEASE_ROOTLESS_URL"
```
because  https://master.dockerproject.org/linux/x86_64/docker-rootless-extras.tgz no longer exists, and instead is returning an XML file with the contents.
```
<?xml version="1.0" encoding="UTF-8"?>
<Error><Code>NoSuchKey</Code><Message>The specified key does not exist.</Message><Key>linux/x86_64/docker-rootless-extras.tgz</Key><RequestId>520E9920358F8BDB</RequestId><HostId>38sHuvfQtiXDKtenebEICJXhpyGdLj0GLQ5gcw8WZUlGh38JONd0Vc0cuHQtrHrJmiE853DJqRo=</HostId></Error>
```
And the tar commands following it is throwing out the original error. I took a quick look around https://master.dockerproject.org/ but I could not figure out what to replace it with.
Although the Linux Mint 19.1 is based on Ubuntu 18.04, the docker-install script recognize this distribution as a debian buster/sid.

This was working until recently but started to give me some problems when using vscode, see comment https://github.com/microsoft/vscode-remote-release/issues/1041#issuecomment-516596330

The `https://get.docker.com | sh`, when running from a Linux Mint 19.1 should add the ubuntu bionic repo instead of debian buster.
