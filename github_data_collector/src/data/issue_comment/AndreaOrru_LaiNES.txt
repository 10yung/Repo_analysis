I'm going to change it into a two-player-online-game.Could you give me some advice?
BRK is a two-byte instruction, so PC is incremented twice before being pushed, not just once.

Sources:
http://www.thealmightyguru.com/Games/Hacking/Wiki/index.php?title=BRK
http://nesdev.com/the%20%27B%27%20flag%20&%20BRK%20instruction.txt
and blaggr's instr_test_v5
Hi, I fix some bug and make menu support scroll.
Hi,
maybe I'm wrong (if so, sorry for that), but I can't find the two extra circles, if a branch goes to a new ram page. (see: [http://obelisk.me.uk/6502/reference.html#BCC](http://obelisk.me.uk/6502/reference.html#BCC) )

should this:
`template<Flag f, bool v> void br() { s8 j = rd(imm()); if (P[f] == v) { T; PC += j; } }`

be maybe something like this:
`template<Flag f, bool v> void br() { s8 j = rd(imm()); if (P[f] == v) { T; if(cross(PC, j)) {T;T;} PC += j; } }`

Thank you
Is this a known issue?

```
../lib/include/Blip_Buffer.h:230: void Blip_Buffer::end_frame(blip_time_t): Assertion `( "Blip_Buffer::end_frame(): Frame went past end of buffer", samples_avail() <= (long) buffer_size_ )' failed.
```

It happens here:
```
#4  0x00007fffed56903d in Blip_Buffer::end_frame (this=0x7fffed5ce0c0 <APU::buf>, t=29783) at ../lib/include/Blip_Buffer.h:229
#5  0x00007fffed568e31 in APU::run_frame (elapsed=29783) at ../src/apu.cpp:45
#6  0x00007fffed55da7d in CPU::run_frame () at ../src/cpu.cpp:273
```
For context, I was working on a libretro port of your emulator core, but I do not think that is the issue here. The frame count is always at 38 when this crash happens. I'm testing with SMB1 (World).
Hi, there appears to be a global buffer overflow caused by line 187 here:

https://github.com/AndreaOrru/LaiNES/blob/52b7920d9878962adf50fdeb14f3e65906db57d9/src/ppu.cpp#L181-L187

Because `n` is allowed to be 8, the next loop iteration where `n == 8` overflows the `secOam` buffer because it can only hold 8 elements.

Steps to reproduce:

Build OS X version
open lines and open a directory with 40+ rom files
try going to the last one. 

Result: while it does select the rom, it won't show it on screen so you have no idea which rom you picked.
This should add support for one-screen mirroring as well as mapper 7 support (AxROM). However, something is quite wrong--the mapper is pretty simple so I think this exposes some other weaknesses (particularly with the PPU). Not sure though, I've been wrong before.

Partially addresses #8 
Is a Windows build an eventual goal of LaiNES?
This is an absolute priority in order to remove the dependency from boost and Blargg's stuff.