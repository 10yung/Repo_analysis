## Current behavior

When `showCloseButton: true` and the text is long enough the text goes behind the close button.

## Expected behavior

The text should avoid the button.

## Live demo

https://jsfiddle.net/jn4pozu0/1/

GitHub Package Registry is in public beta stage now :tada: :tada: :tada: 

What does that mean for us? Well, there's a small note in [their docs](https://help.github.com/en/articles/configuring-npm-for-use-with-github-package-registry):

> Note: GitHub Package Registry **only supports scoped** NPM packages. Scoped packages have names with the format of `@owner/name`.

So I published the package with the scope: https://github.com/sweetalert2/sweetalert2/packages/26122

---

The `sweetalert2` package was published 3.5 years ago in https://github.com/sweetalert2/sweetalert2/issues/69 and at that time I didn't put much thinking into naming. If I would name this package today, I'll go with `@sweetalert2/sweetalert2` because that's IMO logical and aligned with GitHub repo, no repo can be without an author/organisation, or in other words a **scope**.

As we're getting close to the [next major release](https://github.com/sweetalert2/sweetalert2/issues/1587), I propose the change in the package name:

```diff
- "name": "sweetalert2",
+ "name": "@sweetalert2/sweetalert2",
```

---

Would like to hear your thought and objections @gverni @zenflow @toverux, other opinions are of course welcome as well. Thanks!
Hi All!
We are really keen to collect your feedback, and to start with, we'd like to know who is using **SweetAlert2**. We would really appreciate if you:

- Share your company name
- Share your logo (in which case it might be used in the readme / frontpage etc)
- What kind of project? How large? (code base size or team size)
- If your project is open source or public, please share a link!
- What do you like most about SweetAlert2, what could be done better?

And of course, you can show your :heart: and support by [making a donation](https://github.com/sweetalert2/sweetalert2#support-and-donations) :)
Is there any support for `optgroup`'s in select input types?  
I need to show some hierarchal options in select input
Babel recently release support for private instance method (see [here](https://babeljs.io/blog/2018/12/03/7.2.0)). 

Given the following comment: https://github.com/sweetalert2/sweetalert2/blob/abb846ab4a1c7ed541b5e6c08d15f87892671091/src/privateMethods.js#L6-L9

I tried using the new private instance in babel. The work is very far from being finalized and there are still quite a lot failures, but the basic functionalities are implemented, i.e.: 
* Pressing [ok] and [cancel] button
* Call `close()` method 

What I did was: 
* Refactor `_main()` as private instance method (`#main()`)
* Refactor `swalPromiseresolve()` as private instance method (`#swalPromiseResolve()`)
* Change implementation of `close()` to use private method `#swalPromiseResolve()`

As I said, it's more of a _proof of conept_ than anything else, but I wanted to start gathering your feed-back @limonte @zenflow. 

(sorry I pressed the wrong button when i created this PR, and it was created without comment and wrong title)
Right now, for backwards compatibility, all instance methods are also exposed as static methods, via proxy methods defined here:

https://github.com/sweetalert2/sweetalert2/blob/5efb897c3dfece11ffbd105c2fc55298480f4aae/src/SweetAlert.js#L59-L66

We should 
- drop this block of code
- change the appropriate static methods to instance methods (e.g. `Swal.getTitle()` -> `swal.getTitle()`). Should make sure that calling these methods apply to that particular instance, and *not* the currently active swal, since they can be different. (Note: there are no instance methods that should become static methods)
- add static method like `Swal.getCurrentInstance()`, which will be generally useful, and also allow for easy migration in situations where a user is using one of the methods that were changed to an instance method, but they didn't save a reference to the instance
- Split [documentation on methods](https://sweetalert2.github.io/#methods) into static methods and instance methods
Hi!

When I try to use sweetalert on iPhone (iOS 11, latest) the VoiceOver (assistive tech for blind people), doesn't read the description of sweet alert modals.

Example: swal("title", "desc", "success"):
The VoiceOver reads "Ok button, 'title' modals", but no "desc".

I try the modals on bootstrap docs page and everything works, the example in sweetalert2 homepage doesn't work instead.

If you need another test or infos, ask me.
Regards
So having things split into modules now after #970 is awesome, but I want to go a step further in organizing the code base and start separating concerns by extracting distinct features into separate layers, as "core" Swal extensions in modules in the `src/extensions` dir. I commented about this here https://github.com/sweetalert2/sweetalert2/pull/1036#issuecomment-375434088 and here https://github.com/sweetalert2/sweetalert2/pull/1043#issue-177301200
Dumping my unsorted list of observations in here. These may likely need to be split into separate discrete issues...

- [x] "Custom HTML..." - thumbs-down button example lacks label/name; focus set to "great", user has to reverse-tab to get to links. best to set focus to start of content instead
- [ ] "A warning message, with a function attached to the "Confirm"-button..." the second modal (after "Yes delete it") is not announced, only "OK" button is
- [ ] ditto for following "... and by passing a parameter, you can execute something else for "Cancel"."
- [x] "A message with a custom image and CSS animation disabled" image lacks proper alt
- [ ] "Ajax request example" input lacks label/name. visible custom error message not associated with input. busy indicator not announced. temporarily hear focus moving to top of page before new modal appears
- [ ] "Dynamic queue" temporarily hear focus moving to top of page. busy indicator not announced. result modal still has "Your public IP will be received via AJAX request" text somewhere
- [ ] Inputs/form controls lack labels (may need a new parameter to be able to provide explicit label?):  input types example, email example, password example, textarea example, select example, range example, multiple inputs example
- [ ] select: choosing not ukraine shows error message, but this is not announced/associated at all; selecting ukraine shows success modal which is not announced, only "OK button"
- [ ] radio: busy indicator at start not announced; success/result modal not announced
- [ ] checkbox: error (when continuing unchecked) not announced/associated; success modal not announced
- [ ] multiple inputs: success modal not announced

Improvement

- [x] non-alert part not `aria-hidden` / `inert` (e.g. using JAWS, can use cursor key up to navigate back out into page) - may require extensive work though
- [x] in demo page itself: clearer contrast and focus indication
Hello, 

Is it possible to change the spinner when using "showLoaderOnConfirm" and reuse the previous loader from sweetalert ? ( button with 3 dots ). 
Thanks.
