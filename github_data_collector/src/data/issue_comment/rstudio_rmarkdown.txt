A minimally reprodicuble `Rmd` file:

````
---
title: "test"
output: html_notebook
---

```{r}
library(ggplot2)
library(plotly)

df <- data.frame(x=1, y=1, t="我我我我")
p <- ggplot(df, aes(x=x, y=y, fill=t)) +
  geom_point()
ggplotly(p)
```
````

Then run:
```r
rmarkdown::render("test.Rmd", output_format="html_notebook")
```

Results in the following error:

```


processing file: test.Rmd
  |..............                                                        |  20%
  ordinary text without R code

  |............................                                          |  40%
label: unnamed-chunk-1
  |..........................................                            |  60%
  ordinary text without R code

  |........................................................              |  80%
label: unnamed-chunk-2
  |......................................................................| 100%
  ordinary text without R code


output file: test.knit.md

Error in extract(input_str) : Invalid nesting of html_preserve directives
Calls: <Anonymous> ... <Anonymous> -> base -> base -> extract_preserve_chunks -> extract
Execution halted
```

Interestingly, in RStudio for preview everything is fine.
And I've found out that **the length matters.**
So `"我我我我"` will cause the error but NOT `"我我我"`.

Here is my system info:

```
R version 3.6.0 (2019-04-26)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS High Sierra 10.13.4
rmarkdown 2.0
pandoc 2.7.3
```

I encounter the same error in my Ubuntu 16.04 machine.
I really have no idea what's going on here and it took me quite some time to finally pin down the root cause being UTF-8 Chinese characters. Still no clue why this happens. :(

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('rmarkdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/rmarkdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

Say, I have files *index.Rmd*, *slide1.Rmd* and *_site.yml*

_index.Rmd_

```
---
title: Home
---

This is the home
```

_slide1.Rmd_

```
---
title: "Xaringan slide"
output:
  xaringan::moon_reader
---

Hello
```

__site.yml_

```
name: RMD test
navbar:
  title: RMD test
  right:
    - text: Home
      href: index.html
    - text: Slide
      href: slide1.html
output:
  rmarkdown::html_document
```

If I run `rmarkdown::render('slide1.Rmd')` (in the presence of *_site.yml*), the output is the document defined in *_site.yml*. The YAML definition in the Rmd file is ignored.

If I run `rmarkdown::render_site()`, the output of *slide1.Rmd* is a xaringan presentation (ie; document defined inside slide1.Rmd). As expected.

But in addition, I get this warning:

_Output created: _site/index.html
Warning message:
In file.rename(output, output_dest) :
  cannot rename file '/home/user/Desktop/test-rmd/slide1.html' to './_site/slide1.html', reason 'No such file or directory'_

Is there some way to make `render()` use only the YAML definition inside the file and not that from `_site.yml`? Is the warning something to worry about?

Issue on [StackOverflow](https://stackoverflow.com/questions/56064050/render-xaringan-rmd-when-using-site-yml-file).

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('rmarkdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/rmarkdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

This is a try to making some evolution to pandoc pagebreak lua filter in the aim of supporting inline  command. Supporting this would fix #1752.

Initially the pagebreak lua filter was added from [pandoc lua filters repo](https://github.com/pandoc/lua-filters/tree/master/pagebreak) and support `\newpage` or `\pagebreak` command as its own paragraph. It would detect this paragraph and replace it with a RawBlock with the correct pagebreak syntax. 

This PR is to see if we can detect one of the command in the paragraph itself and replace it by RawInline. 

It seems to works well for docx output. This need to be thoroughly tested for other format. 

This is a draft PR to share this and test it. 

Currently `\newpage` must be a paragraph composed only by itself like

```md
Paragraph

\newpage

Paragraph
```

This may add a blank page in `word_document` when the paragraph before breaking page reaches at the bottom of a page.

![image](https://user-images.githubusercontent.com/30277794/71551818-55d5e000-2a33-11ea-9361-7d8286463c0f.png)

It would be nice if pagebreak can be done as a part of paragraph.
For example by

```
This paragraph ends with pagebreak.
\newpage
```

## reprex

````
---
output:
  word_document:
    md_extensions: "+hard_line_breaks"
---

```{r, echo=FALSE, results='asis'}
cat(rep("1st page", 42), sep = "\n")
```

\newpage

Blank page exists before this line.
````

## xfun::session_info('rmarkdown')

```
R version 3.6.1 (2019-07-05)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 17763), RStudio 1.2.1335

Locale:
  LC_COLLATE=Japanese_Japan.932  LC_CTYPE=Japanese_Japan.932   
  LC_MONETARY=Japanese_Japan.932 LC_NUMERIC=C                  
  LC_TIME=Japanese_Japan.932    

Package version:
  base64enc_0.1.3 digest_0.6.23   evaluate_0.14   glue_1.3.1     
  graphics_3.6.1  grDevices_3.6.1 highr_0.8       htmltools_0.4.0
  jsonlite_1.6    knitr_1.26      magrittr_1.5    markdown_1.1   
  methods_3.6.1   mime_0.8        Rcpp_1.0.3      rlang_0.4.2    
  rmarkdown_2.0.5 stats_3.6.1     stringi_1.4.3   stringr_1.4.0  
  tinytex_0.18    tools_3.6.1     utils_3.6.1     xfun_0.11      
  yaml_2.2.0     

Pandoc version: 2.7.3
---
```

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('rmarkdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/rmarkdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

I'm noticing that when I print a tibble and generate a PDF output, the intermediate markdown file has `<div class="kable-table">` surrounding the table. This seems to be the result of `knit_print.R` [line 22](https://github.com/rstudio/rmarkdown/blob/7fa4eb4b7cbf60b35404c3ecf35dfe0730301a46/R/knit_print.R#L22)? Normally this doesn't affect my output, however I'm trying to "hack" in table captions (and also use pandoc-crossref down the line). I'm rendering with the following call: `render("test.Rmd", output_format = pdf_document(df_print = "kable", keep_md = T))`

**test.Rmd**

``````
---
title: "test"
output: pdf_document
---

```{r}
library(knitr)
opts_chunk$set(echo = F, message = F, warning = F)
test_tibble <- tibble(a = letters[1:5], b = 1:5)
```

# Using print

```{r}
test_tibble
```
Table: Table caption 1 {#tbl:first}

# Using kable() to print

```{r}
kable(test_tibble, format = "markdown")
```
Table: Table caption 2 {#tbl:second}
``````
This fixes #1740 

I began with the easy way, just prepending if pandoc  >= 2.8
This seem to work well

@yihui what do you prefer ? 
This sort of simple way to deal with this or the use of `--metadata-file` ? 

In fact, I tried the later, but at [these lines](https://github.com/rstudio/rmarkdown/blob/7660bc08ebec10f39241972339de5f0145ef9af6/R/render.R#L401-L411) in render.R, where R file is spinned, it does not seems that we can access yet the output format to add some pandoc args directly. We can add it later like `post_knit_handler` or just add it anywhere if a temporary yaml file has been created I guess. Even if it seems the way to go, it seems maybe to complicated to implement (more lines and logic to add)

What do you think ?
I'll modify or complete this PR based on your input. 
Rendering this simple `test.R` script:

```r
#' ---
#' title: "Test title"
#' author: "Name Surname"
#' ---
print("Hello World!")
```

produces HTML/PDF documents with the wrong title and author when used with pandoc>=2.8, while it works fine with pandoc 2.7.3 .

How to reproduce:

```
$ ~/miniconda3/bin/conda create -y -n rmarkdown r-rmarkdown=2.0
...
$ . ~/miniconda3/bin/activate rmarkdown
(rmarkdown) $ Rscript -e "xfun::session_info('rmarkdown')"
R version 3.6.2 (2019-12-12)
Platform: x86_64-conda_cos6-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Locale:
  LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              
  LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    
  LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   
  LC_PAPER=en_GB.UTF-8       LC_NAME=C                 
  LC_ADDRESS=C               LC_TELEPHONE=C            
  LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       

Package version:
  base64enc_0.1.3 digest_0.6.23   evaluate_0.14   glue_1.3.1     
  graphics_3.6.2  grDevices_3.6.2 highr_0.8       htmltools_0.4.0
  jsonlite_1.6    knitr_1.26      magrittr_1.5    markdown_1.1   
  methods_3.6.2   mime_0.7        Rcpp_1.0.3      rlang_0.4.2    
  rmarkdown_2.0   stats_3.6.2     stringi_1.4.3   stringr_1.4.0  
  tinytex_0.18    tools_3.6.2     utils_3.6.2     xfun_0.11      
  yaml_2.2.0     

Pandoc version: 2.9
(rmarkdown) $ Rscript -e 'library("rmarkdown"); render("test.R")'


processing file: test.spin.Rmd
  |.......................                                               |  33%
  ordinary text without R code

  |...............................................                       |  67%
label: unnamed-chunk-1
  |......................................................................| 100%
  ordinary text without R code


output file: test.knit.md

/usr/users/ga002/soranzon/miniconda3/envs/rmarkdown/bin/pandoc +RTS -K512m -RTS test.utf8.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash+smart --output test.html --email-obfuscation none --self-contained --standalone --section-divs --template /usr/users/ga002/soranzon/miniconda3/envs/rmarkdown/lib/R/library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable 'theme:bootstrap' --include-in-header /tmp/Rtmp4eInxF/rmarkdown-strdb663a8adc4.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' --lua-filter /usr/users/ga002/soranzon/miniconda3/envs/rmarkdown/lib/R/library/rmarkdown/rmd/lua/pagebreak.lua --lua-filter /usr/users/ga002/soranzon/miniconda3/envs/rmarkdown/lib/R/library/rmarkdown/rmd/lua/latex-div.lua 

Output created: test.html
(rmarkdown) $ grep -E '"author"|<title|<h1' test.html 
<meta name="author" content="soranzon" />
<title>test.R</title>
<h1 class="title toc-ignore">test.R</h1>
<h4 class="author">soranzon</h4>
```

After downgrading pandoc to 2.7.3:

```
(rmarkdown) $ conda install -y pandoc=2.7.3
...
(rmarkdown) $ Rscript -e "xfun::session_info('rmarkdown')"
R version 3.6.2 (2019-12-12)
Platform: x86_64-conda_cos6-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Locale:
  LC_CTYPE=en_GB.UTF-8       LC_NUMERIC=C              
  LC_TIME=en_GB.UTF-8        LC_COLLATE=en_GB.UTF-8    
  LC_MONETARY=en_GB.UTF-8    LC_MESSAGES=en_GB.UTF-8   
  LC_PAPER=en_GB.UTF-8       LC_NAME=C                 
  LC_ADDRESS=C               LC_TELEPHONE=C            
  LC_MEASUREMENT=en_GB.UTF-8 LC_IDENTIFICATION=C       

Package version:
  base64enc_0.1.3 digest_0.6.23   evaluate_0.14   glue_1.3.1     
  graphics_3.6.2  grDevices_3.6.2 highr_0.8       htmltools_0.4.0
  jsonlite_1.6    knitr_1.26      magrittr_1.5    markdown_1.1   
  methods_3.6.2   mime_0.7        Rcpp_1.0.3      rlang_0.4.2    
  rmarkdown_2.0   stats_3.6.2     stringi_1.4.3   stringr_1.4.0  
  tinytex_0.18    tools_3.6.2     utils_3.6.2     xfun_0.11      
  yaml_2.2.0     

Pandoc version: 2.7.3
(rmarkdown) $ Rscript -e 'library("rmarkdown"); render("test.R")'


processing file: test.spin.Rmd
  |.......................                                               |  33%
  ordinary text without R code

  |...............................................                       |  67%
label: unnamed-chunk-1
  |......................................................................| 100%
  ordinary text without R code


output file: test.knit.md

/usr/users/ga002/soranzon/miniconda3/envs/rmarkdown/bin/pandoc +RTS -K512m -RTS test.utf8.md --to html4 --from markdown+autolink_bare_uris+tex_math_single_backslash+smart --output test.html --email-obfuscation none --self-contained --standalone --section-divs --template /usr/users/ga002/soranzon/miniconda3/envs/rmarkdown/lib/R/library/rmarkdown/rmd/h/default.html --no-highlight --variable highlightjs=1 --variable 'theme:bootstrap' --include-in-header /tmp/RtmpGhwdeh/rmarkdown-str14d771a89a0f.html --mathjax --variable 'mathjax-url:https://mathjax.rstudio.com/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML' --lua-filter /usr/users/ga002/soranzon/miniconda3/envs/rmarkdown/lib/R/library/rmarkdown/rmd/lua/pagebreak.lua --lua-filter /usr/users/ga002/soranzon/miniconda3/envs/rmarkdown/lib/R/library/rmarkdown/rmd/lua/latex-div.lua 

Output created: test.html
(rmarkdown) $ grep -E '"author"|<title|<h1' test.html 
<meta name="author" content="Name Surname" />
<title>Test title</title>
<h1 class="title toc-ignore">Test title</h1>
<h4 class="author">Name Surname</h4>
```

<!--
Please keep the below portion in your issue. Your issue will be closed if any of the boxes is not checked (i.e., replace `[ ]` by `[x]`). In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('rmarkdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/rmarkdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

- Add `pandoc_copy_data` to copy data files provided by Pandoc
  (e.g, `pandoc_copy_data("reference.docx")`)
  (cf. https://pandoc.org/MANUAL.html#option--print-default-data-file)

- Add `pandoc_copy_template` to copy templates provided by R Markdown or Pandoc.
  (e.g., `pandoc_copy_template(html_document()`)
  (cf. https://pandoc.org/MANUAL.html#templates)
After updating packages today, Rmd files that previously knitted properly to PDF files were no longer working because knitting ends up leading to an undefined control sequence in the .tex file:

>l.942   \file_get:nnN
{unicode-math-table.tex} {} \l__um_mathtable_tl 

My computer has MiKTeX 2.9 installed and fully updated. This behavior appears to be caused by changes made between rmarkdown version 1.17 and version 1.18. I have also tried using the latest development version (1.18.6), but that gives the same result as version 1.18. 

```
> library(rmarkdown)
> xfun::session_info()  # Under setup that fails
R version 3.6.1 (2019-07-05)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 18362), RStudio 1.2.5019

Locale:
  LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252
  LC_NUMERIC=C                           LC_TIME=English_United States.1252   

Package version:
  base64enc_0.1.3  compiler_3.6.1   digest_0.6.23    evaluate_0.14    glue_1.3.1       graphics_3.6.1   grDevices_3.6.1 
  highr_0.8        htmltools_0.4.0  jsonlite_1.6     knitr_1.26       magrittr_1.5     markdown_1.1     methods_3.6.1   
  mime_0.7         Rcpp_1.0.3       rlang_0.4.2      rmarkdown_1.18.6 stats_3.6.1      stringi_1.4.3    stringr_1.4.0   
  tinytex_0.18     tools_3.6.1      utils_3.6.1      xfun_0.11        yaml_2.2.0
```

Uninstalling rmarkdown and reverting to the older version as shown below fixes the problem (knitting creates PDFs as expected). 

```
remove.packages("rmarkdown")
devtools::install_version("rmarkdown", version = "1.17", repos = "http://cran.us.r-project.org")
```

The following minimal Rmd code reproduces this problem on my computer. 

```
---
output:
 pdf_document:
   latex_engine: xelatex
---

Knitting this file produces a PDF file properly when rmarkdown 1.15 or 1.17 is 
installed, but fails when version 1.18 or 1.18.6 are installed instead. Then 
knitting generates an undefined control sequence.    
```

<!--
Please keep the below portion in your issue. Your issue will be closed if any of the boxes is not checked (i.e., replace `[ ]` by `[x]`). In certain (rare) cases, you may be exempted if you give a brief explanation (e.g., you are only making a suggestion for improvement). Thanks!
-->

---

By filing an issue to this repo, I promise that

- [x] I have fully read the issue guide at https://yihui.org/issue/.
- [x] I have provided the necessary information about my issue.
    - If I'm asking a question, I have already asked it on Stack Overflow or RStudio Community, waited for at least 24 hours, and included a link to my question there.
    - If I'm filing a bug report, I have included a minimal, self-contained, and reproducible example, and have also included `xfun::session_info('rmarkdown')`. I have upgraded all my packages to their latest versions (e.g., R, RStudio, and R packages), and also tried the development version: `remotes::install_github('rstudio/rmarkdown')`.
    - If I have posted the same issue elsewhere, I have also mentioned it in this issue.
- [x] I have learned the Github Markdown syntax, and formatted my issue correctly.

I understand that my issue may be closed if I don't fulfill my promises.

This PR enables output formats to keep native haskell files.
Currently, this is a draft, which modifies least functions (`html_document`, `pdf_document`, `output_format`, and `render`).
If @yihui likes the idea, I would like to add the `keep_md` argument to other formats, and then update Rd files and NEWS.