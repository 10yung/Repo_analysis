Hi there

Where's the website ? 

Cheers,
If the same download path is used for all instances, it may prove problematic, especially if it is configured to download specific files; the file would be overwritten and the data lost.

Adding the instance name to the path allows the feature to be used by multiple instances in succession without potentially overwriting files.

/cc @tas50 @smurawski @gep13 
This is faster as it doesn't have to traverse the whole file system for
the requires.

Signed-off-by: Tim Smith <tsmith@chef.io>
Updates the requirements on [minitest](https://github.com/seattlerb/minitest) to permit the latest version.
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href="https://github.com/seattlerb/minitest/blob/master/History.rdoc">minitest's changelog</a>.</em></p>
<blockquote>
<p>=== 5.14.0 / 2020-01-11</p>
<ul>
<li>
<p>2 minor enhancements:</p>
<ul>
<li>Block-assertions (eg assert_output) now error if raised inside the block. (casperisfine)</li>
<li>Changed assert_raises to only catch Assertion since that covers Skip and friends.</li>
</ul>
</li>
<li>
<p>3 bug fixes:</p>
<ul>
<li>Added example for value wrapper with block to Expectations module. (stomar)</li>
<li>Fixed use of must/wont_be_within_delta on Expectation instance. (stomar)</li>
<li>Renamed UnexpectedError#exception to #error to avoid problems with reraising. (casperisfine)</li>
</ul>
</li>
</ul>
<p>=== 5.13.0 / 2019-10-29</p>
<ul>
<li>
<p>9 minor enhancements:</p>
<ul>
<li>Added Minitest::Guard#osx?</li>
<li>Added examples to documentation for assert_raises. (lxxxvi)</li>
<li>Added expectations #path_must_exist and #path_wont_exist. Not thrilled with the names.</li>
<li>Added fail_after(year, month, day, msg) to allow time-bombing after a deadline.</li>
<li>Added skip_until(year, month, day, msg) to allow deferring until a deadline.</li>
<li>Deprecated Minitest::Guard#maglev?</li>
<li>Deprecated Minitest::Guard#rubinius?</li>
<li>Finally added assert_path_exists and refute_path_exists. (deivid-rodriguez)</li>
<li>Refactored and pulled Assertions#things_to_diff out of #diff. (BurdetteLamar)</li>
</ul>
</li>
<li>
<p>3 bug fixes:</p>
<ul>
<li>Fix autorun bug that affects fork exit status in tests. (dylanahsmith/jhawthorn)</li>
<li>Improved documentation for _/value/expect, especially for blocks. (svoop)</li>
<li>Support new Proc#to_s format. (ko1)</li>
</ul>
</li>
</ul>
<p>=== 5.12.2 / 2019-09-28</p>
<ul>
<li>
<p>1 bug fix:</p>
<ul>
<li>After chatting w/ <a href="https://github.com/y-yagi">@y-yagi</a> and others, decided to lower support to include ruby 2.2.</li>
</ul>
</li>
</ul>
<p>=== 5.12.1 / 2019-09-28</p>
<ul>
<li>
<p>1 minor enhancement:</p>
<ul>
<li>Added documentation for Reporter classes. (sshaw)</li>
</ul>
</li>
<li>
<p>3 bug fixes:</p>
<ul>
<li>Avoid using 'match?' to support older ruby versions. (y-yagi)</li>
<li>Fixed broken link to reference on goodness-of-fit testing. (havenwood)</li>
<li>Update requirements in readme and Rakefile/hoe spec.</li>
</ul>
</li>
</ul>
</tr></table> ... (truncated)
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/seattlerb/minitest/commit/d6116044e6e84f99462b64b5563ddf963795061f"><code>d611604</code></a> prepped for release</li>
<li><a href="https://github.com/seattlerb/minitest/commit/1c9ba0c39dfee149f3b63a6b47e235731a76567f"><code>1c9ba0c</code></a> Closed temporary IOs when exiting capture_subprocess_io. (doudou)</li>
<li><a href="https://github.com/seattlerb/minitest/commit/cdfb5b9fca8351253e76c96b489a5e3c349fe683"><code>cdfb5b9</code></a> - Added example for value wrapper with block to Expectations module. (stomar)</li>
<li><a href="https://github.com/seattlerb/minitest/commit/5399dc50e38b0f870547a6efe3d9410ba422852b"><code>5399dc5</code></a> Added minitest_log to known modules (BurdetteLamar)</li>
<li><a href="https://github.com/seattlerb/minitest/commit/96ba1dac6141599cce47ec298e7e72dc7d49812d"><code>96ba1da</code></a> + Block-assertions (eg assert_output) now error if raised inside the block. (...</li>
<li><a href="https://github.com/seattlerb/minitest/commit/02e35ced3952a6e05d206635f9ec9ec3f14af091"><code>02e35ce</code></a> - Fixed use of must/wont_be_within_delta on Expectation instance. (stomar)</li>
<li><a href="https://github.com/seattlerb/minitest/commit/58c0b2f005a45722d0a86955df42f88f31a77e28"><code>58c0b2f</code></a> + Changed assert_raises to only catch Assertion since that covers Skip and fr...</li>
<li><a href="https://github.com/seattlerb/minitest/commit/5802aa08280a3609b684e0ebef95dabfbd3ec9ff"><code>5802aa0</code></a> - Renamed UnexpectedError#exception to #error to avoid problems with reraisin...</li>
<li><a href="https://github.com/seattlerb/minitest/commit/ecb1afeb36f831d20f1f0f9081bd1b8e32ddbdfe"><code>ecb1afe</code></a> prepped for release</li>
<li><a href="https://github.com/seattlerb/minitest/commit/381e9654d89a913b1d9e1c9ce6c8e2f85b757962"><code>381e965</code></a> + Deprecated Minitest::Guard#maglev?</li>
<li>Additional commits viewable in <a href="https://github.com/seattlerb/minitest/compare/v5.3.0...v5.14.0">compare view</a></li>
</ul>
</details>
<br />


Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
## Description

I'm using three step provisioning: kitchen create, kitchen converge and kitchen verify. With latest  test-kitchen version 2.3.4 converge action often fails due to communication issue. After small delay converge may start to work normally. Most likely default transport attributes are not good enough in this case. Here is a list of related attributes I have:
      connection_retries: 5
      connection_retry_sleep: 1
      max_wait_until_ready: 600
      operation_timeout: 60
      receive_timeout: 70
Which attribute I need to adjust to allow winrm to be available later?

## .kitchen.yml, transport section

```ruby
transport:
  name: winrm
  elevated: true
  username: <%= ENV['VCENTER_GuestElevatedUserName'] || 'unknown' %>
  password: <%= ENV['VCENTER_GuestElevatedPassword'] || 'unknown' %>
```

## Kitchen Version

```ruby
$ kitchen --version
Test Kitchen version 2.3.4
```

## ChefDK Version
```ruby
$ chef --version
ChefDK version: 4.6.35
Chef Infra Client version: 15.5.17
Chef InSpec version: 4.18.39
Test Kitchen version: 2.3.4
Foodcritic version: 16.2.0
Cookstyle version: 5.13.7
```
## Platform Version
 Windows Server 2016 Datacenter Evaluation

## Replication Case

I'm running this via vmware vcenter driver on vmWare farm remotely from WS2016ServerDC agent with ChefDK ant test-kitchen installed. After 'kitchen create' a full clone of virtual machine is created on farm and then 'kitchen converge' is called. That converge action fails from time to time but if you repeat it again, it started normally. 

## Kitchen Output

```ruby
$ kitchen create VS2017Prof-Win10LTSB
-----> Starting Test Kitchen (v2.3.4)
-----> Creating <VS2017Prof-Win10LTSB>...
       Cloning 'VS2017Base-Win10LTSB-s1197.2' to create the VM...
       Waiting for VMware tools to become available (timeout: 90 seconds)...
       Waiting for IP (timeout: 90 seconds)...
       Created machine VS2017Prof-Win10LTSB-615b209c with IP 10.132.24.26
       Finished creating <VS2017Prof-Win10LTSB> (5m42.97s).
-----> Test Kitchen is finished. (5m49.11s)

$ kitchen converge VS2017Prof-Win10LTSB
-----> Starting Test Kitchen (v2.3.4)
-----> Converging <VS2017Prof-Win10LTSB>...
       Preparing files for transfer
       Preparing dna.json
       Resolving cookbook dependencies with Berkshelf 7.0.8...
       Removing non-cookbook files before transfer
       Preparing validation.pem
       Preparing client.rb
>>>>>> ------Exception-------
>>>>>> Class: Kitchen::ActionFailed
>>>>>> Message: 1 actions failed.
>>>>>>     Failed to complete #converge action: [No connection could be made because the target machine actively refused it. - No connection could be made because the target machine actively refused it. - connect(2) for "10.132.24.26" port 5985 (10.132.24.26:5985)] on VS2017Prof-Win10LTSB
>>>>>> ----------------------
>>>>>> Please see .kitchen/logs/kitchen.log for more details
>>>>>> Also try running `kitchen diagnose --all` for configuration
```

## Kitchen Diagnose

Here is transport portion of `kitchen diagnose --all` output:

```ruby
    transport:
      connection_retries: 5
      connection_retry_sleep: 1
      elevated: true
      kitchen_root: D:/dev/chef/VS2017Prof
      log_level: :info
      max_wait_until_ready: 600
      name: winrm
      operation_timeout: 60
      password: vagrant
      port: 5985
      rdp_port: 3389
      receive_timeout: 70
      scheme: http
      test_base_path: D:/dev/chef/VS2017Prof/test/integration
      username: vagrant
      winrm_transport: :negotiate
```

## Description

At present, test-kitchen is only building commands that support for chef-client.  As we can not guarantee that every distribution of Chef OSS will create the symlinks for wrapping chef-client.   We should create a provisioner attribute that defines the executables used for our various chef provisioners (chef-apply, chef-solo, chef-zero).

The defaults still should be the expected offical Chef executables.

chef-zero: https://github.com/test-kitchen/test-kitchen/blob/master/lib/kitchen/provisioner/chef_zero.rb#L39
chef-apply: https://github.com/test-kitchen/test-kitchen/blob/master/lib/kitchen/provisioner/chef_apply.rb#L62
chef-solo: https://github.com/test-kitchen/test-kitchen/blob/master/lib/kitchen/provisioner/chef_solo.rb#L35

This also is outlined in the distribution standards distributed by Chef. 

> Additionally, commands used to execute the distribution - if they include trademarks of Chef - must be different from those in Chef Software's distribution. For example, if you create a distribution of Chef, the command to use your distribution's binary cannot be "chef", though it can be something like "kitty" - the goal is prevent confusion about which distributions come from Chef Software and which come from another source.

> That said, it is ok to symlink a command to a distribution's equivalent command. If you have created a distribution of "chef" called "kitty", it is fine to symlink "chef-client" to call "kitty-client". In these cases. you do need to make it clear that the user is using "kitty" and not "chef". If someone uses "chef-client" and it calls "kitty-client" - the command output should display words to the user reminding them that they are using "kitty" and a symlinked command, rather that the official "chef" distribution.

Source: https://github.com/chef/chef-oss-practices/blob/510ccb2b1b9b046247be5f99083d0c2e30649dad/distributions/distribution-guidelines.md

## Kitchen Version

```ruby
$ kitchen --version
Test Kitchen version 2.3.4
```

## ChefDK Version
N/A

## Ruby Version


```ruby
ruby 2.6.2p47 (2019-03-13 revision 67232) [x86_64-darwin17]
```

## Platform Version

MacOS 10.14.6

## Replication Case

If I use the Cinc client as an example, if they didn't have cinc-wrapper to symlink chef executables, then test-kitchen will not work for it.

https://gitlab.com/cinc-project/client/blob/master/patches/chef/0002-Cinc-omnibus-patches.patch#L299


Updates the requirements on [thor](https://github.com/wycats/thor) to permit the latest version.
<details>
<summary>Changelog</summary>

*Sourced from [thor's changelog](https://github.com/erikhuda/thor/blob/master/CHANGELOG.md).*

> ## 0.19.1, release 2014-03-24
> * Fix `say` non-String break regression
> 
> ## 0.19.0, release 2014-03-22
> * Add support for a default to #ask
> * Avoid [@&#8203;namespace](https://github.com/namespace) not initialized warning
> * Avoid private attribute? warning
> * Fix initializing with unknown options
> * Loosen required_rubygems_version for compatibility with Ubuntu 10.04
> * Shell#ask: support a noecho option for stdin
> * Shell#ask: change API to be :echo => false
> * Display a message without a stack trace for ambiguous commands
> * Make say and say_status thread safe
> * Dependency for console io version check
> * Alias --help to help on subcommands
> * Use mime-types 1.x for Ruby 1.8.7 compatibility for Ruby 1.8 only
> * Accept .tt files as templates
> * Check if numeric value is in enum
> * Use Readline for user input
> * Fix dispatching of subcommands (concerning :help and *args)
> * Fix warnings when running specs with `$VERBOSE = true`
> * Make subcommand help more consistent
> * Make the current command chain accessible in command
> 
> ## 0.18.1, release 2013-03-30
> * Revert regressions found in 0.18.0
> 
> ## 0.18.0, release 2013-03-26
> * Remove rake2thor
> * Only display colors if output medium supports colors
> * Pass parent_options to subcommands
> * Fix non-dash-prefixed aliases
> * Make error messages more helpful
> * Rename "task" to "command"
> * Add the method to allow for custom package name
> 
> ## 0.17.0, release 2013-01-24
> * Add better support for tasks that accept arbitrary additional arguments (e.g. things like `bundle exec`)
> * Add #stop_on_unknown_option!
> * Only strip from stdin.gets if it wasn't ended with EOF
> * Allow "send" as a task name
> * Allow passing options as arguments after "--"
> * Autoload Thor::Group
> 
> ## 0.16.0, release 2012-08-14
> * Add enum to string arguments
> 
> ## 0.15.4, release 2012-06-29
> * Fix regression when destination root contains reserved regexp characters
> 
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c2da2f5`](https://github.com/erikhuda/thor/commit/c2da2f5b26f976510965adda01e4893d1eae7f7d) Release 0.19.1
- [`8c10a67`](https://github.com/erikhuda/thor/commit/8c10a6791395769945b0bafe1e80e644a6810aae) Merge pull request [#405](https://github-redirect.dependabot.com/wycats/thor/issues/405) from mal/issue-404
- [`a2293e0`](https://github.com/erikhuda/thor/commit/a2293e06c2b93778289d10e4ca373831cc2c232b) Convert message to string
- [`21f91d4`](https://github.com/erikhuda/thor/commit/21f91d42b457219ddfe64eef07834fa360af42f2) Convert message to string
- See full diff in [compare view](https://github.com/wycats/thor/compare/v0.19.0...v0.19.1)
</details>
<br />

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
## Description

I am looking for help understanding the control flow of test-kitchen. I am updating the kitchen driver [kitchen-opennebula](https://github.com/test-kitchen/kitchen-opennebula) to use the latest [fog-opennebula](https://github.com/fog/fog-opennebula) gem. When I run kitchen, I am getting the following warning:

```
[fog][DEPRECATION] Unable to load Fog::OpenNebula::Compute
[fog][DEPRECATION] The format Fog::Compute::OpenNebula is deprecated
Starting Test Kitchen (v1.16.0)
```

My problem is as follows. When test kitchen starts, where is it calling `Fog::Compute::OpenNebula` from? Test kitchen runs without error. The issue is just the deprecation warning. I have removed the obvious references to `Fog::Compute::OpenNebula` from the kitchen-driver, but I cannot figure out where `fog` would be referenced from in the test-kitchen program. We are using an old version of Chef/Kitchen, but as far as I can tell, the deprecation warning is not related to the old version.

## Kitchen Version

Tell us which version of test-kitchen you are using (`kitchen --version`).

```ruby
Test Kitchen version 1.16.0
```

## ChefDK Version

If you are running test-kitchen via ChefDK or Chef Workstation, `chef --version` will provide additional relevent version details.

```ruby
Chef Development Kit Version: 1.6.11
chef-client version: 12.21.26
delivery version: master (73ebb72a6c42b3d2ff5370c476be800fee7e5427)
berks version: 5.6.4
kitchen version: 1.16.0
inspec version: 1.25.1
```

## Ruby Version

If you are not using test-kitchen via ChefDK or Chef Workstation, please provide the output of ruby --version.

```ruby
ruby 2.3.5p376 (2017-09-14 revision 59905) [x86_64-linux]
```

## Platform Version

Tell us which Operating System distribution and version test-kitchen is running on.

Ubuntu 16

## Replication Case

I doubt this will be useful since I don't know of any public OpenNebula cluster to test this on. But the key change is that the kitchen-opennebula driver is using `fog/opennebula` instead of the `fog` gem.

Note that I am just wondering about how test kitchen loads third-party drivers. It is not clear how my deprecation warning above is occurring.

## Kitchen Output

Please note that kitchen runs as expected (no errors), the problem is the deprecation warning.

```ruby
[fog][DEPRECATION] Unable to load Fog::OpenNebula::Compute
[fog][DEPRECATION] The format Fog::Compute::OpenNebula is deprecated
Starting Test Kitchen (v1.16.0)
...
(truncated)
```

## Kitchen Diagnose

I will add if information would be helpful.

## Feature Request

It would be helpful to have an environment variable that we could use to specify the instances we want to work on. For example, say i have 6 instances I work with:
- windows-2012-server
- windows-2016-server
- windows-2012-client
- windows-2016-client
- rhel-server
- rhel-client

But I am only working with the windows-2016-server and the rhel-server today. I can use regex to specify those, but then i have to append that to every kitchen command I run. It would be nice if I could have something like `WORKING_INSTANCES=<regex>` and then `kitchen` would check for that variable. That way, you could just update the var if you wanted to work with different instances instead of updating each command.

## Description

When using kitchen with RHEL RedHat with subscription-manager register, which requires a registration for basic packages such as nfs-utils or rsync, using the `KITCHEN_NFS=1 ` env which switched the `synced_folders` to NFS fails on 

```
==> default: Installing NFS client...
STDERR: The following SSH command responded with a non-zero exit status.
Vagrant assumes that this means the command failed!

if command -v dnf; then
  dnf -y install nfs-utils nfs-utils-lib portmap
else
  yum -y install nfs-utils nfs-utils-lib portmap
fi

if test $(ps -o comm= 1) == 'systemd'; then
  /bin/systemctl restart rpcbind nfs
else
  /etc/init.d/rpcbind restart
  /etc/init.d/nfs restart
fi

Stdout from the command:

Loaded plugins: product-id, search-disabled-repos, subscription-manager
This system is not registered with an entitlement server. You can use subscription-manager to register.
No package nfs-utils available.
No package nfs-utils-lib available.
No package portmap available.
```


## Kitchen Version

Tell us which version of test-kitchen you are using (`kitchen --version`).  

```ruby
# Copy-paste your results here
/opt/chefdk/bin/kitchen --version
Test Kitchen version 2.3.3
```

## ChefDK Version

If you are running test-kitchen via ChefDK, `chef --version` will provide additional relevent version details.

```ruby
# Copy-paste your results here
/opt/chefdk/bin/chef --version
ChefDK version: 4.4.27
Chef Infra Client version: 15.3.14
Chef InSpec version: 4.16.0
Test Kitchen version: 2.3.3
Foodcritic version: 16.1.1
Cookstyle version: 5.6.2

```

## Ruby Version

If you are not using test-kitchen via ChefDK, please provide the output of ruby --version.

```ruby
# Copy-paste your results here
/opt/chefdk/embedded/bin/ruby --version
ruby 2.6.4p104 (2019-08-28 revision 67798) [x86_64-linux]

```

## Platform Version

Ubuntu 18.04
