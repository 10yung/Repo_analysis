I am using Swift Location Library 4 and setting the interval as 2 minutes and Continuous.
However, I am not getting the location as per the specified interval.  Instead it is inconsisent
and gives multiple locations within the time interval.
Any help would be appreciated.  A sample implementation code would be of great help.

Thanks,
Badari
I want to send location to my server every 2hs during 48hs but have many questions:

1. Can I combine significant subscription with dataFrequency?
2. If I call locateFromGPS(.oneshot) after calling with .significant because want to force sending current location when receive a notification, will it override significant listener?
3. What if I call locateFromGPS(.significant) twice when app is open in foreground?

Thanks
 Hi Team,

I am looking for help/guidance in using the SwiftLocation library.

I  implemented background location tracking. The problem is the location is not updated as per the given minimum interval. The locations that I am getting are inconsistent e.g. If my minimum interval is 120 seconds, then the location event happens randomly, within 2 minutes  I am getting locations with every 15 seconds of time intervals.
I tried it for different intervals and accuracy but I still see inconsistent behavior.
Has anybody experienced similar behavior? 
Please let me know.


My code snippet

let request = LocationManager.shared.locateFromGPS(.continous, accuracy: .house) { data in
            switch data {
            case .failure(let error):
                print("Location error: \(error)")
            case .success(let location):
                //print("New Location: \(location)")    
            }
        }
        request.dataFrequency = .fixed(minInterval: 60, minDistance: 0)

I am using **pod 'SwiftLocation', '~> 4.1.0'**

    
If i call `locateFromGPS` with accuracy: `.custom(kCLLocationAccuracyBest)` aka `-1`,
every location event is skipped because `locationSatisfyRequest(_:)` function checking following condition:
```
guard location.horizontalAccuracy < accuracy.value else {
    return false // accuracy is not enough
}
```

meanwhile i getting location with +\- 65m accuracy
Hi guys,

Thanks for making and still maintenance this awesome library. Save tons of time.

I am having an issue that can not figure out why. I am trying to request `oneShot` current location. It works most of the time. But after putting the app in background, or turning off device screen when app is in foreground for a while, it can not get the location anymore.

I try to set the timeout for 5 seconds, and after 5 seconds it return errors. Have anyone been into the same issue?

```
static func currentLocation() -> Observable<CLLocation> {
        return Observable.create { observer in
            let req = LocationManager.shared.locateFromGPS(.oneShot, accuracy: .block, timeout: .delayed(5)) { (result) in
                        switch result {
                        case .success(let location):
                            print("LOCATION \(location)")
                            observer.onNext(location)
                        case .failure(let error):
                            print("FAILED  \(error) \(error.localizedDescription)")
                            var message = "Something went wrong when getting your location. Please try again!"
                            switch error {
                            case .generic(let genericMessage):
                                message += "\n \(genericMessage)"
                            default:
                                break
                            }
                            let newError = NSError(domain: "LocationManager", code: -999, userInfo: [NSLocalizedDescriptionKey: message])
                        observer.onError(newError)
                        }
                    }
            req.start()
            
            return Disposables.create {
                req.stop()
            }
        }
    }
```

By the way, I am using RxSwift. Thanks for your time!

![IMG_0047](https://user-images.githubusercontent.com/53501269/70701688-c1b40b00-1d07-11ea-926d-96dffea08dbc.PNG)
Updated: This is the error message.
Hey guys,

I'm getting a No such module 'SwiftLocation' after importing the library using cocoa pods (which finishes successfully).

Xcode version: Version 11.1
platform :ios, '13.1'
'SwiftLocation', '~> 4.0'

Thanks
Support region monitoring in background and foreground.
Apple Watch Series 2 has it's own gps module. Would you add watch os support?
We are going to use Apple Watch in independent mode
Since 90% of this is usable on both iOS and macOS could you create a macOS target?
