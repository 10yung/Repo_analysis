Instead of getting help, I get this message:
```$ git recall --help
No manual entry for git-recall
See 'man 7 undocumented' for help when manual pages are not available.
```
`git recall -h` and `git-recall --help` works, though

git-recall 1.2.4
git version 2.7.4 on Ubuntu 16.04.4 LTS
1. change the coding style, use 4 spaces to indent, and remove the end of the line blank.
2. add `home/gg` `end/G` key maps.

it might be a good idea to keep the standard git-log bahavior and just pass arguments to git log instead of limiting the functionality and setting non-standard default values like it's done for -d and -a.
I can see the need for `--abbrev-commit` and `--pretty=format:'${GIT_FORMAT}' `   but otherwise it would be nice to make it behave like git-log does with its
 `git log [<options>] [<revision range>] [[--] <path>...]` scheme.
If you insist on keeping the default behavior as it is right now, it would at least be nice to be able to pass arguments to git log. I think it would simplify the program a lot.


maybe you love this one: https://github.com/so-fancy/diff-so-fancy and use that in this project
Added an option -l/--local to show only commits that are ahead of origin/{branch}.
For this I introduced the function `set_log_command()` to select a different command template as it makes little sense to filter author and date in combination with -local, at least by default. The command is expected to show ALL commits ahead of the remote branch.

One thing I don't like is the error handling for the git log command.
`COMMITS=($(eval ${GIT_LOG} 2>/dev/null))`
when using the -local option and the branch origin/{branch}  does not exist yet (as is the case if you
just created the new branch and didn't push anything yet) the error does not get caught and instead
the "did nothing during this period" message is shown.  So error handling should be added, but
that goes beyond this PR.


Let's say I want to run on the root folder of all my git projects, can it be done?
In rxvt-unicode 9.22 on FreeBSD 11.0 (using zsh and /bin/sh) git recall prints the commits, but hitting j/k/Up/Down just prints out the same commits once more. No commit is marked like in the gif at any time. Tab has a similar effect of partial reprint of the lines.