
merge-sort-inplace.js is not an example of an in place Merge Sort because arrays are being created and concatenated. Here's an example of an in place merge sort...

```javascript
const mergeSort = (array, left = 0, right = array.length - 1) => {
    
    if (left >= right) return array

    let mid = Math.floor((left + right) / 2),
        i = mid + 1
    
    mergeSort(array, left, mid)
    mergeSort(array, i, right)

    while (left <= mid && i <= right) {
        if (array[left] < array[i]) left++
        else {
            array.splice(left, 0, array.splice(i, 1)[0])
            left++
            mid++
            i++
        }
    }

    return array
}
```


It has no importance at all, but the header for quicksort is the header from insertion sort :P

https://github.com/nzakas/computer-science-in-javascript/blob/master/algorithms/sorting/quicksort/quicksort.js#L2

A Tree can store any object, because store hash with original object. Hash is integer, and use as key.


Changed to use a slightly faster flooring method, it's actually faster in most cases.



Learn about the Damerau-Levenshtein Distance: http://en.wikipedia.org/wiki/Damerauâ€“Levenshtein_distance

