The plotly library is one of many htmlwidgets, it likely will not solve every user's needs. Linking to the htmlwidgets showcase provides users with more alternatives until ggvis is available.

---
Note: I've previously signed the individual contributor agreement.
1. Run the following
```
library(tidyverse)
library(shiny)
library(ggvis)

server <- function(input, output, session) {
	
	vis_data <- reactive({
		mtcars
	})
	
	output$vis <- renderUI({
		ggvisOutput('vis_test')
	})
	
	observeEvent(input$slider, {
		reactive({
			vis_data()[seq(1, input$slider), ] %>%
			ggvis(
				x = ~wt,
				y = ~mpg
			) %>%
			layer_points() %>%
			layer_bars() %>%
			add_tooltip(
				function(x) print(nrow(vis_data()[seq(1, input$slider), ]))
			)
		}) %>% bind_shiny('vis_test')
	})
		
}

ui <- function(input, output, session) { 
	fluidPage(
		sliderInput('slider', min = 1, max = nrow(mtcars), value = 3, label = 'sliderlabel'),
		htmlOutput(outputId = 'vis')	
	)
}

shinyApp(ui = ui, server = server)
```

2. Hover over one of the bars, note the console/printed output. Should only print once
3. Change the slider, hover over a bar. Now it prints twice!
4. Change the slider again. Hover over a bar. Now it prints three times!

My hunch is that every time `bind_shiny` is called, the observer for `add_tooltip` isn't being destroyed, and each of these is observers is being called when the hover occurs.

Is there any workaround?
The following does not work:
```
library(magrittr)
library(ggvis)

mtcars %>%
ggvis() %>%
group_by(gear) %>%
layer_bars(
    x = ~factor(cyl),
    y = ~mpg,
    fill = ~factor(gear),
    width = 1
) %>% 
scale_ordinal('x')
```
Error is: `Error in UseMethod("prop_label") : no applicable method for 'prop_label' applied to an object of class "NULL"`

But the following does:
```
library(magrittr)
library(ggvis)

mtcars %>%
ggvis( #specifying the x and y here now, instead of later
    x = ~factor(cyl),
    y = ~mpg
) %>%
group_by(gear) %>%
layer_bars(
    fill = ~factor(gear),
    width = 1
) %>% 
scale_ordinal('x')
```
Even the following works:
```
library(magrittr)
library(ggvis)

mtcars %>%
ggvis(
    x = ~hp,
    y = ~mpg
) %>%
group_by(gear) %>%
layer_bars(
    x = ~factor(cyl),
    y = ~mpg,
    fill = ~factor(gear),
    width = 1
) %>% 
scale_ordinal('x')```
```
i.e. `layer_bars` works only if `x` and `y` are initially set in the initial `ggvis` call.

The source code for `layer_bars` seems to ask for `'x.update'`, which I'm guessing only works if `x` is initially defined.

This does not seem to be the case for `layer_points`, i.e.
```
library(magrittr)
library(ggvis)

mtcars %>%
ggvis() %>%
layer_points(
    x = ~factor(gear),
    y = ~mpg
) %>% 
scale_ordinal('x')
```
works fine.

In my opinion, this should be made consistent... if some marks allow for empty initial values for props, I think all of them should?

Also: thank you, to the entire team, for making such a great contribution to the data community. I know this isn't high on your priority list right now, but there are definitely people out there who love `ggvis` and are hoping for further development.
Related to #242

``` r
library(ggvis)

set.seed(42)
d <- data.frame(
  group = rep(1:8, each = 5),
  y = rnorm(40)
)
```

```r
# OK
d %>% ggvis(~group, ~y, fill = ~group) %>% layer_boxplots(width = 0.5)
```

![image](https://user-images.githubusercontent.com/209714/35876011-06e11786-0b3f-11e8-8d80-3a3b5300e946.png)


```r
# NOT OK
d$group <- factor(d$group)
d %>% ggvis(~group, ~y, fill = ~group) %>% layer_boxplots(width = 0.5)
```

![image](https://user-images.githubusercontent.com/209714/35876022-112668ae-0b3f-11e8-9943-5ebad392b048.png)


<details><summary>Session info</summary>

``` r
devtools::session_info()
#> Session info -------------------------------------------------------------
#>  setting  value                       
#>  version  R version 3.4.3 (2017-11-30)
#>  system   x86_64, darwin15.6.0        
#>  ui       X11                         
#>  language (EN)                        
#>  collate  en_US.UTF-8                 
#>  tz       America/New_York            
#>  date     2018-02-06
#> Packages -----------------------------------------------------------------
#>  package    * version    date       source                          
#>  assertthat   0.2.0      2017-04-11 CRAN (R 3.4.0)                  
#>  backports    1.1.1      2017-09-25 CRAN (R 3.4.2)                  
#>  base       * 3.4.3      2017-12-07 local                           
#>  bindr        0.1        2016-11-13 CRAN (R 3.4.0)                  
#>  bindrcpp     0.2        2017-06-17 CRAN (R 3.4.0)                  
#>  compiler     3.4.3      2017-12-07 local                           
#>  datasets   * 3.4.3      2017-12-07 local                           
#>  devtools     1.13.4     2017-11-09 CRAN (R 3.4.2)                  
#>  digest       0.6.15     2018-01-28 cran (@0.6.15)                  
#>  dplyr        0.7.4      2017-09-28 CRAN (R 3.4.2)                  
#>  evaluate     0.10.1     2017-06-24 CRAN (R 3.4.1)                  
#>  ggvis      * 0.4.3      2016-07-22 CRAN (R 3.4.0)                  
#>  glue         1.2.0      2017-10-29 CRAN (R 3.4.2)                  
#>  graphics   * 3.4.3      2017-12-07 local                           
#>  grDevices  * 3.4.3      2017-12-07 local                           
#>  htmltools    0.3.6      2017-04-28 CRAN (R 3.4.0)                  
#>  httpuv       1.3.5      2017-07-04 cran (@1.3.5)                   
#>  knitr        1.17       2017-08-10 CRAN (R 3.4.1)                  
#>  magrittr     1.5        2014-11-22 CRAN (R 3.4.0)                  
#>  memoise      1.1.0      2017-04-21 CRAN (R 3.4.0)                  
#>  methods    * 3.4.3      2017-12-07 local                           
#>  mime         0.5        2016-07-07 CRAN (R 3.4.0)                  
#>  pillar       1.1.0      2018-01-14 cran (@1.1.0)                   
#>  pkgconfig    2.0.1      2017-03-21 CRAN (R 3.4.0)                  
#>  R6           2.2.2      2017-06-17 cran (@2.2.2)                   
#>  Rcpp         0.12.15    2018-01-20 cran (@0.12.15)                 
#>  rlang        0.1.6.9003 2018-02-01 Github (tidyverse/rlang@c6747f9)
#>  rmarkdown    1.8        2017-11-17 CRAN (R 3.4.2)                  
#>  rprojroot    1.2        2017-01-16 CRAN (R 3.4.0)                  
#>  shiny        1.0.5      2017-08-23 CRAN (R 3.4.1)                  
#>  stats      * 3.4.3      2017-12-07 local                           
#>  stringi      1.1.6      2017-11-17 CRAN (R 3.4.2)                  
#>  stringr      1.2.0      2017-02-18 CRAN (R 3.4.0)                  
#>  tibble       1.4.2      2018-01-22 cran (@1.4.2)                   
#>  tools        3.4.3      2017-12-07 local                           
#>  utils      * 3.4.3      2017-12-07 local                           
#>  withr        2.1.1.9000 2017-12-20 Github (jimhester/withr@df18523)
#>  xtable       1.8-2      2016-02-05 CRAN (R 3.4.0)                  
#>  yaml         2.1.16     2017-12-12 cran (@2.1.16)
```

</details>
I'm trying to show 3 lines, and each line should have a ribbon that shows the confidence interval.

```r
library(magrittr)
library(ggvis)
d <- read.table(textConnection(
'  time group median  low high
1     0     A   1.29 1.09 1.43
2     0     B   1.29 1.09 1.43
3     0     C   1.29 1.09 1.43
4     2     A   5.18 5.04 5.75
5     2     B   7.76 7.75 8.04
6     2     C   8.76 8.67 8.94
7     4     A   4.10 3.93 4.31
8     4     B   7.67 7.18 7.86
9     4     C   8.57 8.17 8.76
10    6     A   3.67 3.62 3.83
11    6     B   7.18 6.92 7.59
12    6     C   8.94 8.72 9.33'
))
d$time <- factor(d$time)
d$group <- factor(d$group)

# NOT OK
d %>%
  ggvis(
    x = ~time,
    stroke = ~group,
    fill = ~group
  ) %>%
  layer_ribbons(y = ~low, y2 = ~high) %>%
  layer_lines(y = ~median)
```

![image](https://user-images.githubusercontent.com/209714/35648323-5e450f28-06a3-11e8-9f88-15b9da08984d.png)

The plot works OK without the ribbons:

```r
# OK
d %>%
  ggvis(
    x = ~time,
    stroke = ~group
  ) %>%
  layer_lines(y = ~median)
```

![image](https://user-images.githubusercontent.com/209714/35648300-481464a6-06a3-11e8-90e5-024cff6acf9f.png)

<details>
<summary>Click here for my Session Info</summary>
<pre>
> devtools::session_info()
Session info -------------------------------------------------------------------------------------------------------------------------------------
 setting  value                       
 version  R version 3.4.3 (2017-11-30)
 system   x86_64, darwin15.6.0        
 ui       RStudio (1.1.414)           
 language (EN)                        
 collate  en_US.UTF-8                 
 tz       America/New_York            
 date     2018-01-31                  

Packages -----------------------------------------------------------------------------------------------------------------------------------------
 package      * version    date       source                            
 assertthat     0.2.0      2017-04-11 CRAN (R 3.4.0)                    
 backports      1.1.1      2017-09-25 CRAN (R 3.4.2)                    
 base         * 3.4.3      2017-12-07 local                             
 base64         2.0        2016-05-10 cran (@2.0)                       
 bindr          0.1        2016-11-13 CRAN (R 3.4.0)                    
 bindrcpp     * 0.2        2017-06-17 CRAN (R 3.4.0)                    
 callr          1.0.0      2016-06-18 CRAN (R 3.4.0)                    
 cli            1.0.0      2017-11-05 CRAN (R 3.4.2)                    
 clipr          0.4.0      2017-11-03 CRAN (R 3.4.2)                    
 colorspace     1.3-2      2016-12-14 CRAN (R 3.4.0)                    
 compiler       3.4.3      2017-12-07 local                             
 crayon         1.3.4      2017-09-16 CRAN (R 3.4.1)                    
 datasets     * 3.4.3      2017-12-07 local                             
 devtools       1.13.4     2017-11-09 CRAN (R 3.4.2)                    
 digest         0.6.13     2017-12-14 cran (@0.6.13)                    
 dplyr        * 0.7.4      2017-09-28 CRAN (R 3.4.2)                    
 DT           * 0.2        2016-08-09 CRAN (R 3.4.0)                    
 evaluate       0.10.1     2017-06-24 CRAN (R 3.4.1)                    
 formatR        1.5        2017-04-25 CRAN (R 3.4.0)                    
 ggplot2      * 2.2.1.9000 2017-12-22 Github (tidyverse/ggplot2@a637c67)
 ggvis        * 0.4.3      2016-07-22 CRAN (R 3.4.0)                    
 glue           1.2.0      2017-10-29 CRAN (R 3.4.2)                    
 graphics     * 3.4.3      2017-12-07 local                             
 grDevices    * 3.4.3      2017-12-07 local                             
 grid           3.4.3      2017-12-07 local                             
 gridExtra    * 2.3        2017-09-09 CRAN (R 3.4.1)                    
 gtable         0.2.0      2016-02-26 CRAN (R 3.4.0)                    
 htmltools      0.3.6      2017-04-28 CRAN (R 3.4.0)                    
 htmlwidgets    1.0        2018-01-20 cran (@1.0)                       
 httpuv         1.3.5      2017-07-04 cran (@1.3.5)                     
 jsonlite       1.5        2017-06-01 cran (@1.5)                       
 knitr          1.17       2017-08-10 CRAN (R 3.4.1)                    
 labeling       0.3        2014-08-23 CRAN (R 3.4.0)                    
 lazyeval       0.2.1      2017-10-29 CRAN (R 3.4.2)                    
 limma        * 3.34.2     2017-11-27 Bioconductor                      
 magrittr     * 1.5        2014-11-22 CRAN (R 3.4.0)                    
 MASS           7.3-47     2017-02-26 CRAN (R 3.4.3)                    
 memoise        1.1.0      2017-04-21 CRAN (R 3.4.0)                    
 methods      * 3.4.3      2017-12-07 local                             
 mime           0.5        2016-07-07 CRAN (R 3.4.0)                    
 miniUI         0.1.1      2016-01-15 CRAN (R 3.4.0)                    
 munsell        0.4.3      2016-02-13 CRAN (R 3.4.0)                    
 openssl        0.9.9      2017-11-10 CRAN (R 3.4.2)                    
 pillar         1.1.0      2018-01-14 cran (@1.1.0)                     
 pkgconfig      2.0.1      2017-03-21 CRAN (R 3.4.0)                    
 plyr           1.8.4      2016-06-08 CRAN (R 3.4.0)                    
 R6             2.2.2      2017-06-17 cran (@2.2.2)                     
 RColorBrewer * 1.1-2      2014-12-07 CRAN (R 3.4.0)                    
 Rcpp           0.12.15    2018-01-20 cran (@0.12.15)                   
 reprex         0.1.1      2017-01-13 CRAN (R 3.4.0)                    
 reshape2       1.4.3      2017-12-11 cran (@1.4.3)                     
 rlang          0.1.6      2017-12-21 cran (@0.1.6)                     
 rmarkdown      1.8        2017-11-17 CRAN (R 3.4.2)                    
 rprojroot      1.2        2017-01-16 CRAN (R 3.4.0)                    
 rstudioapi     0.7        2017-09-07 CRAN (R 3.4.1)                    
 scales       * 0.5.0.9000 2017-12-01 Github (hadley/scales@d767915)    
 shiny        * 1.0.5      2017-08-23 CRAN (R 3.4.1)                    
 shinyjs      * 0.9.1      2017-06-29 CRAN (R 3.4.1)                    
 stats        * 3.4.3      2017-12-07 local                             
 stringi        1.1.6      2017-11-17 CRAN (R 3.4.2)                    
 stringr      * 1.2.0      2017-02-18 CRAN (R 3.4.0)                    
 tibble         1.4.2      2018-01-22 cran (@1.4.2)                     
 tools          3.4.3      2017-12-07 local                             
 utf8           1.1.3      2018-01-03 cran (@1.1.3)                     
 utils        * 3.4.3      2017-12-07 local                             
 vegalite     * 0.7.1      2018-01-31 Github (hrbrmstr/vegalite@8a3dc26)
 viridis      * 0.4.0      2017-03-27 CRAN (R 3.4.0)                    
 viridisLite  * 0.2.0      2017-03-24 CRAN (R 3.4.0)                    
 webshot        0.5.0      2017-11-29 cran (@0.5.0)                     
 whisker        0.3-2      2013-04-28 CRAN (R 3.4.0)                    
 withr          2.1.1.9000 2017-12-20 Github (jimhester/withr@df18523)  
 xtable         1.8-2      2016-02-05 CRAN (R 3.4.0)                    
 yaml           2.1.16     2017-12-12 cran (@2.1.16)      
</pre>
</details>
Reproducible example below. 

When trying to make layer_arcs, it seems that they don't resize as the window is resized. I'm trying to get it to be scalable, so that when the window is expanded, so is the arc. I've tried adjustments to the innerRadius and outerRadius, making them to scale (:=), or in pixels (=), but it doesn't seem to work. Am I missing something obvious, or is this a potential bug? 


``` 
library(shiny)
library(ggvis)
library(tidyverse)

shinyApp(
  ui = bootstrapPage(
    div(style = "width:800px; height:800px; background: #ffffff;",
        ggvisOutput("p"),
        uiOutput("p_ui")
    )
  ),
  server = function(input, output, session) {
      window.size <- 800 #Window size in Px
      # Data frame of 5 rows, starts and ends in radians, even sizes.
      data.in     <- data.frame(Items = LETTERS[1:5]) %>% 
                     mutate(size.factor = nrow(.),
                            end    = cumsum((size.factor / sum(as.numeric(size.factor)))),
                            end    = (2*pi)*end/(max(end)),
                            start  = lag(end),
                            start  = ifelse(is.na(start),0,start))
      
      
      Vis <- reactive({
        data.in %>%
          ggvis(~0.5,~0.5) %>%
          layer_arcs(startAngle = ~start, endAngle = ~end,
                     innerRadius := (window.size / 2) * 0.8, outerRadius := (window.size / 2) * 0.95,
                     stroke      :="white", fill := "black", fill.hover  := "red") %>% 
          set_options(resizable=TRUE, keep_aspect = TRUE, width = 800, height = 800) %>% 
          scale_numeric("x", domain = c(0,1)) %>%
          scale_numeric("y", domain = c(0,1)) %>% 
          scale_numeric("radius", domain = c(0.5, 0.5))
      })
      Vis %>% bind_shiny("p", "p_ui")
  }
)
```
I have run into an unexpected problem when including a call to ggvis::group_by in a library I'm building.  This is the offending code:

 ```
 x %>% gather(key, value, -x) %>% bind_rows(s) %>% ggvis(~x, ~value) %>%
          layer_points(fill=~key) %>% group_by(key) %>% layer_paths(stroke=~key)
```

and it works great if I paste it directly into my R shell.  But when I build it into a library, using:

```
 #' @importFrom ggvis ggvis layer_points layer_paths group_by
```
and then try to execute that code I get this error:

>   Error in UseMethod("group_by_") : 
>     no applicable method for 'group_by_' applied to an object of class "ggvis"
> 

I see that ggvis::group_by is just UseMethod("group_by") in the dplyr namespace.  I've tried importing group_by (and even also group_by_) from dplyr, but nothing helped.  I'm at a loss to understand what I'm doing wrong, or conceivably I've found a bug?  I did find references to this error message being due to a long-fixed bug in ggvis (https://github.com/rstudio/ggvis/commit/6c1ebbe13e4573458637d655dd46b8d8cf544abf), which appears to add group_by_ as an export in ggvis' namespace.

I've replicated this problem under the latest ggvis (0.4.3) and both dplyr 0.5.0 and 0.7.0.

Any help will be gratefully appreciated!


There is a minor warning in R/handle_brush.R:

I think:

line 83:
`
items <- dplyr::rbind_all(dfs)
`
should be changed to 
`
items <- dplyr::bind_rows(dfs)
`




The tooltip only shows one value everywhere in the line.
```
# Function for the tooltip
all_values <- function(x) {
  if(is.null(x)) return(NULL)
  paste0(names(x), ": ", format(x), collapse = "
")
}

by_age <- gss_cat %>%
  filter(!is.na(age)) %>%
  group_by(age, marital) %>%
  count() %>%
  mutate(prop = n / sum(n))

ggvis(by_age, ~age, ~prop, stroke = ~marital) %>% 
  layer_lines() %>% 
  add_tooltip(all_values, "hover")
```
library(ggvis)
library(ggplot2)

diamonds %>% ggvis(~price,~carat) %>% layer_points(opacity:=input_slider(0,1),
                                          size:=input_slider(100,300)) %>%
                                          layer_smooths(stroke:='green')