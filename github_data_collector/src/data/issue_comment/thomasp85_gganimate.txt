I have created a basketball animation using gganimate, as seen below. You can get the full animation on [my blog post](http://insidethetv.rbind.io/post/animating-expected-possession-value-in-the-nba/) (Look at animation under "Paul Pierce Isolation").

<img width="506" alt="Screen Shot 2019-12-19 at 6 57 31 PM" src="https://user-images.githubusercontent.com/50791792/71226666-8b3f3880-2291-11ea-9f03-fc3e374e094c.png">

Now, there is one problem with this: once the seconds reach single digits, it shows only one digit (7). Its doing what its told to do, **but I want it to display (07) so that it closely matches a NBA broadcast.**

Here is my code:

```
library(tidyverse)
library(gganimate)

# Function to grab jersey numbers
grab_jersey <- function(player_id) {

  swish_url <- paste0("https://www.swishanalytics.com/nba/players/player?id=", player_id)

  swish <- read_html(swish_url)

  result <- swish %>% 
    html_node(".mobile-hide") %>%
    html_text() %>% 
    # Extract out numeric
    parse_number()

  result
}



## Read in dataset
e.dat_test <- read_csv("https://raw.githubusercontent.com/howardbaek/nba-animation/master/test_df.csv")

# Replace _ent with jersey numbers
a1_ent_jersey <- e.dat_test %>% 
  pull(a1_ent) %>%
  first() %>% 
  grab_jersey()

a2_ent_jersey <- e.dat_test %>% 
  pull(a2_ent) %>%
  first() %>% 
  grab_jersey()

a3_ent_jersey <- e.dat_test %>% 
  pull(a3_ent) %>%
  first() %>% 
  grab_jersey()

a4_ent_jersey <- e.dat_test %>% 
  pull(a4_ent) %>%
  first() %>% 
  grab_jersey()

a5_ent_jersey <- e.dat_test %>% 
  pull(a5_ent) %>%
  first() %>% 
  grab_jersey()

h1_ent_jersey <- e.dat_test %>% 
  pull(h1_ent) %>%
  first() %>% 
  grab_jersey()

h2_ent_jersey <- e.dat_test %>% 
  pull(h2_ent) %>%
  first() %>% 
  grab_jersey()

h3_ent_jersey <- e.dat_test %>% 
  pull(h3_ent) %>%
  first() %>% 
  grab_jersey()

h4_ent_jersey <- e.dat_test %>% 
  pull(h4_ent) %>%
  first() %>% 
  grab_jersey()

h5_ent_jersey <- e.dat_test %>% 
  pull(h5_ent) %>%
  first() %>% 
  grab_jersey()

# Mutate jersey number columns
e.dat_test <- e.dat_test %>% 
  mutate(a1_ent_jersey = a1_ent_jersey,
         a2_ent_jersey = a2_ent_jersey,
         a3_ent_jersey = a3_ent_jersey,
         a4_ent_jersey = a4_ent_jersey,
         a5_ent_jersey = a5_ent_jersey,
         h1_ent_jersey = h1_ent_jersey,
         h2_ent_jersey = h2_ent_jersey,
         h3_ent_jersey = h3_ent_jersey,
         h4_ent_jersey = h4_ent_jersey,
         h5_ent_jersey = h5_ent_jersey) %>% 
  mutate(quarter_processed = case_when(
    quarter == 1 ~ "1ST",
    quarter == 2 ~ "2ND",
    quarter == 3 ~ "3RD",
    quarter == 4 ~ "4TH",
    TRUE ~ "NA"
  )) %>% 
  mutate(game_clock_minutes = game_clock %/% 60) %>% 
  mutate(game_clock_seconds = game_clock %% 60)


possid_quarter <- e.dat_test %>% 
  pull(quarter_processed) %>% 
  first()


# Save animation as object
anim <- fullcourt() +
  # Home Players + Jersey Numbers
  geom_point(data = e.dat_test, aes(x = h1_x, y = h1_y, group = possID), size = 6, color = "lightskyblue1") +  
  geom_text(data = e.dat_test, aes(x = h1_x, y = h1_y, group = possID, label = h1_ent_jersey), color = 'black', alpha = 0.3) + 

  geom_point(data = e.dat_test, aes(x = h2_x, y = h2_y, group = possID), size = 6, color = "lightskyblue1") +  
  geom_text(data = e.dat_test, aes(x = h2_x, y = h2_y, group = possID, label = h2_ent_jersey), color = 'black', alpha = 0.3) + 

  geom_point(data = e.dat_test, aes(x = h3_x, y = h3_y, group = possID), size = 6, color = "lightskyblue1") +  
  geom_text(data = e.dat_test, aes(x = h3_x, y = h3_y, group = possID, label = h3_ent_jersey), color = 'black', alpha = 0.3) + 

  geom_point(data = e.dat_test, aes(x = h4_x, y = h4_y, group = possID), size = 6, color = "lightskyblue1") +  
  geom_text(data = e.dat_test, aes(x = h4_x, y = h4_y, group = possID, label = h4_ent_jersey), color = 'black', alpha = 0.3) + 

  geom_point(data = e.dat_test, aes(x = h5_x, y = h5_y, group = possID), size = 6, color = "lightskyblue1") + 
  geom_text(data = e.dat_test, aes(x = h5_x, y = h5_y, group = possID, label = h5_ent_jersey), color = 'black', alpha = 0.3) + 

  # Away Players
  geom_point(data = e.dat_test, aes(x = a1_x, y = a1_y, group = possID), size = 6, color = "salmon1") +  
  geom_text(data = e.dat_test, aes(x = a1_x, y = a1_y, group = possID, label = a1_ent_jersey), color = 'black', alpha = 0.3) + 

  geom_point(data = e.dat_test, aes(x = a2_x, y = a2_y, group = possID), size = 6, color = "salmon1") +  
  geom_text(data = e.dat_test, aes(x = a2_x, y = a2_y, group = possID, label = a2_ent_jersey), color = 'black', alpha = 0.3) + 

  geom_point(data = e.dat_test, aes(x = a3_x, y = a3_y, group = possID), size = 6, color = "salmon1") +  
  geom_text(data = e.dat_test, aes(x = a3_x, y = a3_y, group = possID, label = a3_ent_jersey), color = 'black', alpha = 0.3) + 

  geom_point(data = e.dat_test, aes(x = a4_x, y = a4_y, group = possID), size = 6, color = "salmon1") +  
  geom_text(data = e.dat_test, aes(x = a4_x, y = a4_y, group = possID, label = a4_ent_jersey), color = 'black', alpha = 0.3) + 

  geom_point(data = e.dat_test, aes(x = a5_x, y = a5_y, group = possID), size = 6, color = "salmon1") +  
  geom_text(data = e.dat_test, aes(x = a5_x, y = a5_y, group = possID, label = a5_ent_jersey), color = 'black', alpha = 0.3) + 

  # Ball
  geom_point(data = e.dat_test, aes(x = x, y = y, group = possID), size = 3, color = "gold") +

  transition_time(time = -game_clock) +
  ggtitle(paste0(possid_quarter, " ",  "{-frame_time %/% 60}", ":", "{round(-frame_time %% 60, 0)}")) +
  theme(plot.title = element_text(hjust = 0.5))


anim
```


How should I hack my way around this? The usage of `glue` in the titles make things a bit too complicated for me to hack!
Hey!

I've created a geom_col with ggplot and gganimate. Everything works perfectly fine, except ordering the bars according to size of a certain variable. Usining a simple ggplot without the gganimate this is simple, but to do this dynamcially so to speak, as in all those youtube videos, seems difficult. I am yet to succeed. Does anyone on the top of their head know if it's possible to do.

Or in general, is it possible to create a Bar chart race with this newer edition of gganimate?
when i try to knit 
 ```{r}
ggplot(df, aes(x=original_principal_amount, y=growth_rate, color=country)) +
  scale_x_log10() +
  geom_point(alpha = 0.7, show.legend = FALSE) +
  scale_colour_manual(values = country_colors) +
  facet_wrap(~country, ncol = 1, scales = "free") +
  labs(title = 'Year: {frame_time}', x = 'debt', y = 'gdp_growth_rate') +
  transition_time(year) +
  ease_aes('linear')
```
it works perfect in r chunk but it shows the error when i try to knit to html: error in transition_time(year): couldn't find the function "transition_time".
gganimate's `.travis.yml` file includes the following lines:

```
      - sourceline: 'ppa:jonathonf/ffmpeg-4'
      - sourceline: 'ppa:jonathonf/ffmpeg-3'
```

However, these PPAs appear to no longer be publicly available. See here: https://launchpad.net/~jonathonf

As a result, gganimate is failing on travis (I know because I have a fork).
Not sure if this is just something funny in my RStudio setup or what, but the progress bars from gganimate don't flush the line between updates, so I get something that looks like this:

Apologies if this is nothing to do with gganimate!! And thanks for a totally awesome package. Life-changing for looking at MCMC output.

![Screenshot 2019-12-10 16 29 32](https://user-images.githubusercontent.com/895251/70498457-8defae80-1b6a-11ea-88b6-d522dc50e023.jpg)

I see in `NEWS`, that there is this bullet in v1.0.4:

- Better fallback strategy for lack of gifski.

However, it seems that current fallback strategy is to not do anything at all. Neither warning nor error is generated if there is no `gifski` availabile and it's really not intuitive what needs to be done.

**Context**

I've came across one user trying to use the package and he claimed that there was no output. I've tried replicating it on both Mac and Ubuntu and behaviour was:

1. `gganimate` call creates all the frames it needs.
2. All intermediary `png` files are dumped into _working_ directory.
3. No output in RStudio preview window is generated. No error or warning.

I thought that there might be a bug, so tried `git bisect`, rolled back to `v1.0.2` and immediately got the error: ``The `gifski_renderer()` is selected by default but requires the gifski
package to be installed. Either install gifski or use another renderer.``
Personally, I would say that this is correct behaviour since it is clear what I need to do. 
Hi,
I'm trying to use "gganimate" package and version of R and RStudio are the newest. When I load devtools::install_github('thomasp85/gganimate'), there was an error like below:
==============================================
Error: package or namespace load failed for ‘gganimate’:
 .onLoad failed in loadNamespace() for 'gganimate', details:
  call: NULL
  error: The png package is required to use gifski_renderer
Error: loading failed
Execution halted
==============================================

I don't know what is the problem and I don't know how should I download or set up gifski_renderer.

Could you please help me with it?

Thanks,
Ivy

When `format = "auto"`, the `system2` call is hard-coded to use the ffmpeg executable on the search path. 

This pull request removes that restriction and allows a custom path to the ffmpeg executable.
I have been trying to learn how to use gganimate to animate plots. I was following the vignette (at https://gganimate.com/articles/gganimate.html#enter-and-exit) and when I tried to replicate the codes given there, I don't get the same results (as given on the page). When I run the code given below, I get the .gif given here. Compare it to the one on the page.

```
anim <- ggplot(iris, aes(x = Petal.Width, y = Petal.Length)) + 
  geom_point(aes(colour = Species), size = 2) + 
  transition_states(Species,
                    transition_length = 2,
                    state_length = 1)

anim + 
  enter_fade() + 
  exit_shrink()
```
GIF: https://media.giphy.com/media/KzKXtbWUUbisIc36n2/giphy.gif (saved using `anim_save(filename="mygif.gif"`)

As you see, the .gif is laggy as hell. When I try to modify it using height, width, res etc. using the code below, I get the next .gif.

animate(anim, res=250, height = 1080, width = 1980)
GIF: https://media.giphy.com/media/l51eJwWo0rj1OpzubE/giphy.gif (saved using `anim_save(filename="mygif2.gif"`)

Still laggy and not smooth. Compare it to the one on the vignette page. 

I have the latest versions of ggplot2, gganimate, tweenr, transformr. What should I do? How can I get silky smooth gifs? Please help.
This report is based on [this SO post.](https://stackoverflow.com/a/58685058/4975218) The original example includes a map of Texas, but I've left it out here to simplify the code.

The problem is that `shadow_mark()` doesn't properly draw points that are drawn via `geom_sf()`. Without `shadow_mark()`, things work fine.

Reprex:

``` r
library(tidyverse)
library(gganimate)
library(sf)
#> Linking to GEOS 3.7.2, GDAL 2.4.2, PROJ 5.2.0

dots <- data.frame(
  group = c(rep(1,3), rep(2,3)), 
  lat = c(rep(32, 3), rep(33, 3)),
  long = c(rep(-100, 3), rep(-99,3)), 
  year = c(1:3, 1:3)
)

# add geometry column
dots_sf <- dots %>%
  mutate(
    geometry = st_sfc(
      map2(lat, long, function(lat, long) st_point(x = c(long, lat))),
      crs = "+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs"
    ) %>%
      st_transform(crs = 3083)
  ) %>%
  st_as_sf()

# and extract transformed coords
dots_sf_transf <- dots_sf %>%
  mutate(
    long_transf = map_dbl(geometry, function(x) x[[1]]),
    lat_transf = map_dbl(geometry, function(x) x[[2]])
  )

# Things work fine when we're using geom_point().
ggplot() +
  geom_point(
    data = dots_sf_transf, 
    aes(x = long_transf, y = lat_transf, group = group, color = year),
    size = 6, show.legend = FALSE
  ) +
  scale_color_gradientn(colours = c("red", "yellow", "darkgreen")) +
  coord_sf(crs = 3083, xlim = c(873007.1, 2118112), ylim = c(6861658, 8045409)) +
  labs(title = "Year: {frame_time}") +  
  theme_void() + theme(legend.position = c(0.15, .15)) +
  transition_time(year) + shadow_mark(size=12)  
```

![](https://i.imgur.com/n9mnJgY.gif)

``` r
# However, drawing the same animation with geom_sf() doesn't work,
# the points are shown empty.
ggplot() +
  geom_sf(
    data = dots_sf_transf, 
    aes(group = group, color = year),
    size = 6, show.legend = FALSE
  ) +
  scale_color_gradientn(colours = c("red", "yellow", "darkgreen")) +
  coord_sf(crs = 3083, xlim = c(873007.1, 2118112), ylim = c(6861658, 8045409)) +
  labs(title = "Year: {frame_time}") +  
  theme_void() + theme(legend.position = c(0.15, .15)) +
  transition_time(year) + shadow_mark(size=12)  
```

![](https://i.imgur.com/YRQLTXu.gif)

``` r
# But when shadow_mark() is removed, things work even with geom_sf().
ggplot() +
  geom_sf(
    data = dots_sf_transf, 
    aes(group = group, color = year),
    size = 6, show.legend = FALSE
  ) +
  scale_color_gradientn(colours = c("red", "yellow", "darkgreen")) +
  coord_sf(crs = 3083, xlim = c(873007.1, 2118112), ylim = c(6861658, 8045409)) +
  labs(title = "Year: {frame_time}") +  
  theme_void() + theme(legend.position = c(0.15, .15)) +
  transition_time(year)
```

![](https://i.imgur.com/gQsqTGn.gif)

<sup>Created on 2019-11-04 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>