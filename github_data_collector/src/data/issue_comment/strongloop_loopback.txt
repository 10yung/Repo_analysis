## Steps to reproduce
Async remote mehtod

When i call begin transacction it change the res.statusCode to 204
![image](https://user-images.githubusercontent.com/3384734/72204700-1e2b5700-347b-11ea-96b1-21d03d26c86a.png)


## Current Behavior
Change the res.statusCode


## Expected Behavior
No change  the res.statusCode

Thanks
is there a way to add a remote hook directly to a built in User model in a boot script like in the docs say (when adding a remote method), without having to create a model that extends the built in one and adding the hook in this new one? (in the user management example user is extended and the a hook is added).didnt want to extend, simply add the hook to the built in model.
tried doing it gave me (in a boot script):
"User.afterRemote is not a function"
We are seeing repeated event loop blocked results in our Loopback application. 

## Steps to reproduce

1. Download and npm install the sandbox app
2. Start a postgres database using docker-compose -f postgresql.yml up (or update the data source to point to an existing postgres insteallation).
3. Start the app using node.
4. Open loopback explorer and create the suppliers contained in suppliers.json
5. Do a get on Suppliers and see the blocking in the logs:

checking client timeout
connecting new client
new client connected
pulse queue
no queued requests
Event loop blocked for 36.808244995117185 milliseconds [ '    at Socket.connect (net.js:918:7)',
  '    at Connection.connect (/Users/davidknapp/loopback-sandbox/node_modules/pg/lib/connection.js:54:17)',
  '    at Client._connect (/Users/davidknapp/loopback-sandbox/node_modules/pg/lib/client.js:102:9)',
  '    at Client.connect (/Users/davidknapp/loopback-sandbox/node_modules/pg/lib/client.js:288:10)',
  '    at Pool.newClient (/Users/davidknapp/loopback-sandbox/node_modules/pg-pool/index.js:208:12)',
  '    at Pool.connect (/Users/davidknapp/loopback-sandbox/node_modules/pg-pool/index.js:183:10)',
  '    at PostgreSQL.executeSQL (/Users/davidknapp/loopback-sandbox/node_modules/loopback-connector-postgresql/lib/postgresql.js:166:13)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-connector/lib/sql.js:651:10',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:259:9',
  '    at doNotify (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:155:49)',
  '    at PostgreSQL.ObserverMixin._notifyBaseObservers (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:178:5)',
  '    at PostgreSQL.ObserverMixin.notifyObserversOf (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:153:8)',
  '    at PostgreSQL.ObserverMixin.notifyObserversAround (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:228:15)',
  '    at PostgreSQL.SQLConnector.execute (/Users/davidknapp/loopback-sandbox/node_modules/loopback-connector/lib/sql.js:650:8)',
  '    at PostgreSQL.find [as all] (/Users/davidknapp/loopback-sandbox/node_modules/loopback-connector/lib/sql.js:1460:8)',
  '    at invokeConnectorMethod (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/dao.js:172:21)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/dao.js:1755:7',
  '    at doNotify (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:155:49)',
  '    at doNotify (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:155:49)',
  '    at doNotify (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:155:49)',
  '    at doNotify (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:155:49)',
  '    at Function.ObserverMixin._notifyBaseObservers (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:178:5)',
  '    at Function.ObserverMixin.notifyObserversOf (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:153:8)',
  '    at Function.ObserverMixin._notifyBaseObservers (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:176:15)',
  '    at Function.ObserverMixin.notifyObserversOf (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:153:8)',
  '    at Function.ObserverMixin._notifyBaseObservers (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:176:15)',
  '    at Function.ObserverMixin.notifyObserversOf (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:153:8)',
  '    at Function.ObserverMixin._notifyBaseObservers (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:176:15)',
  '    at Function.ObserverMixin.notifyObserversOf (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/observer.js:153:8)',
  '    at Function.find (/Users/davidknapp/loopback-sandbox/node_modules/loopback-datasource-juggler/lib/dao.js:1753:10)',
  '    at SharedMethod.invoke (/Users/davidknapp/loopback-sandbox/node_modules/strong-remoting/lib/shared-method.js:270:27)',
  '    at HttpContext.invoke (/Users/davidknapp/loopback-sandbox/node_modules/strong-remoting/lib/http-context.js:297:12)',
  '    at phaseInvoke (/Users/davidknapp/loopback-sandbox/node_modules/strong-remoting/lib/remote-objects.js:695:9)',
  '    at runHandler (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/lib/phase.js:135:5)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:3110:16',
  '    at replenish (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1011:17)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1016:9',
  '    at eachLimit$1 (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:3196:24)',
  '    at Object.<anonymous> (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1046:16)',
  '    at runHandlers (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/lib/phase.js:144:13)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:3110:16',
  '    at replenish (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1011:17)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1016:9',
  '    at eachLimit$1 (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:3196:24)',
  '    at Object.<anonymous> (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1046:16)',
  '    at Phase.run (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/lib/phase.js:148:9)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/lib/phase-list.js:256:13',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:3110:16',
  '    at replenish (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1011:17)',
  '    at iterateeCallback (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:995:17)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:969:16',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:473:16',
  '    at replenish (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1006:25)',
  '    at iterateeCallback (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:995:17)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:969:16',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:473:16',
  '    at replenish (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:1006:25)',
  '    at iterateeCallback (/Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:995:17)',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/loopback-phase/node_modules/async/dist/async.js:969:16',
  '    at /Users/davidknapp/loopback-sandbox/node_modules/strong-remoting/lib/remote-objects.js:671:7',
  '    at process._tickCallback (internal/process/next_tick.js:61:11)' ]
remove idle client

6. Use explorer to run the custom Suppliers/list endpoint and see that there is not any blocking

## Current Behavior

We see numerous event loop blocked messages in our large loopback application. We were able to reproduce the issue in the minimal sandbox app attached. 

At first, we believed that the issue was with the pg library but could not reproduce the issue in a standalone node.js app. 

Then, we added the custom "list" method on the supplier model and called the connector for the get and we did not get any blocking messages. We believe that this indicates that the issue is elsewhere in Loopback.

The blocking appears to be related to getting a new connection from the pool. If you click "try it out" multiple times, you may not see the error on the second and subsequent clicks. If you then wait for the connection to be closed after the default 10 second idle timeout, you will likely see if the blocked message again.

In this small app on my machine the blocks are 30-40ms. In our complex app, we see blocks reach the 100-200ms range. We see these blocks running in cloud foundry with compose databases as well so we do not believe that this is os or machine related.

## Expected Behavior

Loopback should not block the event loop.

## Link to reproduction sandbox

https://github.com/Apex-BPM/loopback-sandbox

## Additional information

node -e 'console.log(process.platform, process.arch, process.versions.node)':

darwin x64 10.16.0

npm ls --prod --depth 0 | grep loopback:

loopback-sandbox@1.0.0 /Users/davidknapp/loopback-sandbox
├── loopback@3.26.0
├── loopback-boot@3.3.1
├── loopback-component-explorer@6.5.0
├── loopback-connector-postgresql@3.8.1

## Related Issues

## I have two models: **edParty** & **user**

*edParty hasMany users (through model named userParties)*
*user hasMany edParties (through userParties)*

I can do this: 
```
edParty.users.find({ where: { name: { inq: ['name1', 'name2'] } } })
```
but when I replace **name** with **id** in filter, it gives an empty array!
```
edParty.users.find({ where: { id: { inq: ['1', '2'] } } })
```

and this is working fine: 
```
UserModel.find({ where: { id: { inq: ['1', '2'] } } })
```
I use Mongo connector



The README.md has an enterprise section to a dead hyperlink

  https://github.com/strongloop/loopback-connector-atg

I would love to see this! Is it private or on the roadmap? Curious why no hyperlink or repo for this?

Thanks! Your project is new to me but looked exciting!
## Steps to reproduce

I have two simple models (using mongoDB for DB)...
I have a model called wedding and another one called person

on the wedding I have 3 relations

```json
{
    "people": {
      "type": "hasMany",
      "model": "person",
      "foreignKey": "",
      "options": {
        "nestRemoting": true
      }
    },
    "partner1": {
      "type": "hasOne",
      "model": "person",
      "foreignKey": ""
    },
    "partner2": {
      "type": "hasOne",
      "model": "person",
      "foreignKey": ""
    }
}
```

So my wedding document in DB looks something like this:
```
{
    "_id": "5de78c76f89d1a8ad4091ca5",
    "date": "2019-12-04T10:37:42.000Z",
    "userId": "5de78c76f89d1a8ad4091ca4",
    "created": "2019-12-04T10:37:42.720Z",
    "partner1Id": "5de78c77f89d1a8ad4091ca6",
    "partner2Id": "5de78c77f89d1a8ad4091ca7"
}

```
## Current Behavior
When I do filter:
`{ "include": ["partner1", "partner2"]}`
on 
http://localhost:3000/api/weddings/5de78c76f89d1a8ad4091ca5

I am getting this:
```json
{
  "date": "2019-12-04T10:37:42.000Z",
  "id": "5de78c76f89d1a8ad4091ca5",
  "userId": "5de78c76f89d1a8ad4091ca4",
  "created": "2019-12-04T10:37:42.720Z",
  "partner1Id": "5de78c77f89d1a8ad4091ca6",
  "partner2Id": "5de78c77f89d1a8ad4091ca7",
  "partner1": {
    "id": "5de78c77f89d1a8ad4091ca7",
    "fullName": "Jessica Alba",
    "spouse": "spouse2",
    "contacts": [],
    "verified": false,
    "created": "2019-12-04T10:37:43.292Z",
    "updated": "2019-12-04T10:37:43.292Z",
    "userId": "5de78c76f89d1a8ad4091ca4",
    "weddingId": "5de78c76f89d1a8ad4091ca5"
  },
  "partner2": {
    "id": "5de78c77f89d1a8ad4091ca7",
    "fullName": "Jessica Alba",
    "spouse": "spouse2",
    "contacts": [],
    "verified": false,
    "created": "2019-12-04T10:37:43.292Z",
    "updated": "2019-12-04T10:37:43.292Z",
    "userId": "5de78c76f89d1a8ad4091ca4",
    "weddingId": "5de78c76f89d1a8ad4091ca5"
  }
}
```



## Expected Behavior

What I should have gotten is:
```json
{
  "date": "2019-12-04T10:37:42.000Z",
  "id": "5de78c76f89d1a8ad4091ca5",
  "userId": "5de78c76f89d1a8ad4091ca4",
  "created": "2019-12-04T10:37:42.720Z",
  "partner1Id": "5de78c77f89d1a8ad4091ca6",
  "partner2Id": "5de78c77f89d1a8ad4091ca7",
  "partner1": {
    "id": "5de78c77f89d1a8ad4091ca6",
    "fullName": "Michael Knight",
    "spouse": "spouse1",
    "contacts": [],
    "verified": false,
    "created": "2019-12-04T10:37:43.292Z",
    "updated": "2019-12-04T10:37:43.292Z",
    "userId": "5de78c76f89d1a8ad4091ca4",
    "weddingId": "5de78c76f89d1a8ad4091ca5"
  },
  "partner2": {
    "id": "5de78c77f89d1a8ad4091ca7",
    "fullName": "Jessica Alba",
    "spouse": "spouse2",
    "contacts": [],
    "verified": false,
    "created": "2019-12-04T10:37:43.292Z",
    "updated": "2019-12-04T10:37:43.292Z",
    "userId": "5de78c76f89d1a8ad4091ca4",
    "weddingId": "5de78c76f89d1a8ad4091ca5"
  }
}
```

## Additional information

```
+-- loopback@3.26.0
+-- loopback-boot@2.28.0
+-- loopback-component-explorer@6.4.0
+-- loopback-connector-mongodb@5.0.1
+-- loopback-slug@0.2.3
```

<!-- 🚨 STOP 🚨 STOP 🚨 STOP 🚨

THE ISSUE TRACKER IS NOT FOR QUESTIONS.

DO NOT CREATE A NEW ISSUE TO ASK A QUESTION.

Please use one of the following resources for help:

**Questions**

- https://stackoverflow.com/tags/loopbackjs
- https://groups.google.com/forum/#!forum/loopbackjs
- https://gitter.im/strongloop/loopback

**Immediate support**

- https://strongloop.com/api-connect-faqs/
- https://strongloop.com/node-js/subscription-plans/

-->

I would like to login with the loopback api with some additional conditional parameters like
username or email , password , status is active or inactive if active member only can be able to login into the systems and access the token only if it is active user, for inactive user the user should not login...
 
can you help me out to fix this issue, I'm really looking forward for your help!!! 
## Steps to reproduce
1. Create an embedsMany relation where the embedded model has a composite id as described by:
https://loopback.io/doc/en/lb3/Model-definition-JSON-file.html#composite-ids
2. Add an array of embedded objects where one (e.g. the first) of the id properties is a duplicate, but other id properties is not a duplicate.

## Current Behavior
The code errors on the first duplicate property.

## Expected Behavior
No error is generated unless all id properties are duplicate.

## Link to reproduction sandbox
Coming soon.  Please do not close.
<!--
See https://loopback.io/doc/en/contrib/Reporting-issues.html#loopback-3x-bugs
Note: Failure to provide a sandbox application for reproduction purposes will result in the issue being closed.
-->

## Additional information
The bug is here: loopback-datasource-juggler\lib\relation-definition.js @ line 2493

## Related Issues

<!-- 🚨 STOP 🚨 STOP 🚨 STOP 🚨

Are you using LoopBack version 4? Please report the bug here:
https://github.com/strongloop/loopback-next/issues/new

HELP US HELP YOU, PLEASE
- Do a quick search to avoid duplicate issues
- Provide as much information as possible (reproduction sandbox, use case for features, etc.)
- Consider using a more suitable venue for questions such as Stack Overflow, Gitter, etc.

Please fill in the *entire* template below.

-->

## Steps to reproduce

<!-- Describe how to reproduce the issue -->

I was following this tutorial:
[Introduction to LoopBack - Using It With SQlite3](https://www.youtube.com/watch?v=ii17_TdzKPM&t=3s)

These are the steps in short:
```
1. $ npm install loopback-connector-sqlite3 --save
2. Create datasource file
3. $ lb datasource
4. Modified datasources.json
5. Modified model-config.json
6. $ npm i -g loopback-migration-tool
7. $ lb-migration migrate --ds=db sqliteDS
8. Make a POST request in API Explorer (insert a new Coffeshop)
9. Reload Browser
```

Now when I start LB with:
`$ npm start`

LB is showing an error. This was not the case with the in-memory database.

## Current Behavior

<!-- Describe the observed result -->
```
Unhandled error for request GET /images/throbber.gif: Error: Cannot GET /images/throbber.gif
    at raiseUrlNotFoundError (projects/loopback-getting-started/node_modules/loopback/server/middleware/url-not-found.js:21:17)
    at Layer.handle [as handle_request] (projects/loopback-getting-started/node_modules/express/lib/router/layer.js:95:5)
    at trim_prefix (projects/loopback-getting-started/node_modules/express/lib/router/index.js:317:13)
    at projects/loopback-getting-started/node_modules/express/lib/router/index.js:284:7
    at Function.process_params (projects/loopback-getting-started/node_modules/express/lib/router/index.js:335:12)
    at next (projects/loopback-getting-started/node_modules/express/lib/router/index.js:275:10)
    at SendStream.error (projects/loopback-getting-started/node_modules/serve-static/index.js:121:7)
    at SendStream.emit (events.js:198:13)
    at SendStream.error (projects/loopback-getting-started/node_modules/send/index.js:270:17)
    at SendStream.onStatError (projects/loopback-getting-started/node_modules/send/index.js:421:12)
    at onstat (projects/loopback-getting-started/node_modules/send/index.js:726:26)
    at FSReqWrap.oncomplete (fs.js:153:21)
```
## Expected Behavior

<!-- Describe what did you expect instead, what is the desired outcome? -->
No error after starting LB.

## Link to reproduction sandbox

<!--
See https://loopback.io/doc/en/contrib/Reporting-issues.html#loopback-3x-bugs
Note: Failure to provide a sandbox application for reproduction purposes will result in the issue being closed.
-->

## Additional information
$ node -e 'console.log(process.platform, process.arch, process.versions.node)'
linux x64 10.16.1

$ npm ls --prod --depth 0 | grep loopback
loopback-getting-started@1.0.0 /home/nick/workspace/TESTS/Frameworks/Backend_Frameworks/NodeJS_Frameworks/LoopBack/LoopBack 3/loopback-getting-started
├── loopback@3.26.0
├── loopback-boot@2.28.0
├── loopback-component-explorer@6.4.0
├── loopback-connector-sqlite3@3.0.0
<!--
Copy+paste the output of these two commands:
  node -e 'console.log(process.platform, process.arch, process.versions.node)'
  npm ls --prod --depth 0 | grep loopback
-->

## Related Issues

<!-- Did you find other bugs that looked similar? -->

_See [Reporting Issues](http://loopback.io/doc/en/contrib/Reporting-issues.html) for more tips on writing good issues_
