Sorry, I missed this case. Should work better now :)
**Platform**:
Chrome
Raspberry Pi 2

**Node Version**: 6.11.3

**MagicMirror Version**: v2 (recently updated)

**Description**: Events that I have declined are still being displayed.

**Steps to Reproduce**: Add calendar; Make a recurring event; Decline them.

**Expected Results**: Declined event are usually showed with overstrike, but I would like to have the option to hide them completely.

**Actual Results**: There is no difference between declined events and coming events.
Hi
I have two issues with the new 2.10 of MM.
1. have added a 4th. ICS
(https://calendar.google.com/calendar/ical/da.danish%23holiday%40group.v.calendar.google.com/public/basic.ics) and I can't get it to show the dates in the "calendars" the 3 other ICS is working fine
[https://drive.google.com/open?id=1SywDaeJ4MWxtpUFDbwZ75G9gEW9CUHjT](url)
The last link is the link in the ( ), and is not showed..
`
calendars: [
          {
                symbol: "calendar",
                url: "1. LINK TO WORKING GOOGLE ICS"
          },
          {
                symbol: "birthday-cake",
                url: "2. LINK TO WORKING GOOGLE ICS"
          },
          {
                symbol: "calendar",
                url: "3. LINK TO WORKING GOOGLE ICS"
          },
         {
                symbol: "calendar",
                url: "https://calendar.google.com/calendar/ical/da.danish%23holiday%40group.v.calendar.google.com/public/basic.ics"
          }
]
`

2. Im using fullDayEventDateFormat: "DD MMM" but appears as "Do MMM" (21. jan - maybe) for every second lines and "MMM Do" (Jan 25. - maybe) for the others in between.
[https://drive.google.com/open?id=1q1u-o7qkh6xNX8R88LOieJCmcWbKIyoy](url)
`
config: {
           fullDayEventDateFormat: "DD MMM",
           timeFormat: "abdolute",
           urgency: 7,
           calendars: [
                    ..........
]
}
`
Can someone help with...
- Why the 4th ICS link is not showed
- Why i get the two datetypes Do MMM and MMM Do, when I im my config.js file have DD MMM

### UPDATE ###
Have tried this, but with no luck :-)
https://forum.magicmirror.builders/topic/9894/default-module-calendar-not-updating
Since I open sourced MagicMirror², I have received many awesome pull requests adding a lot of nice features to the Magic Mirror core. I am very grateful for that! Unfortunately, this comes with a downside: the application gets a lot more complicated.

The reason I open sourced MagicMirror² was because it is a perfect starter project for newcomers. Getting their feet wet in javascript and software development in general (see [manifesto](https://github.com/michmich/magicmirror#manifesto)). With the current complexity, this project is slowly moving away from this.

I also noted that the amount of bash code is increasing, while the main intention of version 2 was to try to do everything in 1 program language: javascript. (Opposed to v1, which was a combination of languages like PHP, Javascript en in some cases Python).

Looking at other OS projects, there are some beautiful examples on how the project can be focused at what it does best. One example I like to mention is OctoPrint/OctoPi. Software to control your 3D printer. While @foosel does a great job to maintain the core application (OctoPrint), the packaged Rasberry Pi image (OctoPi) is maintained in a different repo by a different user (@GuySoft).

If we use that same approach there are a lot of things we can take out the core repo, and let other users start their own repo's to accomplish the same features while separating concerns.

In my opinion, the following parts could initially be taken out of the core repo, and taken over by other repo's:

- Installer script
- Update script
- Start Script
- PM2 integration
- Docker Package

Of course, we won't take out these features as long as no other solutions are in place. As an install and update replacement, we need to write a good manual. 

The added benefit of this approach is that the release schedule of the above features is no longer tied to the quarterly release schedule of MagicMirror².

With the new approach I think it's good to set a few guidelines to which the future versions should adhere:
- Javascript, HTML, CSS only.
- No compile scripts (ie. webpack, sass, less)
- Focus (only) on Raspberry support.
- Install/Run/Update using default commands: `npm install`, `git pull`, etc. Which will help people to learn and understand these commands.

Since this project would have never been such a success without the help of the community, I want to discuss this approach before taking any action. So I'm looking forward to your input.

Please let me know what you think with an open mind.  

Thanks! Michael.

# EDIT: Provisional TO DO List

Based on the discussion below, I made a provisional to do list which could be the base for the simplification of this repository. The to do list is not set in stone, and could change based on the feedback in this issue.

- [ ] Remove installer scripts (make sure an external repository is available as a replacement). 
- [ ] Remove update scripts.
- [ ] Remove start script.
- [ ] Separate Client & Serveronly commands as regular npm commands: `npm run start` & `npm run server`.
- [ ] Cleanup folders (remove `/installers` & `/splashscreen` and remove all root .sh files). Where necessary, replace shell code with javascript code.
- [ ] Implement handler for incompatible modules. 
- [X] Create separate documentation site and repo.
- [ ] Improve documentation on how to install and update. This should reflect the procedure without an installer/updater, but it should also mention the available third party installers/updaters.
- [ ] Make an overview of the hard- and software requirements.
- [ ] Make an overview of the supported (tested) hardware and operating systems.

Feel free to share your ideas and feedback!
when running the automated tests, e2e, there is a section to verify that all the used terms are translated in all the supported languages,

this test now reports that there are many missing translations
```
  Translation keys of nl
        ✓ nl keys should be in base
    - Missing Translations for language nl: PRECIP,WEEK
        - nl should contain all base keys
      Translation keys of de
        ✓ de keys should be in base
    - Missing Translations for language de: PRECIP
        - de should contain all base keys
      Translation keys of fi
        ✓ fi keys should be in base
    - Missing Translations for language fi: PRECIP,UPDATE_INFO_MULTIPLE,UPDATE_INFO_SINGLE
        - fi should contain all base keys
      Translation keys of fr
        ✓ fr keys should be in base
    - Missing Translations for language fr: PRECIP
        - fr should contain all base keys
      Translation keys of fy
        ✓ fy keys should be in base
    - Missing Translations for language fy: FEELS,PRECIP,UPDATE_INFO_MULTIPLE,UPDATE_INFO_SINGLE,UPDATE_NOTIFICATION,UPDATE_NOTIFICATION_MODULE,WEEK
        - fy should contain all base keys
      Translation keys of es
        ✓ es keys should be in base
        ✓ es should contain all base keys
      Translation keys of ca
        ✓ ca keys should be in base
    - Missing Translations for language ca: FEELS,PRECIP
        - ca should contain all base keys
      Translation keys of nb
        ✓ nb keys should be in base
    - Missing Translations for language nb: PRECIP
        - nb should contain all base keys
      Translation keys of nn
        ✓ nn keys should be in base
    - Missing Translations for language nn: PRECIP,WEEK
        - nn should contain all base keys
      Translation keys of pt
        ✓ pt keys should be in base
    - Missing Translations for language pt: PRECIP
        - pt should contain all base keys
      Translation keys of pt-br
        ✓ pt-br keys should be in base
    - Missing Translations for language pt-br: DAYAFTERTOMORROW,FEELS,PRECIP,WEEK
        - pt-br should contain all base keys
      Translation keys of sv
        ✓ sv keys should be in base
    - Missing Translations for language sv: PRECIP
        - sv should contain all base keys
      Translation keys of id
        ✓ id keys should be in base
    - Missing Translations for language id: FEELS,PRECIP
        - id should contain all base keys
      Translation keys of it
        ✓ it keys should be in base
    - Missing Translations for language it: PRECIP
        - it should contain all base keys
      Translation keys of zh-cn
        ✓ zh-cn keys should be in base
    - Missing Translations for language zh-cn: PRECIP
        - zh-cn should contain all base keys
      Translation keys of zh-tw
        ✓ zh-tw keys should be in base
    - Missing Translations for language zh-tw: DAYAFTERTOMORROW,FEELS,PRECIP,UPDATE_INFO_MULTIPLE,UPDATE_INFO_SINGLE,UPDATE_NOTIFICATION,UPDATE_NOTIFICATION_MODULE,WEEK
        - zh-tw should contain all base keys
      Translation keys of ja
        ✓ ja keys should be in base
    - Missing Translations for language ja: DAYAFTERTOMORROW,FEELS,PRECIP,UPDATE_INFO_MULTIPLE,UPDATE_INFO_SINGLE,UPDATE_NOTIFICATION,UPDATE_NOTIFICATION_MODULE,WEEK
        - ja should contain all base keys
      Translation keys of pl
        ✓ pl keys should be in base
    - Missing Translations for language pl: PRECIP
        - pl should contain all base keys
      Translation keys of gr
        ✓ gr keys should be in base
    - Missing Translations for language gr: DAYAFTERTOMORROW,FEELS,PRECIP,UPDATE_INFO_MULTIPLE,UPDATE_INFO_SINGLE,UPDATE_NOTIFICATION,UPDATE_NOTIFICATION_MODULE,WEEK
        - gr should contain all base keys
      Translation keys of da
        ✓ da keys should be in base
    - Missing Translations for language da: PRECIP
        - da should contain all base keys
      Translation keys of tr
        ✓ tr keys should be in base
    - Missing Translations for language tr: DAYAFTERTOMORROW,FEELS,PRECIP,UPDATE_INFO_MULTIPLE,UPDATE_INFO_SINGLE,UPDATE_NOTIFICATION,UPDATE_NOTIFICATION_MODULE,WEEK
        - tr should contain all base keys
      Translation keys of ru
        ✓ ru keys should be in base
    - Missing Translations for language ru: PRECIP
        - ru should contain all base keys
      Translation keys of af
        ✓ af keys should be in base
    - Missing Translations for language af: FEELS,PRECIP,WEEK
        - af should contain all base keys
      Translation keys of hu
        ✓ hu keys should be in base
    - Missing Translations for language hu: PRECIP
        - hu should contain all base keys
      Translation keys of is
        ✓ is keys should be in base
    - Missing Translations for language is: FEELS,PRECIP,WEEK
        - is should contain all base keys
      Translation keys of et
        ✓ et keys should be in base
    - Missing Translations for language et: FEELS,PRECIP,WEEK
        - et should contain all base keys
      Translation keys of kr
        ✓ kr keys should be in base
    - Missing Translations for language kr: FEELS,PRECIP,WEEK
        - kr should contain all base keys
      Translation keys of ro
        ✓ ro keys should be in base
    - Missing Translations for language ro: PRECIP
        - ro should contain all base keys
      Translation keys of cy
        ✓ cy keys should be in base
    - Missing Translations for language cy: FEELS,PRECIP
        - cy should contain all base keys
      Translation keys of bg
        ✓ bg keys should be in base
    - Missing Translations for language bg: FEELS,PRECIP
        - bg should contain all base keys
      Translation keys of cs
        ✓ cs keys should be in base
    - Missing Translations for language cs: FEELS,PRECIP
        - cs should contain all base keys
      Translation keys of hr
        ✓ hr keys should be in base
    - Missing Translations for language hr: PRECIP
        - hr should contain all base keys
      Translation keys of sk
        ✓ sk keys should be in base
    - Missing Translations for language sk: FEELS,PRECIP
        - sk should contain all base keys
      Translation keys of tlh
        ✓ tlh keys should be in base
    - Missing Translations for language tlh: PRECIP
        - tlh should contain all base keys
      Translation keys of ms-my
        ✓ ms-my keys should be in base
    - Missing Translations for language ms-my: FEELS,PRECIP
        - ms-my should contain all base keys
```

we should solicit help to get these updated, else remove the test
when running the automated tests, in the E2E section, there is a test to insure download of the vendor provided javascript files. 

each access is returning  ECONNREFUSED 127.0.0.1:8080
but that should be correct and does work when manually executed (via curl or wget)

there are two sections of the test... get from correct path
and get from bad path... 

both sections fail the same
but report passed

v 2.9.0 or above

reproduce
install selected version, npm install
then run 
npm run test:e2e

[screen shot](https://www.dropbox.com/s/08eq118ez6b29cf/2019-12-29%20%281%29.png?dl=0)

**Platform**: Place your platform here... give us your web browser/Electron version *and* your hardware (Raspberry Pi 2/3, Windows, Mac, Linux, System V UNIX).
Raspian Buster 

**Node Version**: Make sure it's version 0.12.13 or later.

**MagicMirror Version**: Now that the versions have split, tell us if you are using the PHP version (v1) or the newer JavaScript version (v2).
2.9.0
**Description**: Provide a detailed description about the issue and include specific details to help us understand the problem. Adding screenshots will help describing the problem.
electron cannot start 
```
 magicmirror@2.9.0 start /home/pi/MagicMirror
> sh run-start.sh

/home/pi/MagicMirror/node_modules/electron/dist/electron: /lib/arm-linux-gnueabihf/libdbus-1.so.3: no version information available (required by /home/pi/MagicMirror/node_modules/electron/dist/electron)
/home/pi/MagicMirror/node_modules/electron/dist/electron: /usr/lib/arm-linux-gnueabihf/libnss3.so: version `NSS_3.22' not found (required by /home/pi/MagicMirror/node_modules/electron/dist/electron)
```
**Steps to Reproduce**: List the step by step process to reproduce the issue.

**Expected Results**: Describe what you expected to see.

**Actual Results**: Describe what you actually saw.

**Configuration**: What does the used config.js file look like? Don't forget to remove any sensitive information!

**Additional Notes**: Provide any other relevant notes not previously mentioned. This is optional.

Electron project says upgrade electron is only fix. 

Please only submit reproducible issues. 

If you're not sure if it's a real bug or if it's just you, please open a topic on the forum: [https://forum.magicmirror.builders/category/15/bug-hunt](https://forum.magicmirror.builders/category/15/bug-hunt)
Problems installing or configuring your MagicMirror? Check out: [https://forum.magicmirror.builders/category/10/troubleshooting](https://forum.magicmirror.builders/category/10/troubleshooting)

When submitting a new issue, please supply the following information:

**Platform**: RP3B+

**Node Version**: 10.17.0

**MagicMirror Version**: v2.9

**Description**: Since the time shift in Germany last sunday reocurring events are in the "old time zone (-1h) in Google Calendar they are displayed correctly but on the mirror itself they are displayed wrong.

**Steps to Reproduce**: make new calendar with reocurring event (not whole day event) and try to display it 

**Expected Results**: the right time

**Actual Results**: the time -1h

**Configuration**: -

Do you have any idea how to fix this? The timezones on the raspberry itself is correct
I've been using Magic Mirror 2.8.0 and want to store secrets (e.g., OpenWeather API keys) outside of my configuration file so I can commit the file to source control. This would also allow for easier Docker image creation where you could poke in some environment variables rather than full config files.

Doing this has been a challenge.

- The `config.js` is used in both a server and a client context. That is, instead of the Electron client app retrieving configuration from the `/config` endpoint of the server, the `config.js` is used directly. This means any references to `process.env` don't work because...
- Electron doesn't provide the process environment on the server to the running client. [This issue shows an example of that.] `process` doesn't exist by default, and even if you enable `nodeIntegration`, the process that Electron is running under isn't the same as the process the server started under. Instead, you need to `require('electron')` and access the `electron.remote.process.env` to get those variables marshaled over. But...
- Electron `nodeIntegration` is off by default. It's also turned off in [the main electron.js](https://github.com/MichMich/MagicMirror/blob/a31546b1ff8c7c10e12d7acbab063297d59c6b93/js/electron.js#L28). This can be overridden by config.

[There is a discussion where I raised this over in the forum.](https://forum.magicmirror.builders/topic/11023/is-there-a-way-to-store-secrets-in-the-environment)

A working config.js with environment variables looks like this:

```js
const owApiKeyName = "OPENWEATHER_API_KEY";
var remote = null;
if (typeof window !== "undefined") {
  remote = window.require("electron").remote;
}

var readEnvironment = function (name) {
  if (typeof process !== "undefined" && process.env[name]) {
    // process is undefined in the Electron app.
    return process.env[name];
  }
  if (remote && remote.process.env[name]) {
    // remote is null if the Electron nodeIntegration value isn't set to true.
    return remote.process.env[name];
  }
};


var config = {
  address: "localhost",
  port: 8080,
  ipWhitelist: ["127.0.0.1", "::ffff:127.0.0.1", "::1"],
  language: "en",
  timeFormat: 24,
  units: "imperial",

  electronOptions: {
    webPreferences: {
      nodeIntegration: true
    }
  },

  modules: [
    {
      module: "alert"
    },
    {
      module: "updatenotification",
      position: "top_bar"
    },
    {
      module: "clock",
      position: "top_left"
    },
    {
      module: "calendar",
      header: "US Holidays",
      position: "top_left",
      config: {
        calendars: [{
          symbol: "calendar-check",
          url: "webcal://www.calendarlabs.com/ical-calendar/ics/76/US_Holidays.ics"
        }]
      }
    },
    {
      module: "compliments",
      position: "lower_third"
    },
    {
      module: "currentweather",
      position: "top_right",
      config: {
        location: "Hillsboro",
        locationID: "5731371", //ID from http://bulk.openweathermap.org/sample/city.list.json.gz; unzip the gz file and find your city
        appid: readEnvironment(owApiKeyName)
      }
    },
    {
      module: "weatherforecast",
      position: "top_right",
      header: "Weather Forecast",
      config: {
        location: "Hillsboro",
        locationID: "5731371", //ID from http://bulk.openweathermap.org/sample/city.list.json.gz; unzip the gz file and find your city
        appid: readEnvironment(owApiKeyName)
      }
    },
    {
      module: "newsfeed",
      position: "bottom_bar",
      config: {
        feeds: [{
          title: "New York Times",
          url: "http://www.nytimes.com/services/xml/rss/nyt/HomePage.xml"
        }],
        showSourceTitle: true,
        showPublishDate: true,
        broadcastNewsFeeds: true,
        broadcastNewsUpdates: true
      }
    }
  ]
};

/*************** DO NOT EDIT THE LINE BELOW ***************/
if (typeof module !== "undefined") {
  module.exports = config;
}
```

The idea is that you have to fall back from `process` to `remote.process` before you can get to the environment.

I'd like to propose a couple things that would make environment variable usage easier:

- Separate client and server configuration such that...
  - The client only needs the endpoint to query and the Electron options.
  - The server has the endpoint to serve on and the module configuration.
- Change the Electron app to query module configurations from the server rather than directly using config.js.

From a backwards compatibility perspective, you could treat config.js as something that both use and the difference would be that the module settings on the Electron side that are read from config.js would be ignored in favor of retrieved settings.
lease only submit re
When submitting a new issue, please supply the following information:

**Platform**: Raspberry Pi 2/3

**MagicMirror Version**: latest version pulled from git 2019-07-07

**Description**: 

The calendar plugin shows items on wrong date. I'm connected to two iCloud calendars. An Item which is scheduled for tomorrow appears to be due for the day after tomorrow. All other plugins like the clock are showing correct date + time

**Additional Notes**: this problem occurred once I updated the installation. Previously I was running a version dating back to April. Problem occurred without touching the config.js

EDIT: 
I did some more digging and changed the timeFormat to "date headers" interestingly the plugin shows actually a wrong date. For example a item which is in the ical file for the 9th appears to be due on the 10th.

```
		{
			module: 'calendar',
			header: 'Kalender',
			position: 'top_left',
			config: {
				fade: false,
				showEnd: false,
				fullDayEventDateFormat:'DD MMM',
				maximumNumberOfDays: 31,
				timeFormat: 'absolute',
				calendars: [
					{
						symbol: 'star-o',
						url: 'webcal://www.calendarlabs.com/templates/ical/Germany-Holidays.ics'
					},
					{
						url: 'URL',
						symbol: 'birthday-cake',
						auth: {
						    user: 'USER',
						    pass: 'PW',
						    method: 'basic'
						}
					},
					{
						url: 'URL',
						symbol: 'calendar-check-o',
						auth: {
						    user: 'USER',
						    pass: 'PW',
						    method: 'basic'
						}
					},

					]
			}
		},
```