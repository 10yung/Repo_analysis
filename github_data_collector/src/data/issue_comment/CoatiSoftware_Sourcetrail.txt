I was wondering if there is a different output other than the graph, I'm want to take the graph analysis and see it as an XML\Json is it possible ?
Sourcetrail should parse a provided XSD file and visualize the definitions and dependencies found.
ubuntu 18.04
NVIDIA-SMI 440.44       Driver Version: 440.44       CUDA Version: 10.2
Sourcetrail_2019_4_102_Linux_64bit.tar.gz

`dh@zg9uagfv:/opt/sourcetrail$ ./Sourcetrail

./Sourcetrail: symbol lookup error: /opt/sourcetrail/lib/libGL.so.1: undefined symbol: _glapi_tls_Current
`
how to fix itï¼Ÿthanks a lot!


Overview graph performance improvement.
Method PersistenceStorage::getGraphForAll calls sqlliteIndexStorage two times:
1. During gathering of node ID's
2. When adding nodes to graph within PersistenceStorage::addNodesToGraph. 

Unfortunately during each of these calls all nodes are retrieved from database.
I rewritten this function. Merging logic from getGraphForAll and addNodesToGraph we can avoid second sql enumeration.
This operation gave me possibility to introduce additional optimizations e.g deletion of redundant checks and avoiding m_fileNodeIndexed enumeration.
Improvement in cycles is aprox. 8% - 15%.
Perf after load project, on debug build,  database linux-5.4.7 before improvement:
![Screenshot_2020-01-12_20-52-26](https://user-images.githubusercontent.com/11246021/72224751-bd347980-3575-11ea-8682-dfcea120aa60.png)

After improvement:
![Screenshot_2020-01-12_20-41-02](https://user-images.githubusercontent.com/11246021/72224741-ab52d680-3575-11ea-900b-a02944b2ce0e.png)

There is a possible removal of redundancy with `if (m_symbolDefinitionKinds.size()) {`
and a little bit performance to gain with answer to question: 
Is there a way that this condition is evaluated as false?
It seems that during the compile and Installation,  Sourcetrail needs to read `Qt5_DIR` variable from environment. However, this point is not cleared in guide.
[linux_package.cmake](https://github.com/CoatiSoftware/Sourcetrail/blob/master/cmake/linux_package.cmake#L3)
it's relate to this [issue](https://github.com/CoatiSoftware/Sourcetrail/issues/874).
Hello !

Actually trying to use the info stored in the sqlite3 database I can see that several pieces are missing:
- Definition kind names
- Source location type names
- Node type name
- Edge type name
- Component access type name

All that information are hardcoded in the C++ source files, would be nice if we could have that info in the database.

Also several queries that are hardcoded in the C++ files could be stored in the database as views to allow working directly with the database easier.

Cheers !
Maven settings is pointing to the correct file.
Maven is working properly.
Java installed on the machine is OpenJDK Runtime Environment (build 11.0.5+10-post-Ubuntu-0ubuntu1.118.04).

tried several different projects, and the result is always the same. 0 indexed files when choosing maven project.

On the other hand, creating the project as an empty java project , partially works, obviously with many errors, as it does not find dependencies.

Any hint ?

Thanks in advance.


Simple patch for issue #802 
Works fine for me when i open projects. Saves some time.
Support for javascript  and Typescript is necessary.