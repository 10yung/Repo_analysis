ephox/sugar's Body.inBody currently doesn't support elements that are located withing the shadow DOM. It returns false for such elements, even though the element is located in the body. This results in buggy behavior for some features such as the quickbar.

This pull request fixes Body.inBody so that it supports shadow DOM inhabitants.
Extra characters \ufeff appear when unchecking styles on an empty cursor

Steps:
1. Type character in TinyMce
2. Select char and select styles: Bold, Italic, Strickethgrough
3. Click to end or press End
4. Unselect all selected styles: Bold, Italic, Strickethgrough
5. Type character
<-----Issue
6. Try moving cursor Left Arrow to the beginning of line

The cursor is not expected to get stuck

Browser: Chrome, FF

Repeatable on https://www.tiny.cloud/
![image](https://user-images.githubusercontent.com/53004232/72593709-b8294e80-3916-11ea-8058-007e3bf8b0a7.png)
Once I add an image and float it right, spaces can no longer be added (e.g. spacebar does absolutely nothing). The text and image are both inside the same paragraph tag and the image has no unusual styles, just style="float: right;" 

![Spacebar-Issue](https://user-images.githubusercontent.com/5322175/72535815-8f8a5180-384f-11ea-9258-287b2342396f.gif)

This is related to following warning attached in image. 

Google Chrome release has the potential to cause a significant impact on applications that utilize cookies for cross-site resources. This release is in response to make cookies secure by default within Chrome and is in alignment with other browser vendors' efforts for Safari, Edge, and Firefox.  

Noticed tinymce is also using cookies and third party cookies may effect existing sites if not take actions.

Is there an impact for existing applications using tinymce by this future release of google ?

[https://www.chromestatus.com/feature/5088147346030592](https://www.chromestatus.com/feature/5088147346030592)

<img width="1425" alt="Screen Shot 2020-01-16 at 4 16 12 PM" src="https://user-images.githubusercontent.com/26952806/72518602-b9f20400-387b-11ea-9588-10e5ce02a18a.png">

**What is the current behavior? Describe the bug**

Pasting text from microsoft word doesn't work, pastes in the editor fine when I go to call back stored text from a database the editor doesn't display anything that I pasted from word. 

When calling back text into the editor, text is being duplicated.

**What is the expected behavior?**

Using a local version of the editor (not pulling from the web address) using version 5.0.9. I have the ability to use to text editor to paste in text from microsoft word and store that text in a local database. Later on you can view the stored text, click them and the program displays that stored texted within this editor.

The text should only show what was pasted in and you should just be able to copy and paste text from microsoft word into the editor and save it, then call the text from the database and have it displayed in the editor.

** Additional Information **

I have tried many plugins avaliable and none of them seem to work. It's very tempermental in the sense of it will occasionally be fine. I have to resort to pasting the word text into Notepad which removes any formatting by Microsoft word as pasting directly from word shows up weird breaks in the text, extra lines that are not in word and spaces etc.

When pasting directly from Microsoft word, the text pastes and saves to the DB perfectly fine although there are some weird formatting with extra spaces that are visable in word but I take those out. When pressing a button to call this saved text back from the Database, if I have pasted directly from word, nothing happens when I call the text, the editor doesn't populate with any text at all.

Problem with doing it this way is it keep duplicating the text I input when I call it back from the database for example I could paste in 1 paragraph of text. Save that text to the DB, that part is fine but when I go to click the button to call that text back into the editor, it has the paragraph I saved but then the exact same paragraph is underneath it. I have checked for white space and new lines etc but there is none. Very stuck on this and none of the plugins seem to work.

The only thing that seems to work is when you type everything manually into the editors and save it. I've not had any forms of problems doing it this way but there is a lot of text for me to do and I really don't want to manually type it. I have also tested this by completely removing TinyMCE editor and it works perfectly fine.
![Tin1](https://user-images.githubusercontent.com/43747640/72508828-4bdb1c00-383e-11ea-9d12-9cd8db20d2fa.jpg)
![Tin2](https://user-images.githubusercontent.com/43747640/72508829-4bdb1c00-383e-11ea-9c6e-2c672c81d22b.jpg)


**Version impacted**
5.1.5

**Actual behavior**
When the editor contains a large image that takes more than the viewport, the PageUp/PageDown keys does not produce the same behavior across the browsers. Chrome is reacting correctly while Internet Explorer and Edge does not.

On Chrome, the Page Up/Down makes the viewport scroll up and down, from top to bottom and from bottom to top.

On Internet Explorer, it makes the viewport go at the bottom, then gets stucked at the bottom.

On Edge, PageUp makes the editor go at the bottom, then go one step higher, than going back to bottom and so on.

**Video that shows the problem**
https://youtu.be/03WmdyNH2bk

**Expected behavior**
Chrome is acting correctly (Page Up makes the viewport scroll from bottom to top, then at the top it stays there. Page Down makes the viewport scroll from top to bottom, then at the bottom it stays there.)
TiniMCE editor is not initiating in IE 11 but works fine in chrome 

Getting error : Unable to get property 'getItem' of undefined or null reference
**What is the current behavior? Describe the bug**

**Please provide the steps to reproduce and if possible a minimal demo of the problem via [fiddle.tinymce.com](http://fiddle.tinymce.com/) or similar.**

```html
<!--minimal pattern-->
<html>
<body>
    <h1 id="foo&quot;&gt;bar"> foo &quot;&gt; bar</h1>
</body>
</html>
```
1. Create an html file like this.
1. Open the file in a web browser.
1. Copy and paste it(foo "> bar) into the Tinymce editor.
1. Create(Insert) a table of contents.
    1. Toc is strange.(original text is `foo "> bar` but toc's title is `bar ">foo "> bar`)
       because created Toc is `<a>href="#foo "> bar">foo " > bar</a>`

![image](https://user-images.githubusercontent.com/10533296/72183196-a2a4b800-3430-11ea-9bcd-a00be971a397.png)

**What is the expected behavior?**
Toc title equal inputed header text. 


**Which versions of TinyMCE, and which browser / OS are affected by this issue? Did this work in previous versions of TinyMCE?**

1. Latest versions of TinyMCE.
1. I saw Google chrome , Mozilla Firefox and Microsoft Edge , running on Windows10.
1. Not work previous versions too.
In a link modal, when saving, and when the selected link element has a class that is not defined in _link_class_list_ setting, the class attribute gets changed to the first listed in _link_class_list_ setting. This is expected behaviour, but is causing some issues. Same issue exists in image plugin.

It can be fixed in a dozen of ways, so here is one solution: a new _link_class_list_setup_ setting which is expected to be a function that accepts _editor_ and returns _array_ of default classes. This way we can add current classes added to the selected link on-fly by checking for values in _editor.dom.getParent(editor.selection.getNode(), 'a[href]')_.

Unfortunately, I do not have experence with yarn builds nor yarn tests, and am asking someone to build the thing, if this gets approved.
Hey everyone,

i have a form that loads the number of fields dynamically, and in one form it has over 500 textareas to fill, when i use 'selector' as 'textarea', my page gets stuck and the JS breaks and the page becomes unresponsive. i tried lazy loading but it still has to load 300 editors, is there any feature to load them asynchronously? or is there any better way to  do this?

here is my config.

`tinymce.init({
            selector: "textarea",
            branding: false,
            statusbar: false,
            menubar:false,
            toolbar: false,
            cleanup : true,
            table_tab_navigation: false,
            table_grid: false,      
            browser_spellcheck: true   });`