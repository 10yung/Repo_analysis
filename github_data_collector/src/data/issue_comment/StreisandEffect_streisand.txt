in this pull, I'm laying the groundwork to support later Ansible version where the ec2 module will be deprecated in favor of ec2_instances
Currently, there are a few modules that only recently got merged in ansible 2.10 devel that will allow us to move the metric module to support boto3. This will allow us to enable the new zones like me-south-1 that are currently not supported with boto and they don't accept pull requests for it. 

The Windows Stunnel Setup instructions (https://x.x.x.x/openvpn/stunnel.html#windows) in step 3 say to "Open the directory where you installed stunnel. For most users, this will either be in C:\Program Files\stunnel or C:\Program Files (x86)\stunnel."  I had to append "\config" to that path, e.g. “C:\Program Files (x86)\stunnel\config” to get to the directory where the existing stunnel.conf file was, the one that needed replaced.  This changes the instructions to specify that subdirectory.
### Expected behavior:
Expected the installation to complete successfully.

### Actual Behavior:
Installation hanged and eventually failed on `TASK [nginx : Install Nginx]`.

### Steps to Reproduce:
1. Start install on fresh Ubuntu 16.04 as per master/Installation.md
2. Select option 8. Existing Server (Advanced)
3. Customize as below:
```
Enable DNS-based ad-blocking? Press enter for default  [no]: yes
Enable OpenConnect? Press enter for default  [yes]:
Enable OpenVPN? Press enter for default  [yes]:
Enable stunnel service (only allowed for OpenVPN)? Press enter for default  [yes]:
Enable Shadowsocks? Press enter for default  [yes]:
Enable v2ray-plugin for Shadowsocks? Press enter for default  [no]:
Enable SSH Forward User? (Note: A SOCKS proxy only user will be added, no shell). Press enter for default  [yes]:
Enable sshuttle? (Note: A full shell access user will be added) Press enter for default  [no]:
Enable tinyproxy? Press enter for default  [yes]:
Enable Tor? Press enter for default  [no]:
Enable WireGuard? Press enter for default  [yes]:
Enable DNS-over-HTTPS (cloudflared)? Press enter for default  [yes]:
```
4. Let run until if fails

### Additional Details:
After logging into the destination server (**while hanged**) and stracing the running apt instance (one trying to install nginx), I noticed archive.ununtu.org (and other sources) failing to resolve repeatedly, thus hanging apt, manually trying to resolve other URLs failed as well, trying to resolve on 8.8.8.8 worked but DNS didn't work on 127.0.0.1, dnsmasq was open on 53 and configured with `server=127.0.0.1#5053`, although port 5053 was **not opened**, after further inspection I noticed that cloudflared service was created but **not running**, after running `systemctl start cloudflared` the DNS resolved successfully thus fixing the issue, running ./streisand one more time finished the installation without any further errors. It might be that the service creation/start timing ordering is misconfigured so it accidentally fails DNS for the whole machine in the gap between create and start, while trying to do other tasks in the meantime (apt install nginx).
#### *Log output from Ansible or other relevant services (link to Gist for longer output):*
```
fatal: [xxx.xxx.xxx.xxx]: FAILED! => {"cache_update_time": 1577616037, "cache_updated": false, "changed": false, "msg": "'/usr/bin/apt-get -y -o \"Dpkg::Options::=--force-confdef\" -o \"Dpkg::Options::=--force-confold\"      install 'nginx'' failed: E: Failed to fetch http://mirror.hetzner.de/ubuntu/packages/pool/main/libj/libjpeg-turbo/libjpeg-turbo8_1.4.2-0ubuntu3.3_amd64.deb  Temporary failure resolving 'archive.ubuntu.com'\n\nE: Failed to fetch http://mirror.hetzner.de/ubuntu/packages/pool/
...
```
##### *Target Cloud Provider: Hetzner*
##### *Operating System of target host: Ubuntu 16.04*
##### *Operating System of client: Ubuntu 16.04*
##### *Version of Ansible, using `ansible --version`: ansible 2.8.4*
##### *Output from `git rev-parse HEAD` in your Streisand directory: f155974bc9542b1d8525bf223a931dab9b56836f*

### Expected behavior: 

Streisand should install on a clean KVM based VPS (16.04 Ubuntu)

### Actual Behavior: 

It fails while restarting Nginx with the following error code

> 
 systemctl restart nginx
Job for nginx.service failed because the control process exited with error code. See "systemctl status nginx.service" and "journalctl -xe" for details.

Result of journalctl -xe

Dec 26 01:59:10 localhost systemd[1]: nginx.service: Unit entered failed state.
Dec 26 01:59:10 localhost systemd[1]: nginx.service: Failed with result 'exit-code'.
Dec 26 01:59:15 localhost systemd[1]: nginx.service: Service hold-off time over, scheduling restart.
Dec 26 01:59:15 localhost systemd[1]: Stopped A high performance web server and a reverse proxy server.
-- Subject: Unit nginx.service has finished shutting down
-- Defined-By: systemd
-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel
--
-- Unit nginx.service has finished shutting down.
Dec 26 01:59:15 localhost systemd[1]: Starting A high performance web server and a reverse proxy server...
-- Subject: Unit nginx.service has begun start-up
-- Defined-By: systemd
-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel
--
-- Unit nginx.service has begun starting up.
Dec 26 01:59:15 localhost nginx[32506]: nginx: [emerg] a duplicate default server for 0.0.0.0:80 in /etc/nginx/sites-enabled/streisand:21
Dec 26 01:59:15 localhost nginx[32506]: nginx: configuration file /etc/nginx/nginx.conf test failed
Dec 26 01:59:15 localhost systemd[1]: nginx.service: Control process exited, code=exited status=1
Dec 26 01:59:15 localhost systemd[1]: Failed to start A high performance web server and a reverse proxy server.
-- Subject: Unit nginx.service has failed
-- Defined-By: systemd
-- Support: http://lists.freedesktop.org/mailman/listinfo/systemd-devel
--
-- Unit nginx.service has failed.
--
-- The result is failed.
Dec 26 01:59:15 localhost systemd[1]: nginx.service: Unit entered failed state.
Dec 26 01:59:15 localhost systemd[1]: nginx.service: Failed with result 'exit-code'.
> 

### Steps to Reproduce:
1.  Reinstalled a new server on a new KVM VPS (16.04 Ubuntu)

2. Let Streisand configure the System with custom settings.

<!--
If you have a `streisand-diagnostics.md` file in your Streisand directory please
paste its contents below. 
-->


### Ansible Information

* Ansible version: 2.8.4
* Ansible system: Linux
* Host OS: Ubuntu
* Host OS version:  16.04
* Python interpreter: /usr/bin/python
* Python version: 2.7.12

### Streisand Information

* Streisand Git revision: f155974bc9542b1d8525bf223a931dab9b56836f
* Streisand Git clone has untracked changes: yes
* Genesis role: localhost
* Custom SSH key: False

### Enabled Roles

* Shadowsocks enabled:  True
* Wireguard enabled: True
* OpenVPN enabled: True
* stunnel enabled: True
* Tor enabled: False
* Openconnect enabled: True
* TinyProxy enabled: True
* SSH forward user enabled: True
* Configured number of VPN clients: 5

<!--




This is the same error which was reported on #1532 





Support for python 2.7 will be deprecated in January, 2020. What dependencies need to be ported to 3.8 before this happens?
The ec2-metadata-instance.yml playbook blocked requests to EC2 metadata, but provider-detect.yml playbook has code to detect cloud provider by querying ec2 metadata

```
ExecStart=/sbin/route add -host 169.254.169.254 reject
```

```
        - name: "Find the external EC2 IP from Metadata"
          command: curl http://169.254.169.254/latest/meta-data/public-ipv4
          register: streisand_ec2_external_ip
          changed_when: False
```

So it will be impossible to execute `streisand-existing-cloud-server.sh` script subsequently after a successful attempt.

As a workaround ssh onto instance & run

```
sudo ip r del 169.254.169.254
``` 

The Windows Stunnel Setup instructions (https://x.x.x.x/openvpn/stunnel.html#windows) in step 3 says to "Open the directory where you installed stunnel. For most users, this will either be in C:\Program Files\stunnel or C:\Program Files (x86)\stunnel."  Using a fresh install today, I had to append "\config" to that path, e.g. “C:\Program Files (x86)\stunnel\config”.
This is on a vanilla install (all defaults accepted) on Amazon AWS.

TASK [download-and-verify : Download the OpenVPN Community files] *********************************************************
changed: [3.136.24.173] => (item={u'sig': u'openvpn-latest-stable.tar.gz.asc', u'file': u'openvpn-latest-stable.tar.gz'})
failed: [3.136.24.173] (item={u'sig': u'openvpn-install-latest-stable.exe.asc', u'file': u'openvpn-install-latest-stable.exe'}) => {"ansible_loop_var": "item", "changed": false, "dest": "/var/www/streisand/mirror/openvpn/openvpn-install-latest-stable.exe", "elapsed": 0, "item": {"file": "openvpn-install-latest-stable.exe", "sig": "openvpn-install-latest-stable.exe.asc"}, "msg": "Request failed", "response": "HTTP Error 404: Not Found", "status_code": 404, "url": "https://build.openvpn.net/downloads/releases/latest/openvpn-install-latest-stable.exe"}

TASK [openvpn : One or more of the VPN clients could not be mirrored. Please file a bug report on GitHub so that the version number, checksum, or download location can be updated. Setup will now continue.] ***
