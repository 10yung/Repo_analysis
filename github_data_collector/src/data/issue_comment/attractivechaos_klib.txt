Please could you provide an example on how to use klist.h. I'm having to forward declare structures defined by the macro expansion which i'm pretty sure is not the way to do it.
Need to define `kfloat` as `float` and pass `-fsingle-precision-constant` (or
similar for other compilers.)
It would be extremely nice for potential use on embedded devices if floating point math (i.e., use of `__ac_HASH_UPPER` and addition of `0.5`) could be avoided in khash.

If that is not possible, it would be quite a bit better already if `__ac_HASH_UPPER` became a `float`, at least as an option/define.

WDYT? Are you open to a PR for either of those two?
the example uses `if(!ret)` even though ret isn't declared. i assume `k` is meant.
When compiling a library that uses ksort.h on Windows I get the following error:

error LNK2019: unresolved external symbol drand48 referenced in function ks_shuffle_sort_sprite_batch_item

As far as I know drand48 isn't implemented in math.h on Windows.
This PR fixes some potential UB found in kbtree: 

https://github.com/neovim/neovim/pull/10025
minor API doc fix
fix the kv_a in kvec.h, error: lvalue required as left operand of assignment  
Hi!

I noticed this TODO on kh_put():

 `TODO: implement automatic shrinking; resize() already supports shrinking`

... and above I see there's a resize call with h.n_buckets - 1 and the comment `clear "deleted" elements` so it seems like it _does shrink_ on certain situations but not in others? Can you give more details on this please?

Thanks!



Added new function to return the current number of items  in the list.