### Background

Fix this problem:
https://github.com/ProjectDent/ARKit-CoreLocation/issues/236

### Breaking Changes
No breaking changes.

Bumps [excon](https://github.com/excon/excon) from 0.64.0 to 0.71.0.
<details>
<summary>Changelog</summary>

*Sourced from [excon's changelog](https://github.com/excon/excon/blob/master/changelog.txt).*

> 0.71.0 2019-12-12
> =================
> 
> fix for leftover data with interrupted persistent connections
> 
> 0.70.0 2019-12-02
> =================
> 
> Update bundled certificates
> 
> 
> 0.69.1 2019-11-21
> =================
> 
> Fix mistake in proxy connection error handling
> 
> 0.69.0 2019-11-21
> =================
> 
> Raise better proxy connection errors
> 
> 0.68.0 2019-10-25
> =================
> 
> Updated bundled certs
> 
> 0.67.0 2019-09-24
> =================
> 
> Properly redact user/pass info from proxy credentials
> Update bundled certs
> 
> 0.66.0 2019-08-06
> =================
> 
> Add remote_ip to datum, enabling usage in middleware
> redirect follower now raises after following too many redirects (default 10)
> fixed stub clearing in tests to avoid race conditions
> 
> 0.65.0 2019-07-22
> =================
> 
> fix yardoc formatting
> fix creating Proc without a block
> reduce/refine gem file contents
> update bundled certs
> readd bundled certs to gem file contents
</details>
<details>
<summary>Commits</summary>

- [`1149d44`](https://github.com/excon/excon/commit/1149d44d921660bcde5e21671e6a10346d177f33) v0.71.0
- [`ccb57d7`](https://github.com/excon/excon/commit/ccb57d7a422f020dc74f1de4e8fb505ab46d8a29) fix for leftover data with interrupted persistent connections
- [`f8de8cf`](https://github.com/excon/excon/commit/f8de8cf63e789ff9329a13756bfb51364abe107a) v0.70.0
- [`93f4a21`](https://github.com/excon/excon/commit/93f4a214271df3b543ac4f4d1444d80ea2d75a01) v0.69.1
- [`e89bbb7`](https://github.com/excon/excon/commit/e89bbb718bb67972e2e08109fb4c1edd09568cd5) Merge pull request [#709](https://github-redirect.dependabot.com/excon/excon/issues/709) from jasquat/fix_response_status_check
- [`5647437`](https://github.com/excon/excon/commit/56474377bea9fdda2e07f52c169f4500e8c2be36) fixed response status check when making a request with a valid proxy is set
- [`f769176`](https://github.com/excon/excon/commit/f7691760969e74b6facaedd0a80ccef01709d428) v0.69.0
- [`20c0748`](https://github.com/excon/excon/commit/20c0748f2cfdd78a5f5b23057ad538240c372344) define ProxyConnectionError
- [`f44106a`](https://github.com/excon/excon/commit/f44106afd686d6eda076c0b92182f3df60e37f34) raise on failed proxy connect
- [`d7ed5fe`](https://github.com/excon/excon/commit/d7ed5fe894fb696fddb5f28c454c949d3c1116d9) be thorough in unsubscribing to notifications in instrumentation tests
- Additional commits viewable in [compare view](https://github.com/excon/excon/compare/v0.64.0...v0.71.0)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=excon&package-manager=bundler&previous-version=0.64.0&new-version=0.71.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/ProjectDent/ARKit-CoreLocation/network/alerts).

</details>
when i add a locationannotationnode at some distance away from me it still adds it at the place where i am standing ie its write into my face.
### Background

Add .jazzy.yml and a docs/ folder tree built by Jazzy from Swiftdoc docstrings.

### Breaking Changes
None

### Meta
- Tied to Version Release(s):

### PR Checklist
- [ ] CI runs clean?
- [ ] Appropriate label has been added to this PR (i.e., Bug, Enhancement, etc.).
- [ ] Documentation has been added to all `open`, and `public` scoped methods and properties.
- [ ] Changelog has been updated
- [ ] Tests have have been added to all new features. (not a requirement, but helpful)
- [ ] Image/GIFs have been added for all UI related changed.


Polish Jacopo Gasparetto's node stacking work and merge it into mainline.
**What's happening?**
AR camera will freeze when app is returning from background with an ongoing AR session.

**Device tested**: iPhone XS Max running iOS12.4

It seems like a deadlock on the “SCNTransaction.commit()” command in LocationNode.swift

**How to reproduce:**
1. search address in the sample code
2. click on navigate to the address
3. move app to background 
4. launch a different app
5. relaunch the sample code
6. app will freeze.

**Log messages:**
```
pause
2019-12-01 10:23:38.290421+0200 ARKit+CoreLocation[51187:3346340] [Snapshotting] Snapshotting a view (0x107803a00, UIKeyboardImpl) that is not in a visible window requires afterScreenUpdates:YES.
run
camera did change tracking state: limited, initializing
Camera: <ARCamera: 0x2801c07e0 imageResolution=(1920, 1440) focalLength=(1437.988, 1437.988) principalPoint=(960.241, 715.517) trackingState=Limited-Initializing transform=<translation=(-0.011208 0.063010 -0.039065) rotation=(-5.13° -142.23° -90.69°)>>

```

**Full stack:**
```
(lldb) bt
* thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGSTOP
  * frame #0: 0x00000001984e9018 libsystem_kernel.dylib`__psynch_rw_wrlock + 8
    frame #1: 0x0000000198566784 libsystem_pthread.dylib`_pthread_rwlock_lock_wait + 84
    frame #2: 0x00000001acd89200 SceneKit`C3DTransactionFlush + 328
    frame #3: 0x00000001acd89dac SceneKit`C3DTransactionCommit + 364
    frame #4: 0x000000010176caf8 ARCL`LocationNode.updatePositionAndScale(setup=false, scenePosition=some, nodeLocation=0x0000000283afe4a0, locationManager=0x0000000282d003c0, onCompletion=0x0000000101789240 ARCL`partial apply forwarder for closure #1 () -> () in closure #1 (ARCL.LocationNode) -> () in closure #2 (ARCL.PolylineNode) -> () in ARCL.SceneLocationView.updatePositionAndScaleOfLocationNodes() -> () at <compiler-generated>, self=0x0000000101d94950) at LocationNode.swift:174:24
    frame #5: 0x0000000101786840 ARCL`closure #1 in closure #2 in SceneLocationView.updatePositionAndScaleOfLocationNodes(node=0x0000000101d94950, self=0x000000010802ca00) at SceneLocationView.swift:465:10
    frame #6: 0x000000010177c3d8 ARCL`thunk for @callee_guaranteed (@guaranteed LocationNode) -> (@error @owned Error) at <compiler-generated>:0
    frame #7: 0x0000000101789234 ARCL`thunk for @callee_guaranteed (@guaranteed LocationNode) -> (@error @owned Error)partial apply at <compiler-generated>:0
    frame #8: 0x00000001c7083124 libswiftCore.dylib`(extension in Swift):Swift.Sequence.forEach((A.Element) throws -> ()) throws -> () + 528
    frame #9: 0x0000000101786640 ARCL`closure #2 in SceneLocationView.updatePositionAndScaleOfLocationNodes(node=0x0000000101d913e0, self=0x000000010802ca00) at SceneLocationView.swift:463:23
    frame #10: 0x00000001017847d0 ARCL`thunk for @callee_guaranteed (@guaranteed PolylineNode) -> (@error @owned Error) at <compiler-generated>:0
    frame #11: 0x000000010178919c ARCL`thunk for @callee_guaranteed (@guaranteed PolylineNode) -> (@error @owned Error)partial apply at <compiler-generated>:0
    frame #12: 0x00000001c7083124 libswiftCore.dylib`(extension in Swift):Swift.Sequence.forEach((A.Element) throws -> ()) throws -> () + 528
    frame #13: 0x0000000101786224 ARCL`SceneLocationView.updatePositionAndScaleOfLocationNodes(self=0x000000010802ca00) at SceneLocationView.swift:462:65
    frame #14: 0x00000001017870c4 ARCL`protocol witness for SceneLocationManagerDelegate.updatePositionAndScaleOfLocationNodes() in conformance SceneLocationView at <compiler-generated>:0
    frame #15: 0x0000000101773638 ARCL`SceneLocationManager.updateLocationData(self=0x0000000282d003c0) at SceneLocationManager.swift:83:32
    frame #16: 0x000000010177459c ARCL`closure #1 in SceneLocationManager.run(_0=0x0000000280dda580, self=0x0000000282d003c0) at SceneLocationManager.swift:127:11
    frame #17: 0x0000000101774604 ARCL`thunk for @escaping @callee_guaranteed (@guaranteed NSTimer) -> () at <compiler-generated>:0
    frame #18: 0x000000019934ea78 Foundation`-[_NSTimerBlockTarget fire:] + 40
    frame #19: 0x00000001993f80c8 Foundation`__NSFireTimer + 88
    frame #20: 0x00000001988e71b8 CoreFoundation`__CFRUNLOOP_IS_CALLING_OUT_TO_A_TIMER_CALLBACK_FUNCTION__ + 32
    frame #21: 0x00000001988e6ee4 CoreFoundation`__CFRunLoopDoTimer + 900
    frame #22: 0x00000001988e66c8 CoreFoundation`__CFRunLoopDoTimers + 252
    frame #23: 0x00000001988e1398 CoreFoundation`__CFRunLoopRun + 1812
    frame #24: 0x00000001988e0964 CoreFoundation`CFRunLoopRunSpecific + 452
    frame #25: 0x000000019ab21d8c GraphicsServices`GSEventRunModal + 108
    frame #26: 0x00000001c5d7d758 UIKitCore`UIApplicationMain + 216
    frame #27: 0x0000000100ee3b1c ARKit+CoreLocation`main at AppDelegate.swift:12:7
    frame #28: 0x000000019839cfd8 libdyld.dylib`start + 4
(lldb) 
```




The implementations of `translation(toLocation:)` and `translatedLocation(with:)` use a linear interpolation of spherical coordinates. This technique gives reasonably decent accuracy for short distances, but is inherently incorrect.

Note the value of `translatedLocationAccuracy` in `assertCorrectTranslationComputations(...)` in CLLocationExtensionsTests.swift. It's 0.02 degrees. Put another way, we're willing to say that these functions are "correct" if they get to within 1/2 to 1 nautical mile of the correct value. I tried decreasing the allowed error even to 0.01, but many of the tests failed at that still-too-generous threshold.

The correct approach would be to project the locations into a rectangular coordinate system, perform the easting and nothing translations, and project that result back into lat/lon coordinates.

One implementation idea is to use MapKit's `MKMapPointForCoordinate` and `MKCoordinateForMapPoint` conversion routines, and do the actual translation in the grid MapKit uses (some sort of Mercator projection). That would introduce a dependency on MapKit. 

Another way would be to write and verify Mercator forward and reverse projection code, which would be more work. John Snyder's red book (https://pubs.er.usgs.gov/publication/pp1395) is a good source for algorithms and truth data.

 I'm leaving this problem for another day, but wanted to document it while it's fresh.
I pulled the last commits from develop and now I always experience really poor performance when the tracking state change from `normal` to `limited, insufficient feature` to `normal` again.
Everything becomes extremely laggy and I have to restart my application.

Here the log that it prompts every time

```
camera did change tracking state: limited, initializing
camera did change tracking state: limited, relocalizing
camera did change tracking state: normal
camera did change tracking state: limited, insufficient features
camera did change tracking state: normal
[Technique] World tracking performance is being affected by resource constraints [1]
[Technique] VIO error callback: 26859.984836, 1, Frame processing rate has fallen below pre-set threshold
[Technique] VIO error callback: 26860.484814, 1, Frame processing rate has fallen below pre-set threshold
[Technique] World tracking performance is being affected by resource constraints [1]
[Technique] VIO error callback: 26861.251447, 1, Frame processing rate has fallen below pre-set threshold
[Technique] VIO error callback: 26861.534768, 1, Frame processing rate has fallen below pre-set threshold
[Technique] VIO error callback: 26861.634764, 1, Frame processing rate has fallen below pre-set threshold
[Technique] World tracking performance is being affected by resource constraints [1]
...
``` 
when I move all nodes are move with me where I travel please help me
Here is my code:

func ARINIT()  {
 var location = CLLocation(coordinate: CLLocationCoordinate2D(latitude: 33.54981128339599, longitude: 73.12484017688058), altitude: 100) // ISKPRO
        let image = UIImage(named: "pin")!
        var annotationNode = LocationAnnotationNode(location: location, image: image)
        annotationNode.annotationNode.name = "ISKPRO"
        annotationNode.scaleRelativeToDistance = true
        sceneLocationView.addLocationNodeWithConfirmedLocation(locationNode: annotationNode)

        location  = CLLocation(coordinate: CLLocationCoordinate2D(latitude: 33.5498046875, longitude: 73.12484017688058), altitude: 100) // Un named next to ISKPRO
        annotationNode = LocationAnnotationNode(location: location, image: image)
        annotationNode.annotationNode.name = "Next to ISKPRO"
        sceneLocationView.addLocationNodeWithConfirmedLocation(locationNode: annotationNode)

        location  = CLLocation(coordinate: CLLocationCoordinate2D(latitude: 33.6101371, longitude: 73.3433248), altitude: 100) // R Systems
        annotationNode = LocationAnnotationNode(location: location, image: image)
        annotationNode.annotationNode.name = "R Systems"
        sceneLocationView.addLocationNodeWithConfirmedLocation(locationNode: annotationNode)

}