
npm audit surfaces vulnerabilities from package Braces. I went to create a PR however there are PRs from 2016. Is this project dead?
My application was running fine until last week when I start running it in development mode (webpack hot development) as usual; It starts scanning files that have never changed and kept reloading the project. Recently, it got even worse - start crawling into my `node_modules` folder and reloading by each file, and eventually crashed.

It has never happened before until recently, and I have no idea what caused it to behave like that suddenly.

**command prompt logs**

    [1] ðŸ“‰  Initial data loaded, starting server...                                                                                                            
    [1] ----                                                                                                                                                   
    [1] ==> âœ…  HTM Owners Portal is running, talking to API server at http://localhost:3335.                                                                   
    [1] ==> ðŸ’»  Open http://localhost:3000 in a browser to view the app.                                                                                       
    [0] webpack building...                                                                                                                                    
    [1] [piping] File src\constants.js has changed, reloading.                                                                                                 
    [1] [piping] File src\components\Dialog\Dialog.js has changed, reloading.                                                                                  
    [1] internal/process.js:183                                                                                                                                
    [1]       throw util._errnoException(err, 'kill');                                                                                                         
    [1]       ^                                                                                                                                                
    [1]                                                                                                                                                        
    [1] Error: kill ESRCH                                                                                                                                      
    [1]     at Object._errnoException (util.js:1024:11)                                                                                                        
    [1]     at process.kill (internal/process.js:183:18)                                                                                                       
    [1]     at FSWatcher.<anonymous> (C:\Users\mok\Documents\portal\node_modules\piping\lib\piping.js:87:19)                                 
    [1]     at emitTwo (events.js:126:13)                                                                                                                      
    [1]     at FSWatcher.emit (events.js:214:7)                                                                                                                
    [1]     at FSWatcher.<anonymous> (C:\Users\mok\Documents\portal\node_modules\chokidar\index.js:196:15)                                   
    [1]     at FSWatcher._emit (C:\Users\mok\Documents\portal\node_modules\chokidar\index.js:238:5)                                          
    [1]     at FSWatcher.<anonymous> (C:\Users\mok\Documents\portal\node_modules\chokidar\lib\nodefs-handler.js:263:16)                      
    [1]     at FSReqWrap.oncomplete (fs.js:153:5)                                                                                                              
    [1] npm ERR! code ELIFECYCLE                                                                                                                               
    [1] npm ERR! errno 1                                                                                                                                       
    [1] npm ERR! portal@0.1.0 start-dev: `better-npm-run start-dev`                                                                                     
    [1] npm ERR! Exit status 1                                                                                                                                 
    [1] npm ERR!                                                                                                                                               
    [1] npm ERR! Failed at the portal@0.1.0 start-dev script.                                                                                           
    [1] npm ERR! This is probably not a problem with npm. There is likely additional logging output above.                                                     
    [1]                                                                                                                                                        
    [1] npm ERR! A complete log of this run can be found in:                                                                                                   
    [1] npm ERR!     C:\Users\mok\AppData\Roaming\npm-cache\_logs\2018-06-21T01_10_39_440Z-debug.log                                                   
    [1] npm run start-dev exited with code 1                                                                                                                   
    --> Sending SIGTERM to other processes..                                                                                                                   
    [2] gulp watch --gulpfile semantic/gulpfile.js exited with code 1                                                                                          
    [0] npm ERR! code ELIFECYCLE                                                                                                                               
    [0] npm ERR! errno 1                                                                                                                                       
    [0] npm ERR! portal@0.1.0 watch-client: `better-npm-run watch-client`                                                                               
    [0] npm ERR! Exit status 1                                                                                                                                 
    [0] npm ERR!                                                                                                                                               
    [0] npm ERR! Failed at the portal@0.1.0 watch-client script.                                                                                        
    [0] npm ERR! This is probably not a problem with npm. There is likely additional logging output above.                                                     
    [0] npm run watch-client exited with code 1                                                                                                                
    npm ERR! code ELIFECYCLE                                                                                                                                   
    npm ERR! errno 1                                                                                                                                           
    npm ERR! owners-portal@0.1.0 dev: `concurrently --kill-others "npm run watch-client" "npm run start-dev" "gulp watch --gulpfile semantic/gulpfile.js"`     
    npm ERR! Exit status 1                                                                                                                                     
    npm ERR!                                                                                                                                                   
    npm ERR! Failed at the portal@0.1.0 dev script.                                                                                                     
    npm ERR! This is probably not a problem with npm. There is likely additional logging output above.                                                         
                                                                                                                                                                 
    npm ERR! A complete log of this run can be found in:                                                                                                       
    npm ERR!     C:\Users\mok\AppData\Roaming\npm-cache\_logs\2018-06-21T01_10_40_197Z-debug.log

A few possible related issues:
 - https://github.com/mdlawson/piping/issues/10 
 - https://github.com/nodejs/node/issues/4852
 - https://github.com/erikras/react-redux-universal-hot-example/issues/638

After updated `piping` module version to the latest it seems to fix the problem.

However, the next day I ran it again, it starts showing me the similar behavior again, but it didn't crash my command prompt when starting, only worse: when I start changing a code or a file, it would go into my `node_modules` and reload ten or hundred times:

**command prompt logs (when I change a file)**

    [0] webpack built e36ced9f06f9f77a7631 in 1203ms
    [0] webpack building...
    [1] [piping] File node_modules\react-dom\lib\ReactDOM.js has changed, reloading.
    [1] [piping] File node_modules\react-dom\lib\ReactDOMFeatureFlags.js has changed, reloading.
    [1] [piping] File node_modules\lodash\_parent.js has changed, reloading.
    [1] [piping] File node_modules\lodash\flatten.js has changed, reloading.
    [1] [piping] File node_modules\lodash\now.js has changed, reloading.
    [1] [piping] File node_modules\lodash\_basePickBy.js has changed, reloading.
    [1] [piping] File node_modules\lodash\_asciiSize.js has changed, reloading.
    [1] [piping] File node_modules\lodash\_unicodeSize.js has changed, reloading.
    [1] [piping] File node_modules\lodash\_arrayAggregator.js has changed, reloading.
    [1] [piping] File node_modules\lodash\_baseAggregator.js has changed, reloading.
    // more

**command prompt logs (when starting in dev-mode)**

    [1] Executing script: start-dev
    [1]
    [0] Executing script: watch-client
    [0]
    [1] to be executed: "node ./bin/server.js"
    [0] to be executed: "node webpack/webpack-dev-server.js"
    [2] [15:24:29] Working directory changed to ~\Documents\portal\semantic
    [1] [piping] File node_modules\core-js\library\modules\web.immediate.js has changed, reloading.
    [0] ==> ðŸš§  Webpack development server listening on port 3001
    [1] [piping] File node_modules\babel-plugin-transform-es2015-classes\lib\loose.js has changed, reloading.
    [1] [piping] File node_modules\babel-helper-remap-async-to-generator\lib\for-await.js has changed, reloading.
    [1] [piping] File node_modules\react\lib\React.js has changed, reloading.
    [2] [15:24:45] Using gulpfile ~\Documents\htm-owner-portal\semantic\gulpfile.js
    [2] [15:24:45] Starting 'watch'...
    [2] Watching source files for changes
    [1] [piping] File node_modules\react-dom\lib\ReactComponentBrowserEnvironment.js has changed, reloading.
    [1] [piping] File node_modules\react-dom\lib\getEventCharCode.js has changed, reloading.
    [1] [piping] File node_modules\lodash\_arrayMap.js has changed, reloading.
    [1] [piping] File bin\server.js has changed, reloading.
    [1] [piping] File node_modules\webpack-isomorphic-tools\babel-transpiled-modules\tools\log.js has changed, reloading.
    [1] [piping] File node_modules\react\lib\React.js has changed, reloading.
    [1] [piping] File node_modules\htmlparser2\lib\Parser.js has changed, reloading.
    [1] [piping] File node_modules\domutils\lib\traversal.js has changed, reloading.
    [1] [piping] File node_modules\react-router\lib\PromiseUtils.js has changed, reloading.
    [1] [piping] File node_modules\redux-actions\lib\handleActions.js has changed, reloading.
    [1] [piping] File node_modules\formidable\lib\multipart_parser.js has changed, reloading.
    [1] [piping] File node_modules\semantic-ui-react\dist\commonjs\lib\classNameBuilders.js has changed, reloading.
    [1] [piping] File node_modules\semantic-ui-react\dist\commonjs\elements\Label\LabelDetail.js has changed, reloading.
    [1] [piping] File node_modules\lodash\_baseInRange.js has changed, reloading.
    [1] [piping] File node_modules\airbnb-prop-types\build\componentWithName.js has changed, reloading.

This is my `piping` module version (please let me know if you need any more information): 

**npm-shrinkwrap.json**

    "piping": {
      "version": "1.0.0-rc.4",
      "resolved": "https://registry.npmjs.org/piping/-/piping-1.0.0-rc.4.tgz",
      "integrity": "sha1-d1oUz2UapC7ltKrKs1SMUXShXw=",
      "requires": {
        "chokidar": "1.7.0",
        "colors": "1.1.2",
        "lodash": "4.17.10"
      }
    }

**package.json**

`"piping": "^1.0.0-rc.4",`

Anyone else is facing this issue or anyone has any idea how to fix this? 

Any help is appreciated
Hi I'm getting this error when i run my node express server with piping
```sh
MaxListenersExceededWarning: Possible EventEmitter memory leak detected. 11 message listeners added. Use emitter.setMaxListeners() to increase limit
```

This is my node server
```js
// Restarts App on Save
require('piping')()

import * as express from 'express'
import * as morgan from 'morgan'
import router, { socket } from './main'

let app: express.Application = express()

app.use(morgan('dev'))
app.use('/middleware', router)

socket.listen(
  app.listen(3000, () => {
    console.log('Listening on port 3000')
  })
)
```

I'm using piping version 1.0.0-rc.4
I think es6/7 provides a much more readable code
This pull request is to allow specifying:

options.firstChar: '.'
and
options.filenameStarts: ['part','otherpart']

to include arbitrary names...

I personally use it like that:
{
    firstChar: null,
    filenameStarts: ['live']
}

in combination with webpack modulesDirectories when required files are specified like that:

import App from 'live/activecomponents/app/app.js';

if you use the debugger and piping ,cannot work .How to solve?

I am getting following warning when use version "piping@1.0.0-rc.2": 
**possible EventEmitter memory leak detected. 11 listeners added. Use emitter.setMaxListeners() to increase limit.**

downgrade to @0.3.0, and it solves the problem

How can I get something like ruby's pry? 

V1 is a full rewrite in ES6, with a new mechanism for including piping in your code, hooks for reloading events on both the supervisor and application process, and a test suite.
