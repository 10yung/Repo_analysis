yaf+swoole还需要更改底层的C逻辑？请告知，公司想转向swoole+yaf的框架实现，求解
yaf版本：3.0.8
php版本: 7.3.6
phpunit版本：7.0.3
系统：CentOS Linux release 7.6.1810 (Core)
Linux version 3.10.0-957.el7.x86_64 (mockbuild@kbuilder.bsys.centos.org) (gcc version 4.8.5 20150623 (Red Hat 4.8.5-36) (GCC) ) #1 SMP Thu Nov 8 23:39:32 UTC 2018

#389 跟这个问题一样
使用 HTTP 请求可以正常返回
使用 Cli 模式时候, 使用 Yaf_Request_Simple 构造 Request
在代码中执行: new Yaf_Application($this->config); 时候报错

执行命令返回信息如下：
-------------------------------------------------------------------------------------
[root@localhost tests]# phpunit --debug --verbose
PHPUnit 7.0.3 by Sebastian Bergmann and contributors.

Runtime:       PHP 7.3.6
Configuration: /mnt/hgfs/Project/yh/tests/phpunit.xml

Test 'tests\api\IndexTest::testTest' started
段错误
----------------------------------------------------------------------------------------

只有加 --enable-yaf-debug 编译后才会出现以上问题, 正常编译可以正常运行。
I'm not sure why my modules aren't working.
env: WSL linux, yaf(latest), php 7.2

routes in conf:
```
application.dispatcher.defaultModule = Default
application.dispatcher.defaultController = FirstRun
application.dispatcher.defaultAction = Index
routes.firstrun2.type="rewrite"
routes.firstrun2.match="/"
routes.firstrun2.route.module = Default
routes.firstrun2.route.controller=Firstrun
routes.firstrun2.route.action=Index
```

In chrome, I go to: http://localhost/

I var_dump the app and get this for routes

```
    [_request:protected] => Yaf_Request_Http Object
        (
            [module] => 
            [controller] => 
            [action] => 
            [method] => GET
            [params:protected] => Array
                (
                )

            [language:protected] => 
            [_exception:protected] => 
            [_base_uri:protected] => 
            [uri:protected] => 
            [dispatched:protected] => 
            [routed:protected] => 
```

and this for defaults:
```
[_auto_render:protected] => 1
    [_return_response:protected] => 
    [_instantly_flush:protected] => 
    [_default_module:protected] => Default
    [_default_controller:protected] => Firstrun
    [_default_action:protected] => index
)
```

This when I dump getRoutes
```
Array
(
    [0] => Default
    [1] => Admin
)
```

I would expect this:
```
 (
            [module] => Default
            [controller] => FirstRun
            [action] => Index
)
```

I have no idea what I could be doing wrong?
对于新手来讲，根据readme步骤写demo，会缺少Bootstrap.php文件，建议加上。这是在php.net上找到的
`<?php
/**
 * This file should be under the APPLICATION_PATH . "/application/"(which was defined in the config passed to Yaf_Application).
 * and named Bootstrap.php,  so the Yaf_Application can find it 
 */
class Bootstrap extends Yaf_Bootstrap_Abstract {
    function _initConfig(Yaf_Dispatcher $dispatcher) {
//        echo "1st called\n";
    }

    function _initPlugin($dispatcher) {
//        echo "2nd called\n";
    }
}
?>`
assemble可以生成url

请问如何在controller中获得Yaf_Router对象？

php官网的例子是这样子的
```
$router = new Yaf_Router();

$route  = new Yaf_Route_Map();
$router->addRoute("map", $route);

var_dump($router->getRoute('map')->assemble(
                        array(
                                ':c' => 'foo_bar'
                        ),
                        array(
                                'tkey1' => 'tval1',
                                'tkey2' => 'tval2'
                        )
                   )
);

$route = new Yaf_Route_Map(true, '_');
$router->addRoute("map", $route);
var_dump($router->getRoute('map')->assemble(
                        array(
                                ':a' => 'foo_bar'
                        ),
                        array(
                                'tkey1' => 'tval1',
                                'tkey2' => 'tval2'
                        )
                   )
);
```

在boostrap中创建路由，在controller中如何得到路由对象呢？


尝试1
- 路由配置
```
routes.login.type="regex"
routes.login.match="#^/user/login#"
routes.login.route.controller=user
routes.login.route.action=login
```
- assemble用法
```
$application = Yaf\Application::app();
$router = $application->getDispatcher()->getRouter();
$url = $router->getRoute('login');
$url = $url->assemble(
            [
                ':m' => '',
                ':c' => 'user',
                ':a' => 'login'
            ],
            []
        );
echo $url;
```

错误：Error Msg:Reverse property is not a valid strin
How to createUrl base on the Router?

As you know we can set multi router rules, how can i createUrl base the router rule?
new Yaf_Route_Regex(
           "#/articles/([\d]+)#", 
           [
                'module'=>'index',
                'controller'=>'articles',
                'action'=>'view'
            ],
            [
                1=>'id'
            ],
            [],
            '/articles/:id/'
        )
以上是我配置的路由，我调用assemble([':id'=>123])后返回的是/articles/:id，请问是我创建路由的方法不正确吗？如何解决这个问题？
MySQL数据ORM框架，支持代理方式建立稳定数据库连接池， 使用文档可参考: https://github.com/caohao-php/ycdatabase   ， 仅支持 PHP7
```php
$config = array(
    "application" => array(
        "directory" => realpath(dirname(__FILE__)) . "/tests/",
    ),
);

$application = new Yaf_Application($config);
$dispatcher = $application->getDispatcher();
$request = $dispatcher->getRequest();

// 模拟请求，http://<host>/app/apple/buy
$request->setBaseUri('/app');
$request->setRequestUri('/Apple/buy');

$application->bootstrap()->run();
```

期待请求的是控制器Apple.php，实际上抛出异常
```
PHP Fatal error:  Uncaught Yaf_Exception_LoadFailed_Controller: 
Failed opening controller script /home/work/src/tests/controllers/Le.php:
                                                                  ^
```

我用的是默认的Static路由，请问从共同前缀之后（`!strncasecmp(Z_STRVAL_P(zuri), Z_STRVAL_P(base_uri), Z_STRLEN_P(base_uri))`）开始`zend_string_init()`一个字符串是出于什么考虑
```c
int yaf_route_static_route(yaf_route_t *route, yaf_request_t *request) /* {{{ */ {
	zval *zuri, *base_uri;
	zend_string *req_uri;

	zuri = zend_read_property(yaf_request_ce, request, ZEND_STRL(YAF_REQUEST_PROPERTY_NAME_URI), 1, NULL);
	base_uri = zend_read_property(yaf_request_ce, request, ZEND_STRL(YAF_REQUEST_PROPERTY_NAME_BASE), 1, NULL);

	if (base_uri && IS_STRING == Z_TYPE_P(base_uri)
			&& !strncasecmp(Z_STRVAL_P(zuri), Z_STRVAL_P(base_uri), Z_STRLEN_P(base_uri))) {
		req_uri = zend_string_init(Z_STRVAL_P(zuri) + Z_STRLEN_P(base_uri), Z_STRLEN_P(zuri) - Z_STRLEN_P(base_uri), 0);  // 这里是出于什么考虑
	} else {
		req_uri = zend_string_init(Z_STRVAL_P(zuri), Z_STRLEN_P(zuri), 0);
	}

        ...
}
```

Nginx作代理，上游为Apache的PHP module，PHP版本7.1.7，yaf框架版本3.0.7。
这个问题是在调接口过程中发生的，不是所有请求都会出现，但频率较高。
Nginx错误日志直接报上游无响应，此处略。
Apache错误日志：
![qq20181227-0](https://user-images.githubusercontent.com/23721125/50486057-fcf3f600-0a32-11e9-822c-fe8227f2c750.png)
使用gdb调试的backtrace：
<img width="1429" alt="wx20181227-232000 2x" src="https://user-images.githubusercontent.com/23721125/50504991-11280980-0aac-11e9-92f1-e9078bc49ee5.png">
代码上下文如下图所示。app变量是zval *类型。ZVAL_IS_NULL这个宏会去判断app所指向的zval结构体中的type字段是否为IS_NULL类型。但经过gdb打印，这里zend_read_static_property()方法的返回值（即app）地址为0x0，指向了一个无效地址。接下来去访问其所指向的内容一定是非法的。在方法内部，看起来是在声明一个zval *property的变量的时候没有成功，但是不清楚具体原因，想请教一下大家。
zend_read_static_property()方法的上下文：
![wx20181230-174824](https://user-images.githubusercontent.com/23721125/50546024-dc5ab480-0c5b-11e9-8015-e7d67c4638f5.png)
zend_read_static_property()方法内部调试：
![wx20181228-141907](https://user-images.githubusercontent.com/23721125/50504942-c6a68d00-0aab-11e9-8572-f87150a3492e.png)
zend_read_static_property()方法体：
![wx20181230-180021](https://user-images.githubusercontent.com/23721125/50546104-11b3d200-0c5d-11e9-994c-b3d7adb5063b.png)


