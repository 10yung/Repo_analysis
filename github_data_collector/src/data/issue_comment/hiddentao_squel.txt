I noticed old issues about performance concerns, and in profiling my own application, I also observed significant time spent within squel, particularly when creating lots of queries. While there are a few places that are unoptimized (all of the Object.getOwnPropertyNames can really bog stuff down), the biggest culprit that I personally noticed was using JSON.parse and JSON.stringify to clone the configs in the base builder constructor. This was taking much longer than actually fetching my queries from the database/cache. So, in this PR, I've refactored the default options to be a function returning an object instead of an object, and the dialect-specific classes override this with the appropriate options. 

Stylistically, it's definitely a bit uglier than just having an option, but I've found it to be a >2x speedup, so it's worth it to me. Feel free to suggest other ways of eliminating the costly parsing and stringification as well.
Bumps [knex](https://github.com/tgriesser/knex) from 0.14.6 to 0.19.5.
<details>
<summary>Changelog</summary>

*Sourced from [knex's changelog](https://github.com/knex/knex/blob/master/CHANGELOG.md).*

> # 0.19.5 - 06 October, 2019
> 
> ### New features:
> 
> - CLI: Migrations up/down commands - filename parameter [#3416](https://github-redirect.dependabot.com/tgriesser/knex/issues/3416)
> - Oracle: Support stored procedures [#3449](https://github-redirect.dependabot.com/tgriesser/knex/issues/3449)
> 
> ### Bug fixes:
> 
> - MSSQL: Escape column ids correctly in all cases (reported by Snyk Security Research Team) [#3382](https://github-redirect.dependabot.com/tgriesser/knex/issues/3382)
> - SQLite: Fix handling of multiline SQL in SQLite3 schema [#3411](https://github-redirect.dependabot.com/tgriesser/knex/issues/3411)
> - Fix concurrent child transactions failing [#2213](https://github-redirect.dependabot.com/tgriesser/knex/issues/2213) [#3440](https://github-redirect.dependabot.com/tgriesser/knex/issues/3440)
> 
> ### Typings:
> 
> - Add missing Migrator.list typing [#3460](https://github-redirect.dependabot.com/tgriesser/knex/issues/3460)
> - Fix Typescript type inference for to better support wildcard (*) calls [#3444](https://github-redirect.dependabot.com/tgriesser/knex/issues/3444)
> - Make options argument optional in timeout [#3442](https://github-redirect.dependabot.com/tgriesser/knex/issues/3442)
> 
> ### Test / internal changes:
> 
> - Enable linting in CI [#3450](https://github-redirect.dependabot.com/tgriesser/knex/issues/3450)
> 
> # 0.19.4 - 09 September, 2019
> 
> ### New features:
> 
> - Add undefined columns to undefined binding(s) error [#3425](https://github-redirect.dependabot.com/tgriesser/knex/issues/3425)
> 
> ### Typings:
> 
> - Add `specific` to SeederConfig type [#3429](https://github-redirect.dependabot.com/tgriesser/knex/issues/3429)
> - Fix some issues with QueryBuilder types [#3427](https://github-redirect.dependabot.com/tgriesser/knex/issues/3427)
> 
> # 0.19.3 - 25 August, 2019
> 
> ### Bug fixes:
> 
> - Fix migrations for native enums to use table schema [#3307](https://github-redirect.dependabot.com/tgriesser/knex/issues/3307)
> 
> ### New features:
> 
> - Add ability to manually define schema for native enums [#3307](https://github-redirect.dependabot.com/tgriesser/knex/issues/3307)
> - Add SSL/TLS support for Postgres connection string [#3410](https://github-redirect.dependabot.com/tgriesser/knex/issues/3410)
> - CLI: new command that lists all migrations with status [#3390](https://github-redirect.dependabot.com/tgriesser/knex/issues/3390)
> 
> ### Typings:
> 
> - Include schemaName in EnumOptions [#3415](https://github-redirect.dependabot.com/tgriesser/knex/issues/3415)
> - Allow `ColumnBuilder.defaultTo()` to be `null` [#3407](https://github-redirect.dependabot.com/tgriesser/knex/issues/3407)
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`48d8c7e`](https://github.com/knex/knex/commit/48d8c7eb59525df47812047f9a30e785f9883633) Prepare 0.19.5 release
- [`e112a21`](https://github.com/knex/knex/commit/e112a21597dcfbc72877edcdd62bad2606017f12) Remove unneeded logging
- [`78a7e9a`](https://github.com/knex/knex/commit/78a7e9aa4fe26523903f6bf726924fdc510fcb56) fix CLI tests fails caused by PR [#3416](https://github-redirect.dependabot.com/tgriesser/knex/issues/3416) ([#3466](https://github-redirect.dependabot.com/tgriesser/knex/issues/3466))
- [`988fb24`](https://github.com/knex/knex/commit/988fb243898d746a759d422762685a79eddf99ca) Fix MSSQL escaping ([#3382](https://github-redirect.dependabot.com/tgriesser/knex/issues/3382))
- [`516b074`](https://github.com/knex/knex/commit/516b0747901c1d3efb4097bb89f2f7bce7e7ba36) Enable linting in CI ([#3450](https://github-redirect.dependabot.com/tgriesser/knex/issues/3450))
- [`c1d2027`](https://github.com/knex/knex/commit/c1d20270d67515a83b60257dfb9139018f3f16ea) Fix handling of multiline SQL in SQLite3 schema ([#3411](https://github-redirect.dependabot.com/tgriesser/knex/issues/3411))
- [`53d8649`](https://github.com/knex/knex/commit/53d8649ef3cdbb6916ce5a2d42e9d77795f94e3b) Update test to accommodate for increased precision in PG 12 ([#3465](https://github-redirect.dependabot.com/tgriesser/knex/issues/3465))
- [`7fabae9`](https://github.com/knex/knex/commit/7fabae9f561653a5a9e31dc80844d1bc4c257e83) Migrations up/down commands: filename parameter ([#3416](https://github-redirect.dependabot.com/tgriesser/knex/issues/3416))
- [`fb095cb`](https://github.com/knex/knex/commit/fb095cb59c3f841a5833c5252d7ee7b5d3c5445d) Add missing Migrator.list typing ([#3460](https://github-redirect.dependabot.com/tgriesser/knex/issues/3460))
- [`b744564`](https://github.com/knex/knex/commit/b74456492c7163e02eb4353b5e44164445406519) Fix Typescript type inference for  to better support wildcard (*) calls [#3444](https://github-redirect.dependabot.com/tgriesser/knex/issues/3444)...
- Additional commits viewable in [compare view](https://github.com/tgriesser/knex/compare/0.14.6...0.19.5)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [kibertoad](https://www.npmjs.com/~kibertoad), a new releaser for knex since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=knex&package-manager=npm_and_yarn&previous-version=0.14.6&new-version=0.19.5)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/hiddentao/squel/network/alerts).

</details>
Explicitly push the options into the constructor rather than relying on parent to exist.  Cloning will not give the parameter but will rather populate parent after the fact.
How do I produce this query?

`SELECT 'john', 'wick'`
When you use mybtis in Java, mapping a class as a result map. 
Can I get the result value from an object for a particular field in the squel?

http://www.mybatis.org/mybatis-3/ko/sqlmap-xml.html#Result_Maps
I have functions which require a squel object. I have however written the SQL string myself without using this library.

Is there a way to insert the raw SQL string statement into a squel object?
If a table has a trigger in sql server, then execute update with **OUTPUT** will cause it to fail.

The error message is 
`RequestError: The target table 'tablename' of the DML statement cannot have any enabled triggers if the statement contains an OUTPUT clause without INTO clause.`

More information on this problem and the workaround here: 
https://github.com/sequelize/sequelize/issues/4807

https://stackoverflow.com/questions/13198476/cannot-use-update-with-output-clause-when-a-trigger-is-on-the-table

Does anyone have a solution?
Hi, can't figure out why I can't make a simple query.

```
let a = squel.select({ separator: '\n' })
            .from("dbo.Person", "p")
            .field("count(distinct p.personId)")
            .left_join("dbo.OrganizationDetail", "od", "od.OrganizationUniqueID = p.OrganizationUniqueID")
            .toString()
```

Output:
```
SELECT
count(distinct p.personId)
FROM dbo.Person `p`
LEFT JOIN dbo.OrganizationDetail `od` ON (od.OrganizationUniqueID = p.OrganizationUniqueID)
```

Error: RequestError: Incorrect syntax near '`'.

I see that the problem is under '`' sign, but why it formed like this? Could I somehow avoid these cross quotes?
After sql is genereted, code inside `if (options.numberedParameters)` replaces all `options.parameterCharacter` occurrences with named parameters, even if `options.parameterCharacter` is inside a string literal.

To reproduce this bug you can use the following code:
```javascript
const squel = require('squel').useFlavour('postgres');

let q = squel.update()
    .table('table')
    .set('a', '?');
console.log(q.toString());
```

Expected: `UPDATE table SET a = '?'`
Got: `UPDATE table SET a = '$1'`

Only after minimizing, when I try to do squel.select().from(...) I get an error that squel.select().from is undefined. When not minimized, the code works fine. Has anyone successfully minimized the code using webpack 4?