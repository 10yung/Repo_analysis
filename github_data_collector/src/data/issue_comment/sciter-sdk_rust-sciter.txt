Hello !

I've just build DOM example (https://github.com/sciter-sdk/rust-sciter/blob/master/examples/dom.rs) and run it, but all i see is blank white window.

I also tried to change from **load_file** to **load_html** to load site from memory( i've coppied html-code of site to minimal.htm)  :

```
let html = include_bytes!("minimal.htm");
frame.load_html(html, Some("example://minimal.htm")); 
```

And it worked fine. So it seems like rust-sciter cannot load internet web page.
Site is available, PC has internet connection. OS : ArchLinux

I also tried to run as root but no success.

![domexample](https://user-images.githubusercontent.com/56935743/69813900-35342380-1204-11ea-8c23-c072219d89ba.png)


windows blurbehind effect isn't working on windows 10. I'm trying add blur effect to my application windows, but itn't display it.
![image](https://user-images.githubusercontent.com/2277080/69598661-9f01d100-103c-11ea-94cc-d0bde673a214.png)

Hi there, I get some data from a specific api, pass them as string to sciter,  and update these data in sciter tables. In EventHandler, I write a function for doing this in a loop mode.
But memory leak occurred, memory usage would increase by about 0.1mb/sec.
Is this normal? If not, any idea how to fix it?
Thanks a lot.
Hi,

I'm trying out Sciter as a UI engine for my Rust app that runs on macOS.

I need a system menu, so I use `cocoa` crate to create a `NSApplication` and a `NSWindow`.

Unfortunately, I can't make `sciter::Window::attach` to work: it crashes every time I call it.

The code is pretty much as follows (menu creation is omitted):

```rust
use sciter;

use cocoa::base::nil;
use cocoa::foundation::NSAutoreleasePool;
use cocoa::appkit::{NSApplication, NSWindow};

fn main() {
    unsafe {
        let _pool = NSAutoreleasePool::new(nil);
    }

    let app = create_app();
    let window = add_window();

    let mut frame = sciter::Window::attach(window);
    frame.load_html(br#"<html><body>Hello world!</body></html>"#, Some("x:main"));

    unsafe {
        app.run();
    }
}

fn create_app() -> cocoa::base::id {
    unsafe {
        let app = cocoa::appkit::NSApp();
        app.setActivationPolicy_(cocoa::appkit::NSApplicationActivationPolicyRegular);
        app
    }
}

fn add_window() -> sciter::types::HWINDOW {
    unsafe {
        let window = NSWindow::alloc(nil).initWithContentRect_styleMask_backing_defer_(
            cocoa::foundation::NSRect::new(cocoa::foundation::NSPoint::new(0., 0.), cocoa::foundation::NSSize::new(300., 200.)),
            cocoa::appkit::NSWindowStyleMask::NSTitledWindowMask,
            cocoa::appkit::NSBackingStoreBuffered,
            cocoa::base::NO
        ).autorelease();
        window.center();
        window.makeKeyAndOrderFront_(nil);
        window.contentView() as _
    }
}
```

It doesn't matter if I try to pass `window` itself or `window.contentView()` - it still crashes on `sciter::Window::attach` line with the following message:

```rust
2019-08-29 16:03:10.938 sciter-app[28447:3486458] -[NSView engine]: unrecognized selector sent to instance 0x7ff96f830190
thread 'main' panicked at 'called `Option::unwrap()` on a `None` value', src/libcore/option.rs:347:21
```

Could you please help me to make it work? Thanks!
I recently updated my sciter-sdk and I am unable to connect to the inspector. My code is unchanged. I was previously able to connect to the inspector and now I am not able to. Unfortunately, I didn't take note of what version of the SDK I had previously, but it was a few months old I think.
EDIT: I should add that I am using Sciter version `4.2.7.5` on `Linux-5.0.5-200.fc29.x86_64`
As in #46.

This segfault can be easily reproduced by unzipping the minimal project I'm attaching, and typing `cargo run`.

This minimal application will display
```html
<html>
  <head>
    <title>Segfault when loading main.css and an anchor is present</title>
    <style src="main.css" />
  </head>
<body>
  <h1>Minimal Sciter Application</h1>
  <p><a href="any_url">Sciter SDK</a></p>
</body>
</html>
```

and the `main.css` file is send to Sciter using `on_data_load` in the `main.rs` file.

Oddly enough:

- when both
  ```html
  <style src="main.css" />
  ...
  <a href="any_url">Sciter SDK</a>
  ```
  lines are present, the segfault occurs ; but
- when either one is present, the program runs fine.

[segfault.zip](https://github.com/sciter-sdk/rust-sciter/files/3104842/segfault.zip)

Hi :)

Your screenshot link is misleading:
It leads to main Go implementation.
I run the following before creating my first Sciter window:
```
    sciter::set_options(sciter::RuntimeOptions::DebugMode(false)).unwrap();
    sciter::set_options(sciter::RuntimeOptions::ScriptFeatures(
        sciter::SCRIPT_RUNTIME_FEATURES::ALLOW_SOCKET_IO as u8,
    ))
    .unwrap();
```
I am still able to connect to the inspector even though I set `DebugMode(false)`.

I can provide a small example if desired.
Debug mode is required to connect to the inspector.