This PR should fix #4097

However, it seems that a lot of tests are written according to the incorrect implementtaion, this PR breaks a lot of tests.
This PR is related to #4949, and fixes an error in un-merged PR #4971 
**Describe the bug**
When I use MacOS to switch the system language to Traditional Chinese, the language of the plugin package is garbled

**Desktop (please complete the following information):**
 - OS: MacOS Mojave 10.14.6
 - Browser Chrome 
 - Version 79.0.3945.117


Please run the following code in your environment and include the output:
```
moment.js:4988 Uncaught SyntaxError: Invalid regular expression: missing /
```


**Describe the bug**
Everytime when I run this script for April it returns 29 but should be returned 30. But any other months are retuning right value. 

var startDate = moment('2020-04-01T00:00:00.000Z', 'YYYY-MM-DDTHH:mm:ss.SSSSZ');
var endDate = moment('2020-04-30T00:00:00.000Z', 'YYYY-MM-DDTHH:mm:ss.SSSSZ');
var diff = endDate.diff(startDate, 'days') + 1;
alert(diff);

**Same value return without the format. (29)**
var startDate = moment('2020-04-01T00:00:00.000Z');
var endDate = moment('2020-04-30T00:00:00.000Z');
var diff = endDate.diff(startDate, 'days') + 1;
alert(diff);

**To Reproduce**
Steps to reproduce the behavior:
1. Run the script 
2. Check the number of days.


**Expected behavior**
should return 30.



**Moment-specific environment**

* The time zone setting of the machine the code is running on
* The time and date at which the code was run
* Other libraries in use (TypeScript, Immutable.js, etc)

Please run the following code in your environment and include the output:
```
var startDate = moment('2020-04-01T00:00:00.000Z', 'YYYY-MM-DDTHH:mm:ss.SSSSZ');
var endDate = moment('2020-04-30T00:00:00.000Z', 'YYYY-MM-DDTHH:mm:ss.SSSSZ');
var total = endDate.diff(startDate, 'days') + 1;
alert(startDate + " " + endDate + " " + total);
```


@torniker Please have a look at it

"აგვისტს" is incorrect, suppose to be "აგვისტოს"
**Describe the bug**
To see the problem, set your locale to moment.locale('zh_TW').
Then moment format a date with
moment().format('DDD MMM')

instead of getting:
7日1月
You get
7 1月
Which is incorrect according to our testers

**Moment-specific environment**
Trying to test in zh_TW
* The time zone setting of the machine the code is running on
* The time and date at which the code was run
* Other libraries in use (TypeScript, Immutable.js, etc)

Please run the following code in your environment and include the output:
```
console.log((new Date()).toString())
console.log((new Date()).toLocaleString())
console.log((new Date()).getTimezoneOffset())
console.log(navigator.userAgent)
console.log(moment.version)
```
Wed Jan 15 2020 14:50:54 GMT-0600 (Central Standard Time)
1/15/2020, 2:50:54 PM
360
Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_1) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.88 Safari/537.36
2.24.0

**Additional context**
Add any other context about the problem here.

**Describe the bug**

Creating a list of months since 1919-08-31 23:59:59.999 adding X months to the initial date, I'm getting: 

```
1920-01-31 23:59:59 999
1920-03-01 00:59:59 999
1920-03-31 23:59:59 999
```

The same happens  to 1921 

**To Reproduce**

```
const moment = require('moment');
const initDate = moment('1919-08-31 23:59:59.999');
for (let i=0; i < 1210; i++) {
    const newDate = moment(initDate).add(i, 'months');
    console.log(newDate.format('YYYY-MM-DD HH:mm:ss SSS'));
}
```

Result: 

```
1919-08-31 23:59:59 999
1919-08-31 23:59:59 999
1919-09-30 23:59:59 999
1919-10-31 23:59:59 999
1919-11-30 23:59:59 999
1919-12-31 23:59:59 999
1920-01-31 23:59:59 999
1920-03-01 00:59:59 999
1920-03-31 23:59:59 999
1920-04-30 23:59:59 999
1920-05-31 23:59:59 999
1920-06-30 23:59:59 999
1920-07-31 23:59:59 999
1920-08-31 23:59:59 999
1920-09-30 23:59:59 999
1920-10-31 23:59:59 999
1920-11-30 23:59:59 999
1920-12-31 23:59:59 999
1921-01-31 23:59:59 999
1921-03-01 00:59:59 999
1921-03-31 23:59:59 999
1921-04-30 23:59:59 999
1921-05-31 23:59:59 999
1921-06-30 23:59:59 999
1921-07-31 23:59:59 999
1921-08-31 23:59:59 999
1921-09-30 23:59:59 999
1921-10-31 23:59:59 999
1921-11-30 23:59:59 999
1921-12-31 23:59:59 999
1922-01-31 23:59:59 999
1922-02-28 23:59:59 999
1922-03-31 23:59:59 999
1922-04-30 23:59:59 999
1922-05-31 23:59:59 999
1922-06-30 23:59:59 999
1922-07-31 23:59:59 999
1922-08-31 23:59:59 999
1922-09-30 23:59:59 999
1922-10-31 23:59:59 999
1922-11-30 23:59:59 999
1922-12-31 23:59:59 999
```


**Desktop (please complete the following information):**
 - OS: [OSX]
 - Browser [chrome] and  [node]
 - Version [79.x] - Node `10.15.3`

**Moment-specific environment**

Please run the following code in your environment and include the output:
```
Wed Jan 15 2020 20:05:22 GMT+0000 (Western European Standard Time)
1/15/2020, 8:05:22 PM
... 
2.24.0
```


**Describe the bug**
While setting the moment.calendarFormat function, typescript compiler throwing "error TS2540: Cannot assign to 'calendarFormat' because it is a read-only property."

**Code used**
`moment.calendarFormat = function(myMoment) {
      const diff = myMoment.diff(moment(Date()), 'minutes', true) * -1;
      const retVal =
        diff < 30
          ? 'now'
          : diff < 1440
          ? 'sameDay'
          : diff < 2880
          ? 'lastDay'
          : 'sameElse';
      return retVal;
    };`

**Expected behavior**
The compiler should not throw any error while assigning the function

**Environment**
typescript: 3.5.3
moment: 2.24.0

**Locale used*
en-gb


```
Tue Jan 14 2020 20:37:32 GMT+0530 (India Standard Time)
1/14/2020, 8:37:53 PM
-330
Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/79.0.3945.117 Safari/537.36
```


`moment.subtract({days: 180})` correctly accounts for daylight savings time in the resulting object. `moment.subtract(15552000000)` does not account for daylight savings time, so it is off by an hour.

It is my understanding that manipulating moment objects and durations is based on the number of milliseconds, so I thought these two statements should be equivalent. Please close this issue if it is a duplicate or a misunderstanding on my part.

```
        const today = 1594229625926; // Jan 10, 2020
        expect(moment(today).valueOf()).toBe(today);
        const msIn1Hour = 3600000;
        const msIn1Day = msIn1Hour * 24;
        const msIn180Days = msIn1Day * 180;
        expect(msIn180Days).toBe(15552000000);

        const days1 = {days: 180}; // object
        const days2 = newDuration(days1).asMilliseconds(); // number
        expect(days2).toBe(msIn180Days);
        const days3 = {days: 360};
        const days4 = newDuration(days3).asMilliseconds();

        // -- minus --
        const todayMinus180Literal = today - msIn180Days;
        expect(todayMinus180Literal).toBe(1578677625926);

        const todayMinus180 = todayMinus180Literal + msIn1Hour;
        expect(todayMinus180).toBe(1578681225926);

        const todayMinus180Minus180 = todayMinus180 - msIn180Days - msIn1Hour;
        expect(todayMinus180Minus180).toBe(1563125625926);

        const todayMinus360 = today - msIn180Days - msIn180Days;
        expect(todayMinus360).toBe(1563125625926);

        // -- plus --
        const todayPlus180Literal = today + msIn180Days;
        expect(todayPlus180Literal).toBe(1609781625926);

        const todayPlus180 = todayPlus180Literal + msIn1Hour;
        expect(todayPlus180).toBe(1609785225926);

        const todayPlus180Plus180 = todayPlus180 + msIn180Days - msIn1Hour;
        expect(todayPlus180Plus180).toBe(1625333625926);

        const todayPlus360 = today + msIn180Days + msIn180Days;
        expect(todayPlus360).toBe(1625333625926);

        // -- subtract --
        expect(moment(today).subtract(days1).valueOf()).toBe(moment(today).subtract(days2).valueOf()); // **bug?** (the values SHOULD be equal)

        expect(moment(today).subtract(days1).valueOf()).toBe(todayMinus180); // this passes, the input is an object
        expect(moment(today).subtract(days1).valueOf()).not.toBe(todayMinus180Literal); // this passes, the input is an object
        expect(moment(today).subtract(days2).valueOf()).toBe(todayMinus180); // **bug?** this fails, the input is a number
        expect(moment(today).subtract(days2).valueOf()).not.toBe(todayMinus180Literal); // **bug?** this fails, the input is a number

        expect(moment(todayMinus180).subtract(days1).valueOf()).toBe(todayMinus180Minus180); // this passes, the input is an object
        expect(moment(todayMinus180).subtract(days1).valueOf()).not.toBe(todayMinus180 - msIn180Days);  // this passes, the input is an object
        expect(moment(todayMinus180).subtract(days2).valueOf()).toBe(todayMinus180Minus180); // **bug?** this fails, the input is a number
        expect(moment(todayMinus180).subtract(days2).valueOf()).not.toBe(todayMinus180 - msIn180Days); // **bug?** this fails, the input is a number

        expect(moment(today).subtract(days3).valueOf()).toBe(todayMinus360); // this passes, the input is an object
        expect(moment(today).subtract(days4).valueOf()).toBe(todayMinus360); // this passes with input as number because DST matches for new date and old date

        // -- add --
        expect(moment(today).add(days1).valueOf()).toBe(moment(today).add(days2).valueOf()); // **bug?** the values SHOULD be equal

        expect(moment(today).add(days1).valueOf()).toBe(todayPlus180);
        expect(moment(today).add(days2).valueOf()).toBe(todayPlus180); // **bug?** this fails, the input is a number

        expect(moment(todayPlus180).add(days1).valueOf()).toBe(todayPlus180Plus180); // this passes, the input is an object
        expect(moment(todayPlus180).add(days2).valueOf()).toBe(todayPlus180Plus180); // **bug?** this fails, the input is a number

        expect(moment(today).add(days3).valueOf()).toBe(todayPlus360); // this passes, the input is an object
        expect(moment(today).add(days4).valueOf()).toBe(todayPlus360); // this passes with input as number because DST matches for new date and old date
```
**Describe the bug**
I loaded a page yesterday but did not close it. Today, I clicked a button on that page to use moment to get the date of today,  it got the date of yesterday