Bumps [ws](https://github.com/websockets/ws) from 2.2.0 to 7.2.0.
<details>
<summary>Release notes</summary>

*Sourced from [ws's releases](https://github.com/websockets/ws/releases).*

> ## 7.2.0
> # Features
> 
> - Added ability to specify the `readableObjectMode` option when using
>   `WebSocket.createWebSocketStream()` ([#1647](https://github-redirect.dependabot.com/websockets/ws/issues/1647)).
> 
> ## 7.1.2
> # Bug fixes
> 
> - Fixed a bug that caused compress jobs to never be marked as complete
>   ([#1618](https://github-redirect.dependabot.com/websockets/ws/issues/1618)).
> 
> ## 7.1.1
> # Bug fixes
> 
> - An error is now thrown if the `WebSocket` server constructor is used
>   incorrectly (36412662).
> 
> ## 7.1.0
> # Features
> 
> - Added utility to wrap a `WebSocket` in a `Duplex` stream ([#1589](https://github-redirect.dependabot.com/websockets/ws/issues/1589)).
> 
> # Bug fixes
> 
> - Reverted "[minor] Remove unneeded `if` statement" (dbacf582, [#1591](https://github-redirect.dependabot.com/websockets/ws/issues/1591)).
> 
> ## 7.0.1
> # Bug fixes
> 
> - Added ability to disable sending the SNI extension ([#1587](https://github-redirect.dependabot.com/websockets/ws/issues/1587)).
> 
> ## 7.0.0
> # Breaking changes
> 
> - Dropped support for Node.js 6 (1e6999bb).
> - Dropped support for `url.Url` instances in the `WebSocket` constructor
>   (692d7b47).
> - The behavior of `WebSocket#{p{i,o}ng,send}()` has changed when the
>   `readyState` attribute is not `OPEN` ([#1532](https://github-redirect.dependabot.com/websockets/ws/issues/1532))
>   - If the readyState attribute is `CONNECTING`, an exception is thrown.
>   - If the readyState attribute is `CLOSING` or `CLOSED`
>     - The `bufferedAmount` attribute is increased by the length of the `data`
>       argument in bytes.
>     - If provided, the `callback` function is called with an error.
>     - No exception is thrown even if the `callback` function is not provided.
> 
> ## 6.2.1
> # Bug fixes
> 
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`65f7800`](https://github.com/websockets/ws/commit/65f7800d4ed5d6f2076b5bd00b3c4cabfa4d22ef) [dist] 7.2.0
- [`54e3011`](https://github.com/websockets/ws/commit/54e301199386e328d56dcfe7358417b7f6d4de91) [doc] Fix Travis CI URL
- [`a6c4238`](https://github.com/websockets/ws/commit/a6c42383d6506f0348036aedc4de311b03160445) [example] Close the WebSocket connection on logout
- [`2b7d84d`](https://github.com/websockets/ws/commit/2b7d84d002623d3b4b2bd0c2e9483db1a36c0ad1) [minor] Add ability to specify the `readableObjectMode` option ([#1647](https://github-redirect.dependabot.com/websockets/ws/issues/1647))
- [`96d8c8f`](https://github.com/websockets/ws/commit/96d8c8fde3b9d533038a4283fdd72c47e4a8d499) [test] Increase timeout for failing tests on Windows
- [`08c6c8b`](https://github.com/websockets/ws/commit/08c6c8ba70404818f7f4bc23eb5fd0bf9c94c039) [fix] Ensure that `concat()` never returns uninitialized data ([#1600](https://github-redirect.dependabot.com/websockets/ws/issues/1600))
- [`5b7315f`](https://github.com/websockets/ws/commit/5b7315fa15385efa909224258ec4165bb3e842bd) [perf] Use `TypedArray#set()` instead of `Buffer#copy()`
- [`74bac8e`](https://github.com/websockets/ws/commit/74bac8e592ff5dbbdda1190d1d4b209c504979d4) [dist] 7.1.2
- [`3a695e8`](https://github.com/websockets/ws/commit/3a695e8144e6ebc86087cac559c54098d205c9f5) [fix] Ensure `_compress()` callback is always called ([#1618](https://github-redirect.dependabot.com/websockets/ws/issues/1618))
- [`fa99173`](https://github.com/websockets/ws/commit/fa991731cca990f40ecedb120918d14d08129673) [doc] Fix nits
- Additional commits viewable in [compare view](https://github.com/websockets/ws/compare/2.2.0...7.2.0)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=ws&package-manager=npm_and_yarn&previous-version=2.2.0&new-version=7.2.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/Ameobea/tickgrinder/network/alerts).

</details>
 Compiling tickgrinder-util v0.1.0 (/home/rustmann/RustProjects/tickgrinder/util)
error[E0583]: file not found for module `conf`
  --> src/lib.rs:27:9
   |
27 | pub mod conf;
   |         ^^^^
   |
   = help: name the file either conf.rs or conf/mod.rs inside the directory "src"

error: aborting due to previous error

For more information about this error, try `rustc --explain E0583`.
error: Could not compile `tickgrinder-util`.

To learn more, run the command again with --verbose.
Makefile:171: recipe for target 'test' failed
make: *** [test] Error 101

```
$ make test
# copy libstd to the dist/lib directory if it's not already there
if [[ ! -f dist/lib/$(find $(rustc --print sysroot)/lib | grep -E "libstd-.*\.so" | head -1) ]]; then \
	cp $(find $(rustc --print sysroot)/lib | grep -E "libstd-.*\.so" | head -1) dist/lib; \
fi;
cd configurator && LD_LIBRARY_PATH="../../dist/lib" RUSTFLAGS="-L ../../util/target/debug/deps -L ../../dist/lib -C prefer-dynamic" cargo test --no-fail-fast
   Compiling bit-set v0.4.0
   Compiling cursive v0.6.4
   Compiling toml v0.4.5
   Compiling rand v0.3.19
   Compiling termion v1.5.1
   Compiling num-integer v0.1.35
   Compiling serde_json v0.8.6
   Compiling num-complex v0.1.41
   Compiling indoc v0.1.15
   Compiling num-iter v0.1.34
   Compiling num-bigint v0.1.41
   Compiling chan v0.1.19
error[E0061]: this function takes 2 parameters but 1 parameter was supplied
  --> /home/caio/.cargo/registry/src/github.com-1ecc6299db9ec823/indoc-0.1.15/src/lib.rs:87:30
   |
87 |             let unindented = parse::str_lit(&unindent(&name.as_str()));
   |                              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected 2 parameters

error: aborting due to previous error

error: Could not compile `indoc`.
warning: build failed, waiting for other jobs to finish...
error: build failed
make: *** [Makefile:173: test] Error 101
```

Probably related to https://github.com/dtolnay/indoc/issues/10
Since I do most of my development on mac these days, it will be very helpful to be able to build and run the platform on it.  In addition, many people use mac and being able to have it install there without having to go through extra hassle is a great bonus.

In the future, I'd like to get it building on Windows as well, but as I don't really have a way to test that (and it's not a priority for me right now) that will have to wait for another time.
Users should be able to set up and run the entire platform through Docker.  This will be useful for the continuous integration and will make things like automatic deployments much easier as well.
Currently, the log viewer in the MM is a very simple implementation, simply listening to messages arriving over the wire and adding them to the log table.

I'd love to implement a `react-virtualized` approach with an infinitely-scrolling list that's populated from the PostgreSQL server.  I honestly can't remember very well just how far along it was in development, but it should also have full support for sorting, filtering, etc.
This project could really benefit from some kind of CI that automatically builds the platform in its entirety and runs the full battery of tests.  This will require a significant amount of effort but will probably be worth it in the long run.

The first step should be to get all of the tests to pass successfully.  Tests involving functionality that no longer exists or must be changed significantly should be removed or disabled until such a time as they can be re-implemented correctly.

Ideally, an automatic deployment system such as now.sh would be set up as well with a full demo version of the platform, but this isn't necessarily in the scope of this issue.
All dependencies in use by the platform should be updated to their latest versions.  The goal is to peg the entire platform to one version of Rust nightly which can then be incrementally updated as development continues.