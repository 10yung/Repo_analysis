
![image](https://user-images.githubusercontent.com/16833275/58316473-3562f900-7e46-11e9-972f-d86ef01ebf25.png)

How can I solve this problem?


I download version is 4.0.6
when I input '$ ./configure CXXFLAGS=-I/usr/local/include LDFLAGS=-L/usr/local/lib
' or '$ ./configure CXXFLAGS=-I/usr/local/include LDFLAGS=-L/usr/local/lib64'
checking build system type... x86_64-apple-darwin18.5.0
checking host system type... x86_64-apple-darwin18.5.0
checking target system type... x86_64-apple-darwin18.5.0
checking for a BSD-compatible install... /usr/local/bin/ginstall -c
checking whether build environment is sane... yes
checking for a thread-safe mkdir -p... /usr/local/bin/gmkdir -p
checking for gawk... no
checking for mawk... no
checking for nawk... no
checking for awk... awk
checking whether make sets $(MAKE)... yes
checking whether make supports nested variables... yes
checking for gcc... gcc
checking whether the C compiler works... yes
checking for C compiler default output file name... a.out
checking for suffix of executables... 
checking whether we are cross compiling... no
checking for suffix of object files... o
checking whether we are using the GNU C compiler... yes
checking whether gcc accepts -g... yes
checking for gcc option to accept ISO C89... none needed
checking whether gcc understands -c and -o together... yes
checking whether make supports the include directive... yes (GNU style)
checking dependency style of gcc... gcc3
checking for g++... g++
checking whether we are using the GNU C++ compiler... yes
checking whether g++ accepts -g... yes
checking dependency style of g++... gcc3
checking C++ compiler flags...... use user-supplied: -I/usr/local/include
checking how to print strings... printf
checking for a sed that does not truncate output... /usr/bin/sed
checking for grep that handles long lines and -e... /usr/bin/grep
checking for egrep... /usr/bin/grep -E
checking for fgrep... /usr/bin/grep -F
checking for ld used by gcc... /Library/Developer/CommandLineTools/usr/bin/ld
checking if the linker (/Library/Developer/CommandLineTools/usr/bin/ld) is GNU ld... no
checking for BSD- or MS-compatible name lister (nm)... /usr/bin/nm -B
checking the name lister (/usr/bin/nm -B) interface... BSD nm
checking whether ln -s works... yes
checking the maximum length of command line arguments... 196608
checking how to convert x86_64-apple-darwin18.5.0 file names to x86_64-apple-darwin18.5.0 format... func_convert_file_noop
checking how to convert x86_64-apple-darwin18.5.0 file names to toolchain format... func_convert_file_noop
checking for /Library/Developer/CommandLineTools/usr/bin/ld option to reload object files... -r
checking for objdump... objdump
checking how to recognize dependent libraries... pass_all
checking for dlltool... no
checking how to associate runtime and link libraries... printf %s\n
checking for ar... ar
checking for archiver @FILE support... no
checking for strip... strip
checking for ranlib... ranlib
checking command to parse /usr/bin/nm -B output from gcc object... ok
checking for sysroot... no
checking for a working dd... /bin/dd
checking how to truncate binary pipes... /bin/dd bs=4096 count=1
checking for mt... no
checking if : is a manifest tool... no
checking for dsymutil... dsymutil
checking for nmedit... nmedit
checking for lipo... lipo
checking for otool... otool
checking for otool64... no
checking for -single_module linker flag... yes
checking for -exported_symbols_list linker flag... yes
checking for -force_load linker flag... yes
checking how to run the C preprocessor... gcc -E
checking for ANSI C header files... yes
checking for sys/types.h... yes
checking for sys/stat.h... yes
checking for stdlib.h... yes
checking for string.h... yes
checking for memory.h... yes
checking for strings.h... yes
checking for inttypes.h... yes
checking for stdint.h... yes
checking for unistd.h... yes
checking for dlfcn.h... yes
checking for objdir... .libs
checking if gcc supports -fno-rtti -fno-exceptions... yes
checking for gcc option to produce PIC... -fno-common -DPIC
checking if gcc PIC flag -fno-common -DPIC works... yes
checking if gcc static flag -static works... no
checking if gcc supports -c -o file.o... yes
checking if gcc supports -c -o file.o... (cached) yes
checking whether the gcc linker (/Library/Developer/CommandLineTools/usr/bin/ld) supports shared libraries... yes
checking dynamic linker characteristics... darwin18.5.0 dyld
checking how to hardcode library paths into programs... immediate
checking whether stripping libraries is possible... yes
checking if libtool supports shared libraries... yes
checking whether to build shared libraries... yes
checking whether to build static libraries... yes
checking how to run the C++ preprocessor... g++ -E
checking for ld used by g++... /Library/Developer/CommandLineTools/usr/bin/ld
checking if the linker (/Library/Developer/CommandLineTools/usr/bin/ld) is GNU ld... no
checking whether the g++ linker (/Library/Developer/CommandLineTools/usr/bin/ld) supports shared libraries... yes
checking for g++ option to produce PIC... -fno-common -DPIC
checking if g++ PIC flag -fno-common -DPIC works... yes
checking if g++ static flag -static works... no
checking if g++ supports -c -o file.o... yes
checking if g++ supports -c -o file.o... (cached) yes
checking whether the g++ linker (/Library/Developer/CommandLineTools/usr/bin/ld) supports shared libraries... yes
checking dynamic linker characteristics... darwin18.5.0 dyld
checking how to hardcode library paths into programs... immediate
checking for ANSI C header files... (cached) yes
checking fcntl.h usability... yes
checking fcntl.h presence... yes
checking for fcntl.h... yes
checking for inttypes.h... (cached) yes
checking limits.h usability... yes
checking limits.h presence... yes
checking for limits.h... yes
checking for stdlib.h... (cached) yes
checking for unistd.h... (cached) yes
checking for working memcmp... yes
checking for working strtod... yes
checking for ftruncate... yes
checking for memset... yes
checking for mkdir... yes
checking for strchr... yes
checking for strerror... yes
checking for strtol... yes
checking google/protobuf/stubs/common.h usability... no
checking google/protobuf/stubs/common.h presence... yes
configure: WARNING: google/protobuf/stubs/common.h: present but cannot be compiled
configure: WARNING: google/protobuf/stubs/common.h:     check for missing prerequisite headers?
configure: WARNING: google/protobuf/stubs/common.h: see the Autoconf documentation
configure: WARNING: google/protobuf/stubs/common.h:     section "Present But Cannot Be Compiled"
configure: WARNING: google/protobuf/stubs/common.h: proceeding with the compiler's result
configure: WARNING:     ## --------------------------------- ##
configure: WARNING:     ## Report this to alexeyxo.gmail.com ##
configure: WARNING:     ## --------------------------------- ##
checking for google/protobuf/stubs/common.h... no
configure: error: 
ERROR: protobuf headers are required.

You must either install protobuf from google,
or if you have it installed in a custom location
you must add '-Iincludedir' to CXXFLAGS
and '-Llibdir' to LDFLAGS.

If you did not specify a prefix when installing
protobuf, try
  './configure CXXFLAGS=-I/usr/local/include LDFLAGS=-L/usr/local/lib -std=c++11'
In some 64-bit environments, try LDFLAGS=-L/usr/local/lib64.


What can I do next?

I am setting up protocal buffer in my mac(10.14.4) I step by step according to the readme When I input ./scripts/build.sh in the terminal and it tells me: ERROR: protobuf test program failed to link: perhaps you need to add -Llibdir to your LDFLAGS.

what should I do? what is mean "add -Llibdir to your LDFLAGS" and how to fix it?

#### Description
#### Version of protoc (`protoc --version`)
###### libprotoc 3.6.1
#### Version of ProtocolBuffers.framework
###### Protobuf-swift version: 4.0
#### Description

 Here is an enum in my proto file 

enum battery_status {
	STARTED               = 0;
	STOPED                = 1;
	ABSENT                = 2;
}

To send it back in JSON, I use battery_status.encode() 

I get : 

["status": "ABSENT"]

Is there a way that the dictionary outputted uses raw value ? 

What I want is to get : 

["status":2]

Thanks

#### Version of protoc (```protoc --version```)
###### libprotoc 3.6.1

#### Version of ProtocolBuffers.framework
###### Protobuf-swift version: 4.0

#### Description
How can I make the objects conform to Codable ?

Thanks for helping


#### Version of protoc (```protoc --version```)
###### libprotoc 3.6.1

#### Version of ProtocolBuffers.framework
###### 4.0.6

#### ```.proto``` file to reproduce
```protobuf

syntax = "proto3";

import "blerpc.proto";
import "swift-descriptor.proto";

message GetBatteryLevelRequest {
}

// Response message for the ReadBatteryLevel and GetBatteryUpdates methods.
message GetBatteryLevelResponse {
    option (com.blerpc.message) = {
        size_bytes: 1
    };
    // Current device battery level percent.
    int32 battery_level_percent = 1 [(com.blerpc.field) = {
        from_byte: 0
        to_byte: 1
    }];
}
```

#### Description
So how can I access to extended properties `from_byte` and `to_byte` for each (in this example `battery_level_percent`) field? Also how can I access to `size_bytes` of message GetBatteryLevelResponse? I need this to write custom data parser (we already have Android version working with this format). com.blerpc.field described as:
```
syntax = "proto3";

import "google/protobuf/descriptor.proto";

// A description of a message for automatic converter.
message MessageExtension {
  // Message size in bytes.
  int32 size_bytes = 1;
  // Byte order for the message.
  // Default byte order for the message is BIG_ENDIAN.
  ByteOrder byte_order = 2;
}

// A description of a field for automatic converter.
message FieldExtension {
  // The number of the first byte within a message for a field.
  int32 from_byte = 1;
  // The number of the last byte within a message for a field.
  // This bound is excluded, i.e. {from = 3, to = 5} describes a two-byte field.
  int32 to_byte = 2;
  // Byte order for the field.
  // Default byte order for the field is BIG_ENDIAN.
  ByteOrder byte_order = 3;
}

// Byte order type of message or field converted to bytes.
enum ByteOrder {
  // Default byte order that sets when creating com.blerpc.AnnotationMessageConverter.
  DEFAULT = 0;
  // Big endian byte order. Short number "50" is converted into 2 bytes {0, 50}.
  // This is a default byte order.
  BIG_ENDIAN = 1;
  // Little endian byte order. Short number "50" is converter into 2 bytes {50, 0}".
  LITTLE_ENDIAN = 2;
}

// Allow annotating fields with com.blerpc.field annotation to specify parameters for automatic converter.
extend google.protobuf.FieldOptions {
  FieldExtension field = 82595722;
}

// Allow annotating messages with com.blerpc.message annotation to specify parameters for automatic converter.
extend google.protobuf.MessageOptions {
  MessageExtension message = 82595723;
}

```

What I need to do:
1) Receive raw data from BLE device
2) Parse it in custom format based on information from `from_byte`, `to_byte` and `size_bytes` (I need this info before parsing). I need something like this: 

`
let emptyMessage = GetBatteryLevelResponse()
let fromByte = emptyMessage.battery_level_percent.from_byte
`

So I need to check received data that it is the same as `size_bytes` described in message, then parse each properties (I think I must have something like GetBatteryLevelResponse.getAllFields) based on `from_byte` and to `to_byte`

Any options? Thank you!
#### Version of protoc (```protoc --version```)
###### 3.0

#### Version of ProtocolBuffers.framework
###### 3.0.0

#### ```.proto``` file to reproduce
```protobuf

```

#### Description
terminal input "protobuf test program failed to link:
perhaps you need to add -Llibdir to your LDFLAGS." when i building -> ./scripts/build.sh
How to fix it? 

#### Version of protoc (```protoc --version```)
###### 3.6.1

#### Version of ProtocolBuffers.framework
###### 4.0.6

#### ```.proto``` file to reproduce
```protobuf
syntax = "proto3";

message accl {
  double x = 1;
  double y = 2;
  double z = 3;
}

message gyro {
  double x = 1;
  double y = 2;
  double z = 3;
}

message magn {
  double x = 1;
  double y = 2;
  double z = 3;
}

message raw_data_item {
  oneof data {
  	accl accl = 1;
    gyro gyro =2;
  	magn magn = 3;
  }
  uint32 timestamp = 5;
}
```

#### Description

I have several build time error (in Xcode 10)

![capture d ecran 2018-11-14 a 16 03 09](https://user-images.githubusercontent.com/31652880/48490996-de40f380-e826-11e8-80c9-c30dfec6de79.png)

… uploading to the App Store/Testflight.  Fixes #234.
#### Version of protoc (```protoc --version```)
###### 3.0

#### Version of ProtocolBuffers.framework
###### 3.0.0

#### Description
I have notice there google/protoc for Object-C have add a function call `- (NSData *)delimitedData`, it's really fit my situation because I use socket send Data without OutputStream, so with `- (NSData *)delimitedData` I can get a Data that specify size, just write to socket, then our server can deserialize correct. 

i hope here can support that function, it'll be very useful, just a advice.