### Your environment

- `vscode-ruby` version: 0.26.0
- Ruby version: 2.6.5
- Ruby version manager (if any): asdf
- VS Code version: 1.41.1
- Operating System: Fedora
- Using language server? (eg `useLanguageServer` is true?) yes

### Expected behavior

Linting code calls `${ruby.pathToBundler} exec rubocop …` when `ruby.useBundler` is set to true. 

### Actual behavior

Linting code calls `bundle exec rubocop …` when `ruby.useBundler` is set to true.

Output in console:

```
Lint: executing bundle exec rubocop -s /home/user/projects/…/file.rb -f json...
```

The same is happening when formatting code, but this is already being fixed in https://github.com/rubyide/vscode-ruby/pull/576.
I would like rubcop, invoked from Vscode to reformat lines that are too long.

I've tried Layout/LineLength which reports it as a problem but doesn't reformat.
I've tried Metrics/LineLength and I get an error that this name space is wrong and it should be Layout
I've tried command/shift/p ruby:autocorrect by rubocop and it doesn't fix the line
I've tried command/shift/p ruby:lint by rubocop and it doesn't fix the line

In the "problems" I get "Line too Long [87/8-. (convention:Layout/LineLength) for each line that is too long.

I have the latest version of the rubpocop gem, and vscode. I am running the ruby, ruby-robocop vscode extensions.
### Your environment

- `vscode-ruby` version: 0.26.0
- Ruby version: 2.6.5
- Ruby version manager (if any): rbenv
- VS Code version: 1.41.1
- Operating System: Linux Fedora
- Using language server? yes

In many places, coloring for the last variable of an expression is malformed. I can't remember all the cases, but I often run into those cases.

For example, with a simple `if` statement and 2 or 3 variables:
![image](https://user-images.githubusercontent.com/37897072/71897040-a77a1b00-3155-11ea-9f38-b01451d8ec8b.png)


Is there something wrong with my theme, or is it an issue with the language server?
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/rubyide/vscode-ruby/network/alerts).

</details>
Expecting the formatter of the language server to respect the setting.

- [x] The build passes
- [x] TSLint is mostly happy
- [x] Prettier has been run
Passes an `--stdin-filename` argument to Reek when linting files.

This gives Reek context about the piped contents and supports using the [`directories` configuration](https://github.com/troessner/reek#working-with-rails). 

Caveat:
Because this change sends the absolute path to the file, the configuration in directories must be prefixed with `**` for it to work. e.g.
```yml
directories:
  '**/app/controllers':
    IrresponsibleModule:
      enabled: false
```
### Your environment

- `vscode-ruby` version: 0.26.0
- Ruby version: 2.6.5
- Ruby version manager (if any): none
- VS Code version: 1.14.1
- Operating System: MacOS Catalina
- Using language server? (eg `useLanguageServer` is true?) Yes

### Expected behavior

"bundle exec rubocop" runs rubocop.

### Actual behavior

Bundle exec fails to find the rubocop gem. I think this is because BUNDLE_PATH is not whitelisted in `vscode-ruby-common/src/environment.ts`. We override in our app BUNDLE_PATH. If I unset BUNDLE_PATH in the terminal, I get the exact same error as the Language Server gets.

<img width="944" alt="Screen Shot 2019-12-24 at 12 57 11 AM" src="https://user-images.githubusercontent.com/75490/71399203-86a7b680-25e8-11ea-9ce9-0385a1736753.png">
<img width="573" alt="Screen Shot 2019-12-24 at 12 57 37 AM" src="https://user-images.githubusercontent.com/75490/71399217-8e675b00-25e8-11ea-9d2f-c224becb1e3a.png">
<img width="381" alt="Screen Shot 2019-12-24 at 12 58 02 AM" src="https://user-images.githubusercontent.com/75490/71399226-932c0f00-25e8-11ea-9076-e417d622c3ef.png">
<img width="406" alt="Screen Shot 2019-12-24 at 12 55 12 AM" src="https://user-images.githubusercontent.com/75490/71399230-97582c80-25e8-11ea-805d-8422211787bd.png">
<img width="377" alt="Screen Shot 2019-12-24 at 12 56 52 AM" src="https://user-images.githubusercontent.com/75490/71399238-9b844a00-25e8-11ea-8a24-2ab7d3f1a1ff.png">

### Your environment

- `vscode-ruby` version: 0.26.0
- Ruby version: N/A
- Ruby version manager (if any): N/A
- VS Code version: 1.41.0
- Operating System: mac 10.14.5
- Using language server? (eg `useLanguageServer` is true?)

### Expected behavior

Syntax highlighting for 'double bang' (`!!some_thing`) seems off.
I would expect it to look like it does in Sublime Text -  show below.
![Sublime screenshot](https://user-images.githubusercontent.com/44987522/71328348-8addb200-24ca-11ea-8a2c-783023223097.png).

### Actual behavior

Instead, it does the first `!` in red, but assumes the second one is part of whatever comes after. This doesn't seem like the clearest highlighting. Here's an example of how it looks for me.
![Example in VS Code](https://user-images.githubusercontent.com/44987522/71328374-2707b900-24cb-11ea-9178-138c93d2598e.png)


Currently the language server etc. whitelists specific environment variables. This list does not include environment variables used to override `rbenv` or `asdf`. For instance the `asdf` directory for shims can be moved with `$ASDF_DATA_DIR`. However, since this variable is not inherited from the users shell it won't work correctly. Same goes for `rbenv` with `$RBENV_ROOT`, etc.

- These changes whitelist these variables so no further customization to the default vscode settings is required.
- Also added `vsce` as a dev dependency to avoid having to install it globally for packaging.

- [x] The build passes
- [x] TSLint is mostly happy
- [x] Prettier has been run
### Your environment
- `vscode-ruby` version: 0.26.0 
- Ruby version: 2.5.5
- Ruby version manager (if any): chruby
- VS Code version: 1.40.2
- Operating System: 18.04.1-Ubuntu
- Using language server? (eg `useLanguageServer` is true?) Yes

### Expected behavior
Don't crash
### Actual behavior
Crash on go to definition
debug output:
```
Error: [UriError]: Scheme is missing: {scheme: "", authority: "", path: "undefined", query: "", fragment: ""}
    at /home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:62004
    at e.t (/home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:62624)
    at new e (/home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:64286)
    at Function.t.parse (/home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:63519)
    at /home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:293468
    at /home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:293515
    at Array.map (<anonymous>)
    at e.project (/home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:293302)
    at e._tryNext (/home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:30637)
    at e._next (/home/amerov/.vscode/extensions/rebornix.ruby-0.26.0/dist/server/index.js:16:30539)
[Error - 4:22:26 PM] Connection to server got closed. Server will not be restarted.

```