Я пытаюсь запустить Example файл, поставляемый вместе с FASM (C:\FASM\EXAMPLES\DIALOG\DIALOG.ASM) и вылезает ошибка
Warning! Errors have occurred in the build:
c:/program files (x86)/sasm/mingw/bin/../lib/gcc/mingw32/4.6.2/../../../libmingw32.a(main.o): In function `main':
C:\MinGW\msys\1.0\src\mingwrt/../mingw/main.c:73: undefined reference to `WinMain@16'

Если отключаю GCC, то просто вылезает ошибка
[15:38:12] Build started...
[15:38:12] Warning! Errors have occurred in the build:

Обычным компилятором при запуске через FASMW.EXE из компилятора, идущего вместе с самим FASM запускается без каких либо проблем
This is a trivial bugfix.

How to test:
- Start sasm.
- Start debugging.
- Enable show memory.
- Rightclick the background there.
- Before: A segfault happens.
After: Nothing happens.

Probably fixes #128.
I have a program I want to debug, but it needs some command line arguments. It would be cool if SASM had an option to change how the program is called.
I wrote my code in  windows 10 in SASM using io64.inc library for input/output. Now I need to build .exe file. I managed to assemble .obj file, but i don't know what library do I need to solve it. The gcc and golink linkers say:
Error!
The following symbols were not defined in the object file or files:-
printf
scanf
putchar
fgets
puts
fputs
fflush
get_stdin
get_stdout

If i use msvcrt.dll only get_stdin and get_stdout are left. Please, help, where do I find this functions?
This fix solves a clashing tmp directory with SASM on multi-user Linux systems.
Hello!

I am encountering an error in SASM 3.10.1 with Xubuntu 16.04 while running the debugger with the registers shown. The bug can be triggered by calling an externally defined function that contains a fgets call:

```
#include <stdio.h>
int* get(void)
{
    char input[20];
    fgets(input, 20, stdin);
    return NULL;
}
```

This code is compiled with `gcc -m32 file.c -o file.o -c` and linked from the build options menu. The code executes correcly, if you start the debugger it will run line by line with no issues, however if you do Debug -> Show registers, it will run with no issues until you hit the `call get` function. An assembly code which triggers this bug would be:

```
extern get

section .text
global main
main:
    mov ebp, esp; for correct debugging
    ;write your code here
    mov eax, 1
    call get
    
    mov eax, 2
    ret
```

After it passes the `call get` line, both si and ni will send an `unknown register: <address>` error, where address is the current eip, the registers will be printed in the output section and the register column will not be properly updated. I can provide additional debug information if needed

gdb : GNU gdb (Ubuntu 8.2-0ubuntu1\~16.04.1) 8.2
gcc : gcc version 5.5.0 20171010 (Ubuntu 5.5.0-12ubuntu1~16.04)

Radu

Hola, quisiera saber cómo puedo cambiar el idioma a inglés de SASM, porque me aparece en ruso y cuando voy a la configuraciones y elijo inglés, vuelve a ponerse en ruso. Utilizo Ubuntu 18.04. Gracias. 
Tried to build a new version of SASM on Centos. Last version I used was something like 3.9.0
The new source distribution does not include Makefile.
What to do?
Please add support Z80 into IDE , for develop apps for Spectrum on Linux