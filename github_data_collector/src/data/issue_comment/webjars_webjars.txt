Hello !
The material-component-web package from NPM actually rely on a lot of other package, all under `@material/<componentName>`

In node_module, that should give us this folder layout :
```
|- @material |- <componentFolder1>
|            |- <componentFolder2>
|            |- <componentFolder3>
|            |- etc ...
|- material-component-web
```

Yes, a folder named `@material` with folder insides.

So the `.scss` of `material-component-web` actually need to import something like this : 
```
@import "@material/button/mdc-button";
@import "@material/card/mdc-card";
@import "@material/checkbox/mdc-checkbox";
@import "@material/chips/mdc-chips";
@import "@material/data-table/mdc-data-table";
@import "@material/dialog/mdc-dialog";
@import "@material/drawer/mdc-drawer";
```
But since there is no direct `@material` folder and it's replaced with, for `mdc-button`, `material__button` instead of `@material/button`, `sbt-sassify` can't work at all...

I'm quite new to the Scala + SBT + Play world, so maybe it's impossible, but is there a way for me to have this specific output so `sbt-sassify` can freely build the sass files ?
Hi,

Consider a plain Maven project just with the current nashorn-poyfill dependency:
```
<project>
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.mycompany.app</groupId>
  <artifactId>my-app</artifactId>
  <version>1</version>

  <dependencies>
    <dependency>
      <groupId>org.webjars.npm</groupId>
      <artifactId>nashorn-polyfill</artifactId>
      <version>0.2.4</version>
    </dependency>
  </dependencies>

</project>
```

Trying to build the project in Maven leads to a resolve dependency error:

> [ERROR] Failed to execute goal on project my-app: Could not resolve dependencies for project com.mycompany.app:my-app:jar:1: Failed to collect dependencies at org.webjars.npm:nashorn-polyfill:jar:0.2.4 -> org.webjars.npm:webpack:jar:2.1.0-beta.25 -> org.webjars.npm:watchpack:jar:1.0.1 -> org.webjars.npm:chokidar:jar:1.4.3 -> org.webjars.npm:readdirp:jar:2.2.1 -> org.webjars.npm:micromatch:jar:3.1.10 -> org.webjars.npm:braces:jar:2.3.1 -> org.webjars.npm:snapdragon:jar:0.8.1 -> org.webjars.npm:base:jar:0.11.1 -> org.webjars.npm:cache-base:jar:0.8.4 -> org.webjars.npm:union-value:jar:0.2.3 -> org.webjars.npm:set-value:jar:[0.3.3,0.4): No versions available for org.webjars.npm:set-value:jar:[0.3.3,0.4) within specified range -> [Help 1]

Trying to build the project in Eclipse (just opening it) leads to a stack overflow.


```
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>
    
    <packaging>jar</packaging>
    <groupId>org.webjars</groupId>
    <artifactId>material-dashboard</artifactId>
    <version>1.11.1-SNAPSHOT</version>
    <name>material-dashboard</name>
    <description>WebJar for material-dashboard</description>
    <url>http://webjars.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <upstream.url>https://github.com/RachitDubey11/silver-robot/archive/v${version.unsnapshot}.zip</upstream.url>
        <destDir>${project.build.outputDirectory}/META-INF/resources/webjars/${project.artifactId}/${project.version}</destDir>
        <requirejs>
            {
                "paths": {
                    "material-dashboard": "material-dashboard"
                },
                "shim": {
                    "material-dashboard": ["DEP_ID"]
                }
            }
        </requirejs>
    </properties>

    <developers>
        <developer>
            <id>RachitDubey11</id>
            <name></name>
            <email></email>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>Creative Tim</name>
            <url>https://github.com/RachitDubey11/silver-robot/blob/master/README</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>http://github.com/webjars/material-dashboard</url>
        <connection>scm:git:https://github.com/webjars/material-dashboard.git</connection>
        <developerConnection>scm:git:https://github.com/webjars/material-dashboard.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    
    <dependencies>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>ANOTHER_WEBJAR_ARTIFACT_ID</artifactId>
            <version>ANOTHER_WEBJAR_ARTIFACT_VERSION</version>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>com.jamesward</groupId>
                <artifactId>unsnapshot-maven-plugin</artifactId>
                <version>0.2</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unsnapshot</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <target>
                                <echo message="download archive"/>
                                <get src="${upstream.url}" dest="${project.build.directory}/${project.artifactId}.zip"/>
                                <echo message="unzip archive"/>
                                <unzip src="${project.build.directory}/${project.artifactId}.zip" dest="${project.build.directory}"/>
                                <echo message="moving resources"/>
                                <move todir="${destDir}">
                                    <fileset dir="${project.build.directory}/${project.artifactId}-${version.unsnapshot}"/>
                                </move>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
            </plugin>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>sonatype-nexus-staging</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>

```
               
https://github.com/RachitDubey11/material-dashboard
https://twitter.com/damianskolasa/status/1132279438429892609
I tried to create the webjar for the smart-core library required by smart-calendar with existing webjar (I don't know how it's possible) but it doesn't work.

Github project: https://github.com/HTMLElements/smart-core
Version: 2.0.0
License: Apache-2.0

```
<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>org.sonatype.oss</groupId>
        <artifactId>oss-parent</artifactId>
        <version>7</version>
    </parent>
    
    <packaging>jar</packaging>
    <groupId>org.webjars</groupId>
    <artifactId>miniui</artifactId>
    <version>3.8.1-SNAPSHOT</version>
    <name>miniui</name>
    <description>WebJar for miniui</description>
    <url>http://webjars.org</url>

    <properties>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <upstream.url>https://github.com/yaoxingle/weixin.git/archive/v${version.unsnapshot}.zip</upstream.url>
        <destDir>${project.build.outputDirectory}/META-INF/resources/webjars/${project.artifactId}/${project.version}</destDir>
        <requirejs>
            {
                "paths": {
                    "miniui": "miniui"
                },
                "shim": {
                    "miniui": ["DEP_ID"]
                }
            }
        </requirejs>
    </properties>

    <developers>
        <developer>
            <id>yaoxingle</id>
            <name>姚星乐</name>
            <email>286462534@qq.com</email>
        </developer>
    </developers>

    <licenses>
        <license>
            <name>opensource</name>
            <url>http://www.baidu.com/opensource</url>
            <distribution>repo</distribution>
        </license>
    </licenses>

    <scm>
        <url>http://github.com/webjars/miniui</url>
        <connection>scm:git:https://github.com/webjars/miniui.git</connection>
        <developerConnection>scm:git:https://github.com/webjars/miniui.git</developerConnection>
        <tag>HEAD</tag>
    </scm>
    
    <dependencies>
        <dependency>
            <groupId>org.webjars</groupId>
            <artifactId>ANOTHER_WEBJAR_ARTIFACT_ID</artifactId>
            <version>ANOTHER_WEBJAR_ARTIFACT_VERSION</version>
        </dependency>
    </dependencies>
    
    <build>
        <plugins>
            <plugin>
                <groupId>com.jamesward</groupId>
                <artifactId>unsnapshot-maven-plugin</artifactId>
                <version>0.2</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>unsnapshot</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>1.8</version>
                <executions>
                    <execution>
                        <phase>process-resources</phase>
                        <goals><goal>run</goal></goals>
                        <configuration>
                            <target>
                                <echo message="download archive"/>
                                <get src="${upstream.url}" dest="${project.build.directory}/${project.artifactId}.zip"/>
                                <echo message="unzip archive"/>
                                <unzip src="${project.build.directory}/${project.artifactId}.zip" dest="${project.build.directory}"/>
                                <echo message="moving resources"/>
                                <move todir="${destDir}">
                                    <fileset dir="${project.build.directory}/${project.artifactId}-${version.unsnapshot}"/>
                                </move>
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-release-plugin</artifactId>
                <version>2.5.3</version>
            </plugin>

            <plugin>
                <groupId>org.sonatype.plugins</groupId>
                <artifactId>nexus-staging-maven-plugin</artifactId>
                <version>1.6.8</version>
                <extensions>true</extensions>
                <configuration>
                    <serverId>sonatype-nexus-staging</serverId>
                    <nexusUrl>https://oss.sonatype.org/</nexusUrl>
                    <autoReleaseAfterClose>true</autoReleaseAfterClose>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>

```
               
I noticed something strange on the Webjars Web page when I wanted to create new Webjars for AngularJS modules of the latest version 1.7.7. For some of them the modal window´s input field in which the module name is set goes to an error state and therefore it is not possible to select a version and create/deploy, see screenshot.

Could someone please have a look. Thanks.
<img width="1256" alt="webjars_-_web_libraries_in_jars" src="https://user-images.githubusercontent.com/143208/53668734-0e48c100-3c75-11e9-97b7-f0fe8c200d26.png">

Upstream website: http://livejs.com/

Source code: http://livejs.com/live.js

License: MIT