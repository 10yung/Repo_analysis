Distro/DE: regolith (ubuntu based)/i3

i3bar is losing some clicks (one miss in every 3 or 4 clicks, sometimes more), and I can't find the reason.

Tried compiling i3blocks from source (regolith uses the i3xrocks fork, which has the same issue) but problem remained, I've used this minimum configuration to reproduce:

```
[click]
full_text=Click me!
command=echo "$(date +%s) Got clicked with button $BLOCK_BUTTON" >> /tmp/log2
```

That's everything on cfg file, I'm running it like this, from i3:
```status_command /path/to/cloned/i3blocks -c $i3xrocks_config -vvv 2>/tmp/i3blocks.err```

This is the i3blocks version:
```i3blocks 1.5 © 2014-2019 Vivien Didelot and contributors```

And this is the i3bar version:
```i3bar version 4.16.1 (2019-01-27) © 2010 Axel Wagner and contributors```

And when I download i3blocks from ubuntu repo (`i3blocks 1.4 © 2014 Vivien Didelot and contributors`) I got the clicking right, but it's not the best solution as I'm using the new features from 1.5.

This is the log from 4 clicks, the 3rd and 4th lost. The spaces were added for clarity, after each click.
```
<7>line.c:line_parse:65: &0:000: ,{"name":"click","button":1,"modifiers":[],"x":3242,"y":1066,"relative_x":18,"relative_y":6,"width":62,"height":20}
<7>block.c:block_click:206: [click] clicked
<7>block.c:block_parent:346: [click] forked child 22030
<5>read(0, 1): Resource temporarily unavailable
<7>bar.c:bar_poll_exited:149: [click] exited
<7>block.c:block_wait:416: [click] process 22030 exited with 0
<7>block.c:block_update:146: [click] updated successfully
<5>waitid(): No child processes
<7>i3bar.c:i3bar_print_block:160: [foo] no text to display, skipping

<7>line.c:line_parse:65: &0:000: ,{"name":"click","button":1,"modifiers":[],"x":3242,"y":1066,"relative_x":18,"relative_y":6,"width":62,"height":20}
<7>block.c:block_click:206: [click] clicked
<7>block.c:block_parent:346: [click] forked child 22032
<5>read(0, 1): Resource temporarily unavailable
<7>bar.c:bar_poll_exited:149: [click] exited
<7>block.c:block_wait:416: [click] process 22032 exited with 0
<7>block.c:block_update:146: [click] updated successfully
<5>waitid(): No child processes
<7>i3bar.c:i3bar_print_block:160: [foo] no text to display, skipping

<5>read(0, 1): Resource temporarily unavailable
<7>line.c:line_parse:65: &0:000:
<5>read(0, 1): Resource temporarily unavailable

<5>read(0, 1): Resource temporarily unavailable
<7>line.c:line_parse:65: &0:000:
<5>read(0, 1): Resource temporarily unavailable
```

Those clicks have about one second of interval, I'm not maniacally clicking in order to reproduce this problem.


With this PR you can make statusbar output looks like e.g. powerline.
Example there: https://i.redd.it/13a2zz2ifjw31.png

New field in config: full_text_pattern
Value of this pattern will be parsed and all values surrounded by '%' will be used as parameter keys.
Values started with '&' - are references on another parameter keys.

Demo config example:
```
command=~/.config/i3/i3blocksScripts/$BLOCK_NAME
separator_block_width=0
markup=pango
color1=#ffffffa0
color2=#000000a0
background=#000000a0
separator_glyph=
full_text_pattern=<span foreground='%gfg%' background='%gbg%'>%separator_glyph%</span><span foreground='%fg%' background='%bg%'>%full_text%</span>
gbg=&fg
gfg=&bg

[foo]
command=echo foo
bg=&color1
fg=&color2
interval=once

[bar]
command=echo bar
bg=&color2
fg=&color1
interval=once
```

i3 config:
```
bar {
    position top
    i3bar_command i3bar -t 0.1
    colors{
        background #000000a0
    }

    status_command i3blocks -c demo.conf
}
```
Distro and DE - Manjaro i3 community edition

After a full system update, I could only see GPU USE, GPU TEMP(my own scripts) and the date in my i3 blocks and none of the rest.
I think this is because i3blocks was not recognizing i3blocks-contrib anymore.

I figured out a hacky solution - I took the relevant script out of their folders in i3blocks-contrib and it started working again. (`$SCRIPT_DIR` was correctly set to i3blocks-contrib location) But this did not work when I switched GPU to intel only - the GPU blocks still showed up taking space, just that they were empty since there was no GPU to detect. I guess this should not happen - it did not happen before, the blocks before that took up that space.

I decided to start from scratch. I purged i3blocks from my system. 
I installed i3blocks from pacman (as linked in the i3blocks README).
According to the instructions on the README (https://github.com/vivien/i3blocks#getting-started) -
I executed -
```
git clone https://github.com/vivien/i3blocks-contrib ~/.config/i3blocks
cd !$
cp config.example config
```
but I am only able to see the date and the time blocks on my i3blocks bar. (The same problem as before)


Is it possible to pass secret variables via the environment to i3blocks scripts? This is useful for API keys for example.
I'm sorry if I'm just being stupid but i am new to most of this.

I have tried using multiple different one line commands inside the config file:
command=curl 'https://api.ipify.org/'
command=echo $(curl https://api.ipify.org)

i have tried making basic scripts 

#!/bin/bash

IP=$(wget http://ipinfo.io/ip -qO -)
echo -n $IP


all of which work when i run them outside of i3blocks and they also work for my mate using them inside i3 blocks
`XDG_CONFIG_DIRS` can contain multiple elements separated by colons, which should be searched in order.
Addresses #393 and #403.

Currently a line isn't read if any error is reached, including EAGAIN,
which indicates you've reached the end of a file descriptor.

This commit allows EAGAIN to terminate a line if anything else has been
read from that fd. If nothing else has been read, it's either
non-existent or empty, which makes sense to error instead.
About half of my blocks stopped rendering after updating today. I looked through `i3blocks -vvv` and noticed that only the blocks that were printing were getting log lines from line.c

```
<7>line.c:line_parse:65: &3:000: {{block output}}
```
Looking around there it seems i3blocks can only read lines if they end with a newline.

I added an extra `echo` to the end of all my missing blocks and they re-appeared.

I think a fix would be to accept the error indicating the end of the file descriptor as a valid endpoint to the line and break. I think this would be sufficient:

```c
if (err) {
    if (err == -EAGAIN)
        break;
    return err;
}
```

I'm hesitant to submit a PR because I'm having problems getting the build to work.

**Edit:** I got the build working so I submitted a PR which fixed my problem.
Hi !

Working on updating i3blocks on debian/ubuntu, I encounter an error during `make install` (I think):

```
dh_auto_install -- PREFIX="/usr" LIBEXECDIR="/usr/share"
	make -j4 install DESTDIR=/packages/i3blocks/i3blocks/debian/i3blocks AM_UPDATE_INFO_DIR=no PREFIX=/usr LIBEXECDIR=/usr/share
make[2]: Entering directory '/packages/i3blocks/i3blocks'
make[3]: Entering directory '/packages/i3blocks/i3blocks'
( cd '/packages/i3blocks/i3blocks/debian/i3blocks/usr/share/bash-completion/completions' && mv bash-completion i3blocks )
 /bin/mkdir -p '/packages/i3blocks/i3blocks/debian/i3blocks/usr/bin'
 /bin/mkdir -p '/packages/i3blocks/i3blocks/debian/i3blocks/etc'
 /bin/mkdir -p '/packages/i3blocks/i3blocks/debian/i3blocks/usr/share/bash-completion/completions'
mv: cannot stat 'bash-completion': No such file or directory
```

Looking at Makefile.am, it seems we change directory and try to move the `bash-completion`script that is located in the source tree, but it doesn't exist because we just changed directory.


My volume/cpu/internet indicators dissapeared ever since I updated i3blocks. The reason for that the location of the files changed. For example, the volume one is no longer in "command=/usr/lib/i3blocks/volume". Where is it now?