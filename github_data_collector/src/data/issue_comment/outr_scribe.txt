Hi, 

I noticed that the logging macros put the absolute path of the source file for every position into the logging record, which I believe happens here:
https://github.com/outr/scribe/blob/951b94a2c3514db130cd78059a891db4c0c6054a/core/shared/src/main/scala/scribe/Macros.scala#L67

I would like to request to instead only put a **relative path** from the **project root**.

The reason for this request is, that I recently noticed that some of my local filesystem paths show up on Google search, which worried me a bit, until I realised it is because they appear in logging statements in my ScalaJS generated Javascript code (search for `EPCompendium.scala` in the source [here](https://eptools.lkroll.com/) to see what I mean). It's not a huge issue, but I'd rather they not be there.

Alternatively, simply removing file paths from fullOptJS builds would probably also work well.

Cheers,
Lars
It would be very nice if there was some more documentation on handlers and modifications and how to utilize them / create your own. 
Anonymous functions are currently being included as method names and they don't add to the logging, just meaningless characters and should be removed.
I'd like to see an alternate scribe class with native log4cats support. The `log4cats-scribe` package exists and works, but it has the drawback of recording incorrect `Position` information, because the logger is defined as a class wrapping around `Sync[F].delay(logger.foo(..))`. This causes the position reporting to be marked as the wrapper class rather than the class doing the logging, for example `io.chrisdavenport.log4cats.scribe.ScribeLogger.$anon.info:24:32`

From reading the `Macros` code, it should be possible to implement a new `ScribeLogger[F]` class with minor modification; where the `Macros.log` method currently emits
```scala
    q"""
       $logger.log(_root_.scribe.LogRecord[$m](
        /* stuff */
       ))
     """
```
it could instead emit something like:
```scala
    q"""
       Sync[F].delay($logger.log(_root_.scribe.LogRecord[$m](
        /* stuff */
       )))
     """
```
LogStage has some interesting ideas for structural logging and extracting variables from compile-time interpolated Strings (like `s""`).  This could be a very useful feature for Scribe.

https://github.com/pshirshov/izumi-r2/tree/develop/logstage/logstage-api-base-macro/src/main/scala/com/github/pshirshov/izumi/logstage/api
Continuing from https://gitter.im/scala/scala?at=5b859436c53ee54c18b6e399

- Support async traces for `cats.effect.IO`
- Ideally support any `F: Effect`
Currently, the configuration of Scribe is entirely programmatic and at the discretion of the developer using it.  It would be very useful to provide an optional module that incorporates Profig configuration to control logging configuration.
1.) Better tooling to expose performance flaws
2.) Additional benchmarks to show more features of Scribe
3.) A library to generate graphical reports on the benchmark results
Scala Native has been haphazardly supported and needs a lot more TLC to be incredibly solid and stable logging
While 100% coverage isn't usually practical, we need to raise our numbers.