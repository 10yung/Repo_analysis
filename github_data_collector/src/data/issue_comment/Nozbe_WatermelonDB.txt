I'm working on an application involving heavy amounts of GeoJSON and GIS data.

I'd be interested to know if it's possible to add spatialite and GIS focused querying to WatermelonDB.

I'd of course handle the implementation, interested in where I would start and if Nozbe thinks it's even possible.

https://github.com/Ryandev/spatialite-iOS

Suggests it's possible to add extend Sqlite with Spatialite but I know there would be additional work involved. 
I have used this awesome library in react.

Getting this error `Unhandled Promise Rejection: DataCloneError: The object can not be cloned.`
When i am using this library in **Safari** in an **iframe**.

Below are the logs from the console.
```
[DB][Worker] Initializing IndexedDB


[Error] Diagnostic error: SecurityError: IDBFactory.open() called in an invalid security context
diagnosticError — index.js:20
logError — index.js:18
$Try_1_Catch — lokiWorker.js:88
promiseReactionJob

	error (08ec40b9a057ce8887b7.worker.js:2914)
	logError (08ec40b9a057ce8887b7.worker.js:2869)
	$Try_1_Catch (08ec40b9a057ce8887b7.worker.js:2241)
	promiseReactionJob

[Error] Unhandled Promise Rejection: DataCloneError: The object can not be cloned.
	postMessage (08ec40b9a057ce8887b7.worker.js:2213)
	(anonymous function) (08ec40b9a057ce8887b7.worker.js:2213)
	(anonymous function) (08ec40b9a057ce8887b7.worker.js:2348)
	$Try_1_Catch (08ec40b9a057ce8887b7.worker.js:2242)
	promiseReactionJob
```

<img width="592" alt="Screenshot 2020-01-16 at 5 23 04 PM" src="https://user-images.githubusercontent.com/17469425/72524969-e3635d80-3884-11ea-826d-184b13e11121.png">


Error is on this line 
```
_this.workerContext.postMessage({
          type: type,
          payload: payload
        });
```
Safari is not able to convert the `payload`
**Any ideas how to fix this.**
Thanks in advance.

Greetings.

I've encountered problems with Redux with collections of tens of thousands of objects. The weakest part of Redux/AsyncStorage , I guess, is the RN bridge and state persistence. When the state grows to 10-20Mb of serialized JSON, the whole app starts to choke on each state change (Android platform shows the worst performance). I've tried different persistance modules, all the same.
So I'm looking for a replacement. The code base is quite big, and I've used redux-saga extensively.

Is it possible to use WatermelonDB with redux/redux-saga side by side without rewriting everything from the scratch?
Are there any pitfalls?

I'd like to migrate some parts of the app to the new framework gradually.

Thanks!
Hi, as promised in #51 hereby I provide a pull request for encrypted databases on android. It's tested (ci:check and in a test project) and working. Nevertheless I want to address some things:

1) It works with or without password, but in all of the cases it's using another SQLite implementation for android. In my tests it works perfect, but I wanted to tell you. 

2) The new library requires to be mentioned in the licenses, see https://www.zetetic.net/sqlcipher/open-source/

I did not change documentation at all. It's up to you where to mention this.

3) The password can be simply set in the SQLiteAdapter:

```
new SQLiteAdapter({
      schema: defaultSchema,
      dbName: 'myDB',
      password: 'ABC123!'
    })
```

If none is given the DB is not encrypted. Quite easy and backwards compatible.

4) I adjusted the iOS methods accordingly to be the same as in Android. The parameter password is given there as well, but simply not used. I think this makes sense for possible future changes also there.

Feel free to change what you want. :) I hope it's a valuable contribution and I would look forward to be mentioned in the contributors section - but of course that's not a "must".

Best regards,

Andreas

I ran into this while trying to migrate my project to watermelonDB when attempting to create a record, my code:

```
let record

await db.action(async () => {
      record = await db.collections.get('items').create(r => {})
})
```

Throws:

```
Converting circular structure to JSON
    --> starting at object with constructor 'Item'
    |     property '__changes' -> object with constructor 'BehaviorSubject'
    --- property '_value' closes the circle
```

I was originally getting this when trying to set my fields so I started commenting code out to narrow it down and with the above call where it assigns to `record = await ...`  seems to be the culprit (for unknown reasons). If I change the create call to this, it works fine:

```
await db.action(async () => {
      await db.collections.get('items').create(r => {})
})
```

Any ideas why or tips for debugging further?
Although I'm using batching in my code, I realized that a lot of actions are queued when it comes to higher load in our react native app. Therefore I asked myself, if there's a way to "flush" the action queue? I would do the same when the app is sent to the background or requested to quit by the operating system.

Thanks in advance!

Andreas
I am playing around with the `experimentalUseIncrementalIndexedDB: true` flag for the LokiJSAdapter and first thought that this was flushing my local storage database but interestingly if I disable the flag my data reappears. So I assume it creates a second database. Is there a way for me to migrate the default IndexedDB to the Incremental one?


Hey, amazing project you've got here.

I was looking into using this with Expo, and saw that it is not possible currently, as discussed in #310. However, since the architecture with adapters is quite flexible, couldn't the bundled native db driver be replaced with the one provided by [`expo-sqlite`](https://docs.expo.io/versions/latest/sdk/sqlite/) (which actually is the same project as https://github.com/andpor/react-native-sqlite-storage)?

That would make WatermelonDB compatible with expo, while letting you get rid of the native code parts in the project. It could also be added as an additional adapter of course.

Would this be a possible way forward?
<img width="1046" alt="Screenshot 2019-12-13 at 14 44 53" src="https://user-images.githubusercontent.com/16821682/70804657-4f026880-1db7-11ea-8e89-6e8006342209.png">

Hey, I implemented the pattern on how to delete objects exactly [like your documentation](https://nozbe.github.io/WatermelonDB/CRUD.html#delete-a-record) states it. And usually, it works, but from time to time I receive the error you can see above, which really confuses me a lot because I am calling it from inside an action. 
The code you see above isn't called from any other actions, it's invoked when the user clicks on a delete button.