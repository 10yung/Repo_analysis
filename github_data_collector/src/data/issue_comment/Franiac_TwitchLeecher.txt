Can you make a function to run this application as a console application, to specify the download folder, time intervals etc as keys?

windows 10 64 bit
using filename template: {date}\_{id}\_{channel}\_{game}\_{res}\_{fps}\_{title}

was able to successfully download when shortening the filename. would be nice to have a {title_truncated}.

download log:
```
Download task has been started!

TWITCH LEECHER INFO
--------------------------------------------------------------------------------------------
Version: 1.8

VOD INFO
--------------------------------------------------------------------------------------------
VOD ID: 508002721
Selected Quality: 1920x1080@60fps (Source)
Download Url: https://www.twitch.tv/videos/508002721
Crop Start: No
Crop End: No

OUTPUT INFO
--------------------------------------------------------------------------------------------
Disable Conversion: No
Output File: E:\TwitchLeecher\FuturemanGaming\20191113_508002721_FuturemanGaming_Death Stranding_1920x1080_60_Save the Baby, Save the Future __ Futureman-- Nice Moves, Red Lobster w_ Hideo, Never Stop Encabulation, 56k Internet, Tight fmgBUNS.mp4
FFMPEG Path: C:\Program Files\Twitch Leecher\ffmpeg.exe
Temporary Download Folder: E:\TwitchLeecher\temp\TL_8f78861f-e460-4559-8b2d-5c0794517bdb

ACCESS INFO
--------------------------------------------------------------------------------------------
Token: %7B%22authorization%22%3A%7B%22forbidden%22%3Afalse%2C%22reason%22%3A%22%22%7D%2C%22chansub%22%3A%7B%22restricted_bitrates%22%3A%5B%5D%7D%2C%22device_id%22%3Anull%2C%22expires%22%3A1575607358%2C%22https_required%22%3Afalse%2C%22privileged%22%3Afalse%2C%22user_id%22%3Anull%2C%22version%22%3A2%2C%22vod_id%22%3A508002721%7D
Signature: 60e2a80fe811044ad65e546b9037732d7b9c4bdc
Sub-Only: No
Privileged: No

Creating temporary download directory 'E:\TwitchLeecher\temp\TL_8f78861f-e460-4559-8b2d-5c0794517bdb'... done!

Retrieving m3u8 playlist urls for all VOD qualities... done!
https://vod-metro.twitch.tv/c0691cbc6170e30f1953_futuremangaming_36208961808_1331755948/chunked/index-muted-IDVHA8CSSI.m3u8
https://vod-metro.twitch.tv/c0691cbc6170e30f1953_futuremangaming_36208961808_1331755948/720p60/index-muted-IDVHA8CSSI.m3u8
https://vod-metro.twitch.tv/c0691cbc6170e30f1953_futuremangaming_36208961808_1331755948/720p30/index-muted-IDVHA8CSSI.m3u8
https://vod-metro.twitch.tv/c0691cbc6170e30f1953_futuremangaming_36208961808_1331755948/480p30/index-muted-IDVHA8CSSI.m3u8
https://vod-metro.twitch.tv/c0691cbc6170e30f1953_futuremangaming_36208961808_1331755948/audio_only/index-muted-IDVHA8CSSI.m3u8
https://vod-metro.twitch.tv/c0691cbc6170e30f1953_futuremangaming_36208961808_1331755948/360p30/index-muted-IDVHA8CSSI.m3u8
https://vod-metro.twitch.tv/c0691cbc6170e30f1953_futuremangaming_36208961808_1331755948/160p30/index-muted-IDVHA8CSSI.m3u8

Playlist url for selected quality 1920x1080@60fps (Source) is https://vod-metro.twitch.tv/c0691cbc6170e30f1953_futuremangaming_36208961808_1331755948/chunked/index-muted-IDVHA8CSSI.m3u8

Retrieving playlist... done!
Parsing playlist... done!
Number of video chunks: 2118

Starting parallel video chunk download
Number of video chunks to download: 2118
Maximum connection count: 10

Parallel video chunk download is running...

Download of all video chunks complete!

Merging all VOD parts into 'E:\TwitchLeecher\temp\TL_8f78861f-e460-4559-8b2d-5c0794517bdb\20191113_508002721_FuturemanGaming_Death Stranding_1920x1080_60_Save the Baby, Save the Future __ Futureman-- Nice Moves, Red Lobster w_ Hideo, Never Stop Encabulation, 56k Internet, Tight fmgBUNS.ts'...

Starting temporary download folder cleanup!
Deleting directory 'E:\TwitchLeecher\temp\TL_8f78861f-e460-4559-8b2d-5c0794517bdb'... done!

Download task ended with an error!

System.AggregateException: One or more errors occurred. ---> System.IO.DirectoryNotFoundException: Could not find a part of the path 'E:\TwitchLeecher\temp\TL_8f78861f-e460-4559-8b2d-5c0794517bdb\20191113_508002721_FuturemanGaming_Death Stranding_1920x1080_60_Save the Baby, Save the Future __ Futureman-- Nice Moves, Red Lobster w_ Hideo, Never Stop Encabulation, 56k Internet, Tight fmgBUNS.ts'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access)
   at TwitchLeecher.Services.Services.ProcessingService.ConcatParts(Action`1 log, Action`1 setStatus, Action`1 setProgress, VodPlaylist vodPlaylist, String concatFile)
   at TwitchLeecher.Services.Services.TwitchService.<>c__DisplayClass50_0.<StartQueuedDownloadIfExists>b__2()
   at System.Threading.Tasks.Task.Execute()
   --- End of inner exception stack trace ---
---> (Inner Exception #0) System.IO.DirectoryNotFoundException: Could not find a part of the path 'E:\TwitchLeecher\temp\TL_8f78861f-e460-4559-8b2d-5c0794517bdb\20191113_508002721_FuturemanGaming_Death Stranding_1920x1080_60_Save the Baby, Save the Future __ Futureman-- Nice Moves, Red Lobster w_ Hideo, Never Stop Encabulation, 56k Internet, Tight fmgBUNS.ts'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access)
   at TwitchLeecher.Services.Services.ProcessingService.ConcatParts(Action`1 log, Action`1 setStatus, Action`1 setProgress, VodPlaylist vodPlaylist, String concatFile)
   at TwitchLeecher.Services.Services.TwitchService.<>c__DisplayClass50_0.<StartQueuedDownloadIfExists>b__2()
   at System.Threading.Tasks.Task.Execute()<---
```

i was wondering if any sort of auto capture was in the works so i could have this running 247 on my pc and capture livestreams so i can watch them at my own time instead of live

this is a feature request i guess i dont know if im posting this correctly sorry if im not

Hi,
great work wit the app, but there is one thing I'm missing - some kind of default quality setting.
I download all videos in lower quality (so that the video files take up less space on my hard drive), but as currently the quality defaults to the highest possible, I have to set it manualy every time - which is very annoying when downloading multiple videos at once. Additionally I sometimes forget to set it, so I also have to check the quality in the download manager afterwards.

Therefore I would like to have a default quality option in settings, which would preset the quality for downloads (if that quality is available).

Could look somewhat like this:
![S_2019-11-27_12-53-55-0083](https://user-images.githubusercontent.com/12015515/69723123-1c9b0f00-1119-11ea-9f7a-cbf1e682f12c.png)

There are 5 commits:
Show filename, crop time in downloads tab.
Add 3 new wildcards with hyphen.
Add special wildcard, that will be replaced by some number to avoid overwrite.
Add new settings option - quality by default. Will be selected ONLY if this quality exist, in other cases you has to select quality manually (as now).
Add autosplit option (with special setting in preferences). You can download video by part automatically, with extra overlap option. Work only with conversation.

This is almost same changes, full tested
Hi ! 
Thanks a lot for your great work ! 

I use it a lot while travelling to download league of legend games, but it can last 4-6 hours.
So i usually make part of each video so if a download failed i don't have to wait hours again to download the entire game, I just have to redownload a part of it. 
Another good point is that I can start to watch quickly as soon as the first part is downloaded, while the other part are downloaded in background. And last usage is that i can delete files as soon as i watch them.

But actually it's a bit annoying to do it manually because i need to watch when does the game start, set is as start time, set an end time and remember it. Then doing the second part beginning at the end of first one and so on...

So i imagined two easy way to do it, either by setting length of part wanted : 

![twitchleecher_example_slipt_download](https://user-images.githubusercontent.com/453590/57052753-b22e0780-6ccc-11e9-92de-b29851d15bd8.png)

Or setting the number of parts : 

![twitchleecher_example_slipt_download_nb_part](https://user-images.githubusercontent.com/453590/57052752-b1957100-6ccc-11e9-8819-67244bace07d.png)


And when you click to download it create 4 independents download task in chronological order.

I'm web software developer and i may have some time next weeks, if you seems this feature seems great i will try to do a pull request ;) 

Thanks a lot and do not hesite if you have question :)
This is a fairly simple request. It would be great if there could be some kind of indication on the Search or Browse windows that indicated the videos one had previously downloaded successfully. It would help when browsing through my freinds' collections of dozens-hundreds of saved videos, when I don't download them in sequence. 

A fairly simple request, but a quintessential and extremely helpful feature in any downloading program. Thanks!
Twitch will shut down API V5 on 12/31/2018. Until then TL has to switch to the new Helix API.

Difficulties:

The new API does not contain any information about the video quality or framerate. The quality selection would be gone. TL would only be capable of downloading source quality. It is how it is, unfortunately.

I got in contact with Twitch here:

https://discuss.dev.twitch.tv/t/get-qualities-of-videos/14633

But there is no guarantee this will happen anytime soon.
Thanks for creating this awesome software!

I have a suggestion for a feature which I think would be desirable for a lot of users. Could there be a setting to switch off the computer after all downloads complete. Kind of like uTorrent or FileZilla does. So you could leave the queue downloading overnight.
I am using version 1.4.2, and I would love it if I could enter a Twitch collection url (example: https://www.twitch.tv/collections/sIU92mT36hQMqw, Preach MGS2 playthrough) after which TL would automatically queue and download every video in the collection, instead of having to search for a date period during which these highlights were recorded.