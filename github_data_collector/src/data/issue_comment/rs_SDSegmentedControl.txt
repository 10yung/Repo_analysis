Could you do a `pod trunk push`, please?

Hi, I get Crash log as below:

Crashed: com.apple.main-thread
SIGABRT ABORT at 0x00000001956cf270
 raw
libsystem_kernel.dylib  
__pthread_kill + 8
libsystem_c.dylib  
basename
CoreGraphics  
CG::Path::move_to_point(CGPoint const&, CGAffineTransform const*)
UIKit  
+[UIBezierPath _continuousRoundedRectBezierPath:withRoundedCorners:cornerRadii:segments:smoothPillShapes:] + 
UIKit  
+[UIBezierPath _continuousRoundedRectBezierPath:withRoundedCorners:cornerRadius:segments:] + 
SDSegmentedControl.m line 1316
-[SDStainView drawRect:]

Hello,
My segment control is made of 14 segments and I want the last one to be the first selected segment. I did so by using [segmentControl setSelectedSegmentIndex:13];
My problem is that when the view is loaded a part of the last segment is out of the borders of the view and I want it to be completely visible from the start. Can I have some help?

According to the example I created a sample project in swift targeting iOS 8.1 but it didn't work out as expected. I couldn't get the sample control to be visible even though view debugging showed the view does exist. There must be something wrong with the default appearance...

This works fine under IOS7 and lower, under IOS8 the first time we push the view containing he SDSegmentControl all is ok. the next time around (Go back to previous view and back to this view) the segmentControl looses appearance setting we push it see below code for the border color and width. 

`SDSegmentedControl *segmentedControlAppearance = SDSegmentedControl.appearance;`
`segmentedControlAppearance.backgroundColor = [UIColor colorWithHex:@"#453e34" alpha:alpha];`
`segmentedControlAppearance.borderColor = [UIColor whiteColor];`
`segmentedControlAppearance.arrowSize = 10;`
`segmentedControlAppearance.arrowHeightFactor = 1;`
`segmentedControlAppearance.arrowPosition = SDSegmentedArrowPositionTop;`
`segmentedControlAppearance.borderWidth = 1;`

we see the black defaults being drawn in black if we are on IOS8 
which is inited under commonInits as 

> `// Init border bottom layer`
>   `[self.layer addSublayer:_borderBottomLayer = CAShapeLayer.layer];`
>    `if (!SD_IS_IOS7) {`
>        `self.borderColor = UIColor.whiteColor;`
>        `self.borderWidth = .5;`
>    `} else {`
>        `self.borderColor = UIColor.blackColor;`
>       `self.borderWidth = .25;` 
>   `}`

The fix I used was to directly set the color to withe and the width to 1 under this init bypassing the usage of the appearance setter. 

This was the way I initially was setting in my `viewDidLoad` of the view being pushed as follows

`- (void)segmentControlInit {`
    `// self.segmentControl.backgroundColor = [UIColor colorWithHex:@"#453e34" alpha:alpha];`

   `SDSegmentedControl *segmentedControlAppearance = SDSegmentedControl.appearance;`
    `segmentedControlAppearance.backgroundColor = [UIColor colorWithHex:@"#453e34" alpha:alpha];`
    `segmentedControlAppearance.borderColor = [UIColor whiteColor];`
   `segmentedControlAppearance.arrowSize = 10;`
    `segmentedControlAppearance.arrowHeightFactor = 1;`
    `segmentedControlAppearance.arrowPosition = SDSegmentedArrowPositionTop;`
    `segmentedControlAppearance.borderWidth = 1;`

```
SDSegmentView *segmenteViewAppearance = SDSegmentView.appearance;`
```

   `[segmenteViewAppearance setTitleColor:[UIColor colorWithRed:0.71 green:0.7 blue:0.7 alpha:1] forState:UIControlStateNormal];`
   `[segmenteViewAppearance setTitleColor:[UIColor colorWithHex:@"#70ae47" alpha:1] forState:UIControlStateSelected];`
   `segmenteViewAppearance.titleShadowOffset = CGSizeZero;`

```
`SDStainView *stainViewAppearance = SDStainView.appearance;`
```

   `stainViewAppearance.backgroundColor = [UIColor clearColor];`
    `stainViewAppearance.shadowColor = [UIColor colorWithHex:@"#453e34" alpha:1];`
    `stainViewAppearance.shadowBlur = 0;`
    `stainViewAppearance.shadowOffset = CGSizeZero;`
`}`

After performing an animation using auto layout constraints, segment control labels misplaces its positions.

Label frame moves down visually beyond the segment control bounds.

`segmentedViewAppearance.imageSize = CGSizeMake(128, 128);` doesn't seem to work.

`_imageSize` is always 18 x 18.

I'm not sure if this the intended behavior of the segmented control, but when I place the object in a view that is embedded in a Navigation Controller, the segment titles don't show up. I discovered that if I scrolled up within the area where the title should be, the titles eventually showed up, so it seems that the titles are being incorrectly positioned.

I also tried embedding a UIView inside a container view, but I still had the same issue.

Any ideas?

When I run SDSegmentedControl Demo, I try click Disable Segement Button, At last, The app will crash.  I found this code don't check selectedSegmentIndex.
- (void)setEnabled:(BOOL)enabled forSegmentAtIndex:(NSUInteger)index
  {
  [self segmentAtIndex:index].enabled = enabled;
  
  if (index == self.selectedSegmentIndex)
  {
      self.selectedSegmentIndex = [self firstEnabledSegmentIndexNearIndex:index];
  }
  }

The Demo App Crash Log is:

2013-11-11 23:11:46.110 Example[70636:70b] **\* Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Invalid parameter not satisfying: index >= 0 && index < self._items.count'
**\* First throw call stack:
(
    0   CoreFoundation                      0x01b195e4 __exceptionPreprocess + 180
    1   libobjc.A.dylib                     0x017088b6 objc_exception_throw + 44
    2   CoreFoundation                      0x01b19448 +[NSException raise:format:arguments:] + 136
    3   Foundation                          0x010dbfee -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] + 116
    4   Example                             0x0000745b -[SDSegmentedControl segmentAtIndex:] + 363
    5   Example                             0x00006305 -[SDSegmentedControl setEnabled:forSegmentAtIndex:] + 69
    6   Example                             0x000033af -[ViewController disableSegment:] + 191
    7   libobjc.A.dylib                     0x0171a874 -[NSObject performSelector:withObject:withObject:] + 77
    8   UIKit                               0x0026b0c2 -[UIApplication sendAction:to:from:forEvent:] + 108
    9   UIKit                               0x0026b04e -[UIApplication sendAction:toTarget:fromSender:forEvent:] + 61
    10  UIKit                               0x003630c1 -[UIControl sendAction:to:forEvent:] + 66
    11  UIKit                               0x00363484 -[UIControl _sendActionsForEvents:withEvent:] + 577
    12  UIKit                               0x00362733 -[UIControl touchesEnded:withEvent:] + 641
    13  UIKit                               0x002a851d -[UIWindow _sendTouchesForEvent:] + 852
    14  UIKit                               0x002a9184 -[UIWindow sendEvent:] + 1232
    15  UIKit                               0x0027ce86 -[UIApplication sendEvent:] + 242
    16  UIKit                               0x0026718f _UIApplicationHandleEventQueue + 11421
    17  CoreFoundation                      0x01aa283f __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION__ + 15
    18  CoreFoundation                      0x01aa21cb __CFRunLoopDoSources0 + 235
    19  CoreFoundation                      0x01abf29e __CFRunLoopRun + 910
    20  CoreFoundation                      0x01abeac3 CFRunLoopRunSpecific + 467
    21  CoreFoundation                      0x01abe8db CFRunLoopRunInMode + 123
    22  GraphicsServices                    0x031689e2 GSEventRunModal + 192
    23  GraphicsServices                    0x03168809 GSEventRun + 104
    24  UIKit                               0x00269d3b UIApplicationMain + 1225
    25  Example                             0x000022cd main + 141
    26  Example                             0x00002235 start + 53
)
libc++abi.dylib: terminating with uncaught exception of type NSException

Hi all, can I center selected segment programmatically?

For example, after I set Selected Index, can I center selected segment into scrollable nav bar?

[self.segmentedControl setSelectedSegmentIndex:5];
???

Thanks

Luca
