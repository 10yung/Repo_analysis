See: https://github.com/gradle/wrapper-validation-action
When running tests in parallel, we are seeing threading problems with the following line of code:
`private val descriptionServices = ServiceLoader.load(ValueDescription::class.java)`

https://docs.oracle.com/javase/7/docs/api/java/util/ServiceLoader.html says “Instances of this class are not safe for use by multiple concurrent threads.”
Is it possible to add hamkrest as test dependency in multiplatform package?

I am trying to do this 
` commonTest {
            dependencies {
                implementation kotlin('test-common')
                implementation kotlin('test-annotations-common')
                implementation 'com.natpryce:hamkrest:1.7.0.0'
            }
        }`

but that doesn't work. I can see the lib in Intellij but classes are not accessible in tests 
Closes #42.
Something that would just make writing test simpler:
```kotlin
/**
 * Matches a collection with a size that is equal to [size].
 */
fun hasSize(size: Int) = has(Collection<Any>::size, equalTo(size))
```

I called the matcher `containsAll`but there are couple problems with this name:
- this matcher is based on `IsIterableContainingInAnyOrder` which means "equal iterables ignoring order of elements". It's not the same as equal `Set` objects and not the same as `Collection.containsAll`.
- when used inside `apply` closure, it clashes with built-in `containsAll` function (see https://github.com/dkandalov/hamkrest/blob/c421c419294236336db8000bae1325321889208b/src/test/kotlin/com/natpryce/hamkrest/collection_matchers_tests.kt#L166-L166)

I also have doubts that current mismatch description is good. Also passing custom "equality" matcher and nested iterables API looks a bit clunky.

If I am missing something, what is the idiomatic way to do it HamKrest?
Otherwise, are there any plans to implement this (are pull requests welcome)?
