The branch uses I/O for mmap on all data files if enabled with the "mmap" option. To enable, set the environment as follows:

export WIREDTIGER_CONFIG="mmap=true"

The "mmap" option in WiredTiger was used to enable mmap on read-only checkpoints. I renamed that option to "mmap-checkpoint". If you enable the "mmap" option in this branch, all data files will be accessed via mmap.

As we are writing the most recent version to the data store, it is
required to scan all the objects for rollback to stable fix up.

We need to read all the internal pages of the objects to fix up.
History store in-memory pages are not referenced
by any session in WT, evicting them in this checkpoint let them
to be cleaned in the next checkpoint. Store all the in-memory
obsolete pages and add them to the urgent eviction queue at
the end of the checkpoint of history store.

All the interesting work is in 2d560cd, the other two commits are just cleaning up comment formatting.

@agorrod, you're not going to like this much, but absent a real project to fix the problem, it's the only idea I have.

Can you please approve or disapprove the approach, before we do a real review?

Changed the array accessing logic as requested. Had to change (potentially fixed, honestly) the conditional logic to be an `or` instead of an `and`, as accessing the diff properly was impossible when i was 0. 
Initial pr, curious as to what people think about not using hs as a shortening and using history_store. Still have some conflicts to clean up.

One of the more annoying changes here is fixing grammar of comments.
this backports wt-5263

(cherry picked from commit 33204938da7bb1c0722536f9f74854ab59237e89)