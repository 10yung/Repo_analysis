Full pull
Thank you for this handy reference for the ISO countries. I ran into conflict with the key names not matching ISO's key names. ISO uses Alpha-2, Alpha-3, Numeric in displays and discussions. In their CSV sample files, the headings are alpha_2_code, alpha_3_code, numeric_code.
It would be a breaking change to rename them, but I just wanted to note it. It came up when doing the variable names in our project. 
(We're going with Alpha2, Alpha3, Numeric; translating from your files; and avoiding ISO's kebab-case.)

Somewhat related to the hyphen question https://github.com/lukes/ISO-3166-Countries-with-Regional-Codes/issues/27

Using a hyphen in the object key names doesn't play very well with JavaScript and other languages. Please consider using underscores or camelCase.
Hi guys - if you are interested in this mysql relational data I extracted from your files.
I implemented a code generator for C++11 in Python.  If you're at all interested in merging this back into your repo I'm happy to tidy it up some more and take your guidance on it.

Thanks for the super-convenient JSON! :+1: 

-- Nigel

```
#!/bin/getenv python

import json
import codecs

input = codecs.open("all/all.json", 'r', 'UTF-8')

h   = codecs.open("all/all.h",  'w', 'UTF-8')
cpp = codecs.open("all/all.cpp", 'w', 'UTF-8')

dom = json.load(input)

h.write('''
#pragma once

#include <string>

    struct Country
    {
        std::string  name;
        std::string  alpha_2;
        std::string  alpha_3;
        std::string  country_code;
        std::string  region_code;
        std::string  region;
        std::string  sub_region;
    };

    const Country * findByName  (const std::string &);
    const Country * findByAlpha2(const std::string &);
    const Country * findByAlpha3(const std::string &);
    const Country * findByCode  (const std::string &);

''')

cpp.write('''
#include "all.h"

#include <map>

''')

cpp.write("const Country country[%d] = {\n" % len(dom))
for i in dom:
    cpp.write('  { "%s", "%s", "%s", "%s", "%s", "%s", "%s" },\n'%(i["name"], i["alpha-2"], i["alpha-3"], i["country-code"], i["region-code"], i["region"], i["sub-region"]))
cpp.write("};\n\n");

cpp.write("const std::map<std::string, const Country *> countryByName = {\n" )
index = 0;
for i in dom:
    cpp.write('  { "%s", &country[%d] },\n'%(i["name"], index))
    index = index + 1
cpp.write("};\n\n")

cpp.write("const std::map<std::string, const Country *> countryByAlpha2 = {\n" )
index = 0;
for i in dom:
    cpp.write('  { "%s", &country[%d] },\n'%(i["alpha-2"], index))
    index = index + 1
cpp.write("};\n\n")

cpp.write("const std::map<std::string, const Country *> countryByAlpha3 = {\n" )
index = 0;
for i in dom:
    cpp.write('  { "%s", &country[%d] },\n'%(i["alpha-3"], index))
    index = index + 1
cpp.write("};\n\n")

cpp.write("const std::map<std::string, const Country *> countryByCode = {\n" )
index = 0;
for i in dom:
    cpp.write('  { "%s", &country[%d] },\n'%(i["country-code"], index))
    index = index + 1
cpp.write("};\n\n")

cpp.write("""

const Country * findByName(const std::string & name)
{
    auto i = countryByName.find(name);
    return i==countryByName.end() ? NULL : i->second;
}

const Country * findByAlpha2(const std::string & name)
{
    auto i = countryByAlpha2.find(name);
    return i==countryByAlpha2.end() ? NULL : i->second;
}

const Country * findByAlpha3(const std::string & name)
{
    auto i = countryByAlpha3.find(name);
    return i==countryByAlpha3.end() ? NULL : i->second;
}

const Country * findByCode(const std::string & name)
{
    auto i = countryByCode.find(name);
    return i==countryByCode.end() ? NULL : i->second;
}

""")

```

Can i found somewhere a repository with a list of ISO 3166 states ?

Here is what i complete for now, for a [PHP Laravel library](https://github.com/CavaENCOREparlerdebits/laravel-addresses/blob/master/src/database/seeds/StatesSeeder.php), but that very very long to parse and add data from wikipedia.

https://fr.wikipedia.org/wiki/ISO_3166-2:CA
https://fr.wikipedia.org/wiki/ISO_3166-2:US
https://fr.wikipedia.org/wiki/ISO_3166-2:MX
https://fr.wikipedia.org/wiki/ISO_3166-2:FR
