
Hi.
I get an `error 61` when I use a POST request.

The error is here:
`curl_setopt($this->handle, CURLOPT_ENCODING, '');`
Location:  `library/Requests/Transport/cURL.php : Line 100`

When I removed this line, all the POST request works.

I tested it in:
1) Windows 10, Curl 7.55.1 and PHP 7.2.5
2) Ubuntu 18.04 , Curl 7.58.1 and PHP 7.2.22


### Additional information:
- When I execute `$curl = curl_version();`
My `$curl['version_number']` is **473856**

Regards
Some sites require POST requests to be sent as multipart/form-data.
When passing an array as POST-data cURL defaults to multipart/form-data, but Requests will flatten and urlencode it. To avoid this I check if a Content-Type header containing multipart/form-data is set in the arguments to Requests::post.
I have implemented this for both cURL and fsockopen.
This PR consolidates the work done by @dd32 in PR #249 and @soulseekah in PR #318 which both addressed the same issue.

Fixes #248
Closes #249
Closes #318
Looks like these have never run as they weren't included in any of the testsuites.
_[This PR is part of a series to introduce code style checking to the repo]_
_[This PR is part of a series to introduce code style checking to the repo]_

This test should work fine without the `var_dump()`.
_[This PR is part of a series to introduce code style checking to the repo]_

Use PHP native comment style, rather than Perl comment style and align the start of the comments with the code.
_[This PR is part of a series to introduce code style checking to the repo]_

Fix whitespace issues:
* Don't use space indentation.
* Don't use inline tabs.
* Don't use precision alignment
* No multiple consecutive blank lines.
* One space (or a new line) on either side of a concatenation operator.
* Always have a space (or new line) before and after each operator, with the exception of the boolean not `!` and the spread operator.
* No space between the boolean not `!` and what it applies to.
    Note: _This is the opposite of WPCS, but in line with the majority of uses of the `!` operator in this repo._
* Always have a space (or new line) after a comma.
* Don't use horizontal alignment within single line arrays.
* One space between the close parenthesis and the opening curly of function declarations.
* No space on the inside of function call, function declaration, array, control structure or arbitrary parentheses.
    Note: _This is the opposite of WPCS, but in line with the majority of code in this repo._
    Also note: for arrays this won't be enforced as there is no sniff available for this, but the current code-base has been fixed where necessary.
* Multi-line function calls should have each parameter on a new line.
* There should be one space between a control structure keyword and its opening parenthesis.
* For multi-part control structures - `if/else`, `try/catch`, the next keyword should be on a new line.
    Note: _This is the opposite of WPCS, but in line with the majority of code in this repo._
    Also note: This will not be enforced as there is no sniff for it, but is in line with the prevailing code style in the repo.
* End each file with a new line character.
Looks like this code is never used anywhere and it causes issues with PHPUnit cross-version compatibility as the `PHPUnit\Util\Test` class has become `final`.