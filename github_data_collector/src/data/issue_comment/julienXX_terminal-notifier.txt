# Please check everything that applies to your issue:
- [x] I looked in closed issues and it has not already been answered
- [ ] My issue appeared with a terminal-notifier update
- [ ] I'm using a tool that uses terminal-notifier (guard-notifier, node-notifier...)

# To help us debug your issue please include:
- macOS version Catalina
- terminal-notifier version 2.0.0
- installed using homebrew

When you ssh to a Mac that does not have a current UI session (ie, I restarted my Mac before going home from work, and started an ssh session from home), you can't use terminal-notifier as part of a workflow, because it just hangs.

I'm aware that there is "no point" in having a notification, because there is nowhere to view that notification. The problem I have is that the command stops executing, rather than throwing an exception.

I could have a workflow that just ignores the status code of the command, and continues.


In my case, I have a mercurial hook that posts a notification:

`update.notifier = (/usr/local/bin/terminal-notifier -title Mercurial -subtitle 'Update successful' -contentImage ~/.mercurial.png -message "Parent revisions(s): $HG_PARENT1 $HG_PARENT2")`

However, if I try to chain bash commands:

`hg pull upstream && hg up && hg push --rev default`

This fails to execute, because it stops when attempting to post the notification: and requires a Ctrl-C to regain control of my shell.

I think it should return a suitable error code when it is unable to connect to the session, rather than just print the error and wait:

    $ /usr/local/bin/terminal-notifier 
    2019-12-19 16:05:54.070 terminal-notifier[9995:39570] +[NSXPCSharedListener endpointForReply:withListenerName:]: an error occurred while attempting to obtain endpoint for listener 'ClientCallsAuxiliary': Connection interrupted

Hello, 

In file: https://github.com/julienXX/terminal-notifier/blob/master/Terminal%20Notifier/Terminal%20Notifier-Info.plist the value of `NSAllowsArbitraryLoads` has been set to `true`.  A code scanning tool is labelling this as a security breach. May I know what this property is used for, please!?

I did a quick grep for `NSAllowsArbitraryLoads` in the source code, however, looks like no code is directly referencing the item. Could anyone clarify what this piece of config is really doing?

Apple also identifies this as a security issue here: https://developer.apple.com/documentation/bundleresources/information_property_list/nsapptransportsecurity/nsallowsarbitraryloads

Help is appreciated!
Hi juliebnXX, thanks for this amazing piece of software!

I think there's a bug when adding the **-sender** option. I'm using it to customize the notification message.
By adding it, the notification turns into an **alert**, by adding the **buttons** 'close' and 'show' so it doesn't disappear after a while, only when a button is hit.

Kind regards,
Federico.

I have been using terminal-notifier in scripts often executed from FastScripts.
Beta 7 opened a new wrinkle. I imagine for security reasons the -sender and -activate appear to no longer work and hang the command.
Notarization of terminal-notifier does not solve the issue.

Hi @julienXX,

first of all thanks for this neat tool. :)

Since MacOS Catalina (currently in beta), all applications have to be notarized by default. Otherwise, Gatekeeper won't allow to open the app. See:

- https://developer.apple.com/news/?id=06032019i
- https://developer.apple.com/documentation/security/notarizing_your_app_before_distribution
- https://eclecticlight.co/2019/06/07/notarization-in-mojave-and-catalina/

Do you have a developer ID certificate? If yes, would it be possible for you to notarize the app, so it will run without any issues in future MacOS versions?

Thanks in advance!

Cheers
Tilman

Reference: https://github.com/tilmanginzel/alfred-bluetooth-workflow/issues/9#issuecomment-517848591
# Please check everything that applies to your issue:
- [X] I looked in closed issues and it has not already been answered
- [ ] My issue appeared with a terminal-notifier update
- [ ] I'm using a tool that uses terminal-notifier (guard-notifier, node-notifier...)

# To help us debug your issue please include:
- the macOS version you use `10.15`
- terminal-notifier version `2.0`
- how did you install terminal-notifier (binary download, homebrew, ruby gem...)? `homebrew`
- step-by-step reproduction instructions
  - run `terminal-notifier`

```
2019-07-17 22:37:49.263 terminal-notifier[225:1934184] NSSoftLinking - The function 'SLSIsSuppressedByScreenTime' can't be found in the (null) framework.
```
- [X] I looked in closed issues and it has not already been answered
- macOS: 10.12.6
- terminal-notifier: 2.0.0
- installation: homebrew

Since recently, I'm getting an `ApplePersistence=NO` messages for ALL use, even just for a plain `terminal-notifier -title foo -message bar` from the command line.

I've used the same terminal-notifier and macOS version for a long time.

This may be very well be caused by running `defaults write -g ApplePersistence -bool NO` recently. But why does `terminal-notifier` need to complain about this? How can I get rid of the complaint?


Hey,

I'm trying to execute a simple diff check when I click on my notification but it's not working. I tried to add -activate com.apple.Terminal and this one works but after that nothing more. I tried to run an osascript that will open a new terminal window and then run my command but it doesn't work much.

My command
```sh
terminal-notifier -title "My notification" -message "The description" -activate com.apple.Terminal -execute "diff .bashrc .gitconfig"
```

macOS : 10.14.2
terminal-notifier : 2.0.0
Install with `brew install terminal-notifier`

Thanks
There is an error in the README.  There is an example image showing using terminal-notifier for a confirmation question, but the example code next to the image is for a custom icon, not for a confirmation message.  

> - I want sticky notifications or action buttons -> please use [alerter]
> (https://github.com/vjeantet/alerter)

If this is what is meant by "action buttons", then the wrong image was probably removed from the README when that feature was removed from terminal-notifier.

# Please check everything that applies to your issue:
- [X ] I looked in closed issues and it has not already been answered
- [ ] My issue appeared with a terminal-notifier update
- [ ] I'm using a tool that uses terminal-notifier (guard-notifier, node-notifier...)

# To help us debug your issue please include:
- the macOS version you use
10.10
- terminal-notifier version
2.0
- how did you install terminal-notifier (binary download, homebrew, ruby gem...)?
Homebrew
- step-by-step reproduction instructions
Make a simple bash script which fires terminal-notifier (in /usr/local/sbin), make a launchd plist file calling this script with
```
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
    <key>EnvironmentVariables</key>
    <dict>
           <key>PATH</key>
           <string>/usr/local/bin:/usr/local/sbin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/bin:/opt/X11/bin</string>
    </dict>
	<key>AbandonProcessGroup</key>
	<true/>
	<key>GroupName</key>
	<string>admin</string>
	<key>InitGroups</key>
	<true/>
	<key>Label</key>
	<string>YOUR_PLIST_NAME</string>
	<key>Program</key>
	<string>YOUR_SCRIPT_PATH</string>
	<key>RunAtLoad</key>
	<true/>
	<key>StandardErrorPath</key>
	<string>/tmp/YOUR_PLIST_NAME.stderr</string>
	<key>StandardOutPath</key>
	<string>/tmp/YOUR_PLIST_NAMEn.stdout</string>
	<key>StartInterval</key>
	<integer>3600</integer>
	<key>UserName</key>
	<string>YOUR_USERNAME</string>
	<key>WorkingDirectory</key>
	<string>/Users/YOUR_USERNAME</string>
</dict>
</plist>
```

in /Library/LaunchDaemons
(note - StartInterval with a value of 3600 fires the script every hour)

To run the script load the plist 
$ sudo launchctl load PLIST_FILE
To stop it unload the plist file.

Using terminal-notifier the whole script gets stuck as if it was asleep (no error).
I had to kill terminal-notifier so that the bash script resume (terminal-notifier was a sub-process of the script).

I also tried replacing TN with osascript _display notification_ but that doesn't show anything on the user screen.

I thought it was because launchd launched processes are running as root but with UserName it should run as the named user.

Notting suspicious show up in the Console.