**First of all, I'd like to say thanks to all the people who continue using the app and filing helpful reports. You are appreciated and I want you to know it.**

## Context

It's no secret that our release timeline could use some work. Releases are few and far between (about 10 months between [1.3.2](https://github.com/android-password-store/Android-Password-Store/releases/tag/v1.3.2) and [1.3.3](https://github.com/android-password-store/Android-Password-Store/releases/tag/v1.3.3)) and I do not like this. It's also no secret that the project's original creator, @zeapo has had increasingly lesser time for the project and has [handed over](https://github.com/android-password-store/Android-Password-Store/commit/241986e4faddc927b2cc5e2b326cd97d987f5152) all daily maintenance to me and @Skrilltrax.

To remedy this, we're taking some major steps that we hope will smooth out the release machinery, allowing us to deploy fixes faster.

## What's changing

1. Password Store is going to get a new package name and a new Play Store listing.
2. When 1.3.4 is rolled out next week, it will simultaneously go out to the new and old listings.
3. The old (current) listing will be updated to show that no new releases are going to happen, along with a link to my listing.
4. The CI pipeline will soon include a snapshot deployment step that will be pushing a release build from `master` to a dedicated directory on [my server](https://dl.msfjarvis.dev).

I don't anticipate much friction in this migration other than a depressing amount of 1 star reviews from disgruntled users who hate setting things up again.

Suggestions and/or queries about this are welcome and can be posted in this thread.


P.S. Here's my discussion with zeapo about this migration to dispel any fears of this being some hostile takeover.

![keybase chat](https://user-images.githubusercontent.com/13348378/70867821-c561bf00-1f9f-11ea-9839-c81c9ca16087.png)


Hi, I'm trying to clone a password store repository using ssh public key authentication (from a hardened ssh server, meaning cryptos that are considered unsafe are not supported). However, upon pulling from the server, the app shows a dialog with a `TransportException` and the message "Algorithm negotiation fail":

![password-store-ssh-exception](https://user-images.githubusercontent.com/1269113/68616550-8d112180-04c5-11ea-985c-09646f122a92.png)

I've tried both the latest version from the F-Droid store (1.3.2) and latest commit (`b9e3967`) built with Android Studio. Both yield the same error message. I've also upgraded JGit to 5.5.1, hoping that would solve it, but sadly it doesn't. 

The stack trace below seems to suggest that the key exchange between client and server didn't succeed (that's what I conclude from `receive_kexinit` anyway). Could it be that Jsch does not support modern key exchange algorithms such as diffie-hellman-group14-sha256?

```
11-11 20:55:52.551  8306  9194 W System.err: org.eclipse.jgit.api.errors.TransportException: ssh://****: Algorithm negotiation fail
11-11 20:55:52.551  8306  9194 W System.err: 	at org.eclipse.jgit.api.FetchCommand.call(FetchCommand.java:255)
11-11 20:55:52.551  8306  9194 W System.err: 	at org.eclipse.jgit.api.PullCommand.call(PullCommand.java:296)
11-11 20:55:52.551  8306  9194 W System.err: 	at com.zeapo.pwdstore.git.GitAsyncTask.doInBackground(GitAsyncTask.java:68)
11-11 20:55:52.551  8306  9194 W System.err: 	at com.zeapo.pwdstore.git.GitAsyncTask.doInBackground(GitAsyncTask.java:23)
11-11 20:55:52.551  8306  9194 W System.err: 	at android.os.AsyncTask$2.call(AsyncTask.java:333)
11-11 20:55:52.551  8306  9194 W System.err: 	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
11-11 20:55:52.551  8306  9194 W System.err: 	at android.os.AsyncTask$SerialExecutor$1.run(AsyncTask.java:245)
11-11 20:55:52.551  8306  9194 W System.err: 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1167)
11-11 20:55:52.551  8306  9194 W System.err: 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:641)
11-11 20:55:52.551  8306  9194 W System.err: 	at java.lang.Thread.run(Thread.java:764)
11-11 20:55:52.552  8306  9194 W System.err: Caused by: org.eclipse.jgit.errors.TransportException: ssh://****: Algorithm negotiation fail
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(JschConfigSessionFactory.java:191)
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.transport.SshTransport.getSession(SshTransport.java:140)
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.transport.TransportGitSsh$SshFetchConnection.<init>(TransportGitSsh.java:280)
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.transport.TransportGitSsh.openFetch(TransportGitSsh.java:170)
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.transport.FetchProcess.executeImp(FetchProcess.java:138)
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.transport.FetchProcess.execute(FetchProcess.java:124)
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.transport.Transport.fetch(Transport.java:1292)
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.api.FetchCommand.call(FetchCommand.java:244)
11-11 20:55:52.552  8306  9194 W System.err: 	... 9 more
11-11 20:55:52.552  8306  9194 W System.err: Caused by: com.jcraft.jsch.JSchException: Algorithm negotiation fail
11-11 20:55:52.552  8306  9194 W System.err: 	at com.jcraft.jsch.Session.receive_kexinit(Session.java:590)
11-11 20:55:52.552  8306  9194 W System.err: 	at com.jcraft.jsch.Session.connect(Session.java:320)
11-11 20:55:52.552  8306  9194 W System.err: 	at org.eclipse.jgit.transport.JschConfigSessionFactory.getSession(JschConfigSessionFactory.java:145)
11-11 20:55:52.552  8306  9194 W System.err: 	... 16 more
```
It would be very useful if we there was a dragging scrollbar on the right-hand side of the app that shows the letter of the alphabet that scrolling is at, similar to what a lot of Android music apps have. Here's an example I found from a quick internet search, [along with the link to the StackOverflow](https://stackoverflow.com/questions/38507825/android-alphabetical-fast-scrollview-in-recyclerview-with-collapsing-toolbar):

![external-content duckduckgo com](https://user-images.githubusercontent.com/19600707/67232764-0316f100-f410-11e9-8df5-b3f9176005d4.png)

I updated Password Store to version 1.3.3 and now synchronization of the repository is impossible.
I tried to wipe all data and re-configured like it used to be with version 1.3.2 with no joy.
When I try to configure the server via https the following error shows up:
"An erro occurred during a Git operation
Error occurred during the operation,
Message from jgit:
Invalid remote: origin
Caused by: org.eclipse.jgit.errors.NoRemoteRepositoryException:https://github.com/XXX:https://github/XXX/info/refs?service=git-upload-pack not found."

When I try to configure the server using ssh the app says that I forgot to specify a username although it is set properly.

Please help me! The app used to work like a charm but now it is useless!


MacOS 10.13.6
Android 6.0.1
Latest F-Droid 

Syncing on a LAN via ssh to a local machine with a bare git repo. Same setup but with iOS version works fine.

On Android, cloning a local bare git repo fails with the following error:

Message from jgit: ssh://srxx@192.168.0.11:22:org.eclipse.jgit.transport.CredentialItem$StingType:Password:Causedby:null


Implement Android >= Oreo Autofill.

![ezgif-2-5b7cdbea1d60](https://user-images.githubusercontent.com/988914/66044471-e6c71900-e521-11e9-8557-c13f2f828dee.gif)

Issue #410 
Hello,

I configured my SSH server to expect multiple authentication methods:

```
AuthenticationMethods publickey,password
```

When I select "ssh-key" as the method the git pull fails with the following error:

<img src="https://user-images.githubusercontent.com/905221/65830425-9a74a280-e2af-11e9-81a1-49786991076a.png" width="300">

When I select username/password as method the authentication just fails:

<img src="https://user-images.githubusercontent.com/905221/65830433-a2344700-e2af-11e9-8234-dedb948c3d6a.png" width="300">

- jgit Docu: https://www.codeaffine.com/2014/12/09/jgit-authentication/
- Authentication code in Password-Store: https://github.com/zeapo/Android-Password-Store/blob/f05c0b37ca0df5cab4906d5484572d0288c479ed/app/src/main/java/com/zeapo/pwdstore/git/GitOperation.kt#L51

Hello thanks for making the app. One problem I had though was importing SSH keys. After I selected the key I wanted to import and then tried to push (after I registered the key in my git server) it gave me an error saying that the key could not be found. I then tried the key generation option which worked and I can push to the server. I then attempted to select another key I generated (using ConnectBot) and this failed again. I attempted to reselect the one that was generated from the Password store app and this failed again. So I know it is something to do with the import process itself.
I'm fine with using the key generation for now, but I do hope that the import feature is made to work so I can use the same key for all my SSH stuff on that device.
When trying to pull from my computer, I'm getting

Message from jgit: ssh://myuser@server:22: org.eclipse.jgit.transport.CredentialItem$StringType:Password:
Caused by: 
null

I tried deleting the repo and starting a new one. I'm cloning from a bare repo with the correct password to get into my computer. 
When setting up the repo. If we use the OpenKeychain auth, it expects to find the ssh key, and hence raises an exception.

Moreover, it always asks for authorization, for every action... this should not be the right behaviour. This was not handled in the original PR.