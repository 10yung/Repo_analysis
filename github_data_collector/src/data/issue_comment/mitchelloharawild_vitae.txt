Hi,

Running the Marie Curie example of vitae (and my own CV) fails when producing a bibliography, resulting in the following:

```
"C:/Program Files/RStudio/bin/pandoc/pandoc" +RTS -K512m -RTS Untitled.utf8.md --to latex --from markdown+autolink_bare_uris+tex_math_single_backslash --output Untitled.tex --self-contained --table-of-contents --toc-depth 2 --template "C:\Users\JOEROB~1\DOCUME~1\R\WIN-LI~1\3.6\vitae\RMARKD~1\TEMPLA~1\AWESOM~1\RESOUR~1\AWESOM~1.TEX" --number-sections --highlight-style tango --pdf-engine xelatex --biblatex --lua-filter "C:/Users/Joe Roberts/Documents/R/win-library/3.6/rmarkdown/rmd/lua/pagebreak.lua" --lua-filter "C:/Users/Joe Roberts/Documents/R/win-library/3.6/rmarkdown/rmd/lua/latex-div.lua" --wrap preserve --variable tables=yes --standalone --include-in-header "C:\Users\JOEROB~1\AppData\Local\Temp\RtmpKKOCtt\cv-header41ec38652259.tex" 
INFO - This is Biber 2.14
INFO - Logfile is 'Untitled.blg'
INFO - Reading 'Untitled.bcf'
INFO - Found 12 citekeys in bib section 0
INFO - Processing section 0
INFO - Globbing data source 'C:/Users/Joe Roberts/Documents/Untitled/curie.bib'
INFO - Globbed data source 'C:/Users/Joe Roberts/Documents/Untitled/curie.bib' to C:/Users/Joe\ Roberts/Documents/Untitled/curie.bib
INFO - Looking for bibtex format file 'C:/Users/Joe\ Roberts/Documents/Untitled/curie.bib' for section 0
ERROR - Cannot find 'C:/Users/Joe\ Roberts/Documents/Untitled/curie.bib'!
INFO - ERRORS: 1
Error: Failed to build the bibliography via biber
In addition: Warning message:
In RefManageR::as.BibEntry(.) :
  rownames of data.frame not meaningful for creating keys
Execution halted
Warning message:
LaTeX Warning: Empty bibliography on input line 216.
LaTeX Warning: Citation '1' undefined on input line 229.
LaTeX Warning: Citation '2' undefined on input line 229.
LaTeX Warning: Citation '3' undefined on input line 229.
LaTeX Warning: Citation '4' undefined on input line 229.
LaTeX Warning: Citation '5' undefined on input line 229.
LaTeX Warning: Citation '6' undefined on input line 229.
LaTeX Warning: Citation '7' undefined on input line 229.
LaTeX Warning: Citation '8' undefined on input line 229.
LaTeX Warning: Citation '9' undefined on input line 229.
LaTeX Warning: Citation '10' undefined on input line 229.
LaTeX Warning: Citation '11' undefined on input line 229.
LaTeX Warning: Citation '12' undefined on input line 229.
Package rerunfilecheck Warning: File `Untitled.out' has changed.
(rerunfilecheck)                Rerun to get outlines right
(rerunfilecheck)                or use package `bookmark'.
LaTeX Warning: There were undefined references.
LaTeX Warning: Label(s) may  [... truncated] 
```

It seems when globbing the data source it is adding an extra \  into the file path, but I'm not sure how or why. Any ideas?
I added a few extra commands so that the awesome-cv template would also support the cover letter funtionality of awesome-cv.

[example_output.pdf](https://github.com/mitchelloharawild/vitae/files/3937581/example_output.pdf)


<details>
<summary>Example code</summary>

```r
---
name: Claud D.
surname: Park
position: "Software Architect\\enskip\\cdotp\\enskip Security Expert"
address: "42-8, Bangbae-ro 15-gil, Seocho-gu, Seoul, 00681, Rep. of KOREA"
phone: "(+82) 10-9030-1843"
email: "posquit0.bj@gmail.com"
twitter: posquit0
github: posquit0
www: "www.posquit0.com"
date: "`r format(Sys.time(), '%B %Y')`"
recipientname: "Company Recruitment Team"
recipientaddress: |
  Google Inc.\newline
  1600 Amphitheatre Parkway\newline
  Mountain View, CA 94043
letterdate: "December 9th 2019"
lettertitle: "Job Application for Software Engineer"
letteropening: "Dear Mr./Ms./Dr. LastName,"
letterclosing: "Sincerely,"
letterenclosure: "Curriculum Vitae"
letterenclosurename: "Attached"
output:
  vitae::awesomecv:
    keep_tex: true
---

\`\`\`{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
\`\`\`

\makelettertitle

# About Me
Lorem ipsum dolor sit amet, consectetur adipiscing elit. Duis ullamcorper neque sit amet lectus facilisis sed luctus nisl iaculis. Vivamus at neque arcu, sed tempor quam. Curabitur pharetra tincidunt tincidunt. Morbi volutpat feugiat mauris, quis tempor neque vehicula volutpat. Duis tristique justo vel massa fermentum accumsan. Mauris ante elit, feugiat vestibulum tempor eget, eleifend ac ipsum. Donec scelerisque lobortis ipsum eu vestibulum. Pellentesque vel massa at felis accumsan rhoncus.

# Why Google?
Suspendisse commodo, massa eu congue tincidunt, elit mauris pellentesque orci, cursus tempor odio nisl euismod augue. Aliquam adipiscing nibh ut odio sodales et pulvinar tortor laoreet. Mauris a accumsan ligula. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Suspendisse vulputate sem vehicula ipsum varius nec tempus dui dapibus. Phasellus et est urna, ut auctor erat. Sed tincidunt odio id odio aliquam mattis. Donec sapien nulla, feugiat eget adipiscing sit amet, lacinia ut dolor. Phasellus tincidunt, leo a fringilla consectetur, felis diam aliquam urna, vitae aliquet lectus orci nec velit. Vivamus dapibus varius blandit.

# Why Me?
Duis sit amet magna ante, at sodales diam. Aenean consectetur porta risus et sagittis. Ut interdum, enim varius pellentesque tincidunt, magna libero sodales tortor, ut fermentum nunc metus a ante. Vivamus odio leo, tincidunt eu luctus ut, sollicitudin sit amet metus. Nunc sed orci lectus. Ut sodales magna sed velit volutpat sit amet pulvinar diam venenatis.

\makeletterclosing
```
</details>


Currently, `citation_package` and `latex_engine` options are locked by `vitae` package so that users cannot change their values when necessary.

For example, I had to use `citation_package: "none"` to test pandoc-citeproc when using lua-filter instead of biblatex.

Rather than hard-locking those values, we could suggested values as default and allow users to change them when necessary.

https://stackoverflow.com/questions/58216802/r-markdown-vitae-package-undefined-control-sequence-error-when-knitting-to-vit

This should give a nice error in R rather than failing in when rendering the tex. Likely this will be implemented as a consequence of #93.
It would be nicer if we had `date` field in YAML for CV templates.

If date is provided, that could be used as a timestamp to indicate when the CV has been updated.
Should make things easier to maintain, simplify updating templates, and make it easier for adding word and HTML templates in the future.
Related: #8, #24
I have co-authors with two last names, separated by a hyphen, and I did not get expected output from detailed_entries function.

For example, if I want to include any paper from Ursula  [ https://scholar.google.com/citations?user=wB7ClR8AAAAJ ] in my CV, I have to make following correction

```r
pubs$author <- str_replace_all(pubs$author,"Ruiz‐Vera" , "Ruiz--Vera") 
```
to make sure desirable output.

I guess that the same problem can occur in other arguments of detailed_entries. 
# Breaking Changes

* Allowing users to print multiple bib files with preferable citation style using csl file (#52 and #87).
* Added myself (@jooyoungseo) to the author list as the third author as I think this commitment has made breaking changes and I have spent many hours; hopefully, it could be accepted.
* Used [multiple-bibliographies.lua](https://github.com/pandoc/lua-filters/tree/master/multiple-bibliographies).
* Made and arranged `inst/resources` directory by including lua-filter, some widely used csl files (apa6.csl; mla8.csl; acm.csl; ieee.csl; harvard-cite-them-right.csl; chicago17.csl), and the existing bib_format.tex files.
* Made some other required functions in `utils.R`.
* Modified the `cv_document.R` file to make the `vitae` package work with the "multiple-bibliographies.lua" filter.
* Added `academic` template to demonstrate the multiple bib-printing and explain its usage.

# Template

* A minimal usage can be found in the following template: 

``` r
rmarkdown::draft(
  "multi-bib-print-test",
  template = "academic",
  package = "vitae"
)
```

# Basic Usage

* I have copied and pasted the content of `academic` template to illustrate the detailed usage below:

````
---
name: Marie
surname: Curie
position: "Professor"
address: "School of Physics & Chemistry, École Normale Supérieure"
phone: +1 22 3333 4444
www: mariecurie.com
email: "Marie.Curie@ens.fr"
twitter: mariecurie
github: mariecurie
linkedin: mariecurie
date: "`r format(Sys.time(), '%B %Y')`"
output: vitae::awesomecv
csl: "`r vitae:::style('apa6.csl')`" # Replace 'apa6.csl' with your needs. Available options are: 'mla8.csl', 'acm.csl', 'ieee.csl', 'harvard-cite-them-right.csl', and 'chicago17.csl'.
# Or, you can put the "path/to/file.csl" above if you have your own csl file to customize.
nocite: "@*"  # Don't change this line if you want to print all the entries of your bib file(s).
bibliography_key1: "bib/journal.bib"  # Put anything unique for "key1" to remember; it should be matched with bib printing block later.
bibliography_key2: "bib/R-packages.bib"  # Likewise, put anything unique for "key2"; if more bib sections needed, make in the same way below.
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, warning = FALSE, message = FALSE)
library(vitae)
```

# Some stuff about me

 * I poisoned myself doing research.
 * I was the first woman to win a Nobel prize
 * I was the first person and only woman to win a Nobel prize in two different sciences.

# Education

```{r}
library(tibble)
tribble(
  ~ Degree, ~ Year, ~ Institution, ~ Where,
  "Informal studies", "1889-91", "Flying University", "Warsaw, Poland",
  "Master of Physics", "1893", "Sorbonne Université", "Paris, France",
  "Master of Mathematics", "1894", "Sorbonne Université", "Paris, France"
) %>% 
  detailed_entries(Degree, Year, Institution, Where)
```

# Nobel Prizes

```{r}
tribble(
  ~Year, ~Type, ~Desc,
  1903, "Physics", "Awarded for her work on radioactivity with Pierre Curie and Henri Becquerel",
  1911, "Chemistry", "Awarded for the discovery of radium and polonium"
) %>% 
  brief_entries(
    glue::glue("Nobel Prize in {Type}"),
    Year, 
    Desc
  )
```

# Publications

## Refereed Journal Papers

<!-- Notes: copy and paste the following block for any other bibliography sections with the same bibliography key matched that you assigned in YAML  -->
\begingroup
\setlength{\parindent}{-0.5in}
\setlength{\leftskip}{0.5in}

::: {#refs_key1}
:::
\endgroup
<!-- Bib-printing block ends here. -->

## R Packages

```{r, cache = TRUE}
knitr::write_bib(c('ezpickr', 'mboxr', 'vitae'), "bib/R-packages.bib")
```

\begingroup
\setlength{\parindent}{-0.5in}
\setlength{\leftskip}{0.5in}

::: {#refs_key2}
:::
\endgroup
````

For detailed entries, it'd be nice to be able to add bulleted details, as is common for many CV entries, for example: https://drive.google.com/file/d/0B9DjC_ju-eVCQnl3NjJsUkN0LTA/view

Do you think this is possible? How would one code that into the tibble/dataframe? I imagine there would be some tinkering with the Latex template too. 
I was wondering if there is a way to remove a particular field from the bib outputs? I have used `type` field in Zotero to flag certain items, e.g. "MChem" under the "Thesis" bibtype, but would like to remove "MChem" from the pdf printout. I thought `select( )` would work, much like `filter( )` does, but unfortunately it remains in the pdf. Below is the code I have used.

```
bibliography_entries(here("data", "arnold-c.bib")) %>%
  filter(bibtype == "Thesis" & type == "MChem") %>%
  select(-type)
```

I have checked that it does work when you create a tibble, just not when it comes to creating the pdf, i.e. the code below does remove `type` from the tibble `mchem`.

```
mchem <- bibliography_entries(here("data", "arnold-c.bib")) %>%
  filter(bibtype == "Thesis" & type == "MChem") %>%
  select(-type)
```

Any thoughts on what I could use instead?
Thanks,