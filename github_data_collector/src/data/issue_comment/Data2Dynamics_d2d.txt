Hi,

I'm unable to load any model file, due to a Parsing error.
I'm using a trial version of Matlab R2019b, with optimisation and symbolic toolbox.
Thanks for your help!
Romain
---
>> clear all;
arInit
Data 2 Dynamics Software
(arFramework3, def-version 3, c-version code_171219b)
Website: http://www.data2dynamics.org
Contact: Andreas Raue - andreas.raue@fdm.uni-freiburg.de
Copyright 2016 D2D Development Team. All rights reserved.

Clearing old D2D mex files from memory  [OK]
>> arLoadModel('ABC_model');
loading model #1, from file Models/ABC_model.def...

ans =

    17

Error using arParsingError (line 8)
Parsing error in REACTIONS at p1*A_state in model 1 in ABC_model.def

Error in arLoadModel (line 362)
                            arParsingError( fid,  'Parsing error in REACTIONS at %s in model
                            %d', str{1}{:}, m );
There is some code smell in arLink.

There are several arguments for adding temporary data points here specifically for arPPL. The datapoints added here are hardcoded to go into the ppl substruct.

This should really be refactored to use arAddData instead.

Tasks:
1. Develop test for arPPL.
2. Refactor arLink and arPPL to separate concerns.
If I load a model in which I never did a multi-start optimization, the ar.ps struct does not exist (same for ar.chi2s).
Then if I call `arMergeFits` it checks for existence of `ar.ps` in the "empty" model, which does not exist. And I am not able to load the results from already existing multi-starts.

- This is an example of my code:

```
clear all
close all
clc

load('model_name.mat','ar'); % this is the "empty" model
arMergeFits;

% some plotting
```

Is there a way I can circumvent this problem?
It seems that ar.config.useSparseJac is set to 1 in arCompileAll in paricular cases? There's already a default for useSparseJac in arInitFields (which is 0). I've reversed the logic in commit db4e312340c9fb3c432192fadf52f3a154c0a5b1 , since it seems strange to use a sparse jac when you set the flag to 0.

I have a model where if useSparseJac is set to one, the model crashes (including MATLAB).

The error I see in the terminal is:
*** Error in `/usr/local/MATLAB/R2017a/bin/glnxa64/MATLAB': realloc(): invalid next size: 0x00007fb92cd74510 ***

In MATLAB the following is displayed when simulating with full error info:
![image](https://user-images.githubusercontent.com/19836026/43784358-3b11cf28-9a64-11e8-85d8-a151d24a5704.png)

Example case where it happens here:
[crashcase.zip](https://github.com/Data2Dynamics/d2d/files/2267084/crashcase.zip)

Dear d2d developers,
I would like to know if d2d as been used or adapted to calibration of neuro-musculoskeletal model.
There are many muscle properties and your tool may be valuable!
Regards
Mickael
Hi, my model contain more than 1000 ODEs and it take a long time to load it. Is there any way to make it faster(for example, parallel pool)?

Thank you very much!
SBML models with non-constant compartments cannot be imported in d2d.
This is a problem with the SBML importer and SBML support in D2D.

This was originally reported in 
https://github.com/Data2Dynamics/d2d/issues/76

An example model is attached:
[limax_pkpd_39.xml.zip](https://github.com/Data2Dynamics/d2d/files/1792485/limax_pkpd_39.xml.zip)

Trying to load the model with 
```
arImportSBML('limax_pkpd_39.xml)
```
Results in the following message:
```
Specified tEnd
Level 3 packages detected. Information WILL be lost.
Error using arImportSBML (line 128)
non-constant compartments are not yet supported in D2D!
```
Best Matthias
Could you tell me please, why the last lines of the code in this function are commented?
In the model I work with there are some reactions with only a product ( -> A) and for import  to work I had to uncomment this part.

For PREDICTOR and COMPARTMENTS  sections units weren't imported. There is nothing in m.compartment(j).units, but there is information in m.unitDefinition. Can this be used? 

Best regards,
Polina