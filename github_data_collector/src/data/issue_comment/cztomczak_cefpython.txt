Code available in idrisha fork: https://bitbucket.org/idrissha/cefpython/commits/274d2369b0387ef8e7b7cd421ebda037e93c30e6
Code available in idrisha fork: https://bitbucket.org/idrissha/cefpython/commits/292372c1108b99b2a1ee9dfa6637fb4fd949e9af
What went wrong ? I couldn't be able to figure it out, Is there any path, permission issue or am i missing something to upload in this path `/opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp/` where all the build files are.

```
PyInstaller Bootloader 3.x
LOADER: executable is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp/cefapp
LOADER: homepath is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp
LOADER: _MEIPASS2 is NULL
LOADER: archivename is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp/cefapp
LOADER: Extracting binaries
LOADER: Executing self as child
LOADER: set _MEIPASS2 to /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp
LOADER: LD_LIBRARY_PATH=/opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp
PyInstaller Bootloader 3.x
LOADER: executable is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp/cefapp
LOADER: homepath is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp
LOADER: _MEIPASS2 is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp
LOADER: archivename is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp/cefapp
LOADER: Already in the child - running user's code.
LOADER: Python library: /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp/libpython3.5m.so.1.0
LOADER: Loaded functions from Python library.
LOADER: Manipulating environment (sys.path, sys.prefix)
LOADER: Pre-init sys.path is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp/base_library.zip:/opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp
LOADER: sys.prefix is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp
LOADER: Setting runtime options
LOADER: Initializing python
LOADER: Overriding Python's sys.path
LOADER: Post-init sys.path is /opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp/base_library.zip:/opt/lampp/htdocs/cefpython/examples/pyinstaller/dist/cefapp
LOADER: Setting sys.argv
LOADER: setting sys._MEIPASS
LOADER: importing modules from CArchive
LOADER: extracted pyimod00_crypto_key
LOADER: callfunction returned...
LOADER: extracted struct
LOADER: callfunction returned...
LOADER: extracted pyimod01_os_path
LOADER: callfunction returned...
LOADER: extracted pyimod02_archive
LOADER: callfunction returned...
LOADER: extracted pyimod03_importers
LOADER: callfunction returned...
LOADER: Installing PYZ archive with Python modules.
LOADER: PYZ archive: out00-PYZ.pyz
LOADER: Running pyiboot01_bootstrap.py
LOADER: Running wxpython.py
[wxpython.py] CEF Python 66.0
[wxpython.py] Python 3.5.2 64bit
[wxpython.py] wxPython 4.0.7.post2 gtk3 (phoenix) wxWidgets 3.0.5
[0106/140241.428301:ERROR:icu_util.cc(133)] Invalid file descriptor to ICU data received.
Trace/breakpoint trap (core dumped)

```
```
#!/usr/bin/python3
# coding: utf-8
import sys

from cefpython3 import cefpython as cef

if __name__ == '__main__':
    switches={
      "proxy-server": "socks5://localhost:9050",
      "force-webrtc-ip-handling-policy": "default_public_interface_only",
    }
    sys.excepthook = cef.ExceptHook
    cef.Initialize(settings={}, switches=switches)
    window_info = cef.WindowInfo()
    browser = cef.CreateBrowserSync()
    browser.LoadUrl("https://browserleaks.com/webrtc")
    cef.MessageLoop()
    cef.Shutdown()

```
Result:
![WebRTC-Local-IP-leak](https://user-images.githubusercontent.com/23365457/71561142-ad9c3780-2a83-11ea-85cc-f5bd01fce6f6.jpg)
Please help!!!
It would be very useful to have referrer handling methods from the Request class exposed.
Currently they are not declared/implemented in the Request.pyx file

Importing cefpython with python 3.8 raised:
`Exception: Python version not supported: 3.8.0 (default, Oct 23 2019, 18:51:26)`

Arch Linux's package manager installs/updates to python 3.8. Downgrading is non-trivial.
CEF announce:

> CEF Helper app bundle requirements on macOS have changed starting with 3809 branch as described below. These changes are necessary to support the application of different entitlements for each Helper type with notarizing apps for macOS Catalina.
> 
> Your app must now contain 4 different Helper app bundles in the "<appname>.app/Contents/Frameworks" directory:
> <appname> Helper.app
> <appname> Helper (GPU).app
> <appname> Helper (Plugin).app
> <appname> Helper (Renderer).app
>
> These app bundles may be identical except for the name and related Info.plist attributes. Chromium will internally search for and execute the associated Helper whenever a particular process type is required. See issue #2737 for additional details and example CMake configuration changes that can be used to generate these Helpers.

Ref: https://groups.google.com/d/topic/cef-announce/YK6CTvGNhlY/discussion

See upstream commit: https://bitbucket.org/chromiumembedded/cef/commits/e067612e55e371642188c7faf6b629df90a3b34e

Upstream issues:
- https://bitbucket.org/chromiumembedded/cef/issues/2737/cef-7615-crashes-on-launch-due-to-missing
- https://bitbucket.org/chromiumembedded/cef/issues/2744/macos-document-code-signing-process-with
Hi

I can't get cef python to work with dpi adware.
I have cef python 66 with pywin32 224 (python 3.6.8).

I added the method cef.DpiAware.EnableHighDpiSupport() after line 28 of your example cefpython/examples/pywin32.py

But it doesn’t work (see the screenshot). I’ve tested it also with PyQt but the result is the same.

![21_06_2019__12_12_02](https://user-images.githubusercontent.com/44549049/60009661-8ac53c80-9676-11e9-952a-614215c97cf3.png)
![21_06_2019__12_13_06](https://user-images.githubusercontent.com/44549049/60009663-8ac53c80-9676-11e9-9a3f-a129feb4fc9e.png)

As of CEF v76 32-bit is still supported, but this will change in the near future.

Upstream issue:
https://bitbucket.org/chromiumembedded/cef/issues/2676/linux-discontinue-x86-32-bit-build-support
I am trying to install cefpython on MinGW to use it with GTK, but I get the following:

```
$ pip3 install cefpython3
      1 [main] python3 4740 child_info_fork::abort: address space needed by 'msys-ssl-1.1.dll' (0x7B0000) is already occupied
Collecting cefpython3
  ERROR: Could not find a version that satisfies the requirement cefpython3 (from versions: none)
ERROR: No matching distribution found for cefpython3
```

I also tried with `pip install cefpython3==66.0`.