Bumps [concat-stream](https://github.com/maxogden/concat-stream) from 1.4.10 to 1.4.11.
<details>
<summary>Commits</summary>

- [`db0b0e9`](https://github.com/maxogden/concat-stream/commit/db0b0e907258afbb734104ee370ce2f01694095c) 1.4.11
- [`4c4ed11`](https://github.com/maxogden/concat-stream/commit/4c4ed11cc642c362ebd2bc56e571f15a592067d5) backport buffer-from-number fixes
- See full diff in [compare view](https://github.com/maxogden/concat-stream/compare/v1.4.10...v1.4.11)
</details>
<details>
<summary>Maintainer changes</summary>

This version was pushed to npm by [mafintosh](https://www.npmjs.com/~mafintosh), a new releaser for concat-stream since your current version.
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=concat-stream&package-manager=npm_and_yarn&previous-version=1.4.10&new-version=1.4.11)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/jondavidjohn/payform/network/alerts).

</details>
<script src="https://code.jquery.com/jquery-1.11.2.min.js" type="text/javascript" charset="utf-8"></script>

<script src="~/payform-master/dist/jquery.payform.js" type="text/javascript" charset="utf-8"></script>

<script type="text/javascript" charset="utf-8">


    $(document).on('change', '#CreditCardNo', function () {
        $('#CreditCardNo').payform('formatCardNumber');
        $('#expiry').payform('formatCardExpiry');
        $('#CVC').payform('formatCardCVC');
        $('#numeric').payform('formatNumeric');
    });
</script>


![asass](https://user-images.githubusercontent.com/50386934/57341830-7c8c8280-7101-11e9-8ed1-b22bf279543c.PNG)


I am coding in ASP.NET MVC 5 and i am facing the error uncaught typeerror $(...)payform is not a function and i m stuck here i included all the libraries in my project downloaded from GitHub Jquery 

Bugfix of #63 (Caret moved to the end of input after change).
Fixed for LTR only and testable manually only, by index.html and jquery.html.
In the ticket there a clear description of how to reproduce the issue and, consequently how to test it. 
I have created a jquery and javascript index RTL page in order to test RTL as well.
## Steps to reproduce
- set up a card number input with auto formatting
- begin to type in a card number, with enough digits to trigger formatting (eg `4242 42`)
- move caret position somewhere _before_ the last digit, can be anywhere (eg `424|2 42`)
- delete a digit (for instance the second `4` of the example: `42|2 42`)

Caret is then moved to the end of input (eg. `4224 2|`).

(Edit) The same goes when adding a digit in the middle of the current value
- set up a card number input with auto formatting
- begin to type in a card number, with enough digits to trigger formatting (eg `4242 42`)
- move caret position somewhere _before_ the last digit, can be anywhere (eg `424|2 42`)
- add a digit (eg. `4248|2 42`)

Caret is then moved to the end of input (eg. `4248 242|`).

Reproduced on https://jondavidjohn.github.io/payform/

This bug occurs as long as there are enough digits to trigger the formatting. If there is fewer chars (id est, only three digits), the caret position is not changed

## Expected behavior
Caret position should not change
Hi @ddayguerrero, 
i hope this is the right one :)

Thanks,
Francesco
It solves the issue https://github.com/jondavidjohn/payform/issues/56

according to this document https://en.wikipedia.org/wiki/Payment_card_number Dinersclub International could starts with 309
Thanks,
Francesco 
Hi All, 
with the 1.3.0 version it does not validate the DinesClub starts with 309....

Example number 30932281347102
Checking into the code the regex has been changed.

Thanks,
Francesco

It appears that Visa cards (starting with 4) are not validating properly if I include cardNumberInput.  It formats the card number properly but when I tab out after entering 16 digits it removes the last digit.  If I add a space at the end it validates the card number.  If I remove the cardNumberInput setting it validates after 16 digits without error.  And, without formatting, obviously.

If I test with MasterCard it works as expected including formatting.

Thanks for looking at this.
There is a use-case pattern when user presses `Ctrl+A` and then `Backspace` to clear the input. However it doesn't work around delimiters.

How to reproduce:

1. Enter `5213`, then space is automatically inserted: `5213 `.
2. Press `Ctrl+A` and then `Backspace`.

It will remove only the last character, instead of entire string.

---

Also, there is another failing pattern:

Enter `123`, then press `Ctrl+A`, then start to type the replacement number. It will not clear the selected text.
Hello!

Thank you for this great module!

However, when using auto-formatter and entering the numbers into input field, some events are prevented. This happens right before space character is automatically inserted, e.g. when entering `5213 2…`:

- 5, got events
- 2, got events
- 1, got events
- 3, space is inserted, events are not fired
- 2, got events
…

This makes data-binding to fail, because we can't know when value is changed (I'm integrating it with custom Angular 2+ component).

What could be done about this?

Thanks!