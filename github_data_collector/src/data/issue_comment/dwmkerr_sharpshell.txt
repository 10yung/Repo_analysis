**Version of SharpShell used:** 2.7.2.0

**Related type(s) of SharpShell-Server:** Any

Hi there,

the SharpShell.xml file of the nuget package bloats the build output dir and is not required for releases.

I would suggest to either remove it from the nuget package or, if nuget supports this somehow, exclude the file from build output

Keep up the excellent work,
Cheers, DCW

**Version of SharpShell used:** v2.7.2.0

**Related type(s) of SharpShell-Server:** Any

I have an issue with the deskband name - it does not seem to be related to what you say here:
https://github.com/dwmkerr/sharpshell/blob/master/docs/extensions/deskband/deskband.md

_The name used in this toolbar is specified by using the DisplayName attribute on the server class._

Picture speaks a thousand words, so please just see what I mean. Of course I can provide more information if needed.

https://i.imgur.com/xGfNTab.jpg
https://i.imgur.com/7dHNxMJ.jpg

**Log Messages**

If you are seeing unexpected behaviour, please include relevant logs here:

...

There is a guide on getting the logs for SharpShell in the [SharpShell Logging](https://github.com/dwmkerr/sharpshell/blob/master/docs/logging/logging.md) page.

when i using PreviewHandler, i found it can not do preview for system known file extension, for example, .cs, .txt, anyone who have ever encountered this issue? or anyone who know how to fix this issue?
![11](https://user-images.githubusercontent.com/11461836/69821679-5108eb00-123f-11ea-8d2b-cd13112fd897.png)

**Version of SharpShell used:** 2.x.y

**Related type(s) of SharpShell-Server:** SharpContextMenu

Hey there, this is a request for comment, requesting everyones oppinion.
Also, it is a new feature/improvement, which doesn't have a very high priority right now, just wanted to write it down as it might proof useful in the future.

I've have been reading a bit microsoft docs lately and found [this article](https://docs.microsoft.com/de-de/windows/win32/shell/shortcut-choose-method) very interesting.
Basically, **Microsoft discourages the use of IContextMenu** and encourages the use of "static verbs" or "other dynamic verb methods".

They say you shouldn't use IContextMenu because it's over-powered and complicated and there are easier/leightweight options:
- static CreateProcess
- static IDropTarget
- static IExecuteCommand
- static IExplorerCommand
- dynamic Advanced Query Syntax + static verb
- IExplorerCommand
- IExplorerCommandState + static verb


**First:** Maybe SharpShell could provide multiple options to build SharpContextMenu or decide dynamically which option to chose (for registration mainly) to have the least impact.
Of course, we should keep in mind not to make it complicated for new projects/beginners.

**Second:** The docs and examples could highlight even more of [these best practice](https://docs.microsoft.com/de-de/windows/win32/shell/verbs-best-practices) for SharpContextMenu (dos and don'ts).

These two steps could help improve optimizing the ContextMenu if an over-powered IContextMenu isn't really needed. 
Means we need to derive a new `SharpFileThumbnailHandler` class, which is similar to `SharpThumbnailHandler` but implements `IInitializeWithFileStream` instead. We also need to note the usage of the `DisableProcessIsolation` flag as noted in [this thread](https://stackoverflow.com/questions/1733272/ithumbnailprovider-and-iinitializewithitem) to allow the handler to register.

This would resolve issue #307.
**Version of SharpShell used:** 2.7.1

**Related type(s) of SharpShell-Server:** Any

I am attempting to define submenu items **after** the main menu item is expanded. The main menu item is always shown, and what submenu items are shown depend on a connection to a server. I don't want to attempt the connection until the main menu item is expanded, otherwise we are doing this any time Explorer context menus are triggered.

I've attempted:
`MainMenuItem.DropDownOpening += (sender, args) => SetSubMenus();`
SetSubMenus will attempt the connection, set some bools based on that and then call CreateMenu()

I've also tried MouseHover, DropDownOpened, DropDownClosed, MouseEnter but none of those events are handled.

Is there any way to achieve this?
**Version of SharpShell used:** 2.7.x

**Related type(s) of SharpShell-Server:** Any

Since there have been quite a few questions like "Why does my Extension not show up" or "How do I install/register my extension" and others, I will try to add a FAQ related only to registration and installation issues to the docs, referencing the issues and trying to give best practices.

Some of it might be soon obsolete, if/when a new method of registration comes in place, but most of the information will be the same regarding GAC, Registry, Explorer and others. 

**I'll keep this issue, as a reminder and to welcome others to join me in building the FAQ.
If you have - new or old - questions to the registration/installation of Servers, post them here.**

If I have a class derived from SharpPropertySheet and the CanShowSheet method returns true, is the instance of the class valid until the whole Properties Dialog box is destroyed, or only until another pane/sheet is selected, or some other time?

I ask so I can know if I can define and use instance variables, like an open file handle so I am not continually opening and closing files.
When I click on this link:

https://github.com/dwmkerr/sharpshell/blob/master/docs/extensions/propertysheetextension/docs/installing/installing.md

from the the following page:

https://github.com/dwmkerr/sharpshell/blob/master/docs/extensions/propertysheetextension/propertysheetextension.md

(it's down the bottom and labelled as Installing)

I get a 404.
**Version of SharpShell used:** Any

**Related type(s) of SharpShell-Server:** Any

As previously discussed here: https://github.com/dwmkerr/sharpshell/issues/269#issuecomment-525995963

Demand for other Packages (besides SharpShell Package) rises.
Important: The Packages need to be in sync, because currently, the Tools (e.G. Server Manager) need to be built with exactly the same version as SharpShell used in the project.

Also I reccomend making it obvious for consumer, that these additional packages are optionally, dev/IDE-related and not mandatory.

Part of the task to get this automated (CI/CD).

As also stated in the referenced issue, later it's possible that this is replaced/complemented by something like chocolatey.