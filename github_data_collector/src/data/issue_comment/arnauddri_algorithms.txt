
https://github.com/arnauddri/algorithms/blob/736f5ebe59cfd72b778704fe9ba5e0ba25c775fe/data-structures/binary-tree/bst.go#L136

I think it should be 

```go
if parent.Left == h
```

`n` is never gonna equal to `parent.Left` right?, they don't have the same address. We only use `n` pass to function `Compare` to determine which way should we go in the tree. 
Hi, I add a variable 'left'

> h.Left = h.Left.Left'
> h.Right = h.Left.Right

This statement will cause the right node of left to be lost

check it please, thanks


Remove unused code
#2 
Providing a simple Treap implementation. 
Hi,
I suggest implement resize in hash-table.
Like this:
 [https://github.com/shady831213/algorithms/blob/master/hashMap/chainedHashMap/chainedHashMap.go](https://github.com/shady831213/algorithms/blob/master/hashMap/chainedHashMap/chainedHashMap.go)
[https://github.com/shady831213/algorithms/blob/master/hashMap/chainedHashMap/chainedHashMap_test.go](https://github.com/shady831213/algorithms/blob/master/hashMap/chainedHashMap/chainedHashMap_test.go)
:)

should be `(i-1) >> 1`
https://github.com/arnauddri/algorithms/blob/master/data-structures/heap/heap.go#L81
I think this should be `if l.Len() == index {` 
https://github.com/arnauddri/algorithms/blob/master/data-structures/linked-list/linked_list.go#L82
line 150:
result := MakeMatrix(make([]float64, A.cols*A.rows), A.cols, A.rows)

maybe change to:
result := MakeMatrix(make([]float64, A.cols*A.rows),  A.rows, .cols)

the order of the params in not  right ???   :)
