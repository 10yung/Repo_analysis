**Add the following functionality to Admin API**
1. Delete all Roles Claims for all Roles that have a specific Claim Type (Input: Role Claim Type)
2. Add a specific Claim to Roles (Input: List<Roles>, ClaimType, ClaimValue)
3. Get all Roles that have a specific Role Claim Type (Input: Role Claim)

I believe this is a good introduction to having more functionality around Role Claims.
Resolves #430.

Hi! Sorry for a long delay, I was very busy on work last 2 months.

What do you think about this way to make a configuration?

Also I have one issue with making a zero-conf code.
In project `Skoruba.IdentityServer4.Admin.BusinessLogic.Identity` we don't have a reference to project `Skoruba.IdentityServer4.Admin.EntityFramework.Shared.DbContexts` where `AdminIdentityDbContext` and `IdentityServerPersistedGrantDbContext` present.

Also if I'll try to make everything except this two contexts are defaults like using `IdentityUser<TKey>` in [`AdminAspNetIdentityConfigurationBuilder<TKey>`](https://github.com/fatalistt/IdentityServer4.Admin/blob/features/admin-configuration-builder/src/Skoruba.IdentityServer4.Admin.BusinessLogic.Identity/Extensions/AdminServicesExtensions.cs) and specify only a contexts, I've another problem: I can't use `AdminIdentityDbContext` with `IdentityUser<TKey>`.
As docfx 3.0 will provide full integration with docs.microsfot.com we can simplify the process of ship docs, it has grate support for api , static and dynamic documentation. 

We can has a page like this https://dotnet.github.io/docfx/tutorial/walkthrough/walkthrough_overview.html 
and when the 3.0 version come we can jun easily to docs.microsoft.com 
* [Add command to update ef tools globally.](https://github.com/skoruba/IdentityServer4.Admin/compare/dev...danielmeza:patch-1#diff-b781ea4a4c37f17cdeea6a331fb7dd29R25-R27)
* [Initialize providers has-maps to reduce code](https://github.com/skoruba/IdentityServer4.Admin/compare/dev...danielmeza:patch-1#diff-b781ea4a4c37f17cdeea6a331fb7dd29R18-R22)
* [Create contexts has-map to map context with destination path.](https://github.com/skoruba/IdentityServer4.Admin/compare/dev...danielmeza:patch-1#diff-b781ea4a4c37f17cdeea6a331fb7dd29R8-R15)
* [Globalize project name to minimize the effort when the user run the script. ](https://github.com/skoruba/IdentityServer4.Admin/compare/dev...danielmeza:patch-1#diff-b781ea4a4c37f17cdeea6a331fb7dd29R2)

This happen to me when I run the powershell script even before I restore the package and before I double check that the Microsoft.EntityFrameworkCore.Tools package was installed in the Admin project. 

To solve this had to add the followin two lines in the add-migrations.ps1 file. 
```shell
$env:Path += "%USERPROFILE%\.dotnet\tools";
dotnet tool update --global dotnet-ef --version 3.1.0 
```
With it make is update the dotnet ef tools and ensure to install it in a global folder. 

This issue is for track support to the visual studio project template 
![image](https://user-images.githubusercontent.com/16217470/72401950-88fabd80-371b-11ea-8dfa-8156d7183312.png)
We can use the Serene template as sample https://github.com/volkanceylan/Serene/tree/master/Template
First of all, this project is really excellent. I've been using it for a long time
There is a small problem,Avatar is Non editable,When editing personal information

Add vscode configs to build and debug Skoruba.IdentityServer in vscode.
It rebuilds related projects before launch.

![skoruba](https://user-images.githubusercontent.com/12451743/72331024-b8cea480-36cc-11ea-9957-e712a573c8b8.JPG)

# New release 1.0.0-rc1 ðŸš€

## Updates:
Update to .NET Core 3.1 #360
Update Identityserver4 and Automapper #324

## New features:
Add audit logging #61, #391
Add docker support #121
Add support for multiple DbProviders #408, #376
Add health checks #450

## Api improvements:
Add Created HTTP response code for all post methods #381
Add API tests #383
Add logging into API #363
Add validation for API, update API configuration #370
Add CORS support

## New translations and localization improvements:
Finnish translation #410
Spanish translation #368
Danish translation #394
French translation #340
Add language support to DatePicker #345
Configurable localization in AppSettings.json #401
Improve localization of ASP.NET Core Identity #423

## Configuration improvements:
Add project name and icons into AppSettings.json
Add configurable seeding for IdentityServer4 and Asp.Net Core Identity into AppSettings.json #228
Remove extra configuration interfaces and service provider #416

## Fixes:
Fix registration without username, only using email #378
DatePicker's locale doesn't change when switching language #343
Deleting logs fails on .NET Core 3.0 (EF Core 3.0) #426
External login and 2FA or lockout #389
Fix admin logout redirect #374
Fix single quote in PickerTag labels #334
Fix SmtpClient default credentials #328
Disable delete current user #372
Hi

I am experiencing micro-service scenario, and I would like to know what is the propper use of Jwt token when diving in to cross micro-service communication. like the picture below

![image](https://user-images.githubusercontent.com/5870264/71643992-ef092e80-2c9f-11ea-8c59-2ebb2369d995.png)


My user got a token, but he only can talk to microservice A.
In the other hand, microservice A are allowed to talk to microservice B and microservice B allowed to talk to microservice C.

My doubt:

What is the JWT that I have to use to access B and C in that situation? the same the user got to access A? 

or my user only need to access the microservice A, and from that point every body who access microservice A are automaticaly allowed to access B and hence C?

regards