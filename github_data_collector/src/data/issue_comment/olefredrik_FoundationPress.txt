<!-- Found an error in FoundationPress? Great, please let us know! If you use this template and fill in the blanks in the form below, it will be easier to understand how the error can be fixed.

Please note that issues regarding conflicts with third party WordPress plugins, are not supported in FoundationPress, and will be closed.

For general questions about how to use FoundationPress, please use the Gitter chatroom: https://gitter.im/olefredrik/FoundationPress -->

**How can this bug be reproduced?**

1. Step one
On Android Chrome, Press hamburger icon to open menu
2. Step two
Press elsewhere on the screen to close menu
3. Step three
Swipe page left to see unsightly white area outside the viewport area

I tried adding `overflow-x: hidden` to the `body`, but it would not resolve the issue. It seems something happens after the JS has fired while closing the menu. 

**What did you expect to happen?**
I expected there wouldn't  be an awkward white area
**What happened instead?**
White are remains after menu closes
**Please List the Following:**
* OS & version: Android Q, Chrome 77
* Node version (node -v) [Node v6+ is required] : 10.16.1
* FoundationPress version (see line 3 in package.json): 2.10.6
* Foundation version (found in `node_modules/foundation-sites/package.json`) : Tried 6.4.1 and 6.4.3

**Include Test Case** (if applicable):  
<!-- Give us a link to a CodePen or JSFiddle that recreates the issue. -->
You can experience the issue for yourself at [https://foundationpress.olefredrik.com/](https://foundationpress.olefredrik.com/)

doing a 
`npm run build`
can't see most recent changes inside _dist/assets/css/_ files get stuck in previous stage.
in ordert to have a more recent app.css I have to do 
`npm run package`
and then upload the packaged to wordpress site.

I wan't to produce changes locally and upload only the files that need to be updated, not all the theme.

please, any sugestion

thanks.

```
$ npm -v
6.9.0
$ node -v
v10.16.3
$ npm run build

> greenballon-fp@1.0.1 build ~/Documents/green.elglobus/greenballon-fp
> gulp build --production

[14:30:19] Failed to load external module @babel/register
[14:30:19] Requiring external module babel-register
[14:30:20] Loading config file...
[14:30:20] config.yml does not exist, loading config-default.yml
[14:30:20] Using gulpfile ~/Documents/greenballon-fp/gulpfile.babel.js
[14:30:20] Starting 'build'...
[14:30:20] Starting 'clean'...
[14:30:20] Finished 'clean' after 7.39 ms
[14:30:20] Starting 'sass'...
[14:30:20] Starting 'webpack:build'...
[14:30:20] Starting 'images'...
[14:30:20] Starting 'copy'...
[14:30:20] Finished 'copy' after 666 ms
[14:30:25] Finished 'sass' after 4.94 s
[14:30:25] gulp-imagemin: Minified 6 images (saved 55 kB - 27.7%)
[14:30:25] Finished 'images' after 5 s
[14:30:27] Version: webpack 3.12.0
 Asset    Size  Chunks                    Chunk Names
app.js  372 kB       0  [emitted]  [big]  app
[14:30:27] Finished 'webpack:build' after 7.52 s
[14:30:27] Finished 'build' after 7.53 s
```
[npm_list.txt](https://github.com/olefredrik/FoundationPress/files/3583931/npm_list.txt)

the files
     languages/ru_RU.mo
     languages/ru_RU.po

have execution permissions and there is no need for it.

You can see my fork https://github.com/jorge-vitrubio/greenballon

Thanks.
The current code style and PHP compatibility setup is pretty out-of-date, inconsistent and convoluted:
* The Travis script seems to try use your theme to unit test PHPCompatibility.
    Honestly, you don't have to as PHPCompatibility does extensive unit testing itself.
    Just run it once on a high PHP version with a properly set `testVersion` and you're done - or in case you want to test separately for compatibility with PHP 5.6 and above and compatibility with PHP 5.2/5.3-5.5, run it twice, but running it the way it's done now.... is really not very effective.
    See: https://github.com/PHPCompatibility/PHPCompatibility#sniffing-your-code-for-compatibility-with-specific-php-versions
* As this is a WordPress theme, you probably should use `PHPCompatibilityWP` instead of `PHPCompatibility`.
    See: https://github.com/PHPCompatibility/PHPCompatibilityWP
* The Composer file is pointing to the abandoned `wimg/php-compatibility` repo.
    The package was moved to `phpcompatibility/php-compatibility` a year ago....
* `squizlabs/php_codesniffer` is not a direct dependency for your theme, but a dependency of PHPCompatibility(WP). Don't `require` it, but let the package which depends on it manage the supported versions.
* The DealerDirect PHPCS Composer plugin has released a new version and should be updated to use `^0.5.0`.
    Composer treats minors < 1.0 as majors, so this needs to be done explicitly.
    See: https://github.com/Dealerdirect/phpcodesniffer-composer-installer/releases
* You seem to include a `codesniffer.ruleset.xml` file, but don't `require-dev` the needed dependency ([WPCS](https://github.com/WordPress/WordPress-Coding-Standards)) for it.
* The WPCS version which the ruleset seems to be based on is very much out of date and a number of sniffs have been renamed since. This ruleset will not work anymore.
* The ruleset has a non-standard name which means that PHPCS will not pick up on it automatically.
    Please consider renaming the file to `phpcs.xml.dist`.
* The code is not actually checked against the ruleset via Travis anyway, so what is going on here ?
* Please consider using the WP ThemeReview ruleset: https://github.com/WPTRT/WPThemeReview

If this is truly intended as a starter-theme, I would strongly suggest leading by example and setting these things up properly and correctly.
**Please List the Following:**
* OS & version:
* Node version (node -v) [Node v6+ is required] : v10.6.0
* FoundationPress version (see line 3 in package.json): 2.10.6
* Foundation version (found in `node_modules/foundation-sites/package.json`) : 6.5.1

I was looking to put Stripe into my site and I was following their[ "quick start" ](https://stripe.com/docs/development#node)

I just did a `npm install stripe`

Everything was fine until I try to do "npm start"

> npm start
> 
> > foundationpress@2.10.6 start /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress
> > gulp
> 
> [18:24:17] Requiring external module babel-register
> [18:24:46] Loading config file...
> [18:24:46] config.yml exists, loading config.yml
> [18:24:46] Using gulpfile /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/gulpfile.babel.js
> [18:24:46] Starting 'default'...
> [18:24:46] Starting 'build'...
> [18:24:46] Starting 'clean'...
> [18:24:46] Finished 'clean' after 61 ms
> [18:24:46] Starting 'sass'...
> [18:24:46] Starting 'webpack:build'...
> [18:24:46] Starting 'images'...
> [18:24:46] Starting 'copy'...
> [18:25:01] Finished 'copy' after 15 s
> [18:25:04] Finished 'sass' after 19 s
> [18:25:05] Finished 'images' after 19 s
> [18:25:06] 'webpack:build' errored after 20 s
> [18:25:06] Error in plugin "webpack-stream"
> Message:
>     ./node_modules/stripe/lib/utils.js
> Module not found: Error: Can't resolve 'child_process' in '/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/stripe/lib'
> resolve 'child_process' in '/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/stripe/lib'
>   Parsed request is a module
>   using description file: /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/stripe/package.json (relative path: ./lib)
>     Field 'browser' doesn't contain a valid alias configuration
>   after using description file: /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/stripe/package.json (relative path: ./lib)
>     resolve as module
>       /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/stripe/lib/node_modules doesn't exist or is not a directory
>       /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/stripe/node_modules doesn't exist or is not a directory
>       /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/node_modules doesn't exist or is not a directory
>       /Applications/MAMP/htdocs/GetPick/wp-content/themes/node_modules doesn't exist or is not a directory
>       /Applications/MAMP/htdocs/GetPick/wp-content/node_modules doesn't exist or is not a directory
>       /Applications/MAMP/htdocs/GetPick/node_modules doesn't exist or is not a directory
>       /Applications/MAMP/htdocs/node_modules doesn't exist or is not a directory
>       /Applications/MAMP/node_modules doesn't exist or is not a directory
>       /Applications/node_modules doesn't exist or is not a directory
>       /node_modules doesn't exist or is not a directory
>       looking for modules in /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules
>         using description file: /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/package.json (relative path: ./node_modules)
>           Field 'browser' doesn't contain a valid alias configuration
>         after using description file: /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/package.json (relative path: ./node_modules)
>           using description file: /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/package.json (relative path: ./node_modules/child_process)
>             no extension
>               Field 'browser' doesn't contain a valid alias configuration
>               /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/child_process doesn't exist
>             .js
>               Field 'browser' doesn't contain a valid alias configuration
>               /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/child_process.js doesn't exist
>             .json
>               Field 'browser' doesn't contain a valid alias configuration
>               /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/child_process.json doesn't exist
>             as directory
>               /Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/child_process doesn't exist
> [/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/stripe/lib/node_modules]
> [/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/stripe/node_modules]
> [/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/node_modules]
> [/Applications/MAMP/htdocs/GetPick/wp-content/themes/node_modules]
> [/Applications/MAMP/htdocs/GetPick/wp-content/node_modules]
> [/Applications/MAMP/htdocs/GetPick/node_modules]
> [/Applications/MAMP/htdocs/node_modules]
> [/Applications/MAMP/node_modules]
> [/Applications/node_modules]
> [/node_modules]
> [/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/child_process]
> [/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/child_process.js]
> [/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/child_process.json]
> [/Applications/MAMP/htdocs/GetPick/wp-content/themes/FoundationPress/node_modules/child_process]
>  @ ./node_modules/stripe/lib/utils.js 4:13-37
>  @ ./node_modules/stripe/lib/stripe.js
>  @ ./src/assets/js/app.js
>  @ multi ./src/assets/js/app.js
> Details:
>     domain: [object Object]
>     domainThrown: true
> 
> [18:25:06] 'build' errored after 20 s
> [18:25:06] 'default' errored after 20 s
> npm ERR! code ELIFECYCLE
> npm ERR! errno 1
> npm ERR! foundationpress@2.10.6 start: `gulp`
> npm ERR! Exit status 1
> npm ERR! 
> npm ERR! Failed at the foundationpress@2.10.6 start script.
> npm ERR! This is probably not a problem with npm. There is likely additional logging output above.
> 
> npm ERR! A complete log of this run can be found in:
> npm ERR!     /Users/richard/.npm/_logs/2019-08-10T22_25_06_180Z-debug.log


I tried deleting the node_module and doing `npm install` again and it was worked fine, but `npm start` still getting that error.
npm ERR! A complete log of this run can be found in:
npm ERR!     C:\Users\AnithaHR\AppData\Roaming\npm-cache\_logs\2019-07-31T07_07_27_571Z-debug.log
Hi, 

I've got a problem with the original image src size. I'm not sure why but the original image size seem to be a set size. So image the image is larger than this set size I'm getting image pixelation. 

So, in this case, the "intrinsic size" is always 1024px wide. So from what I can tell this is maximum image width. But I've set this size to be 'fp-large' which is 1200px wide. So why is the image not rendering at this size? The original uploaded image size is about 1300px wide. I've attached a screenshot which shows what's happening.
![Screen Shot 2019-07-08 at 8 35 53 am](https://user-images.githubusercontent.com/50315398/60774800-f6baa100-a15c-11e9-9436-71bb844f109e.png)


Hi there is a thread on the main Foundation Github discussing the current state of the project, its starting to sound like Foundation has been abandoned, which obviously puts the future of FoundationPress in doubt.

Any ideas whats happening
I found myself using the Foundation breadcrumbs component quite often, however there was no easy way for me to actually generate breadcrumbs without external plugins. I therefore built [WordCrumbs](https://github.com/bjoluc/wordcrumbs), a tiny PHP package for automatic breadcrumb generation that supports Foundation-style HTML formatting.
If there is any interest in a breadcrumbs feature I would be happy to integrate WordCrumbs in FoundationPress and add a customizer option to enable or disable breadcrumbs!
Any feedback is greatly appreciated!
hi olefredrik.

i think project will be perfect when we have an options for minify version of css and js when compile and build.

app.css for compile and app.min.css for build/archive

app.js and app.min.js same :)