I find it rather surprising that the facade sends each message to every device instead of treating the input as a list of pairs.

I suggest that this is explicitly stated in the documentation. Or the code could be changed.

Also the response array is somewhat buggy: It only contains the last response for each token.
I've got "Sly\NotificationPusher\Exception\AdapterException" while processing one user notification, to my surprise his token was 96 characters length and Pusher check (https://github.com/Ph3nol/NotificationPusher/blob/master/src/Sly/NotificationPusher/Adapter/Apns.php#L270) didn't pass it though. I've googled the question (https://stackoverflow.com/questions/12452448/size-of-iphone-device-token) and it seems like Apple guides are quite clear about it (https://developer.apple.com/library/archive/documentation/NetworkingInternet/Conceptual/RemoteNotificationsPG/APNSOverview.html#//apple_ref/doc/uid/TP40008194-CH8-SW14):

>  APNs device tokens are of variable length. Do not hard-code their size. 

I guess it should be fixed according to guides.
I am sure that it worked before, but recently I found the following log in laravel.log.

```
local.ERROR: exception 'Sly\NotificationPusher\Exception\PushException' with message '400 Bad Request; invalid message' in /mnt/home/apache/....../vendor/sly/notification-pusher/src/Sly/NotificationPusher/Adapter/Gcm.php:72
```
I tested it by creating a simple program, and I confirmed that it works for iOS, meaning that the contents of the message would be OK. But I faced the same error of '400' in case of Android.

I found the following source code in the server. 
```PHP
    public function push(PushInterface $push)
    {
        $client        = $this->getOpenedClient();
        $pushedDevices = new DeviceCollection();
        $tokens        = array_chunk($push->getDevices()->getTokens(), 100);

        foreach ($tokens as $tokensRange) {
            $message = $this->getServiceMessageFromOrigin($tokensRange, $push->getMessage());

            try {
                $this->response = $client->send($message);
            } catch (ServiceRuntimeException $e) {
                throw new PushException($e->getMessage());
            }

            if ((bool) $this->response->getSuccessCount()) {
                foreach ($tokensRange as $token) {
                    $pushedDevices->add($push->getDevices()->get($token));
                }
            }
        }

        return $pushedDevices;
    }
```
The error occurred at `$this->response = $client->send($message);`
(When I checked the source code in GitHub, and I found that the source code is slightly different. Should I update it??)

This is my first time to open an issue in GitHub, so I am not sure how I should do...
Anyway, any information is very helpful because I am now in stuck ....

Hey there,

**I plan to develop a new version of NotificationPusher this year**, including many new features, and a Dockerized standalone microservice (K8s ready). 🙌🕺
Don't worry, this current version will continue to exist as a legacy version.

**This lib has been writen in 2013. 😵**
After **1K+ stars** on Github and **1M+ [installations](https://packagist.org/packages/sly/notification-pusher/stats)**, it could be great to develop a new opus of it!
Of course, this new version will respect all current PHP standards: DDD & TDD powered!

**Some questions for you:**

* What do you think about it?
* Any ideas or suggestions for this new version?

**I take this message to thank all the contributors! THANK YOU, you rocks guys! 💪❤️**

---

**Feel free to sponsor this project with clicking the Github "Sponsor" button! 🤩**
If this allows, I will push the project further (hosted mode, SaaS service and more).
I just found out that 'notificatinData' is required for sending messages through FCM for android. Without that param the response shows no errors but messages don't come up in the android app.

`$params['notificationData'] = ['title' => 'this is my title', 'body' => 'this is my notification text'];`
`$message = new Message('This is an example.', $params);`

So I think the documentation here is misleading.

https://github.com/Ph3nol/NotificationPusher/blob/master/doc/gcm-fcm-adapter.md
This code will send same message twice:
```
    ...
    $pushManager = new PushManager(PushManager::ENVIRONMENT_DEV);
    $push = new Push($gcmAdapter, $devices, $message);
    $pushManager->add($push);

    $pushManager->push();
    $pushManager->push();
```

Is it expected behavior or bug? `PushManager` can't be reused to send another batch of messages?
Hello

Is there any way I can push MDM message such as

`
    {"mdm":"PushMagic"}
`
When is the FCM HTTP v1 API supported?

url: https://firebase.google.com/docs/cloud-messaging/server?authuser=0#choose

Example:
```
curl -X POST -H "Authorization: Bearer ya29.ElqKBGN2Ri_Uz...HnS_uNreA" -H "Content-Type: application/json" -d '{
  "notification": {
    "title": "FCM Message",
    "body": "This is a Firebase Cloud Messaging Topic Message!",
  },
  "topic" : "foo-bar"
}' "https://fcm.googleapis.com/v1/projects/myproject-b5ae1/messages:send HTTP/1.1"
```
Hello when I run the following code, I get the following error.

```
        $push = new Sly\NotificationPusher\Model\Push($adapter, $devices, $message);

        $pushManager->add($push);
        $pushManager->push();

        foreach($push->getResponses() as $token => $response) {
            var_dump($token);
            var_dump($response);
        }
```

`Call to undefined method Sly\NotificationPusher\Model\Push::getResponses()`
I found this 

> WARNING Version v3.0 would support only php 7.0+. Please, update your composer config if needed.

in the README.

However, I don't see any commits that tagged with `3.x`. So I'm wondering how can I install version 3.x, or it just doesn't exist. Thanks!