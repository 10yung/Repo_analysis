Hi, what is the blocker in creating a new version that considers the issues with boost::asio since version 1.70?

I'm aware that the develop branch addressed this issue, but the situation is far from being perfect, especially if you use libraries/repos that include websocketpp like i.e. cpprestsdk.

Attached is a patch for master that works with boost >= 1.70, tested under Windows by compiling the cpprestsdk (VS2017 and boost 1.170, VS2019 and bost 1.71 and 1.72).

I know the patch is far from optimal, but it already would help all the cpprestsdk users that can't downgrade to boost 1.69.
[0001-Make-websocketpp-usable-with-boost-1.70-and-higher.-.zip](https://github.com/zaphoyd/websocketpp/files/4080581/0001-Make-websocketpp-usable-with-boost-1.70-and-higher.-.zip)




Hi,

I've a use case to send a continuous audio stream to a web server using TLS (wss://) and receive corresponding text, in a bidirectional streaming manner. I have to repeatedly send audio to the server until no more audio data. While the audio is being sent, server will start sending responses (with partial results) after some interval(from the time it started receiving audio).

I'm a beginner and could not find any samples or examples to do the above tasks. It would be great if I can get some example or pseudo code to do the same.

Thank you
Hello
I have some difficulties when I use this lib on windows 
my boost is 1.72_0,what should i do?

1>C:\local\boost_1_72_0\boost\asio\impl\executor.hpp(218,1): error C2678: 二进制“==”: 没有找到接受“const Executor”类型的左操作数的运算符(或没有可接受的转换)
1>        with
1>        [
1>            Executor=std::reference_wrapper<boost::asio::io_service>
1>        ]

thanks very much
Fix misplaced quotes, this was leading to spurious ; in compiler cmdline
Remove demanding libc++, clang can link with both libc++ and libstdc++
and platforms have their own defaults, user can demand non defaults via
adding it to cmake flags
Hello,
    I have followed the broadcast server example [here](https://github.com/zaphoyd/websocketpp/blob/master/examples/broadcast_server/broadcast_server.cpp) and it works, but when my client connects to the server (using [socket.io-client](https://github.com/socketio/socket.io-client)) I get a CORS error:
**server**
```
[2020-01-09 10:07:24] [error] Handshake ended with HTTP error: 426
[2020-01-09 10:07:24] [fail] WebSocket Connection [::ffff:10.0.0.119]:57608 v0 
"Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) 
Chrome/79.0.3945.117 Safari/537.36" /socket.io/?EIO=3&transport=polling&t=M-B3tVA 426
websocketpp:28 Upgrade required
```
**client** (using Chrome)
```
Access to XMLHttpRequest at 
'http://10.0.0.112:8090/socket.io/?EIO=3&transport=polling&t=M-B5o2l' 
from origin 'http://localhost:4200' has been blocked by CORS policy: 
No 'Access-Control-Allow-Origin' header is present on the requested resource.
```

How do I enable CORS on the server?

This is my unsuccessful attempt:

```
m_server.set_validate_handler(
	websocketpp::lib::bind(
		&websocket::validate, this,
		::websocketpp::lib::placeholders::_1
	)
);
```
```
bool websocket::validate(websocketpp::connection_hdl hdl) 
{
	server::connection_ptr con = m_server.get_con_from_hdl(hdl);
	con->append_header("Access-Control-Allow-Origin", "*");	

	return true;
}
```
Validate never gets called.
This should fix FTBFS against new scons 3.1.2
https://bugs.debian.org/cgi-bin/bugreport.cgi?bug=947584
something is amazing happened when I compiled this project successfully.
step 1: 
git clone the master branch.

step 2:
mkdir build && cd build

step 3:
cmake ..  

the result seems to be ok ,just like this.
![image](https://user-images.githubusercontent.com/7010986/72000320-00dd6980-327e-11ea-9b48-b7b78dfea009.png)

step 4：
make install
it seems to to be ok anyway, just like this.
![image](https://user-images.githubusercontent.com/7010986/72000397-31bd9e80-327e-11ea-8983-222ba5855d7e.png)

but I can not found the lib as it tell me in the location **"/Users/admin/Desktop/websocketpp-master/build/lib"**. there is no "lib" folder in the "build" folder. 

so where is it ? thanks for your help.
 



For some reasons "system;thread;random;unit_test_framework" was seen as a single module, because of the quotes.
Helps install cmakefiles in right libdir

Signed-off-by: Khem Raj <raj.khem@gmail.com>
I am writing a gateway listening on multi ports for websocket connections, and a timer that must be called every loop. I don't want to use multi threads. Also I want to have a time manager that is not too precise which make a system call at the begining of every frame. The time manager also need to be called in the main loop. I just don't know how to listen on multi ports and how to execute my per-frame callback. Thanks very much!