Command `git fire` instead of `git-fire`
to satisfy my `<subj>`, here's some commits. please merge
with #23 being implemented, the current workspace is left at random state, i.e branch that last stash was pushed.

but i would like it to stay in the branch i was before the fire alarm.

in fortunate case the fire was bogus fire call, i would like to resume my work from the branch i was on.
The rest of the file uses tabs, and having an consistent indentation scheme improves readability.
doesn't really need to set upstream remote every time if we are just pushing to all of them, anyway
To be frank, i really didnt quite grasp the working of git-fire. Would it be better if we had a video demonstration as to how this is useful??
When using git 2.x and the `commit.gpgsign` option is enabled, each commit is automatically signed with gpg. As noted in #30 this usually means that the user has to enter a password, or unlock the gpg key using some other method. This is a problem when having to leave the building because of fire.

This commit solves the problem by adding the --no-gpg-sign flag to the `git commit` invocation if the git version being used starts with a "2". This is achieved by checking the output of `git version` and using grep to match the version number.
When a user has GPG signature by default enabled in `.gitconfig` the GPG agent may require password input or a security key which should be skipped in case of fire.
Maybe you should push the stash aswell to ensure nothing gets lost

The command option is useful, when returning to the office after the fire and want to clean up local and remote branches.

run: `git-fire -d` 
It will delete all [local and remote] branches prefixed with `fire-`

Also introduced variable `BRANCH_PREFIX=fire-`
