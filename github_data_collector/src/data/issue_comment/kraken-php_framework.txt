Hey man, i can't see any commit since 2017, you have abandonned project ?
You have a verry good idea in your hand and i think you can create a better PHP world. ðŸ˜® 
I am very interresting by this framework and if you need help tell me. ðŸ˜ƒ 
this framework is work on windows now?
As example: mgp25/Instagram-API

It requires react/event-loop 0.4.3 and react/socket 0.8 that leads to conflict with react/socket 0.4 which uses kraken-php/network through cboden/ratchet 0.3.

i find out that cboden/ratchet 0.4 support react/socket 0.8. Can you update it please?
Hello,
I get these errors running : php kraken.server
I've enabled the allow_url_include in php.ini and i also gave permissions to /data folder.

These are the errors:

        Throwable trace:
         0. [WarningError] "date(): It is not safe to rely on the system's timezone settings. You are *required* to use the date.timezone setting or the date_default_timezone_set() function. In case you used any of those methods and you are still getting this warning, you most likely misspelled the timezone identifier. We selected the timezone 'UTC' for now, but please set date.timezone to select your timezone." in LogProvider.php:124
         1. [ExecutionException] "ServiceProvider [Kraken\Root\Provider\LogProvider] raised an error." in ServiceProvider:157
         2. [ExecutionException] "ServiceProvider Kraken\Root\Provider\LogProvider failed during registration." in ServiceRegister:352
         3. [ExecutionException] "ServiceRegister could not be booted." in ServiceRegister:92
         4. [InstantiationException] "Core module could not be booted." in Core:79
        Stack trace:
         0. [throwable] Kraken\Throwable\Error\WarningError(...) in ErrorHandler:63
         1. [call] Kraken\Throwable\ErrorHandler::handleError(2, "date(): It is not safe to rely o...", "/home/make/compy/vendor/kraken...", 124, Array) in unknown:0
         2. [call] Undefineddate("Y-m-d") in LogProvider:124
         3. [call] Kraken\Root\Provider\LogProvider->filePath("/home/make/compy/data/log/%lev...", "emergency") in LogProvider:102
         4. [call] Kraken\Root\Provider\LogProvider->createHandler(Kraken\Config\Config, "emergency", 600) in LogProvider:50
         5. [throwable] Kraken\Throwable\Exception\Runtime\ExecutionException(...) in ServiceProvider:157
         6. [call] Kraken\Container\ServiceProvider->throwException(Kraken\Throwable\Error\WarningError) in ServiceProvider:84
         7. [call] Kraken\Container\ServiceProvider->registerProvider(Kraken\Root\Runtime\Core\ProcessCore) in ServiceRegister:342
         8. [throwable] Kraken\Throwable\Exception\Runtime\ExecutionException(...) in ServiceRegister:352
         9. [call] Kraken\Container\ServiceRegister->registerProviders() in ServiceRegister:80
        10. [throwable] Kraken\Throwable\Exception\Runtime\ExecutionException(...) in ServiceRegister:92
        11. [call] Kraken\Container\ServiceRegister->boot() in Core:331
        12. [call] Kraken\Core\Core->bootProviders() in Core:70
        13. [throwable] Kraken\Throwable\Exception\Logic\InstantiationException(...) in Core:79
        14. [call] Kraken\Core\Core->boot() in ProcessBoot:189
        15. [call] Kraken\Root\Runtime\Boot\ProcessBoot->boot("/home/make/compy/data") in kraken.process:37
        16. [main]
Killed

Where is the problem?

Another issue, running a .php file using the Kraken script, i get this error but i think is because kraken.server didn't start:
PHP Fatal error:  Cannot instantiate interface Kraken\Loop\LoopInterface

Thanks
Implement asynchronous Redis driver
At the moment the console server is bugged. Sometimes it stops working and **needs restart to fix the most common problems**,  but sometimes the message routing fails or it does not clean after itself. 

Right now, the best solution for this problem is not to use console, but stick to alternative start method, which in default configuration is:

```
$> php ./data/autorun/kraken.process undefined Main Main
```

This is the logic that works underneath `project:create` command and **it is equal in use**. If there are any subprocesses or subthreads in Main, they will also be fired. **The only con** of this approach is, that you will not be able to use console command, therefore when shuting down the project **you will need to kill all processes manually**.

This is very urgent problem, and should be prioritized to be done for the release of v0.4

At first Filesystem was added only for the need of reading and writing configuration files. Then, the additional abstracitons were added, because they were easy to implement on top of league's filesystem. There is set of drawbacks of using this apporach and would be beneficial to reimplement it. The proposal is:
- Move current Filesystem (`Kraken\Filesystem`) to Cloud (`Kraken\Cloud`) namespace.
- Implement async Filesystem in empty (`Kraken\Filesystem`).

None
None
None