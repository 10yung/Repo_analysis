
#### Problem:

I was playing around with Sortable a few months ago and it was working great for large (~500 rows) tables aside from some strange ghosting issues that only appeared in Chrome on Windows when using Windows built in DPI scaling. The version I was using back then was 1.10.0-rc3

I updated my project to use the latest release of Sortable so I could check if the ghosting issue is still present. Sadly, it is. Additionally there is now a large pause before the tr leaves one tbody and enters into the other tbody.

#### JSBin/JSFiddle demonstrating the problem:

https://jsbin.com/bisucakeze/1/edit?html,js,output is 1.10.0-rc3
https://jsbin.com/pusiboxaji/1/edit?html,js,output is latest
# Nested list tree sort how protect root node?
### Each item can only be moved in the current node，Can it be done?
#### thanks 
![image](https://user-images.githubusercontent.com/37396615/72215232-7598f800-354b-11ea-8139-c12ad63aa47c.png)

If I want to refresh sortable instance so it can handle new items added dinamically, what do I have to do?
 Thanks
#### Problem:

I used sortable with angular 8. I have applied that to dynamic components. sortable is working fine with the list. but if I drag the last one on top and add the new dynamic component. it added just below the last element. before that sortable, it was working fine. if not changed that last one and other. they working fine. please anyone can help me out regarding this issue.

#### JSBin/JSFiddle demonstrating the problem:


---
Before you create an issue, check it:

 1. Try [master](https://github.com/SortableJS/Sortable/tree/master/)-branch, perhaps the problem has been solved;
 2. [Use the search](https://github.com/SortableJS/Sortable/search?q=problem), maybe we already have an answer;
 3. If not found, create an example on [jsbin.com (draft)](http://jsbin.com/vojixek/edit?html,js,output) and describe the problem.

Bindings:
 - Angular
   - 2.0+: https://github.com/SortableJS/angular-sortablejs/issues
   - legacy: https://github.com/SortableJS/angular-legacy-sortablejs/issues
 - React
   - ES2015+: https://github.com/SortableJS/react-sortablejs/issues
   - mixin: https://github.com/SortableJS/react-mixin-sortablejs/issues
 - Polymer: https://github.com/SortableJS/polymer-sortablejs/issues
 - Knockout: https://github.com/SortableJS/knockout-sortablejs/issues
 - Meteor: https://github.com/SortableJS/meteor-sortablejs/issues

In `react-sortablejs`, users are looking for programmatic use of this plugin so they can command Sortable to move items.

This sounds great and I'm not sure if this is possible using a plugin with the current architecture, as many events rely on interactions between mouse events in the DOM.

example:
```tsx
Sortable.move(from: HTMLElement, to: HTMLElement, options)
```

Maybe possible with custom option callback handlers for users to input and then using `Sortable.utils` to do the animation.
Hi Everyone,

We're looking to rewrite SortableJS in Typescript.

Recently, @owen-m1  and I have been working together on the side to try convert the library. We found that it's pretty big and it can't be written overnight — or even in months without **incremental adoption**.

So instead we're going to merge it into master (safely, of course! Read the [process](##process) for how we're going to go about it).

## Why

Typescript the language brings many benefits:

- Included and automatically up to date type definitions.
- Easier maintenance for contributors.
- Faster learning of architecture for new contributors.
- Self generating API docs.
- Intellisense in IDE for DX.

## Process

### Initially,

We're going to _copy and rename_ all files from `*.js` to `*.ts`. With lenient TSConfig settings, we won't have any errors on ts-to-js compilation. We can then release it to master without any issues. This means the code _does not change_, but the files will be primed for conversion.

We'll keep the original Javascript files for reference.

### Over time,

We can slowly chip away (over the next year of 2020) to convert file by file to more modern typescript code.

There are some really easy places to start like `Sortabe.Utils`, and then other places that are harder, like `Sortable` itself. 


### To ensure quality,

We will require tests for each file, function, etc.
We haven't decided any true process for this yet, so if you have any isnights or experience we'd love to hear what you have to offer.

## Tools

These are tools we're planning to use:

- Typescript.
- Testcafe for integration testing.
- Jest for unit testing.
- Rollup for bundling.

## Your feedback

If you have any recommendations, suggestions, queries or concerns, please comment below. No one's an expert but together we can combine and become one big brain.

We'll try our very best to be thorough but there are going to be nuances we accidentally miss.

#### Problem:

When dragging an item from a group to another, and back to the original without release the pointer in the process, the second `onChange` event will have the wrong `from` element, it will be the same as `to`.


#### Problem:



#### JSBin/JSFiddle demonstrating the problem:

https://jsfiddle.net/riyamitra/xtsz58od/5/
https://stackoverflow.com/questions/59523965/sortable-js-swap-direction-horizontal-not-working

 I am facing problem with draggable direction in horizontally scrollable divs. I have used swaped true in horizontal list. I am trying to prevent the vertical direction but it still dragging in vertical direction. how can i prevent its dragging. The dragging element is not revert back to its position if drag vertically. please see jsfiddle/ stackoverflow post for the issue.
I am using the Vue.Draggable binding for SortableJS to build a draggable tree structure.

I built the tree and DnD works just fine. Now I want to implement nesting a node by **dragging it horizontally to the right, under the node that I want to nest it into**.

Here is [my question about that on Stackoverflow](https://stackoverflow.com/questions/59453021/nested-list-tree-how-to-nest-elements-by-dragging-to-the-right) (the Vue.Draggable dev requires such questions to be asked on Stackoverflow but I still haven't received any answer there). So I ask here since I believe that if that feature would be supported by SortableJS then it would also work in Vue.Draggable.

> What would be the approach with Vue.Draggable/SortableJS in order to achieve the functionality as shown in this animated gif?
> ![H7U5D](https://user-images.githubusercontent.com/1393766/71514774-dcaa8180-28a8-11ea-95da-d3a95252179d.gif)
> 
> The default behavior of Sortable for nesting is to drag the element up to the above element until the mouse reaches `emptyInsertThreshold` pixels from the drop zone of the above element but I would like to be able to nest elements by dragging them to the right. Same for un-nesting.
> 
> I have set `emptyInsertThreshold` to `0` to disable the default behavior and now when I drag the element to the right I get the following events fired: `clone` and `start` (in that order).
> 
> But how do I:
> 
> 1. Can get notified when the mouse has traveled the pre-defined distance to the right?
> 2. Inform Vue.Draggable that the ghost element should be nested as a child to the element under which I am doing the horizontal movement?