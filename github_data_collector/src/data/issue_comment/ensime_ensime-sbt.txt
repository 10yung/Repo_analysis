Was there an intentional decision to add ensimeTestOnlyDebug for 1.*?  For some reason it's no included.


### Steps to reproduce

1. `addSbtPlugin("org.ensime" % "sbt-ensime" % "2.5.1")`
2.  sbt.version=1.2.7

### Expected behaviour
ensimeTestOnlyDebug available
...

### Actual behaviour
Not available
...



On Kubuntu 18.04 (and probably other *buntus) the OpenJDK11 install (package: openjdk-11-jdk) is put in "/usr/lib/jvm/java-11-openjdk-amd64/" and the OpenJDK11 source (package: openjdk-11-source) is put in "/usr/lib/jvm/openjdk-11/lib/src.zip".

The issue with this is that ensimeConfig looks for the sources only in the java home directory, as seen here: https://github.com/ensime/ensime-sbt/blob/2.0/src/main/scala/EnsimePlugin.scala#L391

It would be useful if there was a way of specifying the javaSrc folde, now I resort to manually editing the .ensime file afterwards.
`sbt` allowed to `"compile -> compile; test -> test"` . in "Classpath dependencies" string. (the arrow between the width space)
```scala
lazy val mainProject = (project in file("."))
  .dependsOn(subProject % "compile -> compile; test -> test")
```
but `ensime-sbt` plugin not allowed width space.
I want to reduce the people who stumble in a small reason.

ensime.org => ensime.github.io.