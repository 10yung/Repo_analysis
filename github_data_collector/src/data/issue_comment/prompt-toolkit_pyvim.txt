pyvim 3.0.2, prompt_toolkit 3.0.1

Launch pyvim, write e.g. two lines:
```
foo
bar
```
Select first column of both lines with CTRL-v, hit `d`. The first line is deleted, the second line is untouched.
It seems that following [commit `b6e82d98dc2698b1f356ad99c89aec65ccf22bd0`](https://github.com/prompt-toolkit/pyvim/commit/b6e82d98dc2698b1f356ad99c89aec65ccf22bd0), no new release of PyVim was uploaded on PyPi, therefore leaving the former version with the requirement of `prompt-toolkit<2.1.0,>=2.0.0` which causes an exception when having upgraded the toolkit to v3.

Is it possible to upload the latest release on PyPi ?
I really like the idea of this project. I'm curious if people are using Pyvim for their main editor. How does it compare to regular Vim in daily usage?
This pull request implements the various ways to quit vim and/or close tabs/windows: `:q`, `:wq`, `:qa`, `:wqa`, `:wa`, and `ZZ` now behave as they would in vim. Also implements `<C-z>` (suspend_to_background).

There are also various assorted minor bugfixes, typofix, and adding vim aliases for existing commands. Let me know if you'd rather that these unrelated fixes be separated into their own pull requests.

This PR should fix all these tickets:

- https://github.com/prompt-toolkit/pyvim/issues/122
- https://github.com/prompt-toolkit/pyvim/issues/112
- https://github.com/prompt-toolkit/pyvim/issues/19
- https://github.com/prompt-toolkit/pyvim/issues/3
- https://github.com/prompt-toolkit/pyvim/issues/2
The [Language Server Protocol](https://github.com/Microsoft/language-server-protocol) has support for a lot of languages and tools. It would be nice to have access to all these features.
I seem to be odd that my primary method for exiting vim is the 'ZZ' command -- I don't think I've talked to another vim user (f2f). Of course I want that method of exiting pyvim but I've been frustrated in all my attempts to add it to .pyvimrc. 

My closest attempt so far will exit but it does not write the file: 

```
     @editor.add_key_binding('Z', 'Z', filter=ViNavigationMode())
     def _(event): 
         """
         Typing '<shift>zz' in navigation mode should write the buffer and quit.

         (imap ZZ :wq)
         """
         editor_buffer = editor.current_editor_buffer
         write_and_quit(editor,editor_buffer.location)
```

Any suggestions how I can make it both write and quit?

Thanks!
There is still one concern:

- I don't know if it is appropriate to put this command in `pyvim/commands/commands.py`
Application instance do not have `buffers` property in latest prompt_toolkit.
I submit a PR here: <https://github.com/jonathanslenders/pyvim/pull/116/files>
Hi Jonathan,

i want to open encrypted file made by vim that use bf2 and will do some text operation on the fly then save it again.. is it possible to do in python, any clue would be appreciated.

res:
> http://vim.wikia.com/wiki/Encryption
please help modify example/config/pyvimrc
it has some bug
I modify 

#from prompt_toolkit.key_binding.input_processor import KeyPress
from prompt_toolkit.key_binding.key_processor import KeyPress


but I cannot use pyvim to complete code now
