So my `APP_URL` is `http://localhost/laravel/` - when I visit `http://localhost/laravel/health/panel` I can see that health is making requests to `http://localhost/health/resources` which cannot be resolved. I was digging for the reason of this but could not find a solution.

When I visit `http://localhost/laravel/health/resources` myself, I do get the data returned. So why is it that the panel is making requests without `/laravel`?

Note: On package setup the APP_URL wasn't /laravel, I changed it afterwards. 
It's weird that I can actually goto each routes, but the panel requesting something different. 

Cache has been cleared, my laravel version is: `"laravel/framework": "^6.2",`
 Broadcasting (default)           | failing |    Illegal string offset 'date' 

Im getting this when i try to check this is a default installtion with 
        App\Providers\BroadcastServiceProvider::class,  enabled

am i missing something or what should be done to fix this

While this project is good for monitoring a website on a site-by-site basis, it will be really useful if it can be extended to cover a group of websites (perhaps by a configuration file).

This enhancement can be easily achieved because of 2 major and powerful features which this package already provides, which are: 
1. Routes which can serve as API access to the service and
2. It already supports JSON response 

These two can be leveraged on to provide a unified dashboard (similar to services of [OhDearApp](https://ohdear.app/)?) for a group of websites controlled/managed (with some sort of Authentication of course).

This package can be further improved to leverage on Laravel Notification to update this proposed dashboard in real-time. Initial load of the dashboard may make AJAX requests to get the Health status for each of the group of websites/servers, while the page keeps polling/listening for Notifications tom update real-time.

If this is welcomed, I will like to contribute to it, provided there is someone that can help with the design/prototyping of the frontend components (UI design is not really my strength :)).
Is this package support kubernetes pods health check? If support can I have small example?
Response needs to be JSON decoded so we can use the right output in further code.
after upgrading to laravel 6 i got two exceptions
1.Call to undefined function PragmaRX\Health\Checkers\array_get() . 
2. Call to undefined function PragmaRX\Health\Notifications\studly_case()
So i made this PR to fix these problems . please let me know if i'm doing anything wrong
Thanks in advance. 

Hi @antonioribeiro, 
please check if I am right on my suggestion.

I tried to use custom notifier and it's not worked out of the box. So after small digging it's seems that "notifier" config key not used at all. So in that PR I added it in notifications logic (now it's fit for my needs ðŸ˜„).
Please let me know if I am wrong and miss something,

Thanks!
I am getting this idea from the new Laravel's flare/ignition package.

Can this package include a kind of hint for some of the reports that needs some tweaks for improvement? E.g. the check for *ServerLoad* reports:

> Your server might be overloaded, current server load values are "2.52, 1.88 and 1.67", which are above the threshold values: "2, 1.5 and 1".

Is there no way of appending a link to that response that gives more insight in that specific context? E.g.

> Your server might be overloaded, current server load values are "2.52, 1.88 and 1.67", which are above the threshold values: "2, 1.5 and 1". Check [some stackoverflow or web article link](https://xyz.com) for some ideas on how to improve this


Hey,

This package support the possibility to customize the resources in `config/health/resources`. Upon doing so, the resources in the packages are skipped completely. It's quite a shame to copy-paste all resources just because one resource needs a bit of customization.

Would it be possible to merge the resources in the config directory and the resources in the package? That way, most code is maintained in the package and only that what needs to be changed is available in developer projects

Let me know what you think :)
Hey,

This seems like a nice package to support our dev team in ensuring everyone has a stable dev environment. I looked through the checks and right now it kinda supports only one configuration.

Would it be possible to support multiple configurations for different environments?
For example: local a check to test whether the routes and configs are cached makes no sense, but on production, that would be a valid check. 

And within checks it would also be nice to provide several configurations, for example the `MySqlConnectable` uses a hardcoded `localhost` connection. But for production code and database don't live on the same machine

Let me know what you think :)