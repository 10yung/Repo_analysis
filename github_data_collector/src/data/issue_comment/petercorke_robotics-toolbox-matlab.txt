Is the function "slcamera ()" of the camera module in sl_ibvs of the simulink module self-defined or comes with the toolbox?
Hello, author , I used Matlab robotics toolbox to make this GUI,  https://github.com/borninfreedom/matlab-robotics-GUI-tool.  It is convenient for users who are accustomed to using GUI.  Can you merge this GUI into your project ?
Needs to be a subclass of Navigation
Needs to handle more cases, currently just a subset, full implementation is https://github.com/ghliu/pyReedsShepp/blob/master/reeds_shepp/src/reeds_shepp.cpp
Is there any plan for porting this toolbox to Julia language?
Run method should accept control inputs that are constant for the duration.
Should support car graphic as per plot_vehicle
 Can I define additional constraints on link variables (such as `q2+q3<pi`)?

Collision model is missing, how can I define it?
https://github.com/petercorke/robotics-toolbox-matlab/blob/45e5a0b4544bf24b818ddc63aebb221a91dcb13a/%40SerialLink/collisions.m#L23

Collision model in pHRIWARE is not updated for 4 years. 
https://github.com/bryan91/pHRIWARE/blob/master/next/Classes/CollisionModel.m
Link.double converts link parameters to numeric (double) type

dl = l.double is a Link object in which all the parameters are
numeric ('double') type.

Useful when you are using Pi=sym('pi') to avoid round off errors
(e.g in sin(Pi/2)), but later you want to pass the link object to
a method (e.g. ikine) which only supports real numbers.

Will give an error if a symbolic variable is not convertible to
double number.

See also SerialLink.double

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

SerialLink.double converts SerialLink object parameters to numeric (double) type

dr = r.double is a SerialLink object in which all the parameters are
numeric ('double') type.

Useful when you are using Pi=sym('pi') to avoid round off errors
(e.g in sin(Pi/2)), but later you want to pass the SerialLink object to
a method (e.g. ikine) which only supports real numbers.

Will give an error if a symbolic variable is not convertible to
double number.

See also Link.double

Author: Amin Yahyaabadi (aminyahyaabadi74@gmail.com)
This fails, tool transform fails to be handled properly by dh.command
 
```
L1 = 5; L2=4; L3 = 3; L4 = 2;
dh=DHFactor( 'Tz(L1)*Rz(q1)*Tx(L2)*Rx(q2)*Ty(L3)*Ry(q3+pi)')
r = eval( dh.command('myrobot') )
r.tool=troty(pi)*transl([ 0 0 L4])
r.plot([0 0 0])
```


Hi, I am trying to get the symbolic inverse kinematics for a RRR robot but i am getting some errors. Below is the input:

L1 = Revolute('alpha', 0, 'a',1, 'd', 0, 'qlim', [-pi pi]);
L2 = Revolute('alpha', 0, 'a',1, 'd', 0, 'qlim', [-pi pi]);
L3 = Revolute('alpha', 0, 'a',1, 'd', 0, 'qlim', [-pi pi]);
R = SerialLink([L1 L2 L3]);
sol = R.ikine_sym(3);

And the output:

----- solving for joint 1
subs sin/cos q1 for S/C
cant solve this equation
k = 1     2
ans = tx*cos(q1) + ty*sin(q1) - 1 == cos(q2) + cos(q2)*cos(q3) - sin(q2)*sin(q3)
     ty*cos(q1) - tx*sin(q1) == sin(q2) + cos(q2)*sin(q3) + cos(q3)*sin(q2)
 
Error using SerialLink/ikine_sym (line 191)
cant solve

Error in closedform (line 17)
sol = R.ikine_sym(3);
![image](https://user-images.githubusercontent.com/46031424/57384742-147c8180-717f-11e9-984d-0d737d1d66f7.png)
What could be the cause of this error?
I am trying to generate a trajectory to move the manipulator.