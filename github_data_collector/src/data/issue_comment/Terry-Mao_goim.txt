
pkg/time/timer.go 216,在执行TimerData里面的函数的时候,不是异步执行，在实际调用的时候，传入的函数也没有异步
在堆调整的时候，不断比较子节点和父节点，直到子节点不在小于父节点，或者子节点和父节点一致了

```
func (t *Timer) up(j int) {
	for {
		i := (j - 1) / 2 // parent
		if i == j || !t.less(j, i) {
			break
		}
		t.swap(i, j)
		j = i
	}
}
```
所有服务使用容器启动：
https://github.com/maguowei/goim/blob/master/docker-compose.yaml
中文文档 和 工程 不一样了，目录对不上，请大神更正
看起来用了makefile 更加轻松了。
E0822 13:38:14.057201   46837 client.go:551] discovery: client.Get(http://127.0.0.1:7171/discovery/polls?appid=infra.discovery&env=dev&hostname=mymac&latest_timestamp=1566449420450314000) error(Get http://127.0.0.1:7171/discovery/polls?appid=infra.discovery&env=dev&hostname=mymac&latest_timestamp=1566449420450314000: context canceled)
E0822 13:38:26.553473   46837 server_websocket.go:185] the step: 1 
E0822 13:38:26.553569   46837 server_websocket.go:199] the step: 2 
E0822 13:38:26.553686   46837 server.go:51] the response challengeKey=iz5JCnLhHRPukYzmSaYSGw==  : theSec-WebSocket-Accept =  %!(EXTRA string=rxOKx+GqvK6ti7hHdVynZJWU/MM=)
E0822 13:38:26.553714   46837 server_websocket.go:213] the step: 3 
E0822 13:38:56.555451   46837 server_websocket.go:179] key:  remoteIP: 192.168.0.120:58692 step: 3 ws handshake timeout
E0822 13:39:27.499929   46837 server_websocket.go:185] the step: 1 
E0822 13:39:27.500004   46837 server_websocket.go:199] the step: 2 
E0822 13:39:27.500078   46837 server.go:51] the response challengeKey=VDAz/NS8tePBR7+nz9WljA==  : theSec-WebSocket-Accept =  %!(EXTRA string=kSrLc/fKwgrwv6xNXpg/FbXNqlI=)
E0822 13:39:27.500105   46837 server_websocket.go:213] the step: 3 
E0822 13:39:57.503124   46837 server_websocket.go:179] key:  remoteIP: 192.168.0.120:58788 step: 3 ws handshake timeout
E0822 13:40:44.072768   46837 server_websocket.go:225] the step: 4 
E0822 13:40:44.072808   46837 server_websocket.go:225] the step: 4 
E0822 13:40:44.072809   46837 server_websocket.go:227] get the proto from the channel error:write tcp 192.168.0.137:3102->192.168.0.120:58692: use of closed network connection 
E0822 13:40:44.072871   46837 server_websocket.go:227] get the proto from the channel error:write tcp 192.168.0.137:3102->192.168.0.120:58788: use of closed network connection 
E0822 13:40:44.072894   46837 server_websocket.go:233] key: e93cbaeb-5ff0-468f-9ddf-55fbd89de994 remoteIP: 192.168.0.120:58692 step: 4 ws handshake failed error(write tcp 192.168.0.137:3102->192.168.0.120:58692: use of closed network connection)
E0822 13:40:44.072906   46837 server_websocket.go:233] key: 387145ed-0066-4f89-99ea-32da13fb8b68 remoteIP: 192.168.0.120:58788 step: 4 ws handshake failed error(write tcp 192.168.0.137:3102->192.168.0.120:58788: use of closed network connection)
E0822 13:40:58.448680   46837 server_websocket.go:185] the step: 1 
E0822 13:40:58.449234   46837 server_websocket.go:199] the step: 2 
E0822 13:40:58.449325   46837 server.go:51] the response challengeKey=BQyJNSplCzI6m0sBFVutUw==  : theSec-WebSocket-Accept =  %!(EXTRA string=7vN4XO201oIhyfIL126Rw2uVH5c=)
E0822 13:40:58.449344   46837 server_websocket.go:213] the step: 3 
E0822 13:40:58.455288   46837 server_websocket.go:225] the step: 4 

代码版本：d5d3d0ebd4608571b71f65cbd800bb0b8e9e84fa
代码文件：internal/job/job.go:121
函数：func (j *Job) newAddress(insMap map[string][]*naming.Instance) error 
j.cometServers在goroutine里被修改，但是在其他的goroutine里会被使用，而没有加锁。
我有看到修改方式直接重新赋值map，而不是修改map的键值。
请问这样是否有问题。谢谢
删除原有go.mod,然后使用gomod重新获取最新版后,运行出现flag redefined: region,
检查了一下,发现是因为原有的go.mod里面的discovery使用的是github.com/bilibili/discovery v1.0.1,而更新后是github.com/bilibili/discovery v1.1.0,新版的discovery里面导入了github.com/bilibili/kratos/pkg/conf/env,这个里面定义过Region,	Zone ,DeployEnv ,所以会出现flag重复赋值的bug.请问除了使用老版本的discovery,或者修改源码,有什么好的办法解决吗 @lei-cao 
	if mask {
		maskKey, err = c.r.Pop(4)
		if err != nil {
			return
		}
	}
	// read payload
	if payloadLen > 0 {
		if payload, err = c.r.Pop(int(payloadLen)); err != nil {
			return
		}
		if mask {
			maskBytes(maskKey, 0, payload)
		}
	}
make run 之后，执行了 go run examples/javascript/main.go
尝试从localhost:1999打开index.html时，报如下错误：
E0713 11:23:36.451607    5714 server_websocket.go:179] key:  remoteIP: 127.0.0.1:55564 step: 3 ws handshake timeout