Hi, I want to use Pascal VOC dataset for object detection; at the end I want to get:
1. Get mAP and recall metrics for overall and for each class 
2. Bounding boxes values and score for top 100 bounding boxes
Can anyone suggest how to get them? Thanks
[19:58:06] src/engine/threaded_engine_perdevice.cc:101: Ignore CUDA Error [19:58:06] /home/ubuntu/mxnet-distro/mxnet-build/3rdparty/mshadow/mshadow/./tensor_gpu-inl.h:35: Check failed: e == cudaSuccess: CUDA: initialization error
Stack trace:
  [bt] (0) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x6ccefb) [0x7fbdf3210efb]
  [bt] (1) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x38ef552) [0x7fbdf6433552]
  [bt] (2) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3912c7e) [0x7fbdf6456c7e]
  [bt] (3) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x3905641) [0x7fbdf6449641]
  [bt] (4) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x38fb1d1) [0x7fbdf643f1d1]
  [bt] (5) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x38fc124) [0x7fbdf6440124]
  [bt] (6) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(mxnet::NDArray::Chunk::~Chunk()+0x3c2) [0x7fbdf666c9a2]
  [bt] (7) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(+0x6d06aa) [0x7fbdf32146aa]
  [bt] (8) /data4/dyk/anaconda3/envs/dykDB/lib/python3.7/site-packages/mxnet/libmxnet.so(MXNDArrayFree+0x54) [0x7fbdf63a97d4]


------------------------------------
When the above error is displayed during training, but the training is not interrupted, how can I avoid this error (warning)?



mobilenet variants use DUC modules similar to mobile_pose models rather than deconv layers.

        * test.py in scripts/tracking
        * benchmark.py in scripts/tracking
        * dataloader in gluoncv/data/otb
        * nerwork with Simplified alexnet in gluoncv/model_zoo/siamrpn/siamrpn_tracker.py
        * generate_anchor or IOU in gluoncv



I tried  yolov3 train mode with cpu to understand code ,l but reported segmentation fault 
i was block hear for several days didnt get any clue, any one meet this issue?? i tried ssd same isse also

NFO:root:Namespace(batch_size=64, data_shape=416, dataset='voc', epochs=200, gpus='0', label_smooth=False, log_interval=100, lr=0.001, lr_decay=0.1, lr_decay_epoch='160,180', lr_decay_period=0, lr_mode='step', mixup=False, momentum=0.9, network='darknet53', no_mixup_epochs=20, no_random_shape=False, no_wd=False, num_samples=16551, num_workers=1, resume='', save_interval=10, save_prefix='yolo3_darknet53_voc', seed=233, start_epoch=0, syncbn=False, val_interval=1, warmup_epochs=0, warmup_lr=0.0, wd=0.0005)
INFO:root:Start training from [Epoch 0]

Segmentation fault: 11

Stack trace:
  [bt] (0) 1   libmxnet.so                         0x000000010ee782b0 mxnet::Storage::Get() + 4880
  [bt] (1) 2   libsystem_platform.dylib            0x00007fff66bca42d _sigtramp + 29
  [bt] (2) 3   libmxnet.so                         0x000000010f864018 guard variable for dmlc::ThreadLocalStore<mxnet::engine::ThreadedEngine::BulkStatus>::Get()::inst + 686304
  [bt] (3) 4   libmxnet.so                         0x000000010f1b3751 mxnet::Storage::Get() + 3393457
  [bt] (4) 5   libmxnet.so                         0x000000010f050dd5 mxnet::Storage::Get() + 1941045
  [bt] (5) 6   libmxnet.so                         0x000000010f051dba mxnet::Storage::Get() + 1945114
  [bt] (6) 7   libmxnet.so                         0x000000010f03899f mxnet::Storage::Get() + 1841663
  [bt] (7) 8   libmxnet.so                         0x000000010e7d8e61 mxnet::io::ImdecodeImpl(int, bool, void*, unsigned long, mxnet::NDArray*) + 3073
  [bt] (8) 9   libmxnet.so                         0x000000010e7366c7 std::__1::enable_if<(__is_forward_iterator<mxnet::NDArray**>::value) && (is_constructible<mxnet::NDArray*, std::__1::iterator_traits<mxnet::NDArray**>::reference>::value), void>::type std::__1::vector<mxnet::NDArray*, std::__1::allocator<mxnet::NDArray*> >::assign<mxnet::NDArray**>(mxnet::NDArray**, mxnet::NDArray**) + 30295

Segmentation fault: 11

FeatureExtractor, FPNFeatureExpander cannot support float16
Training semantic segmentation models on Cityscapes is fine using MXNet 1.4.1. Using version > 1.4.1 will cause training hang. Needs investigation. 
Hi guys,

I just discovered the gluon-cv library and started to play with it. I followed both tutorials about Pose Estimation by using  **simple_pose** end **alpha_pose** models on cpu and gpu.

No problem for simple_pose (cpu and gpu). Then, I tried to do a simple pose estimation on an image using the '**alpha_pose_resnet101_v1b_coco**' model but I encountered an error when calling **heatmap_to_coord_alpha_pose** when using my gpu:

`mxnet.base.MXNetError: [11:33:03] src/imperative/./imperative_utils.h:71: Check failed: inputs[i]->ctx().dev_mask() == ctx.dev_mask() (1 vs. 2) : Operator broadcast_mul require all inputs live on the same context. But the first argument is on gpu(0) while the 2-th argument is on cpu(0)`

Here is the shortest code to reproduce the error :

```
from gluoncv import model_zoo, data, utils
from gluoncv.data.transforms.pose import detector_to_simple_pose, heatmap_to_coord, detector_to_alpha_pose, heatmap_to_coord_alpha_pose

import cv2

import mxnet as mx

image = cv2.imread('soccer.png')

mx_image = mx.nd.array(image).astype('uint8') # cast in mx array needed for detector

device = mx.gpu(0)
cpu = mx.cpu()

detector = model_zoo.get_model('yolo3_mobilenet1.0_coco', pretrained=True,ctx=device)
pose_net = model_zoo.get_model('simple_pose_resnet18_v1b', pretrained=True,ctx=device)
pose_net2 = model_zoo.get_model('alpha_pose_resnet101_v1b_coco', pretrained=True,ctx=device)

detector.reset_class(["person"], reuse_weights=['person'])

mx_image, img = data.transforms.presets.yolo.transform_test(mx_image)
class_IDs, scores, bounding_boxes = detector(mx_image.as_in_context(device))


######## simple_pose ##########################
print('######################  Simple Pose  ###############################')
posenet_input, upscale_bbox = detector_to_simple_pose(img, class_IDs, scores, bounding_boxes)
predicted_heatmap = pose_net(posenet_input.as_in_context(device))

print(f'predicted_heatmap: {predicted_heatmap.context}')
pred_coords, confidence = heatmap_to_coord(predicted_heatmap.as_in_context(device), upscale_bbox) 


######## alpha_pose ##########################
print('######################  Alpha Pose  ###############################')
posenet_input, upscale_bbox = detector_to_alpha_pose(img, class_IDs, scores, bounding_boxes)
predicted_heatmap = pose_net(posenet_input.as_in_context(device))

print(f'predicted_heatmap: {predicted_heatmap.context}')
pred_coords, confidence = heatmap_to_coord_alpha_pose(predicted_heatmap.as_in_context(device), upscale_bbox ) 

```
The previous code prints the respective context of the first argument before calling **heatmap_to_coord_alpha_pose** : `predicted_heatmap: gpu(0) `.


I manage to make it work by replacing **device** by **cpu** in the last line. But Shouldn't  such a function be as context-agnostic as **heatmap_to_coord** ?

Thanks for your work.


1. when i  train the mobile_pose_mobilenetv3_small, it appears :                                              
 ValueError: "mobile_pose_mobilenetv3_small" is not among the following model list, my gluoncv is 0.5

2. when i download the params and json,yolo3_mobilenet0.25_coco is not the weights
net = gcv.model_zoo.get_model('yolo3_mobilenet0.25_coco', pretrained=True)
Model file is not found. Downloading.
Downloading C:\Users\zhangyunming-os\.mxnet\models\yolo3_mobilenet1.0_coco-66dbbae6.zip