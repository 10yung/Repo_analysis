- cocos2d-x version: 3.17.1

```C++
    @Override
    protected void onDestroy() {
        if(gainAudioFocus)
            Cocos2dxAudioFocusManager.unregisterAudioFocusListener(this);
        super.onDestroy();

        Cocos2dxEngineDataManager.destroy();

        android.os.Process.killProcess(android.os.Process.myPid()); // add  this line
    }
```
- cocos2d-x version: 3.17
- devices test on: Android & iOS

Steps to Reproduce:

1. Create a simple example with 2 scenes: MainScene and GameScene. Use `replaceScene` for swtich between scenes. 
2. In MainScene, call this methods:

```
AudioEngine::stopAll();
AudioEngine::play2d("sounds/music.mp3", true, 0.3f);
```
Where music is some mp3 random file.
And put a button for switch to GameScene.

3. In GameScene put a button for go back to MainScene.

Ok, now, try the following:

1. Open the game. "MainScene" is the current scene and the sound works perfect.
2. Touch the button for switch to "GameScene". The sound continues working.
3. Now, touch the button for switch to "MainScene" again. The sound stops and it doesn't work anymore.

I had this problem only in Android (in iOS works perfect) and using a mp3 file. I resolved this issue replacing the mp3 with a .wav file. Something are working wrong in Android using AudioEngine and mp3 files.


In accordance with the statement made by @Mee-gu
Not sure if I should report it since Arch is not an officially supported distribution, but this problem did not occur prior to 4.0.

- cocos2d-x version: 4.0
- devices test on: Arch Linux 4.19.93-1-lts

Steps to Reproduce:

1. Build and run any project.

Additional info:
Crash occurs in cocos2d/cocos/renderer/backend/opengl/ProgramGL.cpp inside ProgramGL::computeLocations() function, on this line:
`location = glGetUniformLocation(_program, UNIFORM_NAME_MVP_MATRIX);`
Next stack frame is:
radeonsi_dri.so![Unknown/Just-In-Time compiled code]

I'm using mesa drivers 19.3.1-1.
My GPU is:
VGA compatible controller: Advanced Micro Devices, Inc. [AMD/ATI] Heathrow XT [Radeon HD 7870M]

The window is actually visible when stopped by the debugger, but nothing inside it is.
- cocos2d-x version: newest one.
- devices test on: Windows.

Hi, the download-deps.py file doesn't seem to work, I have SSL problem - no idea why.

```
==> Prepare to download external libraries!
==> version file doesn't exist
==> Ready to download 'metal-support-22.zip' from 'https://github.com/cocos2d/cocos2d-x-3rd-party-libs-bin/archive/metal-support-22.zip'
==> Download file retry 2
==> Ready to download 'metal-support-22.zip' from 'https://github.com/cocos2d/cocos2d-x-3rd-party-libs-bin/archive/metal-support-22.zip'
==> Download file retry 3
==> Ready to download 'metal-support-22.zip' from 'https://github.com/cocos2d/cocos2d-x-3rd-party-libs-bin/archive/metal-support-22.zip'
==> Download file retry 4
==> Ready to download 'metal-support-22.zip' from 'https://github.com/cocos2d/cocos2d-x-3rd-party-libs-bin/archive/metal-support-22.zip'
==> Download file retry 5
==> Ready to download 'metal-support-22.zip' from 'https://github.com/cocos2d/cocos2d-x-3rd-party-libs-bin/archive/metal-support-22.zip'
Traceback (most recent call last):
  File ".\download-deps.py", line 381, in <module>
    main()
  File ".\download-deps.py", line 376, in main
    installer.run(workpath, external_path, opts.remove_downloaded, opts.force_update, opts.download_only)
  File ".\download-deps.py", line 310, in run
    self.download_zip_file()
  File ".\download-deps.py", line 236, in download_zip_file
    self.download_file_with_retry(5, 3)
  File ".\download-deps.py", line 259, in download_file_with_retry
    raise err
URLError: <urlopen error [SSL: CERTIFICATE_VERIFY_FAILED] certificate verify failed (_ssl.c:581)>

```

edit: adding 
```
import ssl
ssl._create_default_https_context = ssl._create_unverified_context
```
fixed script.

uri of internal asset should start with 'file:///android_asset/'
Fix for incorrect innercontainer size calculation which was ignoring the scale of the internal items. Issue is described in #20431 
This change accounts for the child item scale value when calculating the inner container size.  This issue is described in #20431 
- cocos2d-x version: 3.17.2 and 4.0
- devices test on: Any

Steps to Reproduce:

1. Create a ListView
2. Add items to the ListView, with each item having a scale value set that's different than 1.0.

For example:

```
auto listView = cocos2d::ui::ListView::create();
listView->setBounceEnabled(true);
listView->setDirection(cocos2d::ui::ScrollView::Direction::HORIZONTAL);
listView->setContentSize(Size(400, 100));
listView->setInnerContainerSize(listView->getContentSize());
listView->setScrollBarPositionFromCorner(Vec2(4, 4));
listView->setScrollBarEnabled(true);
listView->setScrollBarColor(Color3B::GRAY);
listView->setItemsMargin(40);
listView->setAnchorPoint(Vec2::ANCHOR_MIDDLE);
listView->setPositionNormalized(Vec2(0.5f, 0.5f));
// The following lines are so we can see the issue clearly
listView->setClippingEnabled(false);
listView->setBackGroundColor(Color3B::GREEN);
listView->setBackGroundColorType(cocos2d::ui::Layout::BackGroundColorType::SOLID);
listView->getInnerContainer()->setBackGroundColor(Color3B::RED);
listView->getInnerContainer()->setBackGroundColorType(cocos2d::ui::Layout::BackGroundColorType::SOLID);
listView->getInnerContainer()->setBackGroundColorOpacity(100);

addChild(listView);

const auto renderTexture = RenderTexture::create(40, 40, Texture2D::PixelFormat::RGBA8888);
renderTexture->beginWithClear(255, 255, 255, 255);
renderTexture->end();

const auto texture = renderTexture->getSprite()->getTexture();
for (auto i = 0; i < 15; ++i)
{
    const auto sprite = Sprite::createWithTexture(texture);
    sprite->setPositionNormalized(Vec2(0.5f, 0.5f));

    const auto item = cocos2d::ui::Widget::create();
    item->addChild(sprite);
    item->setContentSize(item->getContentSize());
    item->setScale(1.2f);
    listView->pushBackCustomItem(item);
}
```

Expected:
![image](https://user-images.githubusercontent.com/8603230/71639368-8171f800-2cc9-11ea-8967-d69198536e5a.png)

Actual:
![image](https://user-images.githubusercontent.com/8603230/71639369-8636ac00-2cc9-11ea-96db-31f47a02218f.png)

The red area is the inner container background color. The green area is the ListView background color.  Clipping on the ListView has been disabled so the issue can be seen.  

All items should be within the red area, and because of the scaling on the items, the inner container size is not correct, since it is not factoring in the X scale (or Y scale for a vertical list).

The fix is to use the X and Y scale when calculating the inner container size. This is done in `ListView::updateInnerContainerSize()`:
```
For horizontal lists:

for (auto& item : _items)
{
    totalWidth += item->getContentSize().width * item->getScaleX(); // Use X scale
}

and 

For vertical lists:

for (auto& item : _items)
{
    totalHeight += item->getContentSize().height * item->getScaleY(); // Use Y scale
}
```

So it looks like this with the fix:
```
void ListView::updateInnerContainerSize()
{
    switch (_direction)
    {
        case Direction::VERTICAL:
        {
            size_t length = _items.size();
            float totalHeight = (length == 0) ? 0.0f : (length - 1) * _itemsMargin + (_topPadding + _bottomPadding);
            for (auto& item : _items)
            {
                totalHeight += item->getContentSize().height * item->getScaleY(); // Use Y scale
            }
            float finalWidth = _contentSize.width;
            float finalHeight = totalHeight;
            setInnerContainerSize(Size(finalWidth, finalHeight));
            break;
        }
        case Direction::HORIZONTAL:
        {
            size_t length = _items.size();
            float totalWidth = (length == 0) ? 0.0f : (length - 1) * _itemsMargin + (_leftPadding + _rightPadding);
            for (auto& item : _items)
            {
                totalWidth += item->getContentSize().width * item->getScaleX(); // Use X scale
            }
            float finalWidth = totalWidth;
            float finalHeight = _contentSize.height;
            setInnerContainerSize(Size(finalWidth, finalHeight));
            break;
        }
        default:
            break;
    }
}
```
