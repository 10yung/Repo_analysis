Would it be possible to put the example projects under an open source license like the MIT license?
FolderViewController.swift 中	
if let changeReason = userInfo[Item.changeReasonKey] as? String {
			let oldValue = userInfo[Item.newValueKey]
			let newValue = userInfo[Item.oldValueKey]
应改为：
if let changeReason = userInfo[Item.changeReasonKey] as? String {
			let oldValue = userInfo[Item.newValueKey]
			let newValue = userInfo[Item.oldValueKey]
The problem seems to be on line 20 of FolderViewController:

~~~swift
viewModel.folderContents.bind(to: tableView.rx.items(dataSource: dataSource)).disposed(by: disposeBag)

~~~

I'm getting the following:

~~~
2019-05-23 12:20:09.318611-0300 Recordings[15921:6162304] Warning: Unable to create restoration in progress marker file
Assertion failed: This is a feature to warn you that there is already a delegate (or data source) set somewhere previously. The action you are trying to perform will clear that delegate (data source) and that means that some of your features that depend on that delegate (data source) being set will likely stop working.
If you are ok with this, try to set delegate (data source) to `nil` in front of this operation.
 This is the source object value: <UITableView: 0x7fa7e805c200; frame = (0 0; 375 812); clipsToBounds = YES; autoresize = W+H; gestureRecognizers = <NSArray: 0x60800005bdb0>; layer = <CALayer: 0x60000023a040>; contentOffset: {0, 0}; contentSize: {0, 0}; adjustedContentInset: {0, 0, 0, 0}>
 This is the original delegate (data source) value: <Recordings.FolderViewController: 0x7fa7e7d1a890>
Hint: Maybe delegate was already set in xib or storyboard and now it's being overwritten in code.
: file /Users/jeff/Developer/app-architecture/Recordings-MVVM-C/Pods/RxCocoa/RxCocoa/Common/DelegateProxyType.swift, line 222
2019-05-23 12:20:15.881476-0300 Recordings[15921:6162304] Assertion failed: This is a feature to warn you that there is already a delegate (or data source) set somewhere previously. The action you are trying to perform will clear that delegate (data source) and that means that some of your features that depend on that delegate (data source) being set will likely stop working.
~~~

This seems to happen in both Xcode 9.4.1 and 10.2 using RxSwift 4.0.0 and RxDataSources 3.0.2. Setting the tableView's delegate and dataSource to `nil` after `super.viewDidLoad()` fixes the issue for me.
I'm following the steps in the README to install RxSwift via Carthage, but running into complier issues. Specifically, `No such module 'RxDataSources'`.

The only error I get when running `carthage update --platform iOS` is a build failure from `xcodebuild`, but I'm guessing is the same issue.

Seems like everything is installed correctly.

```
*** Fetching RxSwift
*** Checking out RxDataSources at "3.0.2"
*** Checking out RxSwift at "4.0.0"
*** xcodebuild output can be found in /var/folders/vn/djlphdns25qcvv_53qqwcs9c000bsw/T/carthage-xcodebuild.CSrNEV.log
*** Skipped downloading RxSwift.framework binary due to the error:
	"API rate limit exceeded for 216.52.20.6. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)"
*** Skipped downloading RxDataSources.framework binary due to the error:
	"API rate limit exceeded for 216.52.20.6. (But here's the good news: Authenticated requests get a higher rate limit. Check out the documentation for more details.)"
*** Building scheme "RxBlocking-iOS" in Rx.xcworkspace
*** Building scheme "RxCocoa-iOS" in Rx.xcworkspace
```

Any ideas? Anyone else run into this? I'd love to be able to build so I can play around and better grok reactive programming.

i download the project and when i run the One-App-Eight-Architectures ,it is runs some errors,my Xcode is 10.2
In the `switch` below, `deleteRows()` or `insertRows` was not reached because of this typo. 

```
switch (changeReason, newValue, oldValue) {
case let (Item.removed, _, (oldIndex as Int)?):
	tableView.deleteRows(at: [IndexPath(row: oldIndex, section: 0)], with: .automatic)
case let (Item.added, (newIndex as Int)?, _):
	tableView.insertRows(at: [IndexPath(row: newIndex, section: 0)], with: .automatic)
case let (Item.renamed, (newIndex as Int)?, (oldIndex as Int)?):
	tableView.moveRow(at: IndexPath(row: oldIndex, section: 0), to: IndexPath(row: newIndex, section: 0))
	tableView.reloadRows(at: [IndexPath(row: newIndex, section: 0)], with: .automatic)
default:
	tableView.reloadData()
}
```
In the MVC+VS version of the Recordings application, one of the features that can be implemented with ease thanks to the architecture is the Time Travel Debugging. 

I noticed that when traveling through the history of the View States, in case a view is presented on top of the actual View Hierarchy you lose access to the slide until you dismiss the actual view, which adds another view state to the history, in this case the culprit is the recording screen. Is that behaviour expected? If not, or even if it is, how would be a good way to not lose access to the slider when the history contains a screen that is presented on top of the actual view context?
Is it a bad thing if the Coordinator becomes huge? If it is what are good solutions?

Thanks!
I was getting an xcodebuild error when running `carthage update --platform iOS` for the MVVM-C project as it couldn't build `RxDataSources`. I got it to work by updating the cartfile to this:

    github "ReactiveX/RxSwift" ~> 4.0.0
    github "RxSwiftCommunity/RxDataSources" ~> 3.0

I don't want to create a PR because I'm not sure if this was just an issue for me.
