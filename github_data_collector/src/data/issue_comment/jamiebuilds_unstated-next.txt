fix typo
I had hoped to do a gradual move from unstated to unstated-next, but it's much trickier than I had expected, since I can't access the unstated-next state from any component that is still a class.
Are there any good strategies or techniques for an incremental move?

Failing this, would you consider one more release of unstated, with the react calls renamed to the UNSAFE_ versions?  That would at least buy me some time to make changes (until React 17) without exposing the long ugly chrome console message from React.
Hello, mister @jamiebuilds

First of all, thank you very much for your incredible coding.
Is there any work going on for debugging containers with this hooks paradigm?

Thank you again!
I have two Contexts. 
1. User context
2. Authentication context
I have both of them dependent on each other. Eg: signout is in auth. But create user is dependent on authentication as it has to set user as authenticated after getting the user. And authentication context would have to set user on the user context after login. But the application throws an error as the order in which the application is wrapped can be either be in one way like
```
<AuthContainer.Provider>
      <UserContainer.Provider>
```
 or 
```
<UserContainer.Provider>
  AuthContainer.Provider>
 ```
And this would throw an error like this
<img width="1036" alt="image" src="https://user-images.githubusercontent.com/5429756/69523621-a2c22480-0f64-11ea-8b96-8cdc3f152f86.png">

I would like to know if there is any way to solve this. 

```
<Container3.Provider>
  <Container2.Provider>
    <Container1.Provider>
       <App />
    </Container1.Provider>
  </Container2.Provider>
</Container3.Provider>
```
I think above there is antipattern. How to do it in the best manner? 

Bumps [safer-eval](https://github.com/commenthol/safer-eval) from 1.3.2 to 1.3.5.
<details>
<summary>Commits</summary>

- [`6d5ed4b`](https://github.com/commenthol/safer-eval/commit/6d5ed4b90d676a10776b818dee84014dcd41e632) 1.3.5
- [`fbbc623`](https://github.com/commenthol/safer-eval/commit/fbbc623b7a6f6b9176dfed3f1c3d12ccc848f7b8) Merge pull request [#7](https://github-redirect.dependabot.com/commenthol/safer-eval/issues/7) from commenthol/strict-mode-recommendation
- [`1a87237`](https://github.com/commenthol/safer-eval/commit/1a8723704b30ac43c3c300223c6132e27b48fc21) fix: use strict mode recommendation
- [`b81dab9`](https://github.com/commenthol/safer-eval/commit/b81dab9c7ef88345e5e9a4490426ac171a489add) 1.3.4
- [`073267a`](https://github.com/commenthol/safer-eval/commit/073267ac30e67d3e5c1762c5d0373444ead61660) Merge pull request [#6](https://github-redirect.dependabot.com/commenthol/safer-eval/issues/6) from commenthol/fix-breakout-console
- [`25c3048`](https://github.com/commenthol/safer-eval/commit/25c304828b7fbfe228fbc9055f6004b181dd2c38) docu: Update tested browsers/ node versions
- [`25fbbe5`](https://github.com/commenthol/safer-eval/commit/25fbbe53e46c54d10b4c583b8f5c659933400ccb) fix: sandbox breakout with console.constructor...
- [`1ff9411`](https://github.com/commenthol/safer-eval/commit/1ff9411b4099e71798cfd822d5b0a536b39f31d5) chore: bump dependencies
- [`d3167c8`](https://github.com/commenthol/safer-eval/commit/d3167c8cb863dbd373381a563a9045c2a07c6799) 1.3.3
- [`ba69286`](https://github.com/commenthol/safer-eval/commit/ba692863fe7062085b62669525d405257a16f486) Merge pull request [#5](https://github-redirect.dependabot.com/commenthol/safer-eval/issues/5) from commenthol/warning
- Additional commits viewable in [compare view](https://github.com/commenthol/safer-eval/compare/v1.3.2...v1.3.5)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=safer-eval&package-manager=npm_and_yarn&previous-version=1.3.2&new-version=1.3.5)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/jamiebuilds/unstated-next/network/alerts).

</details>
The readme contains some promises about making sure that `unstated-next` fulfills all the needs of `unstated` users and that there is a clean migration path.

In reality we found that we don't have a clean path that doesn't involve a massive rewrite.

To facilitate a more gradual migration, I created [unstated-retro](https://github.com/loganvolkers/unstated-retro).

@jamiebuilds looking for your feedback here. Read the FAQ at the bottom about a gradual "child-first" migration path.
In README there's a performance optimization method

> 1) Optimizing expensive sub-trees by splitting the component apart

I don't quite understand how it optimize performance. IMO, the separated component render as much times as before separating and I made a small demo: https://codesandbox.io/s/dark-http-selxh. The ExpensiveComponent will console as long as parent component's useContainer value changed.

Could anybody tell me about the correct understanding of it? ðŸ¤”
Currently using unstated-next and I am in love. One small quirk I found moving from Redux is that the state held in the Context API doesn't seem to hold itself past reloads, unlike how Redux functions. I assume this is because of the way hooks work.

Does anyone have any patterns or suggestions they can recommend as to improve my DX flow? Much appreciated.