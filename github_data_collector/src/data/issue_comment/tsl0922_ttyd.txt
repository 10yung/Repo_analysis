Hi, 

I really like this project (Thanks a ton for creating this) and have been using it for sometime by directly accessing it from the browser.

However when trying to access it thru angular via httpclient, its always giving access denied. I have investigated and found that the HTTP OPTIONS request method is also under authentication and it fails for Chrome's Pre-Flight request, as this request doesn't sent the authorization header which has been passed to the GET request. 

**Can you please remove authentication for HTTP OPTIONS request and respond back with a HTTP Status code of 200 and a Allow header indicating the operations that are permitted on this resource. eg: Allow: HEAD,GET,OPTIONS**

 The [CORS spec] (https://www.w3.org/TR/cors/#cross-origin-request-with-preflight-0) which says "for a cross-origin request with preflight … make a preflight request … Exclude user credentials".
 
I would have done a PR myself but i am not well versed with C.

Screenshot of the Chrome Tools:
![image](https://user-images.githubusercontent.com/32032862/72134283-7feeb100-33e8-11ea-819d-057211861c9c.png)

Screenshot of Curl:
![image](https://user-images.githubusercontent.com/32032862/72134475-14f1aa00-33e9-11ea-9614-d33132052a9d.png)


I'd like fit a terminal with a fixed 80x24 size to a containing element on a web-page and allow the user to resize the terminal font using ctrl-+/ctrl-- along with other features.

It seems there's an xterm.js addon that provides the fitting feature but I'm uncertain of how I would process to modify ttyd to achieve this effect. Would I need to custom build ttyd, modifying xtermjs with the fitting addon and updating the default index.html or is there a quicker route to success?

Thanks in advance for any help / guidance you can provide. 

https://www.npmjs.com/package/xterm-addon-fit
I'd like to see an option to use ctrl+v for paste. It's not so hard to modify that html file though.

Or even further, give a chance to load an external js file, which can access the xterm.js instance. Such that, customization can be done by this js file, most of the time.
Currently, if a user selects port 0 (as advertised in the help menu), there is
no way for the user to trivially find ttyd's port. This commit resolves the
issue by logging the port to the console and by opening a URL with the correct
port information if a user has selected such an option.
I'm trying to use ttyd for a mainframe ; the main problem is that the terminal size (rows and cols) should be fixed , no fitting ( or better , a fit that should be and aspect fit changing font size )
I wanted to achieve this with some changes to html / css , but could not find how to do this; there are some standard resolutions to admit (8o or 132 columns, and some related values for rows) but this should be an initial option , without further changes
Any simple way to do or I should modify code ?

Hi !

I built reverse-proxy to redirect authenticated users to the right ttyd based on their jwt token on a k8s cluster.
But unfortunately, the fact that auth_token.js is not inside the index cause issues...

![image](https://user-images.githubusercontent.com/7171011/65209366-e6307c00-da65-11e9-9095-91328d1d265c.png)

I have no C skills, but would it be possible to serve it directly inside the index rather than beside ?
If index.html is not changed, actually html.h do not need to be generated again.
The generated crt/key works for `GoTTY` based on my test (import my own CA.crt in Firefox). So, I think it should not have any issue.

It failed in ttyd for below case:
1. start `ttyd` 1.5.2 version release on a host
`ttyd --ssl --ssl-cert xxx.crt --ssl-key xxx.key top`
2. use `Firefox` and web debug
  - `Firefox` has nothing showed.
  - `Firefox` shows succeed in getting `/` and `auth_token.js`. But `GET` failed for `ws`:
```
请求网址:https://xxx/ws
请求方法:GET
```
3. The `ttyd` log shows:
The log shows:
```
[2019/09/05 23:27:32:6654] WARN: refuse to serve WS client for illegal ws path:
```

cc @tsl0922 
Is there a way to set the backspace to ctrl+h or is it unsupported?
Hi,

First I want to thank you for creating and maintaining this project.

I have `ttyd` running on small server with very limited resources, creating a new container for each client using the command `ttyd docker run -it --rm ubuntu` and it works great.

However, the session and the container keep running as long as the user does not close the browser (as expected). It'd be very useful if those sessions (and their containers) can be terminated after a fixed period of time, e.g. 5 minutes. Is there any known method to achieve this?

Eddie