Notably bucket/dnf.rb and bucket/pip.rb are missing on rubygems. Other files that have changed are bucket/yum.rb, bucket.rb, ...

Both have version set to 1.2.1

What's going on?
### Intro
I am using `vagrant cachier` plugin. It gets stuck at Mounting NFS shared folder when I do a `vagrant up` and displays an error message. If I do a `vagrant up` again It works.

I am looking for a better solution than this

### Output
```
deep@deep-HP-Pavilion-Notebook:~/cachier_jugaad$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Importing base box 'ubuntu/bionic64'...
==> default: Matching MAC address for NAT networking...
==> default: Checking if box 'ubuntu/bionic64' is up to date...
==> default: A newer version of the box 'ubuntu/bionic64' for provider 'virtualbox' is
==> default: available! You currently have version '20180627.0.0'. The latest is version
==> default: '20180630.0.0'. Run `vagrant box update` to update.
==> default: Setting the name of the VM: cachier_jugaad_default_1530880126674_18100
==> default: Fixed port collision for 22 => 2222. Now on port 2201.
==> default: Clearing any previously set network interfaces...
==> default: Preparing network interfaces based on configuration...
    default: Adapter 1: nat
    default: Adapter 2: hostonly
==> default: Forwarding ports...
    default: 22 (guest) => 2201 (host) (adapter 1)
==> default: Running 'pre-boot' VM customizations...
==> default: Booting VM...
==> default: Waiting for machine to boot. This may take a few minutes...
    default: SSH address: 127.0.0.1:2201
    default: SSH username: vagrant
    default: SSH auth method: private key
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: Warning: Remote connection disconnect. Retrying...
    default: Warning: Connection reset. Retrying...
    default: 
    default: Vagrant insecure key detected. Vagrant will automatically replace
    default: this with a newly generated keypair for better security.
    default: 
    default: Inserting generated public key within guest...
    default: Removing insecure key from the guest if it's present...
    default: Key inserted! Disconnecting and reconnecting using new SSH key...
==> default: Machine booted and ready!
==> default: Checking for guest additions in VM...
==> default: Configuring and enabling network interfaces...
==> default: Installing NFS client...
==> default: Exporting NFS shared folders...
==> default: Preparing to edit /etc/exports. Administrator privileges will be required...
[sudo] password for deep: 
==> default: Mounting NFS shared folders...
The following SSH command responded with a non-zero exit status.
Vagrant assumes that this means the command failed!

mount -o vers=3,udp,rw,vers=3,tcp,nolock 10.0.2.1:/home/deep/.vagrant.d/cache/ubuntu/bionic64 /tmp/vagrant-cache

Stdout from the command:



Stderr from the command:

mount.nfs: Connection timed out

deep@deep-HP-Pavilion-Notebook:~/cachier_jugaad$ vagrant up
Bringing machine 'default' up with 'virtualbox' provider...
==> default: Checking if box 'ubuntu/bionic64' is up to date...
==> default: Configuring cache buckets...
==> default: Running provisioner: shell...
    default: Running: /tmp/vagrant-shell20180706-9803-1jldzyj.sh
    default: uid=0(root) gid=0(root) groups=0(root)
    default: 
    default: WARNING: apt does not have a stable CLI interface. Use with caution in scripts.
    default: Hit:1 http://archive.ubuntu.com/ubuntu bionic InRelease
    default: Hit:2 http://archive.ubuntu.com/ubuntu bionic-updates InRelease
    default: Hit:3 http://archive.ubuntu.com/ubuntu bionic-backports InRelease
    default: Hit:4 http://security.ubuntu.com/ubuntu bionic-security InRelease
    default: Reading package lists...
    default: Building dependency tree...
    default: 
    default: Reading state information...
    default: 8 packages can be upgraded. Run 'apt list --upgradable' to see them.
    default: WARNING: 
    default: apt
    default:  
    default: does not have a stable CLI interface. 
    default: Use with caution in scripts.
    default: Reading package lists...
    default: Building dependency tree...
    default: Reading state information...
    default: The following additional packages will be installed:
    default:   apache2-bin apache2-data apache2-utils libapr1 libaprutil1
    default:   libaprutil1-dbd-sqlite3 libaprutil1-ldap liblua5.2-0 ssl-cert
    default: Suggested packages:
    default:   www-browser apache2-doc apache2-suexec-pristine | apache2-suexec-custom
    default:   openssl-blacklist
    default: The following NEW packages will be installed:
    default:   apache2 apache2-bin apache2-data apache2-utils libapr1 libaprutil1
    default:   libaprutil1-dbd-sqlite3 libaprutil1-ldap liblua5.2-0 ssl-cert
    default: 0 upgraded, 10 newly installed, 0 to remove and 8 not upgraded.
    default: Need to get 1729 kB of archives.
    default: After this operation, 6978 kB of additional disk space will be used.
    default: Get:1 http://archive.ubuntu.com/ubuntu bionic/main amd64 libapr1 amd64 1.6.3-2 [90.9 kB]
    default: Get:2 http://archive.ubuntu.com/ubuntu bionic/main amd64 libaprutil1 amd64 1.6.1-2 [84.4 kB]
    default: Get:3 http://archive.ubuntu.com/ubuntu bionic/main amd64 libaprutil1-dbd-sqlite3 amd64 1.6.1-2 [10.6 kB]
    default: Get:4 http://archive.ubuntu.com/ubuntu bionic/main amd64 libaprutil1-ldap amd64 1.6.1-2 [8764 B]
    default: Get:5 http://archive.ubuntu.com/ubuntu bionic/main amd64 liblua5.2-0 amd64 5.2.4-1.1build1 [108 kB]
    default: Get:6 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 apache2-bin amd64 2.4.29-1ubuntu4.2 [1071 kB]
    default: Get:7 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 apache2-utils amd64 2.4.29-1ubuntu4.2 [83.5 kB]
    default: Get:8 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 apache2-data all 2.4.29-1ubuntu4.2 [160 kB]
    default: Get:9 http://archive.ubuntu.com/ubuntu bionic-updates/main amd64 apache2 amd64 2.4.29-1ubuntu4.2 [95.1 kB]
    default: Get:10 http://archive.ubuntu.com/ubuntu bionic/main amd64 ssl-cert all 1.0.39 [17.0 kB]
    default: dpkg-preconfigure: unable to re-open stdin: No such file or directory
    default: Fetched 1729 kB in 4s (475 kB/s)
    default: Selecting previously unselected package libapr1:amd64.
    default: (Reading database ... 
(Reading database ... 55%abase ... 5%
    default: (Reading database ... 60%
    default: (Reading database ... 65%
    default: (Reading database ... 70%
    default: (Reading database ... 75%
    default: (Reading database ... 80%
    default: (Reading database ... 85%
    default: (Reading database ... 90%
    default: (Reading database ... 95%
(Reading database ... 59751 files and directories currently installed.)
    default: Preparing to unpack .../0-libapr1_1.6.3-2_amd64.deb ...
    default: Unpacking libapr1:amd64 (1.6.3-2) ...
    default: Selecting previously unselected package libaprutil1:amd64.
    default: Preparing to unpack .../1-libaprutil1_1.6.1-2_amd64.deb ...
    default: Unpacking libaprutil1:amd64 (1.6.1-2) ...
    default: Selecting previously unselected package libaprutil1-dbd-sqlite3:amd64.
    default: Preparing to unpack .../2-libaprutil1-dbd-sqlite3_1.6.1-2_amd64.deb ...
    default: Unpacking libaprutil1-dbd-sqlite3:amd64 (1.6.1-2) ...
    default: Selecting previously unselected package libaprutil1-ldap:amd64.
    default: Preparing to unpack .../3-libaprutil1-ldap_1.6.1-2_amd64.deb ...
    default: Unpacking libaprutil1-ldap:amd64 (1.6.1-2) ...
    default: Selecting previously unselected package liblua5.2-0:amd64.
    default: Preparing to unpack .../4-liblua5.2-0_5.2.4-1.1build1_amd64.deb ...
    default: Unpacking liblua5.2-0:amd64 (5.2.4-1.1build1) ...
    default: Selecting previously unselected package apache2-bin.
    default: Preparing to unpack .../5-apache2-bin_2.4.29-1ubuntu4.2_amd64.deb ...
    default: Unpacking apache2-bin (2.4.29-1ubuntu4.2) ...
    default: Selecting previously unselected package apache2-utils.
    default: Preparing to unpack .../6-apache2-utils_2.4.29-1ubuntu4.2_amd64.deb ...
    default: Unpacking apache2-utils (2.4.29-1ubuntu4.2) ...
    default: Selecting previously unselected package apache2-data.
    default: Preparing to unpack .../7-apache2-data_2.4.29-1ubuntu4.2_all.deb ...
    default: Unpacking apache2-data (2.4.29-1ubuntu4.2) ...
    default: Selecting previously unselected package apache2.
    default: Preparing to unpack .../8-apache2_2.4.29-1ubuntu4.2_amd64.deb ...
    default: Unpacking apache2 (2.4.29-1ubuntu4.2) ...
    default: Selecting previously unselected package ssl-cert.
    default: Preparing to unpack .../9-ssl-cert_1.0.39_all.deb ...
    default: Unpacking ssl-cert (1.0.39) ...
    default: Setting up libapr1:amd64 (1.6.3-2) ...
    default: Processing triggers for ufw (0.35-5) ...
    default: Processing triggers for ureadahead (0.100.0-20) ...
    default: Setting up apache2-data (2.4.29-1ubuntu4.2) ...
    default: Setting up ssl-cert (1.0.39) ...
    default: Processing triggers for libc-bin (2.27-3ubuntu1) ...
    default: Setting up libaprutil1:amd64 (1.6.1-2) ...
    default: Processing triggers for systemd (237-3ubuntu10) ...
    default: Processing triggers for man-db (2.8.3-2) ...
    default: Setting up liblua5.2-0:amd64 (5.2.4-1.1build1) ...
    default: Setting up libaprutil1-ldap:amd64 (1.6.1-2) ...
    default: Setting up libaprutil1-dbd-sqlite3:amd64 (1.6.1-2) ...
    default: Setting up apache2-utils (2.4.29-1ubuntu4.2) ...
    default: Setting up apache2-bin (2.4.29-1ubuntu4.2) ...
    default: Setting up apache2 (2.4.29-1ubuntu4.2) ...
    default: Enabling module mpm_event.
    default: Enabling module authz_core.
    default: Enabling module authz_host.
    default: Enabling module authn_core.
    default: Enabling module auth_basic.
    default: Enabling module access_compat.
    default: Enabling module authn_file.
    default: Enabling module authz_user.
    default: Enabling module alias.
    default: Enabling module dir.
    default: Enabling module autoindex.
    default: Enabling module env.
    default: Enabling module mime.
    default: Enabling module negotiation.
    default: Enabling module setenvif.
    default: Enabling module filter.
    default: Enabling module deflate.
    default: Enabling module status.
    default: Enabling module reqtimeout.
    default: Enabling conf charset.
    default: Enabling conf localized-error-pages.
    default: Enabling conf other-vhosts-access-log.
    default: Enabling conf security.
    default: Enabling conf serve-cgi-bin.
    default: Enabling site 000-default.
    default: Created symlink /etc/systemd/system/multi-user.target.wants/apache2.service → /lib/systemd/system/apache2.service.
    default: Created symlink /etc/systemd/system/multi-user.target.wants/apache-htcacheclean.service → /lib/systemd/system/apache-htcacheclean.service.
    default: Processing triggers for libc-bin (2.27-3ubuntu1) ...
    default: Processing triggers for ureadahead (0.100.0-20) ...
    default: Processing triggers for systemd (237-3ubuntu10) ...
    default: Processing triggers for ufw (0.35-5) ...
==> default: Configuring cache buckets...
```
### Vagrantfile and provision script
https://github.com/d78ui98/cachier_jugaad

### Vagrant version
Vagrant 2.1.2

### other important details
- Tried switching from nfsv3 to nfs4 or inverse didnt work
- firewall is turned off
- nfs service is running
- If I do a `exportfs` then I can see the `.vagrant.d/cache` path and private network address
Ever since I'm on macOS 10.13 High Sierra APFS and using Vagrant 2.0.x I'm getting 

```
E: You don't have enough free space in /var/cache/apt/archives/.
 * ERROR: Failed to run install_debian_deps()!!!
```
when running `vagrant up`. Needles to say the disk is far from full:

```
192.168.33.1:/Users/hbokh/.vagrant.d/cache/debian/contrib-jessie64  234G  234G  156G  61% /tmp/vagrant-cache
```

Weirdest things is, once **inside** a box (`debian/contrib-jessie64 (virtualbox, 8.10.0)` but also `ole/jessie64 (virtualbox, 0.2.2)` in my case), `apt-get upgrade` gives the "not enough free space"-message, but `aptitude upgrade` will work OK and uses the cache...

Disabling both `nfs` and the `mount_options` for the plugin in the `Vagrantfile` makes things work (again). 

Now I wonder: is this a Vagrant-, a macOS, a Debian-box (since for example `ubuntu/xenial64` seems unaffected) or plugin-issue?
How do you disable the plugin for a given machine/`Vagrantfile`? It's discussed [here](https://github.com/fgrehm/vagrant-cachier/issues/72), but never documented, AFAICT.

Also, how does `cache.enable_nfs` work? I see it mentioned [here](https://github.com/fgrehm/vagrant-cachier/issues/69#issuecomment-30530753), but I don't see it documented.


Hey so I just installed vagrant-cachier to speed up my local env running symfony 2. Whilst there is a noticeable speed difference it wasn't as fast I was expecting (still ≈ 10s) so I did a little digging in my box and found that running ls -al on my /vendor folder from within /tmp/vagrant-cache/ returned the following: 

```
total 48
drwxrwxrwx  10  502 dialout  340 Oct 16 11:50 .
drwxrwxrwt   6 root root    4096 Oct 17 15:35 ..
drwxrwxr-x 262  502 dialout 8908 Oct 16 11:50 apt
drwxrwxr-x  85  502 dialout 2890 Oct 17 12:51 apt_lists
drwxrwxr-x   4  502 dialout  136 Oct 17 13:03 cache
drwxrwxr-x   5  502 dialout  170 Oct 16 12:07 composer
drwxrwxr-x   3  502 dialout  102 Oct 16 11:50 gem
drwxrwxr-x   4  502 dialout  136 Oct 17 13:23 logs
drwxrwxr-x   2  502 dialout   68 Oct 16 11:50 npm
drwxrwxr-x  67  502 dialout 2278 Oct 17 14:58 vendor
```

Likewise from within the vendor folder, none of the dirs are symlinked, it looks like it's just ripped the vendor folder straight out of my app and put it in a new place which, whilst marginally faster is essentially no different except that it ruins my autocomplete functions when referring to functions belonging to vendor classes. Here's my Vagrantfile:

```
IP = "192.168.10.10"
VM_NAME = "myproj"
VM_MEMORY = 512
VM_CPUS = 1
SYNCED_FOLDER_VM_PATH = "/var/www/myproj/current"

Vagrant.configure("2") do |config|
    config.vm.box = "geerlingguy/ubuntu1604"
    config.vm.provider :virtualbox do |v|
        v.name = VM_NAME
        v.customize [
            "modifyvm", :id,
            "--name", VM_NAME,
            "--memory", VM_MEMORY,
            "--natdnshostresolver1", "on",
            "--cpus", VM_CPUS,
        ]
    end

    config.vm.network :private_network, ip: IP
    config.ssh.forward_agent = true

    config.vm.provision "ansible" do |ansible|
        ansible.playbook = "devops/provisioning/playbook.yml"
        ansible.inventory_path = "devops/provisioning/hosts/vagrant"
        ansible.limit = 'all'
    end

    config.vm.synced_folder "./", SYNCED_FOLDER_VM_PATH, :nfs => true

    if Vagrant.has_plugin?("vagrant-cachier")
        config.cache.scope = :machine

        config.cache.synced_folder_opts = {
            type: :nfs,
            mount_options: ['rw', 'vers=3', 'tcp', 'nolock']
        }

        config.cache.enable :generic, {
            "cache"  => { cache_dir: "/var/www/project.local/htdocs/current/app/cache" },
            "logs"   => { cache_dir: "/var/www/project.local/htdocs/current/app/logs" },
            "vendor" => { cache_dir: "/var/www/project.local/htdocs/current/vendor" },
        }
    end
end

```

Any help would be greatly appreciated, cheers.
I am using:
VirtualBox 5.1.28
Vagrant 2.0.0 with vagrant-cachier 1.2.1
VM: Ubuntu 16.04 (chrisvire/xenial64) 
Host: iMac (macOS 10.12.6)

When I use apt commands (e.g. "sudo apt update"), I get the following error:

W: Can't drop privileges for downloading as file '/var/lib/apt/lists/partial/us.archive.ubuntu.com_ubuntu_dists_xenial_InRelease' couldn't be accessed by user '_apt'. - pkgAcquire::Run (13: Permission denied)

Hmm... I just tried it on my Linux Desktop as host (16.04) and I am getting a similar error:

W: Can't drop privileges for downloading as file '/var/lib/apt/lists/partial/us.archive.ubuntu.com_ubuntu_dists_xenial_InRelease' couldn't be accessed by user '_apt'. - pkgAcquire::Run (13: Permission denied)
E: Could not get lock /var/lib/dpkg/lock - open (11: Resource temporarily unavailable)
E: Unable to lock the administration directory (/var/lib/dpkg/), is another process using it?


The goal of this request is to allow the root directory that is used for cache to be specified by the user. It may be considered an edge case as NFS cannot mount encrypted directories (such as an encrypted home directory)

More details in #183 

Thanks. Please let me know if there are any issues.
Hi,

I am really enjoying this plugin so far. However, my home directory is encrypted causing issues with the NFS mounting. I have taken a look here and seen its something not supported [here](https://serverfault.com/questions/409639/nfs-with-encrypted-ubuntu-home-directory). 

My idea is to add another configuration attribute specifying the root to be used for caching. If this is specified, it overrides checking the `:machine` or  `:box` specification and builds the root at that spot.

Apologies if this is not the correct way to propose ideas, etc. My first time attempting to contribute :smile: 
Hi, running a vagrant VM with vagrant-cachier enabled breaks a `zypper refresh`

```
admin:/home/vagrant # zypper update
n cache rubygem-puppet-3.8.7-12.1.x86_64.rpm                                                 (48/48), 104.8 KiB ( 70.9 KiB unpacked)
Checking for file conflicts: .[done]
( 1/48) Installing: ruby2.1-rubygem-addressable-2.3.8-3.2.x86_64 .....................................................................................................................................................................[error]
Installation of ruby2.1-rubygem-addressable-2.3.8-3.2.x86_64 failed:             
Error: Subprocess failed. Error: RPM failed: error: unpacking of archive failed on file /usr/lib64/ruby/gems/2.1.0/cache/addressable-2.3.8.gem: cpio: chown failed - Operation not permitted                                                 
error: ruby2.1-rubygem-addressable-2.3.8-3.2.x86_64: install failed              


Abort, retry, ignore? i
```

This fails, cause the directory rights are wrong:

```
admin:/home/vagrant # ls -la  /usr/lib64/ruby/gems/2.1.0/cache/                  
total 8604                   
drwxr-xr-x 2 vagrant 1000    4096 Oct  7 15:09 .                                 
drwxr-xr-x 3 vagrant 1000      19 Oct  6 09:17 ..                                
---------- 1 vagrant 1000   99840 Oct  7 15:09 addressable-2.3.8.gem             
---------- 1 vagrant 1000   31744 Oct  7 10:56 builder-3.2.2.gem                 
-rw-r--r-- 1 vagrant 1000 1611776 Jan  4  2016 chef-12.3.0.gem                   
-rw-r--r-- 1 vagrant 1000   39936 Mar 11  2016 chef-config-12.8.1.gem            
-rw-r--r-- 1 vagrant 1000   65536 Feb  8  2016 chef-zero-4.5.0.gem               
-rw-r--r-- 1 vagrant 1000   96256 Mar 24  2016 coderay-1.1.1.gem                 
-rw-r--r-- 1 vagrant 1000   45568 Mar 24  2016 diff-lcs-1.2.5.gem                
-rw-r--r-- 1 vagrant 1000  173056 Jan  4  2016 erubis-2.7.0.gem                  
-rw-r--r-- 1 vagrant 1000  239104 Jan 27  2016 facter-2.4.6.gem                  
-rw-r--r-- 1 vagrant 1000   26112 Sep 11  2015 fast_gettext-0.9.2.gem            
-rw-r--r-- 1 vagrant 1000  881664 Mar 24  2016 ffi-1.9.10.gem                    
-rw-r--r-- 1 vagrant 1000  142336 Mar 24  2016 ffi-yajl-2.2.3.gem                
-rw-r--r-- 1 vagrant 1000   15872 Oct 25  2015 gem2rpm-0.10.1.gem                
-rw-r--r-- 1 vagrant 1000   56320 Sep 11  2015 hashie-3.4.2.gem    
```

The pip support checks whether pip is installed (runs 'which pip'), and does not create the pip bucket if pip is not yet found. However this means that when using a bootstrap script that installs pip and then installs a requirements file then those pip requirements will never use the cache. As a workaround pip has to be installed in a separate bootstrap script first.

This might make some sense in the 'autodetect' mode, but if the pip bucket is explicitly enabled (config.cache.enable :pip) it might make more sense to avoid the 'which pip' test and always create the bucket.
