Fixes #917 
## Environment
```
react: 16.9.0 => 16.9.0
react-native: 0.61.5 => 0.61.5
@react-native-community/cli: 3.0.4 (latest)
```
## Description
When specifying `--directory` for `init`, the printed project directory is based off the project name, not the actual directory name.

## Reproducible Demo
Create a new project via:

    npx react-native init foo --directory bar

After finishing, this is the output:

```
â€¦
â€¢ cd /Users/.../foo && npx react-native run-ios
â€¦
â€¢ cd /Users/.../foo && npx react-native run-android
```

Even though the project is created at `bar`, i.e. `/Users/.../bar`. It should be:


```
â€¦
â€¢ cd /Users/.../bar && npx react-native run-ios
â€¦
â€¢ cd /Users/.../bar && npx react-native run-android
```

It's a simple change in `init.ts` from `projectName` to `directoryName`:

https://github.com/react-native-community/cli/blob/5724d29dc979a4b645c620109348a1e5c8c74d03/packages/cli/src/commands/init/init.ts#L232
Summary:
---------

The way Xcode 11.2 reports device availability has changed. This change adds support for this while maintaining backward compatibility with older Xcode versions.

Also changed how it detects the absence of a device. Previously it would do strict equality check with `undefined` but the problem is that the device was `null`. I think it's fine to simply do `!device` as that will handle both cases.
Summary:
---------
Suggest matching commands if the user makes a typo.
closes #905 
<!-- Thank you for sending the PR! We appreciate you spending the time to work on these changes.
Help us understand your motivation by explaining why you decided to make this change: -->


This is how it goes:
----------
![Screenshot from 2020-01-13 20-33-23](https://user-images.githubusercontent.com/25279263/72266257-ffc48780-3643-11ea-8522-120c69197ab9.png)


<!-- Write your test plan here (**REQUIRED**). If you changed any code, please provide us with clear instructions on how you verified your changes work. Bonus points for screenshots and videos! Increase test coverage whenever possible. -->

Summary:
---------

The `@` characters from npm scoped packages will cause name conflicts with Kotlin because Kotlin complier will generate `.kotlin_module` files base on module name by default.

For example, we have both `@segment/analytics-react-native` and `@matt-block/react-native-in-app-browser` modules installed. Currently they will be turned into Android modules with name `@segment_analytics-react-native` and `@matt-block_react-native-in-app-browser`. And they will both generate `META-INF/-no-jdk.kotlin_module` file because Kotlin complier failed to parse `@` in module name.

Eventually it causes build to fail with error: 
> More than one file was found with OS independent path 'META-INF/-no-jdk.kotlin_module'

Test Plan:
----------

<!-- Write your test plan here (**REQUIRED**). If you changed any code, please provide us with clear instructions on how you verified your changes work. Bonus points for screenshots and videos! Increase test coverage whenever possible. -->

Tested the code change on our project and it will convert module names into `segment_analytics-react-native` and `matt-block_react-native-in-app-browser`. And Kotlin will generate `segment_analytics-react-native_debug.kotlin_module` and `matt-block_react-native-in-app-browser_debug.kotlin_module` in `META-INF`. Thus the error is resolved.

Summary:
---------

Currently when building using the react-native-cli the derived data path is in the `ios/build` folder while in xcode it is in `~/Library/Developer/Xcode` by default. This means builds started from xcode and the cli don't share the same cache. This results in longer builds and more disk space usage (xcode build cache size is no joke ðŸ˜„) when using both xcode and the cli.

While it is possible to have xcode build in a different directory I think it is better to use the derived data path specified in the project instead of forcing one.

Before we relied on hardcoding the path to launch the app in the simulator or on device. Now we use `xcodebuild` with `-showBuildSettings` to print the build configuration and get the `TARGET_BUILD_DIR` env variable which is the path where the app will be.

Note this can be a breaking change if a script assumes the build directory location since now the default build directory won't be `ios/build`.

Test Plan:
----------

You can see that the app is being installed from the xcode shared derived data directory from the cli install logs.

Before:

```
info Installing "build/th3rdwave/Build/Products/Debug-iphonesimulator/th3rdwave.app"
```

After:

```
info Installing "/Users/janic/Library/Developer/Xcode/DerivedData/th3rdwave-ebjnyfazbruzovcnoejrwfwcgpqv/Build/Products/Debug-iphonesimulator/th3rdwave.app"
```

I also tested that the build cache is shared by clearing all build caches and building from xcode then building with the cli to confirm that a full rebuild is not needed.
## Environment

```
System:
    OS: macOS Mojave 10.14.6
    CPU: (8) x64 Intel(R) Core(TM) i7-8559U CPU @ 2.70GHz
    Memory: 7.80 GB / 16.00 GB
    Shell: 3.2.57 - /bin/bash
  Binaries:
    Node: 12.9.1 - /usr/local/bin/node
    Yarn: 1.17.3 - /usr/local/bin/yarn
    npm: 6.10.2 - /usr/local/bin/npm
    Watchman: 4.9.0 - /usr/local/bin/watchman
  SDKs:
    iOS SDK:
      Platforms: iOS 12.4, macOS 10.14, tvOS 12.4, watchOS 5.3
  IDEs:
    Android Studio: 3.5 AI-191.8026.42.35.5977832
    Xcode: 10.3/10G8 - /usr/bin/xcodebuild
  npmPackages:
    @react-native-community/cli: 3.0.4 => 3.0.4 
    react: 16.9.0 => 16.9.0 
    react-native: 0.61.2 => 0.61.2 
  npmGlobalPackages:
    react-native-cli: 2.0.1
```

## Description

I've upgraded my ReactNative project from 0.59 to 0.61.2 iOS is building fine but in android i'm facing the issue in @react-native-community/cli-platform-android module.

My settings.gradle file:
`apply from: file("../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesSettingsGradle(settings)
`
My build.gradle file
`apply from: file("../../node_modules/@react-native-community/cli-platform-android/native_modules.gradle"); applyNativeModulesAppBuildGradle(project)`

I get the following error while building the app.

```
Task :app:generatePackageList FAILED

FAILURE: Build failed with an exception.

* Where:
Script '/Users/yashwanth_c/Documents/projects/MobileApp/node_modules/@react-native-community/cli-platform-android
/native_modules.gradle' line: 130

* What went wrong:
Execution failed for task ':app:generatePackageList'.
 ReactNativeModules$_generatePackagesFile_closure3

* Try:
Run with --stacktrace option to get the stack trace. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

* Get more help at https://help.gradle.org

Deprecated Gradle features were used in this build, making it incompatible with Gradle 6.0.
Use '--warning-mode all' to show the individual deprecation warnings.
See https://docs.gradle.org/5.5/userguide/command_line_interface.html#sec:command_line_warnings

BUILD FAILED in 5m 21s
4 actionable tasks: 4 executed

```
As always i've cleaned the cache and deleted the node_module folder, tried many times but no luck. Also googled for more than a week but still not able to find a fix, any advice is appreciated.

I've asked a question in [stackoverflow](https://stackoverflow.com/questions/59422584/react-native-build-failed-in-android-react-native-community-cli-platform-andro)


## Describe the Feature
<!-- Describe the requested Feature -->
Suggest matching commands if the user mistypes. For instance, `react-native-cli ini` should show up the help message along with a friendly suggestion such as `Did you mean init?`

## Possible Implementations
<!-- Describe how to implement the feature -->
We can make use of the [didyoumean.js](https://github.com/dcporter/didyoumean.js/) matching engine.
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/react-native-community/cli/network/alerts).

</details>
## Ask your Question

<!-- Ask your question -->

Hi

As far as i know, to add custom fonts in RN > 60, i should:

1. Create `react-native.config.js` with:
```js
module.exports = {
  project: {
    ios: {},
    android: {}
  },
  assets: ['./src/fonts']
};
```

2. Use `react-native link`

So after this, we have an `assets` folder in `./android/app/src/main`! As far as i know, we have [fonts in XML](https://developer.android.com/guide/topics/ui/look-and-feel/fonts-in-xml) since build tools 26, so do we really need to have `assets` folder?

And, when i change fonts in `./src/fonts` and use `react-native link`, i have new fonts in Android but iOS has old fonts and i can't see any update in fonts... Am i missing something or this is a bug?

I found these may be related:
https://github.com/react-native-community/cli/issues/74
https://github.com/react-native-community/cli/issues/111
https://github.com/react-native-community/cli/issues/326
https://github.com/facebook/react-native/commit/f01c4e2a14c194c7a02bc5afe1900573af02b0c7
And maybe [this](https://github.com/react-native-community/cli/blob/master/packages/platform-android/src/link/copyAssets.ts)