Such a great project, thanks. I want to to show it live at some conf, do you have an example of some UI (maybe even known site) that was proven buggy using this tool?
Hi, what is the current status of the project? Are you looking for new maintainers?
- [ ] Update Webpack to manage multi examples
- [x] Migrate Touch Example with hammerjs
- [ ] Create a TodoMvc example using React
- [ ] Upgrade doc
## Description 

Old project need dependency update

## Todo

- [X] Update npm dependency 
- [X] Clean bower and old tools
- [X] Add babel (es6)
- [x] Eslint + Prettier
- [x] Convert code base in es6
- [x] Basic examples

## In other PR

- [ ] bookmarklet
- [ ] Deploy npm
- [ ] Complete example
- [ ] Update doc

Where I can find the log files after drag and drop the link from bookmarks toolbar to web page
Added reloader gremlin that periodically reloads the browser window. Added a targeted clicker gremlin that clicks interesting elements on the page (buttons) more frequently. Modified the form filler gremlin to optionally bubble up input events to trigger angular form validation and watches.
Gremlins.js should use the newer Apis like
- MouseEvent
- PointerEvent
- KeyboardEvent
I'm trying to inject the 
      

> javascript:(function(){function callback(){gremlins.createHorde().unleash()} var s=document.createElement("script");s.src="https://rawgithub.com/marmelab/gremlins.js/master/gremlins.min.js";if(s.addEventListener){s.addEventListener("load",callback,false)}else if(s.readyState){s.onreadystatechange=callback}document.body.appendChild(s);})()

function using node. But when I try to run it, I get 

`ReferenceError: document is not defined`

how do I fix this?
The scroll signal div sometimes blocks interaction with the page, disabling mouse events for the element fixes this.
Hi, 

Recently I discovered this project, and it looks like a great tool!

Currently the way to test a page is by including the minified script in the `index.html` file and unleash the horde. However, I've not yet managed to make this work for Angular (v4). 

I was wondering what the best strategy would be to implement this?

Next to this, is there any support for a test runner to run a test with gremlins? Like using Karma/Protractor to run this test. 