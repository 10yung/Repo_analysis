I have a problem with assert Color for id in recycler view.  I have a button where is indicator, and this indicator change own Color if is check. 
I need the function to which pass:
- Id recycler view 
- postion 
- id button (indicator in my example) 
- and color id.

The counter named "matchingPosition"  did not reset to 0, after the method "atPosition" was called once. As you can find in the test cases I included, when you create a Matcher object with atPosition, and use it once,you weren't able to use it the second time since the matcher tried to find the object again but the counter started from where it remained instead of 0, resulting in a NoMatchingViewException(in this library, it corresponds to BaristaException). Also the method in ViewTreeAnalyzer fails to find all the views the matcher compares  our target against, so I wrote a new method to find the number of views that are compared with our target.
When running tests on Firebases's real devices like the Samsung S9, I see that it doesn't wait after doing a swipe on a pager. So, if you make three swipes and then tap a button in the screen, the tap will be lost.

I solve it by adding sleeps after the swipes in the test. What about doing those sleeps in Barista?

It will make everyone's tests a bit slower, but it will save some headaches.
From https://github.com/AdevintaSpain/Barista/issues/333

Add Github actions CI to run instrumentation tests on  every push on master and PR
Let's see if we can apply this post here
https://dev.to/ychescale9/running-android-emulators-on-ci-from-bitrise-io-to-github-actions-3j76
We add menu items dynamically, so we want to test if the menu contains an item or not without clicking on it

The library already has the `openOverflow` function on the [`BaristaMenuClickInteractions`](https://github.com/AdevintaSpain/Barista/blob/master/library/src/main/java/com/schibsted/spain/barista/interaction/BaristaMenuClickInteractions.kt) but it's private ü§∑‚Äç‚ôÇ 


We merged this nice PR #321, but we haven't introduced the new interactions and assertions in the readme. Yet.
The PR #323 was great but didn't include the new feature in the readme file

The `assertDisplayed` exists, but the `assertNotDisplayed` don't.