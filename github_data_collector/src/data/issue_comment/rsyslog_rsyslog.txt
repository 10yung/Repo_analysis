Test `sndrcv_relp_tls-cfgcmd.sh` failed in rsyslog-8.2001.0 with librelp-1.5.0:
```
testbench: TZ env var not set, setting it to UTC
------------------------------------------------------------
09:46:57[0]  Test: ./sndrcv_relp_tls-cfgcmd.sh
------------------------------------------------------------
config rstb_309614_999fa94f_.conf is:
     1	module(load="../plugins/imdiag/.libs/imdiag")
     2	global(inputs.timeout.shutdown="60000"
     3	       default.action.queue.timeoutshutdown="20000"
     4	       default.action.queue.timeoutEnqueue="20000")
     5	# use legacy-style for the following settings so that we can override if needed
     6	$MainmsgQueueTimeoutEnqueue 20000
     7	$MainmsgQueueTimeoutShutdown 10000
     8	$IMDiagListenPortFileName rstb_309614_999fa94f.imdiag.port
     9	$IMDiagServerRun 0
    10	$IMDiagAbortTimeout 580
    11	
    12	:syslogtag, contains, "rsyslogd"  ./rstb_309614_999fa94f.started
    13	###### end of testbench instrumentation part, test conf follows:
    14	
    15	module(	load="../plugins/imrelp/.libs/imrelp" 
    16		tls.tlslib="openssl")
    17	# then SENDER sends to this port (not tcpflood!)
    18	input(	type="imrelp" port="35529" tls="on"
    19		tls.tlscfgcmd="Protocol=ALL,-SSLv2,-SSLv3,-TLSv1,-TLSv1.2" 
    20		)
    21	
    22	$template outfmt,"%msg:F,58:2%\n"
    23	:msg, contains, "msgnum:" action(type="omfile" file="rstb_309614_999fa94f.out.log" template="outfmt")
rsyslogd: NOTE: RSYSLOG_DEBUG_TIMEOUTS_TO_STDERR activated
rsyslogd 8.2001.0 error: invalid debug option 'nologfuncflow' - ignored
rsyslogd 8.2001.0 error: invalid debug option 'noprintmutexaction' - ignored
main Q:Reg: worker start requested, num workers currently 0
main Q:Reg: wrkr start initiated with state 0, num workers now 1
rsyslog debug: main Q:Reg: worker 0x7ff1c7c43a40 started
rsyslog debug: main Q:Reg: started with state 3, num workers now 1
09:46:57[0]  rstb_309614_999fa94f:.pid found, pid 39945
09:46:57[0]  rsyslogd startup msg seen, pid  39945
waiting for file rstb_309614_999fa94f.imdiag.port
imdiag port: 36613
config rstb_309614_999fa94f_2.conf is:
     1	module(load="../plugins/imdiag/.libs/imdiag")
     2	global(inputs.timeout.shutdown="60000"
     3	       default.action.queue.timeoutshutdown="20000"
     4	       default.action.queue.timeoutEnqueue="20000")
     5	# use legacy-style for the following settings so that we can override if needed
     6	$MainmsgQueueTimeoutEnqueue 20000
     7	$MainmsgQueueTimeoutShutdown 10000
     8	$IMDiagListenPortFileName rstb_309614_999fa94f.imdiag2.port
     9	$IMDiagServerRun 0
    10	$IMDiagAbortTimeout 580
    11	
    12	:syslogtag, contains, "rsyslogd"  ./rstb_309614_999fa94f2.started
    13	###### end of testbench instrumentation part, test conf follows:
    14	
    15	module(	load="../plugins/omrelp/.libs/omrelp" 
    16		tls.tlslib="openssl")
    17	
    18	action(	type="omrelp" target="127.0.0.1" port="35529" tls="on"
    19		tls.tlscfgcmd="Protocol=-ALL,TLSv1.2" )
rsyslogd: NOTE: RSYSLOG_DEBUG_TIMEOUTS_TO_STDERR activated
rsyslogd 8.2001.0 error: invalid debug option 'nologfuncflow' - ignored
rsyslogd 8.2001.0 error: invalid debug option 'noprintmutexaction' - ignored
main Q:Reg: worker start requested, num workers currently 0
main Q:Reg: wrkr start initiated with state 0, num workers now 1
rsyslog debug: main Q:Reg: worker 0x7f7ba6843a40 started
rsyslog debug: main Q:Reg: started with state 3, num workers now 1
09:46:58[1]  rstb_309614_999fa94f:2.pid found, pid 39976
09:46:58[1]  rsyslogd2 startup msg seen, pid  39976
waiting for file rstb_309614_999fa94f.imdiag2.port
imdiag2 port: 366132
injecting 1000 messages
imdiag[40475]: 1000 messages injected
Shutting down instance 2
imdiag: wait q_empty: qsize 935 nempty 0
imdiag: wait q_empty: qsize 935 nempty 0
imdiag: wait q_empty: qsize 780 nempty 0
imdiag: wait q_empty: qsize 524 nempty 0
imdiag: wait q_empty: qsize 268 nempty 0
imdiag: wait q_empty: qsize 268 nempty 0
imdiag: wait q_empty: qsize 0 nempty 1
imdiag: wait q_empty: qsize 0 nempty 2
imdiag: wait q_empty: qsize 0 nempty 3
imdiag: wait q_empty: qsize 0 nempty 4
imdiag: wait q_empty: qsize 0 nempty 5
imdiag: wait q_empty: qsize 0 nempty 6
imdiag[40475]: mainqueue empty
DoDie called.
rsyslogd debug: info: trying to cooperatively stop input ../plugins/imdiag/.libs/imdiag, timeout 60000 ms
rsyslog debug: main Q:Reg/w0: enter WrkrExecCleanup
rsyslog debug: 0x7f7ba68a5840: worker exiting
rsyslog debug: main Q:Reg/w0: thread joined
09:47:00[3]  wait on shutdown of 39976
Shutting down instance 1
imdiag: wait q_empty: qsize 0 nempty 1
imdiag: wait q_empty: qsize 0 nempty 2
imdiag: wait q_empty: qsize 0 nempty 3
imdiag: wait q_empty: qsize 0 nempty 4
imdiag: wait q_empty: qsize 0 nempty 5
imdiag: wait q_empty: qsize 0 nempty 6
imdiag[36613]: mainqueue empty
DoDie called.
rsyslogd debug: info: trying to cooperatively stop input ../plugins/imdiag/.libs/imdiag, timeout 60000 ms
rsyslogd debug: info: trying to cooperatively stop input imrelp, timeout 60000 ms
rsyslog debug: main Q:Reg/w0: enter WrkrExecCleanup
rsyslog debug: 0x7ff1c7ca58e0: worker exiting
rsyslog debug: main Q:Reg/w0: thread joined
09:47:01[4]  wait on shutdown of 39945
content_check did not yet succeed
content_check did not yet succeed
```
In rsyslog-8.2001.0, `imrelp-tls-cfgcmd.sh` is failing:
```

FAIL: imrelp-tls-cfgcmd
=======================

testbench: TZ env var not set, setting it to UTC
------------------------------------------------------------
09:46:55[0]  Test: ./imrelp-tls-cfgcmd.sh
------------------------------------------------------------
config rstb_213069_a2046ec4_.conf is:
     1	module(load="../plugins/imdiag/.libs/imdiag")
     2	global(inputs.timeout.shutdown="60000"
     3	       default.action.queue.timeoutshutdown="20000"
     4	       default.action.queue.timeoutEnqueue="20000")
     5	# use legacy-style for the following settings so that we can override if needed
     6	$MainmsgQueueTimeoutEnqueue 20000
     7	$MainmsgQueueTimeoutShutdown 10000
     8	$IMDiagListenPortFileName rstb_213069_a2046ec4.imdiag.port
     9	$IMDiagServerRun 0
    10	$IMDiagAbortTimeout 580
    11	
    12	:syslogtag, contains, "rsyslogd"  ./rstb_213069_a2046ec4.started
    13	###### end of testbench instrumentation part, test conf follows:
    14	
    15	module(	load="../plugins/imrelp/.libs/imrelp" 
    16		tls.tlslib="openssl")
    17	input(type="imrelp" port="33519" tls="on"
    18			tls.cacert="./tls-certs/ca.pem"
    19			tls.mycert="./tls-certs/cert.pem"
    20			tls.myprivkey="./tls-certs/key.pem"
    21			tls.authmode="certvalid"
    22			tls.permittedpeer="rsyslog"
    23			tls.tlscfgcmd="Protocol=ALL,-SSLv2,-SSLv3,-TLSv1,-TLSv1.2")
    24	
    25	template(name="outfmt" type="string" string="%msg:F,58:2%\n")
    26	:msg, contains, "msgnum:" action(type="omfile" template="outfmt"
    27				         file=`echo $RSYSLOG_OUT_LOG`)
rsyslogd: NOTE: RSYSLOG_DEBUG_TIMEOUTS_TO_STDERR activated
rsyslogd 8.2001.0 error: invalid debug option 'nologfuncflow' - ignored
rsyslogd 8.2001.0 error: invalid debug option 'noprintmutexaction' - ignored
main Q:Reg: worker start requested, num workers currently 0
main Q:Reg: wrkr start initiated with state 0, num workers now 1
rsyslog debug: main Q:Reg: worker 0x7f61b7e43a40 started
rsyslog debug: main Q:Reg: started with state 3, num workers now 1
09:46:55[0]  rstb_213069_a2046ec4:.pid found, pid 39857
09:46:55[0]  rsyslogd startup msg seen, pid  39857
waiting for file rstb_213069_a2046ec4.imdiag.port
imdiag port: 39427
starting run 1
Sending 1000 messages.
00001000 messages sent
runtime: 0.079
End of tcpflood Run
Shutting down instance 1
imdiag: wait q_empty: qsize 649 nempty 0
imdiag: wait q_empty: qsize 0 nempty 1
imdiag: wait q_empty: qsize 0 nempty 2
imdiag: wait q_empty: qsize 0 nempty 3
imdiag: wait q_empty: qsize 0 nempty 4
imdiag: wait q_empty: qsize 0 nempty 5
imdiag: wait q_empty: qsize 0 nempty 6
imdiag[39427]: mainqueue empty
DoDie called.
rsyslogd debug: info: trying to cooperatively stop input ../plugins/imdiag/.libs/imdiag, timeout 60000 ms
rsyslogd debug: info: trying to cooperatively stop input imrelp, timeout 60000 ms
rsyslog debug: main Q:Reg/w0: enter WrkrExecCleanup
rsyslog debug: 0x7f61b7ee4c00: worker exiting
rsyslog debug: main Q:Reg/w0: thread joined
09:46:56[1]  wait on shutdown of 39857
content_check did not yet succeed
content_check did not yet succeed

============================================================
FILE "rstb_213069_a2046ec4.tcpflood" content:
FAIL: content_check failed to find "relp connect failed with return 10031"
not reporting failure as RSYSLOG_STATSURL is not set
09:46:57[2]  FAIL: Test ./imrelp-tls-cfgcmd.sh (took 2 seconds)
FAIL imrelp-tls-cfgcmd.sh (exit status: 1)

FAIL: sndrcv_relp_tls-cfgcmd
============================
```

Tested against librelp-1.5.0.
My database only allows inserts over of range of plus or minus about 15 days from current time.  On occasion an incorrectly configured machine will send syslog data with timestamps outside of this range.
The database then returns an error for these inserts.
I was wondering what is the official policy on failed database inserts?   Retry or throw away and continue?
### Expected behavior
omelasticsearch can parse an elasticsearch response from a bulkmode insert

### Actual behavior
After rsyslog was upgraded to 8.2001.0, omelasticsearch fails to parse valid reply that includes "items"
```
2020-01-15T20:54:10.461319+00:00 our-hostname rsyslogd: omelasticsearch: error in elasticsearch reply: bulkmode insert does not return array, reply is: 1579121650 20:54:10 elk-production green 8 4 550 275 0 0 0 0 - 100.0% {"took":10,"errors":false,"items":[{"index":{"_index":"rsyslog-2020.01.15","_type":"rsyslog","_id":"TpX8qm8BhsTOmI8LK9EE","_version":1,"result":"created","_shards":{"total":2,"successful":2,"failed":0},"_seq_no":43071185,"_primary_term":1,"status":201}}]} [v8.200
1.0 try https://www.rsyslog.com/e/2218 ]
```
### Steps to reproduce the behavior

I am not too sure. I think it has to do with logic in this PR: https://github.com/rsyslog/rsyslog/pull/4073

But basically increasing the buffer and then trying to send messages smaller than that increase. The problem persists after restart of rsyslogd, but maybe that's just due to the volume of messages in our buffer.

### Environment
- rsyslog version: 8.2001.0 (aka 2020.01) 
- platform: Ubuntu 18.04

Note: we are running Ubuntu 18.04 hosts that still have rsyslogd  `8.1911.0 (aka 2019.11)` which aren't experiencing issues to the same elasticsearch cluster.

On hosts experiencing this error, I do not see any logged allocation errors `"realloc failed in curlResult"` in the log history.

[20-templates.conf.txt](https://github.com/rsyslog/rsyslog/files/4071994/20-templates.conf.txt)

### Expected behavior
rsyslog should log to syslog using the imuxsock module

### Actual behavior
rsyslog generates error messages like
`
file '9' write error: Input/output error [v8.1901.0 try https://www.rsyslog.com/e/2027 ]`

and does not write to the syslog.

### Steps to reproduce the behavior

Reboot machine and the service fails. If after rebooting the service is restarted the service starts working. It seems to fail to work only after a reboot. After reboot the journalctl logs has this:

```
Jan 15 11:35:27 radius02.example.com systemd[1]: Starting System Logging Service...
Jan 15 11:35:27 radius02.example.com rsyslogd[359]: imuxsock: Acquired UNIX socket '/run/systemd/journal/syslog' (fd 3) from systemd.  [v8.1901.0]
Jan 15 11:35:27 radius02.example.com systemd[1]: Started System Logging Service.
Jan 15 11:35:27 radius02.example.com rsyslogd[359]:  [origin software="rsyslogd" swVersion="8.1901.0" x-pid="359" x-info="https://www.rsyslog.com"] start
Jan 15 11:35:27 radius02.example.com rsyslogd[359]: file '9' write error: Input/output error [v8.1901.0 try https://www.rsyslog.com/e/2027 ]
Jan 15 11:35:27 radius02.example.com rsyslogd[359]: file '9' write error: Input/output error [v8.1901.0 try https://www.rsyslog.com/e/2027 ]
Jan 15 11:35:27 radius02.example.com rsyslogd[359]: file '9' write error: Input/output error [v8.1901.0 try https://www.rsyslog.com/e/2027 ]
...forever...
```

### Environment
- rsyslog version: 8.1901.0
- platform: Debian buster

Looking at the unix sockets, on a server where rsyslog is working properly I see these file descriptors owned by the rsyslogd process:
```
lr-x------ 1 root root 64 Jan 15 11:35 0 -> /dev/null
l-wx------ 1 root root 64 Jan 15 11:35 1 -> /dev/null
l-wx------ 1 root root 64 Jan 15 11:35 2 -> /dev/null
lrwx------ 1 root root 64 Jan 15 11:35 3 -> 'socket:[10211]'  (/run/systemd/journal/syslog)
lr-x------ 1 root root 64 Jan 15 11:35 4 -> /dev/urandom
lrwx------ 1 root root 64 Jan 15 11:35 5 -> 'socket:[14849]'  (/var/spool/postfix/dev/log)
lr-x------ 1 root root 64 Jan 15 11:35 6 -> /proc/kmsg
l-wx------ 1 root root 64 Jan 15 11:35 7 -> /dev/console
l-wx------ 1 root root 64 Jan 15 11:35 8 -> /var/log/messages
lrwx------ 1 root root 64 Jan 15 11:35 9 -> 'socket:[30511]'
```

On a server where rsyslog is _not_ working I see the same set _except_ the file descriptor corresponding to the number in the error message (in the example above this is '9') is missing and the last socket (the one not pointing at a file) keeps getting re-generated.


Rsyslog is managed by systemd with the stock systemd unit file that comes with Debian buster.

```
# /etc/rsyslog.conf
$ModLoad imuxsock
$ModLoad imklog
$ActionFileDefaultTemplate RSYSLOG_TraditionalFileFormat
$FileOwner root
$FileGroup root
$WorkDirectory /var/spool/rsyslog
$FileCreateMode 0640
$DirCreateMode 0755
$SystemLogRateLimitInterval 0
$IncludeConfig /etc/rsyslog.d/*.conf

# /etc/rsyslog.d/postfix.conf
$AddUnixListenSocket /var/spool/postfix/dev/log

# /etc/rsyslog.d/95-default.conf
*.emerg action(type = "omusrmsg"
               name  = "emerg"
               users = "root")
*.debug action(type = "omfile"
               name     = "defaultLocal"
               file     = "/var/log/messages"
               template = "FileFormat")
*.err   action(type = "omfile"
               name = "err"
               file = "/dev/console")

# /etc/rsyslog.d/50-authproxy.conf
if $syslogfacility-text == 'local3' then {
   action(type     = "omfile"
          name     = "authproxyLocal"
          file     = "/var/log/duoauthproxy"
          template = "FileFormat")
   stop
}

#  /etc/rsyslog.d/20-templates.conf
# Attached as 20-templates.conf.txt
```
Here is the systemd unit file used to control the rsyslogd service on buster:
```
[Unit]
Description=System Logging Service
Requires=syslog.socket
Documentation=man:rsyslogd(8)
Documentation=https://www.rsyslog.com/doc/

[Service]
Type=notify
ExecStart=/usr/sbin/rsyslogd -n -iNONE
StandardOutput=null
Restart=on-failure

# Increase the default a bit in order to allow many simultaneous
# files to be monitored, we might need a lot of fds.
LimitNOFILE=16384

[Install]
WantedBy=multi-user.target
Alias=syslog.service
```
			   
Hi!

I've found a strange log in my syslog file, so i think there is a typo,

have a look at this merge request on my forked rsyslog:

https://github.com/re-vax/rsyslog/pull/1/commits/b55e76ac2e534c62fddfee308813a4d8d3044816


This was accidentally set to "no". Test for imfile should by
default run when imfile is enabled.

see also https://github.com/rsyslog/rsyslog/issues/4120

<!--
LEGAL GDPR NOTICE:
According to the European data protection laws (GDPR), we would like to make you
aware that contributing to rsyslog via git will permanently store the
name and email address you provide as well as the actual commit and the
time and date you made it inside git's version history. This is inevitable,
because it is a main feature git. If you are concerned about your
privacy, we strongly recommend to use

--author "anonymous <gdpr@example.com>"

together with your commit. Also please do NOT sign your commit in this case,
as that potentially could lead back to you. Please note that if you use your
real identity, the GDPR grants you the right to have this information removed
later. However, we have valid reasons why we cannot remove that information
later on. The reasons are:

* this would break git history and make future merges unworkable
* the rsyslog projects has legitimate interest to keep a permanent record of the
  contributor identity, once given, for
  - copyright verification
  - being able to provide proof should a malicious commit be made

Please also note that your commit is public and as such will potentially be
processed by many third-parties. Git's distributed nature makes it impossible
to track where exactly your commit, and thus your personal data, will be stored
and be processed. If you would not like to accept this risk, please do either
commit anonymously or refrain from contributing to the rsyslog project.
-->

### Expected behavior

### Actual behavior

### Steps to reproduce the behavior

### Environment
- rsyslog version: <!-- e.g. 8.35.0 - use "rsyslogd -v" to obtain the version number -->
- platform: <!-- e.g. Ubuntu 16.04 -->
- for configuration questions/issues, include rsyslog.conf and included config files

<!-- Note: rsyslog documentation is available here:
  - current stable release: http://www.rsyslog.com/doc/v8-stable/
  - pre-release: http://www.rsyslog.com/doc/master/
-->

Version: 8.2001.0
Debian sid

Trying to build the latest version of rsyslog for Debian, I get

```
PASS: immark.sh
... [SNIPPED by admin for easier readability]
SKIP: imfile-logrotate-nocopytruncate.sh
FAIL: imfile-growing-file-id.sh
PASS: glbl-oversizeMsg-truncate-imfile.sh
PASS: config_enabled-on.sh
PASS: config_enabled-off.sh
PASS: imfile-endmsg.regex-with-example.sh
make[6]: Entering directory '/home/test/rsyslog-8.2001.0/tests'
make[6]: Nothing to be done for 'imfile-escapelf.replacement.log'.
make[6]: Nothing to be done for 'imfile-escapelf.replacement-empty.log'.
make[6]: Leaving directory '/home/test/rsyslog-8.2001.0/tests'
fatal: making test-suite.log: failed to create imfile-escapelf.replacement.trs
fatal: making test-suite.log: failed to create imfile-escapelf.replacement.log
fatal: making test-suite.log: failed to create imfile-escapelf.replacement-empty.trs
fatal: making test-suite.log: failed to create imfile-escapelf.replacement-empty.log
make[5]: *** [Makefile:3414: test-suite.log] Error 1
```
<!--
LEGAL GDPR NOTICE:
According to the European data protection laws (GDPR), we would like to make you
aware that contributing to rsyslog via git will permanently store the
name and email address you provide as well as the actual commit and the
time and date you made it inside git's version history. This is inevitable,
because it is a main feature git. If you are concerned about your
privacy, we strongly recommend to use

--author "anonymous <gdpr@example.com>"

together with your commit. Also please do NOT sign your commit in this case,
as that potentially could lead back to you. Please note that if you use your
real identity, the GDPR grants you the right to have this information removed
later. However, we have valid reasons why we cannot remove that information
later on. The reasons are:

* this would break git history and make future merges unworkable
* the rsyslog projects has legitimate interest to keep a permanent record of the
  contributor identity, once given, for
  - copyright verification
  - being able to provide proof should a malicious commit be made

Please also note that your commit is public and as such will potentially be
processed by many third-parties. Git's distributed nature makes it impossible
to track where exactly your commit, and thus your personal data, will be stored
and be processed. If you would not like to accept this risk, please do either
commit anonymously or refrain from contributing to the rsyslog project.
-->
