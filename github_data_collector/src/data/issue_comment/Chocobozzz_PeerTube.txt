is it possible? Federation of peertube  instances with each other in private network with local DNS 
What do i need to implement my own federation in a private environment with the local domain name? I already have deployed instances but i am facing issue when making federation between instances 
**What happened?**

Max resolution version of the video starts to load in the background, even before clicking on "play"

**What do you expect to happen instead?**

Do either of the following, until I press "play":
 * Load only the first few seconds of the video (like invidio.us does)
 * Do not load anything

This is meant for people (like me) with metered connection.
If I leave the page open and go to the bathroom, I can have a few gigs out if the video proposed is 1080p or more.

**Steps to reproduce:**

0. Autoplay is disabled in the browser's options
1. Without an account, access an instance
2. Click on any video
3. Look at network stats (under the browser's "developer tools")
4. There is a continuous stream of XHR request loading the video chunks

**Additional information**

* PeerTube version or URL:
  tested on:
  - https://peertube.cpy.re/
  - https://video.latavernedejohnjohn.fr/

* Browser name/version:
  Firefox v69.0.1 (64-bit) on Linux



Here is an example, on a 1080p video, after ~50s of page stand-by.
![region_1579306512](https://user-images.githubusercontent.com/52980486/72654476-0890c280-3990-11ea-9f45-f5fb0f90b609.png)

In order to develop a captcha plugin using https://www.npmjs.com/package/svg-captcha, I have to store somewhere the generated text. Storing it with PluginStorageManager.storeData doesn't seem to be a good idea.
The best solution is probably to store it in the user session. So we need a mecanism for plugin to get and store data in the session (under their namespaces)
The `filter:api.user.signup.allowed.result` hook is called in two places : on the register form submit, and in getConfig.
I propose passing the request IP in the getConfig call too.
The reason why: I'm developing a plugin that will allow/disallow the registration for some countries. So I can test before the form submit if I want. 
The plugin can still know if we are in getConfig or on the form submit, by testing `params.body`.
I noticed that when developing a plugin, the hooks where called multiple times. Sometimes with old code. I found the issue here. It works with plugin under development. I did not try with plugins installed directory from npm, but I'm pretty sure it will be ok.
*note*: descriptions will need to be rewritten. The way I wrote them is more as a placeholder to get feedback on the modification.

![Screenshot_2020-01-15 Account video channels - PeerTube](https://user-images.githubusercontent.com/6329880/72460412-09c5c200-37cd-11ea-83ff-c139736ccf36.png)

resolves #2350

The PR defines two sets of acceptable framerates: standard and hd standard framerates, which are used to check a video's conformance to player standards. If a video uses a non-standard framerate, we check if even downsampling is possible before rejecting.
resolves #479

todo:
- [ ] federation
- [ ] tests

![Screenshot_2020-01-14 Nettoyer les têtes de son magnétoscope VHS](https://user-images.githubusercontent.com/6329880/72355750-4d92cb80-36e8-11ea-815f-f6085d0c1675.png)

![cc0-photo png](https://user-images.githubusercontent.com/57924087/72361980-07933300-36fb-11ea-9571-adaeef324f84.png)


A firefly becomes visible only during twilight, just like people will be able to watch videos through this feature only when other users "will become visible" a.k.a seed. 

I think it's important to give this feature a name (it can be a different one) because some people due to lack of knowledge will probably misunderstand it and they'll want to blame "PeerTube", but if we give this feature a separate name, they'll know that this is just a small feature that doesn't represent the whole PeerTube software.

**If it sounds so bad, why should we implement it?** 
It may sound bad but there are ways to reduce its downsides (like displaying a warning) and well, it has its own big advantages (like no need for big server storage) and there are other big platforms which do only that (e.g. bitchute) and people really seem to need this.

**So what is this about?**
This feature is about giving people the possibility to upload torrent files (which are a few kilobytes in size) and thus create "Firefly videos" which people can watch as normal videos (if at least 1 person is seeding it).

Other methods to reduce its downsides:
- as I wrote above, display a warning that'll say that _this isn't a normal PeerTube video, but rather a Firefly video which works like this... and does this... and that..._. And guide them on how to hide all Firefly videos if they aren't interested in them.
- temporarily hide Firefly videos (from search results, recommended, Trending pages etc..) that have (zero) 0 seeds so that people don't even waste their time clicking on them

_Similar issue https://github.com/Chocobozzz/PeerTube/issues/1524, but it was a question and rather incomplete. So I've decided to create this one._
<!-- If you have a question, please read the FAQ.md first -->
<!-- If you report a security issue, please refrain from filling an issue and refer to SECURITY.md for the disclosure procedure. -->
<!-- If you report a bug, please fill the form -->

**What happened?**

I try to follow an Peertube Account or Channel from Mastodon or Pleroma. They tell me, the request got sent. I even get a notification at peertube that I have a new follower

**What do you expect to happen instead?**

I expect the information that the follow was successful. 

**Steps to reproduce:**

1.

2.

3.


**Additional information**
* PeerTube version or URL: 2.0.0
* Browser name/version: Firefox 72.01
* NodeJS version: ?

* Link to browser console log if useful:
* Link to server log if useful (journalctl or /var/www/peertube/storage/logs/):
