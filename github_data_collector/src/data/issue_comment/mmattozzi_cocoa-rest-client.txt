Often I get already url encoded urls.
And If I use them in browser all work as expected.
But CocoaRestClient encode them again and server did not accept this.
May be its better to do "Double Encoding of Query Parameters #152" or simply add button to allow user to decode url before send.

Example
https://test.test/rent_plans.json?expand%5Best_plan%5D=phases.billing_period,phases.duration,phases.recurring_price,phases.promos&expand%5Btvod_plan%5D=phases.billing_period,phases.duration,phases.recurring_price,phases.promos&filter%5Bresource_id_in%5D=f10e9063-2ec7-47cb-a0c9-12c881f8f9b6


A UI update to support macOS Mojave's dark mode would be appreciated. It would help keep CocoaRestClient up-to-date with the Mac's evolving look and feel.
When trying to export response (File -> Export Response...) the application shows a message:

Unable to save response
The folder doesn’t exist.

However, I am trying to save into the Downloads folder which by all means does exist
Request password are saved in cleartext in configuration files.

`~/Library/ApplicationSupport/CocoaRestClient/CocoaRestClient.savedRequests`

Please use the keychain instead!

At least display a warning near the corresponding input field.

When a space character is used in query parameter value, and query is saved and executed later, it is sending %2520. Actually it is encoding two times, first to %20, and then later storing it is %20, and then doing second encoding to %2520.
When inputting double quotes in the body editor they are formatted to a different double quote character. e.g.
    "display" gets formatted to “display”

As a result I find I have to create my body text in VS Code and then paste it into the body section. The JSON parser we are using on our backend fails and gives us this error message,
    Unexpected character ('S' (code 83))
The first time I launched the application and ran a request, it somehow picked up a auth credential from my keychain, which I found really nifty. However, it was an old item with the wrong credentials, so it was making requests under the wrong user. I couldn't find any way to remove this connection, so I removed the keychain item (it was incorrect anyway, after all). Now the application neither uses this credential, nor is it asking me for a new one. It also will not find and use a new item I created manually with the correct user and address.

Now, the only way to authenticate is to use the Auth tab each time, manually filling out my credentials.

Bonus issue: when it was using the keychain item for authentication, it ignored the manually entered credentials in the Auth tab. I would think those credentials should supersede any global credentials it has picked up elsewhere.

It should be possible to undo deletion of saved requests. I just deleted most of my saved requests because the focus was in the wrong place and I hit backspace a couple of times, and right now it's not possible to get them back. It's no big deal but it would be nice if such an action wasn't fatally destructive in that way.
Common types include:

- application/x-www-form-urlencoded
- application/json
- application/xml

Same for `Accept`.

Can be enhanced to generic header-aware autocomplete, but I think `Accept` and `Content-Type` are the headers that are most often set.