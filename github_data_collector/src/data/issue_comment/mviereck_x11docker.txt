Hi, I've got a question and am misusing the issues on that, hope you don't mind! 

Atm I've got a docker running a kodi headless for serving as centralized kodi to sync the library and to serve as main instance for yatse on a headless server. So far so good.

What I'm trying to achieve now is to have kodi running with "suspended" head (like with xpra) from a docker container started on system startup without the need to be logged in. So it mainly is like I have it now.

Right now I'm not able to get audio output and configuration of kodi is tricky as there is no UI, but only config files and web-ui.

So if I would use x11docker (tested it with xpra) I get sound and am able to attach and detach the "head" from localhost or via ssh. 
That setup was a little unstable and xpra doesn't clean up nicely if quit (port already in use). I used your xpra via ssh example from the wiki. 

So now my question:
What would the best way to realize such a setup? 
Guess xpra or nxagent are the way to go or are there other/better solutions? 
The server is able to provide gpu acceleration (i965), so it would be nice to render the head in hardware. 
What would a systemd unit would look like?

As my server has got a monitor now... 
If that kind of setup would work, I have the central kodi instance for maintenance starting on system startup, just like the headless docker is now, but with attacheable UI if I log in on the desktop, am able to play audio on the server from a remote app like yatse without the need to be logged in and it would only need a xpra client for to have the UI on every PC via ssh.

Any tips on a setup like this would be awesome! 
The current master version of x11docker adds support for WSL2 on MS Windows.
[`runx`](https://github.com/mviereck/runx) has been updated for WSL2 support, too. ([runx ticket #2](https://github.com/mviereck/runx/issues/2))

Please check out if it works as expected and report any issues here. 
WSL2 does not run in my Windows VM, so I cannot check it out myself.

Note: In WSL2 x11docker defaults to use the native linux docker within WSL2. If you want to use MobyVM / docker-for-windows instead, please add option `--mobyvm`.

(In WSL1, Cygwin and MSYS2 x11docker defaults to MobyVM because native linux docker is not supported there.)
I noticed on https://github.com/mviereck/x11docker/wiki/X-server-and-Wayland-Options that --xwayland does not support seamless mode.  Would it be possible to support this?

From a high level, I notice that my normal wayland login launches Xwayland in a way that X11 apps have a seamless mode.  I'd really love it if I can get some similar working with x11docker.

Thanks for all your hard work on this project!
All in the title, this repo is amazing and I was wondering if there is similar work done on running GUI applications in Windows containers that can be remoted into through VNC since image windows:1809 and up can run GUI apps?
I have successfully installed [jksiezni's xpra-client](https://github.com/jksiezni/xpra-client) on my android device and I can connect to a x11docker session which launches a xterm on my ubuntu server but i cannot access the xterm from the android device. It looks like the client resolution is too high? I have tried setting resolution using xrandr but it seems to be ignored.

How to get xterm visible on Android device?

I would have posed this question to jksiezni but he/she seems to be offline since 2017.
Coming from https://github.com/mviereck/x11docker/issues/87#issuecomment-457307011

I tried the following:

- Allow VcXsrv windows xserver in Private and Public networks.
- Start vcxsrv with xlaunch: Multiple windows, Display number 0, Start no client, Clipboard, Disable access control.
- `winpty docker run -it -e DISPLAY=10.0.75.1:0.0 alpine_term xterm` works.
- Stop vcxsrv.
- Allow VcXsrv in Private networks only.
- Start vxcsrv again with xlaunch.
- `winpty docker run -it -e DISPLAY=10.0.75.1:0.0 alpine_term xterm` does not work.

However, `x11docker` does not work with any of them.

Last, I disabled the firewall everywhere (Domain network, Private network and Public network). Now `x11docker` works.

So, it is strange that this problem did not happen earlier. Although it might sound strange, I think that this might have something to do with changing from wireless to ethernet recently. I did change nothing more these last days.

Will have to investige further.
Coming from #87 

Sometimes docker fails to start with an error message that it tries to create a shared folder that already exists on host:
```
Error response from daemon: error while creating mount source path: mkdir /host_mnt/c: file exists.
```
This is mainly known from Docker on Windows.
It is a bug of Docker or MS Windows. x11docker cannot do anything about it.
Bug reports and workarounds here: https://github.com/docker/for-win/issues/1560

The most promising workaround seems to go into Docker settings and do "Reset credentials" under "Shared Drives", than restart Docker.
