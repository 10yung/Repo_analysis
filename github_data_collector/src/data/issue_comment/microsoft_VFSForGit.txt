We give up waiting after 60 seconds in the automount path. This should not trigger a notification, as it is possible the mount is just taking a long time to complete.

I wanted to see what the project status was for the Mac - it seems like the EA release that was mentioned never shipped and the tracking ticket for Mac releases #629  hasn't been updated in nearly a year. Is the Mac port dead? What is the current status of the kext, etc? Would love to help.
I am trying to merge a remote that refers to a different repository into
the current GVFS enabled repo, but after merging the `src/` directory
becomes inaccessible and it is not possible to list or cd to this dir.

Here is what I have done:

```bash
$ gvfs clone https://myserver.xx/Sandbox/_git/foo
Clone parameters:
  Repo URL:     https://myserver.xx/Sandbox/_git/foo
  Branch:       Default
  Cache Server: Default
  Local Cache:  C:\.gvfsCache
  Destination:  C:\git\foo
Authenticating...Succeeded
Querying remote for config...Succeeded
Using cache server: None (https://myserver.xx/Sandbox/_git/foo)
Cloning...Succeeded
Fetching commits and trees from origin (no cache server)...Succeeded
Attaching ProjFS to volume...Succeeded
Validating repo...Succeeded
Mounting...Succeeded
Registering for automount...Succeeded
$ cd ./foo/src
$ git remote add -f upstream //net.xx/git/repo.git
Updating upstream
warning: no common commits
remote: Enumerating objects: 1878, done.
remote: Counting objects: 100% (1878/1878), done.
remote: Compressing objects: 100% (661/661), done.
Receiving objects:  90% (1691remote: Total 1878 (delta 1199), reused 1848 (delta 1198)
Receiving objects: 100% (1878/1878), 1.82 MiB | 5.85 MiB/s, done.
Resolving deltas: 100% (1199/1199), done.
From //net.xx/git/repo.git
... (branches)
$ git merge upstream/master --allow-unrelated-histories
CONFLICT (add/add): Merge conflict in .gitignore
Auto-merging .gitignore
Automatic merge failed; fix conflicts and then commit the result.
```
At this point the last `git` command never returns.  I can `taskkill` the
git process but afterwards I cannot list contents of src.  It is also
not possible to list the contents of `C:\git\foo\src` from another terminal
cmd or Git bash.

I am unsure how to proceed in finding out what goes wrong here,
any help would be appreciated!

After cloning out a repro with gvfs a file "XY.lib" seems not to be accessible.
link.exe did nothing for a long time and then printed an error:
>  LINK : Der 32-Bit-Linker (C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.23.28105\bin\HostX86\x86\link.exe)    konnte auf "E:\..\XY.lib" keine E/A f続r dem Arb   eitsspeicher zugeordnete Dateien durchf続hren. Die Verkn続pfung wird mit einem 64-Bit-Linker neu gestartet, um einen besseren Durchsatz zu erzie   len.                                                                                                                                             LINK : Die Verkn続pfung wird mit dem 64-Bit-Linker "C:\Program Files (x86)\Microsoft Visual Studio\2019\Professional\VC\Tools\MSVC\14.23.28105\   bin\HostX64\x86\link.exe" neu gestartet.  

I remove XY.lib within Explorer. After that git restore does not work:
> git restore XY.lib                  
>                   failed to run command 'restore': No error   

Git checkout hangs, after cancelling the following error is printed:
> git checkout XY.lib   
>                                 error: external process 'E:/code/src/.git/hooks/post-command.exe' failed          

Current versions:
>git --version
>                                                       git version 2.22.0.vfs.1.1       
     
>gvfs --version  
>                                                     GVFS 1.0.19175.3                  
Follow up to #1607 

See discussions here:

https://github.com/microsoft/VFSForGit/pull/1607#discussion_r350958963

And here:

https://github.com/microsoft/VFSForGit/pull/1607#discussion_r350960647

On how we can improve the performance of `gvfs sparse` by using the same algorithms as git.
See discussion here: https://github.com/microsoft/VFSForGit/pull/1605#discussion_r349820391

If `gvfs sparse` has a failure doing one of its steps (e.g. dehydrating) make sure that the error is surfaced clearly to the user and that they're provided with actionable steps.


```
Unhandled Exception: System.IO.FileNotFoundException: Could not find file 'M:\testSparse\L#Dirs1.txt'.
   at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
   at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
   at System.IO.StreamReader..ctor(String path, Encoding encoding, Boolean detectEncodingFromByteOrderMarks, Int32 bufferSize, Boolean checkHost)
   at System.IO.File.InternalReadAllText(String path, Encoding encoding, Boolean checkHost)
   at GVFS.CommandLine.SparseVerb.Execute(GVFSEnlistment enlistment) in C:\Repos\VFSForGit\src\GVFS\GVFS\CommandLine\SparseVerb.cs:line 154
   at GVFS.Program.<>c.<Main>b__0_4(GVFSVerb verb) in C:\Repos\VFSForGit\src\GVFS\GVFS\Program.cs:line 101
   at CommandLine.ParserResultExtensions.WithParsed[T](ParserResult`1 result, Action`1 action)
   at GVFS.Program.Main(String[] args) in C:\Repos\VFSForGit\src\GVFS\GVFS\Program.cs:line 58
```
This will help understand the impact of post-command hooks other than VFS4G's hook
Add a new build/pipeline that can be used to validate scenarios where custom post-command hooks call `gvfs sparse` and make it it a required part of the release process.