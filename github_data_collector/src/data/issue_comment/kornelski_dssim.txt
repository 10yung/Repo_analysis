Bumps [rayon](https://github.com/rayon-rs/rayon) from 1.2.1 to 1.3.0.
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href="https://github.com/rayon-rs/rayon/blob/master/RELEASES.md">rayon's changelog</a>.</em></p>
<blockquote>
<h1>Release rayon 1.3.0 / rayon-core 1.7.0 (2019-12-21)</h1>
<ul>
<li>Tuples up to length 12 now implement <code>IntoParallelIterator</code>, creating a
<code>MultiZip</code> iterator that produces items as similarly-shaped tuples.</li>
<li>The <code>--cfg=rayon_unstable</code> supporting code for <code>rayon-futures</code> is removed.</li>
<li>The minimum supported <code>rustc</code> is now 1.31.</li>
</ul>
<h2>Contributors</h2>
<p>Thanks to all of the contributors for this release!</p>
<ul>
<li><a href="https://github.com/cuviper">@cuviper</a></li>
<li><a href="https://github.com/c410-f3r">@c410-f3r</a></li>
<li><a href="https://github.com/silwol">@silwol</a></li>
</ul>
<h1>Release rayon-futures 0.1.1 (2019-12-21)</h1>
<ul>
<li><code>Send</code> bounds have been added for the <code>Item</code> and <code>Error</code> associated types on
all generic <code>F: Future</code> interfaces. While technically a breaking change, this
is a soundness fix, so we are not increasing the semantic version for this.</li>
<li>This crate is now deprecated, and the <code>--cfg=rayon_unstable</code> supporting code
will be removed in <code>rayon-core 1.7.0</code>. This only supported the now-obsolete
<code>Future</code> from <code>futures 0.1</code>, while support for <code>std::future::Future</code> is
expected to come directly in <code>rayon-core</code> -- although that is not ready yet.</li>
</ul>
<h2>Contributors</h2>
<p>Thanks to all of the contributors for this release!</p>
<ul>
<li><a href="https://github.com/cuviper">@cuviper</a></li>
<li><a href="https://github.com/kornelski">@kornelski</a></li>
<li><a href="https://github.com/jClaireCodesStuff">@jClaireCodesStuff</a></li>
<li><a href="https://github.com/jwass">@jwass</a></li>
<li><a href="https://github.com/seanchen1991">@seanchen1991</a></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/rayon-rs/rayon/commit/e16ae7779fd67bcb971cfd4d6a9f03a8df16b626"><code>e16ae77</code></a> Merge <a href="https://github-redirect.dependabot.com/rayon-rs/rayon/issues/469">#469</a></li>
<li><a href="https://github.com/rayon-rs/rayon/commit/94f1b997dbe0d56a6566f4faa7320879db628a86"><code>94f1b99</code></a> Release rayon 0.9.0 / rayon-core 1.3.0 / rayon-futures 0.1.0</li>
<li><a href="https://github.com/rayon-rs/rayon/commit/75f95c0f09f65d8365956d92e1e86eeb51eea63e"><code>75f95c0</code></a> Merge <a href="https://github-redirect.dependabot.com/rayon-rs/rayon/issues/463">#463</a></li>
<li><a href="https://github.com/rayon-rs/rayon/commit/60c0f312f3734c15a9a22c56e08a880fb27d1eef"><code>60c0f31</code></a> Soften the doc header on <code>plumbing</code></li>
<li><a href="https://github.com/rayon-rs/rayon/commit/e47c125a802d955f950aac1e0df57a78c560ade1"><code>e47c125</code></a> rename rayon::iter::internal to rayon::iter::plumbing</li>
<li><a href="https://github.com/rayon-rs/rayon/commit/953e0c5a692c8dcbd0f23f25d17f6542b6d590ec"><code>953e0c5</code></a> Merge <a href="https://github-redirect.dependabot.com/rayon-rs/rayon/issues/466">#466</a></li>
<li><a href="https://github.com/rayon-rs/rayon/commit/2d3c873d2abf96bf20e88c3319a0d951cb1b6da7"><code>2d3c873</code></a> Remove unnecessary clones</li>
<li><a href="https://github.com/rayon-rs/rayon/commit/8729bc382ed460f4d426bde5c86127186d435f99"><code>8729bc3</code></a> Clean up whitespace</li>
<li><a href="https://github.com/rayon-rs/rayon/commit/284a91f856703fe1fa1c7ac671a59882015fc1a1"><code>284a91f</code></a> Remove unused import in example</li>
<li><a href="https://github.com/rayon-rs/rayon/commit/e60baecad8208c458ae3b50919cf7091f320671f"><code>e60baec</code></a> Merge <a href="https://github-redirect.dependabot.com/rayon-rs/rayon/issues/468">#468</a></li>
<li>Additional commits viewable in <a href="https://github.com/rayon-rs/rayon/compare/rayon-core-v1.2.1...rayon-core-v1.3.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=rayon&package-manager=cargo&previous-version=1.2.1&new-version=1.3.0)](https://dependabot.com/compatibility-score.html?dependency-name=rayon&package-manager=cargo&previous-version=1.2.1&new-version=1.3.0)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
Being forced to move an image for comparison was quite inconvenient, as I intended to reuse them several times. As far as I can tell, though, comparisons shouldn't ever need to modify either input, so a reference should be fine.

The borrow gymnastics are necessary to maximize backwards compatibility. Changing function signatures always introduces the possibility of breaking some obscure use case, but I think this qualifies as [generalizing to generics](https://github.com/rust-lang/rfcs/blob/master/text/1105-api-evolution.md#minor-change-generalizing-to-generics-1).

I wasn't sure how best to include this in the tests, so I just slightly modified one of the tests to ensure both forms are used.

*Note:* I'm not familiar at all with the codebase! I just changed the signature for `compare()` and let the compiler guide me.
I saw issue #41 and as far as I understand it's related to v1 implementation
May be it can be easier now to add this feature