## Purpose

For some script mode usages and displays, the content is given additional information to help in finding the desired output (like with the `rofimoji` and `kaomoji rofi` user scripts).  Since there is already a spec and support for adding icons, it seems sensible to add in a "meta" field for entries to provide matchable text but not include it in the primary entry field.

## Implementation

Following the same logic as used for parsing the `icon` field on an entry, an additional `meta` field is added and parsed out.  This field is then used along with the primary entry content when doing token matching.  This is similar in behavior to how the `drun` dialog works with matching things like `keyword` or `category` for more contextual searching.
## Version

1.5.4-1

## Launch Command

`rofi -modi "ffh:/home/clu/experiments/fire-hist/ffh.lua" -show ffh -async-pre-read 30 -eh 2 -sep '^'`

## Steps to reproduce

* run rofi

## What behaviour you see

* Since '-sep' is dmenu specific, option is ignored. 

## What behaviour you expect to see

With rofi in dmenu mode, you can use the `-sep` and `-eh` options to display a single selection across a multiple lines, e.g `echo -en "a\nb^c\nd" | rofi -dmenu -sep '^' -eh 2`. IMO, this can be a nice way to display data. I do this for a firefox tab switcher script. 

![rofi-2019-12-12-1609-00000](https://user-images.githubusercontent.com/22080838/70754019-c8d51c00-1cfb-11ea-85d5-d0d6f37f01f5.png)

I have been wanting to display information this way but with modi scripts rather than `-dmenu`.  I do not think its possible at the moment, maybe programmatically in the script itself but I have not had any success yet. 

Could the `-sep` option or a similar function be added to mode scripts?   

Thanks for your time. 
   



## Version

Output of `rofi -v`

Version: 1.5.4

## Configuration

Output of `rofi -help` (in a [gist](https://gist.github.com/))
https://gist.github.com/fctorial/2d65499bb29e0f120e5ea48e0e84d7a4

## Launch Command

The commandline used to launch **rofi**

rofi -show drun


Would it be possible to cache whatever data structure rofi stores the parsed application entries in, and update it at startup if the application directories have changed? This might solve some of the slow startup issues.
When using multiple keyboards with different keyboard layouts, rofi does not respect the multiple keyboard layouts. Instead, it uses the same layout for all the keyboards. It uses the layout of the keyboard where the last keypress happened before rofi was started.

## Version
1.5.4

## Configuration
https://gist.github.com/MRAAGH/1f6ec5f864d590c7526b5c9da07f8b24
(everything is default)

## Launch Command
`rofi -dmenu`

## Steps to reproduce

* acquire a second physical keyboard
* run `xinput`
* now connect your second keyboard to the computer
* run `xinput` again and note down the new entry (that's the second keyboard)
* run `setxkbmap -device 12 de`, substituting `12` with the id of your second keyboard. In case there were multiple new entries in `xinput`, repeat this step for all the new id-s to make sure it works.
* congratulations, now your second keyboard has the german layout.
* open a terminal and type `rofi -dmenu`
* press the `Enter` key on your **first** physical keyboard.
* try typing something into rofi with each of the two keyboards, then quit rofi.
* type `rofi -dmenu` into the terminal again.
* press the `Enter` key on your **second** physical keyboard.
* try typing something into rofi with each of the two keyboards.

## What behaviour you see
The keyboards do not have different layouts while rofi is running. Instead, both of them take the layout of the keyboard on which you pressed the `Enter` key.

## What behaviour you expect to see
Instead, I expected the keyboard layouts to work the way they work in basically all other graphical programs. For example, dmenu does not have this issue at all.

## Why is this a problem
I'm using 2 keyboards, one for the left hand and one for the right, and they have different (custom) layouts. I assume I'm not the only one. But because of this issue, it's difficult to use rofi on such a setup.

## Version

Version: 1.5.4-31-git-eb5c4bfd (next)

## Configuration

Reproducable with stock config:

```bash
rofi -no-config -theme dmenu
```


## Launch Command

```bash
rofi -no-config -theme dmenu
```

## Steps to reproduce

run the command.

## What behaviour you see

* no visible window, or completely wrong for other themes.
![rofi-2019-11-11-1057-00000](https://user-images.githubusercontent.com/406245/68578690-c8cecb80-0472-11ea-8434-cf3402d56feb.png)


## What behaviour you expect to see

* correct horizontal theme.

## Version

Version: 1.5.4


## Configuration

No user configuration at all.

## Launch Command

```
sep="$(seq -s "â”€" 0 66 | sed 's/[0-9]//g')"
echo -e "one\ntwo\n$sep\napples\noranges\n$sep\nquit" | rofi -p "Pick the right action" -dmenu

```
## Use Case

When building CLI rofi-driven menu apps, it is sometimes very useful to separate groups of actions using separators to:
* improve the UX
* enhance readability
* indicate grouping

Currently, one has to resort to fake separators (see the above example), but this has disadvantages:

* No easy way to calculate separator width
* The separator is needlessly selectable, which is not so good for UX
* One has to handle the case when the user presses Enter on a selected separator
* One cannot set the separator color in the theme; the separator should be dimmer than the surrounding text, but fake separators _are_ text and so inherit the same foreground color.

Possible solutions:
* a single special character (like the horizontal box-drawing character in the above example) could be treated as a separator and extended to the right width
* a special string such as `<separator>` could be treated in the same way 

Thank you for considering this feature. Rofi is an amazing tool I rely on daily.
## Version

Version: 1.5.4

## Configuration

No user configuration at all.

## Launch Command

`echo -e '<span color="red">one</span>\n<span color="blue">two</span>\n' | rofi -p TEST -dmenu -markup-rows`

## Steps to reproduce

* run the above command
* type _span_ into the search box

## What behaviour you see

* both items are matched due to Pango markup

![rofi-span-problem](https://user-images.githubusercontent.com/30468319/68085379-74639480-fe51-11e9-9bec-e71d8f1f3bfb.png)

## What behaviour you expect to see

* no items should be matched


##  Version

rofi 1.5.4

## Steps to reproduce

* Download releases 1.5.4 :

https://github.com/davatorium/rofi/releases/download/1.5.4/rofi-1.5.4.tar.gz
https://github.com/davatorium/rofi/releases/download/1.5.4/rofi-1.5.4.tar.xz

* Extract and go to subprojects/libkutils/src

* Compare source file list with the corresponding repo tree  :

https://github.com/sardemff7/libnkutils/tree/6164bacaef10031ce77380499cfad2ae818ab6b0/src

* Or use the attached Dockerfile to reproduce the build failure.
[Dockerfile.txt](https://github.com/davatorium/rofi/files/3681748/Dockerfile.txt)

## What behaviour you see

* Some sources files are missing  :

git-version.c (required by meson)
xdg-theme-example.c (required by meson)
token-example.c (not required)

* Meson setup build failed :

$ meson setup build

subprojects/libnkutils/meson.build:117:4: ERROR:  File src/git-version.c does not exist.
subprojects/libnkutils/meson.build:192:4: ERROR:  File src/xdg-theme-example.c does not exist.

## What behaviour you expect to see

* Sources files existing and meson setup build command success.

Currently using rofi Version 1.5.1.

The dmenu option can accept tabular data, which in turn, rofi displays as columns and rows.  It believe it would be useful to have support for an optional non-selectable fixed row for column headers when handling tabular data.  This could be placed under message bar (such as the extra message bar), where the data in the extra message bar is aligned with the columns beneath it.

My particular use case where I see this fit is extracting information from TaskWarrior and displaying it in rofi.  A user could have many entries and scrolling further down the list, the fixed non-selectable headers row would stay under message bar. 

```
ID Age Project Tag  Due Description  Urg 
 3 3h  Test    test 2d  Testing  9.39
 2 3h  Test    none 1d  Finish me 8.95
```

## Version

1.5.4

## Launch Command

`rofi -show drun`

## Steps to reproduce

```sh
rofi -show drun -theme-str '#element { text-transform: lowercase; }'
```

or

```css
/* theme.rasi */
element {
   text-transform: lowercase;
}
```

## What behaviour you see

A theme error of `unexpected invalid property value`.

## What behaviour you expect to see

A list of entries that have a lowercase style applied to them. 

---

I was surprised to see [this old video](https://youtu.be/ARKIwOlazKI?t=1784) (2015, 00:29:45) to somehow have lowercased elements.

I did notice `text-transform` does not seem to be [supported](https://github.com/davatorium/rofi/wiki/Themes), but is this perhaps possible in a different way?

The option `drun-display-format` seemed promising at first, but I did not manage to figure out how to pass lowercase text to that in the [Pango markup language](https://developer.gnome.org/pygtk/stable/pango-markup-language.html).