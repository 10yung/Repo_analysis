Add decryption capabilities and also update completions to match 1.16.2.

Signed-off-by: Brandon Lum <lumjjb@gmail.com>

Signed-off-by: Peter Hunt <pehunt@redhat.com>

We already search required runtime dependencies inside paths so the
existence of global `crio.conf` is not necessary in all cases. We will
now not warn any more if the configuration file does not exist on the
system as well as set default the `log_level` to `info` to provide a
better default startup context.
We now support partial drop-in configuration files which will be assembled together on CRI-O startup.

A default (or user specified via the CLI) directory will be recursively iterated, whereas each file gets applied to the configuration in their processing order. This means that a configuration file named `/etc/crio/crio.conf.d/00-default` has a lower priority than a file `/etc/crio/crio.conf.d/01-my-config`. The configuration provided via `--config,-c` has always a higher priority than those inside the `--config-dir,-d`. The command line parameters have the highest configuration priority at all.

/cc @ereslibre @flavio @Martin-Weiss
This is an automated cherry-pick of #2912

/assign saschagrunert
This PR is built on top of https://github.com/cri-o/cri-o/pull/2378 and has some bonus additions:

- Increase the security of containers by removing the NET_RAW and SYS_CHROOT capabilty.
- integrate changes introduced by @Chenditang on github to update the crio.conf man page
- Add net.ipv4.ping_group_range to tests so that ping will still work
- fixes to urfave StringSlice handling, allowing StringSlices to properly be specified by EnvVars
- test: replace dnf with yum in system-packages installation, because the ami bump wasn't tested in https://github.com/cri-o/cri-o/commit/fcb6d26d685e2f13c244f7ce5c48d597ae6a82a9, and using the dnf module breaks rhel updates

Signed-off-by: Daniel J Walsh dwalsh@redhat.com
Signed-off-by: Peter Hunt pehunt@redhat.com
The header was wrongly formatted which is now fixed.
This is a possible fix for #2984 

The issue seems to be that the kubelet times out on the create request but crio doesn't error out when kubelet client times out. So, we end up with the pod being created and then kubelet keeps on trying to create the pod again and it can't since the name is reserved.

With the change, we error out on timeouts so the pod creation fails and the name is unreserved so later attempts by the kubelet to create a pod or container may succeed.

We may want to add more of these checks around long running operations rather than just at the end in follow-ups. 

Signed-off-by: Mrunal Patel <mrunalp@gmail.com>


Signed-off-by: Mrunal Patel <mrunalp@gmail.com>
**Description**

When running cri-o with seccomp enabled, and a default profile specified, the runtime falls back to "unconfined" when no profile is specified.

**Steps to reproduce the issue:**
1. Enable seccomp
2. Specify a default profile
3. Create a Pod

**Describe the results you received:**
Empty profile default to `unconfined`

**Describe the results you expected:**
Empty profile defaulting to `runtime/default`

**Output of `crio --version`:**
1.14.9