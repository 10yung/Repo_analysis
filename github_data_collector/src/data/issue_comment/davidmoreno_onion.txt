Hi
We are thinking to adopt onion for our commercial embedded system which runs on linux based operating system. Just to be sure, does LGPLv3 licence of onion is also valid when we use the option dependecies of onion:
    gnutls and gcrypt (SSL support)
    pthreads (threading support)
    libxml2 (WebDAV support)
    libpam (HTTP Basic Auth support using PAM)
    C++ compiler
    Systemd (support for listening on systemd sockets)
    sqlite3 (sqlite3 session backend)
    hiredis (Redis session backend)

We mean, can we develop webserver/websoket server/rest api using onion and keep source code closed?

Thanks 
Alex
Hello,

I start onion like this:

onion *o=onion_new(O_ONE_LOOP );

But in this mode it seems to close connection after each request. I would like to keep the connection alive.  Is this possible?

thanks! 
I was looking for a simple library written in C for handling HTTP and I was feeling stressed because the only one I found had a very complex API.

Then I found this!!  I am looking forward to using it and hopefully it will smoothly integrate with my software.

Thanks for this awesome product.
Hi 
At the ti arm tool chain arm-arago-linux-gnueabi-gcc/g++ try to compile error

[ 25%] Building C object src/onion/CMakeFiles/onion.dir/handlers/opack.c.o
[ 26%] Building C object src/onion/CMakeFiles/onion.dir/handlers/path.c.o
[ 26%] Building C object src/onion/CMakeFiles/onion.dir/handlers/internal_status.c.o
[ 27%] Building C object src/onion/CMakeFiles/onion.dir/version.c.o
[ 27%] Building C object src/onion/CMakeFiles/onion.dir/poller.c.o
[ 28%] Building C object src/onion/CMakeFiles/onion.dir/random-default.c.o
[ 28%] Linking C shared library libonion.so
[ 28%] Built target onion
[ 28%] Building CXX object src/bindings/cpp/CMakeFiles/onioncpp_static.dir/dict.cpp.o
In file included from /home/work/onion/src/bindings/cpp/dict.cpp:23:0:
/home/work/onion/src/bindings/cpp/dict.hpp:48:11: error: expected nested-name-specifier before 'internal_pointer'
/home/work/onion/src/bindings/cpp/dict.hpp:48:11: error: using-declaration for non-member at class scope
/home/work/onion/src/bindings/cpp/dict.hpp:48:28: error: expected ';' before '=' token
/home/work/onion/src/bindings/cpp/dict.hpp:48:28: error: expected unqualified-id before '=' token
/home/work/onion/src/bindings/cpp/dict.hpp:50:5: error: 'internal_pointer' does not name a type
/home/work/onion/src/bindings/cpp/dict.hpp:59:33: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:60:32: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:56:48: error: looser throw specifier for 'virtual Onion::Dict::key_not_found::~key_not_found()'
/opt/arm-arago-linux-gnueabi/bin/../lib/gcc/arm-arago-linux-gnueabi/4.5.3/../../../../arm-arago-linux-gnueabi/include/c++/4.5.3/exception:65:13: error:   overriding 'virtual std::exception::~exception() throw ()'
/home/work/onion/src/bindings/cpp/dict.hpp:159:43: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:166:47: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:175:31: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:185:9: error: expected ';' before 'Dict'
/home/work/onion/src/bindings/cpp/dict.hpp:186:47: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:192:28: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:197:42: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:202:26: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:207:7: error: expected ';' before 'std'
/home/work/onion/src/bindings/cpp/dict.hpp:207:34: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:214:56: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:221:46: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.hpp:244:27: error: expected ';' before 'noexcept'
/home/work/onion/src/bindings/cpp/dict.cpp:157:2: error: expected ';' at end of input
/home/work/onion/src/bindings/cpp/dict.cpp:157:2: error: expected '}' at end of input
In file included from /home/work/onion/src/bindings/cpp/dict.cpp:23:0:
/home/work/onion/src/bindings/cpp/dict.hpp: In constructor 'Onion::Dict::lock::lock(Onion::Dict::lock&&)':
/home/work/onion/src/bindings/cpp/dict.hpp:75:18: error: 'nullptr' was not declared in this scope
/home/work/onion/src/bindings/cpp/dict.hpp: In constructor 'Onion::Dict::Dict()':
/home/work/onion/src/bindings/cpp/dict.hpp:104:9: error: class 'Onion::Dict' does not have any field named 'ptr'
/home/work/onion/src/bindings/cpp/dict.hpp: In member function 'std::string Onion::Dict::operator[](const std::string&) const':
/home/work/onion/src/bindings/cpp/dict.hpp:132:38: error: 'ptr' was not declared in this scope
/home/work/onion/src/bindings/cpp/dict.hpp: At global scope:
/home/work/onion/src/bindings/cpp/dict.hpp:137:5: error: expected unqualified-id at end of input
/home/work/onion/src/bindings/cpp/dict.hpp:137:5: error: expected '}' at end of input
src/bindings/cpp/CMakeFiles/onioncpp_static.dir/build.make:62: recipe for target 'src/bindings/cpp/CMakeFiles/onioncpp_static.dir/dict.cpp.o' failed
make[2]: *** [src/bindings/cpp/CMakeFiles/onioncpp_static.dir/dict.cpp.o] Error 1
CMakeFiles/Makefile2:277: recipe for target 'src/bindings/cpp/CMakeFiles/onioncpp_static.dir/all' failed
make[1]: *** [src/bindings/cpp/CMakeFiles/onioncpp_static.dir/all] Error 2
Makefile:162: recipe for target 'all' failed
make: *** [all] Error 2


I have discovered that all programs written with libonion that receive at least one request leak 31 bytes after being closed.

Steps to reproduce:
- download current version of onion
- compile examples/hello/hello.c
- run it with valgrind (I used params `--leak-check=full --show-leak-kinds=all --keep-stacktraces=alloc --track-origins=yes`)
- make at least one request (access 127.0.0.1:8080 in your browser)
- stop the program with Control + C
- done, valgrind should output `still reachable: 31 bytes in 1 blocks` in its leak summary
When string with empty lines between lines with text is sent as a param of request (e.g. data from webform), the second and every next line with text begins with duplicated characters. Furthermore, the empty lines get deleted.

Example:
we send request through webform with method=post
```
test test


test test test


test test test test
```

the program calls onion_request_get_post, which returns
```
test test
tetest test test
tetest test test test
```

- Version: 0.8.0
- Code of a simple program that triggers the bug is attached. It's .txt instead of .c as GitHub doesn't allow that.
- Steps to trigger the bug are outlined above and in the program. I'm running Linux on i686 architecture in case it would turn out to be architecture-bound.

[code.txt](https://github.com/davidmoreno/onion/files/3438685/code.txt)
Hello, when I try to make onion on openBSD with the freebsd branch I always end up with this:
```
Generating fileserver_html.c
[ERROR load.c:52] Could not load external library i18n. Check plugin location rules at otemplate --help.]
```
and do not know what to do with. i18n builds succesfully and libi18n.so is in onion/build/tool/otemplate/templatetags.
Do you have any ideas?
It seems like the websockets code (when in single threaded mode) sits inside it's own loop and doesn't service any of the other HTTP requests.  Is this correct, or did I miss something in how to call the code?

How hard would it be to change it so that it returns to the main poll loop between websocket messages?
in: https://github.com/davidmoreno/onion/blob/master/src/onion/websocket.c#L207
``
        header[3 + 8 - i] = tlen & 0x0FF;
``

I am pretty sure the 3 should be a 1:

``
        header[1 + 8 - i] = tlen & 0x0FF;
``

There may also be a 32 vs 64 bit problem on systems where int isn't 64 bits.
In summary, the ofileserver example (with WebDAV support) behaves funny from both WinSCP and Gnome Files.

I've spent over a day experimenting with Onion's WebDAV support, and was able to explore a WebDAV endpoint using Gnome Files on Linux (but only on sub-folders), but WinSCP behaves funny. I tried the ofileserver example (compiling on Linux, accessed from a client on Windows), and though WinSCP does connect and handles subdirectories and their contents, the root directory displays a ".." entry for every file in the server root path, and no real files or folders. When WinSCP opens a sub-folder (using the folder open tool), files and folders are valid and working, albeit with Size and Changed date set to "0", but the previous directory entry shows a drive icon with no text in the label, and clicking it navigates to the root, which has all the ".." entries.

Feel free to ask any other questions about my environment or debugging information; this should be reproducable on the master branch.