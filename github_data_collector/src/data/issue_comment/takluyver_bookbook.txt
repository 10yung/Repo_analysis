Is there a way to generate table of content and add to each generate chapter. 

Hi

I tried using your bookbook, but I am getting error as below. could not understand what is going wrong. I had simplified my file names as required. 

![image](https://user-images.githubusercontent.com/11896263/49022232-5bbb1b00-f1ba-11e8-9d4b-2c2d9aac2ba2.png)

Any idea why this appear? Below is my current directory from where I run the command. 
![image](https://user-images.githubusercontent.com/11896263/49022265-6fff1800-f1ba-11e8-9548-9124b884acfe.png)


Thanks for this nice tool!  
Any idea how we could build a word index the same way [makeidx](https://ctan.org/pkg/makeidx) does?
How do I specify a title for the report/article produced by `bookbook`? what I auto-get is simply "Notebook"...
I have to say first that `bookbook` is great!

but not without some problems... If I try to use `bookbook` on notebooks where I have used the relatively new cell tags mechanism, as in

    python3 -m bookbook.latex --TagRemovePreprocessor.remove_input_tags='{"hide-code"}' --template ./art.tplx --TagRemovePreprocessor.remove_cell_tags='{"hide-cell"}'

everything breaks and I'm told
```
usage: latex.py [-h] [--output-file OUTPUT_FILE] [--pdf] [--template TEMPLATE]
                [source_dir]
latex.py: error: unrecognized arguments: --TagRemovePreprocessor.remove_input_tags={"hide-code"} --TagRemovePreprocessor.remove_cell_tags={"hide-cell"}
```

Why don't you simply pass to `nbconvert` the options not understood by `bookbook`? I have made the example of the tags preprocessor, but there are many other aspects of `nbconvert` that are configurable via command line options.

Thank you ·ç® gb


See https://github.com/ipython-contrib/jupyter_contrib_nbextensions/issues/1245 for context.

I believe that the html generator template file could be added as option to the CLI tool, but before I do that I'd like to have your opinion on the general approach here. Is there an easier way to reach the same goal? 
One can use `\newcommand` in a Jupyter notebook to define a macro, by putting it inside a math environment; e.g.

```
$$\newcommand{\bigO}{{\mathcal O}}$$
```
However, the conversion to Latex naturally then puts the `\newcommand` inside a math environment, which makes it available only within that set of math delimiters.

Furthermore, in notebooks one must define a given macro again in each notebook that uses it.  But when these notebooks are combined into a book, the resulting .tex file should only define each macro once.

It would be great if bookbook collected all the macros from the set of notebooks, and placed them together in the preamble of the .tex file (without math delimiters around them, of course).

As of PR #7, the labels on Latex cross links look like: *Chapter 2* or *Section 2.1*.

How do we let people configure these? Command line options? Notebook metadata? Nbconvert config? A separate bookbook config file? Custom templates?
Currently, I think notebooks have to match the regex `(\d+)-(.+)\.ipynb` (e.g. `01-introduction.ipynb`) for everything to work correctly. They are sorted lexicographically, and then the latex export uses its own numbering  (so 10, 15, 20 would become 1, 2, 3), while HTML uses the numbers from the filenames.

* Do we want to make the sorting smarter, so you can use `1-introduction` instead of `01-introduction`?
* Do we want to make HTML renumber the sequence like Latex does?