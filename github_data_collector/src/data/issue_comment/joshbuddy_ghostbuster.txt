When trying to get request a url I get this weird message:
`The request for http://my.domain.com:1234/ timed out
`
Although for 100% the site is online at that exact port on the exact page.

Any Suggestions?

EDIT:
This is my code:

```
phantom.test.root = "http://my.domain.com:1234";

phantom.test.add("MyTest", function() {

    this.get("/", function() {
        this.succeed();
    });

});
```

I'm imagining writing something like this to test user to user interactions via websockets:

``` coffee-script
phantom.test.add "Pinging via push", ->
  session1 = @get '/user_1', ->
    @body.click "#pingUser2"

  session2 = @get '/user_2', ->
    @body.assertFirst ".newPings", (ping)-> ping.innerHTML == "user_1"
    @wait 1, ->
      @succeed()
```

Is something like it in the works? Or would it necessitate a complete overhaul?

Thanks!

When attempting to run tests, I'm consistently having them time out. Even after a long start_wait — say two minutes — it still times out. During that two minute window, I can access the app server via my browser, so it is definitely running.

If I do the same above, but don't attempt to connect via the browser — i.e. just let ghostbuster do it's thing — no requests are logged. I watch a tail of the log and ghostbuster doesn't actually hit the application.

I'm currently running this against a Rails 3.1.3 application with the Thin web server.

There should be a helper for dumping the page contents to a file, and this should be automatically done when a test fails.

I tried to use console.log(@page.content) after clicking a link. The last screenshot showed a new page, but the logging showed html from the previous page.

Wait is a hack that slows things down and can give incorrect results.

I think it would be easy enough to follow links by using onLoadStarted and onLoadFinished. However, onLoadFinished does not get triggered for me. Any ideas?
