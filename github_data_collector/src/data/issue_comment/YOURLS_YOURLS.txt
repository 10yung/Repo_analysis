Two fixes for https://github.com/YOURLS/YOURLS/issues/2307
- patch by teyeheimans to report db-creation errors
- patch by me to lower key size to 191, to accommodate mysql 5.6 databases using utf8mb4

We ran into heavy load issues on our databases(AuroraSQL), we had a look and changed the Data Type of url column to VARCHAR(1024) from TEXT

TEXT is not a performance firndly data type.
I changed the version(s) app and db - to 1.7.4 and 483
The upgrade applies a patch on the database table yourls_url on column url
We haev notice a drastric decrease in db load.
This change was needed due to the long processing of data through includes /vendor/aura/sql/src/ExtendedPdo.php at the processing stage in Rebuilder
I noticed [here](https://github.com/YOURLS/YOURLS/wiki/PasswordlessAPI#usage-of-a-time-limited-signature-token) that md5 is used for time limited signature token.

This PR would allow sha1 hashs for time limited signature token but would be backward compatible. This is done by counting the string length of the signature. `md5()` creates a 32 char long hash, `sha1()` creates a 40 char long hash.

What do you think?
Hi there,

I had a problem with sharing on twitter (wrong/old url).
Sadly I saw no possibility to fix this with a plugin.
While coding I noticed a few other things

- tweet-limit in PHP was 140 (in PHP), now 280 everywhere
- enable/disable individual services (With fallback)
- instead only url, also text is posted to facebook (thats why I renamed "tweet_text" to "share_text"
- rewrote js: New url is only generated/written on click, not on every text-change (template in data-attribute). Url in href as non-js-fallback.

With the new js it is also more easy for plugin-devs to add other services. Just add a link with the href, the template and add the onclick.
Minimal example
```html
<a href="https://example.com/?t=<?php echo $text; ?>" 
data-shareurl="https://example.com/?t=#share#" 
onclick="share(this);return false;">TEST</a>
```





Hey there

Now that tests are all in the main repo, we should make sure someone running tests locally will not lose data. I mean, I for one just lost all data on my dev box just because I wanted to test tests :)

YOURLS-unit-tests used to mention:
- Create an empty MySQL database and user. **Do not use an exisiting database** or you will lose data, guaranteed.  
- Copy `yourls-tests-config-sample.php` to `yourls-tests-config.php`, edit it and include your database name, user and password.  

I think we should provide such a config file for tests, *and* some sort of checks to make sure the average ~~Ozh~~ Joe won't erase all their data. Thoughts?
This bug appears on the website isn't hosted on port 80/443.
Use `HTTP_HOST` to replace the `SERVER_NAME`.

For example, The `$_SERVER['SERVER_NAME']` maybe `127.0.0.1` when the website is hosted on `127.0.0.1:8008`. But `$_SERVER['HTTP_HOST']` will be `127.0.0.1:8008` in this situation.

* [x] I've read the [guidelines for Contributing to YOURLS Projects](https://github.com/YOURLS/.github/blob/master/CONTRIBUTING.md)
* [x] This request isn't a duplicate of an existing issue
* [x] I've read the [docs](https://yourls.org/) and followed them (if applicable)
* [x] This is not a personal support request that should be posted on the [YOURLS Discourse](https://discourse.yourls.org/) community

**Describe the bug**
If a plugin directory is symlinked into YOURLS' plugins directory, calls to `yourls_plugin_url()` for that plugin's directory return nonexistent, incorrect URLs.

**To Reproduce**
Steps to reproduce the behavior:
1. Symlink a plugin directory into `YOURLS_ROOT/user/plugins/`
2. Load a page that the plugin affects, e.g. by injecting a script or stylesheet

A plugin that uses `yourls_plugin_url()` is needed, of course. I discovered this issue while installing the [Sleeky](https://github.com/Flynntes/Sleeky) backend.

So, let's say I have a plugin living in `/home/dgw/repos/Sleeky/sleeky-backend`, with symlink `/home/dgw/yourls/user/plugins/sleeky-backend` pointing to it, for the purpose of explanation.

**Expected behavior**
The injected asset loads correctly. `yourls_plugin_url('file.ext')` generates the URL `https://yourls_site/user/plugins/sleeky-backend/file.ext`

**Actual behavior**
The injected asset fails to load, because the URL generated is incorrect. `yourls_plugin_url('file.ext')` generates `https://yourls_site/home/dgw/repos/Sleeky/sleeky-backend/file.ext`.

**Versions**
YOURLS 1.7.x (the code for this function has not changed since 1.6) on Ubuntu Linux under nginx with php-fpm.

**Additional context**
I made the examples above with a specific file for clarity. However, Sleeky itself uses `yourls_plugin_url( __DIR__ )` and then stores that value for later. Either way, the method used in `yourls_plugin_basename()` to remove the leading absolute path is likely the root cause here.

There's an easy workaround to this, of course: Don't symlink plugin directories. But this approach to adding plugins works in many, many different software packages—I use it a ton. Low priority this bug may be, I do think it really _is_ a bug.
**Describe the bug**
When putting load on yourls, it can happen that it tries to insert the same key again. This results in a db error, which message is send as respone with http 200.

**To Reproduce**

Put load on service with parallel curl commands;

    for i in {1..5}; do curl -w'\n' -sSiv --raw "https://<host>/yourls-api.php?action=shorturl&format=simple&signature=<sig>&url=http%3A%2F%2F<url>" & done

You might want to increase the counter and/or try it several times.

**Expected behavior**

Catch the db exception, because it could be handled, either
 - retry or
 - respond with http status 500 (Internal server error) or maybe 503 (service unavailable)

Catch all unkown exceptions and respond with 500, log error.

**Actual behavior**

Response is the db error message with HTTP/1.1 200 OK

**Output**

    HTTP/1.1 200 OK

     <br />
    <b>Fatal error</b>:  Uncaught PDOException: SQLSTATE[23000]: Integrity constraint violation: 1062 Duplicate entry '1hwza' for key 'PRIMARY' in 
    /var/www/html/includes/vendor/aura/sql/src/ExtendedPdo.php:748
    Stack trace:
    #0 /var/www/html/includes/vendor/aura/sql/src/ExtendedPdo.php(748): PDOStatement-&gt;execute()
    #1 /var/www/html/includes/vendor/aura/sql/src/ExtendedPdo.php(306): Aura\Sql\ExtendedPdo-&gt;perform('INSERT INTO `yo...', Array)
    #2 /var/www/html/includes/functions.php(161): Aura\Sql\ExtendedPdo-&gt;fetchAffected('INSERT INTO `yo...', Array)
    #3 /var/www/html/includes/functions.php(278): yourls_insert_link_in_db('http://www.XXXX...', '1hwza', 'http://www.qweq...')
    #4 /var/www/html/includes/functions-api.php(21): yourls_add_new_link('http://www.XXXX...', '1hwza', 'http://www.XXXX...')
    #5 /var/www/html/includes/functions-plugins.php(150): yourls_api_action_shorturl(false)
    #6 /var/www/html/yourls-api.php(35): yourls_apply_filter('api_action_shor...', false)
    #7 {main}
      thrown in <b>/var/www/html/includes/vendor/aura/sql/src/ExtendedPdo.php</b> on line <b>748</b><br />


**Versions**
1.7.2 on Google Cloud Kubernetes

![TIM截图20190720004014](https://user-images.githubusercontent.com/17900420/61551206-23d55080-aa87-11e9-8e3d-abc3746d3e67.png)
