Priv[] privs = target.getAnnotationsByType(Priv.class);
target is a method，and hava a Priv annotation. 
the method "getAnnotationsByType" got a empty array 
Fix #220 
```
                public boolean isDoubleSlot() {
			if (kind == Kind.PRIMITIVE) {
				char ch = descriptor.charAt(0);
				return ch == 'J' || ch == 'L';
			}
			return false;
		}
```

`ch == 'L'` should be `ch == 'D'` ? Double type primitive takes up two slots.
I use  spring-loaded  reload tomcat project , there are some  log as follow 


`20-Jun-2019 09:55:01.470 信息 [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.startup.HostConfig.undeploy Undeploying context [/workstaion]
20-Jun-2019 09:55:01.514 警告 [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [workstaion] appears to have started a thread named [Log4j2-TF-3-Scheduled-1] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 sun.misc.Unsafe.park(Native Method)
 java.util.concurrent.locks.LockSupport.parkNanos(LockSupport.java:215)
 java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.awaitNanos(AbstractQueuedSynchronizer.java:2078)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:1093)
 java.util.concurrent.ScheduledThreadPoolExecutor$DelayedWorkQueue.take(ScheduledThreadPoolExecutor.java:809)
 java.util.concurrent.ThreadPoolExecutor.getTask(ThreadPoolExecutor.java:1067)
 java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1127)
 java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
 java.lang.Thread.run(Thread.java:745)
20-Jun-2019 09:55:01.516 警告 [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [workstaion] appears to have started a thread named [FileSystemWatcher: files=#8 cl=WebappClassLoader
  context: workstaion
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@548a9f61
] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:212)
 java.lang.Thread.run(Thread.java:745)
20-Jun-2019 09:55:01.521 警告 [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [workstaion] appears to have started a thread named [heartbeat thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.a.control.service.HeartbeatService.heartbeat(HeartbeatService.java:65)
 com.a.control.service.HeartbeatService.lambda$start$0(HeartbeatService.java:54)
 com.a.control.service.HeartbeatService$$Lambda$47/1616083987.run(Unknown Source)
 java.lang.Thread.run(Thread.java:745)
20-Jun-2019 09:55:01.525 警告 [ContainerBackgroundProcessor[StandardEngine[Catalina]]] org.apache.catalina.loader.WebappClassLoaderBase.clearReferencesThreads The web application [workstaion] appears to have started a thread named [workstation updategrade thread] but has failed to stop it. This is very likely to create a memory leak. Stack trace of thread:
 java.lang.Thread.sleep(Native Method)
 com.a.control.service.UpgradeService.start(UpgradeService.java:45)
 com.a.control.service.UpgradeService.lambda$execute$0(UpgradeService.java:35)
 com.a.control.service.UpgradeService$$Lambda$52/1432022325.run(Unknown Source)
 java.lang.Thread.run(Thread.java:745)
20-Jun-2019 09:55:01.881 信息 [localhost-startStop-2] org.apache.catalina.startup.HostConfig.deployWAR Deploying web application archive E:\dev\service\apache-tomcat-8.0.38\webapps\workstaion.war
20-Jun-2019 09:55:02.086 信息 [FileSystemWatcher: files=#8 cl=WebappClassLoader
  context: workstaion
  delegate: false
----------> Parent Classloader:
java.net.URLClassLoader@548a9f61
] org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading Illegal access: this web application instance has been stopped already. Could not load [com.a.control.config.CorsConf__I]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
 java.lang.IllegalStateException: Illegal access: this web application instance has been stopped already. Could not load [com.a.control.config.CorsConf__I]. The following stack trace is thrown for debugging purposes as well as to attempt to terminate the thread which caused the illegal access.
        at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForResourceLoading(WebappClassLoaderBase.java:1353)
        at org.apache.catalina.loader.WebappClassLoaderBase.checkStateForClassLoading(WebappClassLoaderBase.java:1341)
        at org.apache.catalina.loader.WebappClassLoaderBase.loadClass(WebappClassLoaderBase.java:1206)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:411)
        at java.lang.ClassLoader.loadClass(ClassLoader.java:357)
        at java.lang.ClassLoader.defineClass1(Native Method)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:763)
        at java.lang.ClassLoader.defineClass(ClassLoader.java:642)
        at org.springsource.loaded.ChildClassLoader.defineClass(ChildClassLoader.java:39)
        at org.springsource.loaded.TypeRegistry.defineClass(TypeRegistry.java:1306)
        at org.springsource.loaded.CurrentLiveVersion.define(CurrentLiveVersion.java:124)
        at org.springsource.loaded.CurrentLiveVersion.<init>(CurrentLiveVersion.java:111)
        at org.springsource.loaded.ReloadableType.loadNewVersion(ReloadableType.java:422)
        at org.springsource.loaded.TypeRegistry.loadNewVersion(TypeRegistry.java:1018)
        at org.springsource.loaded.agent.ReloadableFileChangeListener.fileChanged(ReloadableFileChangeListener.java:104)
        at org.springsource.loaded.agent.Watcher.determineChangesSince(FileSystemWatcher.java:251)
        at org.springsource.loaded.agent.Watcher.run(FileSystemWatcher.java:235)
        at java.lang.Thread.run(Thread.java:745)

20-Jun-2019 09:55:02.185 信息 [FileSystemWatcher: files=#8 cl=WebappClassLoader`


version:
  reloaded 1.2.6
 tomcat8
spring 5.1.6



…lease raise a jira"

 , when enable  Option  watchJars. issue #96 ,#102
this project is very amazing
now i have some questions

i use the aspectj at the loaded time
so the run command is ：set JAVA_OPTS= -javaagent:aspectjweaver.jar  
then i use startup.bat  to start tomcat

when i want to use spring-loaded
the run command is :  set JAVA_OPTS= -javaagent:spring-loaded.jar -noverify -javaagent:aspectweaver.jar
but start tomcat error
the error:
![default](https://user-images.githubusercontent.com/25191604/51292097-a469b480-1a44-11e9-949e-d39b267722ec.png)

how can i deal with it,thank u 
Hi team,

I have a project setup like this. 

/core
  /src/main/
   /resources/META-INF/
      web-fragment.xml
      /resources/jsp/
        fragment.jsp
   /java/
     FragmentTest.java

 /web
  /src/main/
    /webapp/
      /WEB-INF/web.xml
      /jsps/
        parent.jsp
    /java/
      ParentTest.java

I am using spring loaded too. Now whenever I make a change in a class file, it gets hot swapped by spring loaded. The problem comes when I want to deal with JSPs, especially the JSPs within the fragments. I need to restart my tomcat whenever a change in core - jsp is occured.

Any work around there ..?
version 3.1.1 working and show log 
version 5.0.6 working  but not show log and i was check server option Moudules auto reload by default
but 3.1.1 no options it's working very well..
who notice to me this reson and some advice 
I want to know what's the matter
Please comment 

I use Tomcat  8.0
There were several test case failing when './gradlew clean build', those cases are hard coded to read test files from 'bin' folder which doesn't exist.

```
org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > testStaticMethodReference FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:127

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > testReferenceInstanceMethodOfObject FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:85

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > testCreatingAndInvokingMethodsOnInstance FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:256

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > serialization2 FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:216

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > githubIssue34_2 FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:246

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > testClassMakingSuperCalls2 FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:372

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > serialization FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:187

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > githubIssue34 FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:72

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > testReloadingInOtherVM FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:291

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > testRunClass FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:66

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > serializationGroovy FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:232

org.springsource.loaded.test.SpringLoadedTestsInSeparateJVM > testClassMakingSuperCalls FAILED
    java.lang.NullPointerException at SpringLoadedTestsInSeparateJVM.java:351

org.springsource.loaded.test.ConstantPoolScannerTests > testConstantPoolScanner FAILED
    java.lang.NullPointerException at ConstantPoolScannerTests.java:109

479 tests completed, 13 failed, 25 skipped
```

It seems real folder should be judged via TestUtils.getPathToClasses() function.

Then all test case passed.
spring-loaded report error when running in jdk 10/9

This project has any plan to support new java version 10 and 9 ? 

```
org.springsource.loaded.agent.SpringLoadedPreProcessor preProcess
error: Unexpected problem transforming call sites
java.lang.IllegalArgumentException
at sl.org.objectweb.asm.ClassReader.<init>(Unknown Source)
at sl.org.objectweb.asm.ClassReader.<init>(Unknown Source)
at org.springsource.loaded.MethodInvokerRewriter.rewrite(MethodInvokerRewriter.java:345)
at org.springsource.loaded.MethodInvokerRewriter.rewrite(MethodInvokerRewriter.java:99)
at org.springsource.loaded.TypeRegistry.methodCallRewriteUseCacheIfAvailable(TypeRegistry.java:1002)
at org.springsource.loaded.agent.SpringLoadedPreProcessor.preProcess(SpringLoadedPreProcessor.java:361)
at org.springsource.loaded.agent.ClassPreProcessorAgentAdapter.transform(ClassPreProcessorAgentAdapter.java:107)
at java.instrument/java.lang.instrument.ClassFileTransformer.transform(ClassFileTransformer.java:246)
at java.instrument/sun.instrument.TransformerManager.transform(TransformerManager.java:188)
at java.instrument/sun.instrument.InstrumentationImpl.transform(InstrumentationImpl.java:560)
at java.base/java.lang.ClassLoader.defineClass2(Native Method)
at java.base/java.lang.ClassLoader.defineClass(ClassLoader.java:1101)
at java.base/java.security.SecureClassLoader.defineClass(SecureClassLoader.java:206)
at java.base/jdk.internal.loader.BuiltinClassLoader.defineClass(BuiltinClassLoader.java:760)
at java.base/jdk.internal.loader.BuiltinClassLoader.findClassInModuleOrNull(BuiltinClassLoader.java:681)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClassOrNull(BuiltinClassLoader.java:606)
at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:580)
at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:499)

```
