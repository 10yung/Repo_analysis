# ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰
# OVER 5 years in the making!
# ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰ðŸŽ‰

So i ran into a crash when opening a modal screen that loads in a `PM::WebScreen`. If you close the modal before the content loads, the app would crash. So decided to look into if it was possible to get this old branch up and running and it's working great for simple web page display in a screen.

Once i merged master into the `wk_web_view` branch, the changes are actually quite simple!

I've tested this on ios 13 and displaying a simple web page works great:

```ruby
class GoogleWebScreen < PM::WebScreen
  title "Google"

  def on_load
    set_nav_bar_button :left, title: "Close", action: :close
  end

  def content
    NSURL.URLWithString("https://www.google.com")
  end
end
```

Closes #543 
I have a CollectionScreen that I'm using to display dates. If I change the dates on the collection and call `reload_data`, I get the following error: 

`'NSInternalInconsistencyException', reason: 'UICollectionView
 received layout attributes for a cell with an index path that does not exist: <NSIndexPath: 0xc000000000e00016> {length = 2, path = 0 - 7}'`

The web is full of reports like the following: 

http://villageblacksmith.consulting/uicollectionviewcontroller-crashes/

However, calling `this.collectionViewLayout.invalidateLayout` or `this.collectionView.collectionViewLayout.invalidateLayout` seems to have no effect.

The error is exactly the same no matter what data I update with (even an empty array).

I've been trying to resolve this for about 24 hours with no progress so I wanted to check in to see if anyone here has thoughts on how to get data reloading properly. 

Thanks!


Hi. I would like to use more powerful Tab Bars by using a pod like RAMAnimatedTabBarController: https://github.com/Ramotion/animated-tab-bar

Their documentation indicates:

> Set the class of the UITabBarController to RAMAnimatedTabBarController in your Storyboard or nib.
> For each UITabBarItem, set the class to RAMAnimatedTabBarItem.

How would I be able to specify a custom class when using `open_tab_bar` in PM?

Tap and long-press events on the table-rows are handled by ProMotion, but only in the whitespace on the fringes of the table-row. 

Taps on the subviews of the custom TableViewCell aren't captured by Promotion's event-handling.

To whom it may concern,

In the documentation, the `CollectionScreen` _should_ call the `on_load` method once `viewDidLoad` gets called. Via manual testing, I found this doesn't happen.

I also believe I found the issue in the code.

The following method, `view_did_load`, calls `on_load`, and is common to all screens:
https://github.com/infinitered/ProMotion/blob/a40c03ca89e21c21ef4c2fc35d5d3b85ea4c77de/lib/ProMotion/screen/screen_module.rb#L38

In `ProMotion::Collection#viewDidLoad`, which is an include of `CollectionScreen`, you'll notice that `self.view_did_load` is never called:
https://github.com/infinitered/ProMotion/blob/a40c03ca89e21c21ef4c2fc35d5d3b85ea4c77de/lib/ProMotion/collection/collection.rb#L19

Whereas in `ScreenModuleViewController#viewDidLoad`, it is called (as it should be):
https://github.com/infinitered/ProMotion/blob/a40c03ca89e21c21ef4c2fc35d5d3b85ea4c77de/app/screens/screen_module_view_controller.rb#L13

Please fix! :) Meanwhile, I will override `viewDidLoad` in my subclass of `PM::CollectionScreen`, and place the following code there:

```
  def viewDidLoad
    super
    self.view_did_load if self.respond_to?(:view_did_load)
  end
```

Best regards,
Sathya Sekaran

I ran into an issue where when setting a `title_view:` on a table section would actually set the RMQ stylesheet I had set on the screen to `nil`, causing all sorts of problems for the cells underneath.

I fixed this in my project by doing this in `table.rb`.

``` ruby
# Section header view methods
def tableView(_, viewForHeaderInSection: index)
  section = promotion_table_data.section(index)
  view = section[:title_view]
  view = section[:title_view].new if section[:title_view].respond_to?(:new)

  # Added the line below to fix the issue...
  view.stylesheet = self.stylesheet if self.stylesheet && view.respond_to?(:stylesheet=)

  view.on_load if view.respond_to?(:on_load)
  view.title = section[:title] if view.respond_to?(:title=)
  view
end
```

 Not sure if we should add this to redpotion or what...

Is there a straightforward way to add sibling views to table_view in TableScreen and GroupedTableView?

I'm looking specifically at 2 use cases:
- (A) when the table_view and a sibling view don't overlap, say table_view at the top half of the screen and the sibling view at the bottom half
- (B) when the sibling view overlays/overlaps the table_view.

I created a variation of the classes â€” TableViewController2, TableScreen2 and GroupedTableScreen2 to inherit from a UIViewController and adding the table_view as a subview so sibling views can be added to the resulting TableScreen2 (to work with use cases A and B). It looks like this modification can be made directly to the original 3 classes and still remain compatible.

If there's no way to do this currently with ProMotion, and there isn't a fundamental issue with this, I can create a PR for this.

I haven't thought of specific ways to test this other than the existing spec. If anyone has any idea, feel free to pitch in :)

On the simulator I can't test this, but any of you know if the longpress action will interfere with Iphone 6s 3D touch or some like that? the real question is "the longpress action works fine on the iPhone 6s?"

go here:

http://promotion.readthedocs.org/en/master/

search for 'UILabel'

click on any of the resulting search results

you will be taken to a 'You've found something that doesn't exist.' page

can someone point me to an example of putting several pieces of data on one table cell?

i'm trying to do something like this:

---
## product 1------------$99.00
## product 2------------$48.00

etc.. with one string left aligned, one right aligned (ignore dashes in center)..  i have looked at lots of examples would appreciate the help.
