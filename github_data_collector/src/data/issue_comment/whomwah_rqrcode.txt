How might I provide attribution to this source when implementing a new function in an unrelated gem that uses this gem as part of its code base?

I already have a system of getting a ruby script to print off an image set up, but going to see if this poetry generator works with this QR Code gem.
Getting the following error `Encoding::UndefinedConversionError ("\x89" from ASCII-8BIT to UTF-8)` on saving png image as the README shows

Would be helpful if the gem included a `CHANGELOG.md` to make it straight forward to figure out what to look out for when updating.

These tend to be automatically parsed by dependency tools such as [dependabot](https://dependabot.com/) as well which makes for great developer experience.

Example of formatting: https://github.com/stripe/stripe-ruby/blob/master/CHANGELOG.md

As written in https://github.com/whomwah/rqrcode/issues/77 it supports to export as pure HTML so it can be styled with css. As a bonus it accepts a path to a logo which can be overlayed.

`.as_css` takes arguments as a hash for `size`, `logo`, `logo_size`, `id`, `class`

The logo should always be centered. 

Example CSS is provided, Readme updated, specs added and all tests passing.


![image](https://user-images.githubusercontent.com/13366714/66145261-fdd93a00-e5f9-11e9-956b-64e3ba62c688.png)

i've implemented for our project a render method css. i did this via rails_helper

the styling is done 100% via CSS so it's fully customizable, for example having rounded data instead of just squares. different coloring, also possible. the logo is just a png that will be positioned centered. up or down scaling is done by px calculation

i can share the helper module, but i wonder, what would be the best way to integrate it into this gem? i can imagine it's useful for people who want customization.  for example, look at the anchors (those squares). some of the corners are rounded (each has individual classes, so you can style them one for one)


feel free to try it out and please let me know how we could implement this as a render method


helper is: https://gist.github.com/krtschmr/9e7b297763901efbe6cf02b4cb13ae5f

i can call it like this

```
.row.mb-5=qr_code(instruction.to_qr, logo_size: 24)
.row.mb-5=qr_code(instruction.to_qr, level: :h)
.row.mb-5=qr_code(instruction.to_qr, width: 350, logo_size: 64, level: :h)
```
and it renders me

![image](https://user-images.githubusercontent.com/13366714/66110145-b92baf80-e5b5-11e9-9acc-e3925ae596ad.png)



This makes it so the svg can scale via css if used in a browser.
Hello,
At first, thank you for your great gem! rQRCode is very handy and easy to use.

I'd like to embed SVG outout to HTML, like follwing;
~~~erb
<div>
 <p>Scan this code: </p>
 <%= raw RQRCode::QRCode.new(draft_url(@draft)).as_svg(xml_decleration: false) %>
</div>
~~~

To allow embedding as such style,  I need to;
1) remove XML declaration tag 
2) add `viewBox` attribute to `<svg>` element

This PR adds `:xml_declaration` option for 1.

Thanks,
Setting `fill` attribute is more straightforward than setting `fill` property in `style` attribute. Moreover, it eliminates needs to add styles to `style-src` of Content Security Policy.

Tested with https://github.com/kagucho/mastodon/commit/5bb74ff4d32636bdd4372bdbe7c7f5351e1a16cc.
Added a class to the table to be used in css and avoid conflicts with other table.

Css code can now be re arranged as: (Sass)

`.qr {`
  `border-width: 0;`
  `border-style: none;`
  `border-color: #0000ff;`
  `border-collapse: collapse;`
  `td {`
  `border-left: solid 10px #000;`
  `padding: 0; `
  `margin: 0; `
  `width: 0px; `
  `height: 10px; `
  `}`
`}`


`td.black { border-color: #000; }`
`td.white { border-color: #fff; }`