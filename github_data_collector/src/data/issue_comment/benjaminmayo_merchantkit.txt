While beta testing, these two situations occur, although not commonly, it's not 1/100, it's more like 1/20.

Situation:  Purchase screen appears and disappears rapidly

1.  The application starts
2.  The merchantkit instance is created and setup
3.  The state of a product is found to be "notPurchased"
4.  The purchase screen is displayed
5.  Started available purchases task for products
6.  Available purchases finds there is a new purchase and sets expiryDate to nil, which causes the purchase to be again valid
7.  Purchase screen disappears.
8.   Invoked receipt update for purchases, updates receipts

I would like to avoid this purchase screen appearing and disappearing.  Do you have any advice for the proper way to avoid this?



Situation:  Hung purchase

1.  Receipt is checked
2.  Product is notPurchased
3.  Purchase screen is displayed
4.  Purchased product
5.  Some large network lag occurs, receipt is not gotten
6.  Stays on purchase screen with product showing as "purchased"
7.  There is no call to func merchant(_ merchant: Merchant, didChangeStatesFor products: Set<Product>)

I think I should just manually start a test during productInterfaceController didCommit and didRestore, but was wondering any opinion.
