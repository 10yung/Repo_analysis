Seems to me that you have redirect loop in issues regarding ability to connect to on premises installed Microsoft Exchange. (#1623, #1634, #1616....)



The thing is Microsoft disabled POP3 and IMAP by default, and now offers web API (Exchange web api services - EWS) as default way to access it, not using even MAPI any longer...

I'm not able to add those features myself, but here are two links that can help

(C++ library for accessing EWS, created for Thunderbird):
[Libews](https://github.com/stonewell/exchange-ews-thunderbird/blob/master/README.md#components)

Microsoft official stuff:
[Exchange developer content](https://docs.microsoft.com/en-us/exchange/client-developer/exchange-server-development)

[Microsoft's officila EWS support by Exchange server versions](https://docs.microsoft.com/en-us/exchange/client-developer/exchange-web-services/ews-functionality-in-exchange-product-versions)
what is the exact code to load the new message using mailcore2
When using Swift MCOAttachment's filename property (inherited from MCOAbstractPart, API doc[ here](http://libmailcore.com/api/objc/Classes/MCOAbstractPart.html#//api/name/filename)) is declared as an implicitly unwrapped optional. But I'm encountering an email where the attachments are unnamed, and attempting to access the property causes a crash with the message:

`Fatal error: Unexpectedly found nil while implicitly unwrapping an Optional value`

Looking at the plain text rendering of the message it lists the attachments like this:

```
- Untitled, 492 bytes
- Untitled, 1.2 KB
```

How do I handle this without a crash?
I see a lot of `EXC_BAD_ACCESS KERN_INVALID_ADDRESS` crashes on iOS when running IMAP operations. I have sessions being called from background operation queues. Based on the issues I have gone through, it seems likely there is a threading issue here.

My question is:
- What is expected when accessing/updating a property or calling an operation on `IMAPSession`? 
I set the session dispatch queue explicitly to `DispatchQueue.global(qos: DispatchQoS.QoSClass.utility)` when I initialize it. Does that mean any and all references to that session HAVE to be only from the session's dispatch queue like the following? 


```
session.dispatchQueue.async {
    session.password = // some password
}
```
```
session.dispatchQueue.async {
    session.fetchMessageOperation(withFolder: currFolder, uid: currUID).start { ...  }
}
```


Here are some crash reports for the crashes that happen all the time:

------------------ 
    Crashed: com.apple.root.default-qos
    0  libsystem_platform.dylib       0x186637570 _os_lock_corruption_abort + 36
    1  libsystem_platform.dylib       0x18663518c _OSSpinLockLockYield + 94
    2  MyApp                         0x105285fe8 mailcore::Object::release() + 71852
    3  MyApp                         0x1052d712c mailcore::IMAPAsyncConnection::setLastFolder(mailcore::String*) + 403952
    4  MyApp                         0x1052dcffc mailcore::IMAPAsyncSession::sessionForFolder(mailcore::String*, bool) + 428224
    5  MyApp                         0x1052c3714 mailcore::IMAPOperation::start() + 323544
    6  MyApp                         0x1052ff3dc -[MCOOperation start] + 74024
    7  MyApp                         0x105311408 -[MCOIMAPFetchContentOperation start:] + 13976
    8  MyApp                         0x1049cfb54 MCOIMAPSession.fetchContent(carrierFolder:UID:saveToDir:dispatchCompletionOnQueue:completionBlock:) + 2938 (Extensions+Shared.swift:2938)
    9  MyApp                         0x104d5eca4 MessageFragmentDownloadOperation.downloadMessageFragment(messageIDToken:messageStatus:uidToFetch:fromFolder:completionBlock:) + 345 (MessageFragmentDownloadOperation.swift:345)
    10 MyApp                         0x104d5c830 closure #1 in closure #1 in closure #1 in closure #1 in MessageFragmentDownloadOperation.execute() + 242 (MessageFragmentDownloadOperation.swift:242)
    11 MyApp                         0x1042b0338 thunk for @escaping @callee_guaranteed () -> () (<compiler-generated>)
    12 libdispatch.dylib              0x1865f5610 _dispatch_call_block_and_release + 24
    13 libdispatch.dylib              0x1865f6184 _dispatch_client_callout + 16
    14 libdispatch.dylib              0x1865cfb7c _dispatch_queue_override_invoke + 668
    15 libdispatch.dylib              0x1865dc110 _dispatch_root_queue_drain + 344
    16 libdispatch.dylib              0x1865dc8b0 _dispatch_worker_thread2 + 116
    17 libsystem_pthread.dylib        0x186645f64 _pthread_wqthread + 212
    18 libsystem_pthread.dylib        0x186648ae0 start_wqthread + 8


------------------ 
    Crashed: com.apple.root.utility-qos
    0  MyApp                         0x103433930 mailcore::IMAPAsyncConnection::operationsCount() + 402924
    1  MyApp                         0x10343a058 mailcore::IMAPAsyncSession::sessionWithMinQueue(bool, mailcore::String*) + 429332
    2  MyApp                         0x103439bc8 mailcore::IMAPAsyncSession::sessionForFolder(mailcore::String*, bool) + 428164
    3  MyApp                         0x10342031c mailcore::IMAPOperation::start() + 323544
    4  MyApp                         0x10345bfe4 -[MCOOperation start] + 74024
    5  MyApp                         0x10346e010 -[MCOIMAPFetchContentOperation start:] + 13976
    6  MyApp                         0x102b2d048 MCOIMAPSession.fetchContent(carrierFolder:UID:saveToDir:dispatchCompletionOnQueue:completionBlock:) + 2938 (Extensions+Shared.swift:2938)
    7  MyApp                         0x102ebc6d8 closure #2 in MessageFragmentDownloadOperation.downloadMessageFragment(messageIDToken:messageStatus:uidToFetch:fromFolder:completionBlock:) + 341 (MessageFragmentDownloadOperation.swift:341)
    8  MyApp                         0x102ebc7f8 partial apply for closure #2 in MessageFragmentDownloadOperation.downloadMessageFragment(messageIDToken:messageStatus:uidToFetch:fromFolder:completionBlock:) (<compiler-generated>)
    9  MyApp                         0x102414db4 thunk for @escaping @callee_guaranteed () -> () (<compiler-generated>)
    10 libdispatch.dylib              0x1a94d1610 _dispatch_call_block_and_release + 24
    11 libdispatch.dylib              0x1a94d2184 _dispatch_client_callout + 16
    12 libdispatch.dylib              0x1a9487104 _dispatch_root_queue_drain + 684
    13 libdispatch.dylib              0x1a948779c _dispatch_worker_thread2 + 128
    14 libsystem_pthread.dylib        0x1a9521f64 _pthread_wqthread + 212
    15 libsystem_pthread.dylib        0x1a9524ae0 start_wqthread + 8

------------------ 

    Crashed: com.apple.root.default-qos
    0  libsystem_kernel.dylib         0x186720ebc __pthread_kill + 8
    1  libsystem_pthread.dylib        0x186640c1c pthread_kill$VARIANT$armv81 + 192
    2  libsystem_c.dylib              0x186590824 abort + 100
    3  MyApp                         0x10313d81c +[MCONNTPGroupInfo load] + 53472
    4  MyApp                         0x1031420c4 mailcore::Object::release() + 72072
    5  MyApp                         0x10319312c mailcore::IMAPAsyncConnection::setLastFolder(mailcore::String*) + 403952
    6  MyApp                         0x1031990a8 mailcore::IMAPAsyncSession::sessionForFolder(mailcore::String*, bool) + 428396
    7  MyApp                         0x10317f714 mailcore::IMAPOperation::start() + 323544
    8  MyApp                         0x1031bb3dc -[MCOOperation start] + 74024
    9  MyApp                         0x1031cd408 -[MCOIMAPFetchContentOperation start:] + 13976
    10 MyApp                         0x10288bb54 MCOIMAPSession.fetchContent(carrierFolder:UID:saveToDir:dispatchCompletionOnQueue:completionBlock:) + 2938 (Extensions+Shared.swift:2938)
    11 MyApp                         0x102c1aca4 MessageFragmentDownloadOperation.downloadMessageFragment(messageIDToken:messageStatus:uidToFetch:fromFolder:completionBlock:) + 345 (MessageFragmentDownloadOperation.swift:345)
    12 MyApp                         0x102c18830 closure #1 in closure #1 in closure #1 in closure #1 in MessageFragmentDownloadOperation.execute() + 242 (MessageFragmentDownloadOperation.swift:242)
    13 MyApp                         0x10216c338 thunk for @escaping @callee_guaranteed () -> () (<compiler-generated>)
    14 libdispatch.dylib              0x1865f5610 _dispatch_call_block_and_release + 24
    15 libdispatch.dylib              0x1865f6184 _dispatch_client_callout + 16
    16 libdispatch.dylib              0x1865cfb7c _dispatch_queue_override_invoke + 668
    17 libdispatch.dylib              0x1865dc110 _dispatch_root_queue_drain + 344
    18 libdispatch.dylib              0x1865dc8b0 _dispatch_worker_thread2 + 116
    19 libsystem_pthread.dylib        0x186645f64 _pthread_wqthread + 212
    20 libsystem_pthread.dylib        0x186648ae0 start_wqthread + 8

--------------------

    Crashed: Thread
    0  libsystem_pthread.dylib        0x1866435d8 pthread_mutex_lock$VARIANT$armv81 + 102
    1  CoreFoundation                 0x1868a24d0 CFRunLoopRemoveSource + 96
    2  MyApp                         0x103b00048 wait_runloop + 662 (mailstream_cfstream.c:662)
    3  MyApp                         0x103b00224 mailstream_low_cfstream_read + 859 (mailstream_cfstream.c:859)
    4  MyApp                         0x103af7130 mailstream_low_read + 232 (mailstream_low.c:232)
    5  MyApp                         0x103af64f4 mailstream_feed_read_buffer + 304 (mailstream.c:304)
    6  MyApp                         0x103af689c mailstream_read_line_append + 102 (mailstream_helper.c:102)
    7  MyApp                         0x103b03180 mailimap_uid_fetch_qresync_vanished + 476 (qresync.c:476)
    8  MyApp                         0x103b6d4c4 fetch_imap(mailimap*, bool, unsigned int, mailimap_fetch_type*, char**, unsigned long*) + 216456
    9  MyApp                         0x103b6d100 fetch_rfc822(mailimap*, bool, unsigned int, char**, unsigned long*) + 215492
    10 MyApp                         0x103b6cf14 mailcore::IMAPSession::fetchMessage(mailcore::String*, bool, unsigned int, mailcore::IMAPProgressCallback*, mailcore::ErrorCode*) + 215000
    11 MyApp                         0x103b6ce7c mailcore::IMAPSession::fetchMessageByUID(mailcore::String*, unsigned int, mailcore::IMAPProgressCallback*, mailcore::ErrorCode*) + 214848
    12 MyApp                         0x103b8f778 mailcore::IMAPFetchContentOperation::main() + 356412
    13 MyApp                         0x103b577dc mailcore::OperationQueue::runOperations() + 127136
    14 MyApp                         0x103b57518 mailcore::OperationQueue::runOperationsOnThread(mailcore::OperationQueue*) + 126428
    15 libsystem_pthread.dylib        0x1866451ec _pthread_start + 124
    16 libsystem_pthread.dylib        0x186648aec thread_start + 8

--------------------

The following crash happens when it tries to update the `password` property of an IMAPSession after checking locally from keychain (in `NSManagedObjectContext` with `privateQueueConcurrencyType`):

    Crashed: NSManagedObjectContext 0x2832bb560
    0  MyApp                         0x10579fba0 -[MCOIMAPSession password] + 455780
    1  MyApp                         0x1048a5080 AccountSettings.updateCredentials(completionBlock:) + 1095 (AccountSettings.swift:1095)
    2  MyApp                         0x104c67f0c closure #1 in closure #1 in closure #1 in GetMessageSummariesOperation.execute() + 173 (GetMessageSummariesOperation.swift:173)
    3  MyApp                         0x10476c338 thunk for @escaping @callee_guaranteed () -> () (<compiler-generated>)
    4  CoreData                       0x18b295708 developerSubmittedBlockToNSManagedObjectContextPerform + 156
    5  libdispatch.dylib              0x1865f6184 _dispatch_client_callout + 16
    6  libdispatch.dylib              0x1865d373c _dispatch_lane_serial_drain$VARIANT$armv81 + 564
    7  libdispatch.dylib              0x1865d4154 _dispatch_lane_invoke$VARIANT$armv81 + 400
    8  libdispatch.dylib              0x1865dd43c _dispatch_workloop_worker_thread + 576
    9  libsystem_pthread.dylib        0x186645fa4 _pthread_wqthread + 276
    10 libsystem_pthread.dylib        0x186648ae0 start_wqthread + 8

Error Domain=MCOErrorDomain Code=11 "The requested folder does not exist.  Folder selection failed"。Hello, how to solve this problem, thank you very much!

I have 25 Lakh mails in my Gmail account but I want only the latest 7 days message or latest 100 mails only. How can I do it?

**function getMails**

    IndexSet indexSet = IndexSet.indexSetWithRange(new Range(1, Long.MAX_VALUE));
        final IMAPFetchMessagesOperation messagesOperation = imapSession.fetchMessagesByUIDOperation(folder,
                requestKind, indexSet);

**I want only 100 mails to get:**

    IndexSet indexSet = IndexSet.indexSetWithRange(new Range(Long.MAX_VALUE-100, Long.MAX_VALUE));
        final IMAPFetchMessagesOperation messagesOperation = imapSession.fetchMessagesByUIDOperation(folder,
                requestKind, indexSet);

**But it's not working**
I use spark (uses Mailcore2) for my email. Recently, I started having problems with syncing my folders for my iCloud account and thought it might be specific to this app, but then I noticed the same exact issue with MailSpring (also using Mailcore2). This happens on multiple devices as well (iphone and mac). I think there might be an issue with mailcore connecting to iCloud right now. Both Apple Mail and Thunderbird work perfectly fine.

- I am using an app specific password with 2fa turned on.
- I do not see the issue with other mail providers.

Can anyone else confirm issues with connecting to iCloud accounts recently using a mailcore2 integrated app?



MCOAttachment *a = [[MCOAttachment alloc]init]; 

The Xcode compile error   'init' is unavailable