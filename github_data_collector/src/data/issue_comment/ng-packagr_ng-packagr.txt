See #1333

## I'm submitting a...

```
[ ] Bug Fix
[x] Feature
[ ] Other (Refactoring, Added tests, Documentation, ...)
```

## Checklist

- [x] Commit Messages follow the [Conventional Commits](https://conventionalcommits.org/) pattern
  - A feature commit message is prefixed "feat:"
  - A bugfix commit message is prefixed "fix:"
- [ ] Tests for the changes have been added


## Description

This adds support for `rootDirs` array in `tsconfig.json`.

This is a work in progress becase:
* handling everything with rootDirs only breaks the triple slash references for unknown reasons
* tests not yet implemented


## Does this PR introduce a breaking change?

```
[ ] Yes
[x] No
```

This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [ts-node](https://togithub.com/TypeStrong/ts-node) | devDependencies | minor | [`~8.5.0` -> `~8.6.0`](https://renovatebot.com/diffs/npm/ts-node/8.5.4/8.6.2) |

---

### Release Notes

<details>
<summary>TypeStrong/ts-node</summary>

### [`v8.6.2`](https://togithub.com/TypeStrong/ts-node/releases/v8.6.2)

[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.6.1...v8.6.2)

**Fixed**

-   Downgrade `yn` due to node engine ([#&#8203;942](https://togithub.com/TypeStrong/ts-node/issues/942))

### [`v8.6.1`](https://togithub.com/TypeStrong/ts-node/releases/v8.6.1)

[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.6.0...v8.6.1)

**Fixed**

-   Fix the resolution order of `TS_NODE_COMPILER_OPTIONS` - closes [#&#8203;938](https://togithub.com/TypeStrong/ts-node/issues/938)

### [`v8.6.0`](https://togithub.com/TypeStrong/ts-node/releases/v8.6.0)

[Compare Source](https://togithub.com/TypeStrong/ts-node/compare/v8.5.4...v8.6.0)

**Fixed**

-   Remove normalize slashes from config file loading for Windows

**Added**

-   Configure using `tsconfig.json` ([#&#8203;921](https://togithub.com/TypeStrong/ts-node/issues/921)) [@&#8203;cspotcode](https://togithub.com/cspotcode) ðŸŽ‰ 
-   Allow `dir` to be configurable
-   Add `--build` flag for emitting compiled TypeScript (under `--compiler-host` mode)
-   Incremental compiler support ([#&#8203;895](https://togithub.com/TypeStrong/ts-node/issues/895))

</details>

---

### Renovate configuration

:date: **Schedule**: At any time (no schedule defined).

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#ng-packagr/ng-packagr).
This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [karma-jasmine](https://togithub.com/karma-runner/karma-jasmine) | devDependencies | minor | [`~3.0.0` -> `~3.1.0`](https://renovatebot.com/diffs/npm/karma-jasmine/3.0.3/3.1.0) |

---

### Release Notes

<details>
<summary>karma-runner/karma-jasmine</summary>

### [`v3.1.0`](https://togithub.com/karma-runner/karma-jasmine/blob/master/CHANGELOG.md#&#8203;310httpsgithubcomkarma-runnerkarma-jasminecomparev303v310-2020-01-10)

[Compare Source](https://togithub.com/karma-runner/karma-jasmine/compare/v3.0.3...v3.1.0)

##### Features

-   **adapter:** support spec=name URL and sharding ([#&#8203;243](https://togithub.com/karma-runner/karma-jasmine/issues/243)) ([39b1582](https://togithub.com/karma-runner/karma-jasmine/commit/39b1582987f4b82d6da4775414f208a8433ec794))

#### [3.0.3](https://togithub.com/karma-runner/karma-jasmine/compare/v3.0.2...v3.0.3) (2020-01-08)

##### Bug Fixes

-   **npm:** ignore integration-tests/ ([#&#8203;248](https://togithub.com/karma-runner/karma-jasmine/issues/248)) ([f0083cb](https://togithub.com/karma-runner/karma-jasmine/commit/f0083cb))

#### [3.0.2](https://togithub.com/karma-runner/karma-jasmine/compare/v3.0.1...v3.0.2) (2020-01-08)

#### [3.0.1](https://togithub.com/karma-runner/karma-jasmine/compare/v1.1.0...v3.0.1) (2020-01-06)

##### Bug Fixes

-   **adapter:** Remove incorrect function and its call. ([#&#8203;183](https://togithub.com/karma-runner/karma-jasmine/issues/183)) ([cada4a9](https://togithub.com/karma-runner/karma-jasmine/commit/cada4a9))
-   **build:** run eslint on npm test ([#&#8203;237](https://togithub.com/karma-runner/karma-jasmine/issues/237)) ([a12024d](https://togithub.com/karma-runner/karma-jasmine/commit/a12024d))
-   **console:** Re-add Error: to the stack ([#&#8203;228](https://togithub.com/karma-runner/karma-jasmine/issues/228)) ([d0b980d](https://togithub.com/karma-runner/karma-jasmine/commit/d0b980d))
-   **dep:** Depend upon the jasmine-core version we test ([#&#8203;229](https://togithub.com/karma-runner/karma-jasmine/issues/229)) ([c4dfef5](https://togithub.com/karma-runner/karma-jasmine/commit/c4dfef5))
-   **stack:** On error in beforeAll/afterAll relevant information to debug are missâ€¦ ([#&#8203;232](https://togithub.com/karma-runner/karma-jasmine/issues/232)) ([cd6f060](https://togithub.com/karma-runner/karma-jasmine/commit/cd6f060))
-   **time:** report correct time since Jasmine v2.9.0 ([#&#8203;197](https://togithub.com/karma-runner/karma-jasmine/issues/197)) ([022ee04](https://togithub.com/karma-runner/karma-jasmine/commit/022ee04)), closes [#&#8203;196](https://togithub.com/karma-runner/karma-jasmine/issues/196)
-   **travis:** use new syntax for xenial and pin to it. ([#&#8203;236](https://togithub.com/karma-runner/karma-jasmine/issues/236)) ([cb99ef8](https://togithub.com/karma-runner/karma-jasmine/commit/cb99ef8))
-   return false for every entry is irrelevant ([#&#8203;206](https://togithub.com/karma-runner/karma-jasmine/issues/206)) ([d7523d0](https://togithub.com/karma-runner/karma-jasmine/commit/d7523d0)), closes [/github.com/karma-runner/karma-jasmine/pull/206#discussion_r186142116](https://togithub.com//github.com/karma-runner/karma-jasmine/pull/206/issues/discussion_r186142116)

##### Chores

-   **deps:** Drop node v4 support. ([#&#8203;214](https://togithub.com/karma-runner/karma-jasmine/issues/214)) ([e604132](https://togithub.com/karma-runner/karma-jasmine/commit/e604132))

##### Features

-   **adapter:** log when Jasmine fails because no expect() were run ([#&#8203;238](https://togithub.com/karma-runner/karma-jasmine/issues/238)) ([646796e](https://togithub.com/karma-runner/karma-jasmine/commit/646796e))
-   **reporter:** On no-single-run and failure, emit a debug URL ([#&#8203;235](https://togithub.com/karma-runner/karma-jasmine/issues/235)) ([76f092a](https://togithub.com/karma-runner/karma-jasmine/commit/76f092a))
-   Propagate errors thrown in afterAll blocks ([f3fa264](https://togithub.com/karma-runner/karma-jasmine/commit/f3fa264)), closes [#&#8203;161](https://togithub.com/karma-runner/karma-jasmine/issues/161)
-   update the version to 2.0.0 and restrict node version available to 4.0 ([c84316e](https://togithub.com/karma-runner/karma-jasmine/commit/c84316e))

-   Update deps and drop node v6 to match karma v4.0 ([#&#8203;233](https://togithub.com/karma-runner/karma-jasmine/issues/233)) ([097eed4](https://togithub.com/karma-runner/karma-jasmine/commit/097eed4)), closes [#&#8203;233](https://togithub.com/karma-runner/karma-jasmine/issues/233)
-   feat (adapter): Use jasmine's new configure method ([#&#8203;224](https://togithub.com/karma-runner/karma-jasmine/issues/224)) ([6663e47](https://togithub.com/karma-runner/karma-jasmine/commit/6663e47)), closes [#&#8203;224](https://togithub.com/karma-runner/karma-jasmine/issues/224) [#&#8203;221](https://togithub.com/karma-runner/karma-jasmine/issues/221)

##### BREAKING CHANGES

-   drop support for node v6

-   Also update travis config to drop v6 andd v10
-   `stopOnFailure`, which was previously documented in karma-jasmine's README, is
    not configuration option for jasmine. Use `oneFailurePerSpec` instead.

Requires peerDependency Jasmine@^3.3.0

-   **deps:** Drop support for node 4.x

</details>

---

### Renovate configuration

:date: **Schedule**: At any time (no schedule defined).

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#ng-packagr/ng-packagr).
## I'm submitting a...

```
[ ] Bug Fix
[ ] Feature
[x] Other (Refactoring, Added tests, Documentation, ...)
```

## Checklist

- [x] Commit Messages follow the [Conventional Commits](https://conventionalcommits.org/) pattern
  - A feature commit message is prefixed "feat:"
  - A bugfix commit message is prefixed "fix:"
- [x] Tests for the changes have been added


## Description

Adding a failing test for #1496


## Does this PR introduce a breaking change?

```
[ ] Yes
[x] No
```

## I'm submitting a...

```
[ ] Bug Fix
[x] Feature
[ ] Other (Refactoring, Added tests, Documentation, ...)
```

## Checklist

- [x] Commit Messages follow the [Conventional Commits](https://conventionalcommits.org/) pattern
  - A feature commit message is prefixed "feat:"
  - A bugfix commit message is prefixed "fix:"
- [x] Tests for the changes have been added


## Description

Recent PR #1465
Introduced the feature to copy assets.
But the current format will limit us to :

    1. Having all assets under project src .. ( from looking at the code)
    2. and we cannot customize the destination folder structure.
    
i.e. we are expecting assets to be under ::
   ``` projects/<lib-name>/**/assets```
    and destination will always be mapped to
   ```<dist-path>/<lib-name>/**/assets```

in my project , we have multiple projects (libraries & apps)in same repo
and we have a common folder for assets .. and this is out side of the project root (as expected)

with this i would not be able to use this ng-packagr feature as is ..
Expected Behaviour

I was looking at the AsstePattern syntax of anuglar-builder ( browser) .. https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/browser/schema.json#L393

```
export type AssetPattern =
  | {
      /**
       * The pattern to match.
       */
      glob: string;
      /**
       * The input directory path in which to apply 'glob'. Defaults to the project root.
       */
      input: string;
      /**
       * An array of globs to ignore.
       */
      ignore?: string[];
      /**
       * Absolute path within the output.
       */
      output: string;
    }
  | string;
```
this will allow to be more granular and as a user of the ng-packagr i can get alot of flexibility ..


## Does this PR introduce a breaking change?

```
[ ] Yes
[x] No
```

## Type of Issue

```
[ ] Bug Report
[x] Feature Request
```

## Description
Recent PR https://github.com/ng-packagr/ng-packagr/pull/1465/ 
Introduced the feature to copy assets.
But the current format will limit us to :
1. Having all assets under project src .. ( from looking at the code)
2. and we cannot customize the destination folder structure.
  we are expecting assets to be under ::
  ```projects/<lib-name>/**/assets```
and destination will always be mapped to
```<dist-path>/<lib-name>/**/assets```


in my project , we have multiple projects (libraries & apps)in same repo
and we have a common folder for assets .. and this is out side of the project root (as expected)

with this i would not be able to use this ng-packagr feature as is ..

#### Expected Behaviour

I was looking at the AsstePattern syntax of anuglar-builder ( browser) .. https://github.com/angular/angular-cli/blob/master/packages/angular_devkit/build_angular/src/browser/schema.json#L393
```
export type AssetPattern =
  | {
      /**
       * The pattern to match.
       */
      glob: string;
      /**
       * The input directory path in which to apply 'glob'. Defaults to the project root.
       */
      input: string;
      /**
       * An array of globs to ignore.
       */
      ignore?: string[];
      /**
       * Absolute path within the output.
       */
      output: string;
    }
  | string;
```
this will allow to be more granular and as a user of the ng-packagr i can get alot of flexibility ..

I wanted this feature badly for my projects so did a poc for the same ,in the forked repo https://github.com/arvindnama/ng-packagr/commit/957c8f057636d86bf7e1637fa567540bed7a81f3


NOTE: I will create a PR on the master branch with the above changes soon.

#### Version Information

```
$ node_modules/.bin/ng-packagr --version
ng-packagr: 9.0.0-rc3
@angular/*: 8.2.3
typescript: 3.5.3
rxjs: 6.5.3
node:12.13.1
npm 6.12.1
```

_Please include all version numbers that might be relevant, e.g. third-party libraries_

## Type of Issue

```
[x] Bug Report
[ ] Feature Request
```

## Description

Since #1050, we can import JSON files and they are correctly bundled into a library build. I love this! It allows me to define contracts through JSON and use that as both a value and a type with `typeof`.

However, when importing that library into an app, Typescript complains that the JSON file cannot be found: it is referenced from a .d.ts file, but was not copied into the .d.ts folder tree.


#### How To Reproduce

First generate a library:
```bash
$ ng new json-bug --create-application=false
$ cd json-bug
$ ng generate library json-bug
```

Then create some JSON and use it as both a value and a type:
```diff
diff --git a/projects/json-bug/src/lib/config.json b/projects/json-bug/src/lib/config.json
new file mode 100644
index 0000000..d6630bc
--- /dev/null
+++ b/projects/json-bug/src/lib/config.json
@@ -0,0 +1,3 @@
+{
+  "base": "http://example.org"
+}
diff --git a/projects/json-bug/src/lib/json-bug.service.ts b/projects/json-bug/src/lib/json-bug.service.ts
index 59a557b..68c3096 100644
--- a/projects/json-bug/src/lib/json-bug.service.ts
+++ b/projects/json-bug/src/lib/json-bug.service.ts
@@ -1,9 +1,24 @@
 import { Injectable } from '@angular/core';
+import defaultConfig from './config.json';
+
+type ConfigJSON = typeof defaultConfig;
+
+@Injectable()
+export class Config implements ConfigJSON {
+  base: string;
+}
 
 @Injectable({
   providedIn: 'root'
 })
 export class JsonBugService {
+  private API: string;
 
-  constructor() { }
+  constructor(config: Config) {
+    this.API = config.base;
+  }
 }
```

Follow instructions to allow JSON files from https://github.com/ng-packagr/ng-packagr/commit/1bf8eaf589b41208000c459deb613bdb40e2cb6b:
```diff
diff --git a/projects/json-bug/tsconfig.lib.json b/projects/json-bug/tsconfig.lib.json
index bd23948..61e9a08 100644
--- a/projects/json-bug/tsconfig.lib.json
+++ b/projects/json-bug/tsconfig.lib.json
@@ -12,7 +12,7 @@
     ]
   },
   "angularCompilerOptions": {
-    "annotateForClosureCompiler": true,
+    "annotateForClosureCompiler": false,
     "skipTemplateCodegen": true,
     "strictMetadataEmit": true,
     "fullTemplateTypeCheck": true,
diff --git a/tsconfig.json b/tsconfig.json
index 9307256..ffd1cef 100644
--- a/tsconfig.json
+++ b/tsconfig.json
@@ -10,6 +10,9 @@
     "module": "esnext",
     "moduleResolution": "node",
     "importHelpers": true,
+    "resolveJsonModule": true,
+    "esModuleInterop": true,
+    "allowSyntheticDefaultImports": true,
     "target": "es2015",
     "typeRoots": [
       "node_modules/@types"
```

Build the library and inspect the dist:
```bash
$ ng build
$ head -1 dist/json-bug/lib/json-bug.service.d.ts
import defaultConfig from './config.json';
$ tree dist/json-bug/lib
dist/json-bug/lib
â”œâ”€â”€ json-bug.component.d.ts
â”œâ”€â”€ json-bug.module.d.ts
â””â”€â”€ json-bug.service.d.ts
```

There's no `config.json` file in `lib`, so the import in `json-bug.service.d.ts` fails when using in an app.

Generate an app to test the import:
```bash
$ ng generate app testing --style css --routing false
```

Import the library:
```diff
diff --git a/projects/testing/src/app/app.module.ts b/projects/testing/src/app/app.module.ts
index f657163..5c9a398 100644
--- a/projects/testing/src/app/app.module.ts
+++ b/projects/testing/src/app/app.module.ts
@@ -2,6 +2,7 @@ import { BrowserModule } from '@angular/platform-browser';
 import { NgModule } from '@angular/core';
 
 import { AppComponent } from './app.component';
+import { Config } from 'json-bug';
 
 @NgModule({
   declarations: [
@@ -10,7 +11,9 @@ import { AppComponent } from './app.component';
   imports: [
     BrowserModule
   ],
-  providers: [],
+  providers: [
+    {provide: Config, useValue: {base: 'https://new-base.org'}},
+  ],
   bootstrap: [AppComponent]
 })
 export class AppModule { }
```

Build the testing app:
```bash
$ ng build testing

ERROR in ../../dist/json-bug/lib/json-bug.service.d.ts:1:27 - error TS2307: Cannot find module './config.json'.

1 import defaultConfig from './config.json';
                            ~~~~~~~~~~~~~~~
```

_Can you reproduce the error in the integration tests in ng-packagr?_
_If possible, take a look at the [`integration/samples`](./integration/samples) and try to break one of these builds!_

_Is the error you faced in an application importing the library_
_Try to break the Angular CLI appÂ in [`integration/consumers/ng-cli`](./integration/consumers/ng-cli)!_

Failing test in #1505


#### Expected Behaviour

The JSON file is available in the dist for the .d.ts files, _or_ it is inlined into the .d.ts files.


#### Version Information

```
$ node_modules/.bin/ng-packagr --version
ng-packagr:            5.7.1
@angular/compiler:     8.2.14
rollup:                1.25.2
tsickle:               0.37.1
typescript:            3.5.3
$ node --version
v12.4.0
$ npm --version
6.13.4
```

RxJS is at 6.4.0, but I don't think that's relevant.

This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [rollup-plugin-sourcemaps](https://togithub.com/maxdavidson/rollup-plugin-sourcemaps) | dependencies | minor | [`^0.4.2` -> `^0.5.0`](https://renovatebot.com/diffs/npm/rollup-plugin-sourcemaps/0.4.2/0.5.0) |

---

### Release Notes

<details>
<summary>maxdavidson/rollup-plugin-sourcemaps</summary>

### [`v0.5.0`](https://togithub.com/maxdavidson/rollup-plugin-sourcemaps/blob/master/CHANGELOG.md#&#8203;050)

[Compare Source](https://togithub.com/maxdavidson/rollup-plugin-sourcemaps/compare/v0.4.2...v0.5.0)

-   Drop support for Node &lt; 8 and make use of ES2017 features
-   Switch from Babel to TypeScript
-   Remove `jsnext:main` field from package.json

</details>

---

### Renovate configuration

:date: **Schedule**: At any time (no schedule defined).

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#ng-packagr/ng-packagr).
This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [@types/node](https://togithub.com/DefinitelyTyped/DefinitelyTyped) | devDependencies | major | [`^12.0.0` -> `^13.0.0`](https://renovatebot.com/diffs/npm/@types%2fnode/12.12.25/13.1.8) |

---

### Renovate configuration

:date: **Schedule**: At any time (no schedule defined).

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#ng-packagr/ng-packagr).
## Type of Issue

```
[ ] Bug Report
[x] Feature Request
```

## Description

I found that ngcc (Angular Compatibility Compiler) supports parallel build by using node's `cluster` module [PR link](https://github.com/angular/angular/pull/32427/files). In my understanding, ngcc and ng-packagr have similar build process (calculate inter-package dependency -> Sort packages by dependency -> Run build jobs by order). So supporting ngcc style parallel build can reduce build time dramatically. It may not as easy as what I wrote, so feel free to close this issue if you think this isn't worth of time to implement.

#### How To Reproduce

N/A

#### Expected Behaviour

ng-packagr can run build jobs in parallel.

#### Version Information

```
ng-packagr:            9.0.0-rc.3
@angular/compiler:     9.0.0-rc.6
rollup:                1.27.8
tsickle:               
typescript:            3.6.4
```