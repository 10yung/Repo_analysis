Hi,
I found some pdb files in the folder C:\Program Files (x86)\Chocolatey GUI
chocolatey.pdb
chocolateygui.pdb
MahApps...
Mindscape...

Afaik these files are for Visual Studio debugging sessions only, no need to deploy.

Chocolatey GUI v0.16.0

hth
A number of packages have crc faults after downloading.
I uninstalled a number of application to be able to reinstall them with chocolaty.
I rather have them managed by chocolaty then do it myself with seperate installers.
Finding out that a chocolaty application doesn't work isn't, after having uninstalled the separate application isn't a nice experiance.

Ideally I would like to be able to use an external disk with all the needed downloads cached and then install from there. This would make reinstalling a new machine a breeze while maintaining the ease of updating with Chocolaty.
Make it with affinity designer
<img src="https://i.imgur.com/gYDKMYV.jpg">
Maybe implement a gui box to choose what version of package you want just like how Hot Chocolatey already does it.
https://imgur.com/a/raFQw7f
When the user searches for a package in a source tab, the GUI blocks the user from doing anything else (other than close ChocolateyGUI entirely).

The user should have the option to cancel the search.

Alternatively, the GUI should not block the user from interacting with the application, while the search is executed in the background.
When the user clicks on a source tab such as "chocolatey", it immediately starts fetching packages to populate the list. This blocks the user from interacting with the GUI until the first page of results is fetched. The wait can span up to a minute or more.

The user should have the option to disallow this automatic fetching of packages.

Alternatively, the GUI should not block the user from interacting with the application, while the package fetching continues in the background.
closes #688 
Unhandled Exception when using Chocolatey GUI while failOnInvalidOrMissingLicense option set to "true".  Screenshot below.

Changing `"failOnInvalidOrMissingLicense" enabled="true"` to `<feature name="failOnInvalidOrMissingLicense" enabled="false"` fixes the issue.

> OS Version:
> Microsoft Windows 7 Professional 64-bit
> Version: 6.1.7601

> PoSh Version:
> 5.1.14409.1018

> Chocolatey Version:
> v0.10.15

> Chocolatey GUI Version:
> 0.16.0

![2019-11-07_Unhandled Exception on failOnInvalidOrMissingLicense -eq true](https://user-images.githubusercontent.com/4133873/68410141-de2fb700-014d-11ea-8d27-75393eda5f38.png)

https://gist.github.com/dmdufrene/741819b2b0a72b32247361f94e2aaa4e

($env:ChocolateyInstall\logs\chocolatey.log not updated by crash.)
**_Feature request_**

Add support of tag <icon> to allow embedding package icon inside the package instead of referencing the icon by url. This will allow to list packages with icons on machines without internet.

Description of the similar feature in NuGet https://docs.microsoft.com/en-us/nuget/reference/nuspec#icon
I work from a non-admin user account.
I tried to install Atom v1.42.0.20191029 and I had the following error:
![image](https://user-images.githubusercontent.com/35287463/68075611-abfa1000-fd6f-11e9-95c3-47119abf2dfb.png)


It seems there is an access problem, however I started ChocolateyGui well in admin mode.
On the other hand if I connect to the admin account to do the installation everything goes well but the non-admin user  will not have access to Atom.

So I'm looking to change the download directory from Admin to current account Temp file or 
install Atom for all users or 
tell Chocolatey to install Atom from a local Atom setup or
other solution.

I'm able to find it and run it from non-admin account only on command line (Admin).

Temporary solution:
-------------------
1. Create CMD shortcut.
2. Copy Atom's icon "app.ico"
3. Click Right on shortcut Proprities > Target: C:\Windows\System32\cmd.exe /k atom & exit
4. Proprities > Change icon (use Atom's icon)
5. Proprities > Run: Minimized
6. Proprities > Advanced > Run as administrator
7. Click Right "Pin to Start"
