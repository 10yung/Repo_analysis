Hello,
I have set up knowledge-repo to share notebook.The website is in the POC stage where  the website is up and running in a k8 container. I am trying to set up authentication and went through the threads related to that. Is there an example repository/Documentation you can refer me to where everything is up and running with the configuration set up / or anyone to talk to, who has already set it up? Thanks.
My Current Setup: postgres local server: 11.5 , python 3.6, knowledge repo 0.8.8 . My sequential workflow:
- create a local repo: kr_local
- adding a remote repo in kr_local: `git init; git remote add origin https://github.com/DataPsycho/knowledge-posts.git`
- Export knowledge_repo: `export KNOWLEDGE_REPO=kr_local`
- install pyscopg2 binary
- Adding db URI to config.py file: `postgresql+psycopg2://knowledge_repo:knowledge_repo@localhost:5432/knowledge_repo`
- initialised knowledge repo: `knowledge_repo init` (successful)
- running with db server: `knowledge_repo runserver --config config.py`

That create all the tables (alembic_version, tables, posts .... votes etc). But when try to connect to the app getting the following error:
![Screenshot 2019-11-25 at 17 26 58](https://user-images.githubusercontent.com/10431123/69558620-ce66fe00-0fa8-11ea-8580-4af6247f2c98.png)

Using deploy has the same problem. I am getting the same error. 
```
### Creating Posts
export KNOWLEDGE_REPO=/Users.../KrTest/post_maker
knowledge_repo init
knowledge_repo create ipynb example_post.ipynb
knowledge_repo add example_post.ipynb -p project/example_ipynb
knowledge_repo preview project/example_ipynb
# Git push to the branch and merge with master
### Deploying The App
# Initialize Git in new `live_repo` directory and git pull the resource from master
git init
git remote add origin https://github.com/DataPsycho/knowledge-posts.git
git pull origin master
### deploy the application
export KNOWLEDGE_REPO=/Users/s.../KrTest/live_repo
knowledge_repo init
knowledge_repo deploy --config /Users/..../KnowledgeRepo/config.py
```

```
sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) server closed the connection unexpectedly
        This probably means the server terminated abnormally
        before or while processing the request.

[SQL: SELECT tags.description AS tags_description, tags.id AS tags_id, tags.name AS tags_name, tags.created_at AS tags_created_at 
FROM tags 
WHERE tags.name = %(name_1)s 
 LIMIT %(param_1)s]
[parameters: {'name_1': 'private', 'param_1': 1}]
(Background on this error at: http://sqlalche.me/e/e3q8)
ERROR:knowledge_repo.app.app:Exception on /static/modules/bootstrap/js/bootstrap.min.js [GET]

sqlalchemy.exc.OperationalError: (psycopg2.OperationalError) server closed the connection unexpectedly
        This probably means the server terminated abnormally
        before or while processing the request.

[SQL: SELECT tags.description AS tags_description, tags.id AS tags_id, tags.name AS tags_name, tags.created_at AS tags_created_at 
FROM tags 
WHERE tags.name = %(name_1)s 
 LIMIT %(param_1)s]
[parameters: {'name_1': 'private', 'param_1': 1}]
(Background on this error at: http://sqlalche.me/e/e3q8)
....
sqlalchemy.exc.StatementError: (sqlalchemy.exc.InvalidRequestError) Can't reconnect until invalid transaction is rolled back
[SQL: SELECT index_metadata.id AS index_metadata_id, index_metadata.type AS index_metadata_type, index_metadata.name AS index_metadata_name, index_metadata.value AS index_metadata_value, index_metadata.updated_at AS index_metadata_updated_at 
FROM index_metadata 
WHERE index_metadata.type = %(type_1)s AND index_metadata.name = %(name_1)s 
 LIMIT %(param_1)s]
[parameters: [immutabledict({})]]
```
Also time to time getting the following errors and warning:
```
stderr: 'fatal: Unable to create '....git/index.lock': File exists.
WARNING:knowledge_repo.app.index:Master indexing thread has died. Restarting...
```

Though I tried to delete manually the index.lock file but the file does not exist.

If any one knows what is the problem?

Hi everyone,
I would like to ask if someone uses any of interactive (filtering, sorting, paging, etc.) table visualization of pandas dataframe in knowledge repo. We use amazing qgrid extension https://github.com/quantopian/qgrid in jupyterlab, but I would like to get it or something similar working in knowledge repo. Is there a way how to do it or someone who could help with development? Ideas, hints, etc. welcome!

Thanks and regards,
Jakub 
conda env
python 3.7
 ```sh
pip install  --upgrade "knowledge-repo[all]"
```
>>
```
Failed to build knowledge-repo flask-login flask-principal flask-mail sqlalchemy inflection blinker alembic regex Mako
Installing collected packages: regex, dateparser, cooked-input, click, itsdangerous, werkzeug, flask, flask-login, blinker, flask-principal, flask-mail, sqlalchemy, Flask-SQLAlchemy, Mako, python-editor, alembic, Flask-Migrate, gunicorn, inflection, pillow, knowledge-repo
    Running setup.py install for regex ... error
    ERROR: Command errored out with exit status 1:
     command: /Users/admin/anaconda3/envs/qq/bin/python -u -c 'import sys, setuptools, tokenize; sys.argv[0] = '"'"'/private/var/folders/54/dj483jpn7k5_bfwlglg538vw0000gn/T/pip-install-tb0ohbg4/regex/setup.py'"'"'; __file__='"'"'/private/var/folders/54/dj483jpn7k5_bfwlglg538vw0000gn/T/pip-install-tb0ohbg4/regex/setup.py'"'"';f=getattr(tokenize, '"'"'open'"'"', open)(__file__);code=f.read().replace('"'"'\r\n'"'"', '"'"'\n'"'"');f.close();exec(compile(code, __file__, '"'"'exec'"'"'))' install --record /private/var/folders/54/dj483jpn7k5_bfwlglg538vw0000gn/T/pip-record-acauh54w/install-record.txt --single-version-externally-managed --compile
         cwd: /private/var/folders/54/dj483jpn7k5_bfwlglg538vw0000gn/T/pip-install-tb0ohbg4/regex/
    Complete output (50 lines):
    running install
    running build
...
```
Hello,

I've been trying to get an instance set up for a while and I'm pretty much stumped. The basic idea was to spin up a Postgres DB and a separate Docker image for the Repo, like this:

`docker-compose.yml`:
```
version: '3'
services:
  repo:
    build: .
    ports:
      - "7000:7000"
    environment:
      REPO: postgresql://postgres:test@db/knowledge_repo:knowledge_repo
      DBURI: postgresql://postgres:test@db/knowledge_repo_app
      PGPASSWORD: test
  db:
    image: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: test
```


`Dockerfile`:
```
FROM python:3.8

# Install Knowledge Repo
COPY requirements.txt .
RUN pip install -r requirements.txt

# Install mysql-client for setup
RUN apt-get update
RUN apt-get install -y postgresql-client

# Move configs over
WORKDIR /work
COPY files/config.py config.py

# Start application
COPY start.sh /start.sh
ENTRYPOINT ["/start.sh"]
```

`start.sh`:
```
#!/bin/bash

sleep 5

echo "SELECT 'CREATE DATABASE knowledge_repo' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'mydb')\gexec" | psql -h db -U postgres
echo "SELECT 'CREATE DATABASE knowledge_repo_app' WHERE NOT EXISTS (SELECT FROM pg_database WHERE datname = 'mydb')\gexec" | psql -h db -U postgres

knowledge_repo --repo $REPO init
knowledge_repo --repo $REPO db_upgrade --dburi $DBURI
knowledge_repo --repo $REPO runserver --dburi $DBURI --config config.py
#knowledge_repo --repo $REPO deploy --config config.py --dburi $DBURI
```

The app starts fine, and I'm able to see the web UI. However, when I try to init a repo, I get this:

 ```
$ docker exec -it knowledgerepo_repo_1 knowledge_repo --repo postgresql://postgres:test@db/knowledge_repo:knowledge_repo init
Traceback (most recent call last):
  File "/usr/local/bin/knowledge_repo", line 247, in <module>
    repo = knowledge_repo.KnowledgeRepository.create_for_uri(args.repo)
  File "/usr/local/lib/python3.8/site-packages/knowledge_repo/repository.py", line 70, in create_for_uri
    return cls._get_subclass_for(scheme).create(uri, **kwargs)
  File "/usr/local/lib/python3.8/site-packages/knowledge_repo/repository.py", line 74, in create
    raise NotImplementedError
NotImplementedError
```

This is _not_ a configuration issue, since I'm able to run this Python script successfully: 

```
import sqlalchemy as sa
engine = sa.create_engine('postgresql://postgres:test@db/knowledge_repo')
conn = engine.connect()
res = conn.execute("SELECT * FROM pg_catalog.pg_tables")
for row in res:
    print(row)
conn.close()
```
->

```
$ docker exec -it knowledgerepo_repo_1 python test.py
('public', 'knowledge_repo', 'postgres', None, True, False, False, False)
[...]
```

So, what am I doing wrong?

Hi,

 I am trying to connect MS SQL 2016 as the backend and am passing the connection URI as below - 

```
knowledge_repo --repo mssql+pyodbc://username:password@servername/database:table?driver=ODBC+Driver+17+for+SQL+Server
```

But I keep getting error saying **sqlalchemy.exc.InterfaceError: (pyodbc.InterfaceError) ('IM002', u'[IM002] [Microsoft][ODBC Driver Manager] Data source name not found and no default driver specified (0) (SQLDriverConnect)')**

From my investigation, it should have been resolved when I appended _?driver=ODBC+Driver+17+for+SQL+Server_ to the connection URI but had no luck. Has anyone connected SQL Server as the backend and if so, can you please help?

Thank you.


I have created a Docker image for Knowledge Repo based on [this issue](https://github.com/airbnb/knowledge-repo/issues/401). 

Link to image on Docker Hub: https://cloud.docker.com/u/ramdesh/repository/docker/ramdesh/knowledge-repo

This is currently configured to work with Git-backed knowledge repositories only. The code for this is on [my fork.](https://github.com/ramdesh/knowledge-repo/tree/dockerization)
Tried to use this method to enforce consistency in usernames but it has a bug -- seems like in general this functionality is somewhat deprecated but as long as it is still around, might as well raise the correct error! 


I've been trying out knowledge-repo and came across multiple problems that seems to have resulted from following the old documentation on knowledge-repo.readthedocs.io. Looking through the issues it seems that several PRs modified the docs, but the changes didn't propagate yet to the documentation website. It might be a good idea to synchronize the two, so that new users can have a lower entrance barrier to knowledge_repo.

Except for that - thanks for creating this cool project open source :) If we end up using it I'll try to contribute back (if we have something to contribute!).
Fixes #516

### Description of the changeset

We have modified the plain and rich mails to include more information. For the rich email, we have included a new template which shows a preview of the post, along with its thumbnail and related data, with a link to check the full article in the Knowledge Repo.

#### Preview of the rich email

![Screenshot 2019-06-05 at 15 38 03](https://user-images.githubusercontent.com/483532/58960671-ef902400-87a7-11e9-869f-2ba5fc8899bd.png)

### Test Plan:

Current tests have been modified.

#### Test results

![Screenshot 2019-06-05 at 08 37 23](https://user-images.githubusercontent.com/483532/58936726-ba1c1400-8770-11e9-84fc-68835575305a.png)