
Any chance a new release off of master will be done? In particular, support for YAML that was introduced with #256 would be great to have released, especially since the README currently references this feature but anyone installing from PyPi will not be able to use it. Early example of this confusion is in #260.
If you're hosting a single page Cactus site on S3 and want HTTPS, check out [Setup AWS S3 static website hosting using SSL (ACM)](https://medium.com/@sbuckpesch/setup-aws-s3-static-website-hosting-using-ssl-acm-34d41d32e394).

If you're hosting a multi-page Cactus site on S3, want HTTPS, and want clean URLs for all the pages (subdirectories) check out [AWS S3 static hosting with SSL and user friendly URLs](https://medium.com/robot-kittens/aws-s3-static-hosting-with-ssl-and-user-friendly-urls-3ecf6c797991).
I'm using the patch to allow hosting a site from a non-root location (by adding vars to config.json). But now that I've done this, I can no longer do local testing, because URLs that used to be '/static/...' are now 'base_path/static/...' and so I can't test locally using cactus serve. Is there a work around I can use? 
Currently cactus displays robots.txt as this:

```
User-agent: *
Disallow:

Sitemap: sitemap.xml
```

But according to the [standar](https://www.sitemaps.org/protocol.html#submit_robots) the full URL to site is needed.
When using `cactus deploy` to deploy to AWS S3, the files are uploaded (and served by S3) with `Content-Encoding: gzip`, which is not compatible with some older browsers (see, e.g., [Which browsers can handle 'Content-Encoding:'?](http://schroepl.net/projekte/mod_gzip/browser.htm)). Is there a way to turn off gzip compression when deploying, to preserve compatibility with older browsers?
Since this project moved to its "own" GitHub account, is ist still actively maintained and getting some love?
I can run the site with django, but cactus can't build it... Here's the error that appears:
```
~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/base.py:1119: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead
  params, varargs, varkw, defaults = getargspec(func)

~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/utils/internal.py:36: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead
  return inspect.getargspec(obj)

~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/utils/internal.py:45: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() instead
  spec = inspect.getargspec(getattr(obj, FUNC_OBJ_ATTR))

Traceback (most recent call last):
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/defaulttags.py", line 1080, in load
    lib = get_library(taglib)
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/base.py", line 1326, in get_library
    ','.join(tried_modules)))
django.template.base.InvalidTemplateLibrary: Template library staticfiles not found, tried django.templatetags.staticfiles,django_markwhat.templatetags.staticfiles

During handling of the above exception, another exception occurred:

Traceback (most recent call last):
  File "~/.local/bin/cactus", line 11, in <module>
    sys.exit(cli_entrypoint())
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/cli.py", line 159, in cli_entrypoint
    main(sys.argv[1:])
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/cli.py", line 155, in main
    ns.target(**kwargs)
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/cli.py", line 50, in build
    site.build()
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/site.py", line 275, in build
    mapper(lambda p: p.build(), self.pages())
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/utils/helpers.py", line 64, in map_apply
    return list(map(fn, iterable))
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/site.py", line 275, in <lambda>
    mapper(lambda p: p.build(), self.pages())
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/page.py", line 116, in build
    data = self.render()  #TODO: This calls preBuild indirectly. Not great.
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/cactus/page.py", line 109, in render
    return Template(data).render(context)
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/base.py", line 125, in __init__
    self.nodelist = compile_string(template_string, origin)
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/base.py", line 153, in compile_string
    return parser.parse()
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/base.py", line 278, in parse
    compiled_result = compile_func(self, token)
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/loader_tags.py", line 215, in do_extends
    nodelist = parser.parse()
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/base.py", line 278, in parse
    compiled_result = compile_func(self, token)
  File "~/.local/venvs/cactus/lib/python3.5/site-packages/django/template/defaulttags.py", line 1084, in load
    (taglib, e))
django.template.base.TemplateSyntaxError: 'staticfiles' is not a valid tag library: Template library staticfiles not found, tried django.templatetags.staticfiles,django_markwhat.templatetags.staticfiles
```

I installed cactus with pipsi, if that's of any help

EDIT: I uninstallled it through pipsi and installed it through pip, and got the same problem. The project is done in python3, and pip as well as pipsi were also the python3 variant. 
Hello, enable the blog plugin, but then got a bunch of stuff spit back at me. Any idea?

`  File "build/bdist.macosx-10.12-intel/egg/django_markwhat/templatetags/markup.py", line 61, in markdown
ImportError: No module named markdown`
I want to keep my raw posts, that is the files containing the mere content and simple markup, in the `posts`folder, in order to separate them from the other pages. At the same time, I would like to have a URLs like

```
my-domain/post1/
```

instead of

```
my-domain/posts/post1/
```

How can I achieve that?

I use `"prettify": true`.

I understand that by changing `posts` in the following line in `blog.py`

```
Global["config"]["path"] = "posts"
```

to

```
Global["config"]["path"] = "new-posts"
```

and changing the name of the `posts` folder to `new-posts`  I would get something like

```
my-domain/new-posts/post1/
```

like explained  in #152. But that does not solve my problem. 