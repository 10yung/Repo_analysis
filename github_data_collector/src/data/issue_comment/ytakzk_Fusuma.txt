I want to get the path of selected images. But, using phAsset from metadata returns nil. I tried the following:
None of the ways in the following function worked.
`    func getImagesFromAsset(asset: PHAsset) -> URL? {
        var finalURL: URL?
     
        let options: PHContentEditingInputRequestOptions = PHContentEditingInputRequestOptions()
        options.canHandleAdjustmentData = {(adjustmeta: PHAdjustmentData) -> Bool in
            return true
        }
//        PHImageManager.default().requestImage(for: asset, targetSize: CGSize(width: 600, height: 600), contentMode: .aspectFill, options: nil, resultHandler: { (image, info) in
//            //resultHandler have info ([AnyHashable: Any])
//            print(info!["PHImageFileURLKey"])
//            finalURL = info!["PHImageFileURLKey"] as! URL
//
//        })
        
        let imageRequestOptions = PHImageRequestOptions()
        PHImageManager.default().requestImageData(for: asset, options: imageRequestOptions, resultHandler: { imageData, dataUTI, orientation, info in
          if let info = info {
            print("info = \(info)")
          }
          if info?["PHImageFileURLKey"] != nil {

            let path = info?["PHImageFileURLKey"] as? URL
             print(path) //here you get complete URL


            // if you want to save image in document see this.
           // self.saveimageindocument(imageData, withimagename: "DEMO")
          }
        })
        
        asset.requestContentEditingInput(with: options) { (editingInput, info) in
            if asset.mediaType == .image {
                if let strURL = editingInput?.fullSizeImageURL?.absoluteString {
                    print("IMAGE URL: ", strURL)
                } else {
                    print("nill")
                }
            }
        }
        asset.requestContentEditingInput(with: options) { (eidtingInput, info) in
            
            if #available(iOS 11.0, *) {
                let imgUrl = info[UIImagePickerController.InfoKey.imageURL] as? URL
            } else {
                // Fallback on earlier versions
            }
            print("Here")
//            print(imgUrl)
            print(info)
            print(eidtingInput)
            
          if let input = eidtingInput, let imgURL = input.fullSizeImageURL {
             // imgURL
            print(imgURL)
            finalURL = imgURL
          }
        }
        return finalURL
    }`
Is not possible to customize the selected images icon (ic_checkmark) like the others icons.

<img width="429" alt="Schermata 2019-11-05 alle 21 55 29" src="https://user-images.githubusercontent.com/4025510/68247144-775db100-001a-11ea-8c54-196f7d1f1846.png">



Fusuma not work multiply selected image in gallery, button done not get images.
Error is in method 

private func requestImage(with asset: PHAsset, cropRect: CGRect, completion: @escaping (PHAsset, UIImage) -> Void) {
        DispatchQueue.global(qos: .default).async(execute: {
            let options = PHImageRequestOptions()
            options.deliveryMode = .highQualityFormat
            options.isNetworkAccessAllowed = true
            options.normalizedCropRect = cropRect
            options.resizeMode = .exact

            let targetWidth  = floor(CGFloat(asset.pixelWidth) * cropRect.width)
            let targetHeight = floor(CGFloat(asset.pixelHeight) * cropRect.height)
            let dimensionW   = max(min(targetHeight, targetWidth), 1024 * UIScreen.main.scale)
            let dimensionH   = dimensionW * self.getCropHeightRatio()

            let targetSize   = CGSize(width: dimensionW, height: dimensionH)

            PHImageManager.default().requestImage(for: asset, targetSize: targetSize, contentMode: .aspectFill, options: options) { result, info in
                guard let result = result else { return }

                DispatchQueue.main.async(execute: {
                    completion(asset, result)
                })
            }
        })
    }
when I am trying to zoom in or zoom out  the image which is in crop view  it scrolls up the collection view... this event increase the height of collection view..I want exact same as it works in Instagram..can you please help me to solve this issue
On iOS 13, after permission is given for camera and library fusma is still blank. The user has to click out and back in before the images show.

Any way to solve this?

While selecting more than 15 images, it will crash the app due to memory issue. Even in your example demo you can check the same with uploading 15 or more photos.

![Screenshot 2019-07-12 at 1 50 09 PM](https://user-images.githubusercontent.com/25882656/61113729-783b6780-a4ac-11e9-82bb-e424a7edb5db.png)


Resolve
I'm trying to allow the user to select multiple images and for that I have tried below code.

```
let fusuma = FusumaViewController()
fusuma.delegate = self
fusuma.cropHeightRatio = 1.0
fusuma.allowMultipleSelection = true
fusuma.availableModes = [.library, .video, .camera]
fusuma.photoSelectionLimit = 4
fusumaTintColor = UIColor.red
fusumaSavesImage = true

present(fusuma, animated: true, completion: nil)
```


If I write `fusuma.allowMultipleSelection = false` then delegate getting called but when I have tried `fusuma.allowMultipleSelection = true` then delegate not getting called.

```
// MARK: FusumaDelegate Protocol
    func fusumaImageSelected(_ image: UIImage, source: FusumaMode) {
        switch source {
        case .camera:
            print("Image captured from Camera")
        case .library:
            print("Image selected from Camera Roll")
        default:
            print("Image selected")
        }

        imageView.image = image
    }

    func fusumaMultipleImageSelected(_ images: [UIImage], source: FusumaMode) {
        print("Number of selection images: \(images.count)")

        var count: Double = 0

        for image in images {
            DispatchQueue.main.asyncAfter(deadline: .now() + (3.0 * count)) {
                self.imageView.image = image
                print("w: \(image.size.width) - h: \(image.size.height)")
            }

            count += 1
        }
    }
```


I tried this in downloaded demo but it's not working. 
Camera starts with:
```
fusuma.cameraPosition = .front
```
We can change camera position to .back using UI button. But in this case we can't use flashlight because flashlight UI button was not shown.

Be great if after changing cameraPosition camera UI will be updated. 