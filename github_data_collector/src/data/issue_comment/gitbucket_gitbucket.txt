In the ghprb plugin we can mention the retry phases like retest this please etc.
How to configure the same here?

### Before submitting an issue to GitBucket I have first:

- [x] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md)
- [x] searched for similar already existing issue
- [x] read the documentation and [wiki](https://github.com/gitbucket/gitbucket/wiki)

*(if you have performed all the above, remove the paragraph and continue describing the issue with template below)*

## Issue
**Impacted version**: xxxx

**Deployment mode**: *explain here how you use GitBucket : standalone app, under webcontainer (which one), with an http frontend (nginx, httpd, ...)*

**Problem description**:
- *be as explicit has you can*
- *describe the problem and its symptoms*
- *explain how to reproduce*
- *attach whatever information that can help understanding the context (screen capture, log files)*

all issue 2412 that this PR should correct

### Before submitting a pull-request to GitBucket I have first:

- [ ] read the [contribution guidelines](https://github.com/gitbucket/gitbucket/blob/master/.github/CONTRIBUTING.md)
- [ ] rebased my branch over master
- [ ] verified that project is compiling
- [ ] verified that tests are passing
- [ ] squashed my commits as appropriate *(keep several commits if it is relevant to understand the PR)*
- [ ] [marked as closed using commit message](https://help.github.com/articles/closing-issues-via-commit-messages/) all issue ID that this PR should correct

## Issue
**Impacted version**: 4.33.0

**Deployment mode**: standalone app

**Repro steps**:
1. Wiki -> New Page
1. Fill in each item and click "Save" button.
    * Page name: `title+`
    * Content: `aaa`
1. Redirect to the edit page.
    * Page name: `title ` instead of `title+`
    * Content: (blank)

As `+` is decoded to whitespace, should it be treated as an invalid character here?
https://github.com/gitbucket/gitbucket/blob/master/src/main/scala/gitbucket/core/controller/WikiController.scala#L306

![plus](https://user-images.githubusercontent.com/17608272/71674664-24586e00-2dbf-11ea-90d1-21f9aed68b26.gif)

## Issue

**Impacted version**: 4.31.2 and 4.32.0

**Deployment mode**: standalone app

**Problem description**:

- When you create a comment (issue comment etc.) that includes issue or pull request numbers (such as `#1`) or commit SHAs, reference links are automatically generated, but link tags are empty.

Tested comment:
```
#1
GH-1
a3a562c65b5cbf60d6bdcb727c8fedc2b610dcb6
```

Generated html:
```html
<div class="panel-body markdown-body" id="issueContent">
  <p><a>#1</a><br><a>GH-1</a><br><code><a>a3a562c</a></code></p>
</div>
```

- In the above situation, the referenced link automatically generated in referenced issue `#1` is correct.
- This problem occurs in versions 4.31.2 and 4.32.0. Version 4.31.1 generates correct links.

**Impacted version**: 4.32.0

**Deployment mode**: gitbucket.war deployed on Tomcat 9.0.29, running under Windows Server 2008 R2 (Virtual Machine, 1GB RAM), behind apache2 proxy

**Problem description**:
When starting up Tomcat, most of the time, gitbucket doesn't start, but instead reports this:
```
03-Dec-2019 13:24:20.347 SEVERE [main] org.apache.catalina.core.StandardContext.listenerStart Error configuring application listener of class [gitbucket.core.servlet.InitializeListener]
	akka.ConfigurationException: Could not start logger due to [akka.ConfigurationException: Logger specified in config can't be loaded [akka.event.Logging$DefaultLogger] due to [akka.event.Logging$LoggerInitializationException: Logger log1-Logging$DefaultLogger did not respond with LoggerInitialized, sent instead [TIMEOUT]]]
		at akka.event.LoggingBus.startDefaultLoggers(Logging.scala:162)
		at akka.event.LoggingBus.startDefaultLoggers$(Logging.scala:105)
		at akka.event.EventStream.startDefaultLoggers(EventStream.scala:25)
		at akka.actor.LocalActorRefProvider.init(ActorRefProvider.scala:678)
		at akka.actor.ActorSystemImpl.liftedTree2$1(ActorSystem.scala:912)
		at akka.actor.ActorSystemImpl._start$lzycompute(ActorSystem.scala:908)
		at akka.actor.ActorSystemImpl._start(ActorSystem.scala:908)
		at akka.actor.ActorSystemImpl.start(ActorSystem.scala:930)
		at akka.actor.ActorSystem$.apply(ActorSystem.scala:258)
		at akka.actor.ActorSystem$.apply(ActorSystem.scala:302)
		at akka.actor.ActorSystem$.apply(ActorSystem.scala:276)
		at gitbucket.core.servlet.InitializeListener.<init>(InitializeListener.scala:41)
```
The main problem is probably the feeble system performance, but I unfortunately can't change this; the problem happens much more since the upgrade to Tomcat 9.0.29, but occasionally this happened with older versions too.
I have found other reports of such behavior, e.g. https://stackoverflow.com/questions/16176654/akka-timeouts-starting-event-handlers or https://github.com/yahoo/kafka-manager/issues/428, and they mention setting `akka.logger-startup-timeout` to some higher value in some config file, but I can't figure out where i should put this - is there a config file in gitbucket where I can put this setting?
## Feature
Closing multiple issues using only one keyword on **commits** or **pull requests** like below:
```
fixes #1, #2, #3, #4, #5, #6, #7, #8
```
## Issue
**Impacted version**: 4.32.0

**Deployment mode**: Standalone behind nginx https reverse proxy

**Problem description**:
When I use the zip download link at the top of the repo, it's only downloading the top level folder.  All subfolders are being missed entirely.
![apegitbucket](https://user-images.githubusercontent.com/355276/67974872-c6e64c00-fbd8-11e9-9bc5-bcb079bd9880.png)
![apezip](https://user-images.githubusercontent.com/355276/67974873-c6e64c00-fbd8-11e9-9882-9537a98801b4.png)


Please allow to visually group activities from the same user and the same operations in a short period of time (e.g. like it's already done with commits).

This would allow to display more usable information about the activity in smaller screen estate, without scrolling.
Hi,

would it be possible to add an option that every issue is getting it's number from a single global sequence instead of having an extra sequence for every repository, so that the issue number would always be unique.

Thank you.
Hi,

I wanted to ask if it may be possible to provide a collection for Postman with all the available API Calls and their parameters. This would allow a very easy and quickway of testing the API and see if it is suiteable for a given use case.

Thank you.
 