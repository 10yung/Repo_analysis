Hi there!

Thanks for submitting an issue to Protractor.

To help us help you better, please do the following before submitting an issue:

1. Review the questions section of [CONTRIBUTING.md](https://github.com/angular/protractor/blob/master/CONTRIBUTING.md#contributing).
2. Make sure you are not asking a usage or debugging question. If you are, use [StackOverflow](http://stackoverflow.com/questions/tagged/protractor), [Google Group discussion list](https://groups.google.com/forum/?fromgroups#!forum/angular), or [Gitter](https://gitter.im/angular/protractor) to get help.
3. Provide a minimally reduced test case. This makes it much more likely that your bug will be fixed. Protractor has a test Angular application available at `http://www.protractortest.org/testapp` which you can use for the reproducible test case.
4. Fill in the information that corresponds to your type of issue below.
5. Delete this intro and any unrelated text :smile: (if you do not we'll assume you haven't read these instructions and automatically close the issue.)


Bug report
---

- Node Version: `v10.16.3`
- Protractor Version: `Version 5.4.2`
- Angular Version: `7.2.4`
- Browser(s): `safari`and ie-version 11
- Operating System and Version `win32 x64`
- Your protractor configuration file-
// Protractor configuration file, see link for more information
// https://github.com/angular/protractor/blob/master/lib/config.ts

let InputData = require ('../e2e/calci.Input.data.json');
const { SpecReporter } = require('jasmine-spec-reporter');
exports.config = {
 // 'autoStartStopServer': true,
  allScriptsTimeout: 11000,
  specs: ['E:/Testing/Protractor_Projects/TestUsing_TS/SuperCalculator/e2e/TestCase.ts',
  ],
  capabilities: {
    'browserName': 'safari',
    },
  params:{
    InputData: InputData
  },
  baseUrl: 'http://localhost:4200/',
  framework: 'jasmine',
  jasmineNodeOpts: {
    showColors: true,
    defaultTimeoutInterval:250000,
    print: function() {}
  },
  onPrepare() {
    //browser.driver.manage().window().maximize();
    require('ts-node').register({
      project: require('path').join(__dirname, './tsconfig.e2e.json')
    });
    jasmine.getEnv().addReporter(new SpecReporter({ spec: { 
      displayFailuresSummary: true,
      displayFailuredSpec: true,
      displaySuiteNumber: true,
      displaySpecDuration: true,
      displayStacktrace: true  } }));
  },
};
- A relevant example test
- Output from running the test:-
PS E:\Testing\Protractor_Projects\TestUsing_TS\SuperCalculator\e2e> protractor
[12:58:48] I/launcher - Running 1 instances of WebDriver
[12:58:48] I/local - Starting selenium standalone server...
[12:58:58] I/local - Selenium standalone server started at http://20.198.150.134:54431/wd/hub
[12:58:59] E/launcher - Unable to create new service: SafariDriverService
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'INPF0Y6EBA', ip: '20.198.150.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: driver.version: unknown
[12:58:59] E/launcher - SessionNotCreatedError: Unable to create new service: SafariDriverService
Build info: version: '3.141.59', revision: 'e82be7d358', time: '2018-11-14T08:25:53'
System info: host: 'INPF0Y6EBA', ip: '20.198.150.134', os.name: 'Windows 10', os.arch: 'amd64', os.version: '10.0', java.version: '13.0.1'
Driver info: driver.version: unknown
    at Object.checkLegacyResponse (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\error.js:546:15)
    at parseHttpResponse (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\http.js:509:13)
    at doSend.then.response (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\http.js:441:30)
    at process._tickCallback (internal/process/next_tick.js:68:7)
From: Task: WebDriver.createSession()
    at Function.createSession (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\lib\webdriver.js:769:24)
    at createDriver (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\index.js:170:33)
    at Builder.build (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\selenium-webdriver\index.js:635:14)
    at Local.getNewDriver (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\built\driverProviders\driverProvider.js:53:33)
    at Runner.createBrowser (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\built\runner.js:195:43)
    at q.then.then (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\built\runner.js:339:29)
    at _fulfilled (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\q\q.js:834:54)
    at C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\q\q.js:863:30
    at Promise.promise.promiseDispatch (C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\q\q.js:796:13)
    at C:\Users\vvicky.EAD\AppData\Roaming\npm\node_modules\protractor\node_modules\q\q.js:604:44
[12:58:59] E/launcher - Process exited with error code 199

- Steps to reproduce the bug
1.> create any angular-protractor project.
2.> run the project by launching chrome browser
3.>change the browser name in config file, "safari" or "ie"

- The URL you are running your tests against (if relevant)
"http://juliemr.github.io/protractor-demo/"


Feature Request
---

- Reasons for adopting new feature-
launching different browsers for my project.

- Is this a breaking change? (How will this affect existing functionality)

While running our End to End scripts we are getting below error,
"Issue with Error: Timeout - Async callback was not invoked within timeout specified by jasmine.DEFAULT"

tried to increase default timeout interval in config, but still the scripts are passing partially.
Also, used the below lines in spec file. overall script execution time is getting delayed because of the below code.
const interval =20000;
beforeEach(function() {
        originalTimeout = jasmine.DEFAULT_TIMEOUT_INTERVAL;
        jasmine.DEFAULT_TIMEOUT_INTERVAL = interval;
    });

    afterEach(function() {
        jasmine.DEFAULT_TIMEOUT_INTERVAL = originalTimeout;
    });


Chrome version 79.0.3945.79
driver version 79.0.3945.36

we are working on angular 8 version web based application.

**below is our config file** 
const { SpecReporter } = require('jasmine-spec-reporter'),
    HtmlReporter = require('protractor-jasmine2-html-reporter'),
    JasmineReporters = require('jasmine-reporters');

let specReporter = new SpecReporter({
        spec: {
            displayStacktrace: false,
            displayFailed: true,
            displayErrorMessages: true,
        },
    }),
    htmlReporter = new HtmlReporter({
        savePath: './test/reports',
        screenshotsFolder: 'imgs',
        takeScreenshots: true,
        takeScreenshotsOnlyOnFailures: false,
        fixedScreenshotName: false,
        fileName: 'index',
        consolidate: 'false',
    }),
    junitReporter = new JasmineReporters.JUnitXmlReporter({
        consolidateAll: true,
        savePath: './test/reports',
        filePrefix: 'TTS-JUnitXML-report',
    });

exports.config = {
    allScriptsTimeout: 30000,
    specs: ['./test/**//*.e2e-spec*.ts'],
    suites: {
        view: './test/**/*.view-spec*.ts',
    },

    capabilities: {
        browserName: 'chrome',
        unexpectedAlertBehaviour: 'accept',
        chromeOptions: {
            args: ['--headless', '--disable-gpu', '--window-size=1680,1050'],
            prefs: {
                download: {
                    directory_upgrade: true,
                    prompt_for_download: false,
                    default_directory: './test/reports/downloads',
                },
            },
        },
    },
    directConnect: true,
    baseUrl: 'http://localhost:4200',
    useAllAngular2AppRoots: true,
    framework: 'jasmine',
    jasmineNodeOpts: {
        showColors: true,
        defaultTimeoutInterval: 20000,
        print: function() {},
    },

    onPrepare() {
        require('ts-node').register({
            project: 'test/tsconfig.e2e.json',
        });

        global.all = require('./test/common/all');
        browser.driver.sendChromiumCommand('Page.setDownloadBehavior', {
            behavior: 'allow',
            downloadPath: process.cwd() + '\\test\\reports\\downloads',
        });

        await browser.waitForAngularEnabled(true);
        jasmine.getEnv().addReporter(specReporter);
        jasmine.getEnv().addReporter(htmlReporter);
        jasmine.getEnv().addReporter(junitReporter);
    },
};



Commonly used method such as .click(), mouseMove, visibilityOf are not working in Edge Browser.

Protractor - Latest
Browser - Latest

Thank you
Feature Request:  recording videos - protractor-cucumber-framework
---
We are using "protractor-cucumber-framework" for our E2E tests which run on CI env.

For debugging and Q&A purpose, we are looking for a way to record our E2E tests, so we can watch them later.

I saw a previous post mention to use "protractor-video-reporter", but it seems to work only with Jasmine.
see: https://stackoverflow.com/questions/38860261/recording-videos-of-protractor-e2e-tests

Is it possible to use this tool (or any other) to achieve it on Cucumber framework.

thanks,


Bug report
---

- Node Version: `8.15.1`
- Protractor Version: `5.4.2`
- Angular Version: `1.5`
- Browser(s): `Chromium`
- Operating System and Version `macOS Mojave 10.14.6`

Example DOM:
```
<html>
    <elementA>
    </elementA>

    <elementB>
        <elementA>
        </elementA>
    </elementB>
</html>
```

Behavior observed:
```
// these ones return both instances of "elementA" 
element(by.xpath('//elementB')).element(by.xpath('//elementA'));
element(by.xpath('//elementB')).all(by.xpath('//elementA'));

// these ones work as documented, only returning the "elementA" nested inside "elementB"
element(by.xpath('//elementB')).$('elementA');
element(by.xpath('//elementB')).$$('elementB');
```
Bug report
---

- Node Version: `v12.4.0`
- Protractor Version: `5.4.2`
- Angular Version: `5.2.1`
- A relevant example test
```typescript
ElementArrayFinder.prototype.single = function (): ElementFinder {
    return this.filter((elem, index) => {
            if (index > 0) { throw new Error('Too many elements'); }
            return true;
    }).first();
};

let abc = await $$('missing-tag').single().isPresent();
expect(abc).to.equal(true);
```
- Output from running the test
```typescript
1 scenarios (1 passed)
```
should be
```typescript
1) Scenario: 
    stacktrace
1 scenarios (1 failed)
```
I'm getting the above mentioned error for this.attachment which is inside each loop whereas this.upload is working as expected which is outside each function. Could you please help me, what is the reason for this error?

`{
this.upload = element(by.id('upload'));
this.attachment = element(by.css('[ng-click="vm.deleteAttachment(attachment)"]'))
this.warningMessage = element(by.css('[ng-show="SearchResult && SearchMessage"] i'));


    this.deleteAll = function ()
    {
        browser.driver.navigate().refresh();
        common.waitForElementAndClick(this.upload);
		
        this.supplementSearchResult.each(function(ele, index){
            
            common.waitForElementAndClick(this.attachment);
        });
        expect(this.warningMessage.getText()).toEqual('No search results.');


    }
}`

Hi, 

I am running a test with multiCapabilities, one in chrome and another in firefox. When I run the test, it successfully run the test parallely in Cross Browser mode. I am using Jasmine Framework.

But, the issue is I need to create a class instance which should be shareable by both browsers i.e. chrome and firefox. But, it creates two different class instance for both browsers rather than creating one instance. 
I have tried with onPrepare(), it is called the number of times the browser instance is created. So, I tried with beforeLaunch(), but we can't access anything outside which is defined in beforeLaunch function.
I need a function block which should be run before creating parallel instances for every test, where I can create a class instance and use it in test shareable by cross browsers in parallel. Is there any way to do this.

Thanks

Node Version: v10.16.3
Protractor Version: Version 5.4.2
Angular Version: 7
Browser(s): Chrome 78.0.3904.108
Operating System and Version windows 10 pro

Tests that works:


    await browser.waitForAngularEnabled(false);
    await downloadelement.click();
    await element2.sendKeys();


Test that does not work:

    await browser.waitForAngularEnabled(true);
    await downloadelement.click();
    await element2.sendKeys();

Test that does not work:

    await browser.waitForAngularEnabled(true);
    await downloadelement.click();
    await browser.waitForAngularEnabled(false);
    await element2.sendKeys()

Problem: sawait element2.sendKeys() never gets executed and script times out if browser.waitForAngularEnabled(true);

**Note:** it doesn't matter where i enable browser.waitForAngularEnabled(true); Enabling angularwait after  downloadelement.click(); in the same spec hangs the spec. 

**There is also a Related StackOverflow Question:**

https://stackoverflow.com/questions/29252724/protractor-adds-a-huge-delay-after-downloading-a-file-while-test-is-running

Bug report
---

- Node Version: `v10.16.3`
- Protractor Version: `Version 5.4.2`
- Angular Version: `7`
- Browser(s): `Chrome`
- Operating System and Version `windows 10 pro `
- Your protractor configuration file
- A relevant example test:

A program that has two text field , i.e name and description
**usecase:** 

**When** user enters "hi" in name field **Then** name field gets the value "hi"
**When** user clears data in name field **Then** name field get cleared
**Then** user enters "Hello" in description field **Then** description field gets value "Hello" **And** name field remains empty
**Then** user enters new value 'W' in Name field **Then** name field gets value 'W'   [**Failing**, name field gets value hiW]

**Code:**
 ```
               await element(by.id("package-name")).sendKeys("hi");
                await element(by.id("package-name")).clear();
                await element(by.id("package-description")).sendKeys("Hello");
                await element(by.id("package-name")).sendKeys("W");
                await browser.sleep(5000);
```

**Expected Behavior:**

Name field should get only "W" , should not have previous input cached 
