(Sorry, I'm not sure whether I should report this here or r-lib/actions...)

I see this error on `runs-on: macOS-latest`, which is added `usethis::use_github_actions()`:

```
unable to load shared object '/Users/runner/runners/2.163.1/work/_temp/Library/systemfonts/libs/systemfonts.so':
  dlopen(/Users/runner/runners/2.163.1/work/_temp/Library/systemfonts/libs/systemfonts.so, 6): Library not loaded: /opt/X11/lib/libfreetype.6.dylib
  Referenced from: /Users/runner/runners/2.163.1/work/_temp/Library/systemfonts/libs/systemfonts.so
  Reason: image not found
Backtrace:
  1. vdiffr::expect_doppelganger
  2. base::getExportedValue(pkg, name)
  3. base::asNamespace(ns)
  4. base::getNamespace(ns)
  5. base::loadNamespace(name)
  8. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 11. base::loadNamespace(j <- i[[1L]], c(lib.loc, .libPaths()), versionCheck = vI[[j]])
 12. base::library.dynam(lib, package, package.lib)
 13. base::dyn.load(file, DLLpath = DLLpath, ...)
```
https://github.com/yutannihilation/gghighlight/commit/bf77c205d1e9e570eecbc1b821b6eccad524a132/checks?check_suite_id=394064558#step:5:136
Right now it doesn't push the failure log file when `NOT_CRAN` is defined. This is meant to avoid creating a log file when testthat is run interactively, and only create it when testthat is run by R CMD check. However if we detect `CI` this should take precedence, this way we create the log file on Travis etc by default.

Maybe we should use `is_interactive()` instead of `NOT_CRAN` to determine whether to push a log file? Or maybe we should only create a log file when either `VDIFFR_LOG_PATH` or `CI` is defined. We are no longer running visual tests on CRAN anyway.

cc @thomasp85 
Hi there! :)

I get 4 failing tests when I test some graphics (as of this commit of brolgar - https://github.com/njtierney/brolgar/commit/9d701eeb803273f13bf28eec64d995dce8b20b40), and when I go to run `vdiffr::manage_cases()` I get the following error, which I can't seem to work out how to fix - do you have any suggestions on how to fix this? Perhaps I am missing something obvious, but any pointers would be much appreciated! :)

Cheers,


```r
> vdiffr::manage_cases()
Running testthat to collect visual cases

  N = New visual case
  X = Failed doppelganger
  o = Successful doppelganger

........................XXXo........................................E............
.................................................................................
..........................................................
Error: while collecting vdiffr cases. Last error:
* test: (unknown)
* message: invalid 'type' (closure) of argument
You can inspect this error with `vdiffr::last_collection_error()`
<error/rlang_error>
while collecting vdiffr cases. Last error:
* test: (unknown)
* message: invalid 'type' (closure) of argument
You can inspect this error with `vdiffr::last_collection_error()`
Backtrace:
     █
  1. └─vdiffr::manage_cases()
  2.   └─vdiffr::collect_cases(package, filter = filter)
  3.     ├─base::suppressMessages(...)
  4.     │ └─base::withCallingHandlers(expr, message = function(c) invokeRestart("muffleMessage"))
  5.     └─devtools::test(package, filter = filter, reporter = reporter)
  6.       ├─withr::with_options(...)
  7.       │ └─base::force(code)
  8.       ├─withr::with_envvar(...)
  9.       │ └─base::force(code)
Browse[1]> Q
```

<details closed>

```r

─ Session info ────────────────────────────────────────────────────────────────
 setting  value                       
 version  R version 3.6.1 (2019-07-05)
 os       macOS Mojave 10.14.6        
 system   x86_64, darwin15.6.0        
 ui       RStudio                     
 language (EN)                        
 collate  en_AU.UTF-8                 
 ctype    en_AU.UTF-8                 
 tz       Australia/Melbourne         
 date     2019-12-16                  

─ Packages ────────────────────────────────────────────────────────────────────
 ! package           * version    date       lib
   anytime             0.3.6      2019-08-29 [1]
   assertthat          0.2.1      2019-03-21 [1]
   backports           1.1.5      2019-10-02 [1]
 P brolgar           * 0.0.5.9100 2019-12-06 [?]
   callr               3.4.0      2019-12-09 [1]
   cli                 2.0.0      2019-12-09 [1]
   clipr             * 0.7.0      2019-07-23 [1]
   colorspace          1.4-1      2019-03-18 [1]
   crayon              1.3.4      2017-09-16 [1]
   curl                4.3        2019-12-02 [1]
   desc                1.2.0      2018-05-01 [1]
   details             0.1.1      2019-10-16 [1]
   devtools          * 2.2.1      2019-09-24 [1]
   digest              0.6.23     2019-11-23 [1]
   dplyr             * 0.8.3      2019-07-04 [1]
   ellipsis            0.3.0      2019-09-20 [1]
   evaluate            0.14       2019-05-28 [1]
   fabletools          0.1.1      2019-09-16 [1]
   fansi               0.4.0      2018-10-05 [1]
   farver              2.0.1      2019-11-13 [1]
   fontBitstreamVera   0.1.1      2017-02-01 [1]
   fontLiberation      0.1.0      2016-10-15 [1]
   fontquiver          0.2.1      2017-02-01 [1]
   forcats             0.4.0      2019-02-17 [1]
   freetypeharfbuzz    0.2.5      2018-10-30 [1]
   fs                * 1.3.1      2019-05-06 [1]
   gdtools           * 0.2.1      2019-10-14 [1]
   generics            0.0.2      2018-11-29 [1]
   gghighlight       * 0.1.0      2018-07-04 [1]
   ggplot2           * 3.2.1      2019-08-10 [1]
   glue                1.3.1.9000 2019-07-29 [1]
   goodshirt         * 0.2.2      2019-07-14 [1]
   gridExtra           2.3        2017-09-09 [1]
   gtable              0.3.0      2019-03-25 [1]
   htmltools           0.4.0      2019-10-04 [1]
   httr                1.4.1      2019-08-05 [1]
   jsonlite            1.6        2018-12-07 [1]
   knitr               1.26       2019-11-12 [1]
   labeling            0.3        2014-08-23 [1]
   lazyeval            0.2.2      2019-03-15 [1]
   lifecycle           0.1.0      2019-08-01 [1]
   lubridate           1.7.4      2018-04-11 [1]
   magrittr            1.5        2014-11-22 [1]
   memoise             1.1.0      2017-04-21 [1]
   munsell             0.5.0      2018-06-12 [1]
   packrat             0.5.0      2018-11-14 [1]
   pak               * 0.1.2      2019-02-19 [1]
   patchwork         * 1.0.0      2019-12-01 [1]
   pillar              1.4.2      2019-06-29 [1]
   pkgbuild            1.0.6      2019-10-09 [1]
   pkgconfig           2.0.3      2019-09-22 [1]
   pkgload             1.0.2      2018-10-29 [1]
   png                 0.1-7      2013-12-03 [1]
   prettyunits         1.0.2      2015-07-13 [1]
   processx            3.4.1      2019-07-18 [1]
   ps                  1.3.0      2018-12-21 [1]
   purrr               0.3.3      2019-10-18 [1]
   R6                  2.4.1      2019-11-12 [1]
   Rcpp                1.0.3      2019-11-08 [1]
   remotes             2.1.0      2019-06-24 [1]
   rlang               0.4.2      2019-11-23 [1]
   rmarkdown           1.18       2019-11-27 [1]
   rprojroot           1.3-2      2018-01-03 [1]
   rsconnect           0.8.15     2019-07-22 [1]
   rstudioapi          0.10       2019-03-19 [1]
   scales              1.1.0      2019-11-18 [1]
   scico               1.1.0      2018-11-20 [1]
   sessioninfo         1.1.1      2018-11-05 [1]
   stringi             1.4.3      2019-03-12 [1]
   stringr             1.4.0      2019-02-10 [1]
   systemfonts         0.1.1      2019-07-01 [1]
   testthat          * 2.3.1      2019-12-13 [1]
   tibble              2.1.3      2019-06-06 [1]
   tidyr               1.0.0      2019-09-11 [1]
   tidyselect          0.2.5      2018-10-11 [1]
   tsibble           * 0.8.4      2019-09-17 [1]
   usethis           * 1.5.1.9000 2019-12-12 [1]
   vctrs               0.2.0      2019-07-05 [1]
   vdiffr              0.3.1      2019-06-24 [1]
   withr               2.1.2      2018-03-15 [1]
   xfun                0.11       2019-11-12 [1]
   xml2                1.2.2      2019-08-09 [1]
   yaml                2.2.0      2018-07-25 [1]
   zeallot             0.1.0      2018-01-28 [1]
 source                               
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 local                                
 CRAN (R 3.6.1)                       
 CRAN (R 3.6.1)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.1)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 standard (@0.1.1)                    
 standard (@0.1.0)                    
 standard (@0.2.1)                    
 CRAN (R 3.6.0)                       
 standard (@0.2.5)                    
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 Github (tidyverse/glue@423b7e5)      
 Github (adam-gruer/goodshirt@7253105)
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 standard (@0.5.0)                    
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.1)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 standard (@0.8.15)                   
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 local                                
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 Github (r-lib/usethis@23dd62c)       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       
 CRAN (R 3.6.0)                       

[1] /Library/Frameworks/R.framework/Versions/3.6/Resources/library

 P ── Loaded and on-disk path mismatch.

```

</details>
<br>
Might be useful for patchwork, cc @thomasp85 
My thought is that `use_vdiffr()` could add `vdiffr()` to Suggests and also set up a template visualisation test in `tests/`
In trying to understand why some of reference figures produced with `manage_cases()` use `theme_grey()` and some a simpler theme (presume `theme_test()`), I realised that any use of `theme()`, even if just to fix the position of a legend (which can't be done any other way?) seems to defeat the use of the test theme.

For example, I have the following to turn off a legend by default (user can turn it back on)

```r
plt <- plt + guides(colour = "none")
```
If I switch to the alternative

```r
plt <- plt + theme(legend.position = "none")
```

in my function the visual tests fail. In the first case I get `theme_test()` in the second I get `theme_grey()`.

Is there any way to reliably use the simple test theme whilst using `theme()` in a function?

I appreciate that in the specific case above I can use `guides()` but what if I want to force a specific legend.position:

```r
plt <- plt + theme(legend.position = "bottom")
```

I have a couple of very long-running tests in a single file that generate images I wish to check with *vdiffr* but not every time I run `R CMD check` on the package or every time I run `manage_cases()` (these are tests for some outputs from a paper, which should be run only when preparing for a release).

I know I can filter the tests that get run by `manage_cases()` but only to select the ones to be run. I'd like to be able to select all tests but the tests that match the regexp, so I can ignore the one test file I want to exclude from `manage_cases()`.

This could be achieved by having `manage_cases()`, `collect_cases()` etc accept an `invert` argument that can be passed down to `devtools::test()`, which would ultimately make `testthat:::filter_test_script` invert the supplied regexp.

Added listeners for these key-down events:

left/right `arrow` - switch case
`shift` + `arrow` - switch group
`v` - validate active case
`shift `+ `v` - validate active group
`esc` - quit app

New helper `next_element()` to increment input widgets.

To address #13 and #64.

As of the newest testthat (I believe), a `context()` isn't required at the top of a test file (and `usethis::use_test()` doesn't give you one by default). The visual case manager seems not to know about the automatically derived "contexts" from the file, and renders the validated images to the wrong location (the root figs location). When testing, I get an error saying that the visual test case hasn't been validated (and a folder with the correct "context" has been created in my testthat/figs directory). The workaround is to add an explicit `context()`, but this take me a while to figure out!
I updated today to RStudio 1.2.1335 and "progress bar" of `manage_cases()` (the one with `.`, `o`, `X`, and `N`) doesn't seem to respect console width very well. After reaching console's right side "progress bar" doesn't go on a new line (like it used to). Here is a screenshot of current output where it goes very far to the right in first and last lines (all symbols outside the view are `.`):

![vdiffr_progress-bar-issue](https://user-images.githubusercontent.com/24854248/57022617-5a45c100-6c38-11e9-9178-c4b260aead85.png)


This problem doesn't occur in RStudio 1.1.463 (I reinstalled it with all the same R and package versions): no "progress symbol" appeared outside of current console width.

I am not really sure if that is a problem with vdiffr implementation or RStudio change, but decided to create issue anyway.