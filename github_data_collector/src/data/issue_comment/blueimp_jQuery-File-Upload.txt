Hi,

How can I change the code to force minimum number of files to be uploaded? How can I add validation for minimum number of files?

Regards,
Vladimir
I am stumped at the moment as to why I am unable to get the blueimp/jQuery-file-upload plugin to work with the desktop Safari browser v11+. My QA tested with v11.2 (MacOS El Capitan) and I've tested on v13.0.3 (macOS Mojave 10.14.6). Safari doesn't appear to be calling the .fileupload() function. However, the plugin works as expected in both Chrome and Firefox.

Here's the bare bones code I've been using for testing.

Html

`<input class="upload" type="file" name="FileData" id="fileupload-remove-items" data-url="/analysis/upload"/>`

JS:
```
  $('#fileupload-remove-items').fileupload({
        dataType: 'json',
        start: function (e, data){
            console.log('start'); // fires in Chrome & Firefox browsers, but *not* Safari
        },
        progress: function (e, data){
            console.log('progress');  // fires in Chrome & Firefox browsers, but *not* Safari
        },
        done: function (e, data) {
            console.log('done'); 
        }
    }); 
```

In both Firefox & Chrome the console.log() fires as expected. But nothing happens at all in Safari. I haven't been able to find any related SO posts or bug reports in this repo that answer this question so I'm now reaching out here. Can anyone else replicate this issue? Interestingly, I am able to upload a file from the demo page using Safari but looking through the demo code thus far has not made it clear how/why the simple above use case consistently fails with Safari.

Any help would be most welcome. Thanks ahead of time!

I have also asked this question on S.O.: https://stackoverflow.com/questions/58896103/safari-v11-not-working-with-blueimp-jquery-file-upload-plugin
This is an odd issue we observed in our project, that is very specific. It only occurs in the iPhone simulator for 6, 7 and 8, with iOS 12. Other phones on iOS 12 works fine, and 6/7/8 phones with iOS 11 and 13 works too. We have a ReactNative app with a WebView; and it also seemed that it worked with the "old" WebView, but not the newer WkWebView. At the moment I am not sure if the problem existed in Safari or not, but I think so. But, I don't think this matters too much for the question.

The failure is that after the user has selected a file for upload, nothing happens (no attempt at uploading the file in the background). Since it is on an iPhone in an embedded web app, it is fairly hard to debug.

Anyway, we sort-of identified the problem, and a potential fix, but the "offending" code is pretty complicated, so it is hard to see what's really going on, and what side-effects a fix could result in.

The culprit in this specific case is that `_handleFileTreeEntry()` returns/resolves a single (file) object, where the caller expects an array. 

It begins (or ends here):
`_onAdd(null, data); // data.files is supposed to be an array in this function`

However, that data.files is set in `add()` from a Promise that bubbles down from this chain:
_getFileInputFiles -> _getSingleFileInputFiles -> _handleFileTreeEntries -> _handleFileTreeEntry

In _handleFileTreeEntry(), we have this code:
```javascript
       if (entry.isFile) {
          if (entry._file) {
            // Workaround for Chrome bug #149735
            entry._file.relativePath = path;
            dfd.resolve(entry._file);  // <-- this may also be a problem
          } else {
            entry.file(function(file) {
              file.relativePath = path;
              dfd.resolve(file);  // <--- THIS IS OUR PROBLEM
            }, errorHandler);
          }
        } else if (entry.isDirectory) {
```
Here, on the marked lines, it resolves to a single file, while in other parts of the function it resolves to a list of files. When we change the marked line to `dfd.resolve( [ file ] )` it works in our test case.

So, does anyone know why this inconsistency exists, and what would break if one fixes it?
Hello,

I saw some issues with rotating images after uploading, and realized that most are old issues! I have the same problem, I need to insert some code snippet or just the setting that exists in the script is enough. I use the default script setting.

I honestly do not know what to do!

In the script example the image appears normal:
https://monosnap.com/file/aKGbooVXUWKXGeiP1i2UXVVAa470l1

In my script the image is rotated:
https://monosnap.com/file/ofrTpAIDXWvUNMxhmuNy0CSu1YUsVD

Any suggestion?
I download the latest version of iOS8, I noticed the script is not working. I can choose the image but after hitting start upload, the app do not upload the image.

I connected my iPhone to MAC , I noticed the following Javascript error displayed after choosing the image and before clicking  'start upload'
load-image.min.js:1:11575
[Log] FileError (load-image.min.js, line 1)
code: 4
**proto**: FileErrorPrototype
ABORT_ERR: 3
ENCODING_ERR: 5
INVALID_MODIFICATION_ERR: 9
INVALID_STATE_ERR: 7
NOT_FOUND_ERR: 1
NOT_READABLE_ERR: 4
NO_MODIFICATION_ALLOWED_ERR: 6
PATH_EXISTS_ERR: 12
QUOTA_EXCEEDED_ERR: 10
SECURITY_ERR: 2
SYNTAX_ERR: 8
TYPE_MISMATCH_ERR: 11
constructor: FileErrorConstructor
**proto**: Object

The image format is jpg and the size is 1.76
I test on iOS 7, it is working fine.

Version 9.7.1 on localhost with latest xampp, the sound preview only works before the upload but not as soon as the file is on the server. 
Video preview doesn't work anywhere either before upload or after that for me. 
On both cases instead of the preview I get  an empty  
`<td><span class="preview"></span></td>`

what should I look at? Is there any place I can see video/sound preview working? Image preview is working fine.

Hello,
When I use the Simple version of the uploader with just the Select files... and progress bar, it looks like nothing is happening when I upload a file.  I am using IE 11 in it's app mode rather than it's desktop mode.  The complete event is firing but it doesn't seem to have processed anything.

To further expand since Metro is awful for debugging, when I catch e from complete, this is what it consists of:
readyState: 0 getResponseHeader: function(e){var t;if(2===b){if(!c){c={};while(t=Tn.exec(a))c[t[1].toLowerCase()]=t[2]}t=c[e.toLowerCase()]}return null==t?null:t} getAllResponseHeaders: function(){return 2===b?a:null} setRequestHeader: function(e,t){var n=e.toLowerCase();return b||(e=v[n]=v[n]||e,y[e]=t),this} overrideMimeType: function(e){return b||(p.mimeType=e),this} statusCode: function(e){var t;if(e)if(2>b)for(t in e)m[t]=[m[t],e[t]];else C.always(e[C.status]);return this} abort: function(e){var t=e||w;return u&&u.abort(t),k(0,t),this} state: function(){return n} always: function(){return i.done(arguments).fail(arguments),this} then: function(){var e=arguments;return x.Deferred(function(n){x.each(t,function(t,o){var a=o[0],s=x.isFunction(e[t])&&e[t];i[o[1]](function%28%29{var e=s&&s.apply%28this,arguments%29;e&&x.isFunction%28e.promise%29?e.promise%28%29.done%28n.resolve%29.fail%28n.reject%29.progress%28n.notify%29:n[a+"With"]%28this===r?n.promise%28%29:this,s?[e]:arguments%29})}),e=null}).promise()} promise: function(e){return null!=e?x.extend(e,r):r} pipe: function(){var e=arguments;return x.Deferred(function(n){x.each(t,function(t,o){var a=o[0],s=x.isFunction(e[t])&&e[t];i[o[1]](function%28%29{var e=s&&s.apply%28this,arguments%29;e&&x.isFunction%28e.promise%29?e.promise%28%29.done%28n.resolve%29.fail%28n.reject%29.progress%28n.notify%29:n[a+"With"]%28this===r?n.promise%28%29:this,s?[e]:arguments%29})}),e=null}).promise()} done: function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);"function"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this} fail: function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);"function"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this} progress: function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);"function"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this} complete: function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);"function"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this} success: function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);"function"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this} error: function(){if(l){var t=l.length;(function i(t){x.each(t,function(t,n){var r=x.type(n);"function"===r?e.unique&&p.has(n)||l.push(n):n&&n.length&&"string"!==r&&i(n)})})(arguments),n?o=l.length:r&&(s=t,c(r))}return this} responseText: status: 0 statusText: error 

With the latest beta of iOS 8 the plugin is not working for me at all, even the Basic demo.

The photo picker does not register selections as you tap on photos.  If you tap & hold on a thumbnail, you get new options for "Copy" and "Hide".

![photo aug 26 6 01 48 pm](https://cloud.githubusercontent.com/assets/1399354/4052592/5a33f57e-2d6d-11e4-8e4a-ba5bbac416ce.png)

This completely basic file-input demo does continue to work on Beta 5:
http://www.w3schools.com/tags/tryit.asp?filename=tryhtml5_input_type_file

There seems to be a problem with the plugin and the Android browser (version 4.4.2).

Tested the demo with the Android browser, and it is not possible to upload images which are already on the phone, but if you take a new picture it works.

Everything is fine in Chrome.

Anyone else experiencing the same?

It seems really weird that it works with a new picture but not old ones. 
Not logical that there should be any difference.

I use firefox 32.0 and when I am trying to upload more than 15 files of approximately 5 mb each the browser is crashing. 

The same is working fine in Chrome.

In Opera, the plugin always uploads one or two files less, but does not crash (Sometimes uploads 13 files, sometimes 14 files. Its weird) 
