The README.md should be updated with a sentence or paragraph explaining just a little bit why this repository is deprecated (i.e., what is to replace it) and why abandon this repository’s approach to a projection of Objective C’s framework-API to Rust.


For some reason, https://docs.rs/cocoa redirects to a page that says "The requested resource does not exist". Not sure if this would fix that.

<!-- Reviewable:start -->
---
This change is [<img src="https://reviewable.io/review_button.svg" height="34" align="absmiddle" alt="Reviewable"/>](https://reviewable.io/reviews/servo/cocoa-rs/182)
<!-- Reviewable:end -->

I was looking at the code and only found `clearColor`. However, I'd like the ability to use custom colors (to change the title bar on OSX).

I can implement this probably if you point me in the right direction.
Hi,
I am trying to find some types and I am not sure if they are missing or if I just can't find them.
I am looking for:
- [NSURL](https://developer.apple.com/documentation/foundation/nsurl)
- [NSModalResponse](https://developer.apple.com/documentation/appkit/nsmodalresponse?language=objc)

When i press the Quote key, the `NSEvent` created returns empty string whe calling the `characters` function.

I'm using:
OS: MacOS Sierra
Keyboard: U.S. International - PC keyboard layout
Rust: from rustup -> rustc 1.19.0 (0ade33941 2017-07-17)
E.g. inheritance, method overloading and other stuff that explicitly requires ObjC features, which obviously miss in the bindings.
Does it make sense to implement a `Drop` trait for `NSAutoreleasePool`, so it is called whenever `NSAutoreleasePool` goes out of scope. It turns out that if the user does not call `NSAutoreleasePool::drain()` / `NSAutoreleasePool::release()` manually, the memory will be leaked (by the way the examples from the repository do not call `drain`, `release` as well).
The [`NSEvent::eventType` method](https://github.com/servo/cocoa-rs/blob/master/src/appkit.rs#L2422-L2424) produces the value `21` when spotlight is opened or one of the items on the system menu tray are opened (e.g. battery status, wifi). The value [has no associated variant within the `NSEventType` enum](https://github.com/servo/cocoa-rs/blob/master/src/appkit.rs#L1959-L1990) and thus segfaults when a user attempts to match against a `NSEventType` of value `21`. This was [causing a segfault in winit](https://github.com/tomaka/winit/issues/104#issuecomment-277502959). I've added [a commit](https://github.com/tomaka/winit/pull/132/commits/06c1b5903ba59ae38607f0f7c348dc903297a819) to winit that side-steps this bug, however this should be properly fixed upstream in this crate. I've been unable to find any documentation on `NSEventType`s of value `21` just yet.
I get the following error when attempting to call `initWithFrame_`:

```
error[E0034]: multiple applicable items in scope
  --> src/lib.rs:63:52
   |
63 |                 let text = NSTextField::alloc(nil).initWithFrame_(frame);
   |                                                    ^^^^^^^^^^^^^^ multiple `initWithFrame_` found
   |
   = note: candidate #1 is defined in an impl of the trait `cocoa::appkit::NSView` for the type `*mut objc::runtime::Object`
   = note: candidate #2 is defined in an impl of the trait `cocoa::appkit::NSTextField` for the type `*mut objc::runtime::Object`
```

Because NSView is implemented for `id`, are the other definitions of `initWithFrame_` redundant? If so, can they be removed?
https://developer.apple.com/reference/appkit/nsstatusbar/1530619-systemstatusbar?language=objc

```rust
extern crate cocoa;

use cocoa::appkit::NSStatusBar;
use cocoa::base::nil;

fn main() {
    unsafe {
        let _ = NSStatusBar::systemStatusBar(nil);
    }
}
```

```
> cargo run
   Compiling mac-menu-bar v0.1.0 (file:///Users/corey/dev/rust-mac-menu-bar)
    Finished debug [unoptimized + debuginfo] target(s) in 0.30 secs
     Running `target/debug/mac-menu-bar`
Assertion failed: (CGAtomicGet(&is_initialized)), function CGSConnectionByID, file Services/Connection/CGSConnection.c, line 127.
```