If there are multiple inputs, the file would be disordered.
In my case, I run 'gor -input-file a.gor -output-http http://127.0.0.1 -output-file b.gor -output-http-track-response' and it is possible to see some chunks of b.gor end without seperator.
In this [docs](https://goreplay.org/monitoring.html)ï¼š 

> Middleware has full access to both request and response. 

![shadowing](https://user-images.githubusercontent.com/24653016/72583470-6508c900-3921-11ea-84dc-f56fab6a9214.png)

But I donot know whether `response`  refers to origin response or copy response .
2020/01/08 14:10:54 SIOCGIFMEDIA on llw0 failed: Device power is off
Exiting.


my network config is 
![image](https://user-images.githubusercontent.com/3062921/71954952-d362d280-3221-11ea-9adb-c0ccb240a9db.png)

why use llw0 ?
modify "header value" to "URL param value"
Is there anyone with experience on using goreplay in Heroku ? is it possible ?
G:\ChocolateyInstall\Cmder>gor version
Version:
2019/12/30 16:46:55 Required at least 1 input and 1 output

G:\ChocolateyInstall\Cmder>go version
go version go1.13.5 windows/amd64

Steps:
1. set up gor file-server :8000
2. set up gor file-server :8001
3. gor --input-raw :8000 --output-http :8001
4. curl localhost:8000

Result: the port 8001 has not replay request, please see the picture below.
![gor](https://user-images.githubusercontent.com/24653016/71574714-eb04d180-2b24-11ea-9b71-dcdb5b31f111.gif)

The go build command in the [Compilation Wiki](https://github.com/buger/goreplay/wiki/Compilation) will throw complaints.

> #Compile from source
> cd $HOME/gocode/src/github.com/buger/gor
> go build LDFLAGS = -ldflags "-extldflags \"-static\""

```bash
$ go build LDFLAGS = -ldflags "-extldflags \"-static\""
can't load package: package LDFLAGS: malformed module path "LDFLAGS": missing dot in first path element
can't load package: package =: malformed module path "=": invalid char '='
can't load package: package -ldflags: malformed module path "-ldflags": leading dash
can't load package: package -extldflags "-static": malformed module path "-extldflags \"-static\"": leading dash
```

change the command to this will work fine:
```bash
go build -ldflags "-extldflags \"-static\""
```


My requirement is I want to capture traffic from two services and each should upload the data to different  accounts and s3 buckets. 

I have created different AWS profiles in the machine but Goreplay uses only the DEFAULT profile mentioned in the config even-though I change the default profile. Please can anyone help me to resolve this?

Below is the series of command I'm giving  to use the specific aws profile

export AWS_DEFAULT_PROFILE=service1
export AWS_SDK_LOAD_CONFIG=1
sudo ./gor --input-raw-track-response --output-file-append --input-raw :7001 --output-file s3://test-bucket/requests_%Y-%m-%d-%H-%M

I also tried to set credentials by exporting like below but still it refers DEFAULT profile  in ~/.aws/config, ~/.aws/credentials

export AWS_ACCESS_KEY=xx
export AWS_SECRET_KEY=xx
export AWS_ACCESS_KEY_ID=cc
export AWS_SECRET_ACCESS_KEY=cc
export AWS_REGION=us-east-1
export AWS_ENDPOINT_URL=s3://test-bucket

I installed gor-1.0.0-1.x86_64.rpm on Centos, Got error as follow:
```
Dependencies Resolved

==============================================================================================================================================================================================================================================
 Package                                                Arch                                                 Version                                                  Repository                                                         Size
==============================================================================================================================================================================================================================================
Installing:
 goreplay                                               x86_64                                               1.0.0-1                                                  /gor-1.0.0-1.x86_64                                                16 M

Transaction Summary
==============================================================================================================================================================================================================================================
Install       1 Package(s)

Total size: 16 M
Installed size: 16 M
Downloading Packages:
Running rpm_check_debug
Running Transaction Test


Transaction Check Error:
  package goreplay-1.0.0-1.x86_64 is intended for a darwin operating system

Error Summary
-------------
```

The binary file I got  from gor-1.0.0-1.x86_64.rpm  can run on Mac OSX

Goreply drops big package which body size is ~4k.

 I run goreply using "sudo ./gor --input-raw :8080 --output-http mjq.jd.local --http-set-param forcebot=1 --input-raw-buffer-size 500485760 -copy-buffer-size 500485760 2>&1 &"

the log has below text:

   2019/09/30 07:55:10 PANIC: pkg: runtime error: slice bounds out of range /gopath/src/github.com/buger/gor/raw_socket_listener/listener.go:199 (0x5969ee)
/goroot/src/runtime/asm_amd64.s:401 (0x454395)
/goroot/src/runtime/panic.go:387 (0x42ba78)
/goroot/src/runtime/panic.go:18 (0x42ac5e)
/gopath/src/github.com/buger/gor/raw_socket_listener/listener.go:237 (0x59425e)
/gopath/src/github.com/buger/gor/raw_socket_listener/listener.go:100 (0x592b41)
/goroot/src/runtime/asm_amd64.s:2232 (0x4564b1)

