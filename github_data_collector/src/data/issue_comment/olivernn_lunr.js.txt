But how to get all data as result? Search what char, would get me all data?

I need this for pagination:

For page 1: you search something to get all dataset as result. Now you use for loop through, only get 1 to 10 records,then break for loop.

For page 2: you perform same search again, you should get the same result set as last time, but you this time you use for loop, from 11 to 20. Because offset is 10(you skip first 10).

and so on

For page x: you perform same search again, you should get the same result set as last time, but this time you use for loop, from (x * 10+1) to ((x * 10+1) +10). Because offset is x * 10 (you skip first x * 10).
I want get first 10 record (page 1) base on whatever search result (search what can I get the whole dataset as result?)

second, I want get page 2, 10 record, offset=10, (starting from 11, next 10 record)

and so on.

So far, look like lunr only can search keywords. No pagination build in.

I have a way to work around it.


         
                 `idx.search('')  
                    
                     or 

                     idx.search(' ')

                     or 

                      idx.search('  ')
`

search empty, or space, or 2 space, you will get all dataset as result.

For page 1: idx.search('') get all dataset as result. Now you use for loop through, only get 1 to 10 records,then break for loop.

For page 2: idx.search('') search again, you should get the same result set as last time, but you this time you use for loop, from 11 to 20. Because offset is 10(you skip first 10).

and so on

For page x: you idx.search('') search again, you should get the same result set as last time, but this time you use for loop, from (x * 10+1) to ((x * 10+1) +10). Because offset is x * 10 (you skip first x * 10).

       
Hi, I see that lunr uses BM25 algorithm for scoring which is independent of the proximity of words in the document. But while searching for multiple words, is their proximity taken into account?
i.e, 
if I search for "integration test", would the ranking algorithm consider how close the two words are located in the document? If not, how can I achieve this while querying? Is it the only scoring algorithm supported by lunr?


Sorry for so vague description.

If you open https://clickhouse.yandex/docs/en/ and start typing "aaaaaaaaa" in search form, the browser will lock-up for at least a few seconds. It reproduces both in Chromium and Firefox.

I'm not a JS developer and today just figured out that we are using your technology, but I'm not sure if this issue is a drawback of your library or we just using it incorrectly.

All our frontend developers have disappeared and there is nobody to help us :)
I use oboe.js and stream-json.js  to receive already parsered json object one at a time. 

I need to create lunr index idx, add one json object at a time. (the whole document is not available yet until the json stream ended.

I need something like this: How to?

        `  var idx = lunr(function () {
                                                  this.field('title')
                                                  this.field('body')
                       // not add doc yet
                          })



              // somewhere when stream json event fired, when one json object received.
              
              stream-json.on( 'received-one-doc',  function (doc){               
                   
                               // will add one object at a time, will repeat until last object reached.
                                 idx.add(doc)

                  }
             



`


Hello,

I set up a search engine on a JSON file.
I used lunrjs.

My only problem is the search with "OR" on fields which have multi terms.

for example:    name: Jean Paul SARR   OR     Age: 18

I would like it to return **only** all lines with name = "John Paul SARR" and those with Age 18.

Thank you in advance for your help.

sorry for my bad english.
lunr.version = "2.3.6"
I have a blog which contains a few pages with the characters `:` or `^` in their title.

For example, searching for `php:` raises an exception, which forces me to return an empty search result set, while the string `php: ...` exists in a few titles and category labels.

Is there a way to let lunr consider command characters such as `:` as "normal" characters in case of error, i.e. to also return a result set with the closest approximate search?
Hi there,

I am using lunr for a private wiki and love the library. Is there a way to find similar documents, like discussed in this article?

https://stackoverflow.com/questions/7657673/how-to-find-similar-documents

Regards,
Dietmar
- useable => usable
