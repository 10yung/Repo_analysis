I send my mail both via Pony and ActionMailer. When i want to test ActionMailer i can't, because email-spec defines `deliveries` method only in Pony way.
Can you add possibility to choose mail service i work through?

```ruby
module Deliveries
  if defined?(Pony)
    def deliveries; Pony::deliveries ; end
    include EmailSpec::MailerDeliveries
  elsif ActionMailer::Base.delivery_method == :activerecord
    include EmailSpec::ARMailerDeliveries
  else
    def mailer; ActionMailer::Base; end
    include EmailSpec::MailerDeliveries
  end
end
```
This PR added and updated ruby versions on CI.

This PR supports specified name and address for `bcc_to` and `cc_to` matchers.
Hello!

I want to check that my email has some link. In my spec I want to write the following:

```rspec
expect(email).to include_link /https:\/\/example\.com\/login/
```

It would be good to have `have_link` matcher but Capybara already defines [this matcher](https://www.rubydoc.info/github/jnicklas/capybara/Capybara%2FRSpecMatchers:have_link) which matches a link on the page
at the moment we're using custom code like this:


```rb
  matches = emails.map do |mail|
    [mail.subject == subject,  
    body_match = mail.body == body,
    email_match = mail.to.include?(email)]
  end
  expect(matches).to include [true, true, true]
```

Is there a way to do this more cleanly with email_spec?   we need to check that at least one email is in the queue that has all the properties ...
Adding **email-spec** to a Rails 5.1.5 project breaks everything with this error:

```
Failure/Error: open_email(registered_user.email)

     EmailSpec::CouldNotFindEmailError:
       Could not find email   in the mailbox for user_13@example.com.
        Found the following emails:

        []
```

### RSpec code
```ruby
RSpec.describe "Sign Up", type: :feature do
  let(:user_attributes) { attributes_for(:user).slice(:first_name, :last_name, :email, :password, :password_confirmation) }
  let(:registered_user) { User.find_by(email: user_attributes[:email]) }

  it "Visitor signs up" do
    visit new_user_registration_path

    fill_in :user_first_name, with: user_attributes[:first_name]
    fill_in :user_last_name, with: user_attributes[:last_name]
    fill_in :user_email, with: user_attributes[:email]
    fill_in :user_password, with: user_attributes[:password]
    fill_in :user_password_confirmation, with: user_attributes[:password_confirmation]

    click_button "Create User"
    open_email(registered_user.email)

    expect(current_email).to have_subject("Confirmation instructions")
    ...
    ...
  end
end
```

### System configuration
**Devise**: 4.4.1
**Email_spec**: 2.1.1
**Rails**: 5.1.5
**Ruby**:  2.5.0
**Bundler**: 1.16.1
Weird problem in a Rails 5.0.1 app. I just added delayed_job_active_record, ran the migration in development, but I can't run it in test because I get 

     NameError: uninitialized constant Delayed::DelayMail

The problem goes away if I remove email-spec. So something in email-spec is causing Delayed::DelayMail module not to be loaded.

Anyone got any idea what this could be.

For now I've removed email-spec from my Gemfile. But I will be needing it back soon.

I would like to specify which part in multipart is checked by `have_body_text` matcher. In this PR, I added methods (?); `.in_html_part` and `.in_text_part` for `have_body_text` matcher. For example,

```ruby
mail = Mail.new do
   html_part do
     body 'This is html'
   end
   text_part do
     body 'This is text'
   end
end

# The current behavior
expect(mail).to have_body_text(/This is html/)
expect(mail).not_to have_body_text(/This is text/)

# Using new methods created in this PR
expect(mail).to have_body_text(/This is html/).in_html_part
expect(mail).to have_body_text(/This is text/).in_text_part
expect(mail).not_to have_body_text(/This is html).in_text_part # Only look for text part
```
using Rails 4.2.6 with both RSpec and Test::Unit.
- `bundle exec rspec` => success
- `bundle exec rake test` => uninitialized constant RSpec::Expectations

https://github.com/email-spec/email-spec/blob/master/lib/email_spec/helpers.rb#L46-L56
I installed email_spec per the instructions, but when I run rspec it fails with the following message:

```
/usr/local/bundle/gems/actionmailer-5.0.0.1/lib/action_mailer/rescuable.rb:6:in `<module:Rescuable>': uninitialized constant ActiveSupport::Rescuable (NameError)
    from /usr/local/bundle/gems/actionmailer-5.0.0.1/lib/action_mailer/rescuable.rb:4:in `<module:ActionMailer>'
    from /usr/local/bundle/gems/actionmailer-5.0.0.1/lib/action_mailer/rescuable.rb:1:in `<top (required)>'
    from /usr/local/bundle/gems/actionmailer-5.0.0.1/lib/action_mailer/base.rb:8:in `require'
    from /usr/local/bundle/gems/actionmailer-5.0.0.1/lib/action_mailer/base.rb:8:in `<top (required)>'
    from /usr/local/bundle/gems/email_spec-2.1.0/lib/email_spec/deliveries.rb:76:in `require'
    from /usr/local/bundle/gems/email_spec-2.1.0/lib/email_spec/deliveries.rb:76:in `<module:Deliveries>'
    from /usr/local/bundle/gems/email_spec-2.1.0/lib/email_spec/deliveries.rb:72:in `<module:EmailSpec>'
    from /usr/local/bundle/gems/email_spec-2.1.0/lib/email_spec/deliveries.rb:1:in `<top (required)>'
    from /usr/local/bundle/gems/email_spec-2.1.0/lib/email_spec.rb:10:in `require'
    from /usr/local/bundle/gems/email_spec-2.1.0/lib/email_spec.rb:10:in `<top (required)>'
    from /app/spec/spec_helper.rb:4:in `require'
    from /app/spec/spec_helper.rb:4:in `<top (required)>'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/configuration.rb:1394:in `require'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/configuration.rb:1394:in `block in requires='
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/configuration.rb:1394:in `each'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/configuration.rb:1394:in `requires='
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/configuration_options.rb:112:in `block in process_options_into'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/configuration_options.rb:111:in `each'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/configuration_options.rb:111:in `process_options_into'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/configuration_options.rb:21:in `configure'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/runner.rb:99:in `setup'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/runner.rb:86:in `run'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/runner.rb:71:in `run'
    from /usr/local/bundle/gems/rspec-core-3.5.2/lib/rspec/core/runner.rb:45:in `invoke'
    from /usr/local/bundle/gems/rspec-core-3.5.2/exe/rspec:4:in `<top (required)>'
    from /usr/local/bundle/bin/rspec:17:in `load'
    from /usr/local/bundle/bin/rspec:17:in `<main>'
```

This is from my `spec_helper.rb`:

```
require 'action_mailer'
require 'email_spec'
require 'email_spec/rspec'
```

When I comment out the email_spec lines, Rspec runs again.

Strange thing though: when I run Rspec under Spring with `bin/rspec`, I don't see this issue. Any ideas why?
