I hope it is okay that i post this question here. I've been looking for a solution for some time now, posted this question on servereal other sites and thus far i have come of short. 

I'm having some trouble getting the todaybutton in the shinywidget airdatepickerinput to work.

Is there a way to set value of the airdatepicker to Sys.time() when the todaybutton is clicked regardless of the current value?

Below you will find a simple example.

ui <- fluidPage(
  airDatepickerInput(
    inputId = "DateRange",
    value = Sys.time(),
    todayButton = T
  ),
  verbatimTextOutput("res_date")
)

server <- function(input, output, session) {
  output$res_date <- renderPrint(input$DateRange)
}

shinyApp(ui, server)
When using Shiny themes with Bootstrap 4 like {bs4Dash}, Glyphicons do not exist anymore. Hence, the `glyphicon-ok` in a `pickerInput(multiple = TRUE)` will not show.  
In case someone faces this problem, it is possible to use 
```r
options = list(`icon-base` = "fa", `tick-icon` = "fa-check")
```
  
I thought that may interest you.

Here is a reprex: 
```r
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(bs4Dash)
# library(shinyWidgets)

# Define UI for application that draws a histogram
ui <- function()  {
    tagList(
        # golem_add_external_resources(),

        bs4DashPage(

            # Application title
            title = "Old Faithful Geyser Data",
            sidebar_collapsed = TRUE,

                        # Sidebar with a slider input for number of bins
            sidebar = bs4DashSidebar(
                sliderInput("bins",
                            "Number of bins:",
                            min = 1,
                            max = 50,
                            value = 30)
            ),
            navbar = bs4DashNavbar(),
            # Show a plot of the generated distribution
            body = bs4DashBody(
                shinyWidgets::pickerInput(
                    inputId = "Id083",
                    label = "Multiple",
                    choices = attr(UScitiesD, "Labels"),
                    multiple = TRUE,
                    options = list(`icon-base` = "fa", `tick-icon` = "fa-check")
                ),
                plotOutput("distPlot")
            )
        )
    )
}

# Define server logic required to draw a histogram
server <- function(input, output) {

    output$distPlot <- renderPlot({
        # generate bins based on input$bins from ui.R
        x    <- faithful[, 2]
        bins <- seq(min(x), max(x), length.out = input$bins + 1)

        # draw the histogram with the specified number of bins
        hist(x, breaks = bins, col = 'darkgray', border = 'white')
    })
}


# Run the application
shinyApp(ui = ui(), server = server)
```
Hi.

I'm using `shinywidget` package and specifically `selectizeGroup-module`.
In the classic `selectizeInput ` function in Shiny we can specify a default value being display when the user open the app.

I'm wondering if something similar is going to be developed for `selectizeGroup`. 
I already posted a question on stackoverflow 

https://stackoverflow.com/questions/58628726/default-initial-value-for-input-with-selectizegroup?noredirect=1#comment103565012_58628726
Hello Victor,

I would like to use pickerGroup widget in my shiny app but I cannot do a multiple selection within one or several filters.
It is useful to cumulate different elements in an analysis.

I tried something like that :

```
shinyWidgets::selectizeGroupUI(
  "filters",
  params = list(
    year = list(inputId = "year", label = "Year", multiple = TRUE)
  )
)
```

For now I switched to selectizeGroup, would it be possible to implement this feature ?
Hi,

I 'm developping a Shiny App with the `shinyWidgets` package for doing my `selectInput`.
I have many modalities for the inputs variable which cause some bugs.
I want to optimise this by reducing the size of the `picker` (size argument) and if possible show only 10 first options of variables and activate the liveSearch option. But not seems to work ...

```
      pickerInput(
        inputId = "syn_id_part", 
        label = "Id part", 
        choices = unique(mon$id_part),
        multiple = T,
        selected = "129137",
        options = pickerOptions(
          actionsBox = TRUE,
          liveSearch = TRUE,
          virtualScroll = 10,
          size = 10
        )
      )
```
Thanks for the great package!

I'm using `sliderTextInput`, which works well for my purposes, except that when there are a lot of labels, they either get way too small, or if the text size is increased they start to overlap and become unreadable. With `sliderInput`, some of the values would have their labels removed automatically, but this doesn't/can't happen with `sliderTextInput` because they conceptually don't have a numeric value so the unlabelled data would not be obvious. (Perhaps a different answer would be to have a way to hover over the input to see the labels at different ticks?)

Therefore, it would be useful to be able to change the orientation of the labels, so they are 45 or 90 degrees rotated and therefore not overlapping. 

I've got a SO question about this that includes reprex [here](https://stackoverflow.com/questions/57511430/avoid-overlapping-text-in-slidertextinput). 

Thanks!
I'm interested in having a selectizeinput that allows copy+paste in both directions (into the selectize field and out of it). I thought this project might be a good place for this. 

See these questions for context:
[Copy and paste text in selectizeInput in a Shiny application](https://stackoverflow.com/questions/54744568/copy-and-paste-text-in-selectizeinput-in-a-shiny-application)
[Pasting multiple items into selectizeInput](https://github.com/rstudio/shiny/issues/1663)

The current solution doesn't seem to interact well with shiny::updateSelectizeInput

Thank you for all the widgets!
Is it possible to have a drag-select multiple options in picker input? So I don't have to click every single option. I know there is "Select All" button, but I don't want to select all, only a continuous subset of options. Or maybe shift-select-like feature to emulate selecting files in file explorers.
Thanks
Hello,

 For some reason, I need to set the CSS property `overflow: hidden` to an element which contains a `dropdown`. I really need this CSS property, I cannot remove it. But then the dropdown panel is clipped by the container. Do you have an idea how to solve that ? Maybe I could solve this issue if it were possible to know whether the dropdown is open (by doing something similar to [this](https://stackoverflow.com/questions/31829312/bootstrap-dropdown-clipped-by-overflowhidden-container-how-to-change-the-conta), for the Bootstrap dropdown). Is it possible to know whether the dropdown is open ?
Thanks for the great package! I'm using a `selectizeInput` inside a `dropdown`. I'd like the dropdown to close only when clicking the button. However, when selecting an item from the `selectizeInput`, the dropdown closes. Weirdly enough, this happens only in the browser (not in RStudio viewer), and only when selecting one of the last two items (`Petal.Width` or `Species`).

Minimal reproducible example below (hope you can reproduce):

````r
library("shiny")
library("shinyWidgets")
library("shinyjs")

ui <- fluidPage(
  useShinyjs(),
  tags$h2("pickerInput in dropdown"),
  br(),
  dropdown(
    
    inputId = "mydropdown",
    
    tags$h3("List of Input"),
    
    selectizeInput(inputId = 'xcol2',
                label = 'X Variable',
                choices = names(iris),
                options = list(`style` = "btn-info")),
    
    actionButton(inputId = "close", label = "Close dropdown"),
    
    style = "unite", icon = icon("gear"),
    status = "danger", width = "300px",
    animate = animateOptions(
      enter = animations$fading_entrances$fadeInLeftBig,
      exit = animations$fading_exits$fadeOutRightBig
    )
  ),
  plotOutput(outputId = 'plot2')
)

server <- function(input, output, session) {
  # close dropdown when button inside is clicked
  observeEvent(input$close, shinyjs::click("mydropdown"))
  
}
shinyApp(ui = ui, server = server)

````