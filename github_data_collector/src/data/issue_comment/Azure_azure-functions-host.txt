An existing function that has been running for months was redeployed and it started failing on DI issues. The function was pinned to an older version (2.0.12342) of the runtime that is no longer supported so after the deploy I noticed it was changed it to ~2 (2.0.12888.0). The reason I had it pinned was to address DI issues with version 2.0.12353. I never went back and unpinned it.

I updated my local environment to use the same version of the functions host (2.0.12888.0) that the portal specified and I am getting the same exceptions. I tried to put a break point in startup.cs and it never gets hit.

I have a different project that I can run locally and the startup.cs break point is hit as expected.

- Timestamp: 1/16/2020, 7:44:29 PM (Local time)
- Function App version (1.0 or 2.0):2.0
- Function App name:
- Function name(s) (as appropriate):
- Invocation ID: 79a6c413-09a6-4708-8635-332f8fa52feb
- Region: East US

#### Repro steps

Provide the steps required to reproduce the problem:
- Register Dependency in Startup
- Specify dependency for a Queue Triggered Function in its ctor
- Execute the function by adding message to queue

#### Expected behavior
- Dependency is injected and function method runs

#### Actual behavior
Exception thrown:
Executed '<function name>'
**Microsoft.Extensions.DependencyInjection.Abstractions: Unable to resolve service for type '<dependency interface name>' while attempting to activate '<function class name>'.**

All other functions in the same project fail as well - they happen to specify different dependencies in their ctors

#### Known workarounds

none

#### Related information 

Provide any related information 

* Programming language used  C#
* Links to source
* Bindings used

I tested that it works fine with Windows Elastic Premium plans. The issue seems isolated to Linux App Service. The problem occurs because the host doesn't restart on file updates. A manual restart then fixes the issue.

There was a similar recent bug https://github.com/Azure/azure-functions-host/issues/5283, which affected Windows Elastic Premium function apps as well. That bug was fixed.

This one seems different, and looking at the logs, I suspect that the file watcher is not picking up the changes. I do not see filewatcher logs indicating that a change was detected.
I believe Kusto logging has length constraints such that if you try to log too large a string, the log won't show. For example, in some investigations, I see the log message written [here](https://github.com/Azure/azure-functions-host/blob/7c6ae82f215282c3d936cf9bb21b897d971933a0/src/WebJobs.Script.WebHost/Management/FunctionsSyncManager.cs#L566) isn't written, while the following "SyncTriggers call succeeded." log is.

We should break the log up to ensure the important details are logged - perhaps log the request URI and details on one line, and the payload on another, truncating as necessary. We can have a helper method to do the log truncation to proper length, so we can reuse elsewhere.
Currently on secret update paths, we don't clear cache eagerly. Instead we let the repository change notification mechanism fire the event (based on shared file system sentinel files). This can cause race conditions:

- if a key is added, and immediately a request comes in to list keys before the change notification had a chance to be processed, the new key won't be returned
- also, KeysController after doing an update immediately fires a SyncTriggers operation. This operation queries SecretManager for keys, and will also get stale results until cache is cleared

These are temporary issues, and clear themselves up after a bit. However, it can cause portal confusion, when a customer adds a key and doesn't see it reflected immediately.
"Encription keys hashes:" -> "Encryption keys hashes"
#### What problem would the feature you're requesting solve? Please describe.
When the Functions host is not able to connect to storage please surface more details for errors directly to help with investigations: e.g. is the storage account not in the same VNET or is there a temporary error?

<!-- 
Please provide a succinct description of the issue. Please make an effort to fill in the all the sections below or we may close your issue for being low quality. 
-->

Using the default http template for typescript, the host crashes with a vague error message:

<details>

<summary> Error message (click for full log)

```
[1/16/2020 5:50:00 PM] A host error has occurred during startup operation '40ef036c-d0b4-43c1-ba70-1303042d7d6f'.
[1/16/2020 5:50:00 PM] Microsoft.Azure.WebJobs.Script: Object reference not set to an instance of an object.
[1/16/2020 5:50:00 PM] Stopping JobHost
Value cannot be null.
Parameter name: provider
```

</summary>

```
C:\w\scratch\func-bot> func host start

                  %%%%%%
                 %%%%%%
            @   %%%%%%    @
          @@   %%%%%%      @@
       @@@    %%%%%%%%%%%    @@@
     @@      %%%%%%%%%%        @@
       @@         %%%%       @@
         @@      %%%       @@
           @@    %%      @@
                %%
                %

Azure Functions Core Tools (2.7.1948 Commit hash: 29a0626ded3ae99c4111f66763f27bb9fb564103)
Function Runtime Version: 2.0.12888.0
[1/16/2020 5:49:59 PM] Building host: startup suppressed: 'False', configuration suppressed: 'False', startup operation id: '40ef036c-d0b4-43c1-ba70-1303042d7d6f'
[1/16/2020 5:49:59 PM] Reading host configuration file 'C:\w\scratch\func-bot\host.json'
[1/16/2020 5:49:59 PM] Host configuration file read:
[1/16/2020 5:49:59 PM] {
[1/16/2020 5:49:59 PM]   "version": "2.0"
[1/16/2020 5:49:59 PM] }
[1/16/2020 5:49:59 PM] Reading functions metadata
[1/16/2020 5:49:59 PM] 1 functions found
[1/16/2020 5:49:59 PM] Initializing Host. OperationId: '40ef036c-d0b4-43c1-ba70-1303042d7d6f'.
[1/16/2020 5:49:59 PM] Host initialization: ConsecutiveErrors=0, StartupCount=1, OperationId=40ef036c-d0b4-43c1-ba70-1303042d7d6f
[1/16/2020 5:49:59 PM] LoggerFilterOptions
[1/16/2020 5:49:59 PM] {
[1/16/2020 5:49:59 PM]   "MinLevel": "None",
[1/16/2020 5:49:59 PM]   "Rules": [
[1/16/2020 5:49:59 PM]     {
[1/16/2020 5:49:59 PM]       "ProviderName": null,
[1/16/2020 5:49:59 PM]       "CategoryName": null,
[1/16/2020 5:49:59 PM]       "LogLevel": null,
[1/16/2020 5:49:59 PM]       "Filter": "<AddFilter>b__0"
[1/16/2020 5:49:59 PM]     },
[1/16/2020 5:49:59 PM]     {
[1/16/2020 5:49:59 PM]       "ProviderName": "Microsoft.Azure.WebJobs.Script.WebHost.Diagnostics.SystemLoggerProvider",
[1/16/2020 5:49:59 PM]       "CategoryName": null,
[1/16/2020 5:49:59 PM]       "LogLevel": "None",
[1/16/2020 5:49:59 PM]       "Filter": null
[1/16/2020 5:49:59 PM]     },
[1/16/2020 5:49:59 PM]     {
[1/16/2020 5:49:59 PM]       "ProviderName": "Microsoft.Azure.WebJobs.Script.WebHost.Diagnostics.SystemLoggerProvider",
[1/16/2020 5:49:59 PM]       "CategoryName": null,
[1/16/2020 5:49:59 PM]       "LogLevel": null,
[1/16/2020 5:49:59 PM]       "Filter": "<AddFilter>b__0"
[1/16/2020 5:49:59 PM]     }
[1/16/2020 5:49:59 PM]   ]
[1/16/2020 5:49:59 PM] }
[1/16/2020 5:49:59 PM] FunctionResultAggregatorOptions
[1/16/2020 5:50:00 PM] {
[1/16/2020 5:50:00 PM]   "BatchSize": 1000,
[1/16/2020 5:50:00 PM]   "FlushTimeout": "00:00:30",
[1/16/2020 5:50:00 PM]   "IsEnabled": true
[1/16/2020 5:50:00 PM] }
[1/16/2020 5:50:00 PM] SingletonOptions
[1/16/2020 5:50:00 PM] {
[1/16/2020 5:50:00 PM]   "LockPeriod": "00:00:15",
[1/16/2020 5:50:00 PM]   "ListenerLockPeriod": "00:00:15",
[1/16/2020 5:50:00 PM]   "LockAcquisitionTimeout": "10675199.02:48:05.4775807",
[1/16/2020 5:50:00 PM]   "LockAcquisitionPollingInterval": "00:00:05",
[1/16/2020 5:50:00 PM]   "ListenerLockRecoveryPollingInterval": "00:01:00"
[1/16/2020 5:50:00 PM] }
[1/16/2020 5:50:00 PM] HttpOptions
[1/16/2020 5:50:00 PM] {
[1/16/2020 5:50:00 PM]   "DynamicThrottlesEnabled": false,
[1/16/2020 5:50:00 PM]   "MaxConcurrentRequests": -1,
[1/16/2020 5:50:00 PM]   "MaxOutstandingRequests": -1,
[1/16/2020 5:50:00 PM]   "RoutePrefix": "api"
[1/16/2020 5:50:00 PM] }
[1/16/2020 5:50:00 PM] Starting JobHost
[1/16/2020 5:50:00 PM] Starting Host (HostId=desktop7fquqd9-354720403, InstanceId=29d1c8b7-aaf1-463a-a070-f646c71ba755, Version=2.0.12888.0, ProcessId=18808, AppDomainId=1, InDebugMode=False, InDiagnosticMode=False, FunctionsExtensionVersion=(null))
[1/16/2020 5:50:00 PM] Loading functions metadata
[1/16/2020 5:50:00 PM] 1 functions loaded
[1/16/2020 5:50:00 PM] A host error has occurred during startup operation '40ef036c-d0b4-43c1-ba70-1303042d7d6f'.
[1/16/2020 5:50:00 PM] Microsoft.Azure.WebJobs.Script: Object reference not set to an instance of an object.
[1/16/2020 5:50:00 PM] Stopping JobHost
Value cannot be null.
Parameter name: provider
Application is shutting down...
[1/16/2020 5:50:00 PM] Initialization cancellation requested by runtime.
Hosting environment: Production
Content root path: C:\w\scratch\func-bot
Now listening on: http://0.0.0.0:7071
Application started. Press Ctrl+C to shut down.
[1/16/2020 5:50:00 PM] Stopping host...
[1/16/2020 5:50:00 PM] Host shutdown completed.
```

</details>

#### Investigative information

Please provide the following:

Local issue, does not apply
<strike>
- Timestamp:
- Function App version (1.0 or 2.0):
- Function App name:
- Function name(s) (as appropriate):
- Invocation ID:
- Region:
</strike>
<!-- 
If you don't want to share your Function App name or Functions names on GitHub, please be sure to provide your Invocation ID, Timestamp, and Region - we can use this to look up your Function App/Function. Provide an invocation id per Function. See the [wiki](https://github.com/Azure/azure-webjobs-sdk-script/wiki/Sharing-Your-Function-App-name-privately) for more details. 
-->

#### Repro steps

Provide the steps required to reproduce the problem:

1. unzip [func-bot.zip](https://github.com/Azure/azure-functions-host/files/4072890/func-bot.zip)
2. run `func host start`
3. crash

#### Expected behavior

Provide a description of the expected behavior.

1. I'd expect the default template to "just work" :)
2. I'd expect a nice error message if something is wrong such that I could do something

#### Actual behavior

Provide a description of the actual behavior observed.

1. Ambiguous error message

#### Known workarounds

Provide a description of any known workarounds.

1. Use JS instead

#### Related information 

Provide any related information 

* Programming language used - TypeScript
* Links to source - [func-bot.zip](https://github.com/Azure/azure-functions-host/files/4072890/func-bot.zip)
* Bindings used- HTTP Trigger/Response
<!-- Uncomment this if you want to include your source (wrap it in details to make browsing easier)
<details>
<summary>Source</summary>

```csharp
public static async Task<HttpResponseMessage> Run([HttpTrigger(AuthorizationLevel.AuthLevelValue, "get", "post", Route = null)]HttpRequestMessage req, TraceWriter log)
{
    log.Info("C# HTTP trigger function processed a request.");

    // parse query parameter
    string name = req.GetQueryNameValuePairs()
        .FirstOrDefault(q => string.Compare(q.Key, "name", true) == 0)
        .Value;

    // Get request body
    dynamic data = await req.Content.ReadAsAsync<object>();

    // Set name to query string or body data
    name = name ?? data?.name;

    return name == null
        ? req.CreateResponse(HttpStatusCode.BadRequest, "Please pass a name on the query string or in the request body")
        : req.CreateResponse(HttpStatusCode.OK, "Hello " + name);
}
```
</details>
-->

#### Is your question related to a specific version? If so, please specify:
azure function version 2
#### What language does your question apply to? (e.g. C#, JavaScript, Java, All) 
node.js 

#### Question
Hi, 

My scenario is I have an event hub which triggers an azure function. The azure function in this case is a simple rule engine based on which an IoT hub is triggered. 
Currently, the problem that I am facing is, I am initiating 1000+ request to the event hub per 30 seconds. After processing around 400-600 messages, the azure function stops or freezes. After restarting it, it again processes another 400-600 messages and then again freezes. 

I am executing in batches using this block 
`eventHubMessages.forEach((message, index)`

Its hosted on a premium plan. 


#### Is your question related to a specific version? If so, please specify:
V3

#### What language does your question apply to? (e.g. C#, JavaScript, Java, All) 
Java 

#### Question
I am unable to switch my Function Runtime Version to 3.X from version 2. I followed all recommendations in [https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions#migrating-from-2x-to-3x  
](https://docs.microsoft.com/en-us/azure/azure-functions/functions-versions#migrating-from-2x-to-3x) to update my function

![image](https://user-images.githubusercontent.com/53497473/72481734-4df69980-37b0-11ea-8918-39d03d6206d2.png)

Here's my setting in pom.xml
`            <plugin>
                <groupId>com.microsoft.azure</groupId>
                <artifactId>azure-functions-maven-plugin</artifactId>
                <configuration>
                    <resourceGroup>${functionResourceGroup}</resourceGroup>
                    <appName>${functionAppName}</appName>
                    <region>${functionAppRegion}</region>
                    <appSettings>
                        <!-- Run Azure Function from package file by default -->
                        <property>
                            <name>WEBSITE_RUN_FROM_PACKAGE</name>
                            <value>1</value>
                        </property>
                        <property>
                            <name>FUNCTIONS_EXTENSION_VERSION</name>
                            <value>~3</value>
                        </property>
                    </appSettings>
                </configuration>
                <executions>
                    <execution>
                        <id>package-functions</id>
                        <goals>
                            <goal>package</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
`

(As a side note I can get this to work in .NET Core, but my project must be in Java)