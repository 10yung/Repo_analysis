Seems that a chromedriver update has broken the CI :( https://sinedied.visualstudio.com/oss-pipelines/_build/results?buildId=156

Probably just a matter of updating project dependency, but might be useful to check the root cause.
<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
- [ ] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->

## Current behavior
<!-- Describe how the issue manifests. -->
I am trying to catch the 401 errors in the `ErrorHandlerInterceptor` and based on that trying to make a call to get a new refresh token.

But doing so is resulting in circular dependency, if I use the existing `HttpService` / `AuthenticationService` / `ErrorHandlerInterceptor` itself.

**My Error Handler**
<pre><code>
import { Injectable, OnDestroy } from '@angular/core';
import { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest, HttpErrorResponse } from '@angular/common/http';
import { Observable } from 'rxjs';
import { catchError, concatMap, map, tap } from 'rxjs/operators';

import { environment } from '@env/environment';
import { Logger } from '../logger.service';
import { Router } from '@angular/router';
import { Token, UserToken } from '@app/shared/models';
import { CredentialsService } from '../authentication/credentials.service';
import { Constants } from '@app/shared/constants/constants';
import { untilDestroyed } from '../until-destroyed';
import { HttpService } from './http.service';

const log = new Logger('ErrorHandlerInterceptor');

/**
 * Adds a default error handler to all requests.
 */
@Injectable({
  providedIn: 'root'
})
export class ErrorHandlerInterceptor implements HttpInterceptor, OnDestroy {

  constructor ( public credentialSer: CredentialsService, private router: Router, private http: HttpService ) { }


  intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {
    return next.handle(request).pipe(catchError(error => this.errorHandler(error)));
  }

  // Customize the default error handler here if needed
  private errorHandler(response: HttpEvent<any>): Observable<HttpEvent<any>> {
    
    if (!environment.production) {
      // Do something with the error
      log.error('Request error', response);
    }

    if ( response instanceof HttpErrorResponse ) {
      if ( response.status === 401 ) {
          this.refreshToken()
          .subscribe( resp => {
             if ( !resp ) {
               this.credentialSer.removeCredentials();
               this.router.navigate(['/auth/login']);
            } else {
                //implement retry of failed requests
                  //this.retryFailedRequests();
                 this.credentialSer.removeCredentials();
                 this.router.navigate(['/auth/login']);
             }
          } );
      }
  }

  if (!environment.production) {
      // Do something with the error
      log.error('Request error', response);
    }
    throw response;
  }

  
private refreshToken(): Observable<Token> {
  return this.credentialSer.credentials
  .pipe(
    concatMap(userDetails => 
      this.http.post(Constants.refreshToken, userDetails)
    ),
    map((response: UserToken) => response.token),
    tap(token => this.credentialSer.updateTokenCredentials(token)),
    untilDestroyed(this)
  );
}

ngOnDestroy() : void {

}

}


</code>
</pre>

Now firstly I put this in the **AuthenticationService**. But it was giving me Circular Dependency error. Then I put it in the **ErrorHandler** itself.... It again gave me Circular Dependency error. The I omitted using the out of the box HttpService. And injected Angular's HttpClient. Then I get the following error:

<pre>
ERROR TypeError: Cannot read property 'intercept' of undefined
    at HttpInterceptorHandler.handle (http.service.ts:42)
    at ApiPrefixInterceptor.intercept (api-prefix.interceptor.ts:26)
    at HttpInterceptorHandler.handle (http.service.ts:42)
    at MergeMapSubscriber.project (http.js:1648)
    at MergeMapSubscriber._tryNext (mergeMap.js:46)
    at MergeMapSubscriber._next (mergeMap.js:36)
    at MergeMapSubscriber.next (Subscriber.js:49)
    at Observable._subscribe (subscribeToArray.js:3)
    at Observable._trySubscribe (Observable.js:42)
    at Observable.subscribe (Observable.js:28)
</pre>

## Expected behavior
<!-- Describe what the desired behavior would be. -->
I should be able to make a call to get a new token.

## Minimal reproduction of the problem with instructions
<!-- For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem -->


## Environment

<pre><code>
<!-- Run `ngx --debug-infos` and paste output below -->
Angular 8
Latest starter kit
</code></pre>

Others:
<!-- Anything else relevant?  Operating system version, IDE, package manager, HTTP server, ... -->
Please guide how do I implement a refresh token functionality without this circular dependency.
Hello, author! When I use the project generated by NGX rocket (latest version), I add a Chinese supported Josn file, and then add translateservice.settranslation ('zh-CN ', Zh') to the constructor in the i18n.service.ts file class. How does the method not work? Where didn't I notice? Thank you!
<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
- [ ] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
- [ ] Feature request
- [x] Documentation issue or request

## Current behavior
<!-- Describe how the issue manifests. -->
Hello,

I've tried to implement router animations. But it doesn't work.
Is there any example how to implement it ?
It seems because off the shell and the double router outlet, nothing happens.
Thanks.

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
- [ x] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
- [ ] Feature request
- [ ] Documentation issue or request

## Current behavior
I am getting the following error right out the box. As soon as the app tries to connect to the chuck norris api, I see the following error in the terminal 
`[HPM] Error occurred while trying to proxy request /jokes/random?category=dev from localhost:4200 to https://api.chucknorris.io (ECONNREFUSED) (https://nodejs.org/api/errors.html#errors_common_system_errors)`


## Expected behavior
Should not see above error, connecting to the api from localhost should work


## Minimal reproduction of the problem with instructions
Just clone the base app(https://github.com/ngx-rocket/starter-kit.git), build and run




<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
- [x] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
- [ ] Feature request
- [ ] Documentation issue or request

## Current behavior
<!-- Describe how the issue manifests. -->
Indentation is wrong for `scripts` in package.json file.
https://github.com/ngx-rocket/starter-kit/blob/0e6655ad25ad0d6c12623722fc11cf504370e3aa/package.json#L5

## Expected behavior
<!-- Describe what the desired behavior would be. -->
Left: current, right: expected
![image](https://user-images.githubusercontent.com/18033169/67552697-df9fbf00-f70b-11e9-95eb-6686645d184c.png)


## Minimal reproduction of the problem with instructions
<!-- For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem -->
See attached screenshot

## Environment
https://github.com/ngx-rocket/starter-kit

Others:
<!-- Anything else relevant?  Operating system version, IDE, package manager, HTTP server, ... -->
I'm creating this issue here due to https://github.com/ngx-rocket/starter-kit/issues/7

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
- [X] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
- [ ] Feature request
- [ ] Documentation issue or request

## Current behavior
<!-- Describe how the issue manifests. -->
I am using `ngx new` for generate new project. 
Next prepare step is release build for android.

> ionic cordova platform add android

When this step run normal. Next

> ionic cordova prepare android

Omg, show error like this:
```
> ng.cmd run app:ionic-cordova-build --platform=android
An unhandled exception occurred: Project 'app' could not be found in workspace.
See "C:\Users\hai\AppData\Local\Temp\ng-7OZiEA\angular-errors.log" for further details.
[ERROR] An error occurred while running subprocess ng.
```
The problem is when i am trying build ionic cordova for release. When i am rename the project > 'app', and rename back to original > 'prototype' still get the error.

## Expected behavior
<!-- Describe what the desired behavior would be. -->
But if i am generate project from `ionic start` no problem at all.


## Minimal reproduction of the problem with instructions
<!-- For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem -->
Angular.json file

```
{
  "$schema": "./node_modules/@angular-devkit/core/src/experimental/workspace/workspace-schema.json",
  "version": 1,
  "newProjectRoot": "projects",
  "projects": {
    "prototype": {
      "root": "",
      "sourceRoot": "src",
      "projectType": "application",
      "prefix": "prototype",
      "schematics": {
        "@schematics/angular:component": {
          "styleext": "scss"
        }
      },
      "architect": {
        "build": {
          "builder": "@angular-devkit/build-angular:browser",
          "options": {
            "outputPath": "dist",
            "index": "src/index.html",
            "main": "src/main.ts",
            "tsConfig": "tsconfig.app.json",
            "polyfills": "src/polyfills.ts",
            "assets": [
              "src/favicon.ico",
              "src/apple-touch-icon.png",
              "src/robots.txt",
              "src/manifest.json",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              },
              "src/assets"
            ],
            "styles": [
              "src/main.scss"
            ],
            "scripts": []
          },
          "configurations": {
            "production": {
              "optimization": true,
              "outputHashing": "all",
              "sourceMap": false,
              "extractCss": true,
              "namedChunks": false,
              "aot": true,
              "extractLicenses": true,
              "vendorChunk": false,
              "buildOptimizer": true,
              "budgets": [
                {
                  "type": "initial",
                  "maximumWarning": "2mb",
                  "maximumError": "5mb"
                }
              ],
              "serviceWorker": true,
              "fileReplacements": [
                {
                  "replace": "src/environments/environment.ts",
                  "with": "src/environments/environment.prod.ts"
                }
              ]
            },
            "ci": {
              "progress": false
            }
          }
        },
        "serve": {
          "builder": "@angular-devkit/build-angular:dev-server",
          "options": {
            "hmr": true,
            "hmrWarning": false,
            "browserTarget": "prototype:build"
          },
          "configurations": {
            "production": {
              "hmr": false,
              "browserTarget": "prototype:build:production"
            },
            "ci": {
              "progress": false
            }
          }
        },
        "extract-i18n": {
          "builder": "@angular-devkit/build-angular:extract-i18n",
          "options": {
            "browserTarget": "prototype:build"
          }
        },
        "test": {
          "builder": "@angular-devkit/build-angular:karma",
          "options": {
            "main": "src/test.ts",
            "karmaConfig": "karma.conf.js",
            "polyfills": "src/polyfills.ts",
            "tsConfig": "tsconfig.spec.json",
            "scripts": [],
            "styles": [
              "src/main.scss"
            ],
            "assets": [
              "src/favicon.ico",
              "src/apple-touch-icon.png",
              "src/robots.txt",
              "src/manifest.json",
              {
                "glob": "**/*.svg",
                "input": "node_modules/ionicons/dist/ionicons/svg",
                "output": "./svg"
              },
              "src/assets"
            ]
          },
          "configurations": {
            "ci": {
              "progress": false,
              "watch": false
            }
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "tsconfig.app.json",
              "tsconfig.spec.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    },
    "prototype-e2e": {
      "root": "e2e",
      "projectType": "application",
      "architect": {
        "e2e": {
          "builder": "@angular-devkit/build-angular:protractor",
          "options": {
            "protractorConfig": "e2e/protractor.conf.js",
            "devServerTarget": "prototype:serve"
          }
        },
        "lint": {
          "builder": "@angular-devkit/build-angular:tslint",
          "options": {
            "tsConfig": [
              "e2e/tsconfig.e2e.json"
            ],
            "exclude": [
              "**/node_modules/**"
            ]
          }
        }
      }
    }
  },
  "defaultProject": "prototype"
}

```

## I'm submitting a...
<!-- Check one of the following options with "x" -->
- [ ] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
- [x] Feature request
- [ ] Documentation issue or request

## Current behavior
<!-- Describe how the issue manifests. -->
There is no coverage of this problem

## Expected behavior
<!-- Describe what the desired behavior would be. -->
I would like a choice for supporting older browsers like IE 9/11 in the wizard, with automatic polyfill inclusion, updated browserlist file state and Angular 8 conditional bundle setup and generation

<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
- [x] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
- [ ] Feature request
- [ ] Documentation issue or request

## Current behavior
<!-- Describe how the issue manifests. -->
Navbar is invisible on iOS device(s) when using Angular Material. Buttons are invisible, but are still clickable and function normally. Using Bootstrap with `fixed-top` navbar is working as expected.  

The issue seems to stem from the `mat-sidenav` setup and these styles inside of the header-/shell-component

```
.navbar {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  z-index: 1;
}
```
```
.mat-sidenav,
.mat-drawer-content,
// Force style down to child components
// See https://angular.io/guide/component-styles#deep
:host ::ng-deep .mat-drawer-backdrop {
  top: 64px;
  bottom: 0;
  left: 0;
  right: 0;
  height: auto;
  position: absolute;
}

@media ($mat-xsmall) {
  .mat-sidenav,
  .mat-drawer-content,
  :host ::ng-deep .mat-drawer-backdrop {
    top: 56px;
  }
}
```
You can find many issues surrounding iOS and `fixed` elements. I've tried solutions to [similar problems](https://stackoverflow.com/questions/50308015/fixed-header-disapearing-on-ios-safari-bounce), but have reached the limitations of my CSS/Angular Material knowledge. If you don't have access to an iOS device, I'd be happy to test any possible solutions.

## Expected behavior
<!-- Describe what the desired behavior would be. -->
Navbar should be visible.


## Minimal reproduction of the problem with instructions
<!-- For bug reports please provide the *STEPS TO REPRODUCE* and if possible a *MINIMAL DEMO* of the problem -->

`ngx new` with Angular Material -> View on iOS device

[Screenshot](https://i.imgur.com/RdBBJZf.png)

Tested with Safari, Firefox and Chrome on iPhone 7 with current iOS.

## Environment
<pre><code>
<!-- Run `ngx --debug-infos` and paste output below -->
ngX-Rocket: 7.1.0       
Node.js: v12.8.0        
Npm: 6.11.2
OS: win32 x64 10.0.18362

Generated project options: 
{
  "generator-ngx-rocket": {
    "version": "7.1.0",    
    "props": {
      "location": "path",  
      "strict": false,     
      "skipInstall": false,
      "skipQuickstart": false,
      "initGit": true,
      "appName": "ngx rocket test 2",
      "target": [
        "web"
      ],
      "pwa": true,
      "ui": "material",
      "layout": "simple",
      "auth": true,
      "lazy": true,
      "angulartics": false,
      "tools": [
        "prettier",
        "hads"
      ],
      "utility": [],
      "projectName": "ngx-rocket-test-2",
      "packageManager": "npm",
      "mobile": [],
      "desktop": []
    }
  }
}

Angular CLI: 8.1.3
Node: 12.8.0
OS: win32 x64
Angular: 8.2.9
... animations, common, compiler, compiler-cli, core, forms
... language-service, platform-browser, platform-browser-dynamic
... router, service-worker

Package                           Version
-----------------------------------------------------------
@angular-devkit/architect         0.801.3
@angular-devkit/build-angular     0.801.3
@angular-devkit/build-optimizer   0.801.3
@angular-devkit/build-webpack     0.801.3
@angular-devkit/core              8.1.3
@angular-devkit/schematics        8.1.3
@angular/cdk                      8.2.2
@angular/cli                      8.1.3
@angular/flex-layout              8.0.0-beta.27
@angular/material                 8.2.2
@ngtools/webpack                  8.1.3
@schematics/angular               8.1.3
@schematics/update                0.801.3
rxjs                              6.5.3
typescript                        3.4.5
webpack                           4.35.2


</code></pre>
<!--
PLEASE HELP US PROCESS GITHUB ISSUES FASTER BY PROVIDING THE FOLLOWING INFORMATION.

ISSUES MISSING IMPORTANT INFORMATION MAY BE CLOSED WITHOUT INVESTIGATION.
-->

## I'm submitting a...
<!-- Check one of the following options with "x" -->
- [ ] Bug report  <!-- Please search GitHub for a similar issue or PR before submitting -->
- [x] Feature request
- [ ] Documentation issue or request

## Current behavior
<!-- Describe how the issue manifests. -->
Missing Ionic cli commands for Ionic 4.


## Expected behavior
<!-- Describe what the desired behavior would be. -->
Would be great to be able to use the ionic cli commands with this. I would even pay for this feature to be implemented or for someone to give me a solution. Having to build my project just to run the cordova command to run the app takes so long. With commands like ionic <code>cordova emulate --lc </code> it speeds up development so much with being able to live reload the code and view the console.log within the terminal.
