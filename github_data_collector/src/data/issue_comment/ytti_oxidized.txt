## Pre-Request 

- [ ] Passes rubocop code analysis (try `rubocop --auto-correct`)
- [ ] Tests added or adapted (try `rake test`)
- [ ] Changes are reflected in the documentation
- [x] User-visible changes appended to [CHANGELOG.md](/CHANGELOG.md)

## Description
Juniper vMX devices provide the current bandwidth in use when viewing the licenses. As an example:

```
License usage:
                                 Licenses     Licenses    Licenses    Expiry
  Feature name                       used    installed      needed
  VMX-BANDWIDTH                      1193        10000           0    permanent
  VMX-SCALE-PREMIUM                     1            1           0    permanent
```

It is unusual for the bandwidth used to be the same each polling run which results in a change every time.

Hello, I was wondering if it was possible to create a node_fail webhook for Slack?  I only see post_store.  
Let me know if this would be a possibility. 
Thanks much!
Hey All,

I got the following working on my oxidized to backup panos devices via **config-output-format set**.

But if you run it in the router.db along with the existing panos model.

Depending on the which node runs first it will save the output as that for both models ( panos.rb and panosset.rb ).

Any ideas would be great!

```
$ cat model/panosset.rb 
class PanOSset < Oxidized::Model
  # PaloAlto PAN-OS model #

  comment '! '

  prompt /^[\w.@:()-]+[#?>]\s?$/

  cmd :all do |cfg|
    cfg.each_line.to_a[2..-3].join
  end

  cmd 'show' do |cfg|
    cfg
  end

  cfg :ssh do
    post_login 'set cli pager off'
    post_login 'set cli config-output-format set'
    post_login 'configure'
    pre_logout 'exit'
    pre_logout 'set cli config-output-format default'
    pre_logout 'quit'
  end
end
```
## Pre-Request Checklist
<!-- Not all items apply to each PR, but a great PR addresses all applicable items. -->

- [X] Passes rubocop code analysis (try `rubocop --auto-correct`)
- [X] Tests added or adapted (try `rake test`)
- [x] Changes are reflected in the documentation
- [X] User-visible changes appended to [CHANGELOG.md](/CHANGELOG.md)

## Description
Hides macsec secret key: the CKN and CAK.

* Original Syntax Example

```
    mac security
       fips restrictions
       !
       profile default
          cipher aes256-gcm-xpn
          key 1ffab311 7 00C655A8E47F0E4756B32767F7C9A34854716C7F33F2E948A39CA9C00D0D0A0330
          mka session rekey-period 3600
          l2-protocol lldp bypass
```

* Replacement Syntax Example

```
    mac security
       fips restrictions
       !
       profile default
          cipher aes256-gcm-xpn
          key <secret hidden>
          mka session rekey-period 3600
          l2-protocol lldp bypass
```


Hello i have a working oxi server. it pulls configs fine. If hypothetically I wanted to not have to go through the web gui and click on 30 devices and copy-paste their configs one at a time to a usb. 

How would I do that is git the way to do that on this app ? (assuming you can)

I already automated this using curl and i have full access to the server , so it seems like im doing things the hard way.
 Which model does Topsec ngfw4000 use ?
Recently installed this on a CentOS 8 VM (where it worked great, btw. No need for rvm). The one problem is that http config retrievals fail without any error message unless you explicitly install the mechanize gem. Would it make more sense to add mechanize as a dependency for the oxidized gem or to update install instructions?
Hello, 

Trying to create a new model for a new device (telllabs OLT) we are using:

*Human ssh-ing*
```
ssh device
config@usa-fl2a-2ter-olt-1's password:
Connect from 10.x.x.x
password for (<username>): 

*** WARNING: PRIVATE PROPERTY - AUTHORIZED ACCESS ONLY ***



Do you accept the statement above? (Y/N) y
Welcome <username> !
Last Successful Login: 2019-12-24 13:53 GMT.

ESU32>
```
*custom telllabs.rb model*
```
class TellLABS < Oxidized::Model
  prompt /^(\r*[\w.@():-]+[>]\s?)$/
  comment '# '

  #cmd :secret do |cfg|
  #  cfg.gsub! /^(set configsyncpasswd = ) \S+/, '\\1 <removed>'
  #  cfg.gsub! /^(set user-pass = ) \S+/, '\\1 <removed>'
  #  cfg.gsub! /^(set auth-key = ) \S+/, '\\1 <removed>'
  #  cfg.gsub! /^(set priv-key = ) \S+/, '\\1 <removed>'
  #  cfg.gsub! /^(set ftp-password = ) \S+/, '\\1 <removed>'
  #  cfg.gsub! /^(set community-name = ) \S+/, '\\1 <removed>'
  #  cfg.gsub! /^(set communityname = ) \S+/, '\\1 <removed>'
  #  cfg
  #end

  cmd 'show ont all' do |cfg|
    comment cfg
  end

  cmd 'show ne radius-server-group login-default' do |cfg|
    comment cfg
  end

  cmd 'show ne radius-server-group dot1x-default' do |cfg|
    comment cfg
  end

  #cfg :telnet, :ssh do
  #  username /\r*login:/
  #  password /\r*password:/
  #  post_login 'y' + '\n'
  #  pre_logout 'logout'
  #end
  cfg :telnet, :ssh do
    # preferred way to handle additional passwords
    if vars :enable
      post_login do
	send @node.auth[:password] + "\n"
        #expect /^password for (@node.auth[:username]):/
	#send @node.auth[:password] + "\n"
	expect /^Do you accept the statement above? (Y\/N) /
	send "y\r"
      end
    end
    pre_logout 'exit'
  end
end

```

*logs*
```
D, [2019-12-24T14:35:55.220542 #15365] DEBUG -- : lib/oxidized/worker.rb: 1 jobs running in parallel
W, [2019-12-24T14:35:56.010267 #15365]  WARN -- : 10.203.3.11 raised Oxidized::PromptUndetect with msg "
Connect from 10.x.x.x
password for (<username>):  not matching configured prompt (?-mix:^(\r*[\w.@():-]+[>]\s?)$)"
D, [2019-12-24T14:35:56.010548 #15365] DEBUG -- : lib/oxidized/node.rb: Oxidized::SSH failed for usa-fl2a-2ter-olt-1
```

By the looks of it, it gets past the first SSH auth, but on the second `password for (<username>):` it fails. What could I be missing?

Any input is much appreciated!

Thanks,
Dave
I have Chinese in my configuration, and the garbled characters are displayed after saving the configuration with xidized. How to set it up?
such as：
 description ����ɳũ��17��
How to set super passward for H3C devices