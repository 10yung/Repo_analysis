
# Describe your issue
This is the log when running sudo ./lvl-ip

`~/level-ip$ sudo ./lvl-ip 
Unsupported ethertype 86dd
ARP was not for us
Unknown IP header proto : 2 
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unknown IP header proto : 17 
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unknown IP header proto : 2 
Unknown IP header proto : 17 
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unknown IP header proto : 17 
ARP was not for us
Unsupported ethertype 86dd
Unsupported ethertype 86dd
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unsupported ethertype 86dd
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unknown IP header proto : 17 
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unsupported ethertype 86dd
Unknown IP header proto : 17 
Unsupported ethertype 86dd
Unknown IP header proto : 17` 

# Describe your running environment
Ubuntu 16.04 LTS



This PR introduces support for Netlink AF_INET/IPPROTO_TCP socket information gathering. See `man sock_diag`.

Useful with the `ss` tool (from `iproute2`):

```
$ ./tools/level-ip ss -n4t
State                             Recv-Q                          Send-Q                                                    Local Address:Port                                                      Peer Address:Port
TIME-WAIT                         0                               0                                                              10.0.0.4:43241                                                   216.58.211.142:80
TIME-WAIT                         0                               0                                                              10.0.0.4:42332                                                   216.58.211.142:80
```
NAME="CentOS Linux"
VERSION="7 (Core)"
ID="centos"
ID_LIKE="rhel fedora"
VERSION_ID="7"
PRETTY_NAME="CentOS Linux 7 (Core)"
ANSI_COLOR="0;31"
CPE_NAME="cpe:/o:centos:centos:7"
HOME_URL="https://www.centos.org/"
BUG_REPORT_URL="https://bugs.centos.org/"

CENTOS_MANTISBT_PROJECT="CentOS-7"
CENTOS_MANTISBT_PROJECT_VERSION="7"
REDHAT_SUPPORT_PRODUCT="centos"
REDHAT_SUPPORT_PRODUCT_VERSION="7"


Linux SCXI-FIXT91 3.10.0-957.5.1.el7.x86_64 #1 SMP Fri Feb 1 14:54:57 UTC 2019 x86_64 x86_64 x86_64 GNU/Linux



make all
cc  -I include -Wall -Werror -pthread -c src/skbuff.c -o build/skbuff.o
In file included from src/skbuff.c:1:0:
include/syshead.h:27:28: fatal error: sys/capability.h: No such file or directory
 #include <sys/capability.h>
                            ^
compilation terminated.
make: *** [build/skbuff.o] Error 1

Nov 14  2017 level-ip-master




I followed the instructions in readme file.
when executing `make all` , many error-messages come into screen . 
so ...
could you tell me about your environment when compiling code , pls ? 

e.g what is the version of your gcc  ?
c99 or gnu99 or else ?

thanX!
- **OS** (e.g. `cat /etc/os-release`):
NAME="CentOS Linux"
VERSION="7 (Core)"
ID="centos"
ID_LIKE="rhel fedora"
VERSION_ID="7"
PRETTY_NAME="CentOS Linux 7 (Core)"
ANSI_COLOR="0;31"
CPE_NAME="cpe:/o:centos:centos:7"
HOME_URL="https://www.centos.org/"
BUG_REPORT_URL="https://bugs.centos.org/"
CENTOS_MANTISBT_PROJECT="CentOS-7"
CENTOS_MANTISBT_PROJECT_VERSION="7"
REDHAT_SUPPORT_PRODUCT="centos"
REDHAT_SUPPORT_PRODUCT_VERSION="7"
- **Kernel** (e.g. `uname -a`):
Linux lll 3.10.0-693.21.1.el7.x86_64 #1 SMP Wed Mar 7 19:03:37 UTC 2018 x86_64 x86_64 x86_64 GNU/Linux

Sequence numbers must not be compared for inequality "naively", since they are designed to wrap around. For example there is an issue here when checking if an incoming segment has a valid sequence number:
https://github.com/saminiir/level-ip/blob/c1950ea0e0f9feceb5602432f1751b8ce71c4952/src/tcp_input.c#L106

Consider the case `tcb->rcv_nxt=4294967290`, `tcb->rcv_wnd=20`, `th->seq=5`. This is an acceptable segment (it is 11 more than `tcb->rcv_nxt`, so it is within the receive window), but your code will decide it is not acceptable.

One way to fix this specific part of code is like this:
```c
uint32_t seq_relative_to_rcv_nxt = (uint32_t)(th->seq - tcb->rcv_nxt);
if (seq_relative_to_rcv_nxt > tcb->rcv_wnd) {
    // invalid segment
}
```

Note that the conversion of the result of the subtraction to `uint32_t` is imperative to ensure modulo reduction.
Route lookup should return the longest prefix match in case of more than one match. See https://en.wikipedia.org/wiki/Longest_prefix_match and https://www.rfc-editor.org/rfc/rfc1812.txt (look for "Longest Match").

https://github.com/saminiir/level-ip/blob/c1950ea0e0f9feceb5602432f1751b8ce71c4952/src/route.c#L53