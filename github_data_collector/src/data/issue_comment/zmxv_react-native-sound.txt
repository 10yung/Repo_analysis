:beetle: **What is the observed behavior?**

Using sound.setNumberOfLoops(1) causes sound to never stop playing.

:beetle: **What is the expected behavior?**

Using sound.setNumberOfLoops(1) should play the sound once, then loop once. A total of 2 plays.

:beetle: **Please post your code:**

```js
Sound.setCategory('Playback');
const sound = new Sound('tada.mp3', Sound.MAIN_BUNDLE, error => {
  sound.setNumberOfLoops(1); // This will cause infinite repetitions
  sound.play();
});
```

:bulb: **Does the problem have a test case?**

I don't have a public test case. It's clear why the issue occurs though, because the looping is claimed as supported by android in README file but in code it clearly isn't.

Native code in rn-sound repo that clearly doesn't support number of loops:
```js
Sound.prototype.setNumberOfLoops = function(value) {
  this._numberOfLoops = value;
  if (this._loaded) {
    if (IsAndroid || IsWindows) {
      RNSound.setLooping(this._key, !!value);
    } else {
      RNSound.setNumberOfLoops(this._key, value);
    }
  }
  return this;
};
```
However docs say:
<img width="431" alt="image" src="https://user-images.githubusercontent.com/895369/72190647-f07bda80-33b4-11ea-9fa5-5c295f08f9b8.png">

:bulb: **Possible solution**

Fix and Merge PR that makes Android support loops, or update documentation.

:bulb: **Is there a workaround?**

No workaround possible.

:bulb: **If the bug is confirmed, would you be willing to create a pull request?**

One already exists.

**Is your issue with...**

- [ ] iOS
- [x] Android
- [ ] Windows

**Are you using...**

- [x] React Native CLI (e.g. `react-native run-android`)
- [ ] Expo
- [ ] Other: (please specify)

**Which versions are you using?**

- React Native Sound: 0.11.0
- React Native: 0.61.2
- iOS: -
- Android: Android 8.0 (Samsung Exp 9.0)
- Windows: -

**Does the problem occur on...**

- [ ] Simulator
- [x] Device

**If your problem is happening on a device, which device?**

- Device: Samsung Galaxy S7

:beetle: **Please post your code:**

```js
play(name) {
        console.log("play:" + name);
        Sound.setCategory('Playback');
        // Load the sound file 'whoosh.mp3' from the app bundle
        // See notes below about preloading sounds within initialization code below.
        var whoosh = new Sound(name, Sound.MAIN_BUNDLE, (error) => {
            if (error) {
                console.log('failed to load the sound', error);
            } else { // loaded successfully
                whoosh.setNumberOfLoops(-1);
                whoosh.play((success) => {
                    if (success) {
                        console.log('successfully finished playing');
                    } else {
                        console.log('playback failed due to audio decoding errors');
                    }
                });
            }
        });

    }

```




**Until the problem is fixed, is there a way to work around it?**
concat the short mp3 file, make the file longer(2s)

:bulb: **If the bug is confirmed, would you be willing to create a pull request?**

<!--- Help can be provided if you need assistance creating a PR. -->
        @synchronized(self) {
            player.delegate = self;
            player.enableRate = YES;
           player.numberOfLoops = -1;//add this, player will loop
            [player prepareToPlay];

**Which versions are you using?**

- React Native Sound:(0.11.0)
- React Native:(0.61.0)
- iOS:11.3(simulate)


**Does the problem occur on...**

- [ *] Simulator


Test file:
[start.mp3.zip](https://github.com/zmxv/react-native-sound/files/3977036/start.mp3.zip)

I try again play file mp3 on device Samsung galaxy note 4 run android 6 but not working
:beetle: **Description**

I do download audio source with: 
```
 RNFetchBlob.config({
      path: this.path,
      fileCache: true,
 }).fetch('GET', url)
```

When I downloaded at least something I create Sound instance and start playing audio from file path.
An this moment `sound.getDuration()` returns ~16 seconds, which is correct. 

Source continue downloading and sound keep playing. Doesn't matter how many time it will play, but getDuration keep returning 16 seconds. Even when current position is 5 minutes.

When I restart device with cached file (download is finished), it will return real total value. (example: 6mins)

:beetle: **What is the expected behavior?**

It will return correct value. I expect to get different value in downloading process. (between 16sec and 6mins)

:beetle: **Please post your code:**

Code is same like in docs


:bulb: **Possible solution**

Seems like sound instance keeps value of initial duration, and just continue returning it. Maybe this behavior is ok for you. I'd like to be able to do force duration get. 

:bulb: **Is there a workaround?**

I tried to create different instance of Sound just for getting duration, when file upload is finished. But I got error: `ENSOSSTATUSERRORDOMAIN-10875`


:bulb: **If the bug is confirmed, would you be willing to create a pull request?**

No

**Is your issue with...**

- iOS

**Are you using...**
- React Native CLI

**Which versions are you using?**

- React Native Sound: 0.61.5
- React Native: 0.11.0
- Xcode: 11.2.1

**Does the problem occur on...**

- Simulator

**If your problem is happening on a device, which device?**

I think it happens on any device
Support play base64 audio
:beetle: **Description**

When playing sounds, the phone heats up significantly. very noticeable after +10 minutes of continued sound playback. this also happens when the app is in background, so it shouldn't be the playback update callback, right?

:beetle: **What is the observed behavior?**

phone gets üî• 

:beetle: **What is the expected behavior?**

phone should stay ‚ùÑÔ∏è 


:bulb: **Does the problem have a test case?**

Play a sound for +10 minutes (make it 20 to be safe) and check the temp of the phone.

:bulb: **Is there a workaround?**

ice? only releasing in scandinavia? Its probably nothing critical, but still an indicator of unnecessary battery/cpu usage.

:bulb: **If the bug is confirmed, would you be willing to create a pull request?**

It seems like big players such as [spotify](https://community.spotify.com/t5/Ongoing-Issues/iPhone-gets-really-really-hot-when-playing-Spotify/idi-p/1615981) and apple seem to have had this problem as well. Maybe a pointer into the right direction would help? Id love to dive into the native side of the player.

**Is your issue with...**

- [x] iOS
- [ ] Android
- [ ] Windows

**Are you using...**

- [ ] React Native CLI (e.g. `react-native run-android`)
- [ ] Expo
- [x] xcode / testflight

**Which versions are you using?**

- React Native Sound: 0.11.0
- React Native: 0.61.4
- iOS: 13
- Android: n/a
- Windows: ew

**Does the problem occur on...**

- [ ] Simulator
- [x] Device

**If your problem is happening on a device, which device?**

- Device: multiple iOS devices.

Hi everybody
react-native-sound do not work when I set enableProguardInReleaseBuilds = true.
What commands do I need to enter in proguard-rules.pro until my problem is resolved.
:beetle: **Description**
setSpeakerphoneOn doesn't work
<!-- A clear and concise description of the problem. -->
I looked up documentation for setSpeakerphoneOn at https://github.com/zmxv/react-native-sound/wiki/API, where it states that you just need to pass a boolean value into it. What I'm trying to achieve is to have a toggle button for switching on and off setSpeakerphoneOn for voicemail files
:beetle: **What is the observed behavior?**
Doesn't seem to work
<!-- Please describe concisely the behavior you're observing. -->

:beetle: **What is the expected behavior?**
Expected to have a toggle button for switching on and off setSpeakerphoneOn for voicemail files
<!-- Please describe concisely what behavior you expect. -->

:beetle: **Please post your code:**
Posting snippets of my code:
```js
...
  play = async () => {
    if (this.sound) {
      this.sound.play(this.playComplete)
      this.setState({playState: 'playing'})
    } else {
      const { id, userCredential, contentUrl } = this.props
      const voiceMailURL = `${contentUrl}/content/voicemail/get?msgId=${id}&token=${userCredential.access_token}`
      this.sound = new Sound(voiceMailURL, '', (error) => {
        if (error) {
          Alert.alert('Notice', 'audio file error. (Error code : 1)')
          this.setState({playState: 'paused'})
        } else {
          this.setState({playState: 'playing', duration: this.sound.getDuration()})
          this.state.useEarPiece ? this.sound.setSpeakerphoneOn(true) : this.sound.setSpeakerphoneOn(true)
          this.sound.play(this.playComplete)
        }
      })
    }
  }
  playComplete = (success) => {
    if (this.sound) {
      if (success) {
      } else {
        Alert.alert('Notice', 'audio file error. (Error code : 2)')
      }
      this.setState({playState: 'paused', playSeconds: 0})
      this.sound.setCurrentTime(0)
    }
  }
 toggleUseEarPiece = () => {
    this.setState({
      useEarPiece: !this.state.useEarPiece
    })
  }
render () {
...
  <View style={{flexDirection: 'row', justifyContent: 'center'}}>
                        {this.state.playState === 'playing' &&
                        <TouchableOpacity style={{marginHorizontal: 20}} onPress={this.pause}>
                          <Icon color='#000' name='ios-pause' size={20} type='ionicon' />
                        </TouchableOpacity>}
                        {this.state.playState === 'paused' &&
                        <TouchableOpacity style={{marginHorizontal: 20}} onPress={this.play}>
                          <Icon color='#000' name='md-play' size={20} type='ionicon' />
                        </TouchableOpacity>}
                      </View>
...
<TouchableOpacity onPress={this.toggleUseEarPiece}>{speaker}</TouchableOpacity>
}
```

:bulb: **Does the problem have a test case?**

<!--- Can you reproduce the problem in a new project? (`react-native init`)?
If so, please post a link to the project. --> 

:bulb: **Possible solution**

<!--- Optional: only if you have suggestions on a fix/reason for the bug -->

:bulb: **Is there a workaround?**

<!--- Until the problem is fixed, is there a way to work around it? -->

:bulb: **If the bug is confirmed, would you be willing to create a pull request?**

<!--- Help can be provided if you need assistance creating a PR. -->

**Is your issue with...**

- [ ] iOS
- [ ] Android
- [ ] Windows

**Are you using...**

- [ ] React Native CLI (e.g. `react-native run-android`)
- [ ] Expo
- [ ] Other: (please specify)

**Which versions are you using?**

- React Native Sound:
- React Native:
- iOS:
- Android:
- Windows:

**Does the problem occur on...**

- [ ] Simulator
- [ ] Device

**If your problem is happening on a device, which device?**

- Device:

We are having an issue, where audioplayback causes the phone to get warm and burn through energy. Could the testflight version be the problem here? Or is this a known issue? Would limiting the frequency of sound progression update callbacks help?
:clipboard: **Description**

iOS and Android system sounds should come play feature.

iOS System Sound:
http://iphonedevwiki.net/index.php/AudioServices

Android System Sound:
https://developer.android.com/reference/android/media/RingtoneManager#constants_2