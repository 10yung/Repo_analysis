I currently installed `autoenv` by `pip install` and auto-activate envs of projects with pleasure.

However, when I try to go further and set `AUTOENV_ENABLE_LEAVE=True` (both within the shell by `export` and by modifying `activate.sh`), and I realized that `.env.leave` was never executed.

As I took a closer look at `activate.sh` and compared it with the master branch, it seemed not the same. 
- `$wc -l activate.sh` outputs 121
- no `auto_leave()` in the local script
- etc...

Did that happened because the pypi version is not catching up with the master branch (or stable one (if any)?)
If so, what's the recommended way to update it?

(English is not my native language; please excuse typing errors.)
Fixes https://github.com/inishchith/autoenv/issues/188

This implements @sennav and @meermanr's suggestion as a pull request.

Due to Catalina's new firmlinks, this fixes an infinite loop on OSX Catalina 10.15.

Manually running `source activate.sh` will enter the infinite loop condition. Manually running `source activate.sh` with the line change returns nearly immediately and enables autoenv.
Hello.

Updated to Mac Catalina OS. I've tested it on more than one Mac and have the same thing.
Hi,

I've installed autoenv by issuing `pip install autoenv` which worked fine but it installed an outdated version (release 1.0.0 last updated in 2012), which does not respect new environment variables, such as `AUTOENV_ENV_FILENAME`.

This can certainly catch someone off guard as It's not mentioned anywhere.

Please update pypi release with latest source or at least add note to readme file that pypi release is outdated.

Thanks.
I use the directory stack a lot, so it'd be great to have support for pushd and popd. I can see that there's a PR for it.
So say someone wants to remove autoenv -- I'm asking for a friend... :-P 

But then once doing `brew uninstall` they get this error:

`-bash: /usr/local/opt/autoenv/activate.sh: No such file or directory`

But my friend can't figure out where that command is being run.  What should my friend do?
after installing the `serverless` framework, I have these errors when 
typing 

`workon my_venv` 

getting these

    deactivate:12: command not found: virtualenv_deactivate
    workon:54: command not found: serverless

`which workon` output the function 
but I don't see the words `serverless`  there
and I don't understand why `virtualenv_deactivate` stopped working 

Also, commented out from my ~/.zshrc these lines 

    # tabtab source for serverless package
    # uninstall by removing these lines or running `tabtab uninstall serverless`
    #[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/serverless.zsh
    # tabtab source for sls package
    # uninstall by removing these lines or running `tabtab uninstall sls`
    #[[ -f /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh ]] && . /usr/local/lib/node_modules/serverless/node_modules/tabtab/.completions/sls.zsh


Another comment. This is after I uninstalled `serverless`

    npm uninstall -g serverless

Before I did I got this error

    autoenv_init:chdir:10: file name too long:  \n  Error --------------------------------------------------\n \n  This command can only be run in a Serverless service directory\n \n     For debugging logs, run again after setting the "SLS_DEBUG=*" environment variable.\n \n  Get Support --------------------------------------------\n     Docs:          docs.serverless.com\n     Bugs:          github.com/serverless/serverless/issues\n     Forums:        forum.serverless.com\n     Chat:          gitter.im/serverless/serverless\n \n  Your Environment Information -----------------------------\n     OS:                     darwin\n     Node Version:           8.6.0\n     Serverless Version:     1.26.0\n
    autoenv_init:cd:10: file name too long:  \n  Error --------------------------------------------------\n \n  This command can only be run in a Serverless service directory\n \n     For debugging logs, run again after setting the "SLS_DEBUG=*" environment variable.\n \n  Get Support --------------------------------------------\n     Docs:          docs.serverless.com\n     Bugs:          github.com/serverless/serverless/issues\n     Forums:        forum.serverless.com\n     Chat:          gitter.im/serverless/serverless\n \n  Your Environment Information -----------------------------\n     OS:                     darwin\n     Node Version:           8.6.0\n     Serverless Version:     1.26.0\n

How Can I further debug this?



Could current activated env be deactivated if I cd to folder which is not subfolder of current directory?

Also if I using such .env:
    source oenv/bin/activate
it works when I enter to this folder, but then when I go to subfolder I'm getting:
    bash: oenv/bin/activate: No such file or directory
I can fix it using absolute path, but it will be activated twice, isn't it.

@kennethreitz
took me too long to figure out but once I compared the git versus the download from brew I discovered (!@#) that the leave functionality was not there.
Looks like an update to brew is needed.

I installed autoenv using:
```
git clone git://github.com/kennethreitz/autoenv.git ~/.autoenv
echo 'source ~/.autoenv/activate.sh' >> ~/.bashrc
```
Then I sourced it:
``source ~/.bashrc``

Then I setup a dir with ``.env`` like this:
```
#!/bin/bash
source ~/.venv/project/bin/activate

export APP_SETTINGS="config.DevConfig"
export DATABASE_URL="mysql+pymysql://user:pass@localhost:3306/test?charset=utf8mb4"
```
But when I cd to that dir, I get a ``No such file or directory`` error:
```
autoenv:
autoenv: WARNING:
autoenv: This is the first time you are about to source /vagrant/project/.env:
autoenv:
autoenv:   --- (begin contents) ---------------------------------------
autoenv:     #!/bin/bash^M$
autoenv:     source /home/vagrant/.venv/project/bin/activate^M$
autoenv:     ^M$
autoenv:     export APP_SETTINGS="config.DevConfig"^M$
autoenv:     export DATABASE_URL="mysql+pymysql://user:pass@localhost:3306/test?charset=utf8mb4"^M$
autoenv:
autoenv:   --- (end contents) -----------------------------------------
autoenv:
autoenv: Are you sure you want to allow this? (y/N) y
: No such file or directoryproject/bin/activate
: command not found
```
However, if I run the exact same command, it works just fine:
```
vagrant@vagrant-ubuntu-trusty-32:/vagrant/project$ source ~/.venv/project/bin/activate
(project) vagrant@vagrant-ubuntu-trusty-32:/vagrant/project$
```

What could be wrong?