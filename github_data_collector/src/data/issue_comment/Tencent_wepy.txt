
现在是如果删除某个文件，构建的内容还是会有已经被删除的文件
```
<config>
{
  navigationBarTitleText: '平台',
  usingComponents: {
    "txv-video": "plugin://tencentvideo/video"
  }
}
</config>
```

项目编译后，产生是json文件里面的内容
```

{
    "navigationBarTitleText": "平台",
    "component": true,
    "usingComponents": {
        "txv-video": "./plugin://tencentvideo/video"
    }
}

```

`"txv-video": "./plugin://tencentvideo/video"`

路径前面加了 './' ,导致找不到插件
报错内容：

> [16:17:21] ERR! EEXIST: file already exists, mkdir '{project_path}\target\weapp\static\svg'
> [16:17:21] ERR! compile Compile failed. Add "--log trace" to see more details
> Done in 6.59s.

如何产生bug:
1. 在.vue文件或者.wpy文件中已经有某个标签的src指向了一个静态文件目录A中的文件
2. 在wepy.config.js中，static的数组list中依旧包含了这个文件目录A
3. 将编译后的文件提前清理干净，保证在无任何上次生成文件的条件下运行build命令

目前暂时的解决方法：
1. 将静态文件分为两个文件夹，一个文件夹用于存放vue/wpy文件中，src属性指向的文件，一个用于存放build时无法自动拷贝的文件（举例，src="{{srcUrl}}"，那么srcUrl对应的文件就无法自动复制过去）。
2. build两次，第一次时报错，第二次不删除前一次的编译结果，就不会报错。
3. 将以下文件做修改：
`{root}\node_modules\@wepy\cli\core\compile.js(line:171)`
将
```javascript
   return fs.copy(target, dest);
```
变为同步拷贝
```javascript
   return fs.copySync(target, dest);
```

因为第三种方法只是解决问题，没有实际确认是不是从根源上更合理的解决问题，所以没有提出PR。勉强只能算是一个参考吧。

这个不是太影响开发，但是在做CI/CD的时候因为报错会导致的整个pipeline挂了。希望可以在下个版本中修复，谢谢。
The test script is failed without any change, so I didn't have a test case, sorry for that.

This bug is very urgent, after updating the version from `2.0.20` to `2.0.22`, our chatbot plugin in Wechat miniprogram can't be loaded with an error message.

> jsEnginScriptError
Component is not found in path "foundation/pages/plugin:/chatbot/chat" (using by "foundation/pages/chatbot");onAppRoute
Error: Component is not found in path "foundation/pages/plugin:/chatbot/chat" (using by "foundation/pages/chatbot")

The root reason is because the WePY built the path of the plugin from 
```json
  {
    "component": true,
    "usingComponents": {
      "chat": "plugin://chatbot/chat"
    }
  }
```
to
```json
{
    "component": true,
    "usingComponents": {
        "chat": "./plugin://chatbot/chat"
    }
}
```

This PR is just for fixing this bug.
after init project, a lot of eslint errors。same as semi
"@wepy/core": "^2.0.0-alpha.9",
子组件：
<template>
    <div class="toast-wrap" @tap="clickConfirm" v-if="showToast">
    <!-- <div class="toast-wrap" @tap="clickCancel" v-if="showToast"> -->
      <!-- <slot name="title"></slot> -->
      <slot name="header"></slot>
        {{content}}
      <!-- <slot name="btnWrap"></slot>   -->
    </div>


</template>

父组件：
 <toast :showToast="true" :content="123">
  
        <view slot="header" style="color:yellow;">我爱学习前端</view>
    
      </toast>

我爱学习前端没有显示出来，只显示了123
## Description

  Wepy 2的cli不打包原生页面中的npm依赖

## Environment

  * Platform: 开发者工具
  * Platform version: 1.02.1911180
  * wepy-cli version: 2.0.0-alpha.22
  * wepy version: 2.0.0-alpha.9
  
## Reproduce
  
  使用wepy打包以下代码片段，直接在开发者工具下运行

### Observed Results

  Uncaught Error: can't find module : ./../../node_modules/lodash/lodash.js
  页面崩溃。
  vendor.js中没有找到lodash。
  
### Expected Results

  原生的js页面中的npm依赖可以被正常分析打包到vendor.js中
  

## Relevant Code / Logs

  https://developers.weixin.qq.com/s/hrKNQUm77wdx

能否完善更新2.x文档：.wpy无文件结构说明及相关配置。
2.x文档能否：完善较与1.x版本未改动部分文档内容，完善更新2.x新增和改动的内容
原由：只看2.x的文档无法进行配置开发。

![question](https://user-images.githubusercontent.com/34147472/71459348-fe8d0100-27e1-11ea-8312-9bdde5390db6.PNG)
)



__首页添加编译支付宝小程序插件链接__