Homebrew has removed openssl 1.0 and now installs 1.1 which is causing all builds of MRI ruby 2.3 or less to fail.

I was able to get around this by installing the deleted openssl formula with homebrew and passing the path

```
brew install https://raw.githubusercontent.com/Homebrew/homebrew-core/8b9d6d688f483a0f33fcfc93d433de501b9c3513/Formula/openssl.rb
ruby-install ruby 2.3.8 -- --with-openssl-dir=/usr/local/opt/openssl
```
I would maintain that copr
(Very similar to https://github.com/postmodern/ruby-install/issues/261)

```text
$ ruby-install ruby 2.6
>>> Updating ruby versions ...
!!! Failed to download https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/versions.txt to /Users/sethvargo/.cache/ruby-install/ruby/versions.txt!
!!! Failed to download ruby versions!
```

Both `curl` and `wget` are installed from homebrew:

```text
$ curl --version
curl 7.67.0 (x86_64-apple-darwin19.0.0) libcurl/7.67.0 SecureTransport zlib/1.2.11
Release-Date: 2019-11-06

$ wget --version
GNU Wget 1.20.3 built on darwin19.0.0.
```

- Visiting in the browser works fine

- Doing a regular `curl` works fine:

    ```text
    $ curl https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/versions.txt
    # outputs list
    ```

- Running the `curl` command in #261 works:

    ```text
    $ curl -f -L -C - -o ~/.cache/ruby-install/ruby/versions.txt.part "https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/versions.txt"
    ```

- Doing a regular `wget` fails:

    ```text
    $ wget https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/versions.txt
    Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...
    Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.
    ERROR: cannot verify raw.githubusercontent.com's certificate, issued by ‘CN=DigiCert SHA2 High Assurance Server CA,OU=www.digicert.com,O=DigiCert Inc,C=US’:
      Unable to locally verify the issuer's authority.
    To connect to raw.githubusercontent.com insecurely, use `--no-check-certificate'.
    ```

- Running the `wget` command in #261 fails:

    ```text
    $ wget -c -O ~/.cache/ruby-install/ruby/versions.txt.part "https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/versions.txt"
    --2019-12-19 09:39:13--  https://raw.githubusercontent.com/postmodern/ruby-versions/master/ruby/versions.txt
    Resolving raw.githubusercontent.com (raw.githubusercontent.com)... 151.101.0.133, 151.101.64.133, 151.101.128.133, ...
    Connecting to raw.githubusercontent.com (raw.githubusercontent.com)|151.101.0.133|:443... connected.
    ERROR: cannot verify raw.githubusercontent.com's certificate, issued by ‘CN=DigiCert SHA2 High Assurance Server CA,OU=www.digicert.com,O=DigiCert Inc,C=US’:
      Unable to locally verify the issuer's authority.
    To connect to raw.githubusercontent.com insecurely, use `--no-check-certificate'.
    ```

Unlike #261, I'm on a Mac, Catalina 10.15.2 (19C57).

I also tried re-installing ruby-install from head and the same issue occurs.
Hit this when trying to install `truffleruby` since brew removed `llvm@4` in https://github.com/Homebrew/homebrew-core/issues/46801

https://github.com/oracle/truffleruby/issues/1820 says that llvm isn't required as an external dependency since `>= 19.3`

This was documented in https://github.com/oracle/truffleruby/issues/1820 and fixed in `rvm` in https://github.com/rvm/rvm/pull/4815

Ref: https://github.com/oracle/truffleruby/issues/1820#issuecomment-557949636

```
ruby-install --install-dir '/Users/devalias/.rbenv/versions/truffleruby-19.3.0' 'truffleruby' '19.3.0'

Error: No available formula with the name "llvm@4"
!!! Installing dependencies failed!

⇒  ruby-install --version
ruby-install: 0.7.0

⇒  brew upgrade ruby-install
Warning: ruby-install 0.7.0 already installed
```
This is a feature request. It would be good if we also provide binary deb files for Debian and Ubuntu. I guess we can host a PPA on https://launchpad.net/.

I may be able to work on this next year (my employer uses Debian) but in the same time anyone can pick it up.
patch for handling distro specific dependencies on CentOS 7/8
This computer is on Mac OS X 10.14. Installing rubies has worked before so I suppose it is a problem with upgrading llvm, openssl or some such.

This is the error log for me.

```clang-9: error: argument to '-V' is missing (expected 1 value)
clang-9: error: no input files
configure:3937: $? = 1
configure:3926: clang -qversion >&5
clang-9: error: unknown argument '-qversion'; did you mean '--version'?
clang-9: error: no input files
configure:3937: $? = 1
configure:3957: checking whether the C compiler works
configure:3979: clang  -I/usr/local/opt/llvm/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl/include -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl/lib conftest.c  >&5
configure:3983: $? = 0
configure:4031: result: yes
configure:4034: checking for C compiler default output file name
configure:4036: result: a.out
configure:4042: checking for suffix of executables
configure:4049: clang -o conftest  -I/usr/local/opt/llvm/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl/include -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl/lib conftest.c  >&5
configure:4053: $? = 0
configure:4075: result: 
configure:4097: checking whether we are cross compiling
configure:4105: clang -o conftest  -I/usr/local/opt/llvm/include -I/usr/local/opt/zlib/include -I/usr/local/opt/openssl/include -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib -L/usr/local/opt/zlib/lib -L/usr/local/opt/openssl/lib conftest.c  >&5
conftest.c:9:10: fatal error: 'stdio.h' file not found
#include <stdio.h>
         ^~~~~~~~~
1 error generated.
configure:4109: $? = 1
configure:4116: ./conftest
./configure: line 4118: ./conftest: No such file or directory
configure:4120: $? = 127
configure:4127: error: in `/Users/mikaelhenrikson/src/ruby-2.6.5':
configure:4129: error: cannot run C compiled programs.
If you meant to cross compile, use `--host'.
See `config.log' for more details

## ---------------- ##
## Cache variables. ##
## ---------------- ##

```

I'm baffled really, it used to work fine.
`brew` uses environment variables to control many aspects of how it
operates. Using `sudo` with `-E` allows those variables to be used to
keep the build/setup consistent with the existing environment.
Is it possible to add support for [Fullstaq Ruby](https://fullstaqruby.org/)?

I'm currently deploying MRI to both development workstations as and production servers with `ruby-install` which works like a charm. I'd give Fullstaq Ruby a shot, however, I'm not sure whether I want to touch this battle proven setup by ditching `ruby-install`.
I have MacOS Mojave 10.14.16 on execute command from terminal
`ruby-install ruby`
i received this error 
`Error: Current platform "darwin 18" does not match expected platform "darwin 16"
Error: If you upgraded your OS, please follow the migration instructions: https://trac.macports.org/wiki/Migration
OS platform mismatch
    while executing
"mportinit ui_options global_options global_variations"
Error: /opt/local/bin/port: Failed to initialize MacPorts, OS platform mismatch
!!! Installing dependencies failed!` 