Due to how Lerna works (and refuses to change), when a patch changes it publishes all dependents with patches also. This creates a lot of release noise. Need to investigate how this could either be eliminated, or bundled into a _single_ release for simpler documenting of the change.

For now, the convention I'll follow is that undocumented releases were only patches and do not contain any note worthy changes.
First off, thanks for the lib, it's fantastic! ðŸ˜„

So, leading underscores are not preserved (even with `snakeCase`):

```js
changeCase.snakeCase('private');  //=> 'private'
changeCase.snakeCase('_private'); //=> 'private'
changeCase.snakeCase('private_key');  //=> 'private_key'
changeCase.snakeCase('_private_key'); //=> 'private_key'
changeCase.snakeCase('privateKey');  //=> 'private_key'
changeCase.snakeCase('_privateKey'); //=> 'private_key'

changeCase.camelCase('private_key');  //=> 'privateKey'
changeCase.camelCase('_private_key'); //=> 'privateKey'
```

There's a strong argument to be made that this is expected behavior for `camelCase` specifically, **but** I think for `snakeCase` it is arguably _not_ expected behavior; leading underscores are pretty widely used as a convention to denote privacy, and the presence of a leading underscore doesn't conflict with the rules of "snake case", unless I'm mistaken.

Thoughts?

If this is intended behavior/"wontfix", would you consider an option parameter to preserve leading underscores?
I just ran into a situation where I had a bunch of (lowercase) snake_case symbols and needed each word to be in title case. Sadly change-case does not handle this flavor. For example, I want to be able to transform `some_thing` into `Some_Thing`. I know this is a little uncommon but it would have been very helpful just now!

I am using change-case via the VSCode extension and it is tremendously useful. Thanks for the great library!
At the moment, snakeCase doesn't insert an underscore before numbers. I would expect it to do that.

Current behaviour:
`changeCase.snakeCase("pricePer100Km")` returns `price_per100_km`.

Expected behaviour:
`changeCase.snakeCase("pricePer100Km")` returns `price_per_100_km`.

If this is not a bug, then I would suggest making it an option through a possible argument. Maybe like this:

`changeCase.snakeCase("pricePer100Km", {handleNumbers: true})` returns `price_per_100_km`.