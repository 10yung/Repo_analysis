支持mysqli和redis使用socket连接
 [InvalidArgumentException]
  Could not find package matyhtf/skeleton with stability stable in a version installable using your PHP version 7.1.19.

安装时候报错
rpc 服务端建议优化
0.服务端的代码，超过buffer区的最大长度了，如果遇到正处理的任务时，此岂不是丢了，建议增加标识位，如果任务处理成功则标识位为1，否则为0，清掉buffer区多一个判断 
1.对安全优化，代码中的密码是明文验证。建议以密文验证规则吧
当调用

`
$iterator = null;
\Swoole::$php->redis->hScan('redis_key_test',$iterator);
`

报错

`PHP Warning:  Parameter 2 to Redis::hscan() expected to be a reference, value given`

导致游标无法更新。

http://php.net/manual/en/function.call-user-func-array.php
> Note
> Before PHP 5.4, referenced variables in param_arr are passed to the function by reference, regardless of whether the function expects the respective parameter to be passed by reference. This form of call-time pass by reference does not emit a deprecation notice, but it is nonetheless deprecated, and has been removed in PHP 5.4

在 PHP 5.4 以上 call_user_func_array  已经不支持引用变量

websocket ，服务端send到客户端的返回值是怎么来的？代码如下：

> public function send($client_id, $message, $opcode = self::OPCODE_TEXT_FRAME, $end = true)
    {
        if ((self::OPCODE_TEXT_FRAME  === $opcode or self::OPCODE_CONTINUATION_FRAME === $opcode) and false === (bool) preg_match('//u', $message))
        {
            $this->log('Message [%s] is not in UTF-8, cannot send it.', 2, 32 > strlen($message) ? substr($message, 0, 32) . ' ' : $message);
            return false;
        }
        else
        {
            $out = $this->newFrame($message, $opcode, $end);
            return $this->server->send($client_id, $out);
        }
    }

即最后一行的return的值。

我测试过，如果客户端连接成功后，然后开启飞行模式，此时网络已断，但是服务端send给客户端的返回值仍然是 true，请问这是为什么？请各位大神赐教
Sec-WebSocket-Accept  中的Socket变自动变成小写的socket, 导致doHandShake中的相关判断失败。

    /**
     * 握手
     * @param $headerBuffer
     * @return bool
     */
    function doHandShake($headerBuffer) {
        $header = Swoole\Http\Parser::parseHeader($headerBuffer);
        if (!isset($header['Sec-WebSocket-Accept']))//php7.2.9 默认会把Socket变成小写的sokcet
{
            error_log('Sec-WebSocket-Accept is not correct');
            $this->disconnect();
            return false;
        }
        if ($header['Sec-WebSocket-Accept'] != base64_encode(pack('H*', sha1($this->key . self::GUID))))
{
            error_log('Sec-WebSocket-Accept222222 is not correct');
            $this->disconnect();
            return false;
        }
        $this->handshake = true;
        $this->header = $header;
        return true;
    }
错误信息如下：
```
[08-Aug-2018 18:10:22 Asia/Shanghai] PHP Warning:  var_export does not handle circular references in /opt/vekyun_server/Swoole/libs/Swoole/Component/Redis.php on line 100
[08-Aug-2018 18:10:22 Asia/Shanghai] PHP Warning:  var_export does not handle circular references in /opt/vekyun_server/Swoole/libs/Swoole/Component/Redis.php on line 100
[08-Aug-2018 18:10:22 Asia/Shanghai] PHP Warning:  var_export does not handle circular references in /opt/vekyun_server/Swoole/libs/Swoole/Component/Redis.php on line 100
[08-Aug-2018 18:10:22 Asia/Shanghai] PHP Warning:  var_export does not handle circular references in /opt/vekyun_server/Swoole/libs/Swoole/Component/Redis.php on line 100
[08-Aug-2018 18:10:22 Asia/Shanghai] PHP Warning:  var_export does not handle circular references in /opt/vekyun_server/Swoole/libs/Swoole/Component/Redis.php on line 100
[08-Aug-2018 18:10:22 Asia/Shanghai] PHP Warning:  var_export does not handle circular references in /opt/vekyun_server/Swoole/libs/Swoole/Component/Redis.php on line 100
[08-Aug-2018 18:10:22 Asia/Shanghai] PHP Warning:  var_export does not handle circular references in /opt/vekyun_server/Swoole/libs/Swoole/Component/Redis.php on line 100
```

源码如下：

        catch (\RedisException $e)
        {
            \Swoole::$php->log->error(__CLASS__ . " Swoole Redis Exception" . var_export($e, 1));
            return false;
        }
想用SWOOLE取代FPM 和NGINX通信，不知道如何写
WebSocket server 一旦部署到阿里云上，就连接不上了。部署到金山云上有没有问题，本地机器也没问题。

服务端报错如下：
NOTICE  http_onReceive (ERROR 1005): connection[2] is closed.