在升级到.net core 3.1 时在访问oracle表时遇到属性为float和double的栏位会报“实体与表映射出错”，
错误位置在DbBindAccessory第29行，错误内容如下：
SqlSugar.SqlSugarException:“English Message : Entity mapping error.Common Language Runtime detected an invalid program.
Chinese Message : 实体与表映射出错。Common Language Runtime detected an invalid program.”
![image](https://user-images.githubusercontent.com/17999146/72658429-baa9a800-39eb-11ea-956f-2a79d0d3e808.png)
查不到数据的时候，报异常
代码运行在A机器， 
数据库在B机器，指定数据库创建到指定的目录时，目录创建错误。

注：指定的目录所在盘符在代码机器上不存在
`string strReturn=Db.Updateable<sln_fs_engineer>().UpdateColumns(it => new sln_fs_engineer()
                {
                    statusid = 3,
                    rejectdate = DateTime.Now,
                    rejectreason = value.rejectreason ?? ""
                }).Where(q => q.srid == value.srid && q.dispatchid == value.dispatchid && q.engineerid == loginuser.id).ExecuteCommand().ToString();`
rejectreason 字段可为空，于是进行null判断，报错生成SQL如下
`exec sp_executesql N'UPDATE [sln_fs_engineer]  SET
            [statusid] = @Const0 , 
			[rejectdate] = @Const1 , 
			[rejectreason] = ISNULL(@MethodConst2 
			WHERE 
			((( [srid] = @srid4 ) 
			AND ( [dispatchid] = @dispatchid5 )) 
			AND ( [engineerid] = @engineerid6 ))',
			N'@Const0 int,@Const1 datetime,
			@MethodConst2 nvarchar(4000),
			@MethodConst3 nvarchar(4000),
			@srid4 uniqueidentifier,
			@dispatchid5 uniqueidentifier,
			@engineerid6 uniqueidentifier',
			@Const0=3,
			@Const1='2020-01-10 17:34:27.880',
			@MethodConst2=N'拒绝 ',
			@MethodConst3=N'',
			@srid4='00000000-0000-0000-0000-000000000005',
			@dispatchid5='3C5876F1-C09C-41F0-AAEF-445AEB459404',
			@engineerid6='7FD4DE08-0AC0-4939-AF0E-F749EFE9BDDC'`，
后将COALESCE表达式改为三元运算符
生成SQL少值没有[rejectreason] 字段
`exec sp_executesql N'UPDATE [sln_fs_engineer]  SET
            [statusid] = @Const0 , [rejectdate] = @Const1   
			WHERE ((( [srid] = @srid2 ) AND ( [dispatchid] = @dispatchid3 )) 
			AND ( [engineerid] = @engineerid4 ))',
			N'@Const0 int,@Const1 datetime,@srid2 uniqueidentifier,
			@dispatchid3 uniqueidentifier,@engineerid4 uniqueidentifier',
			@Const0=3,@Const1='2020-01-10 17:32:08.277',
			@srid2='00000000-0000-0000-0000-000000000005',
			@dispatchid3='3C5876F1-C09C-41F0-AAEF-445AEB459404',
			@engineerid4='7FD4DE08-0AC0-4939-AF0E-F749EFE9BDDC'`
不清楚为什么，之前我有这样写，一直OK，今天突然遇到了这个问题
PostgreSQLDbMaintenance.cs第175行多了“表名”两个汉字，导致sql语句出错

测试环境：.net core3 数据库 Postgre

请检查 PostgreSQLDbMaintenance.cs 文件
第175行多了“表名”两个汉字，
导致sql语句出错
 sql.Where((st, sj, g) => st.type == v.ToString());v是一个枚举，但是在传递参数，传进去的参数还是枚举，而不是我期待的string
 _db.Db.DbMaintenance.AddColumnRemark(u.DbColumnName,u.TableName, u.ColumnDescription);
这个方法没有实现。
 _db.Db.DbMaintenance.CreateTable(u.Name, u.List);
创建表的时候，字段注释没有添加。
mysql 下测试的。
![QQ图片20200106163034](https://user-images.githubusercontent.com/49091555/71805728-e2bb1200-30a1-11ea-9a0d-938af4a537ca.png)
发现在sqlsugar SqliteDbMaintenance.cs 文件CreateDatabase方法中创建sqlite库文件路径只支持windows环境路径匹配

数据库是mssql2014，sqlsugar版本是5.0.0.12。
这是我的代码。  
var sql2= db.Queryable<BoYuan.Entity.SysLoginLog>()
                 .GroupBy(p =>p.Addtime.Day) 
                .Select(p => p.Addtime.Day).ToSql();
生成sql ：SELECT DateName(Day,[Addtime]) FROM [SysLoginLog] GROUP BY [Addtime] DateName(Day,Result)
GROUP BY后面生成sql有问题的。而select 代码是正确。同样的lambda表达式，GroupBy(p =>p.Addtime.Day) 和Select(p => p.Addtime.Day) 生成sql不一样，希望能解决这个小bug。
