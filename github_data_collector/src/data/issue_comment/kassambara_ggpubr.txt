Hi!

Is there any possibility to define the cut limits for the balloons in the legend?

For example in the first figure, the balloon cuts are c(0, 40, 80, 120, 160), but could these be c(0,50,100,150)?
https://rpkgs.datanovia.com/ggpubr/reference/ggballoonplot.html
draw_score_pvalue_merge<-function(all_score,signture_name){
  pdf(file.path(out_path,paste(signture_name,"merged.pdf",sep = '.')),height = 5,width = 4)
  plot_list<-list()
  for(i in 1:length(all_score)){
    name<-names(all_score)[i]
    x<-all_score[i]
    score_data<-as.data.frame(x)
    colnames(score_data)<-c("atg_signature","label")
    score_data$atg_signature<-as.numeric(score_data$atg_signature)
    p<-ggpubr::ggboxplot(score_data,x = "label",y = "atg_signature",
                         color = "label", palette = "jco",title = name,
                         add = "jitter",shape = "label")
    q<-p + ggpubr::stat_compare_means(method = "t.test")
    plot_list[i]<-q
  }
  ggarrange(plotlist = plot_list,nrow = 4,ncol = 5)
  dev.off()
}

############# problem ########
ggarrange(plotlist = plot_list,nrow = 4,ncol = 5) dose not work.
but plot_list including ggplot objects work.


Dear All,
I am using ggline() to draw some plots.Can someone please tell me how can I increase the thickness of the shapes in legend and in my plot?
This is done usually through geom_point(stroke = 1.5) in ggplot but in ggpubr this doesn't work
Hello everyone,

This is a minor problem but I wanted to check if there is any fix. I am generating two plots in a letter-size PDF (landscape), but I want them to be closer to a square size. If I don't change the margins in the ggplot code I end up with plots too tall, occupying the entire page. However, if I add a margin the ggarrange add the label at the top of the page, and not close to the graph. Is there anyway to solve this?

This is my code:
`pdf(file="hist_p-values.pdf", paper="special", width=11, height=8.5, useDingbats = FALSE)
plot1<-ggplot(res.eb, aes(x=p.ord)) +
  theme(plot.margin = margin(5,0.5,5,0.5, "cm")) +
  geom_histogram(color="black", fill="white", breaks=seq(0, 1, by=0.05))

plot2<-ggplot(res.eb, aes(x=p.mod)) +
  theme(plot.margin = margin(5,0.5,5,0.5, "cm")) +
  geom_histogram(color="black", fill="white", breaks=seq(0, 1, by=0.05))
ggarrange(plot1,plot2, labels = c("A","B"), nrow = 1, ncol = 2)
dev.off()`

[hist_p-values.pdf](https://github.com/kassambara/ggpubr/files/4032919/hist_p-values.pdf)

Best,
Luiz
We are very happy to have found ggpubr; we find it very useful. I've encountered two apparent bugs, however, both having to do with the label= option. I am very new to GitHub and fairly new to R - I already found that what I had reported earlier as a bug was just that I didn’t have the latest version of ggplot2. But what I report here is seen on multiple Windows and Mac machines, under R3.6.2 with ggpubr as the only package installed, so I am confident about the bugs.  Sekhar Ramakrishnan

1. When I use color= option to display bars of subgroups, the labels are displayed in reverse order within each level of the primary grouping variable:
> val8 = c(-10,-20,20,10,-5,-15,15,5)
> grp1 = c("A","A","A","A","B","B","B","B")
> grp2 = c("X","X","Y","Y","X","X","Y","Y")
> df8 = data.frame(val8,grp1,grp2)
> ggbarplot(df8,x="grp1",y="val8",color="grp2",add="mean_sd",label=c("AX-15","AY+15","BX-10","BY+10"), position = position_dodge(0.8))
![image](https://user-images.githubusercontent.com/57604008/71769523-9e3c4480-2ef0-11ea-98c6-796a2fc1fad3.png)
If I use label=TRUE, the labels are correct – the right mean is displayed on each bar:
![image](https://user-images.githubusercontent.com/57604008/71769532-b4e29b80-2ef0-11ea-9b0b-e5c579e235b2.png)
There is likely a bug in the way “label=” is handled when labels are provided instead of settling for the means. This appears serious since wrong labels on the bars can lead to misinterpretations; I stumbled on the bug while trying to display statistical significances.

2. The second, less serious, bug is that the labels on the negative bars are not on top but inside at the bottom of the boxes, even with label=TRUE. 

3. Both problems go away if I create a new group grp12 with four levels:

> val8 = c(-10,-20,20,10,-5,-15,15,5)
> grp12 = c("A-X","A-X","A-Y","A-Y","B-X","B-X","B-Y","B-Y")
> df81 = data.frame(val8,grp12)
> ggbarplot(df81,x="grp12",y="val8",add="mean_sd",label=c("AXminus15","AYplus15","BXminus10","BYplus10"))
![image](https://user-images.githubusercontent.com/57604008/71769545-d9d70e80-2ef0-11ea-828b-08bc46b2b0c4.png)
I believe the negative-bar-label-positioning bug has something to do with "position=position_dodge()". If I add that optional argument, which should have no effect when there are no subgroups, the negative bars' labels go to the inside bottoms:
> ggbarplot(df81,x="grp12",y="val8",add="mean_sd",label=c("AXminus15","AYplus15","BXminus10","BYplus10"), position = position_dodge(0.8))
![image](https://user-images.githubusercontent.com/57604008/71769556-eb201b00-2ef0-11ea-8bd4-0c6d7c6fb907.png)
I hope this report helps Dr Kassambara fix this problem with labeling bars in a two-group situation. As I mention above, ggpubr is a very valuable resource.
Here is my data: [LINK](https://drive.google.com/open?id=1oqLhErpvfEMyer0jUTaTdq8EGgV431L2)
Here is a sample of what I do:

```
    ggplot(data=Temp,aes(x=Site,y=SowDate,fill=Climate)) +
      geom_boxplot() +
      facet_grid(Cultivar~.) +
      stat_compare_means(label='p.signif',method='wilcox.test',
                         label.y=as.Date('1/7/2019',format='%d/%m/%Y'),size=2.2,ref.group='2005',na.rm=T)

Warning messages:
1: Computation failed in `stat_compare_means()`:
missing value where TRUE/FALSE needed 
2: Computation failed in `stat_compare_means()`:
missing value where TRUE/FALSE needed 
3: Computation failed in `stat_compare_means()`:
missing value where TRUE/FALSE needed 
```

I have the same problem when there are more than two groups (here, Climates) in the data.


Is there a way to format more carefully the p-values using angle, hjust, vjust, size, etc? I'm working with facet_wrap and even the size option which is documented does not seem to work.
Thank you in advance for your help, and thanks for developing this very useful package !

# Preface
I am an r-newbie, so I'm not sure whether this is an issue or expected behavior and whether this is a `ggpubr` or `ggplot2` issue.
# Expected behavior
Given a `data.frame` with column names that are non-valid variable names, ggscatter produces a plot given the appropriate x and y column names.
# Observed behavior
Despite being able to access those columns from the `data.frame` in the console, ggscatter chokes if given a data.frame with non-valid column names and the corresponding x and y column names.

# MCVE
Let's make two `data.frames`, one with `check.names = FALSE` (i.e. with non-valid variable name columns) and one with `check.names = TRUE`. We can access columns with data from each of these frames without a problem:
```
> library(ggpubr)
> data_names_not_checked = data.frame('A-A' = 1:10, 'B-B' = 11:20, check.names = FALSE)
> data_names_not_checked[,'A-A']
 [1]  1  2  3  4  5  6  7  8  9 10
> data_checked_names = data.frame('A-A' = 1:10, 'B-B' = 11:20, check.names = TRUE)
> data_checked_names[,'A.A']
 [1]  1  2  3  4  5  6  7  8  9 10
```
When we try to plot the columns using ggscatter, we get an error if we left check.names = TRUE:
```
> ggscatter(data_names_not_checked, x = 'A-A', y = 'B-B')
Error in FUN(X[[i]], ...) : object 'B' not found
> ggscatter(data_checked_names, x=make.names('A-A'), y=make.names('B-B'))
```
If we use the frame with the checked names and the appropriate corrected column names, the function succeeds.

When adding the R2,R, and p-value using stat_cor(method="Pearson"), the default is 

    R2="",R="",pval=""

I would like to change it so that it is in this format:

    R2="",rho="",pval=""
    
Is that possible to do?
I like the convenience of `ggarrange()` for combining multiple ggplot2 plots into a multiple plot when writing reports in R Markdown. However, I found some of my plots overly "squashed" and didn't seem to find in the documentation on how to adjust the size of the product plot. Do I need to use `ggexport()` to save it as a .png file of specified dimension and then use `knitr::include_graphics()` to insert it to my report? I understand that I could set `fig.height=` and `fig.width=` in the chunk options, but that seemed to reduce the plot resolution...