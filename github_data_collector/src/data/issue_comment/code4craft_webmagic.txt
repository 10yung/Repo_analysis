在 xpath 中 使用not contains 语法不支持 不知道有没有什么办法解决,在xsoup 0.3.1版本中的源码中 不支持,可以添加支持或者有其他方法吗
eg:
xpath 
"//*[@class='mod-play-list']/li[not(contains(@class,'item-hold')]/a"


org.jsoup.select.Selector$SelectorParseException: Could not parse query 'li[not(contains(@class,'item-hold')]': unexpected token at 'not(contains(@class,'item-hold')'
	at us.codecraft.xsoup.xevaluator.XPathParser.byFunction(XPathParser.java:260)
	at us.codecraft.xsoup.xevaluator.XPathParser.consumePredicates(XPathParser.java:231)
	at us.codecraft.xsoup.xevaluator.XPathParser.findElements(XPathParser.java:163)
	at us.codecraft.xsoup.xevaluator.XPathParser.parse(XPathParser.java:76)
	at us.codecraft.xsoup.xevaluator.XPathParser.parse(XPathParser.java:408)
	at us.codecraft.xsoup.xevaluator.XPathParser.combinator(XPathParser.java:110)
	at us.codecraft.xsoup.xevaluator.XPathParser.parse(XPathParser.java:74)
	at us.codecraft.xsoup.xevaluator.XPathParser.parse(XPathParser.java:408)
	at us.codecraft.xsoup.Xsoup.compile(Xsoup.java:25)
	at us.codecraft.webmagic.selector.XpathSelector.<init>(XpathSelector.java:21)
	at us.codecraft.webmagic.selector.Selectors.xpath(Selectors.java:32)
	at us.codecraft.webmagic.selector.HtmlNode.xpath(HtmlNode.java:42)
	at com.example.videoparse.spider.yk.YoukuParse.process(YoukuParse.java:37)
	at us.codecraft.webmagic.Spider.onDownloadSuccess(Spider.java:414)
	at us.codecraft.webmagic.Spider.processRequest(Spider.java:406)
	at us.codecraft.webmagic.Spider.access$000(Spider.java:61)
	at us.codecraft.webmagic.Spider$1.run(Spider.java:320)
	at us.codecraft.webmagic.thread.CountableThreadPool$1.run(CountableThreadPool.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)

--------
``` java
    private static final Map<String, FunctionEvaluator> FUNCTION_MAPPING = new HashMap<String, FunctionEvaluator>();
    static {
        FUNCTION_MAPPING.put("contains", new FunctionEvaluator() {
            @Override
            public Evaluator call(String... param) {
                Validate.isTrue(param.length == 2, String.format("Error argument of %s", "contains"));
                return new Evaluator.AttributeWithValueContaining(param[0], param[1]);
            }
        });
        FUNCTION_MAPPING.put("starts-with", new FunctionEvaluator() {
            @Override
            public Evaluator call(String... param) {
                Validate.isTrue(param.length == 2, String.format("Error argument of %s", "starts-with"));
                return new Evaluator.AttributeWithValueStarting(param[0], param[1]);
            }
        });
        FUNCTION_MAPPING.put("ends-with", new FunctionEvaluator() {
            @Override
            public Evaluator call(String... param) {
                Validate.isTrue(param.length == 2, String.format("Error argument of %s", "ends-with"));
                return new Evaluator.AttributeWithValueEnding(param[0], param[1]);
            }
        });
    }
```


<h3>Snyk has created this PR to fix one or more vulnerable packages in the `maven` dependencies of this project.</h3>

#### Changes included in this PR

- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:
    - pom.xml


#### Vulnerabilities that will be fixed
##### With an upgrade:
  - `pom.xml`
      - `com.github.dreamhead:moco-core@0.11.0 > com.github.dreamhead:moco-core@1.0.0` 
          - [Deserialization of Untrusted Data](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-540500)



Check the changes in this PR to ensure they won't cause issues with your project.



------------



**Note:** *You are seeing this because you or someone else with access to this repository has authorized Snyk to open fix PRs.*

For more information:

🧐 [View latest project report](https://app.snyk.io/org/code4craft/project/16c1dcc7-fc11-4cdd-9361-83a5b862fd43)

🛠 [Adjust project settings](https://app.snyk.io/org/code4craft/project/16c1dcc7-fc11-4cdd-9361-83a5b862fd43/settings)

📚 [Read more about Snyk's upgrade and patch logic](https://snyk.io/docs/fixing-vulnerabilities/)

[//]: # (snyk:metadata:{"dependencies":[{"name":"com.github.dreamhead:moco-core","from":"0.11.0","to":"1.0.0"}],"packageManager":"maven","projectPublicId":"16c1dcc7-fc11-4cdd-9361-83a5b862fd43","type":"auto","patch":[],"vulns":["SNYK-JAVA-COMFASTERXMLJACKSONCORE-540500"],"upgrade":["SNYK-JAVA-COMFASTERXMLJACKSONCORE-540500"],"isBreakingChange":true,"env":"prod","prType":"fix"})

期望：返回正确的rawtext 数据 。
实际：返回与请求链接页面不匹配的数据。
复现步骤： 
Spider.create(new DemoProcessor()).addUrl("http://www.fortunechina.com/global500/3/2019").run();
 一个简单的请求获取全球五百强第一条数据 （沃尔玛）  返回的 page 里的 rawtext 是「
<html><head><title>没有查找到公司资料</title></head><body><div>没有查到该公司的资料，请返回上级页面。</div></body></html>」

实际上这个网页打开以后是有数据的  当url 链接改为「http://www.fortunechina.com/global500/3000/2019」时 才应该返回 没有查到资料 因为这是500强页面 没有第3000条数据
  

### 异常

```2019-11-26 17:15:56 [pool-1-thread-1:856713] - [ERROR] process request Request{url=*********} error
java.lang.NullPointerException
	at us.codecraft.webmagic.downloader.HttpClientDownloader.handleResponse(HttpClientDownloader.java:111)
	at us.codecraft.webmagic.downloader.HttpClientDownloader.download(HttpClientDownloader.java:86)
	at us.codecraft.webmagic.Spider.processRequest(Spider.java:404)
	at us.codecraft.webmagic.Spider.access$000(Spider.java:61)
	at us.codecraft.webmagic.Spider$1.run(Spider.java:320)
	at us.codecraft.webmagic.thread.CountableThreadPool$1.run(CountableThreadPool.java:74)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
```

经过调试发现：
httpResponse.getEntity()返回值为null，导致调用getContent的时候出错。
可以通过集成于HttpClientDownloader重载handleResponse方式解决问题。
```
protected Page handleResponse(Request request, String charset, HttpResponse httpResponse, Task task) throws IOException {
        byte[] bytes = IOUtils.toByteArray(httpResponse.getEntity().getContent());
        String contentType = httpResponse.getEntity().getContentType() == null ? "" : httpResponse.getEntity().getContentType().getValue();
        Page page = new Page();
        page.setBytes(bytes);
        if (!request.isBinaryContent()){
            if (charset == null) {
                charset = getHtmlCharset(contentType, bytes);
            }
            page.setCharset(charset);
            page.setRawText(new String(bytes, charset));
        }
        page.setUrl(new PlainText(request.getUrl()));
        page.setRequest(request);
        page.setStatusCode(httpResponse.getStatusLine().getStatusCode());
        page.setDownloadSuccess(true);
        if (responseHeader) {
            page.setHeaders(HttpClientUtils.convertHeaders(httpResponse.getAllHeaders()));
        }
        return page;
    }
```
在使用RedisScheduler的时候，某个机器会发现redis中没有Url了，然后结束了本次采集
spider.isExitWhenComplete()；你试试这个

_Originally posted by @Jratil in https://github.com/code4craft/webmagic/issues/848#issuecomment-461790734_
这个方法的意思是是否在结束后退出
复制第一个爬虫项目，直接运行。直接报ssl版本不对。无语了
请问项目还维护吗？最后一次提交都是两年前的了。。。。
#### Description
This PR fixes one or more vulnerable packages in the `maven` dependencies of this project.
See the [Snyk test report](https://app.snyk.io/org/code4craft/test/github/16c1dcc7-fc11-4cdd-9361-83a5b862fd43/master..snyk-fix-858549a4b6d8c4cb61600052a08ab66d) for more details.

#### Snyk Project: [code4craft/webmagic:webmagic-core/pom.xml](https://app.snyk.io/org/code4craft/project/16c1dcc7-fc11-4cdd-9361-83a5b862fd43)
#### Snyk Organization: [code4craft](https://app.snyk.io/org/code4craft)


#### Changes included in this PR

- Changes to the following files to upgrade the vulnerable dependencies to a fixed version:
    - pom.xml


#### Vulnerabilities that will be fixed
##### With an upgrade:
  - `pom.xml`
      - `com.github.dreamhead:moco-core@0.11.0 > com.github.dreamhead:moco-core@1.0.0` 
          - [Deserialization of Untrusted Data](https://snyk.io/vuln/SNYK-JAVA-COMFASTERXMLJACKSONCORE-472980)



You can read more about Snyk's upgrade and patch logic in [Snyk's documentation](https://snyk.io/docs/using-snyk/).

Check the changes in this PR to ensure they won't cause issues with your project.

Stay secure,
The Snyk team

_**Note**: You are seeing this because you or someone else with access to this repository has authorised Snyk to open Fix PRs. To review the settings for this Snyk project please go to the [project settings page](https://app.snyk.io/org/code4craft/project/16c1dcc7-fc11-4cdd-9361-83a5b862fd43/settings)._

[//]: # (snyk:metadata:{"type":"auto","packageManager":"maven","vulns":["SNYK-JAVA-COMFASTERXMLJACKSONCORE-472980"],"patch":[],"upgrade":["SNYK-JAVA-COMFASTERXMLJACKSONCORE-472980"],"isBreakingChange":true,"env":"prod","dependencies":[{"name":"com.github.dreamhead:moco-core","from":"0.11.0","to":"1.0.0"}],"prType":"fix"})
