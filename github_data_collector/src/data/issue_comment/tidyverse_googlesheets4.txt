Using write_sheets to upload a tibble with no rows (only headers) fails to upload to googlesheets.


```r
# this works
mtcars %>% 
  slice(1) %>% 
 googlesheets4::write_sheet(ss = "1sgHcFyzvHOB2JewWM-F1p8hdLOhugB8pTzrgAwRfgYI", sheet = "test")


# this doesn't work
mtcars %>% 
  slice(0) %>% 
 googlesheets4::write_sheet(ss = "1sgHcFyzvHOB2JewWM-F1p8hdLOhugB8pTzrgAwRfgYI", sheet = "test")
```


Results in the following error:

Error: Client error: (400) INVALID_ARGUMENT
  * Client specified an invalid argument. Check error message and error details for more information.
  * Invalid requests[1].updateSheetProperties: Sorry, it is not possible to delete all non-frozen rows.


Error writing to a googlesheet. Doesn't appear to be an auth problem. Any thoughts appreciated! 

``` r
library(googlesheets4)

df <- data.frame(
     x = 1:3,
     y = letters[1:3]
)
   
sheets_write(data=df, ss="1ll5gaEG1LEDZI5jFgNUI3PfyDZ-cmUcyr7z4l9JPzKQ")
#> Using an auto-discovered, cached token.
#> To suppress this message, modify your code or options to clearly consent to the use of a cached token.
#> See gargle's "Non-interactive auth" vignette for more details:
#> https://gargle.r-lib.org/articles/non-interactive-auth.html
#> The googlesheets4 package is using a cached token for **email removed**
#> Writing to 'googlesheets4 test'
#> Writing to sheet "Sheet5"
#> Error: Client error: (400) INVALID_ARGUMENT
#>   * Client specified an invalid argument. Check error message and error details for more information.
#>   * Invalid value at 'requests[1].update_cells.rows[0].values[0]' (type.googleapis.com/google.apps.sheets.v4.CellData), "x"
#> Invalid value at 'requests[1].update_cells.rows[0].values[1]' (type.googleapis.com/google.apps.sheets.v4.CellData), "y"
#> Invalid value at 'requests[1].update_cells.rows[1].values[0]' (type.googleapis.com/google.apps.sheets.v4.CellData), 1
#> Invalid value at 'requests[1].update_cells.rows[1].values[1]' (type.googleapis.com/google.apps.sheets.v4.CellData), "a"
#> Invalid value at 'requests[1].update_cells.rows[2].values[0]' (type.googleapis.com/google.apps.sheets.v4.CellData), 2
#> Invalid value at 'requests[1].update_cells.rows[2].values[1]' (type.googleapis.com/google.apps.sheets.v4.CellData), "b"
#> Invalid value at 'requests[1].update_cells.rows[3].values[0]' (type.googleapis.com/google.apps.sheets.v4.CellData), 3
#> Invalid value at 'requests[1].update_cells.rows[3].values[1]' (type.googleapis.com/google.apps.sheets.v4.CellData), "c"
#> 
#> Error details:
#>   * Invalid value at 'requests[1].update_cells.rows[0].values[0]' (type.googleapis.com/google.apps.sheets.v4.CellData), "x"
#>   * Invalid value at 'requests[1].update_cells.rows[0].values[1]' (type.googleapis.com/google.apps.sheets.v4.CellData), "y"
#>   * Invalid value at 'requests[1].update_cells.rows[1].values[0]' (type.googleapis.com/google.apps.sheets.v4.CellData), 1
#>   * Invalid value at 'requests[1].update_cells.rows[1].values[1]' (type.googleapis.com/google.apps.sheets.v4.CellData), "a"
#>   * Invalid value at 'requests[1].update_cells.rows[2].values[0]' (type.googleapis.com/google.apps.sheets.v4.CellData), 2
#>   * Invalid value at 'requests[1].update_cells.rows[2].values[1]' (type.googleapis.com/google.apps.sheets.v4.CellData), "b"
#>   * Invalid value at 'requests[1].update_cells.rows[3].values[0]' (type.googleapis.com/google.apps.sheets.v4.CellData), 3
#>   * Invalid value at 'requests[1].update_cells.rows[3].values[1]' (type.googleapis.com/google.apps.sheets.v4.CellData), "c"
```

<sup>Created on 2020-01-15 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
<details><summary>Session info</summary>

``` r
devtools::session_info()
#> - Session info ----------------------------------------------------------
#>  setting  value                       
#>  version  R version 3.5.1 (2018-07-02)
#>  os       Windows 7 x64 SP 1          
#>  system   x86_64, mingw32             
#>  ui       RTerm                       
#>  language (EN)                        
#>  collate  English_United Kingdom.1252 
#>  ctype    English_United Kingdom.1252 
#>  tz       Europe/London               
#>  date     2020-01-15                  
#> 
#> - Packages --------------------------------------------------------------
#>  package       * version    date       lib
#>  assertthat      0.2.1      2019-03-21 [1]
#>  backports       1.1.2      2017-12-13 [1]
#>  base64enc       0.1-3      2015-07-28 [1]
#>  callr           3.0.0      2018-08-24 [1]
#>  cellranger      1.1.0      2016-07-27 [1]
#>  cli             1.0.1      2018-09-25 [1]
#>  crayon          1.3.4      2017-09-16 [1]
#>  curl            3.2        2018-03-28 [1]
#>  desc            1.2.0      2018-05-01 [1]
#>  devtools        2.0.1      2018-10-26 [1]
#>  digest          0.6.18     2018-10-10 [1]
#>  dplyr           0.8.1      2019-05-14 [1]
#>  evaluate        0.12       2018-10-09 [1]
#>  fs              1.3.1      2019-05-06 [1]
#>  gargle          0.4.0.9002 2020-01-14 [1]
#>  glue            1.3.1      2019-03-12 [1]
#>  googledrive     1.0.0      2019-08-19 [1]
#>  googlesheets4 * 0.1.0.9000 2020-01-14 [1]
#>  htmltools       0.3.6      2017-04-28 [1]
#>  httr            1.4.1      2019-08-05 [1]
#>  jsonlite        1.5        2017-06-01 [1]
#>  knitr           1.20       2018-02-20 [1]
#>  lifecycle       0.1.0      2019-08-01 [1]
#>  magrittr        1.5        2014-11-22 [1]
#>  memoise         1.1.0      2017-04-21 [1]
#>  openssl         1.1        2018-11-15 [1]
#>  pillar          1.4.3      2019-12-20 [1]
#>  pkgbuild        1.0.2      2018-10-16 [1]
#>  pkgconfig       2.0.2      2018-08-16 [1]
#>  pkgload         1.0.2      2018-10-29 [1]
#>  prettyunits     1.0.2      2015-07-13 [1]
#>  processx        3.2.0      2018-08-16 [1]
#>  ps              1.2.1      2018-11-06 [1]
#>  purrr           0.2.5      2018-05-29 [1]
#>  R6              2.4.1      2019-11-12 [1]
#>  Rcpp            1.0.1      2019-03-17 [1]
#>  remotes         2.0.2      2018-10-30 [1]
#>  rlang           0.4.2      2019-11-23 [1]
#>  rmarkdown       1.10       2018-06-11 [1]
#>  rprojroot       1.3-2      2018-01-03 [1]
#>  sessioninfo     1.1.1      2018-11-05 [1]
#>  stringi         1.2.4      2018-07-20 [1]
#>  stringr         1.3.1      2018-05-10 [1]
#>  tibble          2.1.3      2019-06-06 [1]
#>  tidyselect      0.2.5      2018-10-11 [1]
#>  usethis         1.4.0      2018-08-14 [1]
#>  withr           2.1.2      2018-03-15 [1]
#>  yaml            2.2.0      2018-07-25 [1]
#>  source                                  
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.0)                          
#>  CRAN (R 3.5.0)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.3)                          
#>  Github (r-lib/gargle@13c2549)           
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.3)                          
#>  Github (tidyverse/googlesheets4@b86b6f7)
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.3)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#>  CRAN (R 3.5.1)                          
#> 
#> [1] C:/packages
#> [2] C:/Program Files/R/R-3.5.1/library
```

</details>


`sheets_sheet_data()` returns a tibble with one row per (work)sheet. Is that name confusing? Specifically, does it suggest that it will return the data **in** the sheet?

Should it be `sheets_sheet_meta()` or `sheets_sheet_get()`?

``` r
library(googlesheets4)

sheets_deauth()

sheets_example("deaths") %>% 
  sheets_sheet_data()
#> # A tibble: 2 x 8
#>   name  index         id type  visible grid_rows grid_columns data  
#>   <chr> <int>      <int> <chr> <lgl>       <int>        <int> <list>
#> 1 arts      0 1210215306 GRID  TRUE         1000           26 <NULL>
#> 2 other     1   28655153 GRID  TRUE         1000           26 <NULL>
```

<sup>Created on 2020-01-08 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0.9001)</sup>

*Note: I am already considering removing the `data` column from the above object. In any case, I either need to populate it or remove it. It's just a placeholder now while I decide.*
Something like:

```
sheets_WHATEVER(..., ss = x[["foofy"]], ...)
```

as a way of addressing the (work)sheet or named range named "foofy" inside the (spread)Sheet identified by `x`.
The current landing page has grown a bit out of control. Too much content.

---

Use this pkgdown feature:

> By default, the top navigation bar (the “navbar”) will contain links to:
>   * The home page, with a “home” icon.
>  * “Get Started”, if you have an article with the same name as the package (e.g., vignettes/pkgdown.Rmd).

This vignette will need to be Rbuildignored, even though it is not below `articles/` because it will use auth and therefore can't be run on CRAN.
Design of current lookup was driven by *reading*, where you want to default to first (visible?) sheet.

But this function works less well for *writing*, where you don't want to overwrite a sheet without clear instructions to do so. Currently finessing with some `tryCatch()`.
Following [this article](https://googlesheets4.tidyverse.org/articles/articles/drive-and-sheets.html) I've tried to log in to my google drive account, so I can set up an app to handle files in my drive account.


I follow this instructions as:

```
library(googledrive)
library(googlesheets4)
```

And then 

```
drive_auth()
sheets_auth(token = drive_token())
```

When executing `drive_auth()`, the explorer pops open with the following error message:


![image](https://user-images.githubusercontent.com/18146781/71732356-f286ec00-2e3e-11ea-81a1-f0e23ba80f5d.png)



> 
> Error: redirect_uri_mismatch
> 
> The redirect URI in the request, http://localhost:1410/, does not match the ones authorized for the OAuth client. To update the authorized redirect URIs, visit: https://console.developers.google.com/apis/credentials/oauthclient/251575276543-m3emm4p2f5c530v183ddgmldget197d5.apps.googleusercontent.com?project=251575276543
I am certain my current approach is too crude / inflexible, but it would help to hear how people push back in order to understand what would be most useful or expected.
It needs to be possible for the user to somehow influence this. Possibilities include attaching this info to columns of the to-be-written data, having some sort of a "write spec", or an argument in writing functions.
The most important (work)sheet functions now exist:

  * `sheets_sheet_data()` and `sheets_sheet_names()` give info about sheets
  * `sheets_sheet_add()` can add one or more sheets
  * `sheets_sheet_delete()` can delete one or more sheets
  * `sheets_write()` (and `sheets_create()`) can write data into sheets (albeit only character, but that will change soon)

The next wave of slightly-less-important worksheet functions are:

  * Rename, hide, move, all via [`UpdateSheetPropertiesRequest`](https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#updatesheetpropertiesrequest). Send an instance of `SheetProperties` and a field mask.
  * Duplicate via [`DuplicateSheetRequest`](https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets/request#duplicatesheetrequest). Send a one-off clump of 4 pcs of info.
  * "Copy to" via [`copyTo` endpoint](https://developers.google.com/sheets/api/reference/rest/v4/spreadsheets.sheets/copyTo)

Worksheet operations that are even lower priority, in terms of replacing existing functionality in googlesheets:
  * Protect
