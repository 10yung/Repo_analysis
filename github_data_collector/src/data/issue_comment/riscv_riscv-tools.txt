Fixes #299.
bash-4.2# automake --version
automake (GNU automake) 1.14
Copyright (C) 2013 Free Software Foundation, Inc.
License GPLv2+: GNU GPL version 2 or later <http://gnu.org/licenses/gpl-2.0.html>
This is free software: you are free to change and redistribute it.
There is NO WARRANTY, to the extent permitted by law.

Written by Tom Tromey <tromey@redhat.com>
       and Alexandre Duret-Lutz <adl@gnu.org>.
bash-4.2# ./build.sh
Starting RISC-V Toolchain build process
OpenOCD build requires at least version 1.14 of automake. Aborting.

Hello,
 
I am trying to build the riscv-tools and the respective toolchain (on the branch priv-1.7 since my project is based on this privileged ISA spec) with no success. While the building itself is completed successfully (using the flags --with-arch=RV64IMA --disable-float --with-abi=lp64) I am unable to actually compile some binaries against the newly installed toolchain. Specifically I get the error from the linker that " can't link hard-float modules with soft-float modules". I suppose that some parts of the libraries I am trying to link are not generated with the intended by me soft floating point emulation?  In the compiling process I am providing the -msoft-float flag. Any help or indications for possible errors would be much appreciated.

Hi I'm quite new to risc-v and read the [unprivileged](https://riscv.org/specifications/) & [privileged](https://riscv.org/specifications/privileged-isa/) specs on riscv.org these days, but now I'm confused with the machine timer registers (section 3.1.10 of privileged spec, relevant issue is #139). **It seems that the `mtime` and `mtimecmp` are the only memory-mapped registers, but I cannot find their address. Where are they?**

Another question is, **are there any other memory-mapped registers like `mtime` and `mtimecmp`?** If answer is no, why we map these two registers into memory instead of using CSR address?
There are some comments in issues https://github.com/riscv/riscv-tools/issues/290#issuecomment-536127889 and https://github.com/riscv/riscv-tools/issues/278#issuecomment-469447363 which say _riscv-tools_ should not be used.
In the case that this is correct, it might be good to add a note to the README stating that status.
I can create a PR for that, but do not want to presume the repo condition.
I have installed riscv-gnu-toolchain in my Ubuntu 18.04.3 and got riscv64-unknown-elf binaries. But i need to install riscv32-unknown-elf binaries. please suggest how can i do that? Thanks in advance.
Hello, I encountered this problem. I have installed complile tools as the github's instructions.
But when I complie the project, I encounter this message , "Fatal error: invalid -march= option: 'rv32imc'"。Now I have no idea how to go on. Thank you for your help.
Hi, I meet an error in runing "./bulid.sh"

Building project riscv-isa-sim
../spike_main/disasm.cc: In constructor ‘disassembler_t::disassembler_t(int)’:
../spike_main/disasm.cc:275:1: note: variable tracking size limit exceeded with -fvar-tracking-assignments, retrying without
 disassembler_t::disassembler_t(int xlen)
 ^~~~~~~~~~~~~~
Installing project riscv-isa-sim
mkdir /home/lijunnan/code/riscv-tools/riscv-tools/include
mkdir /home/lijunnan/code/riscv-tools/riscv-tools/include/fesvr
mkdir /home/lijunnan/code/riscv-tools/riscv-tools/lib
mkdir /home/lijunnan/code/riscv-tools/riscv-tools/lib/pkgconfig

Removing existing riscv-pk/build directory
Configuring project riscv-pk
Building project riscv-pk
gcc: error: unrecognized argument in option ‘-mcmodel=medany’
gcc: note: valid arguments to ‘-mcmodel=’ are: 32 kernel large medium small; did you mean ‘medium’?
make: *** [file.o] Error 1

when I do make, the issue occurs as following;

"
gcc -MMD -MP -Wall -Werror -D__NO_INLINE__ -mcmodel=medany -O2 -std=gnu99 -Wno-unused -Wno-attributes -fno-delete-null-pointer-checks -fno-PIE  -march=rv64imc -mabi=lp64 -DBBL_PAYLOAD=\"bbl_payload\" -DBBL_LOGO_FILE=\"bbl_logo_file\" -I. -I../pk -I../bbl -I../softfloat -I../dummy_payload -I../machine -I../util -c ../pk/file.c
gcc: error: unrecognized argument in option ‘-mcmodel=medany’
gcc: note: valid arguments to ‘-mcmodel=’ are: 32 kernel large medium small
gcc: error: unrecognized argument in option ‘-mabi=lp64’
gcc: note: valid arguments to ‘-mabi=’ are: ms sysv
make: *** [file.o] Error 1
"

FYI, my gcc version is "gcc version 4.8.4 (Ubuntu 4.8.4-2ubuntu1~14.04.4)"

Hope for some advice.

How do I compile debugging tools like spike and pk on the Windows platform