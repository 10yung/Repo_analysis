why the method for updatepbest for mopso-cd and smpso is different?
I'm always frustrated when I try to see the plot of high-dimensional points using parallel coordinates. I wish you could use Nasseh method (https://doi.org/10.1016/j.asoc.2019.105722). Despite the parallel coordinates' popularity, it might not be the best choice as it is not compatible with our previous understanding of up-to-three dimensional points as dots. Using Nasseh method is a proper alternative to parallel coordinates in such cases as it visualizes high-dimensional points as tailed dots. 

**CMaOPs are needed **
At present, most of the constraint problems on platEMO are CMOP. As DAS-CMOP has been updated, I sincerely hope that platEMO can update DAS-CMaOPs.


It could be possible to use the variables in Search Space on metrics functions instead of Pareto Front only.
# Add optional argument to the output function
In order to add more flexibilities to specify the `-outputFcn` parameters, I add some optional arguments to it.  In addition, now, the data storage path in the original output function `GLOBAL.Output` can be specified now.
## Test case 1

Defalut function call style without any output function parameters is compatible.

```matlab
 main('-algorithm', {@MOEAD, 2}, '-problem', @DTLZ1, '-run', 1, '-N', 300,'-evalution', 10000, '-save', 1)
```

## Test case 2

When `mode` is set to 3, you are able to pass a function handle as an output function. 

```matlab
 main('-algorithm', {@MOEAD, 2}, '-problem', @DTLZ1, '-run', 1, '-N', 300,'-evalution', 10000, '-save', 1, '-mode', 3, '-outputFcn', {@test_func, arg1, arg2})
```

Here is an example implementation of `test_func`

```matlab
function test_func(obj, arg1, arg2)
%% obj is GLOBAL object, other is argument
save("test.mat", obj)
end
```

## Test case 3

If you only want to pass parameter to orignal output function to specify the output path, you can replace function handle by `[]`

```matlab
  main('-algorithm', {@MOEAD, 2}, '-problem', @DTLZ1, '-run', 1, '-N', 300,'-evalution', 10000, '-save', 1, '-mode', 3, '-outputFcn', {[], "MyData"})
```

Now the output path is changed to `MyData`
**Describe the bug**
Open application and type `main` in the command line, the GUI will hang and application not responding.

**Expected behavior**
GUI should start regularly.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Desktop (please complete the following information):**
 - OS: Mac OS X 10.14 
 - Browser Chrome
 - Version 22


receive parameter settings from users for metrics function.
For preference-based evolutionary multiobjective optimization, it is necessary to receive parameter settings from users for metric calculation, like R-HV, R-IGD from [1]. While, this is not feasible in present PlatEMO.
[1] R-Metric: Evaluating the Performance of Preference-Based Evolutionary Multiobjective Optimization Using Reference Points
function MOEADGR(Global)
% <algorithm> <H-N>

% Wang, Z., Zhang, Q., Gong, M., & Zhou, A. (2014, July). 
% A Replacement Strategy for Balancing Convergence and Diversity in MOEA/D
% In 2014 IEEE Congress on Evolutionary Computation (CEC) (pp. 2132-2139). IEEE.

% delta --- 0.8 --- The probability of choosing parents locally
% operator      --- DE
%--------------------------------------------------------------------------
% Copyright (c) 2016-2017 BIMK Group. You are free to use the PlatEMO for
% research purposes. All publications which use this platform or any code
% in the platform should acknowledge the use of "PlatEMO" and reference "Ye
% Tian, Ran Cheng, Xingyi Zhang, and Yaochu Jin, PlatEMO: A MATLAB Platform
% for Evolutionary Multi-Objective Optimization [Educational Forum], IEEE
% Computational Intelligence Magazine, 2017, 12(4): 73-87".
%--------------------------------------------------------------------------
`
% Written by Lucas Farias

     %% Parameter setting
    [delta] = Global.ParameterSet(0.8);

    %% Generate the weight vectors
    [W,Global.N] = UniformPoint(Global.N,Global.M);

	% Size of neighborhood
    T = ceil(Global.N/10);
	
    %% Detect the neighbours of each solution
    B 	  = pdist2(W,W);
    [~,B] = sort(B,2);
    B     = B(:,1:T);

    %% Generate random population
    Population = Global.Initialization();
    Z          = min(Population.objs,[],1);
	
    %% Optimization	
    while Global.NotTermination(Population)	
		for i = 1 : Global.N
			% Choose the parents
			if rand < delta
				P = B(i,randperm(size(B,2)));
			else
				P = randperm(Global.N);
			end

			% Generate an offspring
			Offspring = Global.Variation(Population([i,P(1:2)]),1,@DE);

			% Update the ideal point
			Z = min(Z,Offspring.obj);
			
			% Global Replacement
			all_g_TCH=max(abs((Offspring.obj-repmat(Z,Global.N,1)).*W),[],2);
			best_g_TCH=min(all_g_TCH);
			Chosen_one = find(all_g_TCH(:,1)==best_g_TCH);
			P = B(Chosen_one(1),randperm(size(B,2)));
			
			% Update the solutions in P by Tchebycheff approach
			g_old = max(abs(Population(P).objs-repmat(Z,length(P),1)).*W(P,:),[],2);
			g_new = max(repmat(abs(Offspring.obj-Z),length(P),1).*W(P,:),[],2);
			Population(P(find(g_old>=g_new,T))) = Offspring;			
		end
        end
end`   


function Score = Hausdorff(PopObj,PF)
% <metric> <max>
% Averaged Hausdorff Distance

%O. Schutze, X. Esquivel, A. Lara, and C. A. C. Coello, 
%“Using the averaged hausdorff distance as a performance 
%measure in evolutionary multiobjective optimization,” 
%IEEE Trans. Evol. Comp, vol. 16, pp. 504–522, Aug. 2012.
%--------------------------------------------------------------------------
% Copyright (c) 2016-2017 BIMK Group. You are free to use the PlatEMO for
% research purposes. All publications which use this platform or any code
% in the platform should acknowledge the use of "PlatEMO" and reference "Ye
% Tian, Ran Cheng, Xingyi Zhang, and Yaochu Jin, PlatEMO: A MATLAB Platform
% for Evolutionary Multi-Objective Optimization [Educational Forum], IEEE
% Computational Intelligence Magazine, 2017, 12(4): 73-87".
%--------------------------------------------------------------------------

% Written by Thiago Santos professor.ufop.br/santostf

    cGD  = GD(PopObj,PF);
    cIGD = IGD(PopObj,PF);

    Score    = max(cGD,cIGD);
end