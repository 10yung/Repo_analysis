
add JVM Metrics to metrics module for  InfluxDb
In the open-banking demo application, the accounts will call the balances and transactions for more information. I have the following calls in the constructor of the handler. 

```
            transactionHost = cluster.serviceToUrl("https", "com.networknt.ob.transactions-3.1.2", tag, null);
            balanceHost = cluster.serviceToUrl("https", "com.networknt.ob.balances-3.1.2", tag, null);

```
And got the error documented in https://github.com/open-banking/light-config-test/issues/3

After switching to http2 to true, everything works. 
I made a mistake trying to put BOM files into a separate repository. This pull request is what I should have done since the beginning. I thought that the Light platform was split into a bunch of different repositories, but there's only a few main multi-module projects and various libraries (which are kind of independent). Most of my Microservice experience is with Gradle and our application was split into a bunch of different repositories instead of having a few repositories filled with a bunch of modules. 

Tonight I've started to have second thoughts about the way my team decided to structure our application. This experience has been enlightening.

The work I've done in this pull request is based on strategies used in the Spring and Jersey projects. Their project structures are very similar to the light-4j and light-rest-4j projects. 

Check the bom/README.md file for documentation on the strategy I've taken.
I have created a new module named acme-client, which will be used for automated certificate management.
[RFC DOC](https://github.com/networknt/light-rfcs/blob/d824f95b2d7c663ee18c4e74552d8f93592ce2bb/light-4j/0020-acme_integration_for_automated_certificate_issuance.md)
Hi,
Could you provide specific steps on how to enable compression for rest endpoint?
Maybe a tutorial / example how to do it step by step for light-4j v2.x...
I have read this FAQ: [https://doc.networknt.com/faq/gzip-response/#how-to-compress-the-response-with-gzip](url)
but I don't understand how to apply this in my test app:
1) what config files to change?
2) need to create some provider & how to register it?

need to review and refactor the Consul workflow
cache urls = registry.discover(subscribeUrl); when cached urls are empty
The OpenTracing and OpenCensus have been merged into a new project OpenTelemetry. It is still in heavy development and we will switch to it once it is ready. 
Hi NetworkNt Team, 
Is there any standard light4j module which can be used to consume messages from MQ.

Thanks
Sathish
Hi guys, have you tried already GraalVM native image compilation, it doesn't work with Spring for example well due to possibly lot of reflection usage which is not at moment still not fully supported by GraalVM, but maybe here is situation different.