- Have inserted in post a block products-by-attribute and selected values.
- Saved and published post.
- Went over and deleted attribute value because I changed my mind.
- Went back to post and block is hidden, so I created new block products-by-attribute and selected another attribute.

Only last block with products can be seen in post edit screen. But if you switch from visual editor to code editor in post edit, you see two entries. First created block products-by-attribute is there and last block products-by-attribute is there too.

If a products-by-attribute block isn't longer value, it gets hidden in visual editor but still is in code and gets rendered in frontend.

![Bildschirmfoto 2020-01-18 um 22 33 25](https://user-images.githubusercontent.com/3390880/72670828-a8a72400-3a42-11ea-820e-47edb4b17adf.png)

![Bildschirmfoto 2020-01-18 um 22 33 50](https://user-images.githubusercontent.com/3390880/72670829-acd34180-3a42-11ea-849e-2c0ae4cb411b.png)


We started use woocommerce and we need to integrate it with a custom theme that is using bootstrap 4. After reading the documentations we started to modify the templatesby using the hooks and by overriding all the default templates. What we are not able to do is to style the forms, we need to add the bs4 classes to the inputs fields and to the labels, but we didn't found any documentation or hooks about this. Also the sidebar are displayed In the wrong place and will not fit our needings, nor docs about we found. 

Can anyone help with these two modification with a suggestion about what hooks to use and what file we need to modify for the sidebar and forms?
I've a problem. I can't sent any emails anymore after updating to WordPress 5.3.2 and PHP 7.4.1. Following error occurs:

`phpmailerException: Message body empty in /Applications/MAMP/htdocs/wp-includes/class-phpmailer.php:1272`

So I've did some research and eded up in following function: 

```
public function style_inline( $content ) {
	if ( in_array( $this->get_content_type(), array( 'text/html', 'multipart/alternative' ), true ) ) {
		ob_start();
		wc_get_template( 'emails/email-styles.php' );
		$css = apply_filters( 'woocommerce_email_styles', ob_get_clean(), $this );
		if ( $this->supports_emogrifier() ) {
			$emogrifier_class = '\\Pelago\\Emogrifier';
			if ( ! class_exists( $emogrifier_class ) ) {
				include_once dirname( dirname( __FILE__ ) ) . '/libraries/class-emogrifier.php';
			}
			try {
				error_log($content); // <-- Content is still there
				$emogrifier = new $emogrifier_class( $content, $css );
				$content    = $emogrifier->emogrify();
				error_log($content); // <- Content is gone
			} catch ( Exception $e ) {
				$logger = wc_get_logger();
				$logger->error( $e->getMessage(), array( 'source' => 'emogrifier' ) );
			}
		} else {
			$content = '<style type="text/css">' . $css . '</style>' . $content;
		}
	}
	return $content;
}
```

I don't know exactly why the content is gone but for some reason the emogrifier returns nothing. After switching back to PHP 7.3.1 with WP 5.3.2, everything works as expected.
Added filter to change the "Return to Shop" button text. We can add a filter in our plugin or theme to rename the "Return to Shop" button texts with whatever button text we want like, Go Shop or Buy Some Tees, etc...

You can test this commit by adding a filter to a theme or a plugin and pass the button texts of your choice.

### All Submissions:

* [x] Have you followed the [WooCommerce Contributing guideline](https://github.com/woocommerce/woocommerce/blob/master/.github/CONTRIBUTING.md)?
* [x] Does your code follow the [WordPress' coding standards](https://make.wordpress.org/core/handbook/best-practices/coding-standards/)?
* [x] Have you checked to ensure there aren't other open [Pull Requests](../../pulls) for the same update/change?

<!-- Mark completed items with an [x] -->

<!-- You can erase any parts of this template not applicable to your Pull Request. -->

### Changes proposed in this Pull Request:

<!-- Describe the changes made to this Pull Request and the reason for such changes. -->

Closes # .

### How to test the changes in this Pull Request:

1.
2.
3.

### Other information:

* [x] Have you added an explanation of what your changes do and why you'd like us to include them?
* [x] Have you written new tests for your changes, as applicable?
* [x] Have you successfully run tests with your changes locally?

<!-- Mark completed items with an [x] -->

### Changelog entry

> Enter a summary of all changes on this Pull Request. This will appear in the changelog if accepted.

### All Submissions:

* [x] Have you followed the [WooCommerce Contributing guideline](https://github.com/woocommerce/woocommerce/blob/master/.github/CONTRIBUTING.md)?
* [x] Does your code follow the [WordPress' coding standards](https://make.wordpress.org/core/handbook/best-practices/coding-standards/)?
* [x] Have you checked to ensure there aren't other open [Pull Requests](../../pulls) for the same update/change?

### Changes proposed in this Pull Request:

Allow the `woocommerce_quantity_input()` function and the `quantity-input.php` template to support a placeholder attribute.

Closes # .

### How to test the changes in this Pull Request:

Use the following snippet:

```
function kia_add_placeholder_attr_to_inputs( $args, $product ) {
	$args['placeholder'] = '0';
	$args['input_value'] = '';
	return $args;
}
add_filter( 'woocommerce_quantity_input_args', 'kia_add_placeholder_attr_to_inputs', 10, 2  );
```

A product should now an empty quantity input with a 0 placeholder. This is not that practical, but it shows it works. A place where this would be beneficial in core would be in grouped products. I can add a commit for that if you are open to it.

In Mix and Match I've had customers complain about needing to remove the 0 before being able to type in a value and I agree that's not good UX.

https://share.getcloudapp.com/qGuD7mkm

### Other information:

* [x] Have you added an explanation of what your changes do and why you'd like us to include them?
* [ ] Have you written new tests for your changes, as applicable?
* [x] Have you successfully run tests with your changes locally?

<!-- Mark completed items with an [x] -->

### Changelog entry

> Add support for placeholder attribute in quantity inputs.

### All Submissions:

* [ ] Have you followed the [WooCommerce Contributing guideline](https://github.com/woocommerce/woocommerce/blob/master/.github/CONTRIBUTING.md)?
* [ ] Does your code follow the [WordPress' coding standards](https://make.wordpress.org/core/handbook/best-practices/coding-standards/)?
* [ ] Have you checked to ensure there aren't other open [Pull Requests](../../pulls) for the same update/change?

<!-- Mark completed items with an [x] -->

<!-- You can erase any parts of this template not applicable to your Pull Request. -->

### Changes proposed in this Pull Request:

<!-- Describe the changes made to this Pull Request and the reason for such changes. -->

Closes # .

### How to test the changes in this Pull Request:

1.
2.
3.

### Other information:

* [ ] Have you added an explanation of what your changes do and why you'd like us to include them?
* [ ] Have you written new tests for your changes, as applicable?
* [ ] Have you successfully run tests with your changes locally?

<!-- Mark completed items with an [x] -->

### Changelog entry

> Enter a summary of all changes on this Pull Request. This will appear in the changelog if accepted.

**Describe the bug**

We have all our products having value as "0" for "Backorders allowed?" yet we started receiving back orders for out of stock products.

 
**To Reproduce**
Steps to reproduce the behavior:
1. Go to Products
2. Choose any Variable Product
3. Go to its Variation and expand the variation 
4. Value in Allow backorders? is already set to : Do Not Allow 


**Screenshots**
![Back_Order](https://user-images.githubusercontent.com/59966260/72533837-7d73d780-387e-11ea-9019-705beb3e4179.png)
![Product_1](https://user-images.githubusercontent.com/59966260/72533852-84024f00-387e-11ea-9b54-8b1a805cbd5a.png)
![Product_2](https://user-images.githubusercontent.com/59966260/72533863-8b295d00-387e-11ea-81e8-4554d0f91ef3.png)


**Expected behavior**

No back order get created for out of stock items 

**Isolating the problem (mark completed items with an [x]):**
- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.
- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).
- [x] I can reproduce this bug consistently using the steps above.

**WordPress Environment**
Production
```
`
### WordPress Environment ###

WordPress address (URL): https://nomadstory.com
Site address (URL): https://nomadstory.com
WC Version: 3.8.0
REST API Version: ✔ 1.0.2
Log Directory Writable: ✔
WP Version: ❌ 5.3 - There is a newer version of WordPress available (5.3.2)
WP Multisite: –
WP Memory Limit: 256 MB
WP Debug Mode: –
WP Cron: ✔
Language: en_US
External object cache: –

### Server Environment ###

Server Info: nginx/1.17.5
PHP Version: 7.3.4-1+ubuntu16.04.1+deb.sury.org+3
PHP Post Max Size: 128 MB
PHP Time Limit: 300
PHP Max Input Vars: 10000
cURL Version: 7.47.0
OpenSSL/1.0.2g

SUHOSIN Installed: –
MySQL Version: 5.5.5-10.4.6-MariaDB-1:10.4.6+maria~xenial
Max Upload Size: 128 MB
Default Timezone is UTC: ✔
fsockopen/cURL: ✔
SoapClient: ✔
DOMDocument: ✔
GZip: ✔
Multibyte String: ✔
Remote Post: ✔
Remote Get: ✔

### Database ###

WC Database Version: 3.8.0
WC Database Prefix: wp_
MaxMind GeoIP Database: ✔
Total Database Size: 41.45MB
Database Data Size: 25.97MB
Database Index Size: 15.48MB
wp_woocommerce_sessions: Data: 0.31MB + Index: 0.02MB + Engine InnoDB
wp_woocommerce_api_keys: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_woocommerce_attribute_taxonomies: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_woocommerce_downloadable_product_permissions: Data: 0.02MB + Index: 0.06MB + Engine InnoDB
wp_woocommerce_order_items: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_woocommerce_order_itemmeta: Data: 0.14MB + Index: 0.11MB + Engine InnoDB
wp_woocommerce_tax_rates: Data: 0.02MB + Index: 0.06MB + Engine InnoDB
wp_woocommerce_tax_rate_locations: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_woocommerce_shipping_zones: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_woocommerce_shipping_zone_locations: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_woocommerce_shipping_zone_methods: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_woocommerce_payment_tokens: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_woocommerce_payment_tokenmeta: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_woocommerce_log: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_aiowps_events: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_aiowps_failed_logins: Data: 0.05MB + Index: 0.00MB + Engine InnoDB
wp_aiowps_global_meta: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_aiowps_login_activity: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_aiowps_login_lockdown: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_aiowps_permanent_block: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_commentmeta: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_comments: Data: 3.02MB + Index: 6.14MB + Engine InnoDB
wp_failed_jobs: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_gf_draft_submissions: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_gf_entry: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_gf_entry_meta: Data: 0.08MB + Index: 0.05MB + Engine InnoDB
wp_gf_entry_notes: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_gf_form: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_gf_form_meta: Data: 0.05MB + Index: 0.00MB + Engine InnoDB
wp_gf_form_revisions: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_gf_form_view: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_instagram_tags: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_instagram_tags_media: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_links: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_mailchimp_carts: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_mailchimp_jobs: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_options: Data: 4.20MB + Index: 0.19MB + Engine InnoDB
wp_pimwick_gift_card: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_pimwick_gift_card_activity: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_postmeta: Data: 8.16MB + Index: 4.05MB + Engine InnoDB
wp_posts: Data: 7.05MB + Index: 3.38MB + Engine InnoDB
wp_queue: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_termmeta: Data: 0.08MB + Index: 0.06MB + Engine InnoDB
wp_terms: Data: 0.06MB + Index: 0.03MB + Engine InnoDB
wp_term_relationships: Data: 1.03MB + Index: 0.23MB + Engine InnoDB
wp_term_taxonomy: Data: 0.06MB + Index: 0.06MB + Engine InnoDB
wp_usermeta: Data: 0.13MB + Index: 0.14MB + Engine InnoDB
wp_users: Data: 0.02MB + Index: 0.05MB + Engine InnoDB
wp_wc_admin_notes: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_wc_admin_note_actions: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_wc_category_lookup: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_wc_customer_lookup: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_wc_download_log: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_wc_order_coupon_lookup: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_wc_order_product_lookup: Data: 0.02MB + Index: 0.06MB + Engine InnoDB
wp_wc_order_stats: Data: 0.02MB + Index: 0.05MB + Engine InnoDB
wp_wc_order_tax_lookup: Data: 0.02MB + Index: 0.03MB + Engine InnoDB
wp_wc_product_meta_lookup: Data: 0.09MB + Index: 0.09MB + Engine InnoDB
wp_wc_tax_rate_classes: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_wc_webhooks: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_woof_query_cache: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_yoast_seo_links: Data: 0.02MB + Index: 0.02MB + Engine InnoDB
wp_yoast_seo_meta: Data: 0.48MB + Index: 0.00MB + Engine InnoDB
wp_ywcars_messagemeta: Data: 0.02MB + Index: 0.00MB + Engine InnoDB
wp_ywcars_messages: Data: 0.02MB + Index: 0.00MB + Engine InnoDB

### Security ###

Secure connection (HTTPS): ✔
Hide errors from visitors: ✔

### Active Plugins (26) ###

Gravity Forms: by rocketgenius – 2.4.6.15
All In One WP Security: by Tips and Tricks HQ
Peter Petreski
Ruhul
Ivy – 4.4.2

Back In Stock Notifier for WooCommerce | WooCommerce Waitlist Pro: by codewoogeek – 1.9.1
Cookie Notice: by dFactory – 1.2.48
WC Price Filter Compatible with multi currency: by Mustafa Aboulfootuh – 1.0
Designer and Collection Widget: by Mustafa Aboulfootuh – 1.0
Facebook for WooCommerce: by Facebook – 1.9.15 – Not tested with the active version of WooCommerce
Instagram Shop Feed Extension for WooCommerce: by WebKul – 1.0.0 – Not tested with the active version of WooCommerce
Intercom: by Intercom – 2.6.3
Mailchimp for WooCommerce: by Mailchimp – 2.3 – Not tested with the active version of WooCommerce
Max Mega Menu: by megamenu.com – 2.7.3
WooCommerce Onsale Page: by wpgenie – 1.0.10 – Not tested with the active version of WooCommerce
Product Card Widget: by Mustafa Aboulfootuh – 1.0
PW WooCommerce Gift Cards Pro: by Pimwick
LLC – 1.169

InXpress Shipping Extension: by InXpress – 3.0.5 – Not tested with the active version of WooCommerce
WooCommerce Admin: by WooCommerce – 0.22.0
WooCommerce Stripe Gateway: by WooCommerce – 4.3.1
WooCommerce Google Analytics Pro: by SkyVerge – 1.8.6
WooCommerce Multi-currency: by TIV.NET INC – 1.16.0 – Not tested with the active version of WooCommerce
WooCommerce - ShipStation Integration: by WooCommerce – 4.1.30 – 4.1.31 is available
WooCommerce Social Login: by SkyVerge – 2.6.5 – Not tested with the active version of WooCommerce
WooCommerce: by Automattic – 3.8.0 – 3.8.1 is available
Yoast SEO Premium: by Team Yoast – 12.6.1
WP Mail SMTP: by WPForms – 1.7.1
Yoast SEO: WooCommerce: by Team Yoast – 12.4
YITH Advanced Refund System for WooCommerce Premium: by YITH – 1.1.8

### Inactive Plugins (5) ###

Akismet Anti-Spam: by Automattic – 4.1.3
Jetpack by WordPress.com: by Automattic – 7.9.1
Show Current Template: by JOTAKI Taisuke – 0.3.0
Smush: by WPMU DEV – 3.3.2
WooCommerce Services: by Automattic – 1.22.1 – 1.22.2 is available

### Must Use Plugins (1) ###

Kinsta Must-use Plugins: by Kinsta Team – 2.3.2

### Settings ###

API Enabled: ✔
Force SSL: –
Currency: USD ($)
Currency Position: left
Thousand Separator: ,
Decimal Separator: .
Number of Decimals: 0
Taxonomies: Product Types: external (external)
grouped (grouped)
pw gift card (pw-gift-card)
simple (simple)
variable (variable)

Taxonomies: Product Visibility: exclude-from-catalog (exclude-from-catalog)
exclude-from-search (exclude-from-search)
featured (featured)
outofstock (outofstock)
rated-1 (rated-1)
rated-2 (rated-2)
rated-3 (rated-3)
rated-4 (rated-4)
rated-5 (rated-5)

Connected to WooCommerce.com: –

### WC Pages ###

Shop base: #5 - /just-in/
Cart: #6 - /cart/
Checkout: #7 - /checkout/
My account: #8 - /my-account/
Terms and conditions: #8166 - /terms-conditions/

### Theme ###

Name: Storefront Nomad Child
Version: 2.5.1
Author URL: https://robustastudio.com/
Child Theme: ✔
Parent Theme Name: Storefront
Parent Theme Version: 2.5.1 – 2.5.3 is available
Parent Theme Author URL: https://woocommerce.com/
WooCommerce Support: ✔

### Templates ###

Overrides: storefront-nomad-child/woocommerce/archive-product.php
storefront-nomad-child/woocommerce/cart/cart-totals.php
storefront-nomad-child/woocommerce/cart/cart.php
storefront-nomad-child/woocommerce/cart/mini-cart.php
storefront-nomad-child/woocommerce/cart/proceed-to-checkout-button.php
storefront-nomad-child/woocommerce/checkout/cart-errors.php
storefront-nomad-child/woocommerce/checkout/form-billing.php
storefront-nomad-child/woocommerce/checkout/form-checkout.php
storefront-nomad-child/woocommerce/checkout/form-coupon.php
storefront-nomad-child/woocommerce/checkout/form-shipping.php
storefront-nomad-child/woocommerce/checkout/payment.php
storefront-nomad-child/woocommerce/checkout/review-order.php
storefront-nomad-child/woocommerce/checkout/thankyou.php
storefront-nomad-child/woocommerce/content-single-product.php
storefront-nomad-child/woocommerce/emails/customer-completed-order.php
storefront-nomad-child/woocommerce/emails/customer-new-account.php
storefront-nomad-child/woocommerce/emails/customer-on-hold-order.php
storefront-nomad-child/woocommerce/emails/customer-processing-order.php
storefront-nomad-child/woocommerce/emails/customer-refunded-order.php
storefront-nomad-child/woocommerce/emails/customer-reset-password.php
storefront-nomad-child/woocommerce/emails/email-footer.php
storefront-nomad-child/woocommerce/emails/email-order-details.php
storefront-nomad-child/woocommerce/global/quantity-input.php
storefront-nomad-child/woocommerce/loop/orderby.php
storefront-nomad-child/woocommerce/myaccount/dashboard.php
storefront-nomad-child/woocommerce/myaccount/form-add-payment-method.php
storefront-nomad-child/woocommerce/myaccount/form-edit-account.php
storefront-nomad-child/woocommerce/myaccount/form-edit-address.php
storefront-nomad-child/woocommerce/myaccount/form-login.php
storefront-nomad-child/woocommerce/myaccount/form-lost-password.php
storefront-nomad-child/woocommerce/myaccount/form-reset-password.php
storefront-nomad-child/woocommerce/myaccount/lost-password-confirmation.php
storefront-nomad-child/woocommerce/myaccount/my-address.php
storefront-nomad-child/woocommerce/myaccount/navigation.php
storefront-nomad-child/woocommerce/myaccount/orders.php
storefront-nomad-child/woocommerce/myaccount/payment-methods.php
storefront-nomad-child/woocommerce/myaccount/view-order.php
storefront-nomad-child/woocommerce/notices/error.php
storefront-nomad-child/woocommerce/order/order-details-customer.php
storefront-nomad-child/woocommerce/order/order-details-item.php
storefront-nomad-child/woocommerce/order/order-details.php
storefront-nomad-child/woocommerce/product-searchform.php
storefront-nomad-child/woocommerce/single-product/add-to-cart/simple.php
storefront-nomad-child/woocommerce/single-product/add-to-cart/variable.php
storefront-nomad-child/woocommerce/single-product/product-image.php
storefront-nomad-child/woocommerce/single-product/tabs/tabs.php


### Social Login ###

Facebook: ✔ Available
Twitter: Disabled
Google: ✔ Available
Amazon: Disabled
Linkedin: Disabled
Paypal: Disabled
Instagram: Disabled
Disqus: Disabled
Yahoo: Disabled
Vkontakte: Disabled

### Multi-currency ###

currency_symbol_AED: (AED)
currency_symbol_AUD: $
currency_symbol_BHD: (BHD)
currency_symbol_BRL: R$
currency_symbol_CAD: C$
currency_symbol_CNY: ¥
currency_symbol_EGP: (EGP)
currency_symbol_EUR: €
currency_symbol_GBP: £
currency_symbol_IDR: Rp
currency_symbol_INR: ₹
currency_symbol_JOD: (JOD)
currency_symbol_JPY: ¥
currency_symbol_KWD: (KWD)
currency_symbol_MXN: $
currency_symbol_MYR: RM
currency_symbol_OMR: (OMR)
currency_symbol_QAR: (QAR)
currency_symbol_SAR: (SAR)
currency_symbol_SGD: $
currency_symbol_THB: ฿
currency_symbol_TRY: ₺
currency_symbol_USD: $
currency_symbol_ZAR: R
enabled_currencies: a:1:{i:0;s:3:"USD";}
fee_percent: 0
fixed_rate_AED: 1
fixed_rate_AUD: 1
fixed_rate_BHD: 1
fixed_rate_BRL: 1
fixed_rate_CAD: 1.32
fixed_rate_CNY: 1
fixed_rate_EGP: 17
fixed_rate_EUR: 0.9
fixed_rate_GBP: 1
fixed_rate_IDR: 1
fixed_rate_INR: 1
fixed_rate_JOD: 1
fixed_rate_JPY: 1
fixed_rate_KWD: 1
fixed_rate_MXN: 1
fixed_rate_MYR: 1
fixed_rate_OMR: 1
fixed_rate_QAR: 1
fixed_rate_SAR: 1
fixed_rate_SGD: 1
fixed_rate_THB: 1
fixed_rate_TRY: 1
fixed_rate_ZAR: 1
log_level: error
price_charm: 0
price_format_AED: %2$s %1$s
price_format_AUD: %1$s %2$s
price_format_BHD: %2$s %1$s
price_format_BRL: %1$s %2$s
price_format_CAD: %1$s %2$s
price_format_CNY: %1$s %2$s
price_format_EGP: %2$s %1$s
price_format_EUR: %1$s %2$s
price_format_GBP: %1$s %2$s
price_format_IDR: %1$s %2$s
price_format_INR: %1$s %2$s
price_format_JOD: %2$s %1$s
price_format_JPY: %1$s %2$s
price_format_KWD: %2$s %1$s
price_format_MXN: %1$s %2$s
price_format_MYR: %1$s %2$s
price_format_OMR: %2$s %1$s
price_format_QAR: %2$s %1$s
price_format_SAR: %2$s %1$s
price_format_SGD: %1$s %2$s
price_format_THB: %1$s %2$s
price_format_TRY: %1$s %2$s
price_format_USD: %1$s %2$s
price_format_ZAR: %1$s %2$s
rates: array(168)
rates_provider_id: Currencylayer
rates_retrieval_status: 1
rates_timestamp: 1579141505
round_to: 0.01
version: 1.16.0

### Action Scheduler ###

Complete: 3,183
Oldest: 2019-12-16 14:41:38 +0000
Newest: 2020-01-16 14:39:34 +0000

Pending: 2
Oldest: 2020-01-16 15:05:35 +0000
Newest: 2020-01-16 15:05:35 +0000

Canceled: 82
Oldest: 2019-12-16 20:23:04 +0000
Newest: 2020-01-16 14:01:17 +0000

In-progress: 0
Oldest: –
Newest: –

Failed: 0
Oldest: –
Newest: –

`
```
</details>

In the days of mobile-first everything, WooCommerce should have the default styles for mobile and the overrides for devices wider than 768px.

Also, the value of the layout break should be configurable, so that instead of `(min-width: 769px)`, the wide-screen stylesheet can be loaded with 768px, which MANY people will choose.
**Describe the bug**

I am trying to change language for woocommerce from english to polish. I have tried putting woocommerce-pl_PL.mo & .po files into wp-content/languages/plugins/ and woocommerce-pl_PL.mo & .po files to woocommerce/i18n/languages/ and still no success.

I've also tried to use Loco Translate and still nothing.

Could you help?

**To Reproduce
Steps to reproduce the behavior:**

Please check url:
https://uroda365.pl/

**Screenshots**

![Zrzut ekranu 2020-01-15 o 23 49 51](https://user-images.githubusercontent.com/59939785/72478422-4b1c9880-37f2-11ea-88ee-cb3c85a6d9d4.png)
![Zrzut ekranu 2020-01-15 o 23 50 00](https://user-images.githubusercontent.com/59939785/72478423-4b1c9880-37f2-11ea-813e-679a5712c703.png)
![Zrzut ekranu 2020-01-15 o 23 50 18](https://user-images.githubusercontent.com/59939785/72478424-4bb52f00-37f2-11ea-8d43-d611ce537a76.png)


**Expected behavior**

Woocommerce in PL language.

**Isolating the problem (mark completed items with an [x]):**

 I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.
[ x] This bug happens with a default WordPress theme active, or Storefront.
[x ] I can reproduce this bug consistently using the steps above.
WordPress Environment

**Szczegóły**
``` Copy and paste the system status report from **WooCommerce > System Status** in WordPress admin. ```
N/A

**Describe the bug**
For some data variables in a product an array can be used, for example for the upsell_ids. When we remove elements from this array it reverts back to the old state after saving the product. So if we continue using this product in code it will contain incorrect data.

This was originally brought to light in the Bookings extension, see: https://github.com/woocommerce/woocommerce-bookings/issues/2780

**To Reproduce**
Steps to reproduce the behavior:
1. Create a simple product with multiple upsell products assigned
2. Get the ID of this product to be able to reproduce it with some code as follows:

```
$product = wc_get_product( 581 );
$upsells = $product->get_upsell_ids();
var_dump( 'initial', $upsells );
$remove = array_pop( $upsells );

$product->set_upsell_ids( $upsells );
var_dump( 'after update', $product->get_upsell_ids(), $product->get_changes() );

$product->save();
var_dump( 'after save', $product->get_upsell_ids() );

$product->save();
var_dump( 'second save', $product->get_upsell_ids() );
```

Initially `get_upsell_ids` will return: `array(2) { [0]=> int(170), [1]=> int(8) }`
After removing and updating it will return: `array(1) { [0]=> int(170) }`
After the first save it will return: `array(2) { [0]=> int(170), [1]=> int(8) }`

It will save the product correctly, but won't replace the data in the object correctly after saving. When saving the second time it won't do anything because the changes array is empty.

**Expected behavior**
We would expect the product option to always contain the latest information. The reason it contains the older information is because a recursive replace is done, see: https://github.com/woocommerce/woocommerce/blob/3.8.1/includes/abstracts/abstract-wc-data.php#L719

This code works fine when adding elements to an array. But when removing elements from an array it doesn't update them correctly. Which is because of the following behaviour:

> 1. If a key from the first array exists in the second array, its value will be replaced by the value from the second array.
> 2. If the key exists in the second array, and not the first, it will be created in the first array.
> 3. If a key only exists in the first array, it will be left as is.

The third point is where it doesn't remove the data from the array. One suggestion was to replace the function call with `array_replace`. Does that cause any other problems or is there a specific need to recursively walk through the arrays?

**Isolating the problem (mark completed items with an [x]):**
- [x] I have deactivated other plugins and confirmed this bug occurs when only WooCommerce plugin is active.
- [x] This bug happens with a default WordPress theme active, or [Storefront](https://woocommerce.com/storefront/).
- [x] I can reproduce this bug consistently using the steps above.

**WordPress Environment**
<details>

```
WordPress 5.3.2
WooCommerce 3.8.1
```
</details>
