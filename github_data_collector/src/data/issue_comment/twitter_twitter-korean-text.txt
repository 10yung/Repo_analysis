We're migrating to Scala 2.12 and need an artifact of this library
On trying to build the twitter-korean-text project, 

I get the following error(2):
- The method iterator() is ambiguous for the type Seq<KoreanTokenizer.KoreanToken>

Other than the initial library code, I installed m2scala, and am using scalatest version 2.2.6 (which is for 2.12 scala versions).

What am I doing wrong?

Updated pom.xml:
```
<!-- Twitter Korean Text - Scala library to process Korean text Copyright 
	2014 Twitter, Inc. Licensed under the Apache License, Version 2.0 (the "License"); 
	you may not use this file except in compliance with the License. You may 
	obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 
	Unless required by applicable law or agreed to in writing, software distributed 
	under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES 
	OR CONDITIONS OF ANY KIND, either express or implied. See the License for 
	the specific language governing permissions and limitations under the License. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.twitter.penguin</groupId>
	<artifactId>korean-text</artifactId>
	<packaging>jar</packaging>
	<version>4.4.5-SNAPSHOT</version>
	<name>Korean Text Processing Utilities</name>
	<url>https://github.com/twitter/twitter-korean-text</url>
	<description>Scala library to process Korean text</description>
	<inceptionYear>2014</inceptionYear>
	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
			<comments>A business-friendly OSS license</comments>
		</license>
	</licenses>
	<scm>
		<url>https://github.com/twitter/twitter-korean-text</url>
		<connection>scm:git:https://github.com/twitter/twitter-korean-text.git</connection>
		<developerConnection>scm:git:git@github.com:twitter/twitter-korean-text.git
    </developerConnection>
		<tag>korean-text-4.4.4</tag>
	</scm>
	<prerequisites>
		<maven>3.0.4</maven>
	</prerequisites>
	<developers>
		<developer>
			<id>nlpenguin</id>
			<name>Hohyon Ryu</name>
			<url>https://twitter.com/nlpenguin</url>
		</developer>
	</developers>
	<issueManagement>
		<url>https://www.github.com/twitter/twitter-korean-text/issues</url>
		<system>Github Issues</system>
	</issueManagement>
	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<maven.compiler.source>1.8</maven.compiler.source>
		<maven.compiler.target>1.8</maven.compiler.target>
		<scala.version>2.12.3</scala.version>
		<scoverage.plugin.version>1.0.4</scoverage.plugin.version>
		<encoding>UTF-8</encoding>
	</properties>
	<distributionManagement>
		<snapshotRepository>
			<id>sonatype-nexus-snapshots</id>
			<name>Sonatype Nexus Snapshots</name>
			<url>https://oss.sonatype.org/content/repositories/snapshots/</url>
		</snapshotRepository>
		<repository>
			<id>sonatype-nexus-staging</id>
			<name>Nexus Release Repository</name>
			<url>https://oss.sonatype.org/service/local/staging/deploy/maven2/</url>
		</repository>
	</distributionManagement>
	<dependencies>
		<dependency>
			<groupId>org.scala-lang</groupId>
			<artifactId>scala-library</artifactId>
			<version>${scala.version}</version>
		</dependency>
		<dependency>
			<groupId>com.twitter</groupId>
			<artifactId>twitter-text</artifactId>
			<version>1.11.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-nop</artifactId>
			<version>1.5.8</version>
			<scope>provided</scope>
		</dependency>
		<!-- https://mvnrepository.com/artifact/org.scalatest/scalatest -->
		<dependency>
			<groupId>org.scalatest</groupId>
			<artifactId>scalatest_2.12.0-M4</artifactId>
			<version>2.2.6</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>4.11</version>
			<scope>test</scope>
		</dependency>
	</dependencies>
	<reporting>
		<plugins>
			<plugin>
				<groupId>net.alchim31.maven</groupId>
				<artifactId>scala-maven-plugin</artifactId>
				<version>3.2.0</version>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-project-info-reports-plugin</artifactId>
				<version>2.7</version>
			</plugin>
			<plugin>
				<groupId>org.scoverage</groupId>
				<artifactId>scoverage-maven-plugin</artifactId>
				<version>${scoverage.plugin.version}</version>
				<configuration>
					<excludedPackages>com.twitter.penguin.korean.qa</excludedPackages>
				</configuration>
			</plugin>
		</plugins>
	</reporting>
	<build>
		<pluginManagement>
			<plugins>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-site-plugin</artifactId>
					<version>3.4</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-scm-publish-plugin</artifactId>
					<version>1.0</version>
					<configuration>
						<content>${project.reporting.outputDirectory}</content>
						<checkinComment>Publishing Site Docs for
							${project.artifactId}:${project.version}
						</checkinComment>
						<skipDeletedFiles>true</skipDeletedFiles>
						<pubScmUrl>scm:git:git@github.com:twitter/twitter-korean-text.git</pubScmUrl>
						<scmBranch>gh-pages</scmBranch>
					</configuration>
				</plugin>
				<plugin>
					<groupId>net.alchim31.maven</groupId>
					<artifactId>scala-maven-plugin</artifactId>
					<version>3.2.0</version>
					<executions>
						<execution>
							<id>scala-compile-first</id>
							<phase>process-resources</phase>
							<goals>
								<goal>add-source</goal>
								<goal>compile</goal>
							</goals>
						</execution>
						<execution>
							<id>scala-test-compile</id>
							<phase>process-test-resources</phase>
							<goals>
								<goal>testCompile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>3.1</version>
					<executions>
						<execution>
							<phase>compile</phase>
							<goals>
								<goal>compile</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-surefire-plugin</artifactId>
					<version>2.18.1</version>
				</plugin>
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-release-plugin</artifactId>
					<version>2.5.1</version>
				</plugin>
				<plugin>
					<groupId>org.scoverage</groupId>
					<artifactId>scoverage-maven-plugin</artifactId>
					<version>${scoverage.plugin.version}</version>
					<executions>
						<execution>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
					<configuration>
						<scalaVersion>${scala.version}</scalaVersion>
					</configuration>
				</plugin>
				<plugin>
					<groupId>org.eluder.coveralls</groupId>
					<artifactId>coveralls-maven-plugin</artifactId>
					<version>3.0.1</version>
					<configuration>
						<coberturaReports>
							<param>${project.build.directory}/cobertura.xml</param>
						</coberturaReports>
						<sourceDirectories>
							<param>${basedir}</param>
						</sourceDirectories>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>
	<profiles>
		<profile>
			<id>release-profile</id>
			<build>
				<plugins>
					<plugin>
						<groupId>org.apache.maven.plugins</groupId>
						<artifactId>maven-gpg-plugin</artifactId>
						<version>1.5</version>
						<executions>
							<execution>
								<id>sign-artifacts</id>
								<phase>verify</phase>
								<goals>
									<goal>sign</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
```

hello.
I user twitter analyzer with python.

And I want to make user-dictionary.
It means,
when I tokenize "섬유탈취제"
now, it make tokens like this.
  "tokens": [
        "섬유(Noun: 0, 2)",
        "탈취(Noun: 2, 2)",
        "제(Noun: 4, 1)"
    ],
but, I want make tokens  like this.
  "tokens": [
        "섬유탈취제(Noun or Compound)"
    ],

is it possible?
if possible, how could I make this?
I removed '`' character in nouns.txt
The following strings take more than 500ms to be tokenized:

1) "@Bam_cos0118 실물을 봤으닊 이러죠!!!!!!!!!꺄윽ㅇㅇ썈꺅!!!!!!!!!!!!!밤님 우주최강지구최강중국최강한국최강그리스최강호주최강미국최강북한최강ㅇ일본최강홍콩최강대만최강마카오최강아프리카최강우즈베키스탄최강!!!!존예!!!존귀!!!시라구!!!"
2) "한국일보 6월3일자 만평 https://t.co/nnZCJovw0w"

We also run into OOM errors when tokenizing many of these in a row.
java.lang.OutOfMemoryError: GC overhead limit exceeded
VM error: GC overhead limit exceeded
Scala 2.12.0 is released last week. Do you have a plan to publish twitter-korean-text for it in the near future?

In this case, maven scala plugin does not have dedicated cross building feature so that I'd like to open a PR for migration from maven to SBT if you agree.
https://github.com/twitter/twitter-korean-text/blob/master/docs/contribution-guide.md

Tools class names need to be updated.

Thanks for your convenient and fast Korean parsing system.
However, I found there exists a wrong rule on stemming system, which does not follow the Korean spelling system.

For example,
"조사된" has root form of "조사(하다) + 되 + ㄴ", so correct stemming form should be one of "조사+되다" or "조사되다", while the stemming system understands that word as "조사돼다" (which means "조사하다+되+어+다", with redundant ending token "어").
There is another example like:
"대상이 되다" --> (Correct form) "대상 + 이 + 되다", so correct form should be "대상+이+되다" (System says) "대상 + 이 + 돼다"
"판정됐다" -> (Correct form) "판정 + 되 + 었 + 다", so correct form should be "판정되다" or "판정하다" (System says) "판정돼다"

Stemming system only misgiving this type of spelling error, for "되/돼" variations. Because "돼 = 되+어", usually "되" is the basic form ("어" is a ending morpheme to make the end of sentence or word).
Although it's very common error in Korean spelling system and doesn't related with the developing issue, I think you should provide it correctly.
FYI, [here(korean)](http://www.korean.go.kr/nkview/nknews/200207/48_3.html) is an semi-official article from the National Institute of the Korean Language.

Thanks again with the convenient system.

---

다른 개발진에 외국인이 있을지 몰라서 영어로 적었습니다.
정리하자면 Stemming system이 "돼/되"를 반대로 구분하고 있습니다.

"조사된"의 기본형은 "조사되다"임에도 "조사돼다"로 출력되고,
"대상이 되다" 역시 "대상이 돼다"로 출력되며,
"판정됐다" 역시 "판정돼다"로 출력됩니다.

데이터 분석작업이나 개발에는 큰 문제가 없겠지만, 맞춤법을 따르도록 고쳐주시는 것이 어떤가 합니다.

감사합니다.

안녕하세요

-#hash "#hash 등등 일부 특수문자가 해시태그 앞에 붙어있을때는 해당 문자까지 포함해서 해시태그가 되어버리는 이슈가 있습니다 (pos=Hashtag, text="\"hash" 와 같은 식으로). 실제 트위터에서는 #hash 부분만 해시태그로 동작합니다. twitter-text 쪽 이슈일 듯 하지만, 정확한 구조를 몰라 이쪽 repo에 이슈 올립니다. 

