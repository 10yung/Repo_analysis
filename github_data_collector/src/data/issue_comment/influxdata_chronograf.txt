Hello,

Following influxdata/influxdb#9913 that has been closed but not fixed.. I can reproduce it with InfluxDB 1.7.9 (RHEL6)

When I do a simple query, it is working as expected and the result is the following one:
- Query (works):
` SELECT last("used_memory") AS AB FROM "redis" where used_memory > 1`

- Results:
> time                AB
> ----                --
> 1579245510000000000 108229144

Now same query but with an alias:

- Query (not works):
`SELECT last("used_memory") AS AB FROM "redis" where AB > 1`
- Results:
(no results, empty response)

- Another query (not works, try to convert/force to integer):
`SELECT last("used_memory") AS AB FROM "redis" where AB::integer > 1`
- Results:
(no results, empty response)

- Query (all fields seems to be ok):
`SHOW FIELD KEYS`
- Results:
> maxmemory                      integer

The goal is to execute this query:
`SELECT (last("used_memory") / last("maxmemory")) * 100 AS ratio FROM "redis" WHERE ratio > XX (replace XX by integer)`

Thank you very much.
* removes unused/outdated docs
* removes unused functions from layouts and protoboards
   * LayoutsStore defined Add, Delete, Update, but they were only used for testing, fixed the interface
* remove v2 related code
  * some additional logic for a new dashboard and cell type was added, but never integrated nor finished (dashboards or cells would cause a panic if GET'ing) so i pulled that all out
* fixed a bug in filestore
   * filestore would silently allow adding some new resources to the filesystem if a failure to bolt occurred. This would result in an unexpected state where the db does not contain all a user's additions. Since this is not great for single instance and is terrible for a horizontally scaled system, functionality to silently add to the fs has been stripped out. users can still update or delete as before.
* removes some slides for a presentation
Addresses #5062 
While exploring data, a user was unable to send the query to a dashboard
![image](https://user-images.githubusercontent.com/2653109/72565237-a8562f80-386e-11ea-83f4-60e839b07c71.png)
a workaround could be to copy the query, navigate to the desired dashboard, add a cell, then paste the query into that cell.

What browser are you using (name and version)?
Safari 13.0.4

What operating system are you using?
macOS Mojave 10.14.6

Please describe what you were trying to do when you encountered this error:
I was trying to add a second query to a graph with Table as visualization type.
```
value@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:2833:1416
value@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:2833:2724
value@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:2908:12927
value@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:2908:11196
ia@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:716:58766
Wa@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:716:74895
Va@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:716:75241
wi@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:716:79909
ki@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:716:79563
Ha@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:716:78075
enqueueSetState@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:716:47064
https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:708:1636
https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:3288:2515
L@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:5:4405
https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:5:4190
o@https://chronograf01.monitor.agora-space.com/src.6c53cef1.js:3288:1170
promiseReactionJob@[native code]
```

    
Addresses #5062

* strips out a lot of migration logic because there is a clear migration path: if people are still using a ~2 year old version of chronograf, they can upgrade to anything more recent up to the 1.7.x line and then onto 1.8.x.
* moves the majority of the storage logic into the generic kv layer as a precursor to implementing other kv stores (etcd for now). (`kv/bolt/*.go` -> `kv/*.go`)
* strips out some unused code about roles
* removes an unused function in `server/services.go`

---------------------------------------------

**Migration removal reasoning:**
  - Origins of migration code:
    - Migrations were added with [1.4.0](https://github.com/influxdata/chronograf/pull/2604) meaning they are meant to support the 1.3.x line; the last release of which was [1.3.10.0](https://github.com/influxdata/chronograf/releases/tag/1.3.10.0) in Oct 2017.
  - Logic behind removing:
    - 1.3.x line is four minor versions behind the current version (1.7.x), meaning users have had opportunities throughout 4 minor versions (and 2+ years) to migrate away from the 1.3.x line.
    - Seems like 4 minor versions and 2 years is sufficient to justify end-of-life-ing the 1.3.x line.


What browser are you using (name and version)?
* Vivaldi 2.8.1664.40 (Stable channel) (64-bit)

What operating system are you using?
* Windows 10 Enterprise LTSC 1809 build 17763.914 (to run browser to access Chronograf)
* centos-release-7-7.1908.0.el7.centos.x86_64 (to run TICK stack)

Please describe what you were trying to do when you encountered this error:
- Executing following query hand-written into Chronograf -> Explore:
```sql
SELECT COUNT(*) FROM "database_name"."two_hours"."measurement_name"
```
With this query I was trying to get number of rows in measurement, which seemed to be really hard to figure out.
```
Error: Invalid size returned for cell 2 of value NaN
    at i.value (http://host-name.fake:8888/src.a5ab7481.js:2848:1411)
    at i.value (http://host-name.fake:8888/src.a5ab7481.js:2848:2700)
    at r.value (http://host-name.fake:8888/src.a5ab7481.js:2852:2359)
    at f.value (http://host-name.fake:8888/src.a5ab7481.js:2923:12908)
    at f.value (http://host-name.fake:8888/src.a5ab7481.js:2923:11170)
    at Ba (http://host-name.fake:8888/src.a5ab7481.js:717:65834)
    at ja (http://host-name.fake:8888/src.a5ab7481.js:717:65629)
    at $a (http://host-name.fake:8888/src.a5ab7481.js:717:69008)
    at oo (http://host-name.fake:8888/src.a5ab7481.js:717:91055)
    at uo (http://host-name.fake:8888/src.a5ab7481.js:717:91442)
```

    
Chronograf version: 1.7.15
Installation method: built from source
Related issues: #5090, #5137
Related PRs: #5228

This is a re-opening of #5137, which was reported fixed in 1.7.13 through #5228.

As of Chronograf 1.7.15 I still see the old behavior: the alert builder GUI rejects messages with valid Go templates such as:

    CI ID = {{ with (index .Tags "ci_id") }}{{ . }}{{ else }}Unknown{{ end }}

    CI ID = {{ if (index .Tags "ci_id") }}{{ index .Tags "ci_id" }}{{ else -}} Unknown {{ end }}

    # of Tags = {{ len .Tags }}

The messages pass validation if one removes `{{ . }}`, `-`, and `len`, respectively. The validator's aversion to `{{-` and `-}}` is a bit harder to reproduce than the other two; `-` tends to be accepted in simple expressions but rejected in complex ones.

In none of the above examples do I see the parse error added in #5228; all triggering strings return "Please correct templates in alert message." I *do* see the parse error if I reproduce the demo from #5228 (i.e., closing with `}` instead of `}}`), confirming that I'm using the new code at least some of the time.
When using Oath and including a `.src` file with organization set to `Default` The UI still ask for connection details. An example .src file,

```
{
"id": "1999",
"name": "telegraf",
"username": "telegraf",
"password": "secretpassword",
"url": "https://yoururl:8086",
"type": "influx",
"insecureSkipVerify": true,
"default": true,
"telegraf": "telegraf",
"organization": "Default"
}
```

I also see someone else on github that has the same problem.
https://stackoverflow.com/questions/54184287/chronograf-not-able-to-add-default-influxdb-connection-when-using-oauth-2-0

there doesn't seem to be a way with oath to avoid getting the start up screen asking for connection details because you can't configure the `Default` Organization
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.0.12 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.0.12...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.0.12&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/influxdata/chronograf/network/alerts).

</details>