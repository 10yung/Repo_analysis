Apple changed the url from library/ios to library/archive 

Now it seems to include code samples for all platforms so may need new filtering for ios only or maybe tweaking of URL params.

Parsing library.json is broken:
```
malcs-imac:Samples mh$ ruby download3.rb .
/System/Library/Frameworks/Ruby.framework/Versions/2.3/usr/lib/ruby/2.3.0/json/common.rb:156:in `parse': 822: unexpected token at '{ (JSON::ParserError)
"topics":[
    {"name":"Platforms",
```

A weird issue I have is if I run it with ruby download.rb . and if it errors with URL moved even if I edit the URL to the new one and run it again it still reports same error about URL moved, doesn't even check the newly edited URL, very strange. 

Some instructions on the readme page would be good like what packages needed and the command line args. I think I did sudo gem install zip and sudo gem install something else.
I was interested in the AVTouch example, which doesn't build on a current Xcode version anymore. But I found this translated project: https://github.com/ooper-shlab/avTouch1.4.3-Swift. 

Are you interested in adding this information to the README? 
https://github.com/robovm/apple-ios-samples/issues/10
In QRunLoopOperation.m
> Some state transitions:
> XXX  6. init -> start -> cancel -> cancelOnRunLoopThreadThread -> startOnRunLoopThreadThread -> finish -> dealloc

This state transition do happens if the calling thread of `(void)cancel` is exactly the same as `self.actualRunLoopThread`.

Due to waitUntilDone is set to YES in `(void)cancel`
> `[self performSelector:@selector(cancelOnRunLoopThread) onThread:self.actualRunLoopThread withObject:nil waitUntilDone:YES modes:[self.actualRunLoopModes allObjects]];`

Is there any reason to wait until done here or waitUntilDone is supposed setting to NO?
https://github.com/robovm/apple-ios-samples/blob/master/MetalImageProcessing/MetalImageProcessing/AAPLTransforms.mm

P.x = U.x;
    P.y = U.y;
    P.z = U.z;
    P.w = simd::dot(U, E);
    
    Q.x = V.x;
    Q.y = V.y;
    Q.z = V.z;
    Q.w = simd::dot(V, E);
    
    R.x = N.x;
    R.y = N.y;
    R.z = N.z;
    R.w = simd::dot(N, E);
    
    S.w = 1.0f;
    
    return simd::float4x4(P, Q, R, S);

actually, should return transpose of result
Hi,

Firstly, I would like to thank you for the amazing code, these samples have helped a lot.
When running CloudPhotosUsingCloudKitWithiOS on iOS 11, it crashes and gives me the following error:

CloudPhotos[7618:457284] *** Terminating app due to uncaught exception 'CNPropertyNotFetchedException', reason: 'A property was not requested when contact was fetched.'

I have tried:

Adding NSContactsUsageDescription to the info.plist and that didn't work.

Any suggestions on what to try?

In Auriotouch, How to detect when has 2 frequencies(e.g. 15000 and 16000) exist?

I would be interested to know if when you sync you are deleting the sample folder and adding the new one? Or are you extracting the new sample and then replacing the files and deleting any that have been removed? If not then the latter of a real sync would be cool because then we could see the diffs between the files inside the sample updates using Github's web interface which would make it really easy to see what Apple are doing between updates, e.g. what files they changed and what the changes were. E.g. the prerelease update to AdaptivePhotosUsingUIKitTraitsandSizeClasses I mentioned in my other issue, the only update was a change from Selector() to #selector which seems to me a really dumb reason for updating the sample, given it has broken the sample on non-latest-beta XCodes that don't have that version of Swift yet. I found that out doing my own diff but I could see me doing this again for other samples.

Theres probably a really easy command to sync the files from the zip to the previous folder that includes deleting any, I could look into it if you like?

Not sure what you can do about this but you might be interested to know about pre-release samples which work on the Xcode betas, you'll notice the pre-release in the URL e.g.

https://developer.apple.com/library/prerelease/ios/samplecode/AdaptivePhotos/History/History.html#//apple_ref/doc/uid/TP40014636-RevisionHistory-DontLinkElementID_1
(note library/**prerelease**/ios)

**2016-02-22    Adopt Swift 2.2 language changes.**
2015-09-16  Updated to support split view.
2014-09-17  Refactored and updated to include a storyboard version.
2014-09-08  New sample code that illustrates how to make your app universal and adaptive.

That differs from the normal sample which is what you synced to your repo:

https://developer.apple.com/library/ios/samplecode/AdaptivePhotos/History/History.html#//apple_ref/doc/uid/TP40014636-RevisionHistory-DontLinkElementID_1

2015-09-16  Updated to support split view.
2014-09-17  Refactored and updated to include a storyboard version.
2015-08-31  New sample code that illustrates how to make your app universal and adaptive.

I think it would be beneficial to become a repo for all versions of these samples organized by year.
