```
Caused by java.lang.IllegalStateException: Already initialized
       at org.threeten.bp.zone.ZoneRulesInitializer.setInitializer(ZoneRulesInitializer.java:74)
       at com.jakewharton.threetenabp.AndroidThreeTen.init(AndroidThreeTen.java:22)
       at com.jakewharton.threetenabp.AndroidThreeTen.init(AndroidThreeTen.java:17)
       at com.jakewharton.threetenabp.AndroidThreeTen.init(AndroidThreeTen.java:13)
       at com.wave.waveradio.WaveApplication.onCreate(WaveApplication.java:108)
```

We have seen this exception on some devices since last release.

```
//jsr310
    implementation 'com.jakewharton.threetenabp:threetenabp:1.2.1'
    testImplementation("org.threeten:threetenbp:1.4.0") {
        exclude module: "com.jakewharton.threetenabp:threetenabp:1.2.1"
    }
//previously added duplicate entry
//testImplementation("org.threeten:threetenbp:1.4.0")
```

We have tried remove that testImplementation duplicate entry, 
try/catch that exception and continue. But new exception occurred.

```
Fatal Exception: org.threeten.bp.zone.ZoneRulesException: No time-zone data files registered
       at org.threeten.bp.zone.ZoneRulesProvider.getProvider(ZoneRulesProvider.java:165)
       at org.threeten.bp.zone.ZoneRulesProvider.getRules(ZoneRulesProvider.java:122)
       at org.threeten.bp.ZoneRegion.ofId(ZoneRegion.java:143)
       at org.threeten.bp.ZoneId.of(ZoneId.java:358)
       at org.threeten.bp.ZoneId.of(ZoneId.java:286)
       at org.threeten.bp.ZoneId.systemDefault(ZoneId.java:245)
       at org.threeten.bp.Clock.systemDefaultZone(Clock.java:137)
       at org.threeten.bp.LocalDateTime.now(LocalDateTime.java:152)
```


I have seen two library entry in Android Studio, 
```
org.threeten:threetenbp:1.4.0:no-tzdb@jar
org.threeten:threetenbp:1.4.0@jar
```

But only 1.4.0@jar version when run ```./gradlew app::dependencies 2>&1 1> log2```

I have also clear AndroidStudio & gradle caches.  Do you know what might cause this issue?  Thank you.
I was seeing the unit testing issues described in #14, and successfully applied the solutions outlined - however when I try to declare the threetenabp dependencies in another module via gradle's `api` and `testApi` commands, I'm still seeing the `ZoneRulesException: No time-zone data files registered` error. 

It's pretty clear that the change to `api` is the problem, but I'm just curious if someone knows why and/or how I can possibly change my gradle setup to get it to work? It's ideal to declare dependencies like this that are re-used throughout multiple modules in the base "core" module and let them transitively apply, instead of having to redeclare in every module's gradle file. Any help is appreciated :)


I have a `core` module and a main `app` module that depends on it, relevant info from gradle files below:

Declaring in `app` build.gradle (working):
```
implementation project(':core')

implementation 'com.jakewharton.threetenabp:threetenabp:1.0.4'
testImplementation 'org.threeten:threetenbp:1.3.2'
```

Declaring in `core` build.gradle (not working):
```
api 'com.jakewharton.threetenabp:threetenabp:1.0.4'
testApi 'org.threeten:threetenbp:1.3.2'
```
I am currently using the Android Studio 3.0 and I have faced this problem of compiling this project with ApexNLP library and I am facing this error. I tried the library in the previous version of the android studio but it still failed. I need the ApexNLP library for the project. So please help me out. 

ApexNLP Project Link :
https://github.com/6thsolution/ApexNLP

Error:
Error:Execution failed for task ':app:transformDexArchiveWithExternalLibsDexMergerForDebug'.
> com.android.builder.dexing.DexArchiveMergerException: Unable to merge dex
