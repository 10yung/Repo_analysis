
It might be useful to have AddressSanitizer.
Teaches `systemd-fstab-generator` these two Unit options, creating appropriate dependencies on the generated `.mount` units.  When used, they override any other automatically generated dependencies, such as `local-fs.target`, i.e., they imply `noauto`.  The new options are ignored for `/`, in the same way that `noauto` is ignored.

This should resolve my feature "request" #14380.

This has been tested locally in that it compiles and produces dependencies as desired.  More diverse testing and feedback is appreciated!
**Is your feature request related to a problem? Please describe.**
It might potentially be a problem in some settings, I've not really thought about it.
Recently my journal started getting saturated by the message `jan. 18 17:13:00 hostname systemd-resolved[2647]: Server returned error NXDOMAIN, mitigating potential DNS violation DVE-2018-0001, retrying transaction with reduced feature level UDP.`, 1-3 identical entries every 5 minutes.

First, I have no idea where the request originated (PID or anything), and second I have no idea which domain it's trying to resolve. At least the second should be part of the log message, in my mind.

But I might be wrong, it just feels like it should.

**Describe the solution you'd like**
I think I want the relevant domain to be included in the journal entry.

**Describe alternatives you've considered**
None.

**systemd version the issue has been seen with**
244 (probably, does not depend on version)

**Used distribution**
ALT Linux (http://www.altlinux.org)

**Expected behaviour you didn't see**
Resizing the requested filesystem when `x-systemd.growfs` option is specified in `/etc/fstab` and all conditions are met.

**Unexpected behaviour you saw**
Root filesystem (ext4) was requested to be resized, `/etc/fstab` line:
```
UUID=e98df2d1-5b88-4a41-8da5-d90df8a47e92       /       ext4    x-systemd.growfs        1 1
```
Underlying partition had enough space for resizing fs. However, during resize attempt the following error was recorded in journal:
```
systemd-growfs[840]: Failed to resize "/" to 1894400 blocks (ext4): Read-only file system
```
The following manual operations in single-user mode demonstrate the requirement of having rootfs mounted as read-write:
```
bash-4.4# mount | grep mmc
/dev/mmcblk0p1 on / type ext4 (ro,relatime,data=ordered)
bash-4.4# /sbin/resize2fs /dev/mmcblk0p1 
resize2fs 1.44.6 (5-Mar-2019)
Filesystem at /dev/mmcblk0p1 is mounted on /; on-line resizing required
old_desc_blocks = 1, new_desc_blocks = 1
/sbin/resize2fs: Read-only file system While checking for on-line resizing support
bash-4.4# mount -o remount,rw /
bash-4.4# /sbin/resize2fs /dev/mmcblk0p1 
resize2fs 1.44.6 (5-Mar-2019)
Filesystem at /dev/mmcblk0p1 is mounted on /; on-line resizing required
old_desc_blocks = 1, new_desc_blocks = 1
The filesystem on /dev/mmcblk0p1 is now 1894400 (4k) blocks long.
```

**Steps to reproduce the problem**
Request root filesystem to be expanded. The issue will be triggered if growfs service will be called on read-only mounted filesystem when online resizing happens (on mounted filesystem).

Services running inside container should be able to identify base host virtualization. What do you think?
Recently I found systemd-nspawn is very useful to prepare chroot-ed system image spaces. Since it does most of /dev,/sys and /proc jobs nicely for me, my cloud image build script becomes much simpler than before. Thank you for your great efforts.

Unfortunately, I also found getenforce returns `Disabled` in nspawn-ed space. This caused `dnf update systemd` to label `/usr/lib/systemd/systemd` as lib_t instead of init_exec_t and the resulting system image becomes unusable state (no one can login;-). And even worse, 
restorecon doesn't work because getenforce is disabled.

Although it can be solved manually by remounting selinuxfs as rw, doing it for every systemd-nspawn invocations make my image build script complex again.

Version: systemd-241-12.git323cdf4.fc30.x86_64
Distribution: fedora30
Kernel: 5.4.7-100.fc30.x86_64

**Describe the solution you'd like**
So, I want to see future systemd-nspawn to have an option to mount selinuxfs as rw.

**Describe alternatives you've considered**
Alternatively, how about adding a note about how to enable selinux in nspawn to the manual page of systemd-nspawn?

```
mount -o remount,rw /sys/fs/selinux
```

Thank you!


**systemd version the issue has been seen with**
> latest master

<!-- **NOTE:** Do not submit bug reports about anything but the two most recently released systemd versions upstream! -->
<!-- For older version please use distribution trackers (see https://systemd.io/CONTRIBUTING#filing-issues). -->

**Used distribution**
 > Arch Linux, clang 9.0

As some of you already noticed, the current ASan/LSan sometimes crashes during `test-execute`, specifically during `exec-specifier-interpolation.service`:

```
exec-specifier-interpolation.service: Passing 0 fds to service
exec-specifier-interpolation.service: About to execute: /bin/sh -x -c '! test -x perl || perl -e 'exit(!(qq{%U} eq qq{\x25U}))''
exec-specifier-interpolation.service: Forked /bin/sh as 43629
exec-specifier-interpolation.service: Changed dead -> start
exec-specifier@foo-bar.service: Control group is empty.
exec-specifier-interpolation.service: Executing: /bin/sh -x -c '! test -x perl || perl -e 'exit(!(qq{%U} eq qq{\x25U}))''
+ test -x perl
Received SIGCHLD from PID 43629 (sh).
Child 43629 (sh) died (code=exited, status=0/SUCCESS)
exec-specifier-interpolation.service: Failed to read oom_kill field of memory.events cgroup attribute: No such file or directory
exec-specifier-interpolation.service: Child 43629 belongs to exec-specifier-interpolation.service.
exec-specifier-interpolation.service: Main process exited, code=exited, status=0/SUCCESS
exec-specifier-interpolation.service: Succeeded.
exec-specifier-interpolation.service: Service will not restart (restart setting)
exec-specifier-interpolation.service: Changed start -> dead
Tracer caught signal 11: addr=0x0 pc=0x7f00aba401e8 sp=0x7f00a474fd00
==38277==LeakSanitizer has encountered a fatal error.
==38277==HINT: For debugging, try setting environment variable LSAN_OPTIONS=verbosity=1:log_threads=1
==38277==HINT: LeakSanitizer does not work under ptrace (strace, gdb, etc)
```

I'm not sure if the relevant codebase changed or if it's another case of https://github.com/systemd/systemd/pull/13232 (so the fix would be basically the same).

cc @evverx 
â€¦rr by default

Fixes: #14560
This is easier than looking things up on the web when formatting disks.