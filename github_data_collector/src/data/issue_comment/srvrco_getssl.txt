**Describe the bug**
getssl: line 1448: warning: command substitution: ignored null byte in input

**To Reproduce**
ACMEv1

$ getssl xxx.yyy.zzz.ru
Updated getssl from v2.15 to v2.16
these update notification can be turned off using the -Q option

Updates are;
2020-01-17 #473 and #477 Don't use POST-as-GET when sending ready for challenge for ACMEv1 (2.16)

/.../getssl: line 1448: warning: command substitution: ignored null byte in input
purge /home/ai/.getssl/xxx.yyy.zzz.ru/archive/2019_09_20_03_18
certificate obtained for xxx.yyy.zzz.ru


**Operating system (please complete the following information):**
 - OS: Ubuntu 18.04
 - Bash Version 4.4.20(1)-release (x86_64-pc-linux-gnu)
   package: bash 4.4.18-2ubuntu1.2

I started getting the following errors when I tried to renew some certs last night:

cat: /etc/pki/tls/openssl.cnf: No such file or directory
unable to find 'distinguished_name' in config
problems making Certificate Request
140319250175104:error:0E06D06C:configuration file routines:NCONF_get_string:no value:../crypto/conf/conf_lib.c:273:group=req name=distinguished_name
Registering account
Verify each domain
...
Verification completed, obtaining certificate.
Can't open /etc/pki/tls/openssl.cnf for reading, No such file or directory
139980880196736:error:02001002:system library:fopen:No such file or directory:../crypto/bio/bss_file.c:69:fopen('/etc/pki/tls/openssl.cnf','r')
139980880196736:error:2006D080:BIO routines:BIO_new_file:no such file:../crypto/bio/bss_file.c:76:
unable to load X509 request
139980880196736:error:0909006C:PEM routines:get_name:no start line:../crypto/pem/pem_lib.c:745:Expecting: CERTIFICATE REQUEST
base64: invalid input
getssl: Sign failed: 


Tried updating getssl (currently on 2.15) and openssl (currently on 1.1.1d  10 Sep 2019) but still getting this error. I also tried making some changes to the SSLCONF variable based on https://github.com/srvrco/getssl/issues/116 ...I can clear the error about openssl.cnf but that isn't resolving the rest of the issues. This is a Debian 10 container on a Proxmox server. Note that /etc/pki does not exist on my system; the correct openssl configuration path should be /usr/lib/ssl/openssl.cnf (which is what is returned by openssl version -d)
Hello,

this PR adds support for DNS ACME challenges using CloudDNS API by VSHosting (https://github.com/vshosting/clouddns). It is based on the CloudFlare DNS plugin.

Let me know if there are any issues to be resolved prior to merge. 
Line:
https://github.com/srvrco/getssl/blob/9895a211d83beb39bfabffde1f034cfaac7b190c/getssl#L1187
Maybe also at line:
https://github.com/srvrco/getssl/blob/9895a211d83beb39bfabffde1f034cfaac7b190c/getssl#L1191

If $section contains the value 1, the line 1187 will find the link for 1, 10, 11, 12, 13 and anything starting with 1.

The line must be like this:
```bash
echo "$full" | grep "^..${5}\",$section\]" | awk '{print $2}' | tr -d '"
```
`\]` after $section

Version: getssl 2.15
**Bug description**

When I use DUAL_RSA_ECDSA together with acmev2, I do not get a fresh EC certificate. This worked fine with getssl 2.14 and acmev1.

**To Reproduce**
Configure with these settings in getssl.cfg:

DUAL_RSA_ECDSA="true"
CA="https://acme-v02.api.letsencrypt.org/directory"
DOMAIN_KEY_LOCATION="/etc/nginx/ssl/ssl.xyz.de.key"
DOMAIN_CHAIN_LOCATION="/etc/nginx/ssl/ssl.xyz.de.crt"

After the cerification step has successfully completed, there is a "base64: invalid input" error:

```
#getssl -a
Check all certificates
creating key - /root/.getssl/ssl.xyz.de/ssl.xyz.de.key
Generating RSA private key, 4096 bit long modulus (2 primes)
...................................................................................................................................................................................++++
............................................................................................................................................................................................................................................................................................................................................++++
e is 65537 (0x010001)
creating key - /root/.getssl/ssl.xyz.de/ssl.xyz.de.ec.key
creating domain csr - /root/.getssl/ssl.xyz.de/ssl.xyz.de.csr
creating domain csr - /root/.getssl/ssl.xyz.de/ssl.xyz.de.ec.csr
Registering account
Verify each domain
Verifying ssl.xyz.de
copying challenge token to /share/xyz/ssl.xyz.de/.well-known/acme-challenge/N1LXOeH8PPTcEnV_DlzMi8tJhKFOt1zD9_pmED3vbyc
Verified ssl.xyz.de
Verification completed, obtaining certificate.
base64: invalid input
Full certificate saved in /root/.getssl/ssl.xyz.de/fullchain.crt
Certificate saved in /root/.getssl/ssl.xyz.de/ssl.xyz.de.crt
Full certificate saved in /root/.getssl/ssl.xyz.de/fullchain.crt
Certificate saved in /root/.getssl/ssl.xyz.de/ssl.xyz.de.crt
cp: cannot stat '/root/.getssl/ssl.xyz.de/ssl.xyz.de.ec.crt': No such file or directory
cp: cannot stat '/root/.getssl/ssl.xyz.de/chain.ec.crt': No such file or directory
cat: /root/.getssl/ssl.xyz.de/ssl.xyz.de.ec.crt: No such file or directory
cat: /root/.getssl/ssl.xyz.de/chain.ec.crt: No such file or directory
copying private key to /etc/nginx/ssl/ssl.xyz.de.key
copying ec private key to /etc/nginx/ssl/ssl.xyz.de.ec.key
copying full chain to /etc/nginx/ssl/ssl.xyz.de.crt
cat: /root/.getssl/ssl.xyz.de/ssl.xyz.de.ec.crt: No such file or directory
cat: /root/.getssl/ssl.xyz.de/chain.ec.crt: No such file or directory
copying full chain to /etc/nginx/ssl/ssl.xyz.de.crt.ec
reloading SSL services
```

Also, /etc/nginx/ssl/ssl.xyz.de.crt.ec will be 0 bytes. Obviously, /root/.getssl/ssl.xyz.de/fullchain.crt gets reused whereas it should be a different file for EC and somewhere in-between the copying gets weird.

Of course this differs if an old EC certificate is present (i.e. on prolongation). In that case, the EC certificate is unchanged and will get outdated sooner or later, whereas the RSA certificate will be updated.

**Expected behavior**

Copying the certificates should work as with acmev1.

**Operating system (please complete the following information):**
 - OS: Ubuntu 18.04
 - Bash Version GNU BASH 4.4.18-2ubuntu1.2

**Context information**
This was done with getssl 2.15

Please consider adding SSH_OPTS also to scp commands, or  something as
SCP_OPTS if not the same meaning.
It is very convenient (necessary sometimes) to be able to run scp as:
scp -q -i identity_file  "$from" "${to:4}" ...

You could also add SCP_OPTS="" to the defaults and
#Set SCP_OPTS to use an alternate identity file for ssh/scp command.
#SCP_OPTS="-i /root/.ssh/identity_file"
to the write_domain_template() function

Thank you
Should probably be fixed up, I've only hacked up @dkerr64's version for acme.sh to work on my local instance. It assumes you're using curl, I didn't bother stealing acme.sh's whole library of functions.

DNS_ADD_COMMAND="~/.getssl/dns_freedns.sh add"
DNS_DEL_COMMAND="~/.getssl/dns_freedns.sh rm"
Hi, I am trying to set up an SSL cert for an addon domain to see if I can manage free ssl on a shared hosting that does not natively support Let's Encrypt.

I have getssl in my root folder, the addon domain is in ./public_html/mydomain.com/, ACL is set as home/myusername/public_html/mydomain.com/.well-know/acme-challenge and I am using the acme staging server as CA.

Unfortunately I cannot get things working, as I get "json was blank" error. A "json was blank" file is being createin in the acme-challenge folder, with what it seems a token in it.

Here the --debug

`responseHeaders HTTP/1.1 200 OK
Server: nginx
Date: Mon, 23 Dec 2019 09:27:03 GMT
Connection: keep-alive
Cache-Control: public, max-age=0, no-cache
Link: <https://acme-staging-v02.api.letsencrypt.org/directory>;rel="index"
Replay-Nonce: 0001KNE96Bmk2FRfzlOQVKaGGCqgsskpVoretTgd70uB7Rg
X-Frame-Options: DENY
Strict-Transport-Security: max-age=604800


response

code 200

response not in json format



response status =

authlink response =

token json was blank

uri json was blank

keyauthorization json was blank.278jmAtjNFcxwSefUtNc83qMeaPjimxbMliUOk4W7Ek

copying file from /home/mycpaneluser/.getssl/mydomain.com/tmp/json was blank to /home/mycpaneluser/public_html/mydomain.com/.well-known/acme-challenge
copying challenge token to /home/mycpaneluser/public_html/mydomain.com/.well-known/acme-challenge/json was blank

copying from /home/mycpaneluser/.getssl/mydomain.com/tmp/json was blank to /home/mycpaneluser/public_html/mydomain.com/.well-known/acme-challenge/json was blank

copied /home/mycpaneluser/.getssl/mydomain.com/tmp/json was blank to /home/mycpaneluser/public_html/mydomain.com/.well-known/acme-challenge/json was blank

wellknown_url http://mydomain.com/.well-known/acme-challenge/json was blank
getssl: for some reason could not reach http://mydomain.com/.well-known/acme-challenge/json was blank - please check it manually`

mydomain.com.csr, mydomain.com.key and account.key are being created in the .getssl folder.

the url "http://mydomain.com/.well-known/acme-challenge/json was blank" is actually reachable by browser and reports "json was blank.278jmAtjNFcxwSefUtNc83qMeaPjimxbMliUOk4W7Ek"

I cannot understand what I am doing wrong...
This will add a `IGNORE_PERIOD_CHECK` flag to also allow folder names like `live` if getssl is executed with argument `-a` (CHECK_ALL). Also useful if `IGNORE_DIRECTORY_DOMAIN` is set.
This will add the flag `MS_LDAPS` to include OID 1.3.6.1.5.5.7.3.1 in the CSR if you want to use LDAP over SSL in Microsoft Active Directory