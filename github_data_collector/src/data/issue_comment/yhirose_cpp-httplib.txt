Hello,

It seems that latest update broke support, due to;

  Response() = default;
  Response(const Response &) = default;
  Response &operator=(const Response &) = default;
  Response(Response &&) = default;
  Response &operator=(Response &&) = default;
Hello, yhirose. 
First of all thanks for the library. Is pretty complete and easy to use.

There's a small problem when trying to receive multipart/form-data using a SSLServer. I tried to upload an image file (of size 22.7 KB) and a text/plain data together in one request, but the server only seems to recognize the first item while ignoring the last one.

Thanks, 
Kevin.
Deprecate versions prior to 1.1.1.
I have just added instructions to use Conan to manage httplib as a dependency.
https://www.openssl.org/policies/releasestrat.html

Version 1.1.0 will be supported until 2019-09-11.
Version 1.0.2 will be supported until 2019-12-31 (LTS).
Version 1.0.1 is no longer supported.
Version 1.0.0 is no longer supported.
Version 0.9.8 is no longer supported.
Would it be possible for you to release a initial version (even if it is 0.1)? Using tags and the github release system. I would like to create a conan package that points to your repo for easy compilation using CMake.

I have made a pull request to add CMake support. Once you are satisfied with it, it would be nice if you made a release so I can properly add Conan support for master and the first version number. 
I'm new to native socket. now I try to use the http client to `recv()` from a low-bandwidth-server.  Sometimes the `recv()` blocks forever, never returns, at that moment I attach debugger and see it's blocking at line:

    inline int SocketStream::read(char* ptr, size_t size)
    {
        return recv(sock_, ptr, static_cast<int>(size), 0);  <------blocking here
    }


I see there is timeout implemented for `connect()`, but not for `recv()`. I tried to set the timeout with:

    int millisec = 1000; // 1 second
    setsockopt(sock, SOL_SOCKET, SO_RCVTIMEO, (char*)&millisec, sizeof(int));

But it doesn't take effect,  I set 1 second but it still can blocking for 17 seconds, sometimes forever. 

I asked this question on [stackoverflow](https://stackoverflow.com/questions/56144387/timeout-for-blocking-tcp-socket-not-working), seems it's about `WSA_FLAG_OVERLAPPED`, I see the `SO_OPENTYPE` is set:

    #ifdef _WIN32
    #define SO_SYNCHRONOUS_NONALERT 0x20
    #define SO_OPENTYPE 0x7008

        int opt = SO_SYNCHRONOUS_NONALERT;
        setsockopt(INVALID_SOCKET, SOL_SOCKET, SO_OPENTYPE, (char*)&opt, sizeof(opt));
    #endif

From [msdn](https://docs.microsoft.com/en-us/windows/desktop/WinSock/sol-socket-socket-options) :

> SO_OPENTYPE    Once set, affects whether subsequent sockets that are created will be non-overlapped. The possible values for this option are SO_SYNCHRONOUS_ALERT and SO_SYNCHRONOUS_NONALERT. This option should not be used. Instead use the WSASocket function and leave the WSA_FLAG_OVERLAPPED bit in the dwFlagsparameter turned off.

So, once the `SO_OPENTYPE` is set, the `WSA_FLAG_OVERLAPPED` doesn't work, then the `SO_RCVTIMEO` doesn't work, is this correct?

I tried to delete the lines about `SO_OPENTYPE`, but all http requests fail.

Any way to make the timeout work for `recv()` 

Thanks.
