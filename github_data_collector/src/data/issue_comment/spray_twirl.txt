I'm trying to use twirl as part of my integration tests.

My integration tests have an HTTP simplicator that mimics a real world service. To implement this simplicator in the tests, I'm using spray-can embedded HTTP server which needs to spit out responses based on twirl templates.

My tests are located at /src/it/scala so naturally I want to place these twirl templates inside /src/it/twirl. This doesn't work since the twirl compiler ignores this directory.

If I place the twirl templates in /src/main/twirl, everything works fine - but I'm trying to avoid this because I don't want these templates to clutter the production package (the templates only come into play in the tests so they should only compile inside when the tests are run).

How can I tell the twirl compiler to look for templates in the new directory?

I've got an old Scala app I'm slowing converting over to SBT. It still has some Spring 3 stuff in it (yea I know, I know. I will rip it out soon) and I have one thing in my application context that looks like so:

```
    <bean id="convertersAsScalaMap" class="scala.collection.JavaConversions" factory-method="mapAsScalaMap">
    <constructor-arg ref="converters"/>
</bean>
```

The trouble is, when I add Twirl.settings to the bottom of my build.sbt, my entire application breaks. I see this in my logs coming from Spring:

```
 Cannot resolve reference to bean 'convertersAsScalaMap' while setting bean property 'converters'; nested exception is org.springframework.beans.factory.CannotLoadBeanClassException: Cannot find class [scala.collection.JavaConversions] for bean with name 'convertersAsScalaMap' defined in class path resource [io/bigsense/spring/spring.xml]; nested exception is java.lang.ClassNotFoundException: scala.collection.JavaConversions
```

I've narrowed it down to the Twirl.settings. If I comment it out, I can't use templates of course, but I no longer see this exception from calling the same set of beans. I'm on sbt 0.13.0 and Scala 2.10.3. My sbt-twirl plugin in 0.7.0. 

Does the twirl plugin do something weird that makes JavaConversions inaccessible? I'd really like to use the Play2 template engine to replace my old JSPs. 

Here is the source code: https://github.com/sumdog/BigSense/  (Revision 7431e80 and the one right before it on the reengineering branch) 

It'd be great if it was possible to use [jade](http://scalate.fusesource.org/documentation/jade.html) in the same way as twirl, i.e. as a stand-alone template engine available to SBT.

Possibly this would entail implementing support for several different language "plugins".... 

