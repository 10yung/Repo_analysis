Automated downstream sync of changes from upstream as of 19-01-2020.
[no-wpt-sync]
r? @servo-wpt-sync

The test failed because we didn't return the highest priority error (which is network error in this case).

As Manish mentioned in https://github.com/servo/servo/issues/25436#issuecomment-571065323, that's because we're using the Promise.all trick to signal loads.

If we can avoid relying on Promise.all, maybe we don't need to do a complex logic like this; instead, ideally, we should always finish the module load immediately when we hit network failure so that we don't even need to do the `max()` comparison.


---
- [x] `./mach build -d` does not report any errors
- [x] `./mach test-tidy` does not report any errors
- [x] These changes fix #25436 
- [x] There are tests for these changes

<!-- Also, please make sure that "Allow edits from maintainers" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->

<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->

<!-- Please describe your changes on the following line: -->
After connecting the lines of a rectangle, a new subpath has to be created containing the rectangle's origin as the only point in the subpath.
(see step 4 of https://html.spec.whatwg.org/multipage/canvas.html#dom-context-2d-rect)

---
<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->
- [x] `./mach build -d` does not report any errors
- [x] `./mach test-tidy` does not report any errors
- [x] These changes fix part of #25331

<!-- Either: -->
- [x] There are tests for these changes

<!-- Also, please make sure that "Allow edits from maintainers" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->

<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->

Cannot build Servo with latest master (2a594821ba) on macOS 10.14.6

(This is my first time to see this kind of compilation error ðŸ¤” I've tried to run `./mach clean` but it didn't help :/)

Check the error message [in this gist](https://gist.github.com/CYBAI/190f432efdf1d0398c502337ec22234f) ðŸ‘ˆ
Automated downstream sync of changes from upstream as of 18-01-2020.
[no-wpt-sync]
r? @servo-wpt-sync

Existing test of named-getting an iframe now succeeds. I added a new test for Object.getOwnPropertyNames(document) based on my understanding of the spec; that test could use a second opinion.

---
<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->
- [X] `./mach build -d` does not report any errors
- [X] `./mach test-tidy` does not report any errors
- [X] These changes fix #7273 for all implemented named getters; #21869 will also need supported property names

<!-- Either: -->
- [X] There are tests for these changes

<!-- Also, please make sure that "Allow edits from maintainers" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->

<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->

<!-- Please describe your changes on the following line: -->
Remove `#![allow(non_snake_case)]` from `script/lib.rs` and add `#[allow(non_snake_case)]` at each instance of violation.

---
<!-- Thank you for contributing to Servo! Please replace each `[ ]` by `[X]` when the step is complete, and replace `___` with appropriate data: -->
- [X] `./mach build -d` does not report any errors
- [X] `./mach test-tidy` does not report any errors
- [X] These changes fix #25531  (GitHub issue number if applicable)

<!-- Also, please make sure that "Allow edits from maintainers" checkbox is checked, so that we can help you if you get stuck somewhere along the way.-->

<!-- Pull requests that do not address these steps are welcome, but they will require additional verification as part of the review process. -->

```
  â–¶ TIMEOUT [expected OK] /html/semantics/forms/the-button-element/button-submit-remove-children.html
  â”‚ 
  â”‚ 
  â”‚ 
  â”” 
  â–¶ Unexpected subtest result in /html/semantics/forms/the-button-element/button-submit-remove-children.html:
  â”‚ TIMEOUT [expected PASS] This test will pass if a form navigation successfully occurs when clicking a child element of a <button type=submit> element with a onclick event handler which removes the button's child.
  â””   â†’ Test timed out
```
Possibly related to #24656.
```
  â–¶ ERROR [expected TIMEOUT] /fetch/origin/assorted.window.html
  â”‚   â†’ doc is null
  â”‚ 
  â”” frame.onload@http://web-platform.test:8000/fetch/origin/assorted.window.js:63:20
```
```
  â–¶ CRASH [expected OK] /html/dom/idlharness.worker.html
  â”‚ 
  â”‚ _RegisterApplication(), FAILED TO establish the default connection to the WindowServer, _CGSDefaultConnection() is NULL.
  â”‚ 
  â”‚ 
  â”‚ 
  â”‚ Stack trace for thread "WebWorker for http://web-platform.test:8000/html/dom/idlharness.worker.js"
  â”‚ stack backtrace:
  â”‚    0: <servo::backtrace::Print as core::fmt::Debug>::fmt
  â”‚    1: core::fmt::write
  â”‚    2: <std::io::stdio::Stdout as std::io::Write>::write_fmt
  â”‚    3: std::io::stdio::_print
  â”‚    4: servo::backtrace::print
  â”‚    5: servo::install_crash_handler::handler
  â”‚    6: _sigtramp
  â”‚    7: _ZN2js15MapGCThingTypedIZNS_14TenuringTracer8traverseIN2JS5ValueEEEvPT_EUlS5_E_EEDaRKS4_OS5_
  â”‚    8: _ZN2js2gc11StoreBuffer14MonoTypeBufferINS1_9ValueEdgeEE5traceERNS_14TenuringTracerE
  â”‚    9: _ZN2js7Nursery12doCollectionEN2JS8GCReasonERNS_2gc16TenureCountCacheE
  â”‚   10: _ZN2js7Nursery7collectEN2JS8GCReasonE
  â”‚   11: _ZN2js2gc9GCRuntime7minorGCEN2JS8GCReasonENS_7gcstats9PhaseKindE
  â”‚   12: _ZN2js14AllocateObjectILNS_7AllowGCE1EEEP8JSObjectP9JSContextNS_2gc9AllocKindEmNS6_11InitialHeapEPKNS_5ClassE
  â”‚   13: _ZN2js11ArrayObject11createArrayEP9JSContextNS_2gc9AllocKindENS3_11InitialHeapEN2JS6HandleIPNS_5ShapeEEENS7_IPNS_11ObjectGroupEEEjRNS_24AutoSetNewObjectMetadataE
  â”‚   14: _ZN2js27NewDenseFullyAllocatedArrayEP9JSContextjN2JS6HandleIP8JSObjectEENS_13NewObjectKindE
  â”‚   15: script::dom::bindings::structuredclone::write
  â”‚   16: _ZN6script3dom26dedicatedworkerglobalscope26DedicatedWorkerGlobalScope17post_message_impl17h209bb2c59f526455E.llvm.500965535905749603
  â”‚   17: <script::dom::dedicatedworkerglobalscope::DedicatedWorkerGlobalScope as script::dom::bindings::codegen::Bindings::DedicatedWorkerGlobalScopeBinding::DedicatedWorkerGlobalScopeBinding::DedicatedWorkerGlobalScopeMethods>::PostMessage_
  â”‚   18: <std::panic::AssertUnwindSafe<F> as core::ops::function::FnOnce<()>>::call_once
  â”‚   19: _ZN3std9panicking3try7do_call17h6cac3b08eff9df64E.llvm.15489554176225822398
  â”‚   20: __rust_maybe_catch_panic
  â”‚   21: script::dom::bindings::codegen::Bindings::DedicatedWorkerGlobalScopeBinding::DedicatedWorkerGlobalScopeBinding::postMessage
```