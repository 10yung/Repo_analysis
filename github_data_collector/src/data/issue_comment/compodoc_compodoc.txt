##### **Overview of the issue**

I have an angular app that uses TNS, so I have two routing modules plus a feature module for every module I create. Since the two routing modules share routes, I put them into a separate routing file named [moduleName].routes.ts. When I run compodoc, it only shows routes directly from root, but none of the routes from the lazily loaded modules.

##### **Operating System, Node.js, npm, compodoc version(s)**

Windows 10 Pro

##### **Angular configuration, a `package.json` file in the root folder**

<!-- This is mandatory for bug reports. This will help us to replicate the scenario. -->

##### **Compodoc installed globally or locally ?**

locally, but run using npx

##### **If possible sourcecode of the file where it breaks**

N/A

##### **If possible your terminal logs before the error**

NO error is generated in logs. Just the final documentation doesn't show all routes.

##### **Motivation for or Use Case**

Prevent re-specifying routes in more than one place. The goal is to reuse them from the abstracted file so that the mobile (TNS) and web routing modules can share the routes.

##### **Reproduce the error**

1. Create a TNS-supported angular app using angular cli.
2. Generate routes.
3. Move them to a separate file to be re-used by TNS and app routing modules.
4. Lazy load routes into app-routing.module.ts and app-routing.module.tns.ts.
5. Generate documentation using compodoc.

ISSUE: routes are missing.

##### **Related issues**

I didn't find any.

##### **Suggest a Fix**

Trace routes back to origin even if in separate file.

<!--
> Please follow the feature template below.
> For feature requests, start the label of the title with [FEATURE] and explain your use case and ideas clearly below, you can remove sections which are not relevant.
-->

##### **Overview of the feature**

<!-- explain the feature request -->
Compodoc already has a possibility to exclude private, protected and internal (`@internal` jsdoc) class members.
Oftentimes however libraries/projects have a convention to underscore class members with an underscore in order to mark it as "internal" for different reasons, one of them being runtime differentiation.

##### **Motivation for or Use Case**

<!-- explain why this is a bug for you -->
In my projects I would really like not to add a comment for internal members since they already are underscored.

Hi. While generating a doc, i got an error. On that time, the script is accessing app-routing.module.ts file.

`[18:06:24] parsing        : ../src/app/app-routing.module.ts
[18:06:24] Analysing routes definitions and clean them if necessary
Unhandled Rejection at: Promise {
  <rejected> Error: Could not find the node's symbol.`

Any luck?
##### **Overview of the feature**

In my team we generally define inputs / vars with inferred types:

```ts
// Inferred 
@Input() name = ''

// Explicit 
@Input name: string = ''
```

It seems that compodocs does not show that the first one is a string. It would be awesome if it did :smile: 

##### **Related issues**
This has already been requested here: https://github.com/compodoc/compodoc/issues/268



##### **Overview of the issue**

I have a Angular 8 project with lazy loaded routes. But when I start generating the documentation i get the following error:

```
Unhandled Rejection at: Promise {
  <rejected> TypeError: Cannot read property 'text' of undefined
      at C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:5691:55
      at Function.ArrayUtils.find (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\ts-simple-ast\dist\utils\ArrayUtils.js:38:21)
      at Object.getNodeByNameOrFindFunction (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\ts-simple-ast\dist\utils\compiler\getNodeByNameOrFindFunction.js:10:36)    
      at SourceFile.StatementedNode.class_1.getVariableDeclaration (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\ts-simple-ast\dist\compiler\statement\StatementedNode.js:312:28)
      at RouterParserUtil.cleanCallExpressions (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:5688:45)
e.js:312:28)
      at RouterParserUtil.cleanCallExpressions (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:5688:45)
      at AngularDependencies.getSourceFileDecorators (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:8151:46)
      at C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:7960:31
      at Array.map (<anonymous>)
      at AngularDependencies.getDependencies (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:7949:21)
      at CliApplication.Application.getDependenciesData (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:9498:40)       
} reason: TypeError: Cannot read property 'text' of undefined
    at C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:5691:55
    at Function.ArrayUtils.find (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\ts-simple-ast\dist\utils\ArrayUtils.js:38:21)
    at Object.getNodeByNameOrFindFunction (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\ts-simple-ast\dist\utils\compiler\getNodeByNameOrFindFunction.js:10:36)      
    at SourceFile.StatementedNode.class_1.getVariableDeclaration (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\ts-simple-ast\dist\compiler\statement\StatementedNode.js:312:28)
    at RouterParserUtil.cleanCallExpressions (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:5688:45)
    at AngularDependencies.getSourceFileDecorators (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:8151:46)
    at C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:7960:31
    at Array.map (<anonymous>)
    at AngularDependencies.getDependencies (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:7949:21)
    at CliApplication.Application.getDependenciesData (C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\node_modules\@compodoc\compodoc\dist\application-54cd2170.js:9498:40)
```

When i look into the application-54cd2170.js file i can see at line 5691 the following method:
```
RouterParserUtil.prototype.cleanCallExpressions = function (sourceFile) {
        var file = sourceFile;
        var variableStatements = sourceFile.getVariableDeclaration(function (v) {
            var result = false;
            if (typeof v.compilerNode.type !== 'undefined') {
                result = v.compilerNode.type.typeName.text === 'Routes';
            }
            return result;
        });
        var initializer = variableStatements.getInitializer();
        var _loop_5 = function (callExpr) {
            if (callExpr.wasForgotten()) {
                return "continue";
            }
            callExpr.replaceWithText(function (writer) { return writer.quote(callExpr.getText()); });
        };
        for (var _i = 0, _a = initializer.getDescendantsOfKind(Ast.SyntaxKind.CallExpression); _i < _a.length; _i++) {
            var callExpr = _a[_i];
            _loop_5(callExpr);
        }
        return file;
    };
```

So it has probably something to do with my lazy loaded routes:

```
const routes: Routes = [
  { path: '', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) },
  { path: 'documents', loadChildren: () => import('./documents/documents.module').then(m => m.DocumentsModule) }];
```

##### **Operating System, Node.js, npm, compodoc version(s)**

Win10, compodoc 1.1.11, npm 6.10.2, node 12.9.1

##### **Angular configuration, a `package.json` file in the root folder**

{
  "name": "front-end",
  "version": "0.0.0",
  "scripts": {
    "ng": "ng",
    "start": "ng serve",
    "start:mock": "ng serve --configuration=mock",
    "compodoc": "compodoc --config .compodocrc",
    "doc": "npx compodoc -p tsconfig.doc.json -s -n \"Function Point documentation\"",
    "build": "ng build",
    "test": "ng test",
    "lint": "ng lint",
    "e2e": "ng e2e --configuration=mock"
  },
  "private": true,
  "dependencies": {
    "@angular/animations": "^8.2.14",
    "@angular/cdk": "^8.1.4",
    "@angular/common": "^8.2.14",
    "@angular/compiler": "^8.2.14",
    "@angular/core": "^8.2.14",
    "@angular/flex-layout": "^8.0.0-beta.27",
    "@angular/forms": "^8.2.14",
    "@angular/material": "^8.1.4",
    "@angular/platform-browser": "^8.2.14",
    "@angular/platform-browser-dynamic": "^8.2.14",
    "@angular/router": "^8.2.14",
    "@azure/msal-angular": "^0.1.4",
    "angular-split": "^3.0.2",
    "hammerjs": "^2.0.8",
    "lodash": "^4.17.15",
    "rxjs": "~6.4.0",
    "rxjs-compat": "^6.5.3",
    "tslib": "^1.10.0",
    "zone.js": "~0.9.1"
  },
  "devDependencies": {
    "@angular-devkit/build-angular": "^0.803.19",
    "@angular/cli": "^8.3.19",
    "@angular/compiler-cli": "^8.2.14",
    "@angular/language-service": "^8.2.14",
    "@compodoc/compodoc": "^1.1.11",
    "@types/jasmine": "~3.3.8",
    "@types/jasminewd2": "~2.0.3",
    "@types/lodash": "^4.14.149",
    "@types/node": "~8.9.4",
    "codelyzer": "^5.0.0",
    "jasmine-core": "~3.4.0",
    "jasmine-reporters": "^2.3.2",
    "jasmine-spec-reporter": "~4.2.1",
    "karma": "~4.1.0",
    "karma-chrome-launcher": "~2.2.0",
    "karma-coverage-istanbul-reporter": "~2.0.1",
    "karma-jasmine": "~2.0.1",
    "karma-jasmine-html-reporter": "^1.4.0",
    "karma-junit-reporter": "^1.2.0",
    "protractor": "~5.4.0",
    "puppeteer": "^1.20.0",
    "ts-node": "~7.0.0",
    "tslint": "^5.20.1",
    "typescript": "~3.5.3"
  }
}


##### **Compodoc installed globally or locally ?**

locally

##### **If possible sourcecode of the file where it breaks**

```
const routes: Routes = [
  { path: '', loadChildren: () => import('./dashboard/dashboard.module').then(m => m.DashboardModule) },
  { path: 'documents', loadChildren: () => import('./documents/documents.module').then(m => m.DocumentsModule) }];

dashboard.module file:

const routes: Routes = [
  { path: '', component: DashboardComponent, canDeactivate: [CanDeactivateDashboardGuard]}
];
```

##### **If possible your terminal logs before the error**

```
[08:34:20] Searching package.json file
[08:34:20] package.json file found
[08:34:20] Processing package.json dependencies
[08:34:20] Searching README.md, CHANGELOG.md, CONTRIBUTING.md, LICENSE.md, TODO.md files
[08:34:20] README.md file found
[08:34:20] Error during C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\CHANGELOG read
[08:34:20] Continuing without CHANGELOG.md file
[08:34:20] Error during C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\CONTRIBUTING read
[08:34:20] Continuing without CONTRIBUTING.md file
[08:34:20] Error during C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\LICENSE read
[08:34:20] Continuing without LICENSE.md file
[08:34:20] Error during C:\Users\MartijnDormans\OneDrive - Mediaan abs b.v\Project\Front-end\TODO read
[08:34:20] Continuing without TODO.md file
[08:34:20] Get dependencies data
```

##### **Motivation for or Use Case**

I think that the new lazy loading syntax is not working for me. So, or I am doing something wrong or the new feature from update 1.1.11 is not working correctly.

##### **Reproduce the error**

Make a project with lazy loaded routes to modules that also contain some routes. See the source code section to reproduce.

##### **Related issues**

I think Issue #889 is related

##### **Suggest a Fix**

I think it has something to do with lazy loading. I don't know how to fix it and it would be much more helpful if there was an option to disable it. So I can still generate the other documentations.

<!--
> Please follow the issue template below for bug reports.
> For issue, start the label of the title with [BUG]
-->

##### **Overview of the issue**

I am unable to build documentation for my angular application. This was working fine up until a few days back, and it suddenly started breaking. It shows an error on app.routing, but even that is configured just fine. 

##### **Operating System, Node.js, npm, compodoc version(s)**

OS: Linux Ubuntu 
Node.js: 12.13.1
compodoc: installed as a dev dependency, v 1.1.11
Angular: 8.2.14

##### **Angular configuration, a `package.json` file in the root folder**

### package.json 
```
{
	"name": "agents-dashboard",
	"scripts": {
		"ng": "ng",
		"start": "ng serve",
		"test": "ng test",
		"lint": "npx eslint 'src/**/*.ts'",
		"e2e": "ng e2e",
		"fix-code": "prettier-eslint --write '**/*.{js,ts,json,md}'",
		"fix-styles": "prettier-stylelint --write '**/*.{scss,sass,less,css}'",
		"build:doc": "node_modules/@compodoc/compodoc/bin/index-cli.js -d doc/ -p tsconfig.app.json --theme readthedocs",
		
	},
	"private": true,
	"dependencies": {
		"@angular/animations": "~8.2.14",
		"@angular/common": "~8.2.14",
		"@angular/compiler": "~8.2.14",
		"@angular/core": "~8.2.14",
		"@angular/forms": "~8.2.14",
		"@angular/platform-browser": "~8.2.14",
		"@angular/platform-browser-dynamic": "~8.2.14",
		"@angular/router": "~8.2.14",
		"@angular/service-worker": "~8.2.14",
		"@codewithdan/observable-store": "^2.1.0",
		"@isc/access-control-lists": "~2.1.2",
		"@isc/better-notifications": "^1.0.1",
		"@isc/design-components": "latest",
		"@isc/ng-localstorage-wrapper": "0.0.1",
		"@types/jwt-decode": "^2.2.1",
		"google-libphonenumber": "^3.2.6",
		"lodash": "^4.17.15",
		"ngx-color-picker": "^8.2.0",
		"ngx-logger": "~4.0.7",
		"rxjs": "~6.5.3",
		"tslib": "~1.10.0",
		"zone.js": "~0.9.1"
	},
	"devDependencies": {
		"@angular-devkit/build-angular": "~0.803.19",
		"@angular/cli": "~8.3.19",
		"@angular/compiler-cli": "~8.2.14",
		"@angular/language-service": "~8.2.14",
		"@compodoc/compodoc": "^1.1.11",
		"@types/crypto-js": "~3.1.43",
		"@types/jasmine": "~3.5.0",
		"@types/jasminewd2": "~2.0.8",
		"@types/lodash": "^4.14.149",
		"@types/node": "~12.12.14",
		"@typescript-eslint/eslint-plugin": "~2.9.0",
		"@typescript-eslint/parser": "~2.9.0",
		"eslint": "~6.7.1",
		"eslint-config-airbnb": "~18.0.1",
		"eslint-config-prettier": "~6.7.0",
		"eslint-plugin-angular": "~4.0.1",
		"eslint-plugin-import": "~2.18.2",
		"eslint-plugin-json": "~2.0.1",
		"eslint-plugin-jsx-a11y": "~6.2.3",
		"eslint-plugin-markdown": "~1.0.1",
		"eslint-plugin-notice": "~0.8.9",
		"eslint-plugin-prettier": "~3.1.1",
		"eslint-plugin-react": "~7.16.0",
		"eslint-plugin-react-hooks": "~1.7.0",
		"eslint-plugin-security": "~1.4.0",
		"eslint-plugin-sonarjs": "~0.5.0",
		"husky": "~3.1.0",
		"jasmine-core": "~3.5.0",
		"jasmine-spec-reporter": "~4.2.1",
		"jscpd": "~2.0.16",
		"karma": "~4.4.1",
		"karma-chrome-launcher": "~3.1.0",
		"karma-coverage-istanbul-reporter": "~2.1.1",
		"karma-firefox-launcher": "~1.2.0",
		"karma-jasmine": "~2.0.1",
		"karma-jasmine-html-reporter": "~1.4.2",
		"lint-staged": "~9.5.0",
		"prettier": "~1.19.1",
		"prettier-eslint": "~9.0.1",
		"prettier-eslint-cli": "~5.0.0",
		"prettier-stylelint": "~0.4.2",
		"protractor": "~5.4.2",
		"stylelint": "~11.1.1",
		"stylelint-config-prettier": "~6.0.0",
		"stylelint-config-recommended": "~3.0.0",
		"stylelint-prettier": "~1.1.1",
		"tailwindcss": "^1.1.4",
		"tailwindcss-transitions": "^2.1.0",
		"ts-node": "~8.5.2",
		"typescript": "~3.5.3"
	},
}
```

##### **Compodoc installed globally or locally ?**

locally

##### **If possible sourcecode of the file where it breaks**

app-routing.module.ts
```
import { NgModule } from "@angular/core";
import { RouterModule, Routes } from "@angular/router";
import { AuthGuard } from "src/app/guards/auth/auth.guard";

const APP_ROUTES: Routes = [
	{
		path: "",
		loadChildren: () => import("./modules/auth/auth.module").then((m) => m.AuthModule),
	},
	{
		path: "error",
		loadChildren: () => import("./modules/errors/error.module").then((m) => m.ErrorModule),
		// loadChildren: () => import("./modules/dashboard/dashboard.module").then((m) => m.DashboardModule),
		// canActivate: [AuthGuard],
	},
	{
		path: "dashboard",
		loadChildren: () => import("./modules/dashboard/dashboard.module").then((m) => m.DashboardModule),
		canLoad: [AuthGuard],
	},
	{
		path: "**",
		redirectTo: "error",
	},

	// { path: "", redirectTo: "accounts" },
];

@NgModule({
	imports: [RouterModule.forRoot(APP_ROUTES, { enableTracing: false, relativeLinkResolution: "corrected" })],
	exports: [RouterModule],
})
export class AppRoutingModule {}
```

##### **If possible your terminal logs before the error**

<!-- provide all information we need -->

##### **Motivation for or Use Case**

<!-- explain why this is a bug for you -->

##### **Reproduce the error**

<!-- an unambiguous set of steps to reproduce the error. -->

##### **Related issues**

<!-- has a similar issue been reported before? -->

##### **Suggest a Fix**

<!-- if you can't fix the bug yourself, perhaps you can point to what might be
  causing the problem (line of code or commit) -->

<!-- Love compodoc? Please consider supporting our collective:
👉  https://opencollective.com/compodoc/donate -->

When supplying the children attribute to a route definition, those routes wont be visible in the final documentation.
No Error / Warning is displayed when compiling compodoc.

Route Definition:
```typescript
import {NgModule} from "@angular/core";
import {RouterModule, Routes} from "@angular/router";
import {CheckApplicationCookieGuard} from "../../core/guards/check-application-cookie.guard";
import {WebManagerPageComponent} from "./pages/web-manager-page/web-manager-page.component";
import {environment} from "../../../environments/environment";
import {WebManagerListPageComponent} from "./pages/web-manager-list-page/web-manager-list-page.component";
import {ScenarioArchivePageComponent} from "./pages/subPages/scenario-archive-page/scenario-archive-page.component";
import {ScenarioEditorPageComponent} from "./pages/subPages/scenario-editor-page/scenario-editor-page.component";
import {MultiScenarioExamEditorPageComponent} from "./pages/subPages/multi-scenario-exam-editor-page/multi-scenario-exam-editor-page.component";
import {GlobalMediaSetPageComponent} from "./pages/subPages/global-media-set-page/global-media-set-page.component";
import {SessionPlannerPageComponent} from "./pages/subPages/session-planner-page/session-planner-page.component";
import {BookmarkSetPageComponent} from "./pages/subPages/bookmark-set-page/bookmark-set-page.component";
import {VogSetPageComponent} from "./pages/subPages/vog-set-page/vog-set-page.component";
import {MediaSetPageComponent} from "./pages/subPages/media-set-page/media-set-page.component";
import {ChecklistsSetPageComponent} from "./pages/subPages/checklists-set-page/checklists-set-page.component";
import {AssessmentPageComponent} from "./pages/subPages/assessment-page/assessment-page.component";
import {VopSetPageComponent} from "./pages/subPages/vop-set-page/vop-set-page.component";
import {NotificationsPageComponent} from "./pages/subPages/notifications-page/notifications-page.component";
import {UsersPageComponent} from "./pages/subPages/users-page/users-page.component";
import {ScenarioEditorEditPageComponent} from "./pages/subPages/scenario-editor-page/scenario-editor-edit-page/scenario-editor-edit-page.component";
import {MultiScenarioExamEditorEditPageComponent} from "./pages/subPages/multi-scenario-exam-editor-page/multi-scenario-exam-editor-edit-page/multi-scenario-exam-editor-edit-page.component";
import {GlobalMediaSetEditPageComponent} from "./pages/subPages/global-media-set-page/global-media-set-edit-page/global-media-set-edit-page.component";
import {SessionPlannerEditPageComponent} from "./pages/subPages/session-planner-page/session-planner-edit-page/session-planner-edit-page.component";
import {BookmarkSetEditPageComponent} from "./pages/subPages/bookmark-set-page/bookmark-set-edit-page/bookmark-set-edit-page.component";
import {VogSetEditPageComponent} from "./pages/subPages/vog-set-page/vog-set-edit-page/vog-set-edit-page.component";
import {MediaSetEditPageComponent} from "./pages/subPages/media-set-page/media-set-edit-page/media-set-edit-page.component";
import {ChecklistSetEditPageComponent} from "./pages/subPages/checklists-set-page/checklist-set-edit-page/checklist-set-edit-page.component";
import {AssessmentEditPageComponent} from "./pages/subPages/assessment-page/assessment-edit-page/assessment-edit-page.component";
import {VopSetEditPageComponent} from "./pages/subPages/vop-set-page/vop-set-edit-page/vop-set-edit-page.component";
import {LocalizationsPageComponent} from "./pages/subPages/localization-page/localizations-page.component";
import {ScenarioArchiveEditPageComponent} from "./pages/subPages/scenario-archive-page/scenario-archive-edit/scenario-archive-edit-page/scenario-archive-edit-page.component";
import {DataAclSettingsPageComponent} from "./pages/subPages/users-page/subPages/data-acl-settings-page/data-acl-settings-page.component";
import {AclSettingsPageComponent} from "./pages/subPages/users-page/subPages/acl-settings-page/acl-settings-page.component";
import {TrainingSessionTemplatePageComponent} from "./pages/subPages/training-session-template-page/training-session-template-page.component";
import {TrainingSessionTemplateEditPageComponent} from "./pages/subPages/training-session-template-page/training-session-template-edit-page/training-session-template-edit-page.component";
import {RecorderStatusComponent} from "./pages/subPages/recorder-status/recorder-status.component";
import {SchedulersComponent} from "./pages/subPages/schedulers/schedulers.component";

const routes: Routes = [
	{
		path: "", component: WebManagerPageComponent,
	},
	{
		path: environment.routesFinal.webManager.list.routeName, component: WebManagerListPageComponent, canActivate: [CheckApplicationCookieGuard],
		children: [
			//obsolete
			{
				path: "",
				redirectTo: environment.routesFinal.webManager.list.scenarioArchive.routeName
			},
			{
				path: environment.routesFinal.webManager.list.scenarioArchive.routeName,
				component: ScenarioArchivePageComponent,
			},
			{
				path: "recording-archive",
				component: ScenarioArchivePageComponent,
			},

			{
				path: "recording-archive/default/edit/:rootFolderIndex/:id",
				component: ScenarioArchiveEditPageComponent,
			},

			{
				path: "recording-archive/default/edit/:rootFolderIndex/:id/:scenarioRecordingExportId",
				component: ScenarioArchiveEditPageComponent,
			},

			{
				path: "recording-archive/osce/edit/:rootFolderIndex/:id",
				component: ScenarioArchiveEditPageComponent,
			},
			{
				path: environment.routesFinal.webManager.list.scenarioEditor.routeName,
				component: ScenarioEditorPageComponent,
			},
			{
				path: environment.routesFinal.webManager.list.scenarioEditor.edit.routeName,
				component: ScenarioEditorEditPageComponent,
			},

			{
				path: "exams",
				component: MultiScenarioExamEditorPageComponent,
			},
			{
				path: "exams/edit/:id",
				component: MultiScenarioExamEditorEditPageComponent,
			},

			{
				path: "global-medias",
				component: GlobalMediaSetPageComponent,
			},
			{
				path: "global-medias/edit/:id",
				component: GlobalMediaSetEditPageComponent,
			},

			{
				path: "session-planner",
				component: SessionPlannerPageComponent,
			},
			{
				path: "session-planner/edit/:id",
				component: SessionPlannerEditPageComponent,
			},

			{
				path: "session-planner/edit",
				component: SessionPlannerEditPageComponent,
			},

			{
				path: "lib-bookmark-sets",
				component: BookmarkSetPageComponent,
			},
			{
				path: "lib-bookmark-sets/edit/:id",
				component: BookmarkSetEditPageComponent,
			},

			{
				path: "lib-vog-set",
				component: VogSetPageComponent,
			},
			{
				path: "lib-vog-set/edit/:id",
				component: VogSetEditPageComponent,
			},

			{
				path: "lib-medias",
				component: MediaSetPageComponent,
			},
			{
				path: "lib-medias/edit/:id",
				component: MediaSetEditPageComponent,
			},

			{
				path: "lib-checklists",
				component: ChecklistsSetPageComponent,
			},
			{
				path: "lib-checklists/edit/:id",
				component: ChecklistSetEditPageComponent,
			},

			{
				path: "lib-assessments",
				component: AssessmentPageComponent,
			},
			{
				path: "lib-assessments/edit/:id",
				component: AssessmentEditPageComponent,
			},

			{
				path: "lib-vop-set",
				component: VopSetPageComponent,
			},
			{
				path: "lib-vop-set/edit/:id",
				component: VopSetEditPageComponent,
			},

			{
				path: "template-training-session",
				component: TrainingSessionTemplatePageComponent,
			},

			{
				path: "template-training-session/edit/:id",
				component: TrainingSessionTemplateEditPageComponent,
			},

			{
				path: "notifications",
				component: NotificationsPageComponent,
			},
			{
				path: "users",
				component: UsersPageComponent,
			},
			{
				path: "users/data-acl",
				component: DataAclSettingsPageComponent,
			},
			{
				path: "users/acl",
				component: AclSettingsPageComponent,
			},
			{
				path: "localizations",
				component: LocalizationsPageComponent,
			},
			{
				path: "recorder-status",
				component: RecorderStatusComponent,
			},
			{
				path: "schedulers",
				component: SchedulersComponent,
			},
			{
				path: "conf",
				loadChildren: ()=>import("./subModules/configuration/configuration.module").then(m=>m.ConfigurationModule)
			}
		]
	}
];

@NgModule({
	imports: [RouterModule.forChild(routes)],
	exports: [RouterModule]
})
export class WebManagerRoutingModule {
}
```



Compodoc Outcome:
![image](https://user-images.githubusercontent.com/9964013/71668535-94d4a000-2d69-11ea-9538-eaf5b6393e2d.png)

Compodoc version: "@compodoc/compodoc": "^1.1.11",
Node version: v12.2.0
Tsconfig:
{
	"compileOnSave": true,
	"compilerOptions": {
		"baseUrl": "./",
		"outDir": "./dist/out-tsc",
		"sourceMap": true,
		"declaration": false,
		"module": "commonjs",
		"moduleResolution": "node",
		"emitDecoratorMetadata": true,
		"experimentalDecorators": true,
		"importHelpers": true,
		"target": "es2018",
		"types": [
			"jasmine",
			"node"
		],
		"lib": [
			"es2018",
			"dom"
		]
	},
	"typeRoots": [
		"src/app/typings/*.d.ts"
	],
	"files": [
		"src/app/typings/DataPermissions.d.ts"
	],
	"exclude": [
		"node_modules",
		"**/*.spec.ts"
	],
	"include": [
		"Scripts/**/*.ts",
		"../../BusinessObjects/BO/RecorderType.cs",
		"src/**/*.ts",
		"src/app/typings/*.d.ts",
		"src/app/typings/DataPermissions.d.ts"
	]
}

##### **Overview of the issue**
I am trying to keep the configuration in the `package.json` file using the `compodoc` property, but it ignores the configurations.

```json
...
  "scripts"        : {
    "docs:compodoc1": "npx @compodoc/compodoc -c package.json",
    "docs:compodoc2": "npx @compodoc/compodoc -p package.json",
    "docs:compodoc3": "npx @compodoc/compodoc -p tsconfig.json",
    "docs:compodoc": "npx @compodoc/compodoc --tsconfig tsconfig.json --output documentation/compodoc --theme material", // only this works
  }
...
  "compodoc": {
    "theme": "material",
    "folder": "documentation/compodoc",
    "config": "tsconfig.json"
  }
...
```
I tried to move it into `tsconfig.json`, as I thought it might have been a typo and it was meant to say `tsconfig.json` instead of `package.json`, but that also didn't work. It keeps creating the output in the `documentation` folder, while I want it to output it in the `documentation/compodoc` subfolder. I want to keep the configuration for the folder and theme in the `package.json` file or `tsconfig.json`. If I don't include the `--tsconfig` or `--config` flags, it tells me I need to provide the flag, even though both `tsconfig.json` and `package.json` are in the root of the project, not in the `src` directory.
##### **Operating System, Node.js, npm, compodoc version(s)**
OS: MacOS Mojave 10.14.6
Node: 12.13.0
Yarn: 1.19.1
##### **Compodoc installed globally or locally ?**
Using `npx`; do I have to install it globally or locally with `npm`?
##### **Reproduce the error**
Use one of the numbered scripts and try to run the script command.
no documentation coverage and other missing sites under angular 8:

node version v10.16.2

console.log says:
Version mismatch when loading serialised index. Current version of lunr '2.3.6' does not match serialized index '2.3.8'

@angular/animations : ^8.2.5
@angular/cdk : ^8.1.4
@angular/common : ^8.2.5
@angular/compiler : ^8.2.5
@angular/core : ^8.2.5
@angular/forms : ^8.2.5
@angular/platform-browser : ^8.2.5
@angular/platform-browser-dynamic : ^8.2.5
@angular/router : ^8.2.5
@asymmetrik/ngx-leaflet : ^6.0.1
@ngx-translate/core : ^11.0.1
@ngx-translate/http-loader : ^4.0.0
@types/leaflet : ^1.5.4
angular-font-awesome : ^3.1.2
classlist.js : ^1.1.20150312
font-awesome : ^4.7.0
highcharts : ^7.2.0
highcharts-angular : ^2.4.0
leaflet : ^1.5.1
moment : ^2.24.0
ng-click-outside : ^5.1.1
ng-inline-svg : ^9.0.1
npn-slider : ^1.3.2
primeicons : ^2.0.0
primeng : ^8.0.3
rxjs : ^6.5.3
tslib : ^1.10.0
zone.js : ~0.9.1

Is there a way to document types like we do with functions?

```ts
/**
 * Get the length of a List
 * @param {T} T a list
 */
type Length<T extends any[]> = T['length']
```

I am looking into to migrating away from typedoc for
https://github.com/pirix-gh/ts-toolbelt
(It provides only type helpers for TS, no js code)