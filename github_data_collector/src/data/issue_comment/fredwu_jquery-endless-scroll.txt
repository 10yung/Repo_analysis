Would it be possible to add the default settings for the configuration options to the initial ReadMe file?
Once ceasefire has returned true the endless scroll stop, is there any way to enable that again after ceasefire is triggered I mean is there anyway to set firing variable to true again.

what is the correct way to add endless-scroll  in table body element.
i try it using callback but facing many issue. 
like calling event when scroll up
$("#indi_screener_detail_rows").unbind('scroll');
            $('#bodyElementID').endlessScroll({
                fireOnce: false,
                fireDelay: 1000,
                loader: '',
                ceaseFireOnEmpty:false,
                insertAfter: '#table tr:last',
                callback: function(i,j,k) { 
                    var offset = $('#bodyElementID tr').length;
                        my_custom_function(true,i);//append row by ajax call in side body
                    return true;
                }
            });

I want to remove endless scroll plugin at a certain point. how can i ?

If i use callback instead of content and i want to dynamically set 
`ceaseFire: true`
otherwise it will keep showing loader on each scroll event.

First, I'm sorry my bad english.

I'm adding repeater data using Ajax-service object.
Page down Scroll bar loader as it seems.
But the data is not yet installed.
How can I solve it?

var params = new Object();
params.skip = "10";
params.urlpath = window.location.href;
debugger;
$(document).ready(function () {
    debugger;
    $(document).endlessScroll({
        inflowPixels: 0,
        fireOnce: true,
        fireDelay: 1000,
        loader: '',
        ceaseFireOnEmpty: false,
        intervalFrequency: 1000,
        callback: function (p) {
            debugger;
            $.ajax({
                type: "POST",
                url: "/AjaxService.asmx/GetIlan",
                data: $.toJSON(params),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                complete: function (response) {
                    // access the params 
                    params.skip = parseInt(params.skip) + 10;
                },
                success: function (response) {  
                        // I'm pulling data here.
                     }
                }
            });
            return false;
        }
    });
});

Thanks,


The page is only triggering for once and i tried putting fireOnce: false; stil nothing!

I have came up with an idea of parameterization of the scrolling functionality.
1. add _scrollMode_ to options. It should be set to one of the following:
   - "next" -- detect only downwards scrolling;
   - "prev" -- detect only upwards scrolling;
   - null -- detect both downwards and upwards scrolling;
2. change logic of the _detectScrollDirection_ function:
   1. remove 
      `javascript 
      this.didScroll = true;
      `
      before the _if_-block;
   2. add 
      `javascript 
      this.didScroll = this.options.scrollMode ? this.options.scrollMode === this.scrollDirection : true;
      `
      after _if_-block;

This will set didScroll to false in case of unneeded scroll event

Hello :)
I have discovered that plugin doesn't work when _inflowPixels_ is 0 and the _target_ is in the zoomed-in page.

The problem lies in jQuery's _scrollTop_ function. 
It returns float value, which is a bit smaller than the:

``` javascript
innerWrap.height() - $(target).height()
```

Thus, the quick solution I've came up with is:

``` javascript
 Math.ceil($(target).scrollTop())
```

lines 221 and 217, in _scrollableAreaMargin_ function.

PS: Thanks for the nice lightweight plugin :)
