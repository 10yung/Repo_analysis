
**bug 描述**
多个页面的样式下使用page选择器会导致样式覆盖。

**复现步骤**
使用remax的template并且创建文件，使得目录结构如下
```
src/pages
├── index
│   ├── index.module.css
│   └── index.tsx
└── other
    ├── index.module.css
    └── index.tsx
```
index/index.module.css
``` less
page {
  background: #fff;
}
```
index/index.tsx
``` tsx
import * as React from "react";
import { View, Text, Image, Button, navigateTo } from "remax/alipay";
import styles from "./index.module.css";

export default () => {
  return (
    <View className={styles.app}>
      <Button onClick={() => navigateTo({ url: "/pages/other/index" })}>
        跳转
      </Button>
    </View>
  );
};
```
other/index.module.css
```less
page {
  background: pink;
}

```

other/index.tsx
```tsx
import * as React from "react";
import { View, Text, Image } from "remax/alipay";
import styles from "./index.module.css";

export default () => {
  return <View className={styles.app}></View>;
};
```

编译之后发现两个page的css都被编译到了app.acss中
![image](https://user-images.githubusercontent.com/20639676/72434120-d176b180-37d5-11ea-9954-88489880be68.png)



**期望结果**
pages/index/index 页面的背景色为白色，pages/other/index的背景色为可爱的粉色


**复现代码**
见上面复现步骤。

**版本信息:**

- remax 版本: 1.11.2
- 手机型号: 不需要
- 小程序端 支付宝小程序
- 小程序版本 1.19.0
- 开发环境 mac OS

**其他信息**



**问题描述**
小程序原生依赖一些global上的数据，在逐步迁移过程中原有页面需要继续使用，如何可以使用global数据，如果不可以使用如何在小程序原生页面中引用app.js中定义的store。试着改了一下，发现native是直接copy过去的，内部引用地址都没有改，在dist目录下运行不起来。望解答

**示例代码**
[如果有必要，展示代码，线上示例，或仓库]

**其他信息**
[如截图等其他信息可以贴在这里]

**需求描述**

现在如果 remax-cli 编译失败了，仅在终端会有错误提醒，但是一般开发时窗口都是关注在编辑器和 IDE 上，编译失败时会发现在编辑器里怎么保存都不会有效果。

**解决方案**

编译失败时增加桌面提醒，通过新增一个 `--notify` 参数开启（默认关闭）。

**需求描述**
[详细地描述需求，让大家都能理解]

自动添加 ”rpx” 后缀到内联样式为数字的属性后。如需使用 ”rpx” 以外的单位，请将此值设为数字与所需单位组成的字符串。

```jsx
// Result style: '10rpx'
<div style={{ height: 10 }}>
  Hello World!
</div>
```

> https://zh-hans.reactjs.org/docs/dom-elements.html#style

**解决方案**
https://github.com/facebook/react/blob/master/packages/react-dom/src/shared/CSSProperty.js



**bug 描述**
当用 View 包一成原生组件后，在 View 上监听 onClick 使用 e.stopPropagation时， 会报 e.stopPropagation is not a function; 的错误

**期望结果**
 e.stopPropagation 正确生效

**复现代码**
```
<View
        onClick={(e: any) => {
          console.log('dddsadsadsdasdsadasdas');
          e.stopPropagation();
        }}
      >
        <Button className="add-button" hoverClass="none">
          <Text className="add-icon">+</Text>
          <Text>{text}</Text>

          {/* <Info info="dsdasd"></Info> */}
        </Button>
      </View>
```

**版本信息:**

- remax 版本: [e.g. 1.10.7]
- 手机型号 [e.g. iPhone X]
- 小程序端 [e.g. 微信小程序]
- 小程序版本[e.g. 2.9.4]
- 开发环境 [e.g. mac OS]

**其他信息**
![image](https://user-images.githubusercontent.com/22768639/71552144-cc71de00-2a31-11ea-9c90-3cde87629225.png)


**需求描述**

现在这样想要支持`Promise.finally`的话会报错
```tsx
import 'core-js/es/promise/finally';
```

**解决方案**

扩展 babel

**其他信息**

![image](https://user-images.githubusercontent.com/29084441/71456332-eada9e00-27d3-11ea-8a89-e04d71381a2d.png)


通过在 remax.config 中增加了 /postcss/url/relativePath 配置项支持图片的相对路径。
默认采用以 src 为 root 的绝对路径，当 relativePath= true 的时候采用引用图片的样式文件的相对路径
**需求描述**

支持优先 resolve `.remax.js[x]`、`.remax.ts[x]` 结尾的模块。

比如这里 https://github.com/umijs/hooks/pull/187/files#diff-ef965282ed00d4eb121bfb7e34407d81

可以通过扩展名的方式实现 Remax 跟 ReactDOM 的同构。
