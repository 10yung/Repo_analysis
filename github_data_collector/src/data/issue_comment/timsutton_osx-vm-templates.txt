In Catalina, the output for software update appears so:

```
Software Update Tool

Finding available software
Software Update found the following new or updated software:
* Label: Command Line Tools for Xcode-11.2
	Title: Command Line Tools for Xcode, Version: 11.2, Size: 224942K, Recommended: YES,
* Label: Command Line Tools for Xcode-11.3
	Title: Command Line Tools for Xcode, Version: 11.3, Size: 224878K, Recommended: YES,
```

`softwareupdate -i` expect "Command Line Tools for Xcode-11.2" not "Label: Command Line Tools for Xcode-11.2". Support for Mojave/High Sierra is preserved, since the added sed pipe won't change output without "Label: ".
Hi @timsutton, I am wondering what it would take to get MacOS Mojave supported here? Maybe it already works and the README hasn't been updated. If it is not supported, I am glad to help and make some PRs if I'm pointed in the right direction
In Yosemite, the High Sierra installer is automatically downloaded to `/Applications` when installing all updates. This change ignores that update to keep the final box clean and without unncessary content.
## This PR

- adds support for High Sierra to `prepare_iso.sh`
- Removes some whitespace, converts tabs to spaces
- A few minor changes suggested by [shellcheck](https://github.com/koalaman/shellcheck)
- Sets checksum values to "none" since Packer warns if there is no checksum or checksum type specified

## Why

- Even though we can't install unsigned packages on anything beyond 10.12.3, I think having this script support High Sierra is still useful.
This is based on prepare_vdi.sh script and uses Parallels disk tools to convert a VDI into Parallels internal HDD format. The new script prepare_pvm.sh creates a Parallels virtual machine (.pvm) with that disk attached. The new VM is used by the new parallels-pvm builder to build an image for vagrant.

Parallels disk tools should come with any installation of Parallels Desktop.

#87 
I am successfully using the new [`prepare_vdi.sh`](https://github.com/timsutton/osx-vm-templates/blob/d029e89e04871b6c7a6c1cd0ec5beb7fa976f345/prepare_iso/prepare_vdi.sh) script to generate a macOS 10.13.2 VM.

Unfortunately, it looks like Recovery Partition is not present in the resulting disk image. I assume that is 
committed on purpose to save disk space. Is there an easy way to transfer that partition from the sparse bundle?

I am using VMware Fusion Professional so that I can make use of the NVRAM to disable SIP [and enable Kexts to be default imported](https://developer.apple.com/library/content/technotes/tn2459/_index.html#//apple_ref/doc/uid/DTS40017658).
## This PR

- Is too large
- Complete rewrite of the README to make it more procedural and organized
- Switch from `.vdi` to `.vhd` type so that we can convert from VHD to both VirtualBox and Parallels disks
- Add Chef-client as a provisioner. This was out of pure need for our own builds and base box creation, so I thought it might be useful to have here. Happy to remove if outside the scope of the repo
- Reformats `template.json` with `packer fix` - also subjective/preference. The `prlctl` commands are slightly nauseating, but that's how `packer fix` chooses to format for some reason.
- Adds a new `prepare_pvm.sh` script to convert ` VHD into a parallels `.pvm` to use with Packer. More (a lot more) in the README.

## Known Issues / Questions Before Merging
- `prepare_vhd.sh` does not actually work with any versions less than macOS Sierra...table should probably be modified if it is okay to keep.
- Adds a second version of `install-parallels-tools.sh`. Although the two versions are basically the same thing, I have found more consistent success with `install-parallels-tools.sh`. Not sure why. Open to suggestions.

This has been a WIP for a while, so there might mistakes in here so keen eyes are appreciated.
Is macOS Server like a stripped down version of macOS for command line workflows and such? If so, could we include a shell script to generate ISO's for macOS Server, and packer configuration for running macOS Server in Vagrant?
I'm trying to get a High Sierra Vagrant box packed, but after importing the OVF, I get a UEFI shell with no access to `ls`.

Screenshot:

https://i.imgur.com/jFu8v2A.png

I'm using High Sierra as the host as well as the guest.
Is there any particular reason that OSInstall.mkpkg is listed twice in OSInstall.collection? Is that some kind of workaround for some specific oddity, or is this perhaps a typo?