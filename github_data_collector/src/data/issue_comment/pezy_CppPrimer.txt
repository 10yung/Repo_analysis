### Exercise information
I am confused why the move constructor was declared to  have a ```const shared_ptr&&``` parameter.
I don't think it can pass the compilation since the value is passed to a ```shared_ptr&```  signature function ```swap ```.
Could anyone kindly explain whether it was a mistake or I misunderstood? 
Thanks!

<!-- 
Exercise 16.28
>
### Question or Bug

<!--
cannot compile.
-->

### Your enviroment information

- **System**:  MacOS
- **Compiler version/IDE**:  Clang 11.0.0

In file `ex13_08.h`, is it a must need to dynamically allocate a new `string` and copy the object to which `ps` points, rather than **copying the object to which `ps` points**?

Like:

```c++
    HasPtr(const HasPtr& hp) : ps(new std::string(*hp.ps)), i(hp.i) {}
    HasPtr& operator=(const HasPtr& hp)
    {
        *ps = *hp.ps;
        i = hp.i;
        return *this;
    }
```
### Exercise information

Exercise 14.43
> Using library function objects, determine whether a given int value is divisible by any element in a container of ints..


### Question or Bug

The answer for English version is right. "Any element in a containner", definitely we should use `any_of` function. But in Chinese version ( 第五版), the exercise becomes:

> 使用标准库函数对象判断一个给定的int值是否能够被int容器中的所有元素整除。

The translation is wrong. But under that condition, `all_of` function should be used.

Just for a discussion.


line 15: other(0) typo
### Exercise information


Exercise 1.8

### Question or Bug
Didn't generate error for 
```c++
std::cout << /* "*/" /* "/*" */;
```
Instead, terminal shows
```
 /* 
```
Should the first /* and the first */ comments out the first " and last */ and last /* comments out the last " and leave with with "/*" in the middle?
### Your enviroment information

- **System**:  : (Ubuntu 7.3.0-27ubuntu1~18.04):
- **Compiler version/IDE**:  gcc version 7.3.0

r1 is a int&, while v2 is a const int.
Why it is legel?
> r1 = v2; // legal, top-level const in v2 is ignored.



超过10没输出，只输出了1到10，和1到9的数量。
### Exercise information

<!-- 
Exercise 1.1
> Review the documentation for your compiler and determine what file naming convention it uses. Compile and run the main program from page 2.
-->
Exercise 15.39

### Question or Bug

<!--
cannot compile.
-->

### Your enviroment information

- **System**:  :grey_question:
- **Compiler version/IDE**:  :grey_question:

关于e17.21 我有一个问题。
给出的代码中在122到125行之间：

```cpp
for (const auto &nums : entry.phones)
{
	for (sregex_iterator it(nums.begin(), nums.end(), r), end_it;
		it != end_it; ++it)
	{
		//! for each number
		//! check whether the number's formatting is valid
		if (!valid(*it))
			//! string in badNums
			badNums << " " << nums; 
		else
			//! "writes" to formatted's string
			formatted << " " << format(nums);
	}
}
```

---------------------------------------------------------------------------

我的理解是：nums是vector<string>的元素，类型是string，表示每个人的每个电话号码。
之后定义的it是nums的迭代器，第二个for循环历遍并检查的是第一个电话号码的每一个字符，（比如第一个电话号码是000-123-1234，it是0，并向前递增）好像和原题意要求的不一样。不知道我的理解和表述对不对，希望得到解答和回复。
