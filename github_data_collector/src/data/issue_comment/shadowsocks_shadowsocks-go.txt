$ go get github.com/shadowsocks/shadowsocks-go/cmd/shadowsocks-server
package golang.org/x/sys/cpu: unrecognized import path "golang.org/x/sys/cpu" (parsing golang.org/x/sys/cpu: XML syntax error on line 9: expected /> in element)
package golang.org/x/crypto/blowfish: unrecognized import path "golang.org/x/crypto/blowfish" (parsing golang.org/x/crypto/blowfish: XML syntax error on line 9: expected /> in element)
package golang.org/x/crypto/cast5: unrecognized import path "golang.org/x/crypto/cast5" (parsing golang.org/x/crypto/cast5: XML syntax error on line 9: expected /> in element)
package golang.org/x/crypto/salsa20/salsa: unrecognized import path "golang.org/x/crypto/salsa20/salsa" (parsing golang.org/x/crypto/salsa20/salsa: XML syntax error on line 9: expected /> in element)
$ go version
go version go1.7.5 linux/amd64
很不要脸的到这里来打广告了👀

一款新的爬墙的工具，不妨一试？

https://github.com/asche910/flynet
i want to see more logs, because i feel it often lost connections. how can i start it with debug mode ,

thank you
www.kkcap.net 是我做的一个ss客户端。
但是现在有个问题很困扰我,我使用 python/shadowsocks-libev/node.js 版本的 Server端
我开发的ss客户端都可以正常使用aes-128-cfb 加密算法。
但是唯独我使用go-shadowsocks server 选择aes-128-cfb 算法
我的客户端就无法工作?
go版的aes-128-cfb 和其他语言版本的 aes-128-cfb 有什么区别呢？
Since `ss.UpdateConfig` will merge non-zero value in `new`, but `cmdConfig` from `flag.Parse` will always has a default value (300) from `flag.IntVar(&cmdConfig.Timeout, ....)`, so the `timeout` value from config file will always be overwritten until explicit specify `-t xxx` in cmd line.
This PR fix this issue and respect `timeout` value in config file if no `-t xxx` is specified in cmd line.
如题，像python一样监听端口的时候设置  socket.listen(backlog)
而不是通过去改系统的参数

```
$./build.sh
creating shadowsocks binary version 1.2.2
/go/src/github.com/shadowsocks/shadowsocks-go/cmd/shadowsocks-local /go/src/github.com/shadowsocks/shadowsocks-go
building shadowsocks-local-mac64-1.2.2
# net
/usr/local/go/src/net/cgo_bsd.go:15:72: could not determine kind of name for C.AI_MASK
```
## 问题描述

local 侧监听 127.0.0.1:8123

```
2019/06/18 09:43:27 available remote server x.xx.xx.xx:8388
2019/06/18 09:43:27 starting local socks5 server at 127.0.0.1:8123 ...
```

通过 proxy 进行 go get 代码下载，报 “net/http: TLS handshake timeout”

```
$go get -v -u golang.org/x/time
Fetching https://golang.org/x/time?go-get=1
https fetch failed: Get https://golang.org/x/time?go-get=1: net/http: TLS handshake timeout
package golang.org/x/time: unrecognized import path "golang.org/x/time" (https fetch: Get https://golang.org/x/time?go-get=1: net/http: TLS handshake timeout)
```

对应的 ss local 的 debug 日志

```
[DEBUG] 10:02:41 socks connect from 127.0.0.1:56044
[DEBUG] 10:02:41 connected to golang.org:443 via xx.xx.xx.xx:8388
[DEBUG] 10:02:51 closed connection to golang.org:443
```

通过 curl 进行 fq 确认

```
$curl cip.cc
IP      : 198.13.45.154
地址    : 日本  东京都  东京
运营商  : choopa.com

数据二  : 日本 | 东京vultr数据中心

数据三  : 日本东京都东京

URL     : http://www.cip.cc/xx.xx.xx.xx
```

对应的 ss local 的 debug 日志

```
[DEBUG] 10:03:04 socks connect from 127.0.0.1:56050
[DEBUG] 10:03:04 connected to cip.cc:80 via xx.xx.xx.xx:8388
[DEBUG] 10:03:05 closed connection to cip.cc:80
```

对比来看，似乎和经过 proxy 访问时所耗费的时间有一定关系；

- 执行 go get 时，10s 后主动关闭连接
- 执行 curl 时，1s 后主动关闭连接

## 版本

- shadowsocks-local-linux64-1.2.2
- shadowsocks-server-linux64-1.2.2

## 配置文件

```
$cat config.json
{
    "server":"xx.xx.xx.xx",
    "server_port":8388,
    "local_port":8123,
    "local_address":"127.0.0.1",
    "password":"........",
    "method": "aes-256-cfb",
    "timeout":600
}
```

求教，还有什么配置可以进行调整

## 补充

在执行 go get 时，还会报其他类型的错误

```
Fetching https://golang.org/x/time?go-get=1
https fetch failed: Get https://golang.org/x/time?go-get=1: unexpected EOF
package golang.org/x/time: unrecognized import path "golang.org/x/time" (https fetch: Get https://golang.org/x/time?go-get=1: unexpected EOF)
```

```
Fetching https://golang.org/x/time?go-get=1
Parsing meta tags from https://golang.org/x/time?go-get=1 (status code 200)
get "golang.org/x/time": found meta tag get.metaImport{Prefix:"golang.org/x/time", VCS:"git", RepoRo                                                                                          ot:"https://go.googlesource.com/time"} at https://golang.org/x/time?go-get=1
golang.org/x/time (download)
# cd .; git clone https://go.googlesource.com/time /go/src/golang.org/x/time
Cloning into '/go/src/golang.org/x/time'...
fatal: unable to access 'https://go.googlesource.com/time/': gnutls_handshake() failed: The TLS conn                                                                                          ection was non-properly terminated.
package golang.org/x/time: exit status 128

```

似乎所有错误都和网络链接断开有关
How to get shadowsocks log file on windows server？
May  8 22:28:50 blake shadowsocks-go: panic: runtime error: slice bounds out of range
May  8 22:28:50 blake shadowsocks-go: goroutine 549731 [running]:
May  8 22:28:50 blake shadowsocks-go: github.com/shadowsocks/shadowsocks-go/shadowsocks.handleUDPConnection(0xc42005e080, 0x11, 0x5a79e0, 0xc4200d8000, 0xc4204d4000, 0x100c, 0x100c, 0xc42005e0c0)
May  8 22:28:50 blake shadowsocks-go: /usr/local/go/src/github.com/shadowsocks/shadowsocks-go/shadowsocks/udprelay.go:232 +0xdb2
May  8 22:28:50 blake shadowsocks-go: created by github.com/shadowsocks/shadowsocks-go/shadowsocks.ReadAndHandleUDPReq
May  8 22:28:50 blake shadowsocks-go: /usr/local/go/src/github.com/shadowsocks/shadowsocks-go/shadowsocks/udprelay.go:256 +0xf1