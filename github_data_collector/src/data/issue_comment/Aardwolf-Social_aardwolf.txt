Create docker images for Aardwolf.

Todo before merging:
- [x] Dockerfile
- [x] docker-compose.yml
- [x] docker-entrypoint.sh
- [x] Documentation

Some things to consider (in order of usefulness):
- [ ] Aardwolf logging to STDOUT
- [ ] [Automatic Travis docker image builds](https://docs.travis-ci.com/user/docker/)
   - [ ] amd64
  - [ ] arm64
- [ ] Deployment to Docker Hub
- [ ] [Image scanning](https://github.com/quay/clair)
Updating versions for security updates
  "set-value": ">=2.0.1"
  "serialize-javascript": ">=2.1.1"
Something like

```rust
pub trait FormWithState {
    type State;

    fn as_state(&self) -> Self::State;
}

impl FormWithState for CreatePostForm {
    type State = CreatePostFormState;

    fn as_state(&self) -> Self::State {
        CreatePostFormState {
            ...
        }
    }
}
```

And this could even be automated with proc_macros like this

```rust
#[derive(FormWithState)]
pub struct CreatePostForm {
    name: Option<String>,
    #[form_with_state(ignore)]
    csrf_token: String,
    ...
}
```
Here are the OS architectures that we support by **default***.
Based on what Node.js Supports: [Node.JS - Downloads](https://nodejs.org/en/download/)

-- Windows (32/64-bit)
-- MacOS (64-bit only)
-- Linux (64-bit only)
-- Linux Binaries: ARM (ARMv6 | ARMv7 | ARMv8)

*The current limitation for this is **NodeJS/WebPack** which only has support for the architectures listed above.  Setting up without WebPack is fairly straightforward, but requires additional work.



If someone could flesh out the WebPack documentation, that would be amazingly helpful :)
Right now the templates are progressing forward, but require some manual intervention to add the Bulma styling, as well as the FontAwesome resources.

Updates can be done here.
https://github.com/Aardwolf-Social/aardwolf/blob/banjo/More-Documentation-Updates/doc/SETUP-WEBPACK.md
The purpose of this task is to review the README.md at the -root- of the project.  Since this is essentially the face of the GitHub repository it is very important that the information is accurate :dagger: 

This issue follows behind issue #29.
Anything which is ticked from that issue has a visual depiction that can then be coded into HTML/CSS/Tera files.  It is these files that will serve as the actual functional part of the web UI.

Items marked with * are considered MVP requirements.

**Main**<br />
- [ ] Log In*
- [ ] Create Account*
- [ ] Base*
- [ ] Error Page*

**Aside_main**<br />
- [ ] News Feed
- [ ] Messages*
- [ ] Calendar
- [ ] Groups 
- [ ] Lists
- [ ] Photos
- [ ] Favorites
- [ ] Weather
- [ ] New Event
- [ ] New Group

**Main_Profile**<br />
- [ ] Profile (view)*
- [ ] Profile (Edit)*

**Containers**
These are linked from aside_settings <br />

- [ ] Edit Profile*
- [ ] Preferences*
- [ ] Muted Keywords
- [ ] Muted Users
- [ ] Notifications*
- [ ] Security
- [ ] Privacy
- [ ] Two-Factor Authentication
- [ ] Data Import
- [ ] Data Export
- [ ] Authorized Apps
- [ ] Authorized Followers
- [ ] Invites


  
Plume has a really amazing looking setup script which I am struggling to integrate.
I seem to be running around in circles trying to resolve dependencies, with zero progress.  So far I have been tracking my efforts in the [db-setup](https://github.com/Aardwolf-Social/aardwolf/tree/db-setup) branch.  

My current guess is that there are a LOT of architecture things which do not align with what we have, and thus would require someone more familiar with what we have done thus far.

Here is a link to setup script:
[Plume setup.rs](https://github.com/Plume-org/Plume/blob/master/src/setup.rs)
### High-level description
Groups should be constructed similarly to user-actors in that they will have an "About"/"Bio" page.  The bio page should include a "tag cloud" where the group administrator(s) can put searchable keyword tags.  For Aardwolf, the standard privacy settings will apply.  Authentication for group administrator(s) should be handled the same way as personas, excepting that one or more people may share the same persona.

### Technical discussion
- The actor should have some kind of identifier (UUID prefix/suffix?) which marks it as a group
- Messages sent to the group ID will be automatically reflected back to the other group members/followers

## List of _planned_ features for Aardwolf
Basically the idea here is to keep a running list of features that we are going to work toward adding.  The categories below should be reasonably self-evident, however it is okay to ask for clarification ;D

### Base Functionality
 - The usual suspects (post, reply to post, share post, etc...)
 - Mastodon-like functionality (CW)
 - Events
 - Groups
 - Lists
 - Favorites (one stop shop for favorite items)
 - Granular privacy settings
 - Adheres to Accessible web standards as best we can [Voluntary Product Accessibility Template](http://www.sjsu.edu/finance/about_us/purchasing/vendorguide/step3/accesilibity/)
 - Post editing (requires a way to keep track of edits to prevent abuse)

### Recommended Functionality (User-driven)
 -  One button for each audience/privacy level (replaces dropdown)
 - HTTP Signatures
 - Admin-selectable Alt-Text enforcement: Off, Prompt/Suggest, On
 - Allow Public posts to be visible/searchable even if "allow followers" is off

 ### Stretch Goals
 - Live Chat (via Matrix)
 - Video Sharing (via PeerTube)
 - End-to-End Encryption
 - IPFS filesharing
 - Photo Albums (via Instagram-like Federated App?)