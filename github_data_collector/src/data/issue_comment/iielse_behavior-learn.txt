//        val effect = adInterpolator.getInterpolation(offset / offsetMax)
//        val e: Int = argbEvaluator.evaluate(effect, Color.WHITE, 0xFF646464.toInt()) as Int
//        vSearch.setImageDrawable(tintDrawable(drawableSearch, ColorStateList.valueOf(e)))
//        vSearch.scaleX = (1 - 0.4 * effect).toFloat()
//        vSearch.scaleY = (1 - 0.4 * effect).toFloat()
//        vSearch.translationX = -(vSearchBorder.width - vSearch.width + dp(3)) * effect
//        vSearchHint.alpha = effect
//        vSearchHint.translationX = (vSearchHint.width / 3) * (1 - effect)
if (dy>0&&offset==offsetMax){
         return 1F;
     }else if (dy<0&&offset==0F){
         return 0F;
     }
     offset+=dy;
     if (offset>offsetMax){
         offset=offsetMax;
     }else if (offset<0){
         offset=0F;
     }
     float effect = adInterpolator.getInterpolation(offset / offsetMax);
     int e = (int) argbEvaluator.evaluate(effect,Color.WHITE,Color.parseColor("#999999"));
     float kotlinturnjava (int dy){
     if (dy>0&&offset==offsetMax){
         return 1F;
     }else if (dy<0&&offset==0F){
         return 0F;
     }
     offset+=dy;
     if (offset>offsetMax){
         offset=offsetMax;
     }else if (offset<0){
         offset=0F;
     }
     float effect = adInterpolator.getInterpolation(offset / offsetMax);
     int e = (int) argbEvaluator.evaluate(effect,Color.WHITE,Color.parseColor("#999999"));
     sousuo_img.setImageDrawable(tintDrawable(getResources().getDrawable(R.mipmap.xin_khsousuo),ColorStateList.valueOf(e)));
     sousuo_img.setScaleX(Float.parseFloat(String.valueOf(1 - 0.4 * effect)));
     sousuo_img.setScaleY(Float.parseFloat(String.valueOf(1 - 0.4 * effect)));
     hidesousuolay.setAlpha(effect);
     hidesousuolay.setTranslationX(hidesousuolay.getWidth()-hidesousuolay.getWidth()+ DensityUtils.dip2px(NewUseShopActivity.this,3)*effect);
     return effect;
 }





这个没翻译:
 if ((child.translationY < 0 || (child.translationY == 0F && dy > 0)) && !child.canScrollVertically()) {
            val effect = layTitle.effectByOffset(dy)
            selfView.vSmartTab.setBackgroundColor(argbEvaluator.evaluate(effect, Color.WHITE, 0xFFFAFAFA.toInt()) as Int)
            val transY = -simpleTopDistance * effect
            if (transY != child.translationY) {
                child.translationY = transY
                consumed[1] = dy
            }

            if (type == 1) {
                isScrollToFullFood = true
            }
        } else if ((child.translationY > 0 || (child.translationY == 0F && dy < 0)) && !child.canScrollVertically()) {
            if (isScrollToFullFood) {
                child.translationY = 0F // top fling to bottom顶到底
            } else {
                child.translationY -= dy
                layContent.effectByOffset(child.translationY)
                laySettle.effectByOffset(child.translationY)
            }
            consumed[1] = dy
        } 
这段怎么用看不懂啊？？？求解

向下滑动，点菜、评论、商家直接移动到了最下方；默认收缩起来的区域直接变到最大，没有滑动的过程