Thinking about it, IIUC what you want is (in ORT-speak) to skip the scan of the project source code, and only scan the source code of all dependency packages. Which is something that is currently not supported, but which could probably be easily added as part of the work in [my branch to specify a different scanner for projects](https://github.com/heremaps/oss-review-toolkit/tree/separate-project-scanner): You could simply set that scanner to `none` then.

_Originally posted by @sschuberth in https://github.com/heremaps/oss-review-toolkit/issues/1931#issuecomment-553915125_
Relates-to: #2024

Signed-off-by: Adam Bukolt <adam.bukolt@here.com>
Several properties and functions related to handling `OrtIssue`s still used the term `error` instead of `issue`, mainly in code that was created before the `Error` class was renamed to `OrtIssue` in f42f5b8. Change that to consistently use `issue` and make sure that old `OrtResult`s can still be deserialized.
Currently, for small code changes the majority of time spent during CI builds is not in building the code, but in setting up all prerequisites, like package managers.

One idea to improve this is by modelling the installation of prerequisites also as Gradle tasks which are only executed if needed. These tasks would be very environment-specific as different commands would need to be run on Travis vs. AppVeyor, but probably the task could be crafted in such a way that also a local Linux / Windows user would be able to use them to conveniently install prerequisites.

In a [related discussion](https://discuss.gradle.org/t/determine-if-a-task-is-up-to-date-from-cache-without-actually-executing-it/34504) in the Gradle forum @wolfs suggests to use the upcoming [build services](https://docs.gradle.org/nightly/userguide/build_services.html) in Gradle 6.2 for that purpose.
As we are only interested in meta-data / dependency information in the analyzer step, there is no need to download (big) JARs and not doing so should result in significant performance results.
Hello

I build ORT locally from the master branch
I run ORT on windows with git bash in admin mode.

The project analyzed is a node project.

The reporter generate an about 50Mo scan-report-web-app.html file.

With firefox 71.0, the report is successfuly rendered but it's a bit slow : about 1m30s
With chrome 79.0.3945.88n the report can't be rendered. It stucks at 25% of the processing result data.

Regards
Hello

I build ORT locally from the master branch
I run ORT on windows with git bash in admin mode.

The project analyzed is a node project.
(Note, the fix for non-existing github repo works fine, no extra curation needed)

After the scanner phase, I've got 205 errors like :
```
            source: "ScanCode"
            message: "Could not scan 'NPM:@xtuc:long:4.2.2' (1618/1618): ScanException:\
              \ Running 'D:\\Users\\j.dupont\\AppData\\Local\\Temp\\ort1566383016769617362ScanCode-3.0.2\\\
              scancode-toolkit-3.0.2\\scancode.bat --copyright --license --ignore\
              \ *.ort.yml --info --strip-root --timeout 300 --ignore HERE_NOTICE --ignore\
              \ META-INF/DEPENDENCIES --processes 7 --license-diag --verbose C:\\\
              workspace\\POCs\\MOB_ORT\\my-gateway-web\\client-reports\\downloads\\\
              NPM\\%40xtuc\\long\\4.2.2 --json-pp C:\\workspace\\POCs\\MOB_ORT\\my-gateway-web\\\
              client-reports\\native-scan-results\\NPM\\%40xtuc\\long\\4.2.2\\scan-results_ScanCode.json'\
              \ in 'C:\\workspace\\POCs\\MOB_ORT\\oss-review-toolkit' failed with\
              \ exit code 2:\nUsage: scancode [OPTIONS] <input> <OUTPUT FORMAT\n\n\
              \                OPTION(s)>\n\nTry 'scancode --help' for help on options\
              \ and arguments.\n\n\n\nError: Invalid value for \"input\": Path \"\
              C:\\workspace\\POCs\\MOB_ORT\\my-gateway-web\\client-reports\\\
              downloads\\NPM\\0xtuc\\long\\4.2.2\" does not exist.\n\n"
            severity: "ERROR"
```

It seems to be a problem of encode/decode url.
The directory that is searched is C:\workspace\POCs\MOB_ORT\my-gateway-web\client-reports\downloads\NPM\0xtuc\long\4.2.2\
But the directory that was created in windows file system is C:\workspace\POCs\MOB_ORT\my-gateway-web\client-reports\downloads\NPM\%40xtuc\long\4.2.2\

Regards
To address an upcoming deprecation flagged by the Gradle build scan.
While at it, also use the name to explain for which dependency the
repository is required for.

Signed-off-by: Sebastian Schuberth <sebastian.schuberth@bosch-si.com>
Please have a look at the individual commit messages for the details.
Change includes:
- Aligning reasons and comments for generated .ort.yml with docs/examples/*.ort.yml.
- Improve reasons to better match what the scope contains.

Signed-off-by: Thomas Steenbergen <thomas.steenbergen@here.com>