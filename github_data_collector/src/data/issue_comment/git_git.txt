I try to finish the pullrequest #573 from Maddimax.
This adds the usage  of the submodules.recurse parameter on clone
This is a follow up to en/fill-directory-fixes, and has grown from 1 patch in v1 to 4 patches in v2, 3 of which are submissions by others to the git list that I've just combined into one series since they are all about fill_directory().

The first two patches may make sense to include in maint at some point, though Stolee isn't that concerned about this regression[5][6].

* The first patch is Kevin and Stolee's testcase showing a regression in "git clean -f <just-one-path-with-leading-untracked-dir>"[1]
* The second patch is a "simple" fix for that testcase with a pretty long (and slightly embarrassing though entertaining) backstory.
* The third patch was from v1, and is a small tweak made by me to a patch proposed by Peff[2] (signoff from [3]) to avoid needing to create a dirent.
* The fourth patch was a follow-up from Peff in response to V1 fixing a code comment[4].

[1] https://lore.kernel.org/git/pull.526.git.1579119946211.gitgitgadget@gmail.com/
[2] https://lore.kernel.org/git/20191219222403.GA705525@coredump.intra.peff.net/
[3] https://lore.kernel.org/git/20200114220357.GA3957260@coredump.intra.peff.net/
[4] https://lore.kernel.org/git/20200115202146.GA4091171@coredump.intra.peff.net/
[5] https://lore.kernel.org/git/354fa43b-0e62-1ee5-a63f-59d9b2da7d3f@gmail.com/
[6] https://lore.kernel.org/git/e008da66-defe-d2b0-410b-64b7754b9c6e@gmail.com/

Cc: Jeff King <peff@peff.net>, Johannes Schindelin <Johannes.Schindelin@gmx.de>, Derrick Stolee <dstolee@microsoft.com>, Kevin.Willford@microsoft.com, Kyle Meyer <kyle@kyleam.com>, Jonathan Nieder <jrnieder@gmail.com>
Simple change to the string-list docs to reflect the fact that string-list now has a cmp member field these days that can be set to something other than strcmp().
I found myself confused by the `". "`sentence junction here: https://github.com/git/git/commit/237ec6e40d4fd1a0190c4ffde6d18278abc5853a#r36665052
This PR clarifies that section
In trying to understand check_updates(), I found I was able to simplify the function by making it exit early when updates are not wanted.

Changes since v1:
  * Added two bullet points to the end of the commit message to explain the questions Junio brought up about function calls that are skipped by the early return.
Piping `git range-diff` through diff-highlight currently has no effect,
for two reasons:

  1. There are ANSI escapes before and after the `@@` hunk headers (when
     color is enabled) which diff-highlight fails to match. One solution
     is to match both escapes (`/^$COLOR*\@\@$COLOR* /`). This patch
     drops the trailing space from the existing pattern instead.

  2. Unlike `git log`, `git range-diff` diffs are indented, which
     diff-highlight also fails to match. This patch allows hunk headers
     preceded by any amount of whitespace, and then skips past that
     indentation when parsing subsequent lines, by reusing the machinery
     that handles the --graph output.

Signed-off-by: Jack Bates <jack@nottheoilrig.com>
This is a re-roll of en/rebase-backend which has been rebased on v2.25.0 and updated to remove the dependence on ra/rebase-i-more-options, and also tries to address feedback from Phillip, Junio, and Jonathan.  This series does a lot of work around making the default rebase backend configurable, and switches the default from the am backend to the merge/interactive one.

Changes since v3:
   * Rebased on origin/master and updated to remove the dependence on ra/rebase-i-more-options.
   * Added two new patches at the start of the series.
   * Split the old first patch into two, while modifying them based on Phillip's feedback (though slightly differently than discussed on the list; instead of making --keep-empty a synonym for --empty=keep, I instead kept backward compatibility by making it a no-op).
   * I noted the post-commit hook in the differences between backends.  Emily is investigating what changes need to happen there, so I merely documented the existing differences.
   * dropped '-i' from the reflog messages; now they just refer to 'rebase'

Changes possibly missing from this version, for discussion:
   * I did not remove the --am option as suggested by Phillip, since Junio and Phillip were still discussing whether it is wanted/needed.
   * I did not address the last two items Jonathan brought up as I couldn't find enough information to reproduce or understand the problems.

Cc: Johannes.Schindelin@gmx.de, phillip.wood@dunelm.org.uk, liu.denton@gmail.com, gitster@pobox.com, plroskin@gmail.com, alban.gruin@gmail.com, szeder.dev@gmail.com, jrnieder@gmail.com, emilyshaffer@google.com

This pull request is held in draft to allow a workspace for running the CI unit tests.
------------------------------------------------------------------------------------------
Issue: The current git-p4.py script does not work with python3.

I have attempted to use the P4 integration built into GIT and I was unable to get the program to run because I have Python 3.8 installed on my computer. I was able to get the program to run when I downgraded my python to version 2.7. However, python 2 is reaching its end of life.

Submission:
I am submitting a patch for the git-p4.py script that partially supports python 3.8.
This code was able to pass the basic tests (t9800) when run against Python3. This provides basic functionality.

In an attempt to pass the t9822 P4 path-encoding test, a new parameter for git P4 Clone was introduced.

--encoding Format-identifier

This will create the GIT repository following the current functionality; however, before importing the files from P4, it will set the git-p4.pathEncoding option so any files or paths that are encoded with non-ASCII/non-UTF-8 formats will import correctly.

Technical details:
The script was updated by futurize (https://python-future.org/futurize.html) to support Py2/Py3 syntax. The few references to classes in future were reworked so that future would not be required.
The existing code test for Unicode support was extended to normalize the classes “unicode” and “bytes” to across platforms:

‘unicode’ is an alias for ‘str’ in Py3 and is the unicode class in Py2.
‘bytes’ is bytes in Py3 and an alias for ‘str’ in Py2.
New coercion methods were written for both Python2 and Python3:

as_string(text) – In Python3, this encodes a bytes object as a UTF-8 encoded Unicode string.
as_bytes(text) – In Python3, this decodes a Unicode string to an array of bytes.
In Python2, these functions do not change the data since a ‘str’ object function in both roles as strings and byte arrays. This reduces the potential impact on backward compatibility with Python 2.

to_unicode(text) – ensures that the supplied data is encoded as a UTF-8 string. This function will encode data in both Python2 and Python3.
path_as_string(path) – This function is an extension function that honors the option “git-p4.pathEncoding” to convert a set of bytes or characters to UTF-8. If the str/bytes cannot decode as ASCII, it will use the encodeWithUTF8() method to convert the custom encoded bytes to Unicode in UTF-8.
Generally speaking, information in the script is converted to Unicode as early as possible and converted back to a byte array just before passing to external programs or files. The exception to this rule is P4 Repository file paths.

Paths are not converted but left as “bytes” so the original file path encoding can be preserved. This formatting is required for commands that interact with the P4 file path. When the file path is used by GIT, it is converted with encodeWithUTF8().

Signed-off-by: Ben Keene seraphire@gmail.com
This patchset attempts to bring python 3 compatibility to `git-p4`.

I'm using this PR mostly to access the test pipeline, as I do not have `p4d` access locally. Please pardon the noise.

Discussion regarding patchset is on the maillinglist under [`[RFC PATCH 0/4] git-p4: python 3 compatability`](https://lore.kernel.org/git/20191128012807.3103-1-yang.zhao@skyboxlabs.com/).
Hi GIT contributors !
I am Shubham Ghule.I have resolved the problem of extern integer fetch_if_missing by putting it in the structure repository as a field.Made the relevent changes suggested by @dscho.
I'm looking forward to your review.
Special thanks to @dscho.
with regards,
Shubham.