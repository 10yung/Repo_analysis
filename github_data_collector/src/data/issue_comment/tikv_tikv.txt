###  What have you changed?

Supposing there are several hot delegates, and they are fetched by one
thread at the same time. The thread will keep processing these delegates
by its own even there are idle threads. This PR introduces two new
mechanism to solve the problem:
- Yield from delegate when it triggers write more than 2 times, this is
  to avoid single hot delegates make other delegates wait too long in a
  round of processing.
- Reschedule delegates that have been processed by the same thread too
  much times. This is to make balance between threads.

###  What is the type of the changes?

- Improvement

###  How is the PR tested?

- Unit test
- Integration test

###  Does this PR affect documentation (docs) or should it be mentioned in the release notes?
No.

###  Does this PR affect `tidb-ansible`?
No.
## Feature Request

### Describe the feature you'd like:

Setting `recycle_log_file_num > 0` to speed up WAL in sync mode.

### Teachability, Documentation, Adoption, Migration Strategy:

```c++
  // Recycle log files.
  // If non-zero, we will reuse previously written log files for new
  // logs, overwriting the old data.  The value indicates how many
  // such files we will keep around at any point in time for later
  // use.  This is more efficient because the blocks are already
  // allocated and fdatasync does not need to update the inode after
  // each write.
  // Default: 0
  size_t recycle_log_file_num = 0;
```
Enabling rate-bytes-per-sec would keep rocksdb background compaction steadily runs, smoothing both IO and CPU usage. However few of our users are using the option. Since ansible runs fio test by default, we can use the result to set an initial default value for rate-bytes-per-sec, if user didn't set it.

To be more specific, we can run fio write only with threads = default `max-background-jobs`, and use the throughput as upper bound. Then we can maybe set rate-bytes-per-sec to 90% of the upper bound. Other suggestions are welcome.

Currently only kvdb respect rate-bytes-per-sec. We should also make raftdb respect it too.

Task breakdown:
- [ ] Make raftdb respect rate-bytes-per-sec
- [ ] Update ansible to set default value for rate-bytes-per-sec
- [ ] benchmark to show what would be a good default rate-bytes-per-sec
## Feature Request

### Is your feature request related to a problem? Please describe:
<!-- A description of what the problem is. -->

Mount two disk path for TiKV, one store hot data, while another store cold data.


### Describe the feature you'd like:
<!-- A description of what you want to happen. -->

Most of data could be stored in HDD, and little data which is L0 or L1 could be put in SSD.
Of course, data of raftdb would be store in SSD for effective write performance.



### Teachability, Documentation, Adoption, Migration Strategy:
<!-- If you can, explain some scenarios how users might use this, or situations in which it would be helpful. Any API designs, mockups, or diagrams are also helpful. -->

Signed-off-by: Liqi Geng <gengliqiii@gmail.com>

###  What have you changed?

Change the merge flow path to fix https://github.com/tikv/tikv/issues/6460 and the bug in https://github.com/tikv/tikv/issues/5981 comment.
1.   `exec_commit_merge` in target applyfsm
2.   `on_catch_up_logs_for_merge` in source peerfsm
3.   if the source peer has already executed the corresponding `on_ready_prepare_merge`, set pending_remove and jump to step 6
4.   ... (raft append and apply logs)
5.   `on_ready_prepare_merge` in source peerfsm and set pending_remove (means source region has finished applying all logs)
6.   `logs_up_to_date_for_merge` in source applyfsm (destroy itself and send Noop to trigger target applyfsm)
7.   resume `exec_commit_merge` in target applyfsm
8.   `on_ready_commit_merge` in target peerfsm
9.   `on_merge_result` in source peerfsm (destroy itself and send Noop to trigger target peerfsm)
10.  resume `on_ready_commit_merge` in target peerfsm

The first failpoint test can detect https://github.com/tikv/tikv/issues/6460 bug with a high probability which is about loss of data on the master branch.

The second test about the bug in https://github.com/tikv/tikv/issues/5981 comment is not reliable to detect it. I will fix this soon.

###  What is the type of the changes?

- Bugfix (a change which fixes an issue)

###  How is the PR tested?

- Integration test

###  Does this PR affect documentation (docs) or should it be mentioned in the release notes?
No

###  Does this PR affect `tidb-ansible`?
No

###  Refer to a related PR or issue link (optional)
https://github.com/tikv/tikv/issues/6460
https://github.com/tikv/tikv/issues/5981


<!--
Thank you for contributing to TiKV!

If you haven't already, please read TiKV's [CONTRIBUTING](https://github.com/tikv/tikv/blob/master/CONTRIBUTING.md) document.

If you're unsure about anything, just ask; somebody should be along to answer within a day or two.
-->

###  What have you changed?

Change `BoxXXXObserver` from `Send + Sync` to `Send + Clone` for avoiding the cost of synchronization.

###  What is the type of the changes?

- Engineering (engineering change which doesn't change any feature or fix any issue)

###  How is the PR tested?
<!--
Please select the tests that you ran to verify your changes:
-->
- Unit test


###  Does this PR affect documentation (docs) or should it be mentioned in the release notes?
<!--
- If there is a document change, please file a PR in ([docs](https://github.com/tikv/website/tree/master/content)) and add the PR number here.
- If this PR should be mentioned in the release note, please update the [release notes](https://github.com/tikv/tikv/blob/master/CHANGELOG.md).
-->
No.

###  Does this PR affect `tidb-ansible`?
<!--
If there is a configuration or metrics change, please file a PR in [tidb-ansible](https://github.com/pingcap/tidb-ansible), and add the PR number here.
-->
No.


###  What have you changed?
update titan to use individual thread pool for titan GC
https://github.com/tikv/rust-rocksdb/pull/423

###  What is the type of the changes?
- Bugfix (a change which fixes an issue)

###  How is the PR tested?
- Manual test (add detailed scripts or steps below)

###  Does this PR affect documentation (docs) or should it be mentioned in the release notes?
Yes

###  Does this PR affect `tidb-ansible`?
No


###  What have you changed?

Add several benchmark cases to batch system. It will be used to measure the future improvement.

###  What is the type of the changes?

- Engineering

###  How is the PR tested?

- Unit test
- Integration test
- Manual test

###  Does this PR affect documentation (docs) or should it be mentioned in the release notes?

No.

###  Does this PR affect `tidb-ansible`?

No.

###  Benchmark result if necessary (optional)

Following result comes from benchmark on my desktop:
```
fairness                time:   [36.352 us 37.078 us 37.817 us]
imbalance               time:   [2.3132 ms 2.3597 ms 2.3929 ms]
spawn_many              time:   [4.9201 ms 4.9222 ms 4.9240 ms]
router::send            time:   [89.818 ns 89.913 ns 90.005 ns]
```
Signed-off-by: Steven Gu asongala@163.com
 
###  What have you changed?

Tries to fix Issue #6467. Reference PR #5979 to fix `tnx_types::Error`.

- Replaces original Error with ErrorInner.
- Defines a new Error as `pub struct Error(pub Box<ErrorInner>)`.
- Fixes the all compiling errors.

###  What is the type of the changes?

- Improvement (a change which is an improvement to an existing feature)

###  How is the PR tested?

- Unit test

###  Does this PR affect documentation (docs) or should it be mentioned in the release notes?

No.

###  Does this PR affect `tidb-ansible`?

No.

###  Refer to a related PR or issue link (optional)

Issue #6467 and PR #5979
Signed-off-by: 5kbpers <tangminghua@pingcap.com>

<!--
Thank you for contributing to TiKV!

If you haven't already, please read TiKV's [CONTRIBUTING](https://github.com/tikv/tikv/blob/master/CONTRIBUTING.md) document.

If you're unsure about anything, just ask; somebody should be along to answer within a day or two.
-->

###  What have you changed?

Fix unstable test.

###  What is the type of the changes?
<!--
Pick one of the following and delete the others:
-->
- Bugfix (a change which fixes an issue)

###  How is the PR tested?
<!--
Please select the tests that you ran to verify your changes:
-->
- Unit test

###  Does this PR affect documentation (docs) or should it be mentioned in the release notes?
<!--
- If there is a document change, please file a PR in ([docs](https://github.com/tikv/website/tree/master/content)) and add the PR number here.
- If this PR should be mentioned in the release note, please update the [release notes](https://github.com/tikv/tikv/blob/master/CHANGELOG.md).
-->
No.

###  Does this PR affect `tidb-ansible`?
<!--
If there is a configuration or metrics change, please file a PR in [tidb-ansible](https://github.com/pingcap/tidb-ansible), and add the PR number here.
-->
No.

###  Refer to a related PR or issue link (optional)

https://github.com/tikv/tikv/issues/6083
