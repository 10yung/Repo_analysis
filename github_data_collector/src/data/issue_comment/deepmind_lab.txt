Hi,

Can someone please tell me how to generate a heat map for a level in deepmind lab effectively. Right now I am trying to generate heat map using 'DEBUG.POS.TRANS' but the heat maps are not accurate. Please do let me know if there is any other way to generate heat map effectively. Thanks a lot in advance. 

Regards,

I am also following macos deep mind as instructed but keep getting SDL_openg1.h problem. I fixed the Python.h error but am not quite sure if I got it right.

```
$ bazel run :python_random_agent --define graphics=sdl -- \
>                --length=10000 --width=640 --height=480
INFO: Analyzed target //:python_random_agent (4 packages loaded, 304 targets configured).
INFO: Found 1 target...
ERROR: /Users/ong/Downloads/lab/BUILD:790:1: C++ compilation of rule '//:game_lib_sdl' failed (Exit 1) wrapped_clang failed: error executing command external/local_config_cc/wrapped_clang '-D_FORTIFY_SOURCE=1' -fstack-protector -fcolor-diagnostics -Wall -Wthread-safety -Wself-assign -fno-omit-frame-pointer -O0 -DDEBUG -iquote . -iquote ... (remaining 76 argument(s) skipped)

Use --sandbox_debug to see verbose messages from the sandbox
In file included from engine/code/renderergl1/tr_world.c:22:
In file included from engine/code/renderergl1/tr_local.h:31:
In file included from engine/code/renderergl1/../renderercommon/tr_common.h:28:
engine/code/renderergl1/../renderercommon/qgl.h:32:11: fatal error: 'SDL_opengl.h' file not found
#       include <SDL_opengl.h>
                ^~~~~~~~~~~~~~
1 error generated.
Target //:python_random_agent failed to build
Use --verbose_failures to see the command lines of failed build steps.
INFO: Elapsed time: 3.520s, Critical Path: 1.65s
INFO: 26 processes: 26 darwin-sandbox.
FAILED: Build did NOT complete successfully
FAILED: Build did NOT complete successfully
```
While OSX is not officially supported - I wanted to point out the issues and solutions I found necessary to get Deepmind lab running on 10.15 on the macos branch with python3 for those who are interested. I'm not sure if any of these should be merged, but the documentation could be adapted. 

**Issues** (Or at least, those I was able to find)
1. **RESOLVED (AS OF 12/6)**: ~~The "//:deepmind/support:realpath" script no longer functions on 10.15. **Fix:** Install the coreutils brew package (which includes a functioning realpath) and replace all lines in BUILD of the form `ln -s $$($(location //deepmind/support:realpath) ...` with `ln -s $$(realpath ...`. The patch file is here: https://gist.github.com/DavidMChan/6654a82c658480f8b983b9afabe4502c~~

2. SDL 2.0.10 renders the window in only 1/4 of the screen. **Fix:** Use SDL 2.0.12 by installing with --HEAD on brew. This is related to high DPI support in the upstream (See: https://hg.libsdl.org/SDL/rev/46b094f7d20e and https://github.com/ioquake/ioq3/issues/422) 
Hi,

First, thanks for providing this great platform.
I have some question related to the "depth buffer" as following:

1. In depth buffer, what is the resolution have? I saw the "seta r_depthbits "0"" in quake3 config file "assets/q3config.cfg". Is it 8 bit by default? Can we change the setting to a 16 bit to increase the dynamic range?

2. How to convert the values in the depth buffer to real depth in the game world?

I will be very thankful if anyone can help me =)
Manually compiling the package seems to be quite complicated, especially for users not familiar with Bazel. Would it be possible to provide pre-built Python wheel packages for the most common platforms?
 I am trying to get entity layout for the built-in `nav_maze_*` levels. I found that the `nav_maze_random_goal*` have hard coded the entity layout strings in their lua scripts while `nav_maze_static_*` just create map without layout parameters. What's more, all debug `DEBUG.MAZE.LAYOUT` outputs of those levels are empty. My question is how to get the layout of static goal map in form of string? 
Hello, I want to get object segmentation mask per frame, but I notice that there is no such mask in OBSERVATION. However, in Vizdoom we can get segmentation mask easily. How can I figure this out? Can you give me some programming guidance?
I'm trying to create an observation that represents a local overhead view of a certain radius around the agent. 

I modified `debug_observations.lua` such that the camera position is set to the agent's position:
```
function debug_observations.setCameraPos()
    camera.pos = game:playerInfo().pos
    pos[3] = pos[3] + {desired additional height}
    camera.look = look or camera.look
end
```
```
local function topDownInterleavedCamera()
    local buffer = game:renderCustomView{
        width = SCREEN_SHAPE.width,
        height = SCREEN_SHAPE.height,
        pos = camera.pos,
        look = camera.look,
    }
    return buffer
end
```

and commented out the `setCameraPos` in `settings_overrides.lua`. However this doesn't seem to do anything. Not sure what I'm missing here or does it require rebuilding or something? Any input is appreciated!
I want to test the Lua scripts in lua_tests, like colors_test.lua, but I could not find the dmlab.system.* modules, such as dmlab.system.game.  where can I find those modules?
    def preprocess_frame(self, rgbd):
        rgb = rgbd[:, :, 0:3]
        d = rgbd[:, :, 3] # 84*84
        d = d[16:-16, :] # crop
        d = d[:, 2:-2] # crop
        d = d[::13, ::5] # subsample
        d = d.flatten()
        d = np.power(d/255.0, 10)
        d = np.digitize(d, [0,0.05,0.175,0.3,0.425,0.55,0.675,0.8,1.01])
        d -= 1 
        return rgb, d

d[0-8] or d[1-9] ?