This pull request may resolve https://github.com/delba/Permission/issues/122

`didChangeAuthorization` is called twice when the CLLocationManager instance is created and authorization status is changed. The mechanism handled by `requestedLocation ` and `triggerCallbacks` is based on this behavior.
So CLLocationManager instance must be created at the time of requesting authorization.
I am developing an app, which uses location always. So I request Location permission with status "Always" on `viewDidLoad()` of WelcomeViewController. Steps of this flow:
1. App show alert with three buttons "Only when using the app", "Always Allow", "Don't Allow". 
2. User chooses "Only when using the app".
3. User reopen app and did not see any notification
4. User reopens app again (and all next times) and sees the denied notification.

The problem is user don't see notification second time. I read a source code and  find out the [line](https://github.com/delba/Permission/blob/master/Source/PermissionTypes/LocationAlways.swift#L37) of cause such behavior: On second time `UserDefaults.standard.requestedLocationAlwaysWithWhenInUse` still false, so we have wrong status of location permission that's why app requests permission again instead of showing denied alert. And in this second requesting `UserDefaults.standard.requestedLocationAlwaysWithWhenInUse` became true, so on third time we have correct status.

Frankly, I don't know how to fix this problem by the clean way, can you have any suggestion? 
Hi. 

I am developing an app that asks the users for permission locationAlways. The problem I am experiencing is:
asking the locationAlways permission will present the permissions dialog.  First time the dialog is presented one of the options is  "Only While Using the App". The callback function does however not get called when selecting this option. 

This is my code
```swift
        let permission = .locationAlways
        permission.request({ (status) in
            print("\(status.rawValue)")  // closure never gets called
            if status == .authorized{
                // do something
            }else{
                // do something else
            }
        })
```
Hello!
How about add SKCloudServiceController authorization? It is useful for get iTunes logged user and sure, interact with Apple Music API (MusicKit).

Thanks!
The following leak occurs when using Permission:

![screen shot 2017-03-31 at 14 50 08](https://cloud.githubusercontent.com/assets/17764491/24551097/6c0aa8a2-1621-11e7-865f-ef5c0069ef4d.png)


Thanks for the great library. Is it possible to use PermissionButton on InterfaceBuilder?
I'm not sure if I'm doing this right. 
Here's the PR for localization support.

I had to revert that guard checks commit, didn't know how else to remove it.
When using the PermissionButton in an app I recognised two issues. I opened an issue for each:
- [x] #92 
- [x] #93

This PR solves both #92 and #93 and probably also #116.

NOTE: Since @delba is not answering, I've integrated #90 to this PR. If you want to use a **iOS 10, Xcode 9 and Swift 4 compatible version** of this framework, feel free to integrate **my fork** instead:
https://github.com/Dschee/Permission

