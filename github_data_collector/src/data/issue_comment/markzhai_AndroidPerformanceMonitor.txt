Android 系统 9.0
报错：
java.io.FileNotFoundException: /proc/stat (Permission denied)
        at java.io.FileInputStream.open0(Native Method)
        at java.io.FileInputStream.open(FileInputStream.java:231)
        at java.io.FileInputStream.<init>(FileInputStream.java:165)
        at java.io.FileInputStream.<init>(FileInputStream.java:112)
        at com.github.moduth.blockcanary.CpuSampler.doSample(CpuSampler.java:108)
        at com.github.moduth.blockcanary.AbstractSampler$1.run(AbstractSampler.java:33)
        at android.os.Handler.handleCallback(Handler.java:873)
        at android.os.Handler.dispatchMessage(Handler.java:99)
        at android.os.Looper.loop(Looper.java:201)
        at android.os.HandlerThread.run(HandlerThread.java:65)
I've made a fork with all fixes from all other forks, and added some of my own fixes and changes. Tested on API 16, 21, 22, 23, 28, 29 !

Min SDK is now 16, others SDK's are deprecated/not in use (14, 15)(https://developer.android.com/about/dashboards) 
支持target28
![image](https://user-images.githubusercontent.com/20917145/57278071-2b1bcd80-70d8-11e9-98e8-16314481176f.png)
![image](https://user-images.githubusercontent.com/20917145/57278137-4be42300-70d8-11e9-8440-dd278cb5e57b.png)

如题，耗时方法名字都没有。
log信息如下：
ActivityManager: ANR in XX
Reason: Context.startForegroundService() did not then call Service.startForeground():ServiceRecord{XX}

 在5s之内没有及时调用startForeground()
想问下抓堆栈的原理。是发现卡顿的时候，抓取当前主线程堆栈这样子吗？这样堆栈其实不是特别准是不是呢？有这方面的考虑吗
看了原理：在主线程处理消息的前后记录时间，算出差值，与阀值进行比较从而判断卡顿
疑问：主线程处理消息时间差值为什么能判断卡顿呢？如果我的理解没错的话，主线程16ms一次接收到垂直信号，然后进行下一帧画面的绘制。那么这个绘制的消息的处理时间不应该不超过16ms吗？（不影响到下一次接收信号）
 我app一启动就各种报这种样子的错.我看了日志
MyEaseConversationListFragment.java:107
问题出现在这一行
<img width="867" alt="blocked" src="https://user-images.githubusercontent.com/15081751/47892097-ec8b2900-de90-11e8-9c9e-ab2e783b3845.png">
我前后打了运行时间
    耗时: 115ms
并没有插件所报的 1610ms

坑了2天了.也优化过布局减少了布局的嵌套.


versionName = 1.92d
    versionCode = 6
    imei = 869938029768778
    uid = uid
    network = unknown
    model = Letv X500
    api-level = 23 6.0
    cpu-core = 8
    process = xxxx.xxx.xxx
    freeMemory = 1178112
    totalMemory = 2726172
    time = 1610
    thread-time = 1502
    time-start = 11-02 11:09:50.434
    time-end = 11-02 11:09:52.044
    cpu-busy = false
    cpu-rate = null
    stack = 11-02 11:09:51.237
    java.lang.reflect.Constructor.newInstance(Native Method)
    android.view.LayoutInflater.createView(LayoutInflater.java:619)
    android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:764)
    android.view.LayoutInflater.createViewFromTag(LayoutInflater.java:704)
    android.view.LayoutInflater.rInflate(LayoutInflater.java:835)
    android.view.LayoutInflater.rInflateChildren(LayoutInflater.java:798)
    android.view.LayoutInflater.inflate(LayoutInflater.java:515)
    android.view.LayoutInflater.inflate(LayoutInflater.java:423)
    com.hyphenate.chatuidemo.ui.MyEaseConversationListFragment.onCreateView(MyEaseConversationListFragment.java:107)
    android.support.v4.app.Fragment.performCreateView(Fragment.java:2192)
    android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1299)
    android.support.v4.app.FragmentManagerImpl.moveFragmentToExpectedState(FragmentManager.java:1528)
    android.support.v4.app.FragmentManagerImpl.moveToState(FragmentManager.java:1595)
    android.support.v4.app.BackStackRecord.executeOps(BackStackRecord.java:758)
    android.support.v4.app.FragmentManagerImpl.executeOps(FragmentManager.java:2363)
    android.support.v4.app.FragmentManagerImpl.executeOpsTogether(FragmentManager.java:2149)
    android.support.v4.app.FragmentManagerImpl.optimizeAndExecuteOps(FragmentManager.java:2103)
    android.support.v4.app.FragmentManagerImpl.execSingleAction(FragmentManager.java:1984)
    android.support.v4.app.BackStackRecord.commitNowAllowingStateLoss(BackStackRecord.java:626)
    android.support.v4.app.FragmentPagerAdapter.finishUpdate(FragmentPagerAdapter.java:143)
    android.support.v4.view.ViewPager.populate(ViewPager.java:1268)
    android.support.v4.view.ViewPager.populate(ViewPager.java:1116)
    android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1642)
    android.view.View.measure(View.java:19395)
    android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:825)
    android.widget.RelativeLayout.onMeasure(RelativeLayout.java:511)
    android.view.View.measure(View.java:19395)
    android.support.v4.view.ViewPager.onMeasure(ViewPager.java:1658)
    android.view.View.measure(View.java:19395)
    android.widget.RelativeLayout.measureChildHorizontal(RelativeLayout.java:825)
    android.widget.RelativeLayout.onMeasure(RelativeLayout.java:511)
    android.view.View.measure(View.java:19395)
    android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6113)
    android.widget.FrameLayout.onMeasure(FrameLayout.java:223)
    android.support.v7.widget.ContentFrameLayout.onMeasure(ContentFrameLayout.java:139)
    android.view.View.measure(View.java:19395)
    android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6113)
    android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1723)
    android.widget.LinearLayout.measureVertical(LinearLayout.java:788)
    android.widget.LinearLayout.onMeasure(LinearLayout.java:648)
    android.view.View.measure(View.java:19395)
    android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6113)
    android.widget.FrameLayout.onMeasure(FrameLayout.java:223)
    android.view.View.measure(View.java:19395)
    android.view.ViewGroup.measureChildWithMargins(ViewGroup.java:6113)
    android.widget.LinearLayout.measureChildBeforeLayout(LinearLayout.java:1723)
    android.widget.LinearLayout.measureVertical(LinearLayout.java:788)
    android.widget.LinearLayout.onMeasure(LinearLayout.java:648)
09-06 16:22:38.457 4007-4116/com.lrlz.beautyshop E/CpuSampler: doSample: 
    java.io.FileNotFoundException: /proc/stat (Permission denied)
        at java.io.FileInputStream.open0(Native Method)
        at java.io.FileInputStream.open(FileInputStream.java:200)
        at java.io.FileInputStream.<init>(FileInputStream.java:150)
        at java.io.FileInputStream.<init>(FileInputStream.java:103)
        at com.github.moduth.blockcanary.CpuSampler.doSample(CpuSampler.java:108)
        at com.github.moduth.blockcanary.AbstractSampler$1.run(AbstractSampler.java:33)
        at android.os.Handler.handleCallback(Handler.java:790)
        at android.os.Handler.dispatchMessage(Handler.java:99)
        at android.os.Looper.loop(Looper.java:164)
        at android.os.HandlerThread.run(HandlerThread.java:65)

android 8.0上必现
希望能够视频安卓8.0
谢谢