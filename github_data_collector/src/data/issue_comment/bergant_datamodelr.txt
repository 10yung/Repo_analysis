Hi,
is here the ability to add arrows automatically based on identical column names? Without specifying the references and primary keys. (I don't want to use database, just tables in R).
Thank you!
I love your package! In the process of playing around I made the attached function which I am finding very useful. Adding it here in a pull request in case you want to incorporate or develop something along these lines.
Hi 
If I save a model in yaml with write_yaml, I have no way to reload it back in an object mode
I did this with the sample file.
I manage to load it into an object model
But if I try to save the object model into a yaml file (write_yaml)
it Doesn't work ...

Thanks
Is it possible to map out the tables and queries relationships on access databases?
Other than to zoom the page in, would there be any way to enable +/- buttons to zoom in and around large schemas?
To begin with, great work! I find this package very useful.

I would like to render a graph as a *table of contents* in RMarkdown, where each column links to a section within the document. Is there a simple way to solve this?

I thought of two possible solutions, but haven't figured out how to get it to work:

1. Modify the column title, e.g. `speed` => `<a href="www.example.com">speed<a>`, but then it says `Error: in label of node Master`.
2. Make use of the graphviz `URL` attribute, not sure though if it's possible to specify it column-wise? See example below (but with the same link for all columns):

```{r}
require(datamodelr)
x <- dm_from_data_frames(cars)
x <- dm_create_graph(x, node_attrs = "URL = '#title-1'")
dm_render_graph(x)
```

Then it would refer to the section `# My title {#title-1}` in the document.

All suggestions are welcome.
just like https://github.com/rich-iannone/DiagrammeR/issues/182 

I think that this:
```
library(DiagrammeR)

graph <- 
  create_graph() %>%
  add_n_nodes(2) %>%
  add_edge(1, 2)

graph %>% render_graph(title = "The Graph Title")
```

adds a title to the graph. Would it be possible to extend that functionality to `dm_render_graph`? Especially because it seems that `dm_render_graph` has a property called `graph_name`...  but that's only used for a mouseover effect, it would make sense to export that to title, no?
Hi, I am using your code on a Azure SQL db, and it worked great, but seems to have somehow missed two references. Take a look: this is the output when I develop `dm` using this function:

```
sQuery <- dm_re_query("sqlserver")
dm <- sqlQuery(channel, sQuery, stringsAsFactors = FALSE, errors=TRUE)
```

![image](https://user-images.githubusercontent.com/8094091/49400627-b5808f80-f73c-11e8-8b55-6c934f1371f1.png)

The little red diamonds added by me so you can see the affected fields.

I have gone through and developed the `dm` using this query: `'SELECT *, CONVERT(varchar(8000), AccessProperties) as AcProp FROM "AccessSystem"."GetFieldSchemaCache"'` which gives me:

![image](https://user-images.githubusercontent.com/8094091/49400713-05f7ed00-f73d-11e8-8086-d5e9aff289a9.png)


(I'm hiding the ID field... so don't worry bout it) Bizzare, no? What could it be?
I install your package using

```
devtools::install_github("bergant/datamodelr")
```

But when I call `dm_render_graph()`, I get a error telling me to install `DiagrammeR`.


Hi, 
thanks for the package, it has already been quite helpfull.

I have an sqlite database which I'm trying to model ( see code below ) but I'm having two small issues with more complex foreign keys.

1. If one column in a table is part of two or more foreign keys, it gets multiplied in the graph (at least in my code). I solve that rather hackishly below but I wonder if there is a better way or if I'm doing something wrong in the first place.
2. For composite foreign keys, I get multiple parallel arrows. I'd rather have just one arrow. I have not been able to solve that one so any tips are appreciated.

```
library(dplyr)
library(tibble)
library(RSQLite)

db = dbConnect(SQLite(), dbpath)

inf = lapply(dbListTables(db), function(tb)
{
  fk = dbGetQuery(db, paste0("pragma foreign_key_list('", tb, "')")) %>%
    mutate(from = as.character(from))
  
  dbGetQuery(db, paste0("pragma table_info('", tb, "')")) %>%
    left_join(fk, by = c(name = 'from')) %>%
    mutate(key = as.integer(pk>0)) %>%
    select(column = 'name', key, ref = 'table', ref_col = 'to', mandatory = 'notnull', 
              type, column_order='cid') %>%
    add_column(table=tb, .before=1)
}) %>%
  bind_rows() 

dm = as.data_model(inf)

# same column referencing different tables multiplies the columns
# correct by changing the dm object
dm$columns = dm$columns %>%
  distinct(table, column, .keep_all=TRUE)


graph <- dm_create_graph(dm, rankdir = "BT", col_attr = c("column", "type"))
dm_render_graph(graph)
```

kind regards,
Jesse
