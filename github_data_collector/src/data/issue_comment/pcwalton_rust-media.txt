Is it possible to split a video into a 10 second chunk with this library? 
I need something faster and simpler than ffmpeg.
Thanks! 
On a raspberry pi 2:

```
error: failed to run custom build command for `libvpx-sys v0.1.0 (https://github.com/pcwalton/libvpx?branch=servo#3765856c)`
process didn't exit successfully: `/home/pi/rust-media/example/target/debug/build/libvpx-sys-dc1decce5e61498c/build-script-build` (exit code: 101)
--- stdout
echo "#ifndef VPX_CONFIG_H" > /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "%ifndef VPX_CONFIG_ASM" > /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "ARCH_X86_64=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
build/make/version.sh . /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_version.h
echo "#define VPX_CONFIG_H" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "%define VPX_CONFIG_ASM 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "CONFIG_POSTPROC=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "#define ARCH_X86_64 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "CONFIG_VP9_POSTPROC=no" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "#define CONFIG_POSTPROC 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "%define ARCH_ARM 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "CONFIG_ERROR_CONCEALMENT=no" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "%define CONFIG_POSTPROC 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "%define CONFIG_VP9_POSTPROC 0" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "#define CONFIG_VP9_POSTPROC 0" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "#define CONFIG_ERROR_CONCEALMENT 0" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "%define CONFIG_ERROR_CONCEALMENT 0" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "CONFIG_PIC=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "#define CONFIG_PIC 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "%define CONFIG_PIC 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "#define CONFIG_SPATIAL_RESAMPLING yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "CONFIG_SPATIAL_RESAMPLING=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "%define CONFIG_SPATIAL_RESAMPLING yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "CONFIG_VP8_DECODER=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "#define CONFIG_VP8_DECODER 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "HAVE_MMX=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "%define CONFIG_VP8_DECODER 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "#define HAVE_MMX 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "%endif" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.asm
echo "HAVE_PTHREAD_H=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "#define HAVE_PTHREAD_H 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "#define HAVE_SSE2 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "HAVE_SSE2=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "#define HAVE_SSSE3 1" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
echo "HAVE_SSSE3=yes" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config
echo "#endif" >> /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config.h
build/make/rtcd.pl --arch=x86 --sym=vp8_rtcd --config=/home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config vp8/common/rtcd_defs.pl > /home/pi/rust-media/example/target/debug/build/libvpx-s
ys-21070317f7674d2a/out/vp8_rtcd.h
build/make/rtcd.pl --arch=x86 --sym=vp8_scale_rtcd --config=/home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_config vpx_scale/vpx_scale_rtcd.pl > /home/pi/rust-media/example/target/debug/buil
d/libvpx-sys-21070317f7674d2a/out/vpx_scale_rtcd.h
mkdir -p `dirname /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/generic/systemdependent.o` && cc -c -iquote /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2
a/out -iquote . -DINLINE=inline -O2 -fPIC -o /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/generic/systemdependent.o vp8/common/generic/systemdependent.c
mkdir -p `dirname /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/alloccommon.o` && cc -c -iquote /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out -iquot
e . -DINLINE=inline -O2 -fPIC -o /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/alloccommon.o vp8/common/alloccommon.c
mkdir -p `dirname /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/blockd.o` && cc -c -iquote /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out -iquote . -
DINLINE=inline -O2 -fPIC -o /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/blockd.o vp8/common/blockd.c
mkdir -p `dirname /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/debugmodes.o` && cc -c -iquote /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out -iquote
 . -DINLINE=inline -O2 -fPIC -o /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/debugmodes.o vp8/common/debugmodes.c
mkdir -p `dirname /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/dequantize.o` && cc -c -iquote /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out -iquote
 . -DINLINE=inline -O2 -fPIC -o /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/dequantize.o vp8/common/dequantize.c
mkdir -p `dirname /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/entropy.o` && cc -c -iquote /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out -iquote .
-DINLINE=inline -O2 -fPIC -o /home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/entropy.o vp8/common/entropy.c
/home/pi/.cargo/git/checkouts/libvpx-914eb21fbf3a6389/3765856/makefile.cargo:295: recipe for target '/home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/generic/systemdependent.o' failed

--- stderr
/home/pi/.cargo/git/checkouts/libvpx-914eb21fbf3a6389/3765856/makefile.cargo:286: warning: overriding recipe for target '/home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8_rtcd.h'
/home/pi/.cargo/git/checkouts/libvpx-914eb21fbf3a6389/3765856/makefile.cargo:280: warning: ignoring old recipe for target '/home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8_rtcd.h'
/home/pi/.cargo/git/checkouts/libvpx-914eb21fbf3a6389/3765856/makefile.cargo:289: warning: overriding recipe for target '/home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_scale_rtcd.h'
/home/pi/.cargo/git/checkouts/libvpx-914eb21fbf3a6389/3765856/makefile.cargo:283: warning: ignoring old recipe for target '/home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vpx_scale_rtcd.h'
In file included from vp8/common/generic/systemdependent.c:17:0:
vp8/common/generic/systemdependent.c: In function ‘vp8_machine_specific_config’:
./vpx_ports/x86.h:44:3: error: impossible constraint in ‘asm’
   __asm__ __volatile__ (\
   ^
./vpx_ports/x86.h:171:3: note: in expansion of macro ‘cpuid’
   cpuid(0, 0, reg_eax, reg_ebx, reg_ecx, reg_edx);
   ^
./vpx_ports/x86.h:44:3: error: impossible constraint in ‘asm’
   __asm__ __volatile__ (\
   ^
./vpx_ports/x86.h:177:3: note: in expansion of macro ‘cpuid’
   cpuid(1, 0, reg_eax, reg_ebx, reg_ecx, reg_edx);
   ^
make: *** [/home/pi/rust-media/example/target/debug/build/libvpx-sys-21070317f7674d2a/out/vp8/common/generic/systemdependent.o] Error 1
make: *** Waiting for unfinished jobs....
thread 'main' panicked at 'assertion failed: make_result.success()', /home/pi/.cargo/git/checkouts/libvpx-914eb21fbf3a6389/3765856/build.rs:20:5
```
If you have a [packed BGRA](https://github.com/quadrupleslap/scrap), is there a way to convert it to another format e.g. WebM? 
Reproducing steps:

```
youtube-dl -k -f 'bestvideo[ext=mp4]+bestaudio[ext=m4a]/mp4' https://www.youtube.com/watch?v=5QyBGvZ0pHM&list=PL7odT97B5pLa-D40qMJNaLP4jvZ-HeDLO&index=19

RUST_BACKTRACE=1 ./example "Caravan Palace - Lay Down-5QyBGvZ0pHM.mp4" video/mp4
```

Result:
```
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: ()', libcore/result.rs:916:5
stack backtrace:
   0: std::sys::unix::backtrace::tracing::imp::unwind_backtrace
             at libstd/sys/unix/backtrace/tracing/gcc_s.rs:49
   1: std::sys_common::backtrace::print
             at libstd/sys_common/backtrace.rs:68
             at libstd/sys_common/backtrace.rs:57
   2: std::panicking::default_hook::{{closure}}
             at libstd/panicking.rs:381
   3: std::panicking::default_hook
             at libstd/panicking.rs:397
   4: std::panicking::rust_panic_with_hook
             at libstd/panicking.rs:577
   5: std::panicking::begin_panic
             at libstd/panicking.rs:538
   6: std::panicking::begin_panic_fmt
             at libstd/panicking.rs:522
   7: rust_begin_unwind
             at libstd/panicking.rs:498
   8: core::panicking::panic_fmt
             at libcore/panicking.rs:71
   9: core::result::unwrap_failed
             at /checkout/src/libcore/macros.rs:23
  10: rust_media::playback::Player::new
             at /checkout/src/libcore/result.rs:782
             at /home/felix/Development/rust-media/playback.rs:326
             at /home/felix/Development/rust-media/playback.rs:62
  11: example::main
             at /home/felix/Development/rust-media/example/example.rs:302
  12: std::rt::lang_start::{{closure}}
             at /checkout/src/libstd/rt.rs:74
  13: std::panicking::try::do_call
             at libstd/rt.rs:59
             at libstd/panicking.rs:480
  14: __rust_maybe_catch_panic
             at libpanic_unwind/lib.rs:102
  15: std::rt::lang_start_internal
             at libstd/panicking.rs:459
             at libstd/panic.rs:365
             at libstd/rt.rs:58
  16: main
  17: __libc_start_main
  18: _start
```

rustc:

```
rustc 1.25.0-nightly (61452e506 2018-01-09)
binary: rustc
commit-hash: 61452e506f0c88861cccaeea4ced3419bdb3cbe0
commit-date: 2018-01-09
host: x86_64-unknown-linux-gnu
release: 1.25.0-nightly
LLVM version: 4.0
```

yasm:

```
yasm 1.3.0
Compiled on May  3 2015.
Copyright (c) 2001-2014 Peter Johnson and other Yasm developers.
Run yasm --license for licensing overview and summary.
```

libvpx-dev:

```
Source: libvpx
Version: 1.6.1-3
Depends: libvpx4 (= 1.6.1-3)
Description: VP8 and VP9 video codec (development files)
 VP8 and VP9 are open video codecs, originally developed by On2 and released
 as open source by Google Inc. They are the successor of the VP3 codec,
 on which the Theora codec was based.
 .
 This package contains the development libraries, header files needed by
 programs that want to compile with libvpx.
```
What is the current status of this project?

Also, any thoughts on integrating gstreamer into this project? Modules/Plugins could still be written in rust like what is done here: https://github.com/sdroege/gst-plugin-rs

Any feedback would be appreciated.


It would be interesting to have support for VA-API using libva to make use of the GPU hardware decoding for H.264 on linux.

There is a rust project on github with an incomplete implementation https://github.com/zzoon/libva-rust

I asked about the license on this project, and if it's possible to release it under Apache 2.0 and MIT.
The linker complains with non found symbols `avcodec_alloc_frame`, `avcodec_free_frame` and `avcodec_default_get_buffer` when compiling with a modern libavcodec (I tried with `7:3.0.2`).

When adding compat, care should be taken to not destroy backwards compat.

We could drop a native dependency here:
https://github.com/PistonDevelopers/image-gif

Servo itself right now uses it directly atm, as far as I know.

But it would be still good for non servo users to support gifs.

Update/fix for more recent rust-nightly and rust-sdl2.

Currently Gif Looping doesn't really have a decent API, and the example doesn't really use it.

The example also has problems rendering RGBA8888 (looks like SDL2 is getting confused about the format or something).
