Building the image fails with "build caddy: cannot load crypto/ed25519: cannot find module providing package crypto/ed25519".
Needed for example to use webpush-php lib.
Resolution of this issue seems incorrectly to be indicated in this closed issue: https://github.com/abiosoft/caddy-docker/issues/195#issue-453099523

when running `docker build -t caddy --build-arg plugins=git,cloudflare,jwt,login,filter,cors,realip,filemanager,cache,expires github.com/abiosoft/caddy-docker.git`, the build process clearly shows:

```
Sending build context to Docker daemon  109.6kB
Step 1/24 : FROM abiosoft/caddy:builder as builder
builder: Pulling from abiosoft/caddy
Digest: sha256:305e08cea6537ff651262d8a9c9fa1676b4f71dee96fa84f91352b3789a9d5b9
Status: Downloaded newer image for abiosoft/caddy:builder
 ---> 01e4c36185ca
Step 2/24 : ARG version="1.0.3"
 ---> Using cache
 ---> 3da066a92b94
Step 3/24 : ARG plugins="git,cors,realip,expires,cache,cloudflare"
 ---> Using cache
 ---> a5301b5c145b
```

First issue is that `build` is ignoring the plugins passed to it; why?

The plugins that are installed using the image built above are as follows:

```
me@NAS:/volume1/docker/_wip/caddy$ sudo docker exec -it caddy /bin/sh
/srv # caddy --plugins
Server types:
  http

Caddyfile loaders:
  short
  flag
  default

Other plugins:
  http.basicauth
  http.bind
  http.browse
  http.errors
  http.expvar
  http.ext
  http.fastcgi
  http.gzip
  http.header
  http.index
  http.internal
  http.limits
  http.log
  http.markdown
  http.mime
  http.pprof
  http.proxy
  http.push
  http.redir
  http.request_id
  http.rewrite
  http.root
  http.status
  http.templates
  http.timeouts
  http.websocket
  on
  tls
  tls.cluster.file
```

Second issue: **where is the cloudflare plugin???** even if not accepting the plugins list I passed through to `build`, the cloudflare plugin is in the list that should be installed per the output of `build` so what gives?
php7-intl is a default package in some distros (e.g. Ubuntu), plus it's required for some websites (e.g. Tiny Tiny RSS).
Running this image and mounting /foo/bar/srv to /srv works fine, until I try to load a php website. I either have to set /foo/bar/srv to 777 or set /foo/bar/srv to UID 1000 manually, otherwise php files won't execute and won't be able to write files.

Having the ability to set the UID and GID to what I use for my Docker images currently would remove the manual steps to get PHP working (I spent tons of time trying to figure out why).

This is on a Synology NAS, tested with a test php file with phpinfo (for read/execute checks) and then with tt-rss, which failed because it required write perms (write checks).
Trying to build "1.0.3" tag with plugins.

My composer file:
```yaml
services:
  frontend:
    build:
      context: ./deps/caddy-docker/
      dockerfile: Dockerfile-no-stats
      args:
      - plugins=locale,gzip
```

Error log:
```
github.com/mholt/certmagic
# github.com/mholt/certmagic
../certmagic/client.go:196:8: ht.ForceAttemptHTTP2 undefined (type *http.Transport has no field or method ForceAttemptHTTP2)
fetching missing dependencies: caddy, dnsproviders, hook.pluginloader
chdir /root/lib/caddy/gopath/src/github.com/caddyserver/caddy: no such file or directory
fetching missing dependencies: caddy, dnsproviders, hook.pluginloader
chdir /root/lib/caddy/gopath/src/github.com/caddyserver/caddy: no such file or directory
go get: warning: modules disabled by GO111MODULE=auto in GOPATH/src;
        ignoring go.mod;
        see 'go help modules'
github.com/mholt/certmagic
# github.com/mholt/certmagic
../certmagic/client.go:196:8: ht.ForceAttemptHTTP2 undefined (type *http.Transport has no field or method ForceAttemptHTTP2)
fetching missing dependencies: caddy, dnsproviders, hook.pluginloader
chdir /root/lib/caddy/gopath/src/github.com/caddyserver/caddy: no such file or directory
Cloning into '/go/src/github.com/caddyserver/builds'...
fatal: could not read Username for 'https://github.com': No such device or address
stat build.go: no such file or directory
```

I presume something has been changed in mholt/certmagic since 1.0.3 tag release (single or few submodules included by client.go?), but can't figure out where to fix it.
I was just trying to build caddy binary with a custom set of plugins, but got stuck with the `invalid import path ""` error.

Looks like most of us are trying to use the qualified name of the plugin instead of just the last part of it (https://github.com/abiosoft/caddy-docker/issues/108#issuecomment-385743567). I.e: 

```
RUN VERSION="1.0.3" \
    PLUGINS="http.prometheus" \
    ENABLE_TELEMETRY="false" \
    /bin/sh /usr/bin/builder.sh
```

Should actually be:

```
RUN VERSION="1.0.3" \
    PLUGINS="prometheus" \
    ENABLE_TELEMETRY="false" \
    /bin/sh /usr/bin/builder.sh
```

Can we add something to the documentation to avoid this?
Caddy 1.0.4 was recently released: https://github.com/caddyserver/caddy/releases/tag/v1.0.4
* Updated Caddy to 1.0.4
* Updated Go Docker Image to 1.13

This also closes Issue #225, maybe #228 and PR #224

[Changelog](https://github.com/caddyserver/caddy/releases/tag/v1.0.4) from Caddy
> This patch release fixes a bug in the fastcgi middleware that could result in the static file server returning PHP files as plain text on Windows systems. [...]
> Dependencies lego, certmagic, and quic-go have also been updated to their latest versions.
