### Versions

* Python: 3.7
* OS: Android 9
* Kivy: 1.11.1
* Cython: 0.29.14

### Description

I'm trying to scrap some information from webpage but it crashes my app.
I'm using requests_html to render webpage with javascript with it.(i need javascript render)
Is it any alternative for requests_html that work on android?
On pc it is working fine.
<!--
The issue tracker is a tool to address bugs.
Please use the Disord community or Stack Overflow for support questions,
more information at https://github.com/kivy/python-for-android#support

Before opening a new issue, make sure you do the following:
    * check that your issue isn't already filed: https://github.com/kivy/python-for-android/issues
    * prepare a short, runnable example that reproduces the issue
    * make sure to have `log_level = 2` in your `buildozer.spec`
    * reproduce the problem with the latest development version (`p4a.branch = master`)
    * double-check that the issue is indeed a bug and not a support request
    * please use backticks to format code or logs
-->

### Versions

* Python:3.7.1
* OS:ubuntu 18.0.4 64
* Kivy:master
* Cython: 0.28.2

### Description
it's my code:
    url = 'http://****'  #it's a valid url
    def launch_webbrowser(self, url):
        import webbrowser
        if platform == 'android':
            from jnius import autoclass, cast
            def open_url(url):
                PythonActivity = autoclass('org.kivy.android.PythonActivity')
                activity = PythonActivity.mActivity
                Intent = autoclass('android.content.Intent')
                Uri = autoclass('android.net.Uri')
                browserIntent = Intent()
                browserIntent.setAction(Intent.ACTION_VIEW)
                browserIntent.setData(Uri.parse(url))
                currentActivity = cast('android.app.Activity', activity)
                currentActivity.startActivity(browserIntent)

            # Web browser support.
            class AndroidBrowser(object):
                def open(self, url, new=0, autoraise=True):
                    open_url(url)

                def open_new(self, url):
                    open_url(url)
                def open_new_tab(self, url):
                    open_url(url)

            webbrowser.register('android', AndroidBrowser, None, -1)
        webbrowser.open(url)


when i call launch_webbrowser() in kv
            on_press:
                root.launch_webbrowser(root.url)

i get this error in log:
            webbrowser.register('android', AndroidBrowser, None, -1)
          TypeError: register() takes from 2 to 3 positional arguments but 4 were given

maybe i think it's a bug of python3.7
please help  ths!

### buildozer.spec

Command:
```sh
// REPLACE ME: buildozer command ran? e.g. buildozer android debug
```

Spec file:
```
// REPLACE ME: Paste your buildozer.spec file here
```

### Logs


So depending on the requested recipes at built time, a different test app will be ran (as well as different unit tests). We also set this *unified test app* the default for our `CI` tests (since we remove the `testapp_sqlite3_openssl` ... alongside with some more test apps).

There are 3 app modes:
  - **kivy** (if kivy detected in `app_requirements.txt`)
  - **flask** (if flask detected in `app_requirements.txt`)
  - **no-gui** (if above cases are not taken)

In all the cases mentioned the unittests will be run. In the two first use cases (kivy and flask) the result of the unit tests can be seen via the app. If an `no-gui` app is built, then the results must be checked via `adb logcat`.

Also be aware that this PR adds **more artifacts for gh-actions** via an `matrix`, so now we will have `on device unit test app` for:
   - **Python3 & arm64-v8a** *(tested on device)*
   - **Python3 & armeabi-v7a** *(tested on device)*
   - **Python3 & x86_64**
   - **Python3 & x86**
   - ~~**Python2 & arm64-v8a** *(tested on device)*~~
   - ~~**Python2 & armeabi-v7a** *(tested on device)*~~
   - ~~**Python2 & x86_64**~~

**A quick view of the situation:**
   - the removed `testapp_keyboard` and  `testapp_service`, now lives in the `on device unit test app`
   - the testapps for `pillow`, `matplotlib` and `encryption` has been moved into the unit tests (so we can also test those recipes via the flask app)
  - the testapp for `flask` has been also moved/reworked into the new `on device unit test app`, this allow us to share the resources with the kivy app (which are the same).
  - Furthermore,  we generate a file at build time `app_requirements.txt` which will hold the supplied recipes at build time. This file will allow us to test these recipes via our unittests. Just noting that the recipes we want to test, must be explicitly mentioned. Also should be mentioned that this feature its only available for **direct build with p4a** (when `setup_test_app.py` is ran)...so **buildozer builds will build an basic test app**, no matter what recipes are introduced into `buildozer.spec` file, because the  `app_requirements.txt` will only be created if the `setup_test_app.py` file is ran.

**Notes:**
  - @inclement, I included you as author of this thing (alongside myself), I think that we are the authors of the removed test apps and you are also the author of the base code for the `on device unit test app` (@AndreMiras and *anyone looking into this*, I think that you are not involved with these test apps, please, let me know if I'm mistaken and I will include you as author as well).
  - I avoided python3's specific code in purpose, so the new test app could be also run from python2 (this way we can remove the python2 test apps). BTW, we only have one `import` to add python2 compatibility to this new unit test app...imho...I thinks it's worth it :wink:
  - I labeled this `WIP` because:
    + I want to add a couple of commits, in order to force to generate the flask testapp via gh-actions and restore it to kivy, so this way, you guys can see the result of this `flask unittest testapp` without building anything, for now you can download the `kivy testapp` at gh-actions
    + I have mixed feelings about this PR...maybe the whole thing it's a crazy idea of mine...mmmm...let me know if this is the case and I will close this, no problem at all
  - I added a font file (it's very light...less than 10Kb and it's  [free for commercial/personal use](https://www.wfonts.com/font/blanka)). This font has two purposes:
    + used for some titles in kivy/flask apps
    + to perform the unittests for the Pillow recipe
  - @inclement, the testapp for keyboard that I deleted and included at the new unit test app...I'm not sure if its working as expected...it would be great that you could download one of the generated tests apps via gh-actions and give your thoughts, @AndreMiras, it would be awesome to have yours as well.
  - I did not test the `buildozer` build, anyone could test it?

**Some future improvements we could make:**
  - remove/integrate some more test apps. Merging this PR, we will only have the following test apps:
      + `testapp_vispy`
      + `testlauncher_setup`
      + `testlauncherreboot_setup`
  - make gh-actions create a new artifact for `rebuild updated recipes` (I have some job done in this point but not included at here)
  - add tests for all the recipes we have (we have a basic set but we could go further)
  - Improve design and features, specially for the flask app (yea..I put more love with the kivy app :smile:)
  - test the artifacts we generate with gh-actions on device...@AndreMiras, you were working with that for travis...maybe now it will be easier to do that with gh-actions?
  - you tell me...
<!--
The issue tracker is a tool to address bugs.
Please use the Disord community or Stack Overflow for support questions,
more information at https://github.com/kivy/python-for-android#support

Before opening a new issue, make sure you do the following:
    * check that your issue isn't already filed: https://github.com/kivy/python-for-android/issues
    * prepare a short, runnable example that reproduces the issue
    * make sure to have `log_level = 2` in your `buildozer.spec`
    * reproduce the problem with the latest development version (`p4a.branch = master`)
    * double-check that the issue is indeed a bug and not a support request
    * please use backticks to format code or logs
-->

### Versions

* Python: 3.7
* OS:   Android 10
* Kivy:  1.11.1
* Cython:  0.29.13

NDK r19c  
I use 19c because 19b is not available at 
https://developer.android.com/ndk/downloads/older_releases
SDK 29

### Description
Three issues with project build file management, these are I think new with 2019.10.6:

1) If I edit main.py  the change is not included in the apk unless I first delete main.pyc

2) "--clean_bulds" option does not appear to work, but "--clean_all" works

3) If I have two projects, both NDK 19c and SDK 29 
    First project builds and runs
    Second project build but fails with SDL Error (see image)
    p4a clean_all
    Second project builds and runs
    First project build but fails with same SDL Error 

![Screenshot_20191223-144340](https://user-images.githubusercontent.com/34464649/71390055-db284300-25a2-11ea-8b26-d371ca76ee66.png)


### buildozer.spec

Command:
```sh
// REPLACE ME: buildozer command ran? e.g. buildozer android debug
```

Spec file:
```
// REPLACE ME: Paste your buildozer.spec file here
```

### Logs

```
// REPLACE ME: Paste the build ouput containing the error
```

Needs cleaning up so not for merging yet (in particular want to retain the py3.7 patches for py3.7 builds), but this seems to work.
### Versions

* Python: Latest Python3
* OS: Android 8.1.0
* Kivy: Latest Kivy
* Cython: Latest Cython

### Description

I'm trying to use able to use BLE on android and getting an error about a missing javaclass (org/able/BLE). This commit was working a few days ago: https://github.com/b3b/able/commit/a9bf90dc4fafb952f10546f682c75b9d66e60be3

Test code here: https://github.com/b3b/able/tree/master/testapps/bletest
My code is here: https://github.com/slinger360/NineRiFt-Lite

### buildozer.spec

Command:

buildozer -v android release
and 
buildozer android debug
(they produce the same result)

Spec file:

https://github.com/slinger360/NineRiFt-Lite/blob/master/packaging/android-arm32/buildozer.spec
https://github.com/slinger360/NineRiFt-Lite/blob/master/packaging/android-arm64/buildozer.spec

### Logs

No error during build


### Versions

* Python: 3.6
* OS: android
* Kivy: 1.11.11
* Cython:

### Description
i am trying to do the following ( used in the plyer library)
```sh
android.activity.bind(on_activity_result=self._on_activity_result)

    def _on_activity_result(self, requestCode, resultCode, intent):
        print('in activity result')
        if requestCode != 0x123:
            print('in if')
            return
        print('before unbind')
        android.activity.unbind(on_activity_result=self._on_activity_result)
        print('after unbind')
        if self.on_complete(self.filename):
            print('in if 2')
            self._remove(self.filename)

```



And getting the following error:
```sh
Class not found b'org/kivy/android/PythonActivity$ActivityResultListener'
 Exception in connect function: object of type 'NoneType' has no len()

```


<!--
The issue tracker is a tool to address bugs.
Please use the Disord community or Stack Overflow for support questions,
more information at https://github.com/kivy/python-for-android#support

Before opening a new issue, make sure you do the following:
    * check that your issue isn't already filed: https://github.com/kivy/python-for-android/issues
    * prepare a short, runnable example that reproduces the issue
    * make sure to have `log_level = 2` in your `buildozer.spec`
    * reproduce the problem with the latest development version (`p4a.branch = master`)
    * double-check that the issue is indeed a bug and not a support request
    * please use backticks to format code or logs
-->

### Versions

* Python: Python 3.7.5
* OS: Ubuntu 16.04.6 LTS
* Kivy: 1.11.1
* Cython: 0.28

### Description

The application crash after loading screen.
Even It can't connect to my socket server. 

### buildozer.spec

Command:
```sh
buildozer -V android debug deploy run
```

Spec file:
```
[app]

# (str) Title of your application
title = My Application

# (str) Package name
package.name = myapp

# (str) Package domain (needed for android/ios packaging)
package.domain = org.test

# (str) Source code where the main.py live
source.dir = .

# (list) Source files to include (let empty to include all the files)
source.include_exts = py,png,jpg,kv,atlas

# (list) List of inclusions using pattern matching
#source.include_patterns = assets/*,images/*.png

# (list) Source files to exclude (let empty to not exclude anything)
#source.exclude_exts = spec

# (list) List of directory to exclude (let empty to not exclude anything)
#source.exclude_dirs = tests, bin

# (list) List of exclusions using pattern matching
#source.exclude_patterns = license,images/*/*.jpg

# (str) Application versioning (method 1)
version = 0.1

# (str) Application versioning (method 2)
# version.regex = __version__ = ['"](.*)['"]
# version.filename = %(source.dir)s/main.py

# (list) Application requirements
# comma separated e.g. requirements = sqlite3,kivy
requirements = python3,libffi,openssl,sqlite3,kivy

# (str) Custom source folders for requirements
# Sets custom source for any requirements with recipes
# requirements.source.kivy = ../../kivy

# (list) Garden requirements
#garden_requirements =

# (str) Presplash of the application
#presplash.filename = %(source.dir)s/data/presplash.png

# (str) Icon of the application
#icon.filename = %(source.dir)s/data/icon.png

# (str) Supported orientation (one of landscape, sensorLandscape, portrait or all)
orientation = portrait

# (list) List of service to declare
#services = NAME:ENTRYPOINT_TO_PY,NAME2:ENTRYPOINT2_TO_PY

#
# OSX Specific
#

#
# author = © Copyright Info

# change the major version of python used by the app
osx.python_version = 3

# Kivy version to use
osx.kivy_version = 1.9.1

#
# Android specific
#

# (bool) Indicate if the application should be fullscreen or not
fullscreen = 0

# (string) Presplash background color (for new android toolchain)
# Supported formats are: #RRGGBB #AARRGGBB or one of the following names:
# red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray,
# darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy,
# olive, purple, silver, teal.
#android.presplash_color = #FFFFFF

# (list) Permissions
android.permissions = INTERNET

# (int) Target Android API, should be as high as possible.
#android.api = 27

# (int) Minimum API your APK will support.
#android.minapi = 21

# (int) Android SDK version to use
#android.sdk = 20

# (str) Android NDK version to use
#android.ndk = 17c

# (int) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi.
#android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
#android.private_storage = True

# (str) Android NDK directory (if empty, it will be automatically downloaded.)
#android.ndk_path =

# (str) Android SDK directory (if empty, it will be automatically downloaded.)
#android.sdk_path =

# (str) ANT directory (if empty, it will be automatically downloaded.)
#android.ant_path =

# (bool) If True, then skip trying to update the Android sdk
# This can be useful to avoid excess Internet downloads or save time
# when an update is due and you just want to test/build your package
# android.skip_update = False

# (bool) If True, then automatically accept SDK license
# agreements. This is intended for automation only. If set to False,
# the default, you will be shown the license when first running
# buildozer.
android.accept_sdk_license = True

# (str) Android entry point, default is ok for Kivy-based app
#android.entrypoint = org.renpy.android.PythonActivity

# (list) Pattern to whitelist for the whole project
#android.whitelist =

# (str) Path to a custom whitelist file
#android.whitelist_src =

# (str) Path to a custom blacklist file
#android.blacklist_src =

# (list) List of Java .jar files to add to the libs so that pyjnius can access
# their classes. Don't add jars that you do not need, since extra jars can slow
# down the build process. Allows wildcards matching, for example:
# OUYA-ODK/libs/*.jar
#android.add_jars = foo.jar,bar.jar,path/to/more/*.jar

# (list) List of Java files to add to the android project (can be java or a
# directory containing the files)
#android.add_src =

# (list) Android AAR archives to add (currently works only with sdl2_gradle
# bootstrap)
#android.add_aars =

# (list) Gradle dependencies to add (currently works only with sdl2_gradle
# bootstrap)
#android.gradle_dependencies =

# (list) Java classes to add as activities to the manifest.
#android.add_activites = com.example.ExampleActivity

# (str) python-for-android branch to use, defaults to master
#p4a.branch = master

# (str) OUYA Console category. Should be one of GAME or APP
# If you leave this blank, OUYA support will not be enabled
#android.ouya.category = GAME

# (str) Filename of OUYA Console icon. It must be a 732x412 png image.
#android.ouya.icon.filename = %(source.dir)s/data/ouya_icon.png

# (str) XML file to include as an intent filters in <activity> tag
#android.manifest.intent_filters =

# (str) launchMode to set for the main activity
#android.manifest.launch_mode = standard

# (list) Android additional libraries to copy into libs/armeabi
#android.add_libs_armeabi = libs/android/*.so
#android.add_libs_armeabi_v7a = libs/android-v7/*.so
#android.add_libs_x86 = libs/android-x86/*.so
#android.add_libs_mips = libs/android-mips/*.so

# (bool) Indicate whether the screen should stay on
# Don't forget to add the WAKE_LOCK permission if you set this to True
#android.wakelock = False

# (list) Android application meta-data to set (key=value format)
#android.meta_data =

# (list) Android library project to add (will be added in the
# project.properties automatically.)
#android.library_references =

# (str) Android logcat filters to use
#android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
#android.copy_libs = 1

# (str) The Android arch to build for, choices: armeabi-v7a, arm64-v8a, x86
android.arch = armeabi-v7a

#
# Python for android (p4a) specific
#

# (str) python-for-android git clone directory (if empty, it will be automatically cloned from github)
#p4a.source_dir =

# (str) The directory in which python-for-android should look for your own build recipes (if any)
#p4a.local_recipes =

# (str) Filename to the hook for p4a
#p4a.hook =

# (str) Bootstrap to use for android builds
# p4a.bootstrap = sdl2

# (int) port number to specify an explicit --port= p4a argument (eg for bootstrap flask)
#p4a.port =


#
# iOS specific
#

# (str) Path to a custom kivy-ios folder
#ios.kivy_ios_dir = ../kivy-ios
# Alternately, specify the URL and branch of a git checkout:
ios.kivy_ios_url = https://github.com/kivy/kivy-ios
ios.kivy_ios_branch = master

# Another platform dependency: ios-deploy
# Uncomment to use a custom checkout
#ios.ios_deploy_dir = ../ios_deploy
# Or specify URL and branch
ios.ios_deploy_url = https://github.com/phonegap/ios-deploy
ios.ios_deploy_branch = 1.7.0

# (str) Name of the certificate to use for signing the debug version
# Get a list of available identities: buildozer ios list_identities
#ios.codesign.debug = "iPhone Developer: <lastname> <firstname> (<hexstring>)"

# (str) Name of the certificate to use for signing the release version
#ios.codesign.release = %(ios.codesign.debug)s


[buildozer]

# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))
log_level = 2

# (int) Display warning if buildozer is run as root (0 = False, 1 = True)
warn_on_root = 1

# (str) Path to build artifact storage, absolute or relative to spec file
# build_dir = ./.buildozer

# (str) Path to build output (i.e. .apk, .ipa) storage
# bin_dir = ./bin

#    -----------------------------------------------------------------------------
#    List as sections
#
#    You can define all the "list" as [section:key].
#    Each line will be considered as a option to the list.
#    Let's take [app] / source.exclude_patterns.
#    Instead of doing:
#
#[app]
#source.exclude_patterns = license,data/audio/*.wav,data/images/original/*
#
#    This can be translated into:
#
#[app:source.exclude_patterns]
#license
#data/audio/*.wav
#data/images/original/*
#


#    -----------------------------------------------------------------------------
#    Profiles
#
#    You can extend section / key with a profile
#    For example, you want to deploy a demo version of your application without
#    HD content. You could first change the title to add "(demo)" in the name
#    and extend the excluded directories to remove the HD content.
#
#[app@demo]
#title = My Application (demo)
#
#[app:source.exclude_patterns@demo]
#images/hd/*
#
#    Then, invoke the command line with the "demo" profile:
#
#buildozer --profile demo android debug
```

### Logs

```
// deploy error
Exception in thread background thread for pid 27996:                                                
Traceback (most recent call last):
  File "/home/pirl/anaconda3/envs/project1/lib/python3.7/threading.py", line 926, in _bootstrap_inner
    self.run()
  File "/home/pirl/anaconda3/envs/project1/lib/python3.7/threading.py", line 870, in run
    self._target(*self._args, **self._kwargs)
  File "/home/pirl/anaconda3/envs/project1/lib/python3.7/site-packages/sh.py", line 1540, in wrap
    fn(*args, **kwargs)
  File "/home/pirl/anaconda3/envs/project1/lib/python3.7/site-packages/sh.py", line 2459, in background_thread
    handle_exit_code(exit_code)
  File "/home/pirl/anaconda3/envs/project1/lib/python3.7/site-packages/sh.py", line 2157, in fn
    return self.command.handle_command_exit_code(exit_code)
  File "/home/pirl/anaconda3/envs/project1/lib/python3.7/site-packages/sh.py", line 815, in handle_command_exit_code
    raise exc
sh.ErrorReturnCode_1: 

  RAN: /home/pirl/dev/project/mobile/.buildozer/android/platform/build/build/other_builds/hostpython3/desktop/hostpython3/native-build/python setup.py build_ext -v

  STDOUT:
running build_ext
building 'jnius' extension
creating build
creating build/temp.linux-x86_64-3.7
creating build/temp.linux-x86_64-3.7/jnius
/usr/bin/ccache arm-linux-androideabi-gcc -DANDROID -fomit-frame-pointer -D__ANDROID_API__=21 -mandroid -isystem /home/pirl/.buildozer/android/platform/android-ndk-r17c/sysroot/usr/include/arm-linux-androideabi -I/home/pirl/.buildozer/android/platform/android-ndk-r17c/sysroot/usr/include/arm-linux-androideabi -isysroot /home/pirl/.buildozer/android/platform/android-ndk-r17c/sysroot -I/home/pirl/dev/project/mobile/.buildozer/android/platform/build/build/python-installs/myapp/include/python3.7 -DNDEBUG -g -fwrapv -O3 -Wall -DANDROID -fomit-frame-pointer -D__ANDROID_API__=21 -mandroid -isystem /home/pirl/.buildozer/android/platform/android-ndk-r17c/sysroot/usr/include/arm-linux-androideabi -I/home/pirl/.buildozer/android/platform/android-ndk-r17c/sysroot/usr/include/arm-linux-androideabi -isysroot /home/pirl/.buildozer/android/platform/android-ndk-r17c/sysroot -I/home/pirl/dev/project/mobile/.buildozer/android/platform/build/build/python-installs/myapp/include/python3.7 -march=armv7-a -mfloat-abi=softfp -mfpu=vfp -mthumb -I/home/pirl/dev/project/mobile/.buildozer/android/platform/build/build/other_builds/python3-libffi-openssl-sqlite3/armeabi-v7a__ndk_target_21/python3/Include -fPIC -I/home/pirl/dev/project/mobile/.buildozer/android/platform/build/build/other_builds/hostpython3/desktop/hostpython3/Include -I/home/pirl/dev/project/mobile/.buildozer/android/platform/build/build/other_builds/hostpython3/desktop/hostpython3/native-build -c jnius/jnius.c -o build/temp.linux-x86_64-3.7/jnius/jnius.o
arm-linux-androideabi-gcc: error: jnius/jnius.c: No such file or directory
arm-linux-androideabi-gcc: fatal error: no input files
compilation terminated.
error: command '/usr/bin/ccache' failed with exit status 1

  STDERR:
```

```
// adb error
// command: adb logcat *:E
12-14 01:46:38.503  4182  4196 E ANDR-PERF-MPCTL: Invalid profile no. 0, total profiles 0 only
12-14 01:46:38.568  4182  4196 E ANDR-PERF-MPCTL: Invalid profile no. 0, total profiles 0 only
12-14 01:46:38.605  2373  2851 E ActivityManager: applyOptionsLocked: pendingOptions.getStartX()=47pendingOptions.getStartY()=508
12-14 01:46:38.617 16066 16066 E Zygote  : v2
12-14 01:46:38.618 16066 16066 E Zygote  : accessInfo : 0
12-14 01:46:38.783  2373  2851 E SensorService: getSensorList a sensor (Sensor Diagnostic Monitor) without holding its required permission: com.samsung.permission.SSENSOR
12-14 01:46:40.047  3874  4028 E ContactsProvider_EventLog: Flush buffer to file cnt : 1 size : 0Kb duration : 2ms lastUpdatedAfter : 60103 ms mFlush_time_threasold : 2000 mCurrentSize : 257
12-14 01:46:40.297  4182  4196 E ANDR-PERF-MPCTL: Invalid profile no. 0, total profiles 0 only
12-14 01:46:42.926  2476  2723 E LOWI-7.7.2.5.a: [LOWIUtils] channelBandToFreq: Invalid band,channel = 1,0
12-14 01:46:42.927  2476  2723 E LOWI-7.7.2.5.a: [LOWIUtils] channelBandToFreq: Invalid band,channel = 1,0
12-14 01:46:42.927  2476  2723 E LOWI-7.7.2.5.a: [LOWIUtils] channelBandToFreq: Invalid band,channel = 1,0
12-14 01:46:42.929  2722  2722 E wpa_supplicant: Cmd 35609 not handled
12-14 01:46:58.365  2373  3109 E Watchdog: !@Sync 1837 [2019-12-14 01:46:58.364]
12-14 01:47:28.376  2373  3109 E Watchdog: !@Sync 1838 [2019-12-14 01:47:28.376]
12-14 01:47:40.131  3874  4028 E ContactsProvider_EventLog: Flush buffer to file cnt : 1 size : 0Kb duration : 2ms lastUpdatedAfter : 60084 ms mFlush_time_threasold : 2000 mCurrentSize : 257
12-14 01:47:58.387  2373  3109 E Watchdog: !@Sync 1839 [2019-12-14 01:47:58.387]
12-14 01:48:28.398  2373  3109 E Watchdog: !@Sync 1840 [2019-12-14 01:48:28.398]
12-14 01:48:40.209  3874  4028 E ContactsProvider_EventLog: Flush buffer to file cnt : 1 size : 0Kb duration : 2ms lastUpdatedAfter : 60077 ms mFlush_time_threasold : 2000 mCurrentSize : 257
```
<!--
The issue tracker is a tool to address bugs.
Please use the Disord community or Stack Overflow for support questions,
more information at https://github.com/kivy/python-for-android#support

Before opening a new issue, make sure you do the following:
    * check that your issue isn't already filed: https://github.com/kivy/python-for-android/issues
    * prepare a short, runnable example that reproduces the issue
    * make sure to have `log_level = 2` in your `buildozer.spec`
    * reproduce the problem with the latest development version (`p4a.branch = master`)
    * double-check that the issue is indeed a bug and not a support request
    * please use backticks to format code or logs
-->

### Versions

* Python: https://www.python.org/ftp/python/3.7.1/Python-3.7.1.tgz
* OS: Ubuntu 18.04 (Docker from buildozer's repo
https://github.com/kivy/buildozer/blob/master/Dockerfile ).
* Kivy: 1.11.1
* Cython: 0.28.6
* python-for-android: master dd69749f [origin/master] Merge pull request #1955 from kivy/release-2019.08.09

### Description

#### What are you trying to get done
Create an APK with a Python Kivy app which includes, among others, Python's `gevent` module, which depends on `_Py_NoneStruct` symbol (not found).

#### What has happened and What went wrong
Building process finished correctly (I have the APK).
Execution process ended before the app is fully loaded with error message:
`ImportError: dlopen failed: cannot locate symbol "_Py_NoneStruct" referenced by "/data/data/org.test.myapp/files/app/_python_bundle/site-packages/gevent/__hub_local.so"...`

#### What did you expect
I expected the app to run smoothly as it does on Linux ;)

### Short & runnable App
[testerror.zip](https://github.com/kivy/python-for-android/files/4080731/testerror.zip)

### buildozer.spec

Command:
```sh
buildozer android clean debug
```

Spec file:
```
[app]

# (str) Title of your application
title = My App

# (str) Package name
package.name = myapp

# (str) Package domain (needed for android/ios packaging)
package.domain = org.test

# (str) Source code where the main.py live
source.dir = ./src/

# (list) Source files to include (let empty to include all the files)
source.include_exts = py,png,jpg,kv,atlas

# (list) List of inclusions using pattern matching
source.include_patterns = data/*

# (list) Source files to exclude (let empty to not exclude anything)
#source.exclude_exts = spec

# (list) List of directory to exclude (let empty to not exclude anything)
source.exclude_dirs = tests, bin, build

# (list) List of exclusions using pattern matching
#source.exclude_patterns = license,images/*/*.jpg

# (str) Application versioning (method 1)
version = 0.1

# (str) Application versioning (method 2)
# version.regex = __version__ = ['"](.*)['"]
# version.filename = %(source.dir)s/main.py

# (list) Application requirements
# comma separated e.g. requirements = sqlite3,kivy
requirements = python3,kivy,parallel-ssh,argparse,six,openssl,cffi,cryptography,gevent                                                                                                                                                      
                                                                                                                                                                                                                                            
# (str) Custom source folders for requirements                                                                                                                                                                                              
# Sets custom source for any requirements with recipes                                                                                                                                                                                      
# requirements.source.kivy = ../../kivy                                                                                                                                                                                                     
                                                                                                                                                                                                                                            
# (list) Garden requirements                                                                                                                                                                                                                
#garden_requirements =                                                                                                                                                                                                                      
                                                                                                                                                                                                                                            
# (str) Presplash of the application                                                                                                                                                                                                        
#presplash.filename = %(source.dir)s/data/presplash.png                                                                                                                                                                                     
                                                                                                                                                                                                                                            
# (str) Icon of the application                                                                                                                                                                                                             
#icon.filename = %(source.dir)s/data/icon.png                                                                                                                                                                                               
                                                                                                                                                                                                                                            
# (str) Supported orientation (one of landscape, sensorLandscape, portrait or all)                                                                                                                                                          
orientation = all                                                                                                                                                                                                                           
                                                                                                                                                                                                                                            
# (list) List of service to declare                                                                                                                                                                                                         
#services = NAME:ENTRYPOINT_TO_PY,NAME2:ENTRYPOINT2_TO_PY                                                                                                                                                                                   
                                                                                                                                                                                                                                            
#                                                                                                                                                                                                                                           
# OSX Specific                                                                                                                                                                                                                              
#                                                                                                                                                                                                                                           
                                                                                                                                                                                                                                            
#                                                                                                                                                                                                                                           
# author = © Copyright Info                                                                                                                                                                                                                 
                                                                                                                                                                                                                                            
# change the major version of python used by the app                                                                                                                                                                                        
osx.python_version = 3

# Kivy version to use
osx.kivy_version = 1.9.1

#
# Android specific
#

# (bool) Indicate if the application should be fullscreen or not
fullscreen = 0

# (string) Presplash background color (for new android toolchain)
# Supported formats are: #RRGGBB #AARRGGBB or one of the following names:
# red, blue, green, black, white, gray, cyan, magenta, yellow, lightgray,
# darkgray, grey, lightgrey, darkgrey, aqua, fuchsia, lime, maroon, navy,
# olive, purple, silver, teal.
#android.presplash_color = #FFFFFF

# (list) Permissions
android.permissions = INTERNET

# (int) Target Android API, should be as high as possible.
#android.api = 27

# (int) Minimum API your APK will support.
#android.minapi = 21

# (int) Android SDK version to use
#android.sdk = 20

# (str) Android NDK version to use
#android.ndk = 17c

# (int) Android NDK API to use. This is the minimum API your app will support, it should usually match android.minapi.
#android.ndk_api = 21

# (bool) Use --private data storage (True) or --dir public storage (False)
#android.private_storage = True

# (str) Android NDK directory (if empty, it will be automatically downloaded.)
#android.ndk_path =

# (str) Android SDK directory (if empty, it will be automatically downloaded.)
#android.sdk_path =

# (str) ANT directory (if empty, it will be automatically downloaded.)
#android.ant_path =

# (bool) If True, then skip trying to update the Android sdk
# This can be useful to avoid excess Internet downloads or save time
# when an update is due and you just want to test/build your package
# android.skip_update = False

# (bool) If True, then automatically accept SDK license
# agreements. This is intended for automation only. If set to False,
# the default, you will be shown the license when first running
# buildozer.
# android.accept_sdk_license = False

# (str) Android entry point, default is ok for Kivy-based app
#android.entrypoint = org.renpy.android.PythonActivity

# (list) Pattern to whitelist for the whole project
#android.whitelist =

# (str) Path to a custom whitelist file
#android.whitelist_src =

# (str) Path to a custom blacklist file
#android.blacklist_src =

# (list) List of Java .jar files to add to the libs so that pyjnius can access
# their classes. Don't add jars that you do not need, since extra jars can slow
# down the build process. Allows wildcards matching, for example:
# OUYA-ODK/libs/*.jar
#android.add_jars = foo.jar,bar.jar,path/to/more/*.jar

# (list) List of Java files to add to the android project (can be java or a
# directory containing the files)
#android.add_src =

# (list) Android AAR archives to add (currently works only with sdl2_gradle
# bootstrap)
#android.add_aars =

# (list) Gradle dependencies to add (currently works only with sdl2_gradle
# bootstrap)
#android.gradle_dependencies =

# (list) Java classes to add as activities to the manifest.
#android.add_activites = com.example.ExampleActivity

# (str) OUYA Console category. Should be one of GAME or APP
# If you leave this blank, OUYA support will not be enabled
#android.ouya.category = GAME

# (str) Filename of OUYA Console icon. It must be a 732x412 png image.
#android.ouya.icon.filename = %(source.dir)s/data/ouya_icon.png

# (str) XML file to include as an intent filters in <activity> tag
#android.manifest.intent_filters =

# (str) launchMode to set for the main activity
#android.manifest.launch_mode = standard

# (list) Android additional libraries to copy into libs/armeabi
#android.add_libs_armeabi = libs/android/*.so
#android.add_libs_armeabi_v7a = libs/android-v7/*.so
#android.add_libs_arm64_v8a = libs/android-v8/*.so
#android.add_libs_x86 = libs/android-x86/*.so
#android.add_libs_mips = libs/android-mips/*.so

# (bool) Indicate whether the screen should stay on
# Don't forget to add the WAKE_LOCK permission if you set this to True
#android.wakelock = False

# (list) Android application meta-data to set (key=value format)
#android.meta_data =

# (list) Android library project to add (will be added in the
# project.properties automatically.)
#android.library_references =

# (list) Android shared libraries which will be added to AndroidManifest.xml using <uses-library> tag
#android.uses_library =

# (str) Android logcat filters to use
#android.logcat_filters = *:S python:D

# (bool) Copy library instead of making a libpymodules.so
#android.copy_libs = 1

# (str) The Android arch to build for, choices: armeabi-v7a, arm64-v8a, x86, x86_64
android.arch = armeabi-v7a

#
# Python for android (p4a) specific
#

# (str) python-for-android fork to use, defaults to upstream (kivy)
#p4a.fork = kivy

# (str) python-for-android branch to use, defaults to master
#p4a.branch = master

# (str) python-for-android git clone directory (if empty, it will be automatically cloned from github)
#p4a.source_dir =

# (str) The directory in which python-for-android should look for your own build recipes (if any)
#p4a.local_recipes = recipes

# (str) Filename to the hook for p4a
#p4a.hook =

# (str) Bootstrap to use for android builds
# p4a.bootstrap = sdl2

# (int) port number to specify an explicit --port= p4a argument (eg for bootstrap flask)
#p4a.port =


#
# iOS specific
#

# (str) Path to a custom kivy-ios folder
#ios.kivy_ios_dir = ../kivy-ios
# Alternately, specify the URL and branch of a git checkout:
ios.kivy_ios_url = https://github.com/kivy/kivy-ios
ios.kivy_ios_branch = master

# Another platform dependency: ios-deploy
# Uncomment to use a custom checkout
#ios.ios_deploy_dir = ../ios_deploy
# Or specify URL and branch
ios.ios_deploy_url = https://github.com/phonegap/ios-deploy
ios.ios_deploy_branch = 1.7.0

# (str) Name of the certificate to use for signing the debug version
# Get a list of available identities: buildozer ios list_identities
#ios.codesign.debug = "iPhone Developer: <lastname> <firstname> (<hexstring>)"

# (str) Name of the certificate to use for signing the release version
#ios.codesign.release = %(ios.codesign.debug)s


[buildozer]

# (int) Log level (0 = error only, 1 = info, 2 = debug (with command output))
log_level = 2

# (int) Display warning if buildozer is run as root (0 = False, 1 = True)
warn_on_root = 1

# (str) Path to build artifact storage, absolute or relative to spec file
# build_dir = ./.buildozer

# (str) Path to build output (i.e. .apk, .ipa) storage
# bin_dir = ./bin

#    -----------------------------------------------------------------------------
#    List as sections
#
#    You can define all the "list" as [section:key].
#    Each line will be considered as a option to the list.
#    Let's take [app] / source.exclude_patterns.
#    Instead of doing:
#
#[app]
#source.exclude_patterns = license,data/audio/*.wav,data/images/original/*
#
#    This can be translated into:
#
#[app:source.exclude_patterns]
#license
#data/audio/*.wav
#data/images/original/*
#


#    -----------------------------------------------------------------------------
#    Profiles
#
#    You can extend section / key with a profile
#    For example, you want to deploy a demo version of your application without
#    HD content. You could first change the title to add "(demo)" in the name
#    and extend the excluded directories to remove the HD content.
#
#[app@demo]
#title = My Application (demo)
#
#[app:source.exclude_patterns@demo]
#images/hd/*
#
#    Then, invoke the command line with the "demo" profile:
#
#buildozer --profile demo android debug
```

### Logs

Related build logs (note the lld hacky stuff, despite I have installed manually `apt install llvm`):
```
[INFO]:    Building libffi for armeabi-v7a
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/libffi/armeabi-v7a__ndk_target_21/libffi
[INFO]:    -> running autogen.sh
[INFO]:    -> running autoreconf -vif                                                                                                                                                                                                      
[INFO]:    -> running configure --host=arm-linux-androideabi --prefix=/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/libffi/armeabi-v7a__ndk_target_21/libffi --disable-bui...(and 21 more)           
[INFO]:    -> running make -j 8 libffi.la                                                                                                                                                                                                  
[INFO]:    -> running cp /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/libffi/armeabi-v7a__ndk_target_21/libffi/.libs/libffi.so /home/user/hostcwd/.buildozer/android/plat...(and 65 more)           
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/python-for-android
[INFO]:    Building librt for armeabi-v7a
[INFO]:    -> running ln -sf /home/user/.buildozer/android/platform/android-ndk-r17c/platforms/android-21/arch-arm/usr/lib/libc.so /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_...(and 79 more)
[INFO]:    -> running ln -sf /home/user/.buildozer/android/platform/android-ndk-r17c/platforms/android-21/arch-arm/usr/lib/libc.a /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_b...(and 77 more)
[INFO]:    Building openssl for armeabi-v7a
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/openssl/armeabi-v7a__ndk_target_21/openssl1.1
[INFO]:    -> running perl Configure shared no-dso no-asm android-arm -D__ANDROID_API__=21
[INFO]:    Applying patch disable-sover.patch                                                                                                                                                                                              
[INFO]:    -> running patch -t -d /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/openssl/armeabi-v7a__ndk_target_21/openssl1.1 -p1 -i /home/user/hostcwd/.buildozer/android...(and 81 more)
[INFO]:    -> running make build_libs                                                                                                                                                                                                      
[INFO]:    -> running cp libssl1.1.so libcrypto1.1.so /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/libs_collections/myapp/armeabi-v7a                                                                          
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/python-for-android
[INFO]:    Building sdl2_image for armeabi-v7a
[INFO]:    Building sdl2_mixer for armeabi-v7a
[INFO]:    Building sdl2_ttf for armeabi-v7a
[INFO]:    Building sqlite3 for armeabi-v7a
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/sqlite3/armeabi-v7a__ndk_target_21/sqlite3
[INFO]:    -> running ndk-build V=1 APP_PLATFORM=android-21 APP_ABI=armeabi-v7a
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/python-for-android                                                                                                                                          
[INFO]:    Building python3 for armeabi-v7a
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/python3-libffi-openssl-sqlite3/armeabi-v7a__ndk_target_21/python3/android-build
[WARNING]: Doing some hacky stuff to link properly
[INFO]:    -> running cp /home/user/.buildozer/android/platform/android-ndk-r17c/platforms/android-21/arch-arm/usr/lib/crtbegin_so.o ./
[INFO]:    -> running cp /home/user/.buildozer/android/platform/android-ndk-r17c/platforms/android-21/arch-arm/usr/lib/crtend_so.o ./
[WARNING]: lld not found, linking without it. Consider installing lld if linker errors occur.
[INFO]:    Activating flags for sqlite3
[INFO]:    Activating flags for libffi
[INFO]:    Activating flags for openssl
[INFO]:    -> running configure --host=arm-linux-androideabi --build=x86_64-pc-linux-gnu --enable-shared --enable-ipv6 ac_cv_file__dev_ptmx=yes ac_cv_file__dev_ptc=no --without-ensurepip ac_cv_little_endian_d...(and 199 more)
[INFO]:    -> running make all -j 8 INSTSONAME=libpython3.7m.so                                                                                                                                                                            
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/python-for-android                                                                                                                                          

[...]

[INFO]:    Building cffi for armeabi-v7a
[INFO]:    cffi apparently isn't already in site-packages
[INFO]:    Building compiled components in cffi
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/cffi-python3/armeabi-v7a__ndk_target_21/cffi
[INFO]:    -> running python setup.py clean --all
[INFO]:    -> running python setup.py build_ext -v                                                                                                                                                                                         
[INFO]:    -> running find build/lib.linux-x86_64-3.7 -name "*.o" -exec arm-linux-androideabi-strip --strip-unneeded {} ;                                                                                                                  
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/python-for-android
[INFO]:    Installing cffi into site-packages
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/cffi-python3/armeabi-v7a__ndk_target_21/cffi
[INFO]:    -> running python setup.py install -O2 --root=/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp --install-lib=.
[INFO]:    Rebuilding compiled components in cffi                                                                                                                                                                                          
[INFO]:    -> running python setup.py clean --all
[INFO]:    -> running python setup.py build_ext -v                                                                                                                                                                                         
[INFO]:    -> running python setup.py install -O2 --root=/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/hostpython3/desktop/hostpython3/native-build --install-lib=Lib/site-packages                  
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/python-for-android                                                                                                                                          
[INFO]:    Building gevent for armeabi-v7a
[INFO]:    gevent apparently isn't already in site-packages
[INFO]:    Cythonizing anything necessary in gevent
[INFO]:    Moved "-DANDROID -D__ANDROID_API__=21 -I/home/user/.buildozer/android/platform/android-ndk-r17c/sysroot/usr/include/arm-linux-androideabi -I/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp/include/python3.7 -I/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/python3-libffi-openssl-sqlite3/armeabi-v7a__ndk_target_21/python3/Include" from CFLAGS to CPPFLAGS.
[INFO]:    Moved "-lm -lpython3.7m" from LDFLAGS to LIBS.
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/gevent-python3/armeabi-v7a__ndk_target_21/gevent
[INFO]:    -> running python -c import sys; print(sys.path)
[INFO]:    Trying first build of gevent to get cython files: this is expected to fail                                                                                                                                                      
[INFO]:    -> running python setup.py build_ext -v
[INFO]:    First build appeared to complete correctly, skipping manualcythonising.                                                                                                                                                         
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/gevent-python3/armeabi-v7a__ndk_target_21/gevent
[INFO]:    Stripping object files
[INFO]:    -> running find . -iname *.so -exec /usr/bin/echo {} ;
[INFO]:    -> running find . -iname *.so -exec arm-linux-androideabi-strip --strip-unneeded {} ;                                                                                                                                           
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/gevent-python3/armeabi-v7a__ndk_target_21/gevent
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/python-for-android
[INFO]:    Moved "-DANDROID -D__ANDROID_API__=21 -I/home/user/.buildozer/android/platform/android-ndk-r17c/sysroot/usr/include/arm-linux-androideabi -I/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp/include/python3.7 -I/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/python3-libffi-openssl-sqlite3/armeabi-v7a__ndk_target_21/python3/Include" from CFLAGS to CPPFLAGS.
[INFO]:    Moved "-lm -lpython3.7m" from LDFLAGS to LIBS.
[INFO]:    Installing gevent into site-packages
[INFO]:    -> directory context /home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/gevent-python3/armeabi-v7a__ndk_target_21/gevent
[INFO]:    -> running python setup.py install -O2 --root=/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp --install-lib=.
[INFO]:    <- directory context /home/user/hostcwd/.buildozer/android/platform/python-for-android                                                                                                                                          
```

 The last logs from ADB are:

```
12-08 13:15:24.883  2707  7245 I ActivityManager: Start proc 22728:android.process.media/u0a32 for content provider com.android.providers.downloads/.DownloadProvider
12-08 13:15:24.928 22610 22635 I python  : [INFO   ] [Image       ] Providers: img_tex, img_dds, img_sdl2, img_gif (img_pil, img_ffpyplayer ignored)
12-08 13:15:25.037 22610 22635 I python  : [INFO   ] [Text        ] Provider: sdl2
12-08 13:15:25.039 22639 22724 I Finsky  : [51296] mnb.run(2): Installer: Installer starting.
12-08 13:15:25.039 22639 22724 I Finsky  : [51296] mnb.run(4): Installer: Installer started.
12-08 13:15:25.045 22639 22639 I Finsky  : [2] moa.a(252): Installer: found apps to install. isMultiUserMode=true, apps=[]
12-08 13:15:25.059 22639 22639 I Finsky  : [2] uwr.a(20): Connecting InstallListener to SplitInstallService broadcaster...
12-08 13:15:25.099 22610 22635 I python  :  Traceback (most recent call last):
12-08 13:15:25.100 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/app/main.py", line 53, in <module>
12-08 13:15:25.100 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/app/main.py", line 25, in main
12-08 13:15:25.101 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/app/app/MyApp.py", line 25, in <module>
12-08 13:15:25.101 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/app/app/ServicesManager.py", line 3, in <module>
12-08 13:15:25.102 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/app/app/Service.py", line 6, in <module>
12-08 13:15:25.102 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/app/app/sshdevice.py", line 5, in <module>
12-08 13:15:25.103 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp/pssh/clients/__init__.py", line 19, in <module>
12-08 13:15:25.104 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp/pssh/clients/native/__init__.py", line 19, in <module>
12-08 13:15:25.104 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp/pssh/clients/native/parallel.py", line 20, in <module>
12-08 13:15:25.105 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp/gevent/__init__.py", line 87, in <module>
12-08 13:15:25.105 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp/gevent/_hub_local.py", line 101, in <module>
12-08 13:15:25.106 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/python-installs/myapp/gevent/_util.py", line 105, in import_c_accel
12-08 13:15:25.107 22610 22635 I python  :    File "/home/user/hostcwd/.buildozer/android/platform/build-armeabi-v7a/build/other_builds/python3-libffi-openssl-sqlite3/armeabi-v7a__ndk_target_21/python3/Lib/importlib/__init__.py", line 127, in import_module
12-08 13:15:25.108 22610 22635 I python  :  ImportError: dlopen failed: cannot locate symbol "_Py_NoneStruct" referenced by "/data/data/org.test.myapp/files/app/_python_bundle/site-packages/gevent/__hub_local.so"...
12-08 13:15:25.108 22610 22635 I python  : Python for android ended.
```
In here we solve a problem we have when changing `android_api` if we already have a build distribution that we can reuse. The problem is that the changes are not reflected in the final APK, because there is some hardcoded `android_api` in some of the distribution files. So in here we will update those files so when we perform the build of the APK with gradle it will change the necessary stuff with the new `android_api`.

We also:
  - Store the `android_api` value to `dist_info.json` file (and update it if we reuse the dist with a new `android_api`)
  - Prettify `dist_info.json` (to be easier to read it for us)
  - Reduce complexity of `Distribution.get_distributions`
  - Add unittests for the added code

How to test this
--------------------
Well, it will require two builds, the first one with one `android_api` and then another with a new `android_api`. Once the second build complete you will see that the distribution file: `AndroidManifest.xml` has the value of the second  build (btw, we never modify this file in this PR, this file is modified by gradle). You can check around line 22, for something like:
```
    <uses-sdk android:minSdkVersion="21" android:targetSdkVersion="28" />
```

The value of `android:targetSdkVersion` should be the one you used with `android_api` in your second build.


How will look like the `dist_info.json` file
----------------------------------------------------
```
{
    "android_api": 28,
    "archs": [
        "arm64-v8a"
    ],
    "bootstrap": "sdl2",
    "dist_name": "bdisttest_python3_sqlite_openssl_googlendk",
    "hostpython": "/home/opacam/.local/share/python-for-android/build/other_builds/hostpython3/desktop/hostpython3/native-build/python3",
    "ndk_api": 21,
    "python_version": "3.7",
    "recipes": [
        "hostpython3",
        "libffi",
        "openssl",
        "sdl2_image",
        "sdl2_mixer",
        "sdl2_ttf",
        "sqlite3",
        "python3",
        "sdl2",
        "setuptools",
        "requests",
        "six",
        "pyjnius",
        "android",
        "kivy",
        "peewee"
    ],
    "use_setup_py": false
}
```

As you see, the keys are sorted and indented with 4 spaces :wink:...imho, far readable than all in one line, right?

Notes
--------
Some parts of the code where taken from #1926, so this PR is a portion of what we presented there, but refreshed and enhanced.