Hi,
  I have started using the module to integrate with our deployment. I am not 100 percent sure but so far from the Observed Behaviour, it seems that once the CL.THROTTLE commands gets executed the Key Entry is made, and subsequent CL.THROTTLE, use the entry to process the rate limit quota.
  Working On A PR for the following, but wanted to discuss before hand if I have interpreted this correctly:-

1.Removing a Key Altogether
2.Resetting / Updating a key with new Rate Limit Tuple



Waiting for your response
Thanks
Romit
Hi, do you have some documentation, examples for commands? 
hi,i want to know redis celll support redis cluster? according to  https://redis.io/topics/modules-api-ref, i not found "getkeys-api" in your code.
Move the error system over to [error-chain](https://github.com/rust-lang-nursery/error-chain) as it's starting to become a de facto standard in Rust and provides better introspection and some nice ergonomic improvements for projects using it.
I've done some significant rework of the repo, and most of these choices are off the cuff and suiting me in my own use case, so I don't expect them to be everyone's cup of tea. However I did the work of separating things into distinct mods, as well as added a procedural macro which I think DRYs up the addition of new commands significantly. 

So in summary:

- fixed a segfault in freeing a null ptr
- added support for extracting Reply::Error and Reply::Array types from redis
- bumped crate version to 0.2.0
- separated Command into RedisCommand and RedisCommandAttrs, allowing part to be derived
- `#[derive(RedisCommandAttrs)` support in a procedural macro (redis-command-gen subcrate)
- updated redismodule.h to support redis 4.0-rc3 (current)
- added call4 for variadic `call` with arity of 4 (though I'm not sure I use it)

In conclusion, I think that we're now 90% of the way to extracting a useful crate to publish on crates.io, but I didn't get around to that, and wanted to see how this would be received before I went ahead and did that.

I'd love to know people's thoughts.
Hi @brandur,

I don't have much experience in rust however I am wondering how complex would be to decouple the part of the code base that interact with redis from your module.

Ideally I wonder how much work would be to create a crate to simply plug inside the dependencies.

Best,

Simone