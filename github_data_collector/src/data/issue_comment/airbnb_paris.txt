Hello,

Opening an issue since I noticed that after updating from paris 1.2.1 to paris 1.3.1 a custom textview that is making use of paris style method now ignores text color attribute when applied through XML (in legacy screens).

Any idea what might be causing it? When reverting to 1.2.1 XML text colors work properly.

Thank you

```@ModelView(autoLayout = ModelView.Size.MATCH_WIDTH_WRAP_HEIGHT)
open class DesignTextView @JvmOverloads constructor(
    context: Context,
    attrs: AttributeSet? = null,
    @AttrRes defStyleAttr: Int = 0
) : AppCompatTextView(context, attrs, defStyleAttr) {

    init {
        val styledAttrs = context.theme.obtainStyledAttributes(
            attrs,
            R.styleable.DesignTextView,
            0,
            0
        )
        bindButtonType(styledAttrs)
        styledAttrs.recycle()
    }

    private fun bindButtonType(styledAttrs: TypedArray) = setTextStyle(
        TextStyle.fromStyleableIndex(
            styledAttrs.getInt(R.styleable.DesignTextView_text_style, 0)
        )
    )
    
    @ModelProp
    fun setTextStyle(style: TextStyle) = style(style.styleRes)
    
    enum class TextStyle(val styleableIndex: Int, @StyleRes val styleRes: Int) {
        BODY(4, R.style.DesignTextView_Body),
        EYEBROW(5, R.style.DesignTextView_Eyebrow),
        CAPTION(6, R.style.DesignTextView_Caption)

        companion object {
            fun fromStyleableIndex(styleableIndex: Int): TextStyle =
                values().first { it.styleableIndex == styleableIndex }
        }
    }
}
e: G:\Code\Clone\paris\sample\build\tmp\kapt3\stubs\debug\com\airbnb\paris\sample\SectionView.java:30: ����: �����ݵ�����: <��ֵ>�޷�ת��Ϊint
    @com.airbnb.paris.annotations.StyleableChild(value = null)
                                                         ^

gradle 3.5.3 works well
I am trying to implement Custom View Attributes using  Butter Knife Gradle plugin. 

```xml
<declare-styleable name="DateTimePicker">
   <attr name="startTime" format="string" />
   <attr name="endTime" format="string" />
</declare-styleable>
```

```kotlin
@Styleable("DateTimePicker")
class DateTimePicker(..) : View(..) {

     ...

    @Attr(R2.styleable.DateTimePicker_startTime) // Unresolved reference
    fun setStartTime(value: String) {
        ...
    }
}
```

I get the `Unresolved reference` error. Is there a way to fix it?
this is not working:
`inputLayout.style(R.style.Widget_MaterialComponents_TextInputLayout_OutlinedBox)`

xml: 
```
 <com.google.android.material.textfield.TextInputLayout
    android:id="@+id/inputLayout"
    android:layout_width="match_parent"
    android:layout_height="wrap_content"
    android:hint="@string/sample">

    <com.google.android.material.textfield.TextInputEditText
        android:id="@+id/editText"
        android:layout_width="match_parent"
        android:layout_height="wrap_content"
        android:inputType="number"
        android:textSize="14sp" />

</com.google.android.material.textfield.TextInputLayout>
```


Right now, `TextViewProxy` doesn't support `minHeight`. https://developer.android.com/reference/android/widget/TextView#setMinHeight(int) `TextView` has this special property. If we don't support this, it may use the `View.setMinimumHeight(int)` which is supported in our `ViewProxy`
> The value given here is different than `View.setMinimumHeight(int)`. Between minHeight and the value set in View.setMinimumHeight(int), the greater one is used to decide the final height.

We already support `minWidth` for `TextView`, we probably should also support `minHeight`. I can add this.
In many places in the processor issues are logged like this
```
 logWarning {
                "No need to specify the @Styleable value parameter if no class members are annotated with @Attr."
            }
```

However, the user sees only this message, with no context about the class and element that caused the issue, which can make the error very hard to debug.

I'm not sure if this is related with another issues reported on Samsung devices, but I'm getting the following crash

* OS Version: 4.4.2
* Device: Galaxy Young2, Galaxy Note2

```
Caused by android.content.res.Resources$NotFoundException: File res/drawable-mdpi/tw_ic_bullet_key_permission_light.png from drawable resource ID #0x1080a23: .xml extension required
       at android.content.res.Resources.loadColorStateList(Resources.java:3619)
       at android.content.res.TypedArray.getColorStateList(TypedArray.java:343)
       at com.airbnb.paris.typed_array_wrappers.TypedArrayTypedArrayWrapper.getColorStateList(TypedArrayTypedArrayWrapper.kt:34)
       at android.view.ViewStyleApplier.processAttributes(ViewStyleApplier.java:101)
       at com.airbnb.paris.StyleApplier.apply(StyleApplier.kt:60)
       at android.view.ViewGroupStyleApplier.applyParent(ViewGroupStyleApplier.java:24)
       at com.airbnb.paris.StyleApplier.apply(StyleApplier.kt:47)
       at com.airbnb.paris.StyleApplier.apply(StyleApplier.kt:40)
       at com.smithmicro.safepath.family.core.activities.main.MainActivity.initViews(MainActivity.java:229)
       at com.smithmicro.safepath.family.core.activities.main.MainActivity.onCreate(MainActivity.java:187)
       at android.app.Activity.performCreate(Activity.java:5484)
       at android.app.Instrumentation.callActivityOnCreate(Instrumentation.java:1093)
       at android.app.ActivityThread.performLaunchActivity(ActivityThread.java:2400)
       at android.app.ActivityThread.handleLaunchActivity(ActivityThread.java:2498)
       at android.app.ActivityThread.access$900(ActivityThread.java:179)
       at android.app.ActivityThread$H.handleMessage(ActivityThread.java:1324)
       at android.os.Handler.dispatchMessage(Handler.java:102)
       at android.os.Looper.loop(Looper.java:146)
       at android.app.ActivityThread.main(ActivityThread.java:5641)
       at java.lang.reflect.Method.invokeNative(Method.java)
       at java.lang.reflect.Method.invoke(Method.java:515)
       at com.android.internal.os.ZygoteInit$MethodAndArgsCaller.run(ZygoteInit.java:1288)
       at com.android.internal.os.ZygoteInit.main(ZygoteInit.java:1104)
       at dalvik.system.NativeStart.main(NativeStart.java)
```

I'm doing
```
Paris.style(mBottomNavigationView).apply(R.style.SafePath_BottomNavigationView_Transparent);
```

where
```
<style name="SafePath.BottomNavigationView.Transparent">
    <item name="android:background">@android:color/transparent</item>
</style>
```
and the crash seems to be happening due to 
```
if (a.hasValue(styleable.Paris_View_android_backgroundTint)) {
    ((ViewProxy)this.getProxy()).setBackgroundTint(a.getColorStateList(styleable.Paris_View_android_backgroundTint));
}
```
inside ViewStyleApplier.class
Adding `android:gravity` for LinearLayouts
Adding `radius`, `elevation`, `contentPadding` and `backgroundColor` as CardView attributes to `CardViewProxy`