@opsroller: Please remove my name from this repo, especially the copyright. Thanks.
For a while now, I've had a functions defined for moving windows between monitors (either left or right) but it stopped working in 10.12 Sierra.

For example, to move to the screen to the left:
```lua
  local win = window.focusedwindow()
  if win then
    local leftWin = win:screen():towest()
    if leftWin then
      local left_screen_frame = leftWin:frame()
      local this_screen_frame = win:frame()
      local offset = this_screen_frame.x - win:screen():frame().x
      this_screen_frame.x = left_screen_frame.x + offset
      win:setframe(this_screen_frame)
    end
  end
```
This worked fine for a while, but as of 10.12 Sierra this no longer works. Not sure if this is a limitation in macOS or a bug that's fixable.
When I use `win:otherwindows_samescreen()`, the windows stopped, and I get a spin report.

Phoenix has the same problem.

```
Date/Time:       2015-05-30 17:18:46 +0800
OS Version:      10.10.3 (Build 14D136)
Architecture:    x86_64h
Report Version:  21

Command:         Mjolnir
Path:            /opt/homebrew-cask/*/Mjolnir.app/Contents/MacOS/Mjolnir
Version:         0.4.3 (0.4.3)
PID:             41168

Event:           spin-lite
Duration:        3.90s (process was unresponsive for 2 seconds before sampling)
Steps:           40 (100ms sampling interval)

Hardware model:  MacBookPro11,1
Active cpus:     4

Fan speed:       1309 rpm

Heaviest stack for the main thread of the target process:
  40  start + 1 (libdyld.dylib + 13769) [0x7fff9ad2a5c9]
  40  NSApplicationMain + 1832 (AppKit + 13140) [0x7fff9a1a8354]
  40  -[NSApplication run] + 711 (AppKit + 552040) [0x7fff9a22bc68]
  40  -[NSApplication sendEvent:] + 2104 (AppKit + 1429890) [0x7fff9a302182]
  40  SendEventToEventTarget + 40 (HIToolbox + 122038) [0x7fff95a9ecb6]
  40  SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 386 (HIToolbox + 32686) [0x7fff95a88fae]
  40  DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 1260 (HIToolbox + 35692) [0x7fff95a89b6c]
  40  hotkey_callback + 156 (internal.so + 5004) [0x100a4a38c]
  40  lua_callk + 73 (Mjolnir + 95148) [0x1009073ac]
  40  luaD_call + 66 (Mjolnir + 99651) [0x100908543]
  40  luaV_execute + 1862 (Mjolnir + 64610) [0x1008ffc62]
  40  luaD_precall + 426 (Mjolnir + 98893) [0x10090824d]
  40  luaB_xpcall + 123 (Mjolnir + 10451) [0x1008f28d3]
  40  lua_pcallk + 118 (Mjolnir + 95295) [0x10090743f]
  40  luaD_pcall + 51 (Mjolnir + 100650) [0x10090892a]
  40  luaD_rawrunprotected + 86 (Mjolnir + 97697) [0x100907da1]
  40  luaD_call + 66 (Mjolnir + 99651) [0x100908543]
  40  luaV_execute + 1862 (Mjolnir + 64610) [0x1008ffc62]
  40  luaD_precall + 426 (Mjolnir + 98893) [0x10090824d]
  40  application_allwindows + 76 (internal.so + 6284) [0x100a0488c]
  40  AXUIElementCopyAttributeValues + 824 (HIServices + 124310) [0x7fff9c8b4596]
  40  _AXMIGCopyAttributeValues + 361 (HIServices + 167574) [0x7fff9c8bee96]
  40  mach_msg_trap + 10 (libsystem_kernel.dylib + 70878) [0x7fff9bf0f4de]
 *40  ipc_mqueue_receive_continue + 0 (kernel + 1148928) [0xffffff8000318800]

  Binary Images:
         0x1008f0000 -        0x10091efff  org.degutis.Mjolnir 0.4.3 (0.4.3)   <8E0943E4-D75E-3609-8C65-532979FE732B>  /opt/homebrew-cask/*/Mjolnir.app/Contents/MacOS/Mjolnir
         0x100a03000 -        0x100a05fff  internal.so                         <3FD20EC8-3BFB-3FCB-8D7E-9AE6216EB5C6>  /usr/local/lib/lua/5.2/mjolnir/application/internal.so
         0x100a49000 -        0x100a4afff  internal.so                         <7C81C4E2-8121-3109-A101-91C7DC12A7BE>  /usr/local/lib/lua/5.2/mjolnir/hotkey/internal.so
      0x7fff95a81000 -     0x7fff95d86fff  com.apple.HIToolbox 2.1.1 (758.7)   <6711FAA9-904A-3B49-9665-FC8D13B93C42>  /System/Library/Frameworks/Carbon.framework/Versions/A/Frameworks/HIToolbox.framework/Versions/A/HIToolbox
      0x7fff9a1a5000 -     0x7fff9ad26fff  com.apple.AppKit 6.9 (1347.57)      <B214D528-7D1C-39B2-BE36-821D417A0297>  /System/Library/Frameworks/AppKit.framework/Versions/C/AppKit
      0x7fff9ad27000 -     0x7fff9ad2afff  libdyld.dylib (353.2.1)             <9EACCA38-291D-38CC-811F-7E9D1451E2D3>  /usr/lib/system/libdyld.dylib
      0x7fff9befe000 -     0x7fff9bf1bfff  libsystem_kernel.dylib (2782.20.48) <EAFD7BD0-0C30-3E7D-9528-F9916BA0167C>  /usr/lib/system/libsystem_kernel.dylib
      0x7fff9c896000 -     0x7fff9c8e0fff  com.apple.HIServices 1.22 (522.1)   <E8BD41E4-7747-3CAF-807A-5CA9AD16B525>  /System/Library/Frameworks/ApplicationServices.framework/Versions/A/Frameworks/HIServices.framework/Versions/A/HIServices
 *0xffffff8000200000 - 0xffffff80009fffff  kernel (2782.20.48)                 <4B3A11F4-77AA-3D27-A22D-81A1BC5B504D>  /System/Library/Kernels/kernel

```

Sometimes when I start Mjolnir, I got the following errors:

```
-- Loading ~/.mjolnir/init.lua
/usr/local/share/lua/5.2/mjolnir/hotkey.lua:35: bad argument #2 to '_new' (number expected, got nil)
stack traceback:
    [C]: in function '_new'
    /usr/local/share/lua/5.2/mjolnir/hotkey.lua:35: in function 'new'
    /usr/local/share/lua/5.2/mjolnir/hotkey.lua:43: in function 'bind'
    /Users/iveney/.mjolnir/init.lua:61: in main chunk
    [C]: in function 'xpcall'
    /Applications/Mjolnir.app/Contents/Resources/setup.lua:73: in main chunk
```

However, reloading the config from the menu bar will work normally. Have no idea why this happens. Is it related to the order I put the 'require' statement? My order is like this:

```
local application = require "mjolnir.application"
local window = require "mjolnir.window"
local fnutils = require "mjolnir.fnutils"
local alert = require "mjolnir.alert"
local hotkey = require "mjolnir.hotkey"
local grid = require "mjolnir.sd.grid"
local tiling = require "mjolnir.tiling"
local geometry = require "mjolnir.geometry"
```

I have looking through the documentation on Dash, and I couldn't seem to find a way to open a particular file. For example, I'd like to open a .html file in Sublime (which is the default application to open this type of file). Is there a way to open particular files in an application with any module in Mjolnir/Lua?

since `Disable and re-enable accessibility.` solves many problems. 

why not check on every restart if this option is activated and show a hint how to solve this?

I am attempting to write a function which will:
1. Minimize a window
2. Focus the next visible window

So far I seem to have it so it minimizes the window then attempts to focuse the first visible window(which seems to be indexed at [1]?). Anywho, my issue is that it doesn't actually allow me to minimize the window. My guess is windows are focus-able the way I would like them to be. 

Should I be going about this another way, maybe running `launchforfocus()` on an Application?  If so, how can I coerce the userdata object from `window.application()` into a string?

Thank so much! Having a swell time with Mjolnir :beers: 

``` lua
local grab_closest_window = function()
  local windows = window.visiblewindows()

  if windows then
    return windows[1]
  else
    alert.show("Clean as a whistle.")
    return false
  end
end

local minimizewin = function()
  return function()
    local win = window.focusedwindow()

    if win then
      window.minimize(win)
      window.focus(grab_closest_window())
    else
      alert.show("No focused window.")
      return false
    end
  end
end
```

The code that detects input source changes has something fishy going on, sometimes it works, sometimes it crashes on change and sometimes it doesn't detect the change.

I'm using OSX Yosemite with Mjolnir 0.4.3 with this config file https://github.com/trishume/dotfiles/blob/master/mjolnir/mjolnir.symlink/init.lua

Here's the crash log I get when it crashes: http://pastebin.com/epb2LVMX

After running mjolnir for some time it crashes. Here is part of last crash report:

```
Thread 0 Crashed:: Dispatch queue: com.apple.main-thread
0   libobjc.A.dylib                 0x00007fff8b282acf objc_release + 15
1   internal.so                     0x0000000110390e35 screen_gc + 37
2   org.degutis.Mjolnir             0x000000010b65a24d luaD_precall + 426
3   org.degutis.Mjolnir             0x000000010b65a537 luaD_call + 54
4   org.degutis.Mjolnir             0x000000010b659da1 luaD_rawrunprotected + 86
5   org.degutis.Mjolnir             0x000000010b65a92a luaD_pcall + 51
6   org.degutis.Mjolnir             0x000000010b64ee65 GCTM + 220
7   org.degutis.Mjolnir             0x000000010b64ed55 luaC_forcestep + 357
8   org.degutis.Mjolnir             0x000000010b65a3c2 luaD_precall + 799
9   org.degutis.Mjolnir             0x000000010b651c62 luaV_execute + 1862
10  org.degutis.Mjolnir             0x000000010b65a543 luaD_call + 66
11  org.degutis.Mjolnir             0x000000010b659da1 luaD_rawrunprotected + 86
12  org.degutis.Mjolnir             0x000000010b65a92a luaD_pcall + 51
13  org.degutis.Mjolnir             0x000000010b65943f lua_pcallk + 118
14  org.degutis.Mjolnir             0x000000010b6448d3 luaB_xpcall + 123
15  org.degutis.Mjolnir             0x000000010b65a24d luaD_precall + 426
16  org.degutis.Mjolnir             0x000000010b651c62 luaV_execute + 1862
17  org.degutis.Mjolnir             0x000000010b65a543 luaD_call + 66
18  org.degutis.Mjolnir             0x000000010b6593ac lua_callk + 73
19  internal.so                     0x000000011039d38c hotkey_callback + 156
20  com.apple.HIToolbox             0x00007fff8c51232c DispatchEventToHandlers(EventTargetRec*, OpaqueEventRef*, HandlerCallRec*) + 1260
21  com.apple.HIToolbox             0x00007fff8c51176e SendEventToEventTargetInternal(OpaqueEventRef*, OpaqueEventTargetRef*, HandlerCallRec*) + 386
22  com.apple.HIToolbox             0x00007fff8c526286 SendEventToEventTarget + 40
23  com.apple.AppKit                0x00007fff8e92b043 -[NSApplication sendEvent:] + 1819
24  com.apple.AppKit                0x00007fff8e7b7fe8 -[NSApplication run] + 711
25  com.apple.AppKit                0x00007fff8e7a3424 NSApplicationMain + 1832
26  libdyld.dylib                   0x00007fff984e25c9 start + 1

Thread 1:: Dispatch queue: com.apple.libdispatch-manager
0   libsystem_kernel.dylib          0x00007fff904ba22e kevent64 + 10
1   libdispatch.dylib               0x00007fff8ccdca6a _dispatch_mgr_thread + 52

Thread 2:
0   libsystem_kernel.dylib          0x00007fff904b452e mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff904b369f mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff94060b14 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9405ffdb __CFRunLoopRun + 1371
4   com.apple.CoreFoundation        0x00007fff9405f838 CFRunLoopRunSpecific + 296
5   com.apple.AppKit                0x00007fff8e9278f7 _NSEventThread + 137
6   libsystem_pthread.dylib         0x00007fff907622fc _pthread_body + 131
7   libsystem_pthread.dylib         0x00007fff90762279 _pthread_start + 176
8   libsystem_pthread.dylib         0x00007fff907604b1 thread_start + 13

Thread 3:: com.apple.NSURLConnectionLoader
0   libsystem_kernel.dylib          0x00007fff904b452e mach_msg_trap + 10
1   libsystem_kernel.dylib          0x00007fff904b369f mach_msg + 55
2   com.apple.CoreFoundation        0x00007fff94060b14 __CFRunLoopServiceMachPort + 212
3   com.apple.CoreFoundation        0x00007fff9405ffdb __CFRunLoopRun + 1371
4   com.apple.CoreFoundation        0x00007fff9405f838 CFRunLoopRunSpecific + 296
5   com.apple.CFNetwork             0x00007fff90142e90 +[NSURLConnection(Loader) _resourceLoadLoop:] + 434
6   com.apple.Foundation            0x00007fff92115b7a __NSThread__main__ + 1345
7   libsystem_pthread.dylib         0x00007fff907622fc _pthread_body + 131
8   libsystem_pthread.dylib         0x00007fff90762279 _pthread_start + 176
9   libsystem_pthread.dylib         0x00007fff907604b1 thread_start + 13

Thread 4:: com.apple.CFSocket.private
0   libsystem_kernel.dylib          0x00007fff904b93f6 __select + 10
1   libsystem_pthread.dylib         0x00007fff907622fc _pthread_body + 131
2   libsystem_pthread.dylib         0x00007fff90762279 _pthread_start + 176
3   libsystem_pthread.dylib         0x00007fff907604b1 thread_start + 13

Thread 0 crashed with X86 Thread State (64-bit):
  rax: 0xbadd90ddadfabead  rbx: 0x0000000110390e10  rcx: 0x0000000000000000  rdx: 0x0000600000462880
  rdi: 0x000060800026e600  rsi: 0x00000001103921a0  rbp: 0x00007fff545bce90  rsp: 0x00007fff545bce88
   r8: 0x000000000000006e   r9: 0x000060800026e780  r10: 0x00007f93c4803d90  r11: 0x00007fff7a35e0f0
  r12: 0x00007f93c3057f10  r13: 0x0000000000000000  r14: 0x0000000000000000  r15: 0x00007f93c2f0e0d0
  rip: 0x00007fff8b282acf  rfl: 0x0000000000010246  cr2: 0x0000600000258ba0

Logical CPU:     0
Error Code:      0x00000000
Trap Number:     13


Binary Images:
       0x10b642000 -        0x10b670fff +org.degutis.Mjolnir (0.4.3 - 0.4.3) <8E0943E4-D75E-3609-8C65-532979FE732B> /Applications/Mjolnir.app/Contents/MacOS/Mjolnir
       0x10ff1e000 -        0x10ff1efef +cl_kernels (???) <D0696F27-2C2D-49AB-B8A3-008D05348B01> cl_kernels
       0x10ff26000 -        0x10ff26ff7 +internal.so (???) <1F75F552-AD88-33F4-AA55-B44290BC5EAB> /usr/local/lib/lua/5.2/mjolnir/geometry/internal.so
       0x10ff2d000 -        0x10ff2dfe7 +cl_kernels (???) <0E3F5F2C-EDCF-4149-99F1-4E816C383ED4> cl_kernels
       0x10ff2f000 -        0x110015fef  unorm8_bgra.dylib (2.4.5) <90797750-141F-3114-ACD0-A71363968678> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_bgra.dylib
       0x110057000 -        0x110137ff7  unorm8_rgba.dylib (2.4.5) <A8805102-8A21-3A5E-AE22-63C0DEC8CB6F> /System/Library/Frameworks/OpenCL.framework/Versions/A/Libraries/ImageFormats/unorm8_rgba.dylib
       0x110384000 -        0x110386fff +internal.so (???) <3FD20EC8-3BFB-3FCB-8D7E-9AE6216EB5C6> /usr/local/lib/lua/5.2/mjolnir/application/internal.so
       0x11038a000 -        0x11038cfff +internal.so (???) <C2386DBD-3409-3894-89B9-2DA652532F75> /usr/local/lib/lua/5.2/mjolnir/window/internal.so
       0x110390000 -        0x110391fff +internal.so (???) <C82D462A-6FE7-39C5-8E89-B7A7848DE930> /usr/local/lib/lua/5.2/mjolnir/screen/internal.so
       0x110394000 -        0x110397ff7 +alert.so (???) <98E6EDE4-90DB-3B4D-AFCC-9F295B1AABC1> /usr/local/lib/lua/5.2/mjolnir/alert.so
       0x11039c000 -        0x11039dfff +internal.so (???) <7C81C4E2-8121-3109-A101-91C7DC12A7BE> /usr/local/lib/lua/5.2/mjolnir/hotkey/internal.so
       0x1103a0000 -        0x1103a3fff +internal.so (???) <C9826BDC-82B0-3682-900D-09C69E92338D> /usr/local/lib/lua/5.2/mjolnir/keycodes/internal.so
       0x1103a6000 -        0x1103a7ff7 +internal.so (???) <7DEF9C68-C6CC-37FC-8661-8D7354D6B564> /usr/local/lib/lua/5.2/mjolnir/jstevenson/cursor/internal.so
       0x1103aa000 -        0x1103abff7 +internal.so (???) <53888A9D-52A8-3EDE-88D0-A6069960A902> /usr/local/lib/lua/5.2/mjolnir/_asm/hydra/undocumented/internal.so
       0x1103ae000 -        0x1103affff +internal.so (???) <E55594E0-3792-3092-A74B-DA6EFEC3FB32> /usr/local/lib/lua/5.2/mjolnir/_asm/eventtap/internal.so
       0x1103b2000 -        0x1103b4ff7 +internal.so (???) <F15EE6E6-0341-3242-870E-93BE4F673681> /usr/local/lib/lua/5.2/mjolnir/_asm/eventtap/event/internal.so
    0x7fff6ec74000 -     0x7fff6ecaa837  dyld (353.2.1) <4696A982-1500-34EC-9777-1EF7A03E2659> /usr/lib/dyld
    0x7fff89f85000 -     0x7fff89f89ff7  libGIF.dylib (1231) <B3D2DF96-A67D-31EA-9A1B-E870B54855EE> /System/Library/Frameworks/ImageIO.framework/Versions/A/Resources/libGIF.dylib
```

``` lua
function setwindow(x, y, w, h)
  local win = window.focusedwindow()
  --local newframe = win:frame()
  local newframe = win:screen():frame()


  newframe.x = newframe.w * x
  newframe.y = newframe.h * y

  newframe.w = newframe.w * w
  newframe.h = newframe.h * h

  win:setframe(newframe)
end

function setwindow_maximize()   setwindow(0, 0, 1, 1) end
hotkey.bind(mash, "SPACE", setwindow_maximize)

```

Version: 0.4.3 

Expect outcome: Application's stays on the same monitor when it's frame is changed

Actual outcome: Application always moves to the main monitor
