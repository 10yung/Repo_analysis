```
lepton v1.0-1.2.1-183-g3d1bc19
terminate called after throwing an instance of 'std::system_error'
  what():  Resource temporarily unavailable
```

This is the entire output (stderr). I am using lepton as a subprocess with stdin and stdout piped to compress hundreds of thousands of jpgs. Stderr is piped to stderr. There is a crash approximately one in every 10000. It does not appear to be dependent on the file (rerunning the program works fine through the file that previously failed).

My main issue here is that lepton **exits with code 0** even though it **failed and wrote 0 bytes** to stdout. If lepton fails for any reason, shouldn't it exit with a nonzero code to indicate the error? If not, how can I discover this error, other than searching stderr for this string?
I don't know if it's a good idea to force `-march=native` in `configure.ac` without an option to disable it (or use i.e. `-mavx`). Appearently this might lead to binaries that could crash if you want to run them on a different machine, see https://github.com/marian-nmt/marian-dev/issues/278#issuecomment-413930881 .
Hello,

My organization is considering using Lepton. Ideally, we would like to eventually port the software over to an FPGA platform however that would require that ANS support as there is no way the VP8 encoder could reasonably fit.

I haven't seen much development happening with respect the ANS encoder that is presently hidden behind an experimental feature flag. Is this encoder fully supported yet? Will this encoder be supported going forward?

Thanks
[ src/lepton/vp8_decoder.cc:244 drain() ]
There is a memory leak in VP8ComponentDecoder_SendToVirtualThread::drain() in vp8_decoder.cc. If Line 243 takes true branch, function drain() will return without releasing "data". 
[ src/lepton/vp8_decoder.cc:278 read() ]
Similarly, in function VP8ComponentDecoder_SendToVirtualThread::read(), "data" is leaked if Line 277 takes true branch.
I'm so close to getting lepton to run in my browser with WASM, but this is the last thing I can't figure out. 
I was thinking that it must be create by merging pre.js, some custom code and post.js, but it's not clear what the contents should be. Could you point me in the right direction ?  Thanks !
I got 404 for it:
http://www.elektronik.htw-aalen.de/packjpg/_notes/PCS2007_PJPG_paper_final.pdf

We found with our fuzzer that lepton 3f6d98c may spend too much time on some crafted files ( as listed [in this directory](https://github.com/ntu-sec/pocs/tree/master/lepton-3f6d98c/hangs)). Given the fact that these file are quite small (<1k), we think this may result from some implementation pitfalls.

Command: `lepton $FILE /tmp/test.jpg`. When running `lepton -unjailed $FILE /tmp/test.jpg`, it exhibits several runtime errors.
Lost a few files today due to a typo, so decided to make sure Lepton can't be made complicit in such activities again. Files can be clobbered by adding `-clobber` to the options.

I noticed the presence of a `-o` for overwrite, but it doesn't appear to do anything. I added a new option in case that option is used elsewhere.

And don't weep for my files. They live on in my heart (and backups).
can we improve compression rate by compress the residulals of ac coefficients and its predicted values?
Hi,
I'm trying to experiment with lepton for my software portability class, however when I try to run lepton on one of my class servers I get these errors:

>src/io/seccomp-bpf.hh:61:3: warning: #warning "Platform does not support seccomp filter yet" [-Wcpp]
src/io/Seccomp.cc:58:4: error: #error "AUDIT_ARCH value unavailable"
 /#  error "AUDIT_ARCH value unavailable"
    ^~~~~

and

>src/lepton/jpgcoder.cc: In function ‘int app_main(int, char**)’:
src/lepton/jpgcoder.cc:855:13: error: ‘__builtin_cpu_supports’ was not declared in this scope
             __builtin_cpu_supports("avx2")
I'm compiling with the option you gave in [issue 71](https://github.com/dropbox/lepton/issues/71) .

Is there any advice you can give?

Thank you,
Sanjit