When making a pull request, the following error is generated by Travis CI and the build fails:
`❌  “Use Legacy Swift Language Version” (SWIFT_VERSION) is required to be configured correctly for targets which use Swift. Use the [Edit > Convert > To Current Swift Syntax…] menu to choose a Swift version or use the Build Settings editor to configure the build setting directly.`
With the `NSLayoutAnchor`, we can now use it to avoid the layout format language. Imagine, in your function that defines layout, we could pass the view and return an array of objects. Like this: 

```swift
let title = "title".build(UILabel.self).style([.numberOfLines(0), .text("test")])
let subtitle = "subtitle".build(UILabel.self).style([.numberOfLines(0), .text("subtitle")])

let brick = "details".build().bricks(title) { container, title in
    return [
        title.centerXAnchor.constraint(equalTo: container.centerXAnchor),
        title.centerYAnchor.constraint(equalTo: container.centerYAnchor),
    ]
}
```

However, this approach will require some refactoring. I can volunteer, if you want :)
Hi Wang,

Congrats on the great tool, nicely done !! I was wondering what's your plan for providing actions for components, like Button, swipe, tap, or anything? Blockable actions? 

- Handle better manual calculating height API
- Support both `UITableView` & `UICollectionView`
- Height cache mechanism

Be able to show/hide one of the component (and its relevant margin layout) with or without animation.

Some inspirations
https://github.com/forkingdog/UIView-FDCollapsibleConstraints




```
components.map { component1, component2 in
  // manipulate styles
 }.reduce {
  // reduce to single component with layout
}.compose { 
  // ... 
}.bind {}
```

