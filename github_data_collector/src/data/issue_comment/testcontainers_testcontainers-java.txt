Builds upon #2221 so that any `Iterable` is allowed as a `dependsOn` argument.
Suggested by @bsideup
Hi,
I found that when I use `.` or `..` as mountable-file with host path to regular path docker is unable to use this files during build (they actually are transferred to docker in TAR payload).
As you can see I have created PR to check if host path is file and name is "invalid" to throw exception. I found this glitch when I was assuming that `withFileFromFile(".", new File("path/to/file.txt"))` will safe file to "current" working directory `.` with name `file.txt` or in path `./path/to/file.txt`.
Please check PR if it makes sense.
Thx
Ivos
When starting a `MySQLContainer` and using `withInitScript`, the SQL statements in the script are not run faithfully, because testcontainers-java is using its own SQL parsing logic in order to extract individual SQL statements from the script.

In particular, the issue I am seeing is that the `#` character is not recognized as an inline comment character (see https://dev.mysql.com/doc/refman/5.6/en/comments.html ), therefore the first statement after an inline comment is combined with the comment. A single line string including the whole inline comment(s) plus the following statement (without any line breaks) is executed against the database. And, of course, is ignored as being a comment.

This is also problematic/confusing because from testcontainer's perspective, the statement executed successfully (there's no way for it to fail because from the database's perspective it's a comment)! Therefore, you might only notice this issue occurring if it causes a referential integrity error in a later statement, or if you have some other mechanism which allows you to notice the absence of the statement's effect on your database. Otherwise, it fails silently.

Ideas/alternatives:

- Remove ad-hoc SQL parsing logic from the code base entirely, and rely on mounting files to `/docker-entrypoint-initdb.d` for MySQL, for example. This library will no longer need to maintain its own SQL parsing logic which may yet be the source of more undiscovered bugs.
- Update ScriptUtils to support `#` for inline comments
- Add javadoc to `withInitScript` (right now it has none) and other relevant documentation and mention that `#` for comments is not supported.
- Depend on a well-maintained open source implementation of SQL parsing which works properly, if one exists.
Bumps [org.springframework.boot](https://github.com/spring-projects/spring-boot) from 2.2.2.RELEASE to 2.2.3.RELEASE.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/spring-projects/spring-boot/releases">org.springframework.boot's releases</a>.</em></p>
<blockquote>
<h2>v2.2.3.RELEASE</h2>
<h2>:star: New Features</h2>
<ul>
<li>Avoid 406 Not Acceptable for error pages <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19545">#19545</a></li>
<li>Ignore trailing slash by default when recording web metrics <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/18207">#18207</a></li>
</ul>
<h2>:beetle: Bug Fixes</h2>
<ul>
<li>Fat jars do not tolerate entries with an invalid modification date of 0 <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19713">#19713</a></li>
<li>Make equality checks defensive to null reference <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19685">#19685</a></li>
<li>PoolingDataSourceBean getParentLogger throws StackOverflowError <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19682">#19682</a></li>
<li>Failure analyser for a missing validation provider does not kick in when using the latest Jakarta Validation API <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19671">#19671</a></li>
<li>Rejected value is null when configuration property fails validation <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19580">#19580</a></li>
<li>Profile with comma in name does not work in tests <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19560">#19560</a></li>
<li>Spring Boot's antlib references a properties file that is no longer packaged in its jar <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19553">#19553</a></li>
<li>Incorrect target type with wildcard List <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19526">#19526</a></li>
<li>Since 2.2.2 Jetty error handler cannot be overridden <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19520">#19520</a></li>
<li>Use RBAC credentials for Couchbase cluster info <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19393">#19393</a></li>
<li>HypermediaAutoConfiguration hinges on Spring MVC <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19392">#19392</a></li>
<li>Micrometer's Dynatrace group property cannot be configured via application properties <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19369">#19369</a></li>
<li>MetricsWebFilter assigns UNKNOWN outcome to 200 OK responses <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19367">#19367</a></li>
<li>Disable Jackson SerializationFeature.WRITE_DURATIONS_AS_TIMESTAMPS by default <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19352">#19352</a></li>
<li>Unset forward header strategy in kubernetes environment eats X-Forwarded-* headers in Spring Boot 2.2 <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19333">#19333</a></li>
<li>Diagnostics are poor when using <code>@ConfigurationPropertiesScan</code> and <code>@ConstructorBinding</code> on a Kotlin data class without kotlin-reflect <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19312">#19312</a></li>
<li>NoSuchMethodError when deploying to Tomcat 8.5 before 8.5.44 and Tomcat 9 before 9.0.23 <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19308">#19308</a></li>
<li>Non-public property in Saml2RelyingPartyProperties' Registration class <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19194">#19194</a></li>
<li>Configuration properties that use the builder pattern are not recognized when used with a generic <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19099">#19099</a></li>
<li>Support commas embedded in command line arguments from Maven plugin <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/18711">#18711</a></li>
</ul>
<h2>:notebook_with_decorative_cover: Documentation</h2>
<ul>
<li>Remove duplicate note in Hazelcast section of reference guide <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19678">#19678</a></li>
<li>Fix links to external types in javadoc <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19591">#19591</a></li>
<li>Links to apply method in AutoTimer's javadoc are broken <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19572">#19572</a></li>
<li>Spring MVC auto-config doc update <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19521">#19521</a></li>
<li>Add reference to OptaPlanner starter <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19508">#19508</a></li>
<li>Outdated reference in ArtemisConfigurationCustomizer javadoc <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19503">#19503</a></li>
<li>Polish note about handling of caches that are created on-the-fly <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19498">#19498</a></li>
<li>Fix typo in BindHandler#onFinish javadoc <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19496">#19496</a></li>
<li>Adapt file rotation documentation to logging's maxHistory default change to 7 days <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19458">#19458</a></li>
<li>Clarify documentation of repackage mojo's attach property <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19453">#19453</a></li>
<li>Clarify non-public nature of Boot?s own <a href="https://github.com/ConfigurationProperties">@ConfigurationProperties</a> classes and multi-DataSource example <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19451">#19451</a></li>
<li>Clarify the behaviour of <a href="https://github.com/CacheConfig">@CacheConfig</a> with respect to on-the-fly cache creation and cache metrics <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19448">#19448</a></li>
<li>Add JMX note for Kafka consumer metrics <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19446">#19446</a></li>
<li>Fix typo on ConditionMessage <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19433">#19433</a></li>
<li>Improve &quot;Running Behind a Front-end Proxy Server&quot; documentation <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19403">#19403</a></li>
<li>Link consistently to Tomcat 9.0 docs <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19362">#19362</a></li>
<li>Fix link to Vaadin Spring Boot starter <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/issues/19360">#19360</a></li>
<li>Improve documentation coverage for Spring Batch <a href="https://github-redirect.dependabot.com/spring-projects/spring-boot/pull/19211">#19211</a></li>
</ul>
</tr></table> ... (truncated)
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/spring-projects/spring-boot/commit/d1d3677fd09d7c486cec9f11848a123ef0582b33"><code>d1d3677</code></a> Release v2.2.3.RELEASE</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/d6631a578b1aefa65930466f5e754b993329cff4"><code>d6631a5</code></a> Upgrade to Micrometer 1.3.2</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/052ef6666457c0c9e6751921ab2b0471cb7c5592"><code>052ef66</code></a> Merge branch '2.1.x' into 2.2.x</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/3f05deb311e72684467932b71d29b739325fb107"><code>3f05deb</code></a> Next development version (v2.1.13.BUILD-SNAPSHOT)</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/4c8626ea56be87932656a5a46b6cd6218521607f"><code>4c8626e</code></a> Allow Boot's Jetty error handler to be overridden</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/a162c8ac0b4ef366b1ebbdcd21979e85029a2449"><code>a162c8a</code></a> Revert &quot;Build against Micrometer 1.3.3 snapshots&quot;</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/b6ea9d212d69d3e94a70a3978bd5941a0a655496"><code>b6ea9d2</code></a> Merge branch '2.1.x' into 2.2.x</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/8f209ced6ddfe0a0d4ed09d470a58e0becc751f4"><code>8f209ce</code></a> Revert &quot;Start building against Micrometer 1.1.10 snapshots&quot;</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/b7e250eb048e06e29c0123be1a4cb6fc730515b6"><code>b7e250e</code></a> Merge branch '2.1.x' into 2.2.x</li>
<li><a href="https://github.com/spring-projects/spring-boot/commit/ebebe09a9d0f49deb8dac9cd2992d7c79f1b39ec"><code>ebebe09</code></a> Fix file handle leak in JarFileTests</li>
<li>Additional commits viewable in <a href="https://github.com/spring-projects/spring-boot/compare/v2.2.2.RELEASE...v2.2.3.RELEASE">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=org.springframework.boot&package-manager=gradle&previous-version=2.2.2.RELEASE&new-version=2.2.3.RELEASE)](https://dependabot.com/compatibility-score.html?dependency-name=org.springframework.boot&package-manager=gradle&previous-version=2.2.2.RELEASE&new-version=2.2.3.RELEASE)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
If all status checks pass Dependabot will automatically merge this pull request.

[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in the `.dependabot/config.yml` file in this repo:
- Update frequency
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
I want to set my custom value to OS_MAC_TMP_DIR variable. In my company, we changed path to jna from default "/tmp" to custom "/data/builds".
Hi guys,

In order to be able to analyse issues related to TC in our CI, we enable TRACE logging. And all our logs contain the following which I don't believe is an issue. Would it be possible to not display the stack trace when the `/root/.testcontainers.properties` file is not found. Just a message would be enough, no? You could log the root cause if you really need to (this is what we do in XWiki for warnings - we keep stack traces for errors, see https://dev.xwiki.org/xwiki/bin/view/Community/CodeStyle/JavaCodeStyle/#HLoggingBestPractices if you're interested ;)).

WDTY? does that make sense to you?

```
06:54:15.087 [main] TRACE o.t.u.TestcontainersConfiguration - Testcontainers config override was found on file:/root/.testcontainers.properties but the file was not found
java.io.FileNotFoundException: /root/.testcontainers.properties (No such file or directory)
	at java.io.FileInputStream.open0(Native Method)
	at java.io.FileInputStream.open(FileInputStream.java:195)
	at java.io.FileInputStream.<init>(FileInputStream.java:138)
	at java.io.FileInputStream.<init>(FileInputStream.java:93)
	at sun.net.www.protocol.file.FileURLConnection.connect(FileURLConnection.java:90)
	at sun.net.www.protocol.file.FileURLConnection.getInputStream(FileURLConnection.java:188)
	at java.net.URL.openStream(URL.java:1067)
	at org.testcontainers.utility.TestcontainersConfiguration.readProperties(TestcontainersConfiguration.java:169)
	at org.testcontainers.utility.TestcontainersConfiguration.loadConfiguration(TestcontainersConfiguration.java:150)
	at org.testcontainers.utility.TestcontainersConfiguration.getInstance(TestcontainersConfiguration.java:28)
	at org.testcontainers.containers.PortForwardingContainer.createSSHSession(PortForwardingContainer.java:32)
	at org.testcontainers.containers.PortForwardingContainer.getSshConnection(PortForwardingContainer.java:26)
	at org.testcontainers.containers.PortForwardingContainer.exposeHostPort(PortForwardingContainer.java:67)
	at org.testcontainers.containers.PortForwardingContainer.exposeHostPort(PortForwardingContainer.java:61)
	at org.testcontainers.Testcontainers.exposeHostPorts(Testcontainers.java:15)
	at org.xwiki.test.docker.internal.junit5.XWikiDockerExtension.beforeAll(XWikiDockerExtension.java:123)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.lambda$invokeBeforeAllCallbacks$7(ClassBasedTestDescriptor.java:355)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.invokeBeforeAllCallbacks(ClassBasedTestDescriptor.java:355)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:189)
	at org.junit.jupiter.engine.descriptor.ClassBasedTestDescriptor.before(ClassBasedTestDescriptor.java:77)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:132)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at java.util.ArrayList.forEach(ArrayList.java:1257)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.invokeAll(SameThreadHierarchicalTestExecutorService.java:38)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$5(NodeTestTask.java:139)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$7(NodeTestTask.java:125)
	at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:135)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:123)
	at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:122)
	at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:80)
	at org.junit.platform.engine.support.hierarchical.SameThreadHierarchicalTestExecutorService.submit(SameThreadHierarchicalTestExecutorService.java:32)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestExecutor.execute(HierarchicalTestExecutor.java:57)
	at org.junit.platform.engine.support.hierarchical.HierarchicalTestEngine.execute(HierarchicalTestEngine.java:51)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:229)
	at org.junit.platform.launcher.core.DefaultLauncher.lambda$execute$6(DefaultLauncher.java:197)
	at org.junit.platform.launcher.core.DefaultLauncher.withInterceptedStreams(DefaultLauncher.java:211)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:191)
	at org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:128)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invokeAllTests(JUnitPlatformProvider.java:150)
	at org.apache.maven.surefire.junitplatform.JUnitPlatformProvider.invoke(JUnitPlatformProvider.java:124)
	at org.apache.maven.surefire.booter.ForkedBooter.invokeProviderInSameClassLoader(ForkedBooter.java:384)
	at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:345)
	at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:126)
	at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:418)
```

Thanks a lot!
-Vincent
https://github.com/testcontainers/testcontainers-java/issues/2249
…list of them is provided via withServices(...).
Consider code:
```
Startables.deepStart(asList(slowContainer, anotherSlowContainer, containerQuicklyFailingToStart)).get();
```

the call should fail fast.

currently (in v 1.12.4) it hangs:

```
2020-01-14T11:02:57.501+0100	INFO	testcontainers-lifecycle-2	🐳 [my_image]	Creating container for image: my_image
2020-01-14T11:02:57.501+0100	INFO	testcontainers-lifecycle-1	🐳 [my_image]	Creating container for image: my_image
2020-01-14T11:02:57.501+0100	INFO	testcontainers-lifecycle-0	🐳 [my_image]	Creating container for image: my_image
2020-01-14T11:02:58.379+0100	INFO	testcontainers-lifecycle-0	🐳 [my_image]	Starting container with ID: 153b43060fba728912683e389f98516fefb10ec3df1bbba8e52d4be8827764aa
2020-01-14T11:02:58.380+0100	INFO	testcontainers-lifecycle-1	🐳 [my_image]	Starting container with ID: 7de43b8c95356a1f5ec9531c94cd80348740ecdaf7e4b48913bd9a453e430867
2020-01-14T11:02:58.387+0100	INFO	testcontainers-lifecycle-2	🐳 [my_image]	Starting container with ID: f7c1b31465749aad2777dc9c05f458ee5762b8e72c2bd3ce9d3d3fec1304f417
....
2020-01-14T11:02:59.968+0100	ERROR	testcontainers-lifecycle-1	🐳 [my_image]	Could not start container
java.lang.IllegalStateException: Container did not start correctly.
	at org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:423)
	at org.testcontainers.containers.GenericContainer.lambda$doStart$0(GenericContainer.java:317)
	at org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:81)
	at org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:315)
	at org.testcontainers.containers.GenericContainer.start(GenericContainer.java:302)
	at java.util.concurrent.CompletableFuture.uniRun(CompletableFuture.java:705)
	at java.util.concurrent.CompletableFuture$UniRun.tryFire(CompletableFuture.java:687)
	at java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:442)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)


2020-01-14T11:03:00.002+0100	ERROR	testcontainers-lifecycle-1	🐳 [my_image]	Log output from the failed container:
+ false
....
(startup continues)
```

Note: I'm using https://github.com/testcontainers/testcontainers-java/issues/2227#issuecomment-574093675
as a workaround for https://github.com/testcontainers/testcontainers-java/issues/2225).
Apparently, with builtin wait strategy the stacktrace might not get printed.


When using regular containers, the image name is usually sufficient for identifying which container given log line is about.
However, when using 2+ `GenericContainer` instances with same image, it's no longer so:

```
2020-01-13T13:32:45.298+0100	INFO	testcontainers-lifecycle-2	🐳 [centos:7]	Creating container for image: centos:7
2020-01-13T13:32:45.297+0100	INFO	testcontainers-lifecycle-1	🐳 [centos:7]	Creating container for image: centos:7
2020-01-13T13:32:45.297+0100	INFO	testcontainers-lifecycle-0	🐳 [centos:7]	Creating container for image: centos:7
...
2020-01-13T13:37:46.946+0100	ERROR	testcontainers-lifecycle-1	🐳 [centos:7]	Could not start container
java.lang.IllegalStateException: Container exited with code 1
	at org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:457)
	at org.testcontainers.containers.GenericContainer.lambda$doStart$0(GenericContainer.java:317)
	at org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:81)
	at org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:315)
	at org.testcontainers.containers.GenericContainer.start(GenericContainer.java:302)
	at java.util.concurrent.CompletableFuture.uniRun(CompletableFuture.java:705)
	at java.util.concurrent.CompletableFuture$UniRun.tryFire(CompletableFuture.java:687)
	at java.util.concurrent.CompletableFuture$Completion.run(CompletableFuture.java:442)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
```

Neither the log line, nor the exception provide information which container failed.

