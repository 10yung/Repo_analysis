I'm currently using my own middleware to determine the locale (based on the domain name).

I'm then calling `LaravelLocalization::setLocale($my_locale)` to set it, but if `$my_locale` is not the default one (set in `app/config.php`), then all URLs have `$my_locale` as the first segment.

Is there a way to avoid that? I tried setting the config entry `app.locale` but it seems that LaravelLocalization comes before that and "caches" the default locale before I can update it.

I tried searching around but could not find anything. 
Hello,
And thanks a lot for your really great work.

Please, could the method LaravelLocalization::useAcceptLanguageHeader() be public, to permit LaravelLocalization's configuration access from other classes ?

Cheers, Cyrille.
**Describe the bug**
Route model binding is not working, why?

**To Reproduce**
In web.php:

`Route::get('/page/{page}', function (App\Page $page) {
   return $page;
});`

return is not exists model. When I remove middleware `localize` all working. How I can fix it?

My model Page:

     use Spatie\Translatable\HasTranslations;

     class Page extends Model
    {
          use HasTranslations;

          protected $guarded = [];
          protected $translatable = ['title', 'description', 'keywords', 'body'];

          public function getRouteKeyName()
          {
               return 'slug';
          }

          public function path()
          {
               return "/" . app()->getLocale() . "/page/{$this->slug}";
          }
      }

**Describe the bug**
A clear and concise description of what the bug is.

**To Reproduce**
Steps to reproduce the behavior:
1. Write test by this documentation https://github.com/mcamara/laravel-localization#testing
2. call refreshApplicationWithLocale method with default locale prefix
3. call route('some_route_name')
4. See generated URL with default locale prefix, which must be hidden.

**Expected behavior**
See generated URL without default prefix.

**More info:**
- Version of Laravel 5.8.35
- Version of the Laravel-localization package 1.4.7
- Which middleware is used in `Route::groups` web
- Copy of the config file ( or at least setting of `supportedLocales`, `useAcceptLanguageHeader` and `hideDefaultLocaleInURL`). 
 'hideDefaultLocaleInURL' => true,
'useAcceptLanguageHeader' => true,

- Minimal steps to reproduce on a clean Laravel installation.

**Additional context**
Add any other context about the problem here.

Hello,

I have troubles with sharing localized link for example to Facebook.
When I am debugging link with FB Share debugger it throws that I have too many redirects.

Route which I am debugging is in following route group:
`Route::group(['prefix' => LaravelLocalization::setLocale(), 'middleware' => [ 'localeSessionRedirect', 'localizationRedirect', 'localeViewPath' ]], function()
{
Route::get('/projects-reference/{id}/{slug}', 'Frontend\ReferencesController@showReference')->name('references.show');
}`

I have correctly defined OG:URL to subpage url.

Here is the FB debugger screen:
[https://imgur.com/25BQRAh](https://imgur.com/25BQRAh)

Thanks.


Hello, I have mapped my locales like that:

 'localesMapping' => ['es' => 'es_ES', 'en-US' => 'en_US'],

So an example of my routes would be:

http://localhost/laravel/public/es_ES/aventura
http://localhost/laravel/public/en_US/adventure

this works fine except when I try to switch languages and get the route translated at the same time example:

```
@foreach(LaravelLocalization::getSupportedLocales() as $localeCode => $properties)
  @if(app()->getLocale() != $localeCode)
    <a rel="alternate" hreflang="{{ $localeCode }}" class="dropdown-item" href="{{LaravelLocalization::getURLFromRouteNameTranslated($localeCode, 'routes.'.Route::currentRouteName(), []) }}">$properties['regional']</a>
    @endif
@endforeach
```

I'm using the getURLFromRouteNameTranslated method instead of getLocalizedURL so I can have my urls translated, problem is it generates the routes without the localesMapping, something like that:

http://localhost/laravel/public/es/aventura
http://localhost/laravel/public/en-US/adventure

Any way to get my localesMapping instead of the real locales?
Changed where the event `routes.translation` is firing in order to fix the issue of attributes not being translated even though the event was firing.

```
public function getURLFromRouteNameTranslated($locale, $transKeyName, $attributes = [], $forceDefaultLocation = false)
    {
        if (!$this->checkLocaleInSupportedLocales($locale)) {
            throw new UnsupportedLocaleException('Locale \''.$locale.'\' is not in the list of supported locales.');
        }

        if (!\is_string($locale)) {
            $locale = $this->getDefaultLocale();
        }

        $response = event('routes.translation', [$locale, $attributes]);

        if (!empty($response)) {
            $response = array_shift($response);
        }

        if (\is_array($response)) {
            $attributes = array_merge($attributes, $response);
        }

        $route = '';

        if ($forceDefaultLocation || !($locale === $this->defaultLocale && $this->hideDefaultLocaleInURL())) {
            $route = '/'.$locale;
        }
        if (\is_string($locale) && $this->translator->has($transKeyName, $locale)) {
            $translation = $this->translator->trans($transKeyName, [], $locale);
            $route .= '/'.$translation;

            $route = $this->substituteAttributesInRoute($attributes, $route);
        }

        if (empty($route)) {
            // This locale does not have any key for this route name
            return false;
        }

        return rtrim($this->createUrlFromUri($route), '/');
    }
```
First of all, thank you for the package.

I have a problem using your package with Laravel Nova. I am only using your package with my frontend routes. However, my laravel nova backend is being affected.

Instead of showing my ES translations, is showing EN translations.

I tried adding:

'urlsIgnored' => ['/nova/*']

But it didn't work.

The only thing that actually worked was setting useAcceptLanguageHeader to false.