This is a question, I don't see option to add label: 

Is it possible to have a 'try it now' button in an aglio html doc, that will run a test against a live server, as one finds in swagger default templates?

I find that functionality to be very helpful to potential customers.

install agio with node 11 always failed, due to 
aglio depends on 
 "drafter": "^1.0.0",
while drafter 1.0.0 depends on 
"protagonist": "^1.6.0" 

protagonist 1.6.0 compiles failed with node 11, while protagonist 2.0.0 compiles well with node 11.

please update drafter version to 2.0.0 to solve this problem.

thanks ahead.


  Critical        Sandbox Bypass Leading to Arbitrary Code Execution            
  Package         constantinople                                                
  Patched in      >=3.1.1                                                       
  Dependency of   aglio [dev]                                                   
  Path            aglio > aglio-theme-olio > jade > constantinople              
  More info       https://nodesecurity.io/advisories/568  

  Moderate        Prototype Pollution                                           
  Package         hoek                                                          
  Patched in      > 4.2.0 < 5.0.0 || >= 5.0.3                                   
  Dependency of   aglio [dev]                                                   
  Path            aglio > aglio-theme-olio > less > request > hawk > sntp > hoek                                                          
  More info       https://nodesecurity.io/advisories/566   

  Moderate        Prototype Pollution                                           
  Package         hoek                                                          
  Patched in      > 4.2.0 < 5.0.0 || >= 5.0.3                                   
  Dependency of   aglio [dev]                                                   
  Path            aglio > aglio-theme-olio > less > request > hawk > hoek       
  More info       https://nodesecurity.io/advisories/566  

  Moderate        Prototype Pollution                                           
  Package         hoek                                                          
  Patched in      > 4.2.0 < 5.0.0 || >= 5.0.3                                   
  Dependency of   aglio [dev]                                                   
  Path            aglio > aglio-theme-olio > less > request > hawk > cryptiles > boom > hoek                                                 
  More info       https://nodesecurity.io/advisories/566     

etc.
using node v11.9.0, I get a Type error:

```
TypeError: unrecognized option 'type', expected: 'requireBlueprintName', 'generateSourceMap'
    at Object.exports.render (/site/node_modules/aglio/lib/main.js:99:20)
    at render (/site/node_modules/aglio/lib/main.js:147:22)
    at /site/node_modules/aglio/lib/main.js:171:16
    at FSReqCallback.readFileAfterClose [as oncomplete] (internal/fs/read_file_context.js:54:3)
```

node v10.15.3 works fine.
I don't know if this is a request, a question, or a bug. ðŸ˜„ 

I'm trying to do two things:

1) Instead of using the built-in highlight on Req/Resp bodies, I want to iterate over the _lines_, and literally wrap them in `p` or `span` elements. (Needed to output to a content system that can't handle pre-formatted code/text, so I need to style with inline css...long story.) If I can get the key/values that's even better so I can format them differently, but I'll take what I can get. ðŸ˜„ 

I can't quite figure out the format of the object delivered in `request.body`. 

I tried `each thing in request.body` followed by `p= request.body.thing` and `request.body[thing]` and clearly I'm not accessing the object properly. This is either probably something very simple, or very impossible. I'm not above rewriting or patching something if needed. 

2) This is even more basic. I have a folder, with just:
```
example.apib
index.jade
mixins.jade
```
copied from the theme branch. But no matter what I try, it often seems to try to ignore my updated  `mixins.jade`, presumably pulling from the node install dir. 
The command line I use is:

 `aglio -i example.apib --theme-template ./index.jade -o foo.jade`

And I've tried various methods of `include`, like `./mixins.jade`, `mixins.jade`, and tried an absolute path but that requires setting a Jade `basedir` option that I don't know how to do if you're not using the JS API directly.

Thank you in advance on both issues/questions; this will REALLY help me solve a big project. 

Trying to read large blueprints from stdin fails, giving a syntax error which suggests the content was truncated. Reading the same file in via `-i <filename>` method works fine, so there is no issue with the file itself.

The length of the content I got was always 65536 bytes, suggesting some issue around buffering.

After experimenting it turns out that what actually happens is the `process.stdin.on 'readable'` event handler gets called multiple times for large files - for each block of data from the buffer.

So the fix is to build up the blueprint content over a series of `readable` events and wait until the `end` event is triggered before trying to process it.
Aglio will not install and outputs the following errors, any help would be much appreciated. I was able to build protagonist from source fine, cloning the repo and running `npm install`

```zsh
/Users/danielmorozoff/.node-gyp/10.14.2/include/node/v8.h:2455:10: note: 'ToObject' has been explicitly marked deprecated here
  inline V8_DEPRECATED("Use maybe version", Local<Object> ToObject() const);
         ^
/Users/danielmorozoff/.node-gyp/10.14.2/include/node/v8config.h:327:29: note: expanded from macro 'V8_DEPRECATED'
  declarator __attribute__((deprecated))
                            ^
../src/parse_async.cc:128:14: error: no matching constructor for initialization of 'v8::TryCatch'
    TryCatch try_catch;
             ^
/Users/danielmorozoff/.node-gyp/10.14.2/include/node/v8.h:8536:12: note: candidate constructor not viable: requires single argument 'isolate', but no arguments were provided
  explicit TryCatch(Isolate* isolate);
           ^
/Users/danielmorozoff/.node-gyp/10.14.2/include/node/v8.h:8656:3: note: candidate constructor not viable: requires 1 argument, but 0 were provided
  TryCatch(const TryCatch&) = delete;
  ^
2 warnings and 1 error generated.
make: *** [Release/obj.target/protagonist/src/parse_async.o] Error 1
gyp ERR! build error
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:262:23)
gyp ERR! stack     at ChildProcess.emit (events.js:182:13)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:240:12)
gyp ERR! System Darwin 18.2.0
gyp ERR! command "/usr/local/bin/node" "/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js" "rebuild"
gyp ERR! cwd /Users/danielmorozoff/Desktop/paw-aglio-generator/node_modules/aglio/node_modules/protagonist
gyp ERR! node -v v10.14.2
gyp ERR! node-gyp -v v3.8.0
gyp ERR! not ok

> protagonist@2.0.0-pre.3 install /Users/danielmorozoff/Desktop/paw-aglio-generator/node_modules/protagonist
> node-gyp rebuild

  CXX(target) Release/obj.target/libdrafter/drafter/src/drafter.o
In file included from ../drafter/src/drafter.cc:10:
In file included from ../drafter/ext/snowcrash/src/snowcrash.h:12:
In file included from ../drafter/ext/snowcrash/src/BlueprintSourcemap.h:12:
In file included from ../drafter/ext/snowcrash/src/Blueprint.h:17:
In file included from ../drafter/ext/snowcrash/src/MSON.h:19:
../drafter/ext/snowcrash/ext/markdown-parser/src/MarkdownParser.h:14:10: fatal error: 'markdown.h' file not found
#include "markdown.h"
         ^~~~~~~~~~~~
1 error generated.
make: *** [Release/obj.target/libdrafter/drafter/src/drafter.o] Error 1
gyp ERR! build error
gyp ERR! stack Error: `make` failed with exit code: 2
gyp ERR! stack     at ChildProcess.onExit (/usr/local/lib/node_modules/npm/node_modules/node-gyp/lib/build.js:262:23)
gyp ERR! stack     at ChildProcess.emit (events.js:182:13)
gyp ERR! stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:240:12)
gyp ERR! System Darwin 18.2.0
gyp ERR! command "/usr/local/bin/node" "/usr/local/lib/node_modules/npm/node_modules/node-gyp/bin/node-gyp.js" "rebuild"
gyp ERR! cwd /Users/danielmorozoff/Desktop/paw-aglio-generator/node_modules/protagonist
gyp ERR! node -v v10.14.2
gyp ERR! node-gyp -v v3.8.0
gyp ERR! not ok
npm WARN aglio-generator@0.0.1 No repository field.
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: protagonist@1.6.8 (node_modules/aglio/node_modules/protagonist):
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: protagonist@1.6.8 install: `node-gyp rebuild`
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: Exit status 1
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: protagonist@2.0.0-pre.3 (node_modules/protagonist):
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: protagonist@2.0.0-pre.3 install: `node-gyp rebuild`
npm WARN optional SKIPPING OPTIONAL DEPENDENCY: Exit status 1

+ aglio@2.3.0
updated 1 package and audited 1919 packages in 87.911s
found 17 vulnerabilities (10 low, 4 moderate, 3 high)
  run `npm audit fix` to fix them, or `npm audit` for details
```

API Blueprint allows `Resource` sections to be anonymous, as described in the [specification](https://github.com/apiaryio/api-blueprint/blob/master/API%20Blueprint%20Specification.md#definition-6).

```md
#### Definition
Defined by an [URI template][uritemplate]:

    # <URI template>
```

### Current behavior

With this configuration, Aglio renders the left nav with the default label "Resource".

```apib
# Group QA

## /v1/tests

### Get tests [GET]
Get all tests

### Add test [POST]
Add a test
```
currently renders as:

| **QA** |
| :--- |
| Resource |
| &nbsp;&nbsp;&nbsp; Get tests |
| &nbsp;&nbsp;&nbsp; Add test |

### Proposed change

With "condensed nav" enabled, Aglio could detect anonymous resources and move the `Action` labels to the primary position.

| **QA** |
| :--- |
| Get tests |
| Add test |


Without condensed nav, the current behavior would remain as-is.
If the config specifies a body, do not generate one for that item
Hello there,

I have noticed that this project has quite a lot of traction but it seems there is not a lot of activity. The last commit in Master is from May 2017.

So my question is: does anyone have more insight if this is under active development and if not: Is there an alternative out there?