I'm trying to set useOriginalURLEncoding=false in my web.config under configuration/system.webServer/rewrite/rules but get the following error:

Module | RewriteModule
Notification | SendResponse
Handler | StaticFile
Error Code | 0x8007000d
Config Error | Unrecognized attribute 'useOriginalURLEncoding'
Config File | \\?\D:\home\site\wwwroot\web.config

How can I enable this? Here's the blog/article for more info: https://blogs.iis.net/iisteam/url-rewrite-v2-1
### Repro steps.
> your project built successfully on your dev machine but failed on Azure? Yes
> It is a django project in python, and Kudu engine is used to deploy from external source.
   
### Project structures.
> I have a python django project on Gitlab and followed exact steps to setup external repository with deploy token taken from kudu server. 

### The log/error given by the failure.
> Normally this include a stack trace, error code and some more information.
While syncing or deploying the app, it fails while fetching from remote repo. 
Getting remote: HTTP Basic: Access denied\nfatal: Authentication failed for repository with deploy token


### Debug your Azure website remotely.
> After logging into kudu server, I confirmed that public key matches the deploy key added on external repository. 
I also tried to run 'git fetch' and faced the same error. I tried to change config but it needs superuser. 

Please help to fix the authentication issue! 
It seems for me my app service goes into some dead state after the initial deployment. After it the app cannot be restarted and will not generate any logging output. 

In the below attached logs it can be seen that the last log entry is from 
`2020-01-06T16:34:07.785820230Z` but I have smashed the restart button multiple times since then and also created multiple deployments. 

Note: I know the app fails because nothing is listening on the port 8080. However it should try every time when I restart the app service plan. 

### Repro steps.

- deploy an NodeJS based app
- try to restart the app service via the portal Restart or Stop/Restart buttons
- observe that there is no additional log is generated in
  - /api/vfs/LogFiles/2020_01_06_RD501AC568477E_default_docker.log (attached)
  - /api/vfs/LogFiles/2020_01_06_RD501AC568477E_docker.log (attached)
- make a new deployment (zip or git)
- observe that the deployment succeeds
- observe that there is still no additional logs

I would expect at least the docker log is updated with attempted restarts. 

### Project structures.

Minimal demo case: [build.zip](https://github.com/projectkudu/kudu/files/4027325/build.zip)


### The log/error given by the failure.

There are no errors beside the application level errors. The docker and application level logs:
  - [2020_01_06_RD501AC568477E_docker.log.txt](https://github.com/projectkudu/kudu/files/4027326/2020_01_06_RD501AC568477E_docker.log.txt)
  - [2020_01_06_RD501AC568477E_default_docker.log.txt](https://github.com/projectkudu/kudu/files/4027327/2020_01_06_RD501AC568477E_default_docker.log.txt)

Response from /api/deployments

```json
[
{
"id": "925874959ff34f5ea1a3d96ad4ae9de1",
"status": 4,
"status_text": "",
"author_email": "N/A",
"author": "N/A",
"deployer": "Push-Deployer",
"message": "Created via a push deployment",
"progress": "",
"received_time": "2020-01-06T17:48:26.7418959Z",
"start_time": "2020-01-06T17:48:26.8530566Z",
"end_time": "2020-01-06T17:48:27.8402908Z",
"last_success_end_time": "2020-01-06T17:48:27.8402908Z",
"complete": true,
"active": true,
"is_temp": false,
"is_readonly": true,
"url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/925874959ff34f5ea1a3d96ad4ae9de1",
"log_url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/925874959ff34f5ea1a3d96ad4ae9de1/log",
"site_name": "ap-scheduler-test"
},
{
"id": "a7f79e7cef334efaa0f528af8e1f258a",
"status": 4,
"status_text": "",
"author_email": "N/A",
"author": "N/A",
"deployer": "Push-Deployer",
"message": "Created via a push deployment",
"progress": "",
"received_time": "2020-01-06T17:36:50.9406306Z",
"start_time": "2020-01-06T17:36:51.0839857Z",
"end_time": "2020-01-06T17:36:52.3178566Z",
"last_success_end_time": "2020-01-06T17:36:52.3178566Z",
"complete": true,
"active": false,
"is_temp": false,
"is_readonly": true,
"url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/a7f79e7cef334efaa0f528af8e1f258a",
"log_url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/a7f79e7cef334efaa0f528af8e1f258a/log",
"site_name": "ap-scheduler-test"
},
{
"id": "cd3137a5b3ab020a57590d7711231cda618b5474",
"status": 4,
"status_text": "",
"author_email": "NoNameProvided@users.noreply.github.com",
"author": "Attila Olah",
"deployer": "$ap-scheduler-test",
"message": "release: testing release",
"progress": "",
"received_time": "2020-01-06T17:26:36.9965979Z",
"start_time": "2020-01-06T17:26:37.5002727Z",
"end_time": "2020-01-06T17:26:48.7958949Z",
"last_success_end_time": "2020-01-06T17:26:48.7958949Z",
"complete": true,
"active": false,
"is_temp": false,
"is_readonly": false,
"url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/cd3137a5b3ab020a57590d7711231cda618b5474",
"log_url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/cd3137a5b3ab020a57590d7711231cda618b5474/log",
"site_name": "ap-scheduler-test"
},
{
"id": "fe504b60c4355dee63a3cc3e98061b01f2be5e69",
"status": 4,
"status_text": "",
"author_email": "NoNameProvided@users.noreply.github.com",
"author": "Attila Olah",
"deployer": "$ap-scheduler-test",
"message": "chore: trigger deploy",
"progress": "",
"received_time": "2020-01-06T16:53:35.5545991Z",
"start_time": "2020-01-06T16:53:36.1086516Z",
"end_time": "2020-01-06T16:54:11.0857579Z",
"last_success_end_time": "2020-01-06T16:54:11.0857579Z",
"complete": true,
"active": false,
"is_temp": false,
"is_readonly": false,
"url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/fe504b60c4355dee63a3cc3e98061b01f2be5e69",
"log_url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/fe504b60c4355dee63a3cc3e98061b01f2be5e69/log",
"site_name": "ap-scheduler-test"
},
{
"id": "ec4f4653af5c7bd37ed431b1a73efda08a48ece4",
"status": 4,
"status_text": "",
"author_email": "NoNameProvided@users.noreply.github.com",
"author": "Attila Olah",
"deployer": "$ap-scheduler-test",
"message": "release: test release",
"progress": "",
"received_time": "2020-01-06T16:32:56.9023956Z",
"start_time": "2020-01-06T16:32:57.5184647Z",
"end_time": "2020-01-06T16:33:33.8531562Z",
"last_success_end_time": "2020-01-06T16:33:33.8531562Z",
"complete": true,
"active": false,
"is_temp": false,
"is_readonly": false,
"url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/ec4f4653af5c7bd37ed431b1a73efda08a48ece4",
"log_url": "https://ap-scheduler-test.scm.azurewebsites.net/api/deployments/ec4f4653af5c7bd37ed431b1a73efda08a48ece4/log",
"site_name": "ap-scheduler-test"
}
]
```

### Debug your Azure website remotely.
> it is recommanded that you share your Web App name, directly or [indirectly](https://github.com/projectkudu/kudu/wiki/Reporting-your-site-name-without-posting-it-publicly)
> we can take a look at what's going on.

```
https://ap-scheduler-test.azurewebsites.net
```
During the deployment, the webjob host in US East datacenter does not even change the status of webjob to "Stopping" and ceases all the activity - not even swap wakes it up and the only thing that helped was manually starting the webjob via portal. In EU West datacenter it appears to be fine, while the configuration, code & deployment steps are completely the same.

### Repro steps.
- Built via Microsoft (R) Build Engine version 15.9.21+g9802d43bc3 for .NET Framework
- Deployed to staging slot via `az webapp deployment source config-zip -g "..." -n "..." -s "staging" --src "..."` (in sample logs seen at 10:03 AM)
- After deployment swapped via `az webapp deployment slot swap -g "..." -n "..." -s "staging"` (in sample logs seen at 10:25 AM)
- Manually starting the webjob, because our alerting detected it was not running (in sample logs seen at 10:46 AM)


### Project structures.
- App service with "always on", .net 4.7, 64bit
- Continuous webjob processing messages from event hub (2 copies in 2 separate web apps in each datacenter, both in US are acting the same). Nothing else runs on that app service. 
- Deployed to staging slot, after potential manual testing swapped to production slot

### The log/error given by the failure.
Logs from US East datacenter (the broken ones - stopping at deployment time logs only the first line & any information from the swap time is completelly missing):
> ...
> [12/31/2019 10:03:04 > 73d9a5: SYS INFO] Detected WebJob file/s were updated, refreshing WebJob
> [12/31/2019 10:46:04 > 73d9a5: SYS INFO] Detected WebJob file/s were updated, refreshing WebJob
> [12/31/2019 10:46:04 > 73d9a5: SYS INFO] Status changed to Starting
> [12/31/2019 10:46:04 > 73d9a5: SYS INFO] WebJob singleton setting is False
> [12/31/2019 10:46:18 > 73d9a5: SYS INFO] Run script '<My_webjob>.exe' with script host - 'WindowsScriptHost'
> [12/31/2019 10:46:18 > 73d9a5: SYS INFO] Status changed to Running
> ...

Logs from EU West datacenter (the expected ones - no information about manually starting the webjob, because it wasn't necessary and therefor wasn't done):
> ...
> [12/31/2019 10:03:06 > fe93d7: SYS INFO] Detected WebJob file/s were updated, refreshing WebJob
> [12/31/2019 10:03:06 > fe93d7: SYS INFO] Status changed to Stopping
> [12/31/2019 10:03:06 > fe93d7: INFO] Job host stopped
> [12/31/2019 10:03:11 > fe93d7: ERR ] Thread was being aborted.
> [12/31/2019 10:03:11 > fe93d7: SYS INFO] WebJob process was aborted
> [12/31/2019 10:03:11 > fe93d7: SYS INFO] Status changed to Stopped
> [12/31/2019 10:03:11 > fe93d7: SYS INFO] Status changed to Starting
> [12/31/2019 10:03:11 > fe93d7: SYS INFO] Job directory change detected: Job file 'AngleSharp.dll' timestamp differs between source and working directories.
> [12/31/2019 10:03:14 > fe93d7: SYS INFO] Run script '<My_webjob>.exe' with script host - 'WindowsScriptHost'
> [12/31/2019 10:03:14 > fe93d7: SYS INFO] Status changed to Running
> [12/31/2019 10:03:24 > fe93d7: INFO] No job functions found. Try making your job classes and methods public. If you're using binding extensions (e.g. ServiceBus, Timers, etc.) make sure you've called the registration method for the extension(s) in your startup code (e.g. config.UseServiceBus(), config.UseTimers(), etc.).
> [12/31/2019 10:03:24 > fe93d7: INFO] Job host started
> [12/31/2019 10:25:17 > fe93d7: SYS INFO] WebJob is stopping due to website shutting down
> [12/31/2019 10:25:17 > fe93d7: SYS INFO] Status changed to Stopping
> [12/31/2019 10:25:17 > fe93d7: INFO] Job host stopped
> ... (running correctly without need to start manually)

I have tried to investigate the logs in "trace" folder in kudu, but I didn't find anything suspicious, or any difference between EU & US.

### Debug your Azure website remotely.
If you need subscription ID & web app name, please contact me via my primary public email of my account.

### Mention any other details that might be useful.
- It looks like it was still OK at 26.12.2019, but I will check that information with the rest of our team (I wasn't running the deployment).
- The "special" settings in app service we use:
WEBJOBS_IDLE_TIMEOUT -> 3600 (on both staging and production slots)
WEBJOBS_DISABLE_SCHEDULE -> 0 (only on staging)
WEBJOBS_STOPPED -> 0 (only on staging)
I'm opening this issue because Kudu fails to select the NPM version when using zipdeploy.

This was working fine but today it stopped working with no changes in the code or any configuration.
I've tried with a new (clean) Web App and simple project (1 file, 0 dependencies) and the problem persists.

I've also tried with other Node versions (set in WebApp Application Settings), results are the same.

### Repro steps.
1. create a new Web App (select NodeJS runtime in 10.1 version)
1. zip source files
1. post to web app using zipdeploy (...azurewebsites.net/api/zipdeploy)
1. zipdeploy script fails

### Project structures.
_files_
```
index.js (simple http server from https://blog.risingstack.com/your-first-node-js-http-server/)
package.json (no dependencies)
package-lock.json
```

### The log/error given by the failure.
```
2019-12-18T15:42:04  Fetching changes.
2019-12-18T15:42:04    Cleaning up temp folders from previous zip deployments and extracting pushed zip file /tmp/zipdeploy/d027c7b6-fc27-4af6-b5b3-879a26f49852.zip (45.90 MB) to /tmp/zipdeploy/extracted
2019-12-18T15:42:08  Updating submodules.
2019-12-18T15:42:08  Preparing deployment for commit id '0663cdb236'.
2019-12-18T15:42:08  Generating deployment script.
2019-12-18T15:42:08    Using the following command to generate deployment script: 'azure site deploymentscript -y --no-dot-deployment -r "/tmp/zipdeploy/extracted" -o "/home/site/deployments/tools" --node'.
2019-12-18T15:42:11    Generating deployment script for node.js Web Site
2019-12-18T15:42:11    Generated deployment script files
2019-12-18T15:42:12  Running deployment command...
2019-12-18T15:42:12    Command: "/home/site/deployments/tools/deploy.sh"
2019-12-18T15:42:12    Handling node.js deployment.
2019-12-18T15:42:12    Kudu sync from: '/tmp/zipdeploy/extracted' to: '/home/site/wwwroot'
2019-12-18T15:42:12    Copying file: 'npm-shrinkwrap.json'
2019-12-18T15:42:13    Detecting node version spec...
2019-12-18T15:42:14    Using appsetting WEBSITE_NODE_DEFAULT_VERSION value: 10.1
2019-12-18T15:42:14    ENOENT: no such file or directory, open '/opt/nodejs/10.1.0/npm.txt'
2019-12-18T15:42:14    Node.js versions available on the platform are: 4.4.7, 4.5.0, 4.8.0, 6.2.2, 6.6.0, 6.9.3, 6.10.3, 6.11.0, 6.17.1, 8.0.0, 8.1.4, 8.2.1, 8.8.1, 8.9.4, 8.11.2, 8.12.0, 8.15.1, 8.16.2, 9.4.0, 10.1.0, 10.10.0, 10.14.2, 10.17.0, 12.13.0.
2019-12-18T15:42:14    Resolved to version 10.1.0
2019-12-18T15:42:14    Detecting npm version spec...
2019-12-18T15:42:14    An error has occurred during web site deployment.
2019-12-18T15:42:14    select node version failed
2019-12-18T15:42:14    ENOENT: no such file or directory, open '/opt/nodejs/10.1.0/npm.txt'
/opt/Kudu/Scripts/starter.sh "/home/site/deployments/tools/deploy.sh"
2019-12-18T15:42:14  
```

### Mention any other details that might be useful.
I think this is somehow related with #3057 .

Thank you
### Repro steps.

My staging slot has auto swap turned off in the portal (it was on and then an hour before deploying I turned it off). Each deploy I make to the staging slot auto swaps a few minutes after the site comes up.

### Project structures.

I'm using [azure/webapps-deploy](https://github.com/azure/webapps-deploy) to deploy my site from GitHub Actions. This is my deployment step:

```yml
- name: Publish To Azure
  id: publish
  uses: azure/webapps-deploy@v1
  with:
    app-name: roxierosedesign
    slot: staging
    package: artifacts/wwwroot
    publish-profile: ${{ secrets.azureWebAppPublishProfile }}
```

### The log/error given by the failure.

The output from the deployment action:

```
Finding files matching input: artifacts/wwwroot
This is folder package 
Is the package an msdeploy package : false
[GET]https://roxierosedesign-staging.scm.azurewebsites.net/api/settings
Archiving artifacts/wwwroot to d:\a\_temp\temp_web_package_4119084608050061.zip
Successfully created archive d:\a\_temp\temp_web_package_4119084608050061.zip
Package deployment using ZIP Deploy initiated.
[POST]https://roxierosedesign-staging.scm.azurewebsites.net/api/zipdeploy?isAsync=true&deployer=GITHUB_ZIP_DEPLOY
[GET]https://roxierosedesign-staging.scm.azurewebsites.net/api/deployments/latest?deployer=GITHUB_ZIP_DEPLOY&time=2019-12-15_18-21-48Z
[GET]https://roxierosedesign-staging.scm.azurewebsites.net/api/deployments/latest?deployer=GITHUB_ZIP_DEPLOY&time=2019-12-15_18-21-48Z
[GET]https://roxierosedesign-staging.scm.azurewebsites.net/api/deployments/9b81be3443ac467589a92e594a13d467
Deploy logs can be viewed at https://roxierosedesign-staging.scm.azurewebsites.net/api/deployments/9b81be3443ac467589a92e594a13d467/log
Successfully deployed web package to App Service.
[PUT]https://roxierosedesign-staging.scm.azurewebsites.net/api/deployments/b974f6e5b48b737ebfd07aaace39eaba01b03b811576434114997
Encountered a retriable status code: 409. Message: 'Conflict'.
[PUT]https://roxierosedesign-staging.scm.azurewebsites.net/api/deployments/b974f6e5b48b737ebfd07aaace39eaba01b03b811576434114997
Encountered a retriable status code: 409. Message: 'Conflict'.
[PUT]https://roxierosedesign-staging.scm.azurewebsites.net/api/deployments/b974f6e5b48b737ebfd07aaace39eaba01b03b811576434114997
Successfully updated deployment History at https://roxierosedesign-staging.scm.azurewebsites.net/api/deployments/b974f6e5b48b737ebfd07aaace39eaba01b03b811576434114997
[GET]https://roxierosedesign-staging.scm.azurewebsites.net/api/vfs/site/deployments/9b81be3443ac467589a92e594a13d467/manifest
App Service Application URL: https://roxierosedesign-staging.azurewebsites.net
```

The output from the kudu deploy log:

```json
[{
    "log_time": "2019-12-15T18:21:49.2604219Z",
    "id": "2c7937a8-25f7-409f-a4a4-fec7c6d44923",
    "message": "Updating submodules.",
    "type": 0,
    "details_url": null
}, {
    "log_time": "2019-12-15T18:21:49.3854217Z",
    "id": "0c97cf66-c425-4520-b33a-0e583d035295",
    "message": "Preparing deployment for commit id '9b81be3443'.",
    "type": 0,
    "details_url": null
}, {
    "log_time": "2019-12-15T18:21:49.8166148Z",
    "id": "1a52b058-de90-4d48-a6b0-5f2b98f8d415",
    "message": "Skipping build. Project type: Run-From-Zip",
    "type": 0,
    "details_url": null
}, {
    "log_time": "2019-12-15T18:21:49.8947182Z",
    "id": "c99d0304-b9d8-4db8-8019-195c6af3a456",
    "message": "Skipping post build. Project type: Run-From-Zip",
    "type": 0,
    "details_url": null
}, {
    "log_time": "2019-12-15T18:21:49.9416171Z",
    "id": "62695d85-db78-4842-82f8-d51a98b5aff2",
    "message": "Triggering recycle (preview mode disabled).",
    "type": 0,
    "details_url": null
}, {
    "log_time": "2019-12-15T18:21:50.1603674Z",
    "id": "dd1e55bf-e042-43d9-aea4-6d41c3f0f15d",
    "message": "Deployment successful.",
    "type": 0,
    "details_url": null
}, {
    "log_time": "2019-12-15T18:21:52.1207358Z",
    "id": "ae0cd3b0-845f-44a9-93f3-4d12fb574062",
    "message": "Requesting auto swap to 'production' slot with 'AUTOSWAPb856891f-34bd-4919-aad3-9f7cc0b65857' id successful.",
    "type": 0,
    "details_url": null
}]
```

### Debug your Azure website remotely.

The app name is `roxierosedesign`.

### Mention any other details that might be useful.

I contacted support about this the other day, the support request number is `119121124004944`.
Guys,
It’s not exactly kudu issue, but it’s definitely most knowledgeable people here.

I’m looking for a simple azure app services extension example which uses IIS Native HttpModule.
I assume it’s possible since there is a way to register it:
[Registering an IIS Native HttpModule](https://github.com/projectkudu/kudu/wiki/Xdt-transform-samples#registering-an-iis-native-httpmodule) 
Following [post #2](https://social.msdn.microsoft.com/Forums/en-US/20c54b06-a149-4566-8614-818889170c6b/isapi-dll-app-on-azure-with-free-trial-and-understanding-to-azure-philosophy?forum=windowsazurewebsitespreview) confirms, it should work...

However when **private** extension with native module is added app services I got “_module not found_” error.
_applicationhost.config_ shows, _globalModules_ is registered properly (verified against local server).

Same module works as ISAPI filter on app services from very same location properly, so it’s neither “bitness” nor path issues.
Similar managed module works fine too...

Tried few different native module paths with no luck:
_D:\home\SiteExtensions\isapi_test\isapi_test.dll
D:\home\SiteExtensions\bin\isapi_test.dll
D:\home\site\wwwroot\bin\isapi_test.dll
D:\home\site\wwwroot\isapi_test\isapi_test.dll
D:\home\site\wwwroot\isapi_test.dll_

Same module works properly on **local** windows servers 2016R2 and 2019 as either ISAPI filter or extension.

Search shows results for **node.js** native modules only... :(
I'll appreciate any help,
Thanks
Currently when connecting to the Kudu-Service via the `scm` url (e.g. `https://myservice.scm.azurewebsites.net`), the current behavior when using the updated `SameSite` changes is a 403.

Repro steps (Firefox in this case):

1. Make sure your have a fresh session 
2. Enable the new behavior via about:config `network.cookie.sameSite.laxByDefault` to `true`
3. Try to go to the Kudu service via the `scm` url

References:

- [SameSite IETF changes](https://tools.ietf.org/html/draft-west-cookie-incrementalism-00#section-3)
- [MS DevBlogs](https://devblogs.microsoft.com/aspnet/upcoming-samesite-cookie-changes-in-asp-net-and-asp-net-core/)
- [ASP.NET Docs](https://docs.microsoft.com/en-us/aspnet/samesite/system-web-samesite)

I have created a Azure DevOps pipeline and when the artifact drop on the location, kudu console doesn't unzip it. Please check and let me know what is the issue.

![kuduconsole](https://user-images.githubusercontent.com/23416939/70416806-e0a36a80-1a85-11ea-8e04-bf7b9b017d4b.png)
> For deployment issues, please provide us with the following information:
> ---------------------------------------------------------------

### Repro steps.
> your project built successfully on your dev machine but failed on Azure?
> please write down your build tools and their versions (ie `Msbuild 15.1.0.0`)

### Project structures.
> in order to reproduce your issue at our end we need a simple 
> [github repository](https://github.com/projectkudu/kudu/wiki/Using-a-git-repo-to-report-an-issue)
> that highlights structure of the project

### The log/error given by the failure.
> Normally this include a stack trace, error code and some more information.

### Debug your Azure website remotely.
> it is recommanded that you share your Web App name, directly or [indirectly](https://github.com/projectkudu/kudu/wiki/Reporting-your-site-name-without-posting-it-publicly)
> we can take a look at what's going on.

### Mention any other details that might be useful.

> ---------------------------------------------------------------
> Thanks! We'll be in touch soon.

Since yesterday, after every deployment we make to our App Service, the application fails to start. We're using Run-From-Package as deployment method and are seeing the following error in the App Service event log:

```
Application '/LM/W3SVC/61535351/ROOT' with physical root 'D:\home\site\wwwroot\' failed to start process with commandline 'dotnet .\Alexandria.dll' with multiple retries. Failed to bind to port '7356'. First 30KB characters of captured stdout and stderr logs from multiple retries:
Unhandled Exception: System.IO.FileLoadException: Could not load file or assembly 'D:\home\site\wwwroot\Alexandria.dll'. An assertion failure has occurred. (Exception from HRESULT: 0x8007029C)
Process Id: 11020.
File Version: 13.0.19218.0. Description: IIS ASP.NET Core Module V2 Request Handler. Commit: 4a42afc5aea63750638e118560d43db04bd9ccc2
```

In this case, `Alexandria.dll` is our application entry-point. It's an ASP.NET Core 2.2 application.

Or deployment setup consists of the default `production` and a custom `staging` slot, with 2 App Service instances running at minimum. We're running the`Run-From-Package` deployment on the staging slot, with auto swap enabled, so the application can be deployed with zero downtime. This issue is impacting all of our customers after a deployment.

A simple restart of App Service fixes this issue.

After searching around a bit, the issue we're experiencing here seems to be very similar to https://github.com/Azure/app-service-announcements-discussions/issues/32#issuecomment-472037237

Basically two questions are open for me here:
1) Why is App Service unable to load our .dll?
2) Why would App Service auto-swap an application that isn't even able to start? That seems completely crazy to me and should be prevented by all kinds of health checks on the side of App Service.

Please let me know what useful information I can provide in addition.