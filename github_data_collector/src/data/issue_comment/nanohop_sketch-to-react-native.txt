Generates a lot of errors when running npm install. 
Why do elements lose height and spacing
Can "react-native-svg" use for the "paths" type .

https://github.com/react-native-community/react-native-svg
Hi,
I'll try to use your method to esport my design from Sketch to React, but i have this problem:

`MacBook-Pro-di-Federico:sketch-to-react-native federico$ sketch-to-react-native ~/Desktop/myfile.svg
-bash: sketch-to-react-native: command not found
`

I'll try anything but doesn't working. Please tell me where is error.
@nanohop congrats for the awesome library!

I am super curious if [svgson-next](https://github.com/elrumordelaluz/svgson-next) could work for you, and if there are any improvement, feature that missed. Basically because asap `svgson-next` will be the next major version of [svgson](https://github.com/elrumordelaluz/svgson).

Here a little recap of the main differences:
- The new version doesn't use a complete parser (like `htmlparser2`, since was using a little part of it). 
- It also dropped `svgo` because from `v1.0.0` supports `Promises` and it's easy to handle both together. 
- `svgson-next` changes a little the API, removing some options, but adding [transformNode](https://github.com/elrumordelaluz/svgson-next#transformnode) that lets you apply transformations on each `node` processed. [Here](https://github.com/elrumordelaluz/svg-spreact/blob/4dd062d4a454e5fae78e2fa73b7253463afafaaa/index.js#L89-L102) is an example using it to assign an unique `id` for _Icons_ in _SVG Sprite_.
- Since also changes the results `keys`, it is a `compat` option to let you switch without issues.

The difference in terms of bundle size is big: 
- [svgson-next](https://bundlephobia.com/result?p=svgson-next@4.1.5) **9.4kB**
- [svgson](https://bundlephobia.com/result?p=svgson@2.1.1) 118.1kB

Feel free to let me know if there are issues, features, etc.

[DoApp.sketch.zip](https://github.com/nanohop/sketch-to-react-native/files/2222047/DoApp.sketch.zip)
I have choose **DoApp.sketch** file and convert to svg file. I was successfully converted svg file.
Please see below **Gropus.svg.zip**. then I was try svg to react-component but It's not properly generated.
[Groups.svg.zip](https://github.com/nanohop/sketch-to-react-native/files/2222048/Groups.svg.zip)

what is I am missing ?

Thanks
$> sketch-to-react-native TEMP.svg
gathering elements...
filtering elements...
TypeError: Cannot read property 'right' of undefined
    at determineAlignJustify (/Users/matthudson/Development/sketch-to-react-native/build/attributes.js:133:86)
    at /Users/matthudson/Development/sketch-to-react-native/build/flex.js:286:26
    at Array.forEach (<anonymous>)
    at flattenBoxComps (/Users/matthudson/Development/sketch-to-react-native/build/flex.js:281:13)
    at flattenBoxComps (/Users/matthudson/Development/sketch-to-react-native/build/flex.js:276:9)
    at flattenBoxComponents (/Users/matthudson/Development/sketch-to-react-native/build/flex.js:298:3)
    at _callee$ (/Users/matthudson/Development/sketch-to-react-native/build/index.js:147:36)
    at tryCatch (/Users/matthudson/Development/sketch-to-react-native/node_modules/regenerator-runtime/runtime.js:65:40)
    at Generator.invoke [as _invoke] (/Users/matthudson/Development/sketch-to-react-native/node_modules/regenerator-runtime/runtime.js:299:22)
    at Generator.prototype.(anonymous function) [as next] (/Users/matthudson/Development/sketch-to-react-native/node_modules/regenerator-runtime/runtime.js:117:21)
I noticed that u have been generated code with svg files which are exported by sketch. As we all know, there are some compatibility between svg and sketch file. 

After I find the news about sketch 43: [https://sketchplugins.com/d/87-new-file-format-in-sketch-43](https://sketchplugins.com/d/87-new-file-format-in-sketch-43),  maybe using the sketch source file is better, how do you think?


Hello, i really like your project.

I am trying to use your project to create components from an svg that has paths in it and your project doesnt seem to support it. is there any plans to?

Here is an example svg and and the component generated.
```
<?xml version="1.0" encoding="UTF-8"?>
<svg width="375px" height="272px" viewBox="0 0 375 272" version="1.1" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
    <!-- Generator: Sketch 48.2 (47327) - http://www.bohemiancoding.com/sketch -->
    <title>Chart</title>
    <desc>Created with Sketch.</desc>
    <defs></defs>
    <g id="Mobile" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd">
        <g id="Chart">
            <rect id="Rectangle-3" fill-opacity="0.445482337" fill="#4A4A4A" x="0" y="0" width="375" height="272"></rect>
            <polyline id="Path-2" stroke="#7ED321" points="18.1953125 252.296875 44.2148438 201.636719 73.0820312 208.746094 73.0820312 195.949219 81.5859375 201.636719 81.5859375 195.949219 109.707031 195.949219 128.386719 208.746094 128.386719 190.785156 160.386719 161.742188 160.386719 190.785156 194.953125 148.792969 241.683594 161.742188 270.523438 133.289062 308.078125 148.792969 320.925781 124.667969 326.03125 92.2890625 340.261719 96.9960938 340.261719 118.136719 352.734375 133.289062"></polyline>
            <text id="$254" font-family="HelveticaNeue-UltraLightItalic, Helvetica Neue" font-size="36" font-style="italic" font-weight="200" letter-spacing="0.964285135" fill="#7ED321">
                <tspan x="146.03943" y="94">$254</tspan>
            </text>
        </g>
    </g>
</svg>
```
Component
```
import React, { Component } from 'react';

import {
  StyleSheet,
  Text,
  View,
  TouchableOpacity,
  TextInput,
  ScrollView,
  Image
} from 'react-native';



export default class Main extends Component {

  render() {
    return (
      <ScrollView style={{
        flex: 1, alignSelf: 'stretch',
        paddingTop: 20,
        backgroundColor: '#4A4A4A'}}>
        <Text style={styles._254}>$254</Text>
      </ScrollView>
    )
  }

}

const styles = StyleSheet.create({
  _254: {
    backgroundColor: 'transparent',
    fontSize: 36,
    fontWeight: '200',
    color: '#7ED321',
    textAlign: 'center'
  }
})
```
Awesome project！

Could you open source of the samples you trained ？
