Updates [org.owasp:dependency-check-core](https://github.com/jeremylong/DependencyCheck/tree/master/core) from 5.2.4 to 5.3.0.


I'll automatically update this PR to resolve conflicts as long as you don't change it yourself.

If you'd like to skip this version, you can just close this PR. If you have any feedback, just mention me in the comments below.

Have a fantastic day writing Scala!

<details>
<summary>Ignore future updates</summary>

Add this to your `.scala-steward.conf` file to ignore future updates of this dependency:
```
updates.ignore = [ { groupId = "org.owasp", artifactId = "dependency-check-core" } ]
```
</details>

labels: library-update, semver-minor
I don't think I'm doing anything odd, but:

When I run
```
sbt dependencyCheck
```
I get the dependency report I expect.

When I run
```
sbt clean test
```
All my tests pass, as expected.

but

when I run
```
sbt clean test dependencyCheck
```
the tests pass, but then I get a lot of errors:
```
2019-11-07 16:55:33,877 level=ERROR [REDACTED-akka.actor.default-dispatcher-3]c.c.n.s.s.REDACTED requestId=[] callerId=[] - REDACTED
java.lang.RuntimeException: Can't log call to mock object, have expectations been verified already?
	at org.scalamock.function.FakeFunction.handle(FakeFunction.scala:47)
	at org.scalamock.function.FakeFunction0.apply(FakeFunction.scala:57)
```


**Is your feature request related to a problem? Please describe.**

Currently all the settings are rigidly defined at the project level (`foo := defaultFoo` in `projectSettings`). This means that the users can only override each of them at the project level - so `Global/foo` and `ThisBuild/foo` are ignored. This is inconvenient for multi-project builds, where it makes sense to provide project-wide overrides in `local.sbt`.

**Describe the solution you'd like**

Most of the defaults don't depend on the other project settings (e.g. `foo := baseDirectory.value`), and don't use extra scoping (e.g. `aggregate in foo`) . We should move those to `globalSettings` as described [here](https://www.scala-sbt.org/1.x/docs/Plugins-Best-Practices.html#Provide+default+values+in). For the other settings we should only provide the default if there's no previous value:

```scala
foo := foo.?.value.getOrElse(defaultFoo)
```