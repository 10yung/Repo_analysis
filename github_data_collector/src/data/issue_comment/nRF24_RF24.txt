Sorry to bother you again... 
I read in a post at the arduino forum that there is an example in this repository that allows sending a text file from a sd card using arduino., but I cannot find it. I found one you made for RPi, but didn't manage to find for arduino. Can you point me in the righ direction please?
Regardless of the status of the transmitter (even turned off) the module is reporting available packets.
Reading these packets into the Data structure, just a simple structure to contain a few 16bit values results in filling the structure with 65535 most of the time, but also random values like 57727 and 65407. I have triple checked the wring which seems okay. I also have a LoRa SX1278 chip but that should be silenced by writing its CS pin HIGH.

I am using an ESP8266 module programmed with an FTDI breakout.
And a NRF24L01 module. I have tried using a 4.7uF electrolytic capacitor to smooth input voltage.
Uploading using visual micro.
Board: "Generic ESP8266 Module"


```
#define LORACS 15
#define NRFCS 4
#define NRFCE 16
RF24 nrf(NRFCE, NRFCE); //ce pin 16 isn ideal
void setup() {
                digitalWrite(LORACS, HIGH);
 NRFSetup:             nrf.begin();
		nrf.setAutoAck(false);
		nrf.setCRCLength(RF24_CRC_8);
		nrf.setDataRate(RF24_250KBPS);
		nrf.setChannel(108);
		nrf.setPALevel(RF24_PA_MAX);
		nrf.disableDynamicPayloads();
		nrf.setPayloadSize(sizeof(Data));
		nrf.setRetries(0, 0);
		nrf.csDelay = 1;
                if (nrf.getCRCLength() != RF24_CRC_8) {
			Serial.println("CRC Incorrect");
			goto NRFSetup;
		}

		nrf.openReadingPipe(0, NRFADDRESS);
		nrf.startListening();
                if (nrf.failureDetected) goto NRFSetup;
}

void loop(){
        if (nrf.available() && (nrf.getPayloadSize() == sizeof(Data))) {
		nrf.read(&dataNRF, sizeof(Data));
		Serial.print(dataNRF.Throttle);
	}
}
```

![image](https://user-images.githubusercontent.com/23387076/72222331-6cb02280-355b-11ea-8ec2-221c853add76.png)
Hi

I have made a pcb for a project using attiny84 and nrf module's pins are connected to attiny as follows

> attiny84 - nrf
> PA6 - MOSI
> PA5 - MISO
> PA4 - SCK
> PA1 - CE
> PA2 - CSN

I'm using ATTiny Core by Spence Konde

after i read through the posts i found that PA6 and PA5 pins should be swapped.  

is there anyway to get module working with above configuration?


Regards
Hey :)
I tried to compile this library working for an ATMEGA4809 chip, because it seems like the default ATmega328p chip just hasn't enough SRAM for my needs. But the compiler just says that the library isn't compatible to megaavr chips, like the ATMEGA4809. Is there nevertheless a possibility to get this working on a this chip?

error report:
```
Arduino: 1.8.9 (Windows Store 1.8.21.0) (Windows 10), Board: "Arduino Uno WiFi Rev2, None (ATMEGA4809)"

Build-Optionen wurden verändert, alles wird neu kompiliert
WARNUNG: Bibliothek RF24 behauptet auf (avr, arm, x86, esp8266, esp32) Architektur(en) ausgeführt werden zu können und ist möglicherweise inkompatibel mit Ihrem derzeitigen Board, welches auf (megaavr) Architektur(en) ausgeführt wird.
C:\Users\*\Documents\Arduino\libraries\RF24\RF24.cpp: In member function 'void RF24::csn(bool)':

C:\Users\*\Documents\Arduino\libraries\RF24\RF24.cpp:69:27: error: cannot convert 'bool' to 'PinStatus' for argument '2' to 'void digitalWrite(pin_size_t, PinStatus)'

  digitalWrite(csn_pin,mode);

                           ^

C:\Users\*\Documents\Arduino\libraries\RF24\RF24.cpp: In member function 'void RF24::ce(bool)':

C:\Users\*\Documents\Arduino\libraries\RF24\RF24.cpp:80:51: error: cannot convert 'bool' to 'PinStatus' for argument '2' to 'void digitalWrite(pin_size_t, PinStatus)'

   if (ce_pin != csn_pin) digitalWrite(ce_pin,level);

                                                   ^

exit status 1
Fehler beim Kompilieren für das Board Arduino Uno WiFi Rev2.

```

Thanks for any help :D
I am sending data from arduino with a simple short code...
(A similar code receives data OK with arduino).

```
#include <SPI.h>
#include <nRF24L01.h>
#include <RF24.h>

// RADIO pins
RF24 radio(7, 8); // CE, CSN

const byte address[6] = "00333";

void setup() {
  radio.begin();
  radio.openWritingPipe(address);
  radio.setPALevel(RF24_PA_LOW);
  radio.stopListening();
}

void loop() {
  const char text[] = "Hi ";
  radio.write(&text, sizeof(text));
}
```
But what I need now is to receive **on raspberry pi zero**
Can someone tell me what code to use on raspberry pi side given the above send method ?

I am getting this error when compiling a code with `make` (deviated from `examples_linux/gettingstarted.cpp`):
```
error: ‘RPI_V2_GPIO_P1_15’ was not declared in this scope
 RF24 radio(RPI_V2_GPIO_P1_15, RPI_V2_GPIO_P1_24, BCM2835_SPI_SPEED_8MHZ);
            ^~~~~~~~~~~~~~~~~
```

That config looks like this, derivated from gettingstarted file:
```
/****************** Raspberry Pi ***********************/

// Radio CE Pin, CSN Pin, SPI Speed
// See http://www.airspayce.com/mikem/bcm2835/group__constants.html#ga63c029bd6500167152db4e57736d0939 and the related enumerations for pin information.

// Setup for GPIO 15 CE and CE0 CSN with SPI Speed @ 8Mhz
RF24 radio(RPI_V2_GPIO_P1_15, RPI_V2_GPIO_P1_24, BCM2835_SPI_SPEED_8MHZ);

//RPi Alternate, with SPIDEV - Note: Edit RF24/arch/BBB/spi.cpp and  set 'this->device = "/dev/spidev0.0";;' or as listed in /dev
// RF24 radio(22,0);
```

I assumed that is the right config method to enable, I am using the pins like in attached picture (**using pins 15 and 24**).

What am I doing wrong ? 
And if I enable that SPIDEV method above, do I need to switch pins/wires ?

![raspberry wiring](https://user-images.githubusercontent.com/11273076/69967314-cd8e1900-1520-11ea-8ada-1e37312451c6.png)

I cloned the RF24 material onto my Raspberry pi 4 using

    git clone https://github.com/nRF24/RF24.git

then moved to the created RF24 directory, and following directions found at 

       http://tmrh20.github.io/RF24/RPi.html

 invoked make like this:

    sudo make install -B

The output from make was:

   [Running configure]
   make: execvp: ./configure: permission denied
   Makefile:17: Makefile.inc: No such file or directory
   make:  ***[Makefile:71: Makefile.inc] Error127

   

It appears that the configure file (a Bash shell script) should build Makefile.inc, but it appears that the script cannot run due to permissions. Permissions for configure are:    -rw-r--r--
I tried adding permissions using sudo chmod +w and sudo chmod +x to see if that would help, but
the permissions did not change. I'll have to look into that. Can anyone see reasons why the "make install -B" is failing?

Also, it appears that the BCM2711 (the Rpi4 gpu) is not part of the supported hardware for this library, so perhaps my initial question is moot. Does anyone know if there are plans for 2711 support?

The `RF24` class does not have a default constructor and, in some projects, may force heap allocation when the instance must be created and initialized during runtime. Heap allocation is a bad idea on microcontrollers like Arduino.

For example, in my project, I need inicializate an instance of `RF24` with dynamic data during runtime, but because Arduino compatibility, the instance must be allocated in stack.

My sugestion is for implementation of a default constructor, and a new `begin` method with paramters of the current constructor.

```cpp
RF24::RF24():
p_variant(false), payload_size(32),
dynamic_payloads_enabled(false), addr_width(5), csDelay(5)
{
    pipe0_reading_address[0]=0;
}

bool RF24::begin(uint16_t _cepin, uint16_t _cspin)
{
    // Initizalize the ce_pin and ce_pin values
    this->ce_pin = _cepin;
    this->csn_pin = _cspin;

   // Call the old begin method
    return this->begin();
}
```
Hi !
I'm unable to compile for yh new arduino nano 33 BLE / BLE SENSE. It seems that the SPI library for Nano 33 BLE supports only a newer way of setting the SPI settings and the RF24 library uses the old way.

The log of the IDE :

> ATTENTION : la bibliothèque RF24 prétend être exécutable sur la (ou les) architecture(s) avr, arm, x86, esp8266, esp32 et peut être incompatible avec votre carte actuelle qui s'exécute sur mbed.
> C:\Users\emeri\Documents\Arduino\libraries\RF24\RF24.cpp: In member function 'void RF24::csn(bool)':
> 
> C:\Users\emeri\Documents\Arduino\libraries\RF24\RF24.cpp:42:8: error: 'class arduino::MbedSPI' has no member named 'setBitOrder'
> 
>    _SPI.setBitOrder(MSBFIRST);
> 
>         ^~~~~~~~~~~
> 
> C:\Users\emeri\Documents\Arduino\libraries\RF24\RF24.cpp:43:8: error: 'class arduino::MbedSPI' has no member named 'setDataMode'
> 
>    _SPI.setDataMode(SPI_MODE0);
> 
>         ^~~~~~~~~~~
> 
> C:\Users\emeri\Documents\Arduino\libraries\RF24\RF24.cpp:45:9: error: 'class arduino::MbedSPI' has no member named 'setClockDivider'
> 
>     _SPI.setClockDivider(SPI_CLOCK_DIV2);
> 
>          ^~~~~~~~~~~~~~~
> 
> C:\Users\emeri\Documents\Arduino\libraries\RF24\RF24.cpp:45:25: error: 'SPI_CLOCK_DIV2' was not declared in this scope
> 
>     _SPI.setClockDivider(SPI_CLOCK_DIV2);
> 
>                          ^~~~~~~~~~~~~~
> 
> C:\Users\emeri\Documents\Arduino\libraries\RF24\RF24.cpp:45:25: note: suggested alternative: 'NRF_CLOCK_Type'
> 
>     _SPI.setClockDivider(SPI_CLOCK_DIV2);
> 
>                          ^~~~~~~~~~~~~~
> 
>                          NRF_CLOCK_Type
Hi Contributors,
This is my 5th day into the unforeseen communication issue of my B+ and nrf24 module. I am building a prototype which requires the beautiful library RF24/RF24Network and Mesh. Mesh network is my utmost requirement and no other library provides as this one. I have been trying to communicate an RPI B+ with a nRF as master node and Arduinos as slave nodes. My RPI is unable to read address bytes of the module but I have some weird observations which i am noting down. I have tried all the myriad of things available in the internet and still unable to get an answer. 

Informations:
OS : Raspbian ( Buster )

Observations:
1- The address bytes changes after multiple start of the gettingstarted 
![Screenshot from 2019-10-20 14-44-59](https://user-images.githubusercontent.com/13965074/67157378-c502ca00-f348-11e9-8d55-58905c3a17fd.png)
The 00's changes to FF's and 22's sometimes.
2- Pong back role always replies back with mostly 0 but sometimes random values.
![Screenshot from 2019-10-20 14-48-49](https://user-images.githubusercontent.com/13965074/67157390-ec599700-f348-11e9-86ca-aef5e897109d.png)
3- Pingout role gets 0 mostly as response but sometimes random values as 128
![Screenshot from 2019-10-20 14-50-46](https://user-images.githubusercontent.com/13965074/67157409-2165e980-f349-11e9-8f08-42294dbab8b3.png)
4- Taking a wire out is detected by the library and connection error is thrown in the terminal.

Steps Tried:
1- 100th checked the connection ( using multimeter )
2- Changed driver to SPIDEV, wiringPi, MRAA, RPi and pydev
3- Read somewhere the bcm driver in the newer kernel might be broken. So updated bcm2835.c.
4- I couldn't find a similar problem of other friends around in the internet  ( although i went very close )  so downgraded OS and Kernel to (4.1) VERSION="8 (jessie)" ID=raspbian. ( Release around July , 2016) 
5- Tried the python library and pingpair.py and got the same results. 
6- Tried other nr24 standalone cpp and python libraries. Read somewhere changing spi.speed = 50000 max.
7- SPI Loopback test worked with pigpoid and spidev_test.cpp ( device : /dev/spidev.0.0).
8- piscope LIVE analysis: when running ./gettingstarted 
The MOSI was always bursting data.
The SCLK burst after 3-4 seconds. 
The MISO was sending random bursts for which we were receiving 0 and garbage ( I assume ) 
but still I wonder how loopback was working which proper signal in SPI pins. 
I was trying to isolate this as a hardware and software issue. 
9- Took 2 arduino Nano's and tested all my 3 nrfmodules . They all work and mesh network got created with one arduino as a master node. Used all the modules in the RPi none worked. 
10- Tried changing to other GPIO pins for CE and tried changing bus speed from 8MHz, 4 MHz, 1 etc.
11- All these steps on the all the OSes.

Assumptions:
1- Checked noise and put 500/1000 uf caps over the vcc and gnd.
2- 3.3 v regulated power supply to the module. ( From Pi & 3.3 regulator)

It's driving me crazy please help !!. 
PS: I don't have a second box but I have ordered a RPI Zero W and waiting to test on it.


I am attempting to compile for Teensy 3.6 and get the following error:

> Arduino: 1.8.5 (Linux), TD: 1.40, Board: "Teensy 3.6, Serial, 180 MHz, Faster, US English"
> .
> .

> In file included from /home/arthur/Arduino/libraries/RF24-master/RF24_config.h:57:0,
>                  from /home/arthur/Arduino/libraries/RF24-master/RF24.h:18,
>                  from /home/arthur/Net.Share/Arduino-Dev/Projects/Teensy3.6-Prototype/Teensy3.6-Prototype.ino:4:
> /home/arthur/Arduino/libraries/RF24-master/utility/Teensy/RF24_arch_config.h:18:18: error: expected ';' at end of member declaration
>    #define printf Serial.printf

It appears that there are some issues with the way debug printouts are handled within the library... which make it incompatible in certain circumstances.