:full_moon_with_face: reminder not to merge this via the GitHub UI.
- [ ] `parser.rs`: the parser should be property tested with something like `quickcheck`
- [ ] `cmd.rs`: `CommandLine` should be tested with ascii and utf8
- [ ] `resources.rs`: Gif export should be tested
- [ ] `session.rs`: inputs (mouse, keyboard) should be fuzz-tested to ensure nothing can crash the program.
- [ ] `session.rs`: `selection/*` commands should be tested in headless mode
- [ ] `session.rs`: all commands that take user input should be tested with unexpected inputs to ensure there is no division by zero for example
- [ ] `lib.rs`: rx's entry point should be tested with different inputs
- [ ] Test that everything that modifies a view sets the `[modified]` flag on it
Basically what the topic says.  Would be nice to have some autocomplete functionality, command history, etc. for the command mode.  Thanks!
The cargo install documentation is missing the following packages for debian/ubuntu systems:

* build-essential
* libxcursor-dev
* libxi-dev

I needed to install the latter two to compile the x11 dependencies in addition to the others in the docs, and I'm guessing you need the first.
I'm trying to build a snap of rx, on an Ubuntu 18.04 system. Using rust nightly, it fails to build as below. Any ideas what I can do here?

```
   Compiling rgx v0.1.8                                                                                                             
   Compiling rx v0.2.0 (/root/parts/rx/build)                                                                                                             
error[E0308]: mismatched types                                                                                                                                                                                                                                                                                                                                                    
   --> src/renderer.rs:242:37                                     
    |                                                                                                                                                                                                                                                                                                                                                                             
242 |             Op::Fill(&font.texture, font_img.as_slice()),                                                                                                                          
    |                                     ^^^^^^^^^^^^^^^^^^^ expected struct `rgx::core::Rgba8`, found `u8`                                                                                                                                                                                                                                                                      
    |                                                                                                                                                     
    = note: expected reference `&[rgx::core::Rgba8]`                                                                                                                                                                                                                                                                
               found reference `&[u8]`                                                                                                                                                                                                                                  
                                                                                                                                                          
error[E0308]: mismatched types                                               
   --> src/renderer.rs:243:40                                                                                                                                                            
    |                                                                                                                                                                                    
243 |             Op::Fill(&cursors.texture, cursors_img.as_slice()),                                                                                                                                                                                                                                                                                                             
    |                                        ^^^^^^^^^^^^^^^^^^^^^^ expected struct `rgx::core::Rgba8`, found `u8`                                                                                                                                                                                                                                                                
    |                                                                                                                                                     
    = note: expected reference `&[rgx::core::Rgba8]`                                                                                                      
               found reference `&[u8]`                                       
                                                                                                                                                          
error[E0308]: mismatched types                                                                                                                                                                                                                                                                                                                                                    
   --> src/renderer.rs:244:40                                                                                                                                                            
    |                                                                                                                                                                                                                                                                                                                                                                             
244 |             Op::Fill(&checker.texture, &checker_img),                                                                                                                              
    |                                        ^^^^^^^^^^^^ expected slice, found array `[u8; 16]`                                                                                         
    |                                                                                                                                                     
    = note: expected reference `&[rgx::core::Rgba8]`                                                                                                                                                                                                                                                                
               found reference `&[u8; 16]`                                                  
                                                                                                                                                                                         
error[E0308]: mismatched types                                                                                                                                                           
   --> src/renderer.rs:603:42                                                               
    |                                                                                       
603 |                 Op::Clear(&view_data.fb, Rgba::TRANSPARENT),                                                                                                                       
    |                                          ^^^^^^^^^^^^^^^^^ expected struct `rgx::core::Bgra8`, found struct `rgx::core::Rgba`                    

                                               
error[E0308]: mismatched types                                                                        
   --> src/renderer.rs:604:50                                                                                                                                                                                
    |                          
604 |                 Op::Clear(&view_data.staging_fb, Rgba::TRANSPARENT),                                                                                                                                   
    |                                                  ^^^^^^^^^^^^^^^^^ expected struct `rgx::core::Bgra8`, found struct `rgx::core::Rgba`                                                                  
                                                   
error[E0061]: this function takes 5 parameters but 6 parameters were supplied                         
   --> src/renderer.rs:605:17                                                                                                                                                                                
    |                        
605 | /                 Op::Transfer(    
606 | |                     &view_data.fb,
607 | |                     pixels.as_slice(),                                                        
608 | |                     sw, // Source width                                                       
...   |                                                                                                                                                                                                      
611 | |                     th, // Transfer height
612 | |                 ),    
    | |_________________^ expected 5 parameters
                                                   
error[E0308]: mismatched types                                                                        
   --> src/renderer.rs:616:38                                                                                                                                                                                
    |                                                                                                 
616 |             r.prepare(&[Op::Fill(fb, snapshot.pixels().as_slice())]);                                                                                                                                  
    |                                      ^^^^^^^^^^^^^^^^^^^^^^^^^^^^ expected struct `rgx::core::Bgra8`, found `u8`                                                                                       
    |                                                                                                 
    = note: expected reference `&[rgx::core::Bgra8]`                                                  
               found reference `&[u8]`
                                                                  
error[E0308]: mismatched types                                                                        
   --> src/renderer.rs:663:42                                                                         
    |                          
663 |                 Op::Clear(&view_data.fb, Rgba::TRANSPARENT),                                    
    |                                          ^^^^^^^^^^^^^^^^^ expected struct `rgx::core::Bgra8`, found struct `rgx::core::Rgba`                                                                          
                                                                                                                                                                                                                                                                        
error[E0308]: mismatched types                                                                        
   --> src/renderer.rs:664:50                                                                                                       
    |                                              
664 |                 Op::Clear(&view_data.staging_fb, Rgba::TRANSPARENT),                            
    |                                                  ^^^^^^^^^^^^^^^^^ expected struct `rgx::core::Bgra8`, found struct `rgx::core::Rgba`                                                                  
                                                                                                      
error[E0308]: mismatched types                                                                        
   --> src/renderer.rs:665:41                                                                         
    |                                                                                                                                                                                                                                                                   
665 |                 Op::Fill(&view_data.fb, &pixels),                                               
    |                                         ^^^^^^^ expected slice, found struct `std::vec::Vec`    
    |                                                                                                 
    = note: expected reference `&[rgx::core::Bgra8]`                                                  
               found reference `&std::vec::Vec<u8>`                                                   
                                                   
error[E0599]: no function or associated item named `empty` found for type `rgx::core::Rect<_>` in the current scope                                                                                          
   --> src/session.rs:922:40                                                                                                                                                                                 
    |                                                                                                                               
922 |                 self.selection = Rect::empty();                                                                                                     
    |                                        ^^^^^ function or associated item not found in `rgx::core::Rect<_>`                                                                                                                                                                                                                                                                  
                                                                  
error[E0599]: no function or associated item named `empty` found for type `rgx::core::Rect<_>` in the current scope                                                                                                                                                                                                                                                               
    --> src/session.rs:1494:48                                                                                                                                                           
     |                                                                                                                                                                                                                                                                                                                                                                            
1494 |                         self.selection = Rect::empty();                                                                                            
     |                                                ^^^^^ function or associated item not found in `rgx::core::Rect<_>`                                                                                                                                                                                           
                                                                                                                                                                                                                                                                        
error: aborting due to 12 previous errors                                                                                                                 

```
Opened ~20 frames with ``:f/clone`` to draw a simple snake, used without savings, editor crashed  
trace:  
  
```
thread 'main' panicked at 'assertion failed: `(left == right)`  
  left: `Ok(false)`,  
 right: `Ok(true)`: GPU got stuck on a frame (image 2) :(', /home/nikto_b/.cargo/registry  /src/github.com-1ecc6299db9ec823/wgpu-native-0.3.3/src/swap_chain.rs:190:5  
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace.  
thread 'main' panicked at 'assertion failed: `(left == right)`  
  left: `Ok(false)`,  
 right: `Ok(true)`: GPU got stuck :(', /home/nikto_b/.cargo/registry/src/github.com-  1ecc6299db9ec823/wgpu-native-0.3.3/src/device.rs:204:13  
stack backtrace:  
   0:     0x55c44b312064 - backtrace::backtrace::libunwind::trace::h9c615d6efbf938f6  
                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37  /src/backtrace/libunwind.rs:88  
   1:     0x55c44b312064 - backtrace::backtrace::trace_unsynchronized::hfaa1ce1a28b26657  
                               at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.37  /src/backtrace/mod.rs:66  
   2:     0x55c44b312064 - std::sys_common::backtrace::_print_fmt::h1b66ca12d17b932b  
                               at src/libstd/sys_common/backtrace.rs:77  
   3:     0x55c44b312064 - <std::sys_common::backtrace::_print::DisplayBacktrace as   core::fmt::Display>::fmt::hb788f286135c56c2  
                               at src/libstd/sys_common/backtrace.rs:61  
   4:     0x55c44b332e6c - core::fmt::write::h07fe3dc5621915ed  
                               at src/libcore/fmt/mod.rs:1028  
   5:     0x55c44b30ef37 - std::io::Write::write_fmt::h01232d256c58655a  
                               at src/libstd/io/mod.rs:1412  
   6:     0x55c44b31433e - std::sys_common::backtrace::_print::h28f8e2b4d9e94458  
                               at src/libstd/sys_common/backtrace.rs:65  
   7:     0x55c44b31433e - std::sys_common::backtrace::print::hd186282d73d3e408  
                               at src/libstd/sys_common/backtrace.rs:50  
   8:     0x55c44b31433e - std::panicking::default_hook::{{closure}}::h924d5d525cfaa28b  
                               at src/libstd/panicking.rs:189  
   9:     0x55c44b314041 - std::panicking::default_hook::hcf10145036a31ca0  
                               at src/libstd/panicking.rs:206  
  10:     0x55c44b3149d5 - std::panicking::rust_panic_with_hook::h0d1ccf594ba2c25f  
                               at src/libstd/panicking.rs:469  
  11:     0x55c44b314572 - std::panicking::continue_panic_fmt::hd9914224a5c73476  
                               at src/libstd/panicking.rs:376  
  12:     0x55c44b3144cc - std::panicking::begin_panic_fmt::h21a179276bc3d2a5  
                               at src/libstd/panicking.rs:331  
  13:     0x55c44b23d284 -   wgpu_native::device::Device <gfx_backend_vulkan::Backend>::maintain::hb86857300ab924e6  
  14:     0x55c44b24b7c6 - wgpu_device_poll  
  15:     0x55c44b0f5ad8 - core::ptr::real_drop_in_place::h573d63d1ea18404b  
  16:     0x55c44b0f4985 - rx::platform::run::hbca45d375a106e3e  
  17:     0x55c44b0e42f7 - rx::init::h1770aa72b933b02c  
  18:     0x55c44b0f978c - rx::main::h02e3fd22fc5109fe  
  19:     0x55c44b0f4e53 - std::rt::lang_start::{{closure}}::h0d34df9be9aebcc3  
  20:     0x55c44b314403 - std::rt::lang_start_internal::{{closure}}::h9d93058f2363250f  
                               at src/libstd/rt.rs:48  
  21:     0x55c44b314403 - std::panicking::try::do_call::h3396b203c650aa3f  
                               at src/libstd/panicking.rs:288  
  22:     0x55c44b31705a - __rust_maybe_catch_panic  
                               at src/libpanic_unwind/lib.rs:80  
  23:     0x55c44b314ecd - std::panicking::try::hd95abb921899f84c  
                               at src/libstd/panicking.rs:267  
  24:     0x55c44b314ecd - std::panic::catch_unwind::h067f8f58c3aff594  
                               at src/libstd/panic.rs:396  
  25:     0x55c44b314ecd - std::rt::lang_start_internal::hc2ec29100191f803  
                               at src/libstd/rt.rs:47  
  26:     0x55c44b0f9a42 - main  
  27:     0x7faeecc09153 - __libc_start_main  
  28:     0x55c44b0e398e - _start  
  29:                0x0 - <unknown>  
thread panicked while panicking. aborting.  
[1]    2243857 illegal hardware instruction (core dumped)  rx  
```

System:  
ArchLinux on Linux 5.4.0  
Intel Corporation UHD Graphics 620 (rev 07)  
sway version 1.2  

Related to #18 

Windows 10, compiled with 1.38 stable. (`--vulkan` feature flag)

rx does not go into command mode when writing `:` using a [Swedish/Nordic keyboard layout](https://nordickeyboards.se/info_sheets/das_keyboard_nordic_layout.jpg) (Shift + Period) and instead zooms in one level.

It seems to recieve a colon in the `RecievedCharacter` event, but the `KeyboardInput` contains a period.

Logs:
```
[2019-09-30T13:57:01Z DEBUG rx] event: KeyboardInput(KeyboardInput { state: Pressed, key: Some(Shift), modifiers: ModifiersState { shift: true, ctrl: false, alt: false, meta: false } })
[2019-09-30T13:57:01Z DEBUG rx::session] KeyboardInput { state: Pressed, key: Some(Shift), modifiers: ModifiersState { shift: true, ctrl: false, alt: false, meta: false } }
[2019-09-30T13:57:01Z DEBUG rx::session] command: BrushSet(Multi)
[2019-09-30T13:57:02Z DEBUG rx] event: KeyboardInput(KeyboardInput { state: Pressed, key: Some(Period), modifiers: ModifiersState { shift: true, ctrl: false, alt: false, meta: false } })
[2019-09-30T13:57:02Z DEBUG rx] event: ReceivedCharacter(':')
[2019-09-30T13:57:02Z DEBUG rx::session] KeyboardInput { state: Pressed, key: Some(Period), modifiers: ModifiersState { shift: true, ctrl: false, alt: false, meta: false } }
[2019-09-30T13:57:02Z DEBUG rx::session] command: Zoom(Incr)
[2019-09-30T13:57:02Z DEBUG rx::session] zoom: 1 -> 2
[2019-09-30T13:57:02Z DEBUG rx] event: KeyboardInput(KeyboardInput { state: Released, key: Some(Period), modifiers: ModifiersState { shift: true, ctrl: false, alt: false, meta: false } })
[2019-09-30T13:57:02Z DEBUG rx::session] KeyboardInput { state: Released, key: Some(Period), modifiers: ModifiersState { shift: true, ctrl: false, alt: false, meta: false } }
[2019-09-30T13:57:02Z DEBUG rx] event: KeyboardInput(KeyboardInput { state: Released, key: Some(Shift), modifiers: ModifiersState { shift: false, ctrl: false, alt: false, meta: false } })
[2019-09-30T13:57:02Z DEBUG rx::session] KeyboardInput { state: Released, key: Some(Shift), modifiers: ModifiersState { shift: false, ctrl: false, alt: false, meta: false } }
[2019-09-30T13:57:02Z DEBUG rx::session] command: BrushUnset(Multi)
```
It would be great if a user could control brush with keyboard, instead of frame. Maybe it could be done in modal fashion like vim. Right now it doesn't make sense to use hjkl when you need to use mouse at the same time.

Also it would be great if you could map specific keybindings for creating specific patterns, maybe through scripting language or just with libraries of images.
Runs fine if I enable vsync.
This seems similar to other issues I have encountered on nvidia GPU's where there is no delay when vsync is disabled so it renders and queues frames way too fast until it ooms.
Quite possibly an issue with wgpu instead of rx, but I haven't investigated it at all.

Occurs on:
OS: Arch Linux
GPU: GTX 960
Driver: Nvidia proprietary driver, version 418
Backend: Vulkan

The validation errors repeat many times before hitting the panic, I omitted most of them.
```
[2019-08-25T10:44:59Z ERROR gfx_backend_vulkan] 
VALIDATION [VUID-VkSwapchainCreateInfoKHR-imageExtent-01274 (0)] : vkCreateSwapchainKHR() called with imageExtent = (850,1402), which is outside the bounds returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR(): currentExtent = (851,1402), minImageExtent = (851,1402), maxImageExtent = (851,1402). The Vulkan spec states: imageExtent must be between minImageExtent and maxImageExtent, inclusive, where minImageExtent and maxImageExtent are members of the VkSurfaceCapabilitiesKHR structure returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR for the surface (https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VUID-VkSwapchainCreateInfoKHR-imageExtent-01274)
object info: (type: DEVICE, hndl: 94080094017968)

[2019-08-25T10:44:59Z ERROR gfx_backend_vulkan] 
VALIDATION [UNASSIGNED-CoreValidation-DrawState-SwapchainTooManyImages (0)] : vkAcquireNextImageKHR: Application has already acquired the maximum number of images (0x1)
object info: (type: SWAPCHAIN_KHR, hndl: 11880)

[2019-08-25T10:44:59Z ERROR gfx_backend_vulkan] 
VALIDATION [VUID-VkSwapchainCreateInfoKHR-imageExtent-01274 (0)] : vkCreateSwapchainKHR() called with imageExtent = (850,1402), which is outside the bounds returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR(): currentExtent = (851,1402), minImageExtent = (851,1402), maxImageExtent = (851,1402). The Vulkan spec states: imageExtent must be between minImageExtent and maxImageExtent, inclusive, where minImageExtent and maxImageExtent are members of the VkSurfaceCapabilitiesKHR structure returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR for the surface (https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VUID-VkSwapchainCreateInfoKHR-imageExtent-01274)
object info: (type: DEVICE, hndl: 94080094017968)

[2019-08-25T10:44:59Z ERROR gfx_backend_vulkan] 
VALIDATION [UNASSIGNED-CoreValidation-DrawState-SwapchainTooManyImages (0)] : vkAcquireNextImageKHR: Application has already acquired the maximum number of images (0x1)
object info: (type: SWAPCHAIN_KHR, hndl: 11904)

[2019-08-25T10:44:59Z ERROR gfx_backend_vulkan] 
VALIDATION [VUID-VkSwapchainCreateInfoKHR-imageExtent-01274 (0)] : vkCreateSwapchainKHR() called with imageExtent = (850,1402), which is outside the bounds returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR(): currentExtent = (851,1402), minImageExtent = (851,1402), maxImageExtent = (851,1402). The Vulkan spec states: imageExtent must be between minImageExtent and maxImageExtent, inclusive, where minImageExtent and maxImageExtent are members of the VkSurfaceCapabilitiesKHR structure returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR for the surface (https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VUID-VkSwapchainCreateInfoKHR-imageExtent-01274)
object info: (type: DEVICE, hndl: 94080094017968)

[2019-08-25T10:44:59Z ERROR gfx_backend_vulkan] 
VALIDATION [UNASSIGNED-CoreValidation-DrawState-SwapchainTooManyImages (0)] : vkAcquireNextImageKHR: Application has already acquired the maximum number of images (0x1)
object info: (type: SWAPCHAIN_KHR, hndl: 11928)

[2019-08-25T10:44:59Z ERROR gfx_backend_vulkan] 
VALIDATION [VUID-VkSwapchainCreateInfoKHR-imageExtent-01274 (0)] : vkCreateSwapchainKHR() called with imageExtent = (850,1402), which is outside the bounds returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR(): currentExtent = (851,1402), minImageExtent = (851,1402), maxImageExtent = (851,1402). The Vulkan spec states: imageExtent must be between minImageExtent and maxImageExtent, inclusive, where minImageExtent and maxImageExtent are members of the VkSurfaceCapabilitiesKHR structure returned by vkGetPhysicalDeviceSurfaceCapabilitiesKHR for the surface (https://www.khronos.org/registry/vulkan/specs/1.1-extensions/html/vkspec.html#VUID-VkSwapchainCreateInfoKHR-imageExtent-01274)
object info: (type: DEVICE, hndl: 94080094017968)

thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: OutOfMemory(OutOfHostMemory)', src/libcore/result.rs:999:5
stack backtrace:
   0: backtrace::backtrace::libunwind::trace
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/libunwind.rs:88
   1: backtrace::backtrace::trace_unsynchronized
             at /cargo/registry/src/github.com-1ecc6299db9ec823/backtrace-0.3.29/src/backtrace/mod.rs:66
   2: std::sys_common::backtrace::_print
             at src/libstd/sys_common/backtrace.rs:47
   3: std::sys_common::backtrace::print
             at src/libstd/sys_common/backtrace.rs:36
   4: std::panicking::default_hook::{{closure}}
             at src/libstd/panicking.rs:200
   5: std::panicking::default_hook
             at src/libstd/panicking.rs:214
   6: std::panicking::rust_panic_with_hook
             at src/libstd/panicking.rs:477
   7: std::panicking::continue_panic_fmt
             at src/libstd/panicking.rs:384
   8: rust_begin_unwind
             at src/libstd/panicking.rs:311
   9: core::panicking::panic_fmt
             at src/libcore/panicking.rs:85
  10: core::result::unwrap_failed
             at /rustc/eae3437dfe991621e8afdc82734f4a172d7ddf9b/src/libcore/macros.rs:18
  11: core::result::Result<T,E>::unwrap
             at /rustc/eae3437dfe991621e8afdc82734f4a172d7ddf9b/src/libcore/result.rs:800
  12: wgpu_native::device::device_create_swap_chain
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-native-0.3.3/src/device.rs:1905
  13: wgpu_swap_chain_get_next_texture
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-native-0.3.3/src/swap_chain.rs:150
  14: wgpu::SwapChain::get_next_texture
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/wgpu-0.3.0/src/lib.rs:1369
  15: rgx::core::SwapChain::next
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/rgx-0.1.0/src/core/mod.rs:1150
  16: rx::renderer::Renderer::frame
             at src/renderer.rs:265
  17: rx::init::{{closure}}::{{closure}}
             at ./src/lib.rs:157
  18: rx::FrameTimer::run
             at ./src/lib.rs:56
  19: rx::init::{{closure}}
             at ./src/lib.rs:156
  20: rx::platform::backend::Events::run::{{closure}}
             at ./src/platform/winit.rs:26
  21: winit::platform_impl::platform::sticky_exit_callback
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.20.0-alpha3/src/platform_impl/linux/mod.rs:656
  22: winit::platform_impl::platform::x11::EventLoop<T>::run_return
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.20.0-alpha3/src/platform_impl/linux/x11/mod.rs:285
  23: winit::platform_impl::platform::x11::EventLoop<T>::run
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.20.0-alpha3/src/platform_impl/linux/x11/mod.rs:382
  24: winit::platform_impl::platform::EventLoop<T>::run
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.20.0-alpha3/src/platform_impl/linux/mod.rs:603
  25: winit::event_loop::EventLoop<T>::run
             at /home/rubic/.cargo/registry/src/github.com-1ecc6299db9ec823/winit-0.20.0-alpha3/src/event_loop.rs:140
  26: rx::platform::backend::Events::run
             at ./src/platform/winit.rs:24
  27: rx::init
             at ./src/lib.rs:116
  28: rx::main
             at src/main.rs:16
  29: std::rt::lang_start::{{closure}}
             at /rustc/eae3437dfe991621e8afdc82734f4a172d7ddf9b/src/libstd/rt.rs:64
  30: std::rt::lang_start_internal::{{closure}}
             at src/libstd/rt.rs:49
  31: std::panicking::try::do_call
             at src/libstd/panicking.rs:296
  32: __rust_maybe_catch_panic
             at src/libpanic_unwind/lib.rs:82
  33: std::panicking::try
             at src/libstd/panicking.rs:275
  34: std::panic::catch_unwind
             at src/libstd/panic.rs:394
  35: std::rt::lang_start_internal
             at src/libstd/rt.rs:48
  36: std::rt::lang_start
             at /rustc/eae3437dfe991621e8afdc82734f4a172d7ddf9b/src/libstd/rt.rs:64
  37: main
  38: __libc_start_main
  39: _start
note: Some details are omitted, run with `RUST_BACKTRACE=full` for a verbose backtrace.

```