- Dusk Version: "~5.0",
- Laravel Version: "^6.4",
- PHP Version: "^7.4",
- Database Driver & Version:

### Description:
After running my browser tests repeatedly, the screen size of the running test automatically decreases after any test fails. In my screenshot, my DuskTestCase.php file is 'window-size = 1920, 1080', although my screen size is defined, it crushes it and reduces the screen size.

DuskTestCase.php file

```
/**
     * Create the RemoteWebDriver instance.
     *
     * @return RemoteWebDriver
     */
    protected function driver()
    {
        $options = (new ChromeOptions)->addArguments([
            '--disable-gpu',
//            '--headless',
            '--window-size=1920,1080',
        ]);
```

ScreenShot
![Screenshot from 2020-01-17 13-51-56 (1)](https://user-images.githubusercontent.com/43302726/72608032-db61f700-3932-11ea-989a-168274b14658.jpg)


### Steps To Reproduce:

Hi,

I am using a `forward()` equivalent of the `back()` method on `Browser` and would like to submit a PR for the feature?
Please also support firefox driver.
I have encountered a problem that mouseover does not work.

https://github.com/laravel/dusk/issues/353
In Dusk I've been trying to test in Vue the presence of a property value for an object that's in an array. The problem seems to come up due to Vue Observer returning a multidimensional array for an array of objects which is fair enough, but phpunit assertContains appears to only deal with single dimensional arrays. 

I looked into `MakesAssertions` and was able to get the query selector to flatMap my data but it feels like too much of a hack. 

`->assertVueContains('$store.state.feedback.flatMap(f => f.message)', 'Logged In', '@app');`

Any ideas on this?
Is it possible to get code coverage of front-end JS code from Dusk? The other issues I've seen only discuss coverage of PHP code. I'm using Vue.js and Nuxt.js if that's relevant.
The tests folder is PSR-4 compliant. Those two folders do not really belong here.

They would rather be located in `storage/logs/dusk/...`

Moving the folders is currently possible with a custom `setUp` method in the DuskTestCase class:

    protected function setUp()
    {
        parent::setUp();

        Browser::$storeScreenshotsAt = storage_path('logs/dusk/screenshots');
        Browser::$storeConsoleLogAt = storage_path('logs/dusk/console');
    }

However, the DuskCommand complains that the folders in tests/Browser do not exist when trying to clean them.

I think that for the same reasons some folders/files were taken out of the `app` folder from L4 to L5, we should keep the tests folder free of non-PSR-4 stuff.
Does Laravel Dusk produce working code coverage? Because although I added <logs> node to phpunit.dusk.xml file, and got logs, those logs lack any coverage data even for the controllers being tested.
Might it be possible to support different selectors than the cssSelector?
The webdriver also supports xpath selectors.
It would be great if functions like text() will support xpath also.

I've played a little bit with the Dusk code and added a parameter to the text() function and it seems to be very easy. But i'm not sure if this is the best way.
Dusk might also detect xpath by itself (by search for // at the beginning, for example).

What do you think?