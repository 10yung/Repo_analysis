I never would have imagined that playing with the shell env of my host would impact the ability of a git repo on the same machine to receive data – but after an hour of debugging that definitely seems to be the case.

```
fatal: protocol error: bad line length character: ?[01
fatal: the remote end hung up unexpectedly
```

It was this thread that finally clued me in that this could even be a thing.

https://github.com/Bash-it/bash-it/issues/1032

I disabled the two plugins that OMB enables by default but it didn't resolve my issue. Only uninstalling OMB did. Which I was sad to do. Would be happy to reinstall and help debug if you've got any ideas or want some more complete log data.
i did installed go with this tutorial which was working everytime:
https://docs.google.com/document/d/1Wm7eFA97HaXaoo98pI7t61rxmJXfKmrrJ7nIjRuo6BE/edit


but i have $PATH problems which is because of this tool i believe because of path is not there so i cannot run go command without doing export command which is not persistence ... pls help me about that
![image](https://user-images.githubusercontent.com/44042178/72201397-7d469700-348e-11ea-97c6-4c8083870e51.png)
as you can see if i do cd command it is showing extra line which is /home/azamet/Belgeler/
i dont want it shows on second line how to change it?
im using kali linux with debian terminal... this tool will also change the theme of my existing terminal or is it an another terminal tool? i did not understand it because of my bad english im sorry for that.... 
thanks
i did installed it with sudo but i dont know how to uninstall it...
said on the wiki one command but if i put it it says command not found?
Observed that `grep` loses its `--color=auto` option:
```
$ alias grep
alias grep='grep '
```
Added `set -x` flag to `${OSH}/lib/grep.sh` to see what's going on:
```
$ src
++++ GREP_OPTIONS=
++++ grep_flag_available --color=auto
++++ grep --color=auto ''
++++ echo
++++ GREP_OPTIONS+=(" --color=auto")
++++ VCS_FOLDERS='{.bzr,CVS,.git,.hg,.svn}'
++++ grep_flag_available --exclude-dir=.cvs
++++ grep --exclude-dir=.cvs ''
++++ echo
++++ GREP_OPTIONS+=(" --exclude-dir=$VCS_FOLDERS")
++++ alias 'grep=grep '
++++ unset GREP_OPTIONS
++++ unset VCS_FOLDERS
++++ unset -f grep_flag_available
++++ set +x
```
As can be seen from the output, alias for grep is just `'grep '` in result.
The problem is that the GREP_OPTIONS is initialized like a string variable and then used like an array. I suggest to declare this variable as an array in the first place:
```declare -a GREP_OPTIONS```

My bash version is 4.3.48(1)-release.
CC: @nntoan 
**Plugins**
1. Kubectl
2. Brew
3. NPM
**Feature**
1. Ansible plugin implemented
Hi, 
I can see virtualenv env name with "font" theme, but I can't see conda env name. 

This is virtualenv

> 03:43:05 sulsj@sjsul-lm-2 ~ → source ~/venv/bin/activate
> 03:43:11 (venv) sulsj@sjsul-lm-2 ~ →

And this is conda

> 03:41:16 sulsj@sjsul-lm-2 bin → conda env list
> \# conda environments:
> \#
> base                  *  /Users/sulsj/miniconda2
> 
> 03:41:50 sulsj@sjsul-lm-2 bin → conda activate
> 03:42:01 sulsj@sjsul-lm-2 bin → conda deactivate
> 03:42:08 sulsj@sjsul-lm-2 bin →

Any fix?
## Steps to reproduce

- start with a non empty .bashrc file (paths, aliases, etc...)
- run the install script

## Expected result 

The oh my bash contents are append to the end of the file.

## Actual result

The .bashrc is overwritten

*Note : Maybe it is good practise to have the aliases and paths in ~/.profile in which case I apologize for my ignorance, but a little warning would go a long way* 
in update script we should save `$PWD` to a variable to cd to it after the upgrade is complete