The following test:

https://github.com/47deg/github4s/blob/ea2285a1860d988dae9d26f54977ee47d08bb5fb/github4s/jvm/src/test/scala/github4s/unit/ApiSpec.scala#L403-L412

is extremely flaky
Is there a way of traversing with Pagination as explained [here](https://developer.github.com/v3/guides/traversing-with-pagination/#consuming-the-information)? I could not find anything in the docs or code

So far, the only way I could find to do it is to look at the `link` header in the response headers. But seems a very complicated way to do it, since all tags are shown as a single string:

```
Link | <https://api.github.com/organizations/9919/members?page=1&per_page=1>;  rel="prev",  <https://api.github.com/organizations/9919/members?page=3&per_page=1>;  rel="next",  <https://api.github.com/organizations/9919/members?page=214&per_page=1>;  rel="last",  <https://api.github.com/organizations/9919/members?page=1&per_page=1>;  rel="first"
```




Following along with [sbt-microsite: Publish using GitHub4s](https://47deg.github.io/sbt-microsites/docs/publish-with-travis.html#publish-using-github4s), I've created a token with the `repo` scope, and have `Enable SSO`'d (which is required by my environment).

I was then able to use the Github API to perform some  simple tests:
- List commits for my repo
- List entries for a given tree

Despite this, when attempting to use `publishMicrosite`, I get:

```
[error] Error committing filesGitHub returned an error: Failed invoking with status : 422 body :
 {"message":"Invalid tree info","documentation_url":"https://developer.github.com/v3/git/trees/#create-a-tree"}

        at sbtorgpolicies.github.syntax$GHResponseOps.execE(syntax.scala:53)
        at sbtorgpolicies.github.syntax$EitherTOps.execE(syntax.scala:43)
        at sbtorgpolicies.github.GitHubOps.commitDir(GitHubOps.scala:172)
        at sbtorgpolicies.github.GitHubOps.commitDir(GitHubOps.scala:148)
        at microsites.MicrositeAutoImportSettings.$anonfun$micrositeTasksSettings$13(MicrositeKeys.scala:305)
        at scala.Function1.$anonfun$compose$1(Function1.scala:44)
        at sbt.internal.util.$tilde$greater.$anonfun$$u2219$1(TypeFunctions.scala:40)
        at sbt.std.Transform$$anon$4.work(System.scala:67)
        at sbt.Execute.$anonfun$submit$2(Execute.scala:269)
        at sbt.internal.util.ErrorHandling$.wideConvert(ErrorHandling.scala:16)
        at sbt.Execute.work(Execute.scala:278)
        at sbt.Execute.$anonfun$submit$1(Execute.scala:269)
        at sbt.ConcurrentRestrictions$$anon$4.$anonfun$submitValid$1(ConcurrentRestrictions.scala:178)
        at sbt.CompletionService$$anon$2.call(CompletionService.scala:37)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
        at java.util.concurrent.FutureTask.run(FutureTask.java:266)
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
        at java.lang.Thread.run(Thread.java:745)
Caused by: github4s.GithubResponses$UnsuccessfulHttpRequest: Failed invoking with status : 422 body :
 {"message":"Invalid tree info","documentation_url":"https://developer.github.com/v3/git/trees/#create-a-tree"}
        at github4s.HttpRequestBuilderExtensionJVM.toEntity(HttpRequestBuilderExtensionJVM.scala:84)
        at github4s.HttpRequestBuilderExtensionJVM.toEntity$(HttpRequestBuilderExtensionJVM.scala:74)
        at github4s.jvm.Implicits$.toEntity(Implicits.scala:21)
        at github4s.HttpRequestBuilderExtensionJVM$$anon$1.$anonfun$runMap$3(HttpRequestBuilderExtensionJVM.scala:67)
        at scala.util.Try$.apply(Try.scala:209)
        at sbtorgpolicies.github.instances$$anon$2.capture(instances.scala:57)
        at sbtorgpolicies.github.instances$$anon$2.capture(instances.scala:56)
        at github4s.HttpRequestBuilderExtensionJVM$$anon$1.runMap(HttpRequestBuilderExtensionJVM.scala:61)
        at github4s.HttpRequestBuilderExtensionJVM$$anon$1.run(HttpRequestBuilderExtensionJVM.scala:34)
        at github4s.HttpClient.post(HttpClient.scala:159)
        at github4s.api.GitData.createTree(GitData.scala:251)
        at github4s.free.interpreters.Interpreters$$anon$9.$anonfun$apply$7(Interpreters.scala:295)
        at cats.data.Kleisli.$anonfun$map$1(Kleisli.scala:19)
        at cats.data.KleisliFlatMap.$anonfun$tailRecM$2(Kleisli.scala:534)
        at cats.instances.TryInstances$$anon$1.tailRecM(try.scala:57)
        at cats.instances.TryInstances$$anon$1.tailRecM(try.scala:15)
        at cats.data.KleisliFlatMap.$anonfun$tailRecM$1(Kleisli.scala:534)
        at cats.data.Kleisli.$anonfun$map$1(Kleisli.scala:19)
        at cats.data.KleisliFlatMap.$anonfun$tailRecM$2(Kleisli.scala:534)
        at cats.instances.TryInstances$$anon$1.tailRecM(try.scala:57)
        at cats.instances.TryInstances$$anon$1.tailRecM(try.scala:15)
        at cats.data.KleisliFlatMap.$anonfun$tailRecM$1(Kleisli.scala:534)
        at github4s.Github$GithubIOSyntaxEither.exec(Github.scala:62)
        at sbtorgpolicies.github.syntax$GHResponseOps.execE(syntax.scala:51)
        ... 19 more
```

I found https://github.com/47deg/sbt-org-policies/issues/388#issuecomment-437045396, which was largely unhelpful other than to suggest that perhaps despite supplying the token, it doesn't work as advertised (possibly in my SSO environment).

Any assistance would be appreciated!
Add support for endpoint `/user/repos` as described in https://developer.github.com/v3/repos/#list-your-repositories .

- Fixes issue #255 
In `listUserRepos` the API called is `users/$user/repos`. This seems to be the incorrect endpoint and be `/user/repos`

`listUserRepos` is documented to have a type parameter that can take the values "all", "public", "private",
   "forks", "sources" or "member" which seems to fit more or less with `/user/repos`. On the other hand, `users/$user/repos` does not even has the value `private` or `public` for the type. I guess there is a problem with the API being called.


#248 
<!--- Provide a general summary of your changes in the Title above -->
## Description
<!--- Describe your changes in detail -->
Adds ability to create a milestone using v3 API

## Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
- add functionality to create milestones so that sprints can be modeled with milestones at regular intervals
<!--- If it fixes an open issue, please link to the issue here. -->

## How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

## Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [X] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

## Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My code follows the code style of this project.
- [X] My change requires a change to the documentation.
- [ ] I have updated the documentation accordingly.
- [X] I have read the **CONTRIBUTING** document.
- [ ] I have added tests to cover my changes.
- [ ] All new and existing tests passed.
<!--- Provide a general summary of the issue in the Title above -->
Add milestone create functionality
## Detailed Description
<!--- Provide a detailed description of the change or addition you are proposing -->
https://developer.github.com/v3/issues/milestones/#create-a-milestone
## Context
<!--- Why is this change important to you? How would you use it? -->
<!--- How can it benefit other users? -->
- automate milestone creation
## Possible Implementation
<!--- Not obligatory, but suggest an idea for implementing addition or change -->
- use same free algebra as other api resources


Adds the create a fork op. But when I try to write some tests for this pr, it did't work...
I don't have too much knowledge working with cats, but I'm developing a pull request for creating webhooks. 
While I'm developing in a fork, and the process of reviewing/merging/releasing my PR is ongoing, I'd like to temporarily publish my custom version to Bintray.

I've followed https://github.com/sbt/sbt-bintray instructions but still see two issues:
- added `licenses` are ignored (worked around by setting `bintrayOmitLicense := true`)
- still `sbt publish` tries to publish to oss.sonatype.org, ignoring bintray settings.

_build.sbt_ looks complicated and it seems that temporarily added bintray settings are overwritten at the end.