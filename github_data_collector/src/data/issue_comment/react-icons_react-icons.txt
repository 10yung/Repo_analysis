When I trying to compile the app everytime I get this error even if all the packages are updated and exist. How can I solve this problem ?

**Here is my component**
```
import React from 'react'
import styled from 'styled-components'
import Link from 'next/link'
import { IconContext } from 'react-icons';
import {FiGrid} from 'react-icons/fi'
import {FaShoppingBag, FaWallet, FaUser} from 'react-icons/fa'
import {IoLogoGameControllerB} from 'react-icons/io'

const ListContainer = styled.ul `
    list-style-type: none;
    margin: 0;
    padding: 0;
    width: 100%;
    background-color: rgb(28,28,30);
`;

const ListItem = styled.li `
    display: inline-block;
    padding: 30px;
   
`;


const FooterMenu = () => {
    return(
        <IconContext.Provider value = {{color: "#8e8e93", size: "2.5em" }}>
        <ListContainer>
            <ListItem>
                <Link href="/games" as="/games">
                        <FiGrid height = '21em' width = '21em'/>
                </Link>
            </ListItem>
            <ListItem>
                <Link href="/games" as="/games">
                        <FaShoppingBag/>
                </Link>
            </ListItem>
            <ListItem>
                <Link href="/games" as="/games">
                        <IoLogoGameControllerB/>
                </Link>
            </ListItem>
            <ListItem>
                <Link href="/games" as="/games">
                        <FaWallet/>
                </Link>
            </ListItem>
            <ListItem>
                <Link href="/games" as="/games">
                        <FaUser/>
                </Link>
            </ListItem>
        </ListContainer>
        </IconContext.Provider>
    )
}

export default FooterMenu;
```

**My package.json file**
```
{
  "name": "custom-server-express",
  "version": "1.0.0",
  "scripts": {
    "dev": "node server.js",
    "build": "next build",
    "start": "cross-env NODE_ENV=production node server.js"
  },
  "dependencies": {
    "@zeit/next-css": "^1.0.1",
    "axios": "^0.19.1",
    "babel-plugin-styled-components": "^1.10.6",
    "bootstrap": "^4.4.1",
    "cross-env": "^5.2.0",
    "express": "^4.14.0",
    "express-session": "^1.17.0",
    "imagemin-optipng": "^7.1.0",
    "next": "^9.1.6",
    "next-compose-plugins": "^2.2.0",
    "next-images": "^1.3.0",
    "next-optimized-images": "^2.5.4",
    "react": "^16.12.0",
    "react-bootstrap": "^1.0.0-beta.16",
    "react-dom": "^16.12.0",
    "react-icons": "^3.8.0",
    "react-responsive-carousel": "^3.1.51",
    "styled-components": "^4.4.1"
  }
}
```



**Additional Note**
I always get this error when I added the IconContext.Provider tag.

**Errors**
```
Error: Cannot find module '/home/aziz/Desktop/testapp/node_modules/react-icons/lib'. Please verify that the package.json has a valid "main" entry
    at tryPackage (internal/modules/cjs/loader.js:297:19)
    at Function.Module._findPath (internal/modules/cjs/loader.js:528:18)
    at Function.Module._resolveFilename (internal/modules/cjs/loader.js:784:27)
    at Function.Module._load (internal/modules/cjs/loader.js:690:27)
    at Module.require (internal/modules/cjs/loader.js:852:19)
    at require (internal/modules/cjs/helpers.js:74:18)
    at Object.react-icons (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:2515:18)
    at __webpack_require__ (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:23:31)
    at Module../pages/components/FooterMenu.js (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:2070:69)
    at __webpack_require__ (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:23:31)
    at Module../pages/HomePageContainer.js (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:1925:80)
    at __webpack_require__ (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:23:31)
    at Module../pages/index.js (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:2276:76)
    at __webpack_require__ (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:23:31)
    at Object.3 (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:2338:18)
    at __webpack_require__ (/home/aziz/Desktop/testapp/.next/server/static/development/pages/index.js:23:31) {
  code: 'MODULE_NOT_FOUND',
  path: '/home/aziz/Desktop/testapp/node_modules/react-icons/package.json',
  requestPath: 'react-icons'
}

```



**Describe the bug**
I wanted to add [Predix Design System](https://www.predix-ui.com/#/elements/px-icon-set) icons, but have run into problems because those icons are all stroke-based, and those types of icons are either render incorrectly, do not render at all, or even cause a crash in some cases. It appears that all currently available icons in this package are fill-based.

**Minimal sample repository**
https://github.com/predixdesignsystem/px-icon-set

**Un-Expected behavior** and **Screenshots**
A simple SVG icon like this:

<img width="870" alt="ai-svg" src="https://user-images.githubusercontent.com/12632548/72226379-75eebe80-355e-11ea-96d8-1508af409555.png">

illustrates the problems. Adobe Illustrator can export this as an SVG file using any of these three options:

- Inline style:
```
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.18 21.91">
  <title>blue-rect-style</title>
  <rect x="0.5" y="0.5" width="22.18" height="20.91" style="fill: none;stroke: #00007f;stroke-linejoin: round"/>
</svg>
```
- Internal CSS:
```
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.18 21.91">
  <defs>
    <style>
      .cls-1 {
        fill: none;
        stroke: #00007f;
        stroke-linejoin: round;
      }
    </style>
  </defs>
  <title>a-blue-rect-stylesheet</title>
  <rect class="cls-1" x="0.5" y="0.5" width="22.18" height="20.91"/>
</svg>
```
- Presentation Attributes:
```
<svg id="Layer_1" data-name="Layer 1" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 23.18 21.91">
  <title>blue-rect-presentation-attributes</title>
  <rect x="0.5" y="0.5" width="22.18" height="20.91" fill="none" stroke="#00007f" stroke-linejoin="round"/>
</svg>
```

The first one causes the Preview site to crash with the following error:

```
Uncaught Error: The `style` prop expects a mapping from style properties to values, not a string. For example, style={{marginRight: spacing + 'em'}} when using JSX.
```

The other two options render incorrectly or not at all (I placed the AI-exported SVGs with **Typeicons** and rebuilt the app and then copied the new build to the **preview** folder and ran the Preview site):

<img width="207" alt="incorrect-svg-rendering" src="https://user-images.githubusercontent.com/12632548/72226496-cc103180-355f-11ea-9c4c-1c9ccaeca719.png">

When I inspect the generated SVG elements for "Internal CSS" icon I see this:
```
<svg
  stroke="currentColor"
  fill="currentColor" <== forcing the fill where should be none ðŸ˜ 
  stroke-width="0"  <== removing strokes ðŸ˜ 
  version="1.1"
  id="Layer_1"
  x="0px"
  y="0px"
  viewBox="0 0 32 32"
  height="1em"
  width="1em"
  xmlns="http://www.w3.org/2000/svg"
>
  <rect x="5.06" y="5.55" width="22.18" height="20.91"></rect>
</svg>
```
note that the `<style>` tag is gone as well as the `class` attribute from the `<rect>`!

and for "Presentation Attributes" one:
```
<svg
  stroke="currentColor"
  fill="currentColor"
  stroke-width="0"
  id="Layer_1"
  dataName="Layer 1"
  viewBox="0 0 23.18 21.91"
  height="1em"
  width="1em"
  xmlns="http://www.w3.org/2000/svg"
>
  <title></title> <== title content is gone ðŸ˜§
  <rect
    x="0.5"
    y="0.5"
    width="22.18"
    height="20.91"
    fill="none"
    stroke="#00007f"
    stroke-linejoin="round"
  ></rect>
</svg>
```

In the latter case the fill is specified explicitly by an attribute so it overrides `fill="currentColor"`, but the stoke is gone because it was not specified explicitly. Adobe Illustrator (as well as other tools I tried) relies on default stroke width of "1" per SVG specs, so if it is not set to be a _thicker_ stroke when the icon is designed, the `stroke-width` attribute will not be exported.

**Desktop (please complete the following information):**

 - Device: [MBP]
 - OS: [macOS Catalina]
 - Browser [chrome]
 - Version [79.0.3945.117]

**Additional context**
It appears that the following pieces of code are to blame:
**packages/react-icons/scripts/build.js**:
```
// 1. remove class attr
...
.filter(
        name =>
          ![
            "class",
...
.filter((_, e) => e.tagName && !["style"].includes(e.tagName))
```
**packages/react-icons/src/iconBase.tsx**:
```
<svg
        stroke="currentColor"
        fill="currentColor"
        strokeWidth="0"
```
What were the reasons for removing the `class` attribute, and forcing fill and stroke attributes like that?

P.S. I have a PR ready, but first wanted to make sure it will not break something I am not aware of.
P.P.S. This might be similar to issue #258 (Add line-awesome)
How often to you update react-icons to pull in new icons that may have been added?  For example, here is a free font awesome icon that you all are not currently pulling in that I would like to use via react-icons:

https://fontawesome.com/icons/caravan?style=solid

Closes #267 

![Screenshot 2019-12-30 at 1 20 58 AM](https://user-images.githubusercontent.com/19371989/71560295-12b35580-2aa3-11ea-8544-a17ad41c4835.png)
Add flat color icons as per #263 

Closes #263 

**Note:** I was unable to get the `multiColor: true` flag to work in my local, but perhaps that is due to my lack of knowledge of how to do so. Please advise if my changes are insufficient @cardimajs
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/react-icons/react-icons/network/alerts).

</details>
How complex would it be to add https://css.gg to the available icons?

It is MIT licensed :)
**Describe the bug**
When I use `AiOutlinePlus`, the react warns that the svg contais a `pId` tag that it does not recognize.

**Minimal sample repository**
https://codesandbox.io/embed/objective-chaum-g0mw7?fontsize=14&hidenavigation=1&theme=dark

**Expected behavior**
This error/warning doesn't show.

**Desktop (please complete the following information):**
 - Device: PC
 - OS: Ubuntu
 - Browser chromium, firefox
 - Version: chromion 78, firefox 71

**Additional context**

Error message
```
Warning: React does not recognize the `pId` prop on a DOM element. If you intentionally want it to appear in the DOM as a custom attribute, spell it as lowercase `pid` instead. If you accidentally passed it from a parent component, remove it from the DOM element.
    in path (created by AiOutlinePlus)
    in svg (created by Context.Consumer)
    in IconBase (created by AiOutlinePlus)
    in AiOutlinePlus (at src/index.tsx:11)
    in div (at src/index.tsx:10)
    in App (at src/index.tsx:18)
```
Hello!

Thank you for creating and maintaining this project, I find it extremely valuable. This PR _should_ be mergeable as-is, but if not, I'd love to know of any other things that need to be done when adding an icon library. I have:

- Added the submodule for [Bootstrap Icons](https://github.com/twbs/icons)
- Updated the manifest at `packages/react-icons/src/icons/index.js` and included the required glob filters for the `reverse` and `fill` variants
- Updated the .gitignore for the built icons to include `/bs/`
- Symlinked the forked react-icons library inside of `package/preview/node_modules` and verified that all the new icons appear properly
- Bonus: fixed a preview/docs site issue that's bugged me for a while - sorted the sidebar navigation items :)

Thanks again!

PS: If the process I just followed is correct (or if not, and you let me know what's missing), I'd be happy to write up a brief contributing doc for future contributors. Just let me know!
**Describe the bug**
Typing "Fa" followed by the letter "U" on the search box will crash the demo website ðŸ¤”

**Expected behavior**
Being able to type "FaU" ?

