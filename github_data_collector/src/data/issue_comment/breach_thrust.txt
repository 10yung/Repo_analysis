Moved closing Go code ticks to apply formatting.
i've downloaded Version '0.7.6' but when selecting it in the Finder and using 'Get Info' it shows Version '0.7.0'

fixed Go formatting

Really wanted to use this but I noticed it hasn't been touched in 2yrs.
Has this project been abandoned?
## Flaw in Go Documentation

This could be old documentation from an older version, but it no longer works and I'm including the reason and solution:
## From the README.md

---

First download with `go get -u github.com/miketheprogrammer/go-thrust/`

``` Go
package main

import (
    "github.com/miketheprogrammer/go-thrust/dispatcher"
    "github.com/miketheprogrammer/go-thrust/spawn"
    "github.com/miketheprogrammer/go-thrust/window"
)

func main() {
    spawn.Run()
    thrustWindow := window.NewWindow("http://breach.cc/", nil)
    thrustWindow.Show()
    thrustWindow.Maximize()
    thrustWindow.Focus()
    dispatcher.RunLoop()
}
```

---
## Problem

``` Go
thrustWindow := window.NewWindow("http://breach.cc/", nil)
```

window.NewWindow() does not accept string type for the first parameter, but a new struct: "Options"

window.go

``` Go
type Options struct {
    RootUrl  string
    Size     SizeHW
    Title    string
    IconPath string
    HasFrame bool
    Session  *session.Session
}
```

commands.go

``` Go
type SizeHW struct {
    Width  uint `json:"width,omitempty"`
    Height uint `json:"height,omitempty"`
}
```

By providing a struct for window.NewWindow() you can solve this issue.
## Example Solution

``` Go
import (
    "github.com/miketheprogrammer/go-thrust/lib/dispatcher"
    "github.com/miketheprogrammer/go-thrust/lib/spawn"
    "github.com/miketheprogrammer/go-thrust/lib/bindings/window"
    "github.com/miketheprogrammer/go-thrust/lib/commands" // NEW: Required struct SizeHW
)

func main() {
    spawn.Run()
    //thrustWindow := window.NewWindow("http://breach.cc/", nil) // OLD
    thrustSize := commands.SizeHW{Width:1024, Height: 768} // NEW: SizeHW struct
    thrustOptions := window.Options{RootUrl:"http://www.google.com/", Size: thrustSize} // NEW: Options struct
    thrustWindow := window.NewWindow(thrustOptions) // NEW: Using the options
    thrustWindow.Show()
    thrustWindow.Maximize()
    thrustWindow.Focus()
    dispatcher.RunLoop()
}
```

This is tested under Windows 10.

Can someone push me in the right direction why my build fails?

I tried:
python scripts/bootstrap.py
python scripts/update.py
python scripts/build.py

Attachment:
[build.txt](https://github.com/breach/thrust/files/279765/build.txt)

Creating an innovative browser with thrust would be great, but some extensions are really needed.

Would it possible to access the Chrome store and allow installing extensions one day ?

I was investigating using Thrust as a replacement for a utility that we built in Qt using the QWebView. I'm not sure if I'm overlooking something, but is it possible to interact with the Javascript engine from the node.js javascript?

I'm trying to avoid rewriting large portions of this, so I'm battling issues now where all of the code/logic is in the C++, and we're basically just using the QWebView to render HTML.

To be more specific, it would be great if something like this could be done:

``` javascript
require("node-thrust")(function(err, api) { 
    window = api.window({ root_url: "/index.html" });
    window.show();
    ...
    window.on("load", function(err, ...){
        ...
        $(this).executeScript("alert('Hi');");
    });
});

```

I take it this is not possible to do with Thrust? I would need to modify all of our files to utilize the webview tags?

The file input field still returns a fakepath which makes it hard to implement a proper file open dialog. Is this intentionally?

I'm wondering what the best practice for a file open dialog would look like (apart from uploading the file). Could you give any recommendation here?
