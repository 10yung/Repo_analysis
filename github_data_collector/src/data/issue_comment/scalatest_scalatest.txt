In your [3.1.0 release note](http://www.scalatest.org/release_notes/3.1.0), you mentioned that Dotty is supported. However, I did not find any tutorials on how to get it to work.

I'm using sbt and I tried this from the Dotty documentation, 
```scala
libraryDependencies += ("org.scalatest" %% "scalatest" % "3.1.0" % "test").withDottyCompat(scalaVersion.value),
```

but it does not work.

Can I get any help? Thanks!
Port over cached thread pool changes in Framework from 3.0.x.
Port over cached thread pool changes in Framework from 3.0.x.
In version 3.0.8, the `-PC` argument as described in http://doc.scalatest.org/3.0.8/org/scalatest/tools/Runner$.html and https://github.com/scalatest/scalatest/releases/tag/release-3.0.5 would use a cached thread pool (see https://github.com/scalatest/scalatest/blob/release-3.0.8/scalatest/src/main/scala/org/scalatest/tools/Framework.scala#L689) due to the pool size being -1.

Version 3.1.0 introduced a regression where a fixed thread pool is used instead of a cached thread pool (see https://github.com/scalatest/scalatest/blob/release-3.1.0/scalatest/src/main/scala/org/scalatest/tools/Framework.scala#L701). 

Since, Java SE 7 https://docs.oracle.com/en/java/javase/13/docs/api/java.base/java/util/concurrent/Executors.html#newFixedThreadPool(int) requires the thread argument to be > 0.


use String#linesIterator, since Java stdlib now has String#lines
Trying out travis to build for js, native and dotty.
sbt:root> project scalatestDotty
[info] Set current project to scalatestDotty (in build file:/Users/clint/workspaces/scalatest/)
sbt:scalatestDotty> package
Generated /Users/clint/workspaces/scalatest/scalatest.dotty/target/scala-0.21/src_managed/main/org/scalatest/ConfigMap.scala
Generated /Users/clint/workspaces/scalatest/scalactic.dotty/target/scala-0.21/src_managed/main/org/scalactic/Every.scala
Generated /Users/clint/workspaces/scalatest/scalactic.dotty/target/scala-0.21/src_managed/main/org/scalactic/ColCompatHelper.scala
Generated /Users/clint/workspaces/scalatest/scalactic.dotty/target/scala-0.21/src_managed/main/org/scalactic/ArrayHelper.scala
[info] Compiling 137 Scala sources to /Users/clint/workspaces/scalatest/scalactic.dotty/target/scala-0.21/classes ...
[error] -- [E007] Type Mismatch Error: /Users/clint/workspaces/scalatest/scalactic.dotty/src/main/scala/org/scalactic/anyvals/NumericString.scala:1541:4 
[error] 1541 |    value.lines
[error]      |    ^^^^^^^^^^^
[error]      |    Found:    java.util.stream.Stream[String]
[error]      |    Required: Iterator[String]
[error] one error found
[error] (scalacticDotty / Compile / compileIncremental) Compilation failed
[error] Total time: 12 s, completed Jan 13, 2020, 3:55:56 PM
Bumped up sbt version to 1.3.6.
http://www.scalatest.org/user_guide/using_the_scalatest_maven_plugin has a option of using 
`suites` to Comma separated list of suites to be executed, as i could not find a do the opposite i.e to exclude some suites (apart from using tags and changing the sourcecode which is not favoured) raising this issue.
We have a test that is sometimes failing with a huge stack trace starting with:

```
sbt.ForkMain$ForkError: sbt.ForkMain$ForkError: java.lang.StackOverflowError: null
	at java.lang.Class.getDeclaredFields(Class.java:1915)
	at org.scalactic.source.ObjectMeta$$anon$1.privFields$lzycompute(ObjectMeta.scala:36)
```

complete stacktrace at https://gist.github.com/yanns/6bcd708be2e7bbf73655449548036efb