`patch_data(x, patch)`
Error in context_eval(join(src), private$context) : 
  TypeError: Cannot set property '14' of undefined
I am experiencing encoding problems which I believe are a combined issue of Windows and `render_diff`'s way of generating the html file. 

`render_diff` seems to be generating the html file by setting the encoding to utf-8 as standard. On windows machines, this does not seem to work, as the data written to the disk is encoded as ANSI. 

My workaround has been to change the encoding details in the html-file:

```
render_diff(changes, file = write_file, view = FALSE)

# reopen file and replace encoding details
x <- readLines(write_file)
y <- gsub( "<meta charset='utf-8'>", "<meta charset='ANSI'>", x )
cat(y, file=write_file, sep="\n")
```

While it works, it might be nice to have this fixed, since `daff` is very useful. I have not been able to identify the exact location of the bug, hence this description.

Here is an example on Windows (Daff v0.3.0):

```
df1 <- data.frame(x = "ä", y = "è")
df2 <- data.frame(x = "ö", y = "è")
diff <- diff_data(df1, df2)
render_diff(diff)
```
![image](https://user-images.githubusercontent.com/10722029/44407325-17d2cd00-a55e-11e8-888e-31c4aaab763d.png)



I found the following behavior surprising:

```r
library(daff)
example(diff_data)  # creates the "dd" patch

save(dd, file = "patch_loading.Rdata")
load("patch_loading.Rdata")

dd
## Error in context_eval(join(src), private$context) : 
##  Context has been disposed.
```
Almost all R objects can be safely written to Rdata or RDS files.  Is this failure expected behavior?

If this is intended, I can contribute a documentation patch to `diff_data` and `write_diff` so people at least know to expect this -- it caught me off guard since R objects are usually self-contained and Rdata/RDS files are a big part of my workflow.
As discussed with @edwindj. Daff now Enhances 'lumberjack' I implemented it as an R6 object, which meas an extra 'Imports'. Alternatives are Reference method or I could just dress up an environment. Thanks for considering.
Hi,

sometimes it's just rounding issue and should be ignored.

something like below:
https://github.com/alexsanjoseph/compareDF

[objectdiff](https://github.com/robertzk/objectdiff)

Wonder if there's anything we can collaborate on?

Hi, 

This is not really a bug, but a feature request: is it able to detect class changes?

``` r
> y <- iris[1:3,]
> x <- y
> x$Sepal.Width <- as.character(x$Sepal.Width)
> x$Sepal.Length <- as.factor(x$Sepal.Length)
> class(x[, 1])
[1] "factor"
> class(x[, 2])
[1] "character"
> class(x[, 3])
[1] "numeric"
> render_diff(diff_data(y, x))
```

<table>
<tr><th>@@</th><th>Sepal.Length</th><th>Sepal.Width</th><th>...</th></tr>
</table>


Thanks!
David

An `htmlwidgets` version of daff will allow for `data_diff` in shiny and rmarkdown.

The original `daff` is written in the programming language Haxe, which can target many programming languages.

Currently the R package `daff` uses the javascript version of daff. Haxe however can also generate C++, so the lib may also be implemented using the C++ target. I don't know if/how the C++ version of daff should compile as a R package: to be found out. 
