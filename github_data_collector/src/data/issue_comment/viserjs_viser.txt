
激活区域向外移动，原位置仍有一个该块在，粘连在一起
操作步骤：刷新->页面A->页面pie（出现这种情况）
                 页面pie刷新或直接进入页面pie（不会出现这种情况）

![pie_pic](https://user-images.githubusercontent.com/41177697/72509957-887d3680-3883-11ea-822a-0d0d5f3c7430.png)

### demo
`<template>
<v-chart :forceFit="true" :height="height" :data="data" :scale="scale">
    <v-tooltip :showTitle="false" />
    <v-axis />
    <v-legend :position="position" :offsetX="offsetX" :useHtml="true" :containerTpl="containerTplLegend" :itemTpl="itemTplLegend" />
    <v-pie position="percent" :color="color" :vStyle="pieStyle" />
    <v-coord type="theta" />
  </v-chart>
</template>`

`<script>
const DataSet = require('@antv/data-set')

export default {
  props: {
    position: {
      type: String,
      default: 'bottom-center'
    },
    offsetX: {
      type: Number,
      default: 20
    },
    color: {
      type: Array,
      default: () => []
    },
    height: {
      type: Number,
      default: 400
    },
    dataSource: {
      type: Array,
      default: () => [{item: 'a', count: 330000.00},{item: 'b', count: 170000.00}]
    }
  },
  data() {
    return {
      scale: [{
        dataKey: 'percent',
        min: 0,
        formatter: '.0%'
      }],
      pieStyle: {
        stroke: '#fff',
        lineWidth: 1
      },
      containerTplLegend:`<div class="g2-legend"><table class="g2-legend-list"></table></div>`,
      itemTplLegend: (value, color, checked, index) => {
        const obj = this.data[index]
        const percent = (obj.percent * 100).toFixed(2) + '%'
        checked = checked ? 'checked' : 'unChecked'
        return `<tr class="g2-legend-list-item item-${index} ${checked}" data-value="${value}" data-color="${color}" style="display: block;">
          <td style="min-width: 100px; text-align: left;">
            <i class="g2-legend-marker" style="width:10px; height:10px; display:inline-block; padding-left:10px; background-color:${color}; margin-bottom: 3px;"></i>
            <span class="g2-legend-text" style="color: #666">${value}</span>
          </td>
          <td style="text-align: right;">${percent}</td>
          <td style="text-align: right; color: #666;padding-left:5px">${obj.count}</td>
        </tr>`
      }
    }
  },
  computed: {
    data() {
      let dv = new DataSet.View().source(this.dataSource)
      // 计算数据百分比
      dv.transform({
        type: 'percent',
        field: 'count',
        dimension: 'item',
        as: 'percent'
      })
      return dv.rows
    }
  }
}
</script>`

`
<style lang="scss">
.g2-legend-list-item {
  display: block !important;
  margin-right: 0 !important;
}
</style>`
直角坐标系，没有对x的 reflect

![7C69FB47-0C14-47F7-925B-13C43274BDE9](https://user-images.githubusercontent.com/54163491/72366126-a0927000-3734-11ea-9396-82d4cd398a56.png)
![2B89F7F2-28CB-4465-B6B2-B678889D7BC6](https://user-images.githubusercontent.com/54163491/72366109-940e1780-3734-11ea-84ce-f347652ff6bf.png)

需求：元素较多时，柱状图柱子空间不够，需要有个滚动条。查看了案例只看到缩略轴的，没有找到滚动条的api。
请问如何实现这个效果，谢谢！
效果展示：https://antv-g2plot.gitee.io/zh/examples/column/basic#column-scrollbar

![image](https://user-images.githubusercontent.com/23237686/71609058-78493400-2bc0-11ea-9ad4-eced5d425a55.png)

当数据项太多时下方最后一行数据被遮挡

我在组件上使用了height，但并不能解决这个问题，有什么解决办法吗？

- demo

```
<template>
  <div>
    <v-chart :forceFit="true" :height="height" :data="data">
      <v-tooltip />
      <v-axis />
      <v-legend />
        <v-stack-bar position="天*设备分析" color="eventName" />
    </v-chart>
  </div>
</template>

<script>
  const DataSet = require('@antv/data-set');

  const sourceData = [{"20191230":64,"eventName":"a测试测试测试测试"},{"20191230":34,"eventName":"guanbi"},{"20191230":13,"eventName":"tiaozhuantoutiaowenzhang"},{"20191230":14,"eventName":"16测试测试测试测试"},{"20191230":1,"eventName":"b测试测试测试测试"},{"20191230":3,"eventName":"15测试测试测试测试们"},{"20191230":175,"eventName":"c测试测试测试测试"},{"20191230":217,"eventName":"首页"},{"20191230":89,"eventName":"d测试测试测试测试"},{"20191230":1,"eventName":"14测试测试测试测试"},{"20191230":98,"eventName":"e测试测试测试测试"},{"20191230":46,"eventName":"13测试测试测试测试"},{"20191230":90,"eventName":"f测试测试测试测试"},{"20191230":7,"eventName":"12测试测试测试测试"},{"20191230":31,"eventName":"g测试测试测试测试"},{"20191230":15,"eventName":"11测试测试测试测试"},{"20191230":41,"eventName":"h测试测试测试测试"},{"20191230":14,"eventName":"10测试测试测试测试"},{"20191230":96,"eventName":"i测试测试测试测试"},{"20191230":1,"eventName":"测试测试测试测试"},{"20191230":13,"eventName":"j测试测试测试测试"},{"20191230":253,"eventName":"测试测试测试测试"},{"20191230":13,"eventName":"9测试测试测试测试"},{"20191230":84,"eventName":"测试测试测试测试"},{"20191230":1,"eventName":"8测试测试测试测试"},{"20191230":4,"eventName":"测试测试测试测试"},{"20191230":17,"eventName":"7测试测试测试测试"},{"20191230":116,"eventName":"测试测试测试测试"},{"20191230":14,"eventName":"6测试测试测试测试"},{"20191230":5,"eventName":"跳转帮助与反馈"},{"20191230":27,"eventName":"5测试测试测试测试"},{"20191230":1,"eventName":"测试测试测试测试3"},{"20191230":64,"eventName":"4测试测试测试测试"},{"20191230":36,"eventName":"全部视频2"},{"20191230":15,"eventName":"1测试测试测试测试"}];

  const dv = new DataSet.View().source(sourceData);
  dv.transform({
    type: 'fold',
    fields: ['20191230'],
     key: '天',
        value: '设备分析'
  });
  const data = dv.rows;

  export default {
    data() {
      return {
        data,
        height: 400,
      };
    }
  };
</script>
```
### 1.正常情况：
数据：
```json
// 预期数据
const expectData = [
  {value: 100, name: '展现'},
  {value: 80, name: '点击'},
  {value: 60, name: '访问'},
  {value: 40, name: '咨询'},
  {value: 30, name: '订单'}
];
// 实际数据
const actualData = [
  {value: 80, name: '展现'},
  {value: 50, name: '点击'},
  {value: 30, name: '访问'},
  {value: 10, name: '咨询'},
  {value: 5, name: '订单'},
];
```
效果：
![image](https://user-images.githubusercontent.com/42163284/71499336-02308e80-289b-11ea-8097-e3a72beb75ef.png)

### 2.异常情况
数据：
```json
// 预期数据
const expectData = [
  {value: 100, name: '展现'},
  {value: 80, name: '点击'},
  {value: 60, name: '访问'},
  {value: 40, name: '咨询'},
  {value: 30, name: '订单'},
];
// 实际数据
const actualData = [
  {value: 80, name: '展现'},
  {value: 80, name: '点击'},
  {value: 50, name: '访问'},
  {value: 50, name: '咨询'},
  {value: 5, name: '订单'},
];
```
效果：
![image](https://user-images.githubusercontent.com/42163284/71499353-0e1c5080-289b-11ea-8888-fbdd43cd2fd7.png)

> 这个时候的实际数据还是小于逾期数据的，但是这个显示感觉很不对。
如题，搜了一下api好像没有对应的api来实现
viser-vue版本2.4.7，vue版本2.6.11
使用[实时更新数据的折线图](https://viserjs.gitee.io/demo.html#/viser/others/line-chart-update-constantly)的代码，在chrome版本 78.0.3904.108（正式版本） （64 位）浏览器中内存泄漏。以下是内存快照图片：
![image](https://user-images.githubusercontent.com/34494887/70994242-bc403180-2108-11ea-9cb7-0ed2469e7606.png)

没有排序的效果：
![image](https://user-images.githubusercontent.com/18692675/70611278-e5ac1980-1c3f-11ea-8815-d26aacc001bd.png)


排序后的效果（排序操作：data = data.sort(compare); ）：
![image](https://user-images.githubusercontent.com/18692675/70611107-a251ab00-1c3f-11ea-88a9-9a246019406c.png)

代码如下：
```
import { Chart, Tooltip, Axis, Line, Point,Legend } from 'viser-react';
import * as React from 'react';

var data = [{"id":"120","ftime":"2019-11-16","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-07 23:44:23","end_time":null,"log_str":null,"create_time":"2019-11-07 23:44:23","update_time":"2019-11-07 23:44:23","cost_time":"444"},{"id":"120","ftime":"2019-11-14","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-07 23:44:23","end_time":null,"log_str":null,"create_time":"2019-11-07 23:44:23","update_time":"2019-11-07 23:44:23","cost_time":"44409"},{"id":"120","ftime":"2019-11-13","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-07 23:44:23","end_time":null,"log_str":null,"create_time":"2019-11-07 23:44:23","update_time":"2019-11-07 23:44:23","cost_time":"55555"},{"id":"120","ftime":"2019-11-06","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-07 23:44:23","end_time":null,"log_str":null,"create_time":"2019-11-07 23:44:23","update_time":"2019-11-07 23:44:23","cost_time":"3333"},{"id":"191","ftime":"2019-11-07","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"failed","start_time":"2019-11-08 20:13:26","end_time":"2019-11-08 20:13:26","log_str":"name db_cursor is not defined","create_time":"2019-11-08 20:13:26","update_time":"2019-11-08 20:13:26","cost_time":"0"},{"id":"659","ftime":"2019-11-08","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-09 20:35:33","end_time":"2019-11-09 21:02:53","log_str":"End","create_time":"2019-11-09 20:35:33","update_time":"2019-11-09 21:02:53","cost_time":"6720"},{"id":"750","ftime":"2019-11-09","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-10 22:05:02","end_time":"2019-11-10 22:06:07","log_str":"End","create_time":"2019-11-10 22:05:02","update_time":"2019-11-10 22:06:07","cost_time":"105"},{"id":"778","ftime":"2019-11-10","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-11 21:12:38","end_time":"2019-11-11 21:13:42","log_str":"End","create_time":"2019-11-11 21:12:38","update_time":"2019-11-11 21:13:42","cost_time":"104"},{"id":"789","ftime":"2019-11-11","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-12 17:13:29","end_time":"2019-11-12 17:17:19","log_str":"End","create_time":"2019-11-12 17:13:29","update_time":"2019-11-12 17:17:19","cost_time":"390"},{"id":"799","ftime":"2019-11-12","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"failed","start_time":"2019-11-13 10:07:57","end_time":"2019-11-13 12:38:35","log_str":"\u003C?xml version=1.0 encoding=utf-8 ?\u003E\n\u003CError\u003E\n\t\u003CCode\u003EInvalidAccessKeyId\u003C\/Code\u003E\n\t\u003CMessage\u003EThe Access Key Id you provided does not exist in our records\u003C\/Message\u003E\n\t\u003CResource\u003Ecaidc-test-1253961596.cos.ap-shanghai.myqcloud.com\/shuxun_m-uf626xj5wwy50exsap9h_system.raw\u003C\/Resource\u003E\n\t\u003CRequestId\u003ENWRjYjg4Y2JfM2RjNTFjMDlfZGQ1Zl8xMzgyMDk4\u003C\/RequestId\u003E\n\t\u003CTraceId\u003EOGVmYzZiMmQzYjA2OWNhODk0NTRkMTBiOWVmMDAxODc0OWRkZjk0ZDM1NmI1M2E2MTRlY2MzZDhmNmI5MWI1OTQyYWVlY2QwZTk2MDVmZDQ3MmI2Y2I4ZmI5ZmM4ODFjZWEzNjIyNDdiZTcyYTgzMzlmMWEwYmU4YjI5MTMyMjk=\u003C\/TraceId\u003E\n\u003C\/Error\u003E\n\n","create_time":"2019-11-13 10:07:57","update_time":"2019-11-13 12:38:35","cost_time":"23078"},{"id":"850","ftime":"2019-11-13","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-14 19:13:00","end_time":null,"log_str":null,"create_time":"2019-11-14 19:13:00","update_time":"2019-11-14 19:13:00","cost_time":null},{"id":"866","ftime":"2019-11-14","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-15 17:51:55","end_time":null,"log_str":null,"create_time":"2019-11-15 17:51:55","update_time":"2019-11-15 17:51:55","cost_time":null},{"id":"882","ftime":"2019-11-15","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"failed","start_time":"2019-11-16 01:00:59","end_time":"2019-11-16 19:56:33","log_str":"\u003C?xml version=1.0 encoding=utf-8 ?\u003E\n\u003CError\u003E\n\t\u003CCode\u003EInvalidAccessKeyId\u003C\/Code\u003E\n\t\u003CMessage\u003EThe Access Key Id you provided does not exist in our records\u003C\/Message\u003E\n\t\u003CResource\u003Eyyncx-1254950508.cos.ap-guangzhou.myqcloud.com\/a.txt\u003C\/Resource\u003E\n\t\u003CRequestId\u003ENWRjZmUzZjFfMWFiMjk0MGFfNmQxMF9mZjYwZjM=\u003C\/RequestId\u003E\n\t\u003CTraceId\u003EOGVmYzZiMmQzYjA2OWNhODk0NTRkMTBiOWVmMDAxODc0OWRkZjk0ZDM1NmI1M2E2MTRlY2MzZDhmNmI5MWI1OTQyYWVlY2QwZTk2MDVmZDQ3MmI2Y2I4ZmI5ZmM4ODFjZWEzNjIyNDdiZTcyYTgzMzlmMWEwYmU4YjI5MTMyMjk=\u003C\/TraceId\u003E\n\u003C\/Error\u003E\n\n","create_time":"2019-11-16 01:00:59","update_time":"2019-11-16 19:56:33","cost_time":"185574"},{"id":"1005","ftime":"2019-11-16","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-17 19:19:33","end_time":null,"log_str":null,"create_time":"2019-11-17 19:19:33","update_time":"2019-11-17 19:19:33","cost_time":null},{"id":"1025","ftime":"2019-11-17","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-18 14:12:54","end_time":"2019-11-18 23:03:27","log_str":"End","create_time":"2019-11-18 14:12:54","update_time":"2019-11-18 23:03:27","cost_time":"89073"},{"id":"1038","ftime":"2019-11-18","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-19 03:43:14","end_time":"2019-11-19 13:12:29","log_str":"End","create_time":"2019-11-19 03:43:14","update_time":"2019-11-19 13:12:29","cost_time":"96915"},{"id":"1178","ftime":"2019-11-19","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-20 15:41:07","end_time":"2019-11-20 15:42:09","log_str":"End","create_time":"2019-11-20 15:41:07","update_time":"2019-11-20 15:42:09","cost_time":"102"},{"id":"1287","ftime":"2019-11-20","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-21 23:24:29","end_time":"2019-11-21 23:24:32","log_str":"End","create_time":"2019-11-21 23:24:29","update_time":"2019-11-21 23:24:32","cost_time":"3"},{"id":"1298","ftime":"2019-11-21","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-22 09:57:27","end_time":null,"log_str":null,"create_time":"2019-11-22 09:57:27","update_time":"2019-11-22 09:57:27","cost_time":null},{"id":"1320","ftime":"2019-11-22","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"failed","start_time":"2019-11-23 06:44:26","end_time":"2019-11-24 00:00:00","log_str":"\u003C?xml version=1.0 encoding=utf-8 ?\u003E\n\u003CError\u003E\n\t\u003CCode\u003EInvalidAccessKeyId\u003C\/Code\u003E\n\t\u003CMessage\u003EThe Access Key Id you provided does not exist in our records\u003C\/Message\u003E\n\t\u003CResource\u003Efiles-1255879464.cos.ap-guangzhou.myqcloud.com\/storage\/reports\/2015-08-22\/89C01350-E676-4EEC-8E9A-BF4A87BA0F1F.pdf\u003C\/Resource\u003E\n\t\u003CRequestId\u003ENWRkOTU3ODBfMTliYjk0MGFfMjI1NDVfMTc2ZDFlZg==\u003C\/RequestId\u003E\n\t\u003CTraceId\u003EOGVmYzZiMmQzYjA2OWNhODk0NTRkMTBiOWVmMDAxODc0OWRkZjk0ZDM1NmI1M2E2MTRlY2MzZDhmNmI5MWI1OTQyYWVlY2QwZTk2MDVmZDQ3MmI2Y2I4ZmI5ZmM4ODFjZWEzNjIyNDdiZTcyYTgzMzlmMWEwYmU4YjI5MTMyMjk=\u003C\/TraceId\u003E\n\u003C\/Error\u003E\n\n","create_time":"2019-11-23 06:44:26","update_time":"2019-11-24 00:00:00","cost_time":"935574"},{"id":"1329","ftime":"2019-11-23","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"failed","start_time":"2019-11-24 05:47:21","end_time":"2019-11-25 00:00:00","log_str":"\u003C?xml version=1.0 encoding=utf-8 ?\u003E\n\u003CError\u003E\n\t\u003CCode\u003EInvalidAccessKeyId\u003C\/Code\u003E\n\t\u003CMessage\u003EThe Access Key Id you provided does not exist in our records\u003C\/Message\u003E\n\t\u003CResource\u003Efiles-1255879464.cos.ap-guangzhou.myqcloud.com\/storage\/reports\/2016-12-13\/54C661E6-EA6D-4447-8003-F72D3FB76A4F.pdf\u003C\/Resource\u003E\n\t\u003CRequestId\u003ENWRkYWE5MDBfNGJiOTQwYV8xNzVkMF8xODcxNzMx\u003C\/RequestId\u003E\n\t\u003CTraceId\u003EOGVmYzZiMmQzYjA2OWNhODk0NTRkMTBiOWVmMDAxODc0OWRkZjk0ZDM1NmI1M2E2MTRlY2MzZDhmNmI5MWI1OTQyYWVlY2QwZTk2MDVmZDQ3MmI2Y2I4ZmI5ZmM4ODFjZWEzNjIyNDdiZTcyYTgzMzlmMWEwYmU4YjI5MTMyMjk=\u003C\/TraceId\u003E\n\u003C\/Error\u003E\n\n","create_time":"2019-11-24 05:47:21","update_time":"2019-11-25 00:00:00","cost_time":"945279"},{"id":"1394","ftime":"2019-11-24","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"finished","start_time":"2019-11-25 19:50:32","end_time":"2019-11-25 19:50:43","log_str":"End","create_time":"2019-11-25 19:50:32","update_time":"2019-11-25 19:50:43","cost_time":"11"},{"id":"1409","ftime":"2019-11-25","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-26 12:28:44","end_time":null,"log_str":null,"create_time":"2019-11-26 12:28:44","update_time":"2019-11-26 12:28:44","cost_time":null},{"id":"1421","ftime":"2019-11-26","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-27 09:46:52","end_time":null,"log_str":null,"create_time":"2019-11-27 09:46:52","update_time":"2019-11-27 09:46:52","cost_time":null},{"id":"1441","ftime":"2019-11-27","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-28 11:49:48","end_time":null,"log_str":null,"create_time":"2019-11-28 11:49:48","update_time":"2019-11-28 11:49:48","cost_time":null},{"id":"1473","ftime":"2019-11-28","busi_name":"cos_scan.py","busi_owner":"xiaobozhao","state":"running","start_time":"2019-11-29 09:21:18","end_time":null,"log_str":null,"create_time":"2019-11-29 09:21:18","update_time":"2019-11-29 09:21:18","cost_time":null}];



var compare = function (obj1, obj2) {
    var val1 = parseInt(obj1.cost_time);
    var val2 = parseInt(obj2.cost_time);
    if (val1 < val2) {
        return -1;
    } else if (val1 > val2) {
        return 1;
    } else {
        return 0;
    }            
}

data = data.sort(compare)

const scale = [{
  dataKey: 'cost_time',
  min: 0,
  max: 1000000
}];

export default class App extends React.Component {
  render() {
    return (
      <Chart forceFit height={400} data={data} scale={scale}>
        <Tooltip />
        <Axis />
        <Legend />
        <Line position="ftime*cost_time" color="busi_name"/>
        <Point position="ftime*cost_time" shape="circle" color="busi_name"/>
      </Chart>
    );
  }
}
```