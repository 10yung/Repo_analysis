Main Thread Checker: UI API called on a background thread: -[UIApplication applicationState]
PID: 370, TID: 69204, Thread name: com.apple.CoreMotion.MotionThread, Queue name: com.apple.root.default-qos.overcommit, QoS: 0

The main thread checker of Xcode 10.2 shows above warning message.

            CustomIOSAlertView * alertView = [[CustomIOSAlertView alloc] init];
            alertView.delegate=self;
            
            alertView.useMotionEffects=YES;
            [alertView setButtonTitles:[NSMutableArray arrayWithObjects:@"X", nil]];
            [alertView setContainerView:MyView];
            
            [alertView show];

Not showing popup.
replace the line in show function
``` [[[[UIApplication sharedApplication] windows] firstObject] addSubview:self];```
to
```[[[UIApplication sharedApplication] keyWindow] addSubview:self];```
Hi,
  
    Can you provide this project in Swift 3


Thanks

方法都走了 ，就是框弹不出来。。。。。
I have a really weird issue, I've spent all evening trying to figure out why my custom alertviews aren't showing.

I've narrowed it down to this one line :
[GADMobileAds configureWithApplicationID:GAD_AppID];

Which is used by google admob to start the process and of issuing ads within app delegate.

I don't use ads on the view where I have the problems (I don't use alertViews anywhere else).

I'm guessing it must be capturing some kind of event.

Any suggestions welcome ?

Thanks in advance.

Jules 

Hi,

I'm using a xib file as the containerView for the CustomIOSAlertView. It has an IBOutlet UILabel of which I want to set the text before showing the AlertView. 
Thusfar I cannot get it to work: The view doesn't recognize the selector setLabelText: I think because the -awakeFromNib is never called ? 

Is there an example of this working somewhere? how could I achieve this? 
code:

```
ConfirmEmailAlertView *emailAlertView = [[ConfirmEmailAlertView alloc] init];
emailAlertView.layer.cornerRadius = 7;
emailAlertView.layer.masksToBounds = YES;
[emailAlertView setEmailtext:self.txtEmail.text];
CustomIOSAlertView *emailAlert = [[CustomIOSAlertView alloc] init];
[emailAlert setContainerView: emailAlert];
emailAlert.alpha = 0.95;
[emailAlert setButtonTitles:[NSMutableArray arrayWithObjects:@"NO", @"YES", nil]];
[emailAlert setDelegate:self];

[emailAlert show];
```

THNX !

Alert goes down when the lifecycle application method is called, and then user can't close alert

<img width="432" alt="2016-08-19 14 57 34" src="https://cloud.githubusercontent.com/assets/6170103/17809148/5341fe06-661d-11e6-8a2e-72f57d831023.png">
<img width="432" alt="2016-08-19 14 57 43" src="https://cloud.githubusercontent.com/assets/6170103/17809147/531b60ca-661d-11e6-97b3-037ee806f008.png">

I tried CustomIOS7AlertView (using now) and CustomIOSAlertView and in both cases the non-alert elements are accessible when I believe UIAlertController ensures that non-alert elements are not accessible via voiceover (you cannot touch or scroll to any elements outside the alert via voiceover). If you haven't tried VoiceOver before, you can ask Siri "Turn on VoiceOver" or turn it on in Settings > Accessibility > Voiceover; there is also a triple-tap home button shortcut you can enable in the same settings pane.

With CustomIOS7AlertView, the alert elements are mixed in with the other elements as you scroll through. With CustomIOSAlertView, the alert elements cannot be accessed by scrolling - interestingly you can tap alert elements directly to access them, and then you cannot access the non-alert elements, but you can tap outside the alert to get back to them again .

Ideally if the alert is displayed, the only accessible elements should be those inside the alert, until it is dismissed. It seems with VoiceOver off, I can't tap on anything outside the alert, so maybe it's just a matter of setting accessibilityElementsHidden https://developer.apple.com/library/ios/documentation/UIKit/Reference/UIAccessibility_Protocol/#//apple_ref/occ/instp/NSObject/accessibilityElementsHidden on the right element? I'm not sure how UIAlertController does it...
