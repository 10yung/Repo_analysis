Started looking at typescript strictNullChecks fixes and found news panel on home dashboard used the none summary url 

<!--

Thank you for sending a pull request! Here are some tips:

1. If this is your first time, please read our contribution guide at https://github.com/grafana/grafana/blob/master/CONTRIBUTING.md

2. Ensure you include and run the appropriate tests as part of your Pull Request.

3. In a new feature or configuration option, an update to the documentation is necessary. Everything related to the documentation is under the docs folder in the root of the repository.

4. If the Pull Request is a work in progress, make use of GitHub's "Draft PR" feature and mark it as such.

5. If you can not merge your Pull Request due to a merge conflict, Rebase it. This gets it in sync with the master branch.

6. Name your PR as "<FeatureArea>: Describe your change", e.g. Alerting: Prevent race condition. If it's a fix or feature relevant for the changelog describe the user impact in the title. The PR title is used to auto-generate the changelog for issues marked with the "add to changelog" label.

-->

**What this PR does / why we need it**:

This PR replicates (most of) the behavior of `aws-sdk-go` when fetching a WebIdentityRole such as they are used in IAM roles for service account in EKS.


The reason for the "(most of)" qualifier is that this will only read the environment variables, so if e.g a `role_session_name` is configured in a configuration file somewhere it won't be picked up. I suspect this won't be much of a problem since all documentation and whatnot for EKS IAM roles for Service Accounts exclusively uses those environment variables.

As discussed in the issue the "proper" way to fix this would probably be to always use the default credentials chain unless a specific way is specified in which case *only* that way should be used.

I've tried this out in an EKS cluster with a standard setup. In other words I've created a deployment and a service account, linked them together, annotated the service account with `eks.amazonaws.com/role-arn` and added the necessary trust policies on the role and I can confirm it manages to find the credentials.

**Which issue(s) this PR fixes**:

Fix #20473

<!--

* Automatically closes linked issue when the Pull Request is merged.

Usage: "Fixes #<issue number>", or "Fixes (paste link of issue)"

-->
<!--
Please use this template while reporting a bug and provide as much info as possible.
Questions should be posted to https://community.grafana.com
Use query inspector to troubleshoot issues: https://community.grafana.com/t/using-grafanas-query-inspector-to-troubleshoot-issues/2630
-->

**What happened**:
I'm trying to pipe some logs from a plain text file to grafana so i can save it as a dashboard and users can view it, i created a script that insert the data into influx DB with the required tags and fields as stated in the tutorials, now i can see the data inside influx DB and i can query them, when i go and create a dashboard and choose influx db i cannot find the button that switch to logs mode so i can show the data in logs format, i tried to put the visualization as "logs", but still i cannot see any data.

What makes me wonder is that when i go to "Explore mode" and choose the logs mode i can see all the data and query them, but i cannot save the explore mode into dashboard too. 

So to summarize, there is no button to switch to logs mode when choosing influx as DB in dashboard not in explore.

**Explore Mode:**
![Capture](https://user-images.githubusercontent.com/7920707/72662697-b59c2700-39f2-11ea-9c64-ab1efcc80754.PNG)

**Dashboard Mode:**
![Capture2](https://user-images.githubusercontent.com/7920707/72662707-f431e180-39f2-11ea-8274-56f423e071e0.PNG)

Thanks.
**What you expected to happen**:
So to summarize, there is no button to switch to logs mode when choosing influx as DB in dashboard not in explore.


**How to reproduce it (as minimally and precisely as possible)**:

**Anything else we need to know?**:

**Environment**:
- Grafana version: 6.5.2
- Data source type & version: Influx DB Version 
- OS Grafana is installed on: Centos 7
- User OS & Browser: Firefox that comes preinstalled with Centos 7
- Grafana plugins: N/A
- Others:

**What happened**:

I'm using the cloudwatch plugin. I have a variable setup that pulls instance IDs. I have the variable hidden, and I expect it to default to "all" values. When I use this variable in a very simple query the commas are not removed/split and replaced with `OR`.

![Screen Shot 2020-01-17 at 4 10 28 PM](https://user-images.githubusercontent.com/2402929/72654792-f1c57e00-3945-11ea-813d-562d9aa49fcf.png)


**What you expected to happen**:

Instead of creating a valid query it queried `{i-instance1,i-instance2, etc}`. I expected the variable values to be split and `OR`'d together. 

![Screen Shot 2020-01-17 at 4 16 46 PM](https://user-images.githubusercontent.com/2402929/72654730-a6ab6b00-3945-11ea-938a-fafd7ee11c8c.png)

**How to reproduce it (as minimally and precisely as possible)**:

The two screenshots above should provide ample reproducibility. The kicker is how to workaround the problem. If you edit the variable and enable "multi value" everything begins to work as expected. This took me a long time to figure out, and if nothing else, I hope this issue saves someone else an hour.

Shot of it working after turning on multi value:

![Screen Shot 2020-01-17 at 4 21 08 PM](https://user-images.githubusercontent.com/2402929/72654689-7b288080-3945-11ea-9580-63b3fd53986e.png)


**Anything else we need to know?**:

**Environment**:
- Grafana version: 6.5.3
- Data source type & version: CloudWatch (latest w/ 6.5.3)
- OS Grafana is installed on: Docker on Fargate/ECS
- User OS & Browser: Chrome and Safari were tested
- Grafana plugins: Quite a few..... If you want them I can provide them. Everything else is working great.

<!--
Please use this template while reporting a bug and provide as much info as possible.
Questions should be posted to https://community.grafana.com
Use query inspector to troubleshoot issues: https://community.grafana.com/t/using-grafanas-query-inspector-to-troubleshoot-issues/2630
-->

**What happened**:
I tried to setup grafana over nginx reverse proxy but I'm getting following error:
If you're seeing this Grafana has failed to load its application files

1. This could be caused by your reverse proxy settings.

2. If you host grafana under subpath make sure your grafana.ini root_url setting includes subpath

3. If you have a local dev build make sure you build frontend using: yarn start, yarn start:hot, or yarn build

4. Sometimes restarting grafana-server can help

also too many redirects in the network tab to login page.

I've followed the auth proxy setup doc but still I haven't got it working.

**What you expected to happen**:
Grafana UI should work normally without any redirection issue.

**How to reproduce it (as minimally and precisely as possible)**:
here is my nginx.conf
`worker_processes 1;

events { worker_connections 1024; }

http {

log_format compression '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $upstream_addr '
        '"$http_referer" "$http_user_agent" "$gzip_ratio"';

upstream docker-grafana {
        server grafana:3000;
    }

server {
        error_log  /var/log/nginx/error.log;
        access_log /var/log/nginx/access.log;
        listen 8081;

        location / {
                root /usr/share/nginx/html;
                index index.html index.htm;
                try_files $uri $uri/ /index.html =404;
        }

        location /grafana {
            set $user "";
            if ($args ~ "^user=(.+)") {
               set $user $1;
            }
            add_header X-USER "$user";
            add_header X-Forwarded-Host "$server_name";
            add_header X-Forwarded-For "$proxy_add_x_forwarded_for";
            add_header X-HOST "$host";
            add_header X-REMOTE-ADDR "$remote_addr";

            proxy_pass         http://docker-grafana;
            proxy_redirect     off;
            proxy_set_header   Host $host;
            proxy_set_header   X-Real-IP $remote_addr;
            proxy_set_header   X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Host $server_name;
            proxy_set_header   X-Forwarded-Proto http;
            proxy_set_header   X-WEBAUTH-USER $user;
            proxy_set_header   Authorization "";
        }
     }
}`

Here is my grafana.ini file:
`[server]
domain = 130.147.136.40:3000
root_url = http://130.147.136.40:3000/grafana/

[users]
allow_sign_up = false
auto_assign_org = true
auto_assign_org_role = Editor

[auth.proxy]
enabled = true
header_name = X-WEBAUTH-USER
header_property = username
auto_sign_up = false`

Here is my docker-compose file:
`version: '2'
services:
    reverseproxy:
        image: reverseproxy
        container_name: reverseproxy
        ports:
            - 8081:8081
        restart: always
    prometheus:
        image: prom/prometheus
        container_name: prometheus
        volumes:
            - ./prometheus.yml:/etc/prometheus/prometheus.yml
        command:
            - '--config.file=/etc/prometheus/prometheus.yml'
        depends_on:
            - reverseproxy
        ports:
            - '9090:9090'
        restart: always
    pushgateway:
        image: prom/pushgateway
        container_name: pushgateway
        command:
            - '--persistence.file=pushgateway-metrics'
            - '--persistence.interval=10s'
        depends_on:
            - reverseproxy
        ports:
            - '9091:9091'
        restart: always
    grafana:
        image: grafana/grafana
        container_name: grafana
        volumes:
            - ./grafana.ini:/etc/grafana/grafana.ini
        environment:
            - GF_SECURITY_ADMIN_PASSWORD=admin
            - GF_AUTH_OAUTH_AUTO_LOGIN=true
        depends_on:
            - reverseproxy
            - prometheus
        ports:
            - "3000:3000"
        restart: always`

whereas reverseproxy is the container of nginx.
**Anything else we need to know?**:

**Environment**:
- Grafana version:  latest (using docker)
- Data source type & version:
- OS Grafana is installed on: 
- User OS & Browser: Chrome
- Grafana plugins:
- Others:

<!-- Please only use this template for submitting feature requests -->

**What would you like to be added**:

When I'm using explore, and I'm scrolling down to the bottom, I want to be able to quickly go back to the top and refine my query.

**Why is this needed**:

Hurt my scroll wheel and my finger.
**What happened**:

When you're doing a metrics query on logs such as `rate({job="default/prometheus"}[5m])`.

The table view show the instant value result. But if I click in one cell to add a new label matcher if actually break the query like this `{job="default/prometheus",level="info"} rate([5m])`

![image](https://user-images.githubusercontent.com/1053421/72645062-ac528200-3940-11ea-8ee5-ab56b61d13fb.png)


**What you expected to happen**:
I would expect the query to be `rate({job="default/prometheus",level="info"}[5m])`

**How to reproduce it (as minimally and precisely as possible)**:

1 - make a metric query `rate({job="default/prometheus"}[5m])`.
2 - On the table result click on a cell to add a label.


**Environment**:
- Grafana version: `rate({job="default/prometheus"}[5m])`.
- Data source type & version: Loki

This changes the logic of the Graphite query editor so that it does not modify the metric path when a user opens the query editor. The old behavior was to execute a find query for the last part of the metric path and if there was no data, then it would change the value to be `select metric`.

The old behavior is still in place when toggling edit mode or for any other action that parses the metric path.

Fixes #21563




This work was originally done in #21554, but it was reverted due to issues described in #21583.

**Which issue(s) this PR fixes**:
Fixes #21586 

**Special notes for your reviewer**:
See the commit messages for the breakdown.

**Why is this needed**:
[ng-annotate](https://npmjs.com/ng-annotate) is deprecated.