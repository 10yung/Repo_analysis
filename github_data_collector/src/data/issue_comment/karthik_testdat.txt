Since the project is no longer going forward but might attract people I thought this would be a nice and helpful addition. 

Will testdat run like test_that?

I would really like it if you put a set of tests in a file and run all of them, 
with the fine result of: 
`Checks ....
No problems found`

http://www.onthelambda.com/2015/01/23/assertive-r-programming-in-dplyrmagrittr-pipelines/
http://www.onthelambda.com/wp-content/uploads/2015/01/assertr.html

https://github.com/jimhester/regulaR

Will provide some human friendly regular expression parsing (and testing).

One thing I run into a bunch is a blank field (most often with white space) used as missing. This is especially annoying with factors, which then creates a level for the blank space.

Currently, white space alone is not considered a `NA_aliases` (see [here](https://github.com/ropensci/testdat/blob/master/R/test_NA.R#L14)).

Should `test_na` and `fix_na` be updated to treat white space as missing, or perhaps should there be a new function that tests for empty levels or blank fields and the fix modifies to `NA`?

I'm happy to contribute to implement either.

This package, https://github.com/smbache/ensurer, does exactly what we need in terms of sanity checks that were already in the works. We'll just need to get this in as an import.

There's a lot of duplication between the code in `test_NA` and `fix_NA`.  For example, both functions have lists of NA strings like -999, and it would be easy for these to get out of sync.

What do folks (especially @hilaryparker) think of this division of labor between the functions:
- `test_NA` finds the missing values
- `fix_NA` calls `test_NA` to find where the missing values are, and then replaces them.

If I get the go-ahead, I'm happy to make a pull request for it.

I asked at Etsy colleague how he normalizes data (in the database sense). Here was his response:

"I believe what I did was to lowercase, remove duplicate spaces, stem and get rid of stop words. all of these concepts are general"

Also: http://www.omegahat.org/Rstem/stemming.pdf

Alyssa, Ted and I were just discussing this -- can we clearly define the usecase for testdat?

The way I am envisioning it, the testdat suite is something that you'll want to run immediately after loading a dataset in order to understand it. That is, it'll be `dat <- read.csv("data.csv")` then `test_continuous_dat(dat)` etc. Then in your documentation you might have a small section "testing data" where you display the results of these tests. Should we write up documentation outlining this?

