• added to clr-icons and clr-core icons
• adds employee icon
• adds employee-group icon
• adds factory icon
• adds color-palette icon
• adds animation icon
• adds ci-cd icon
• adds file-share-2 icon
• adds on-holiday icon
• verified on dev app and website
• gemini updates

Tested in:
✔︎ Chrome

Closes: #4107

Signed-off-by: Scott Mathis <smathis@vmware.com>

## PR Checklist

Please check if your PR fulfills the following requirements:

* [ ] Tests for the changes have been added (for bug fixes / features)
* [x] Docs have been added / updated (for bug fixes / features)
* [ ] If applicable, have a visual design approval

## PR Type

What kind of change does this PR introduce?

<!-- Please check the one that applies to this PR using "x". -->

* [ ] Bugfix
* [x] Feature
* [ ] Code style update (formatting, local variables)
* [ ] Refactoring (no functional changes, no api changes)
* [ ] Build related changes
* [ ] CI related changes
* [ ] Documentation content changes
* [x] clarity.design website / infrastructure changes
* [ ] Other... Please describe:

## What is the current behavior?

<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->

Issue Number: #4107 

## What is the new behavior?

## Does this PR introduce a breaking change?

* [ ] Yes
* [x] No

<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->

## Other information

The `H2` element had a typo in Jigglypuff (as Jiggypuff). This corrects it to Jigglypuff.

Closes: #4216

Signed-off-by: Bruce McMoran <mcmoranbjr@gmail.com>

## PR Checklist

Please check if your PR fulfills the following requirements:

* [na] Tests for the changes have been added (for bug fixes / features)
* [x] Docs have been added / updated (for bug fixes / features)
* [na] If applicable, have a visual design approval

## PR Type

What kind of change does this PR introduce?

* [ ] Bugfix
* [ ] Feature
* [ ] Code style update (formatting, local variables)
* [ ] Refactoring (no functional changes, no api changes)
* [ ] Build related changes
* [ ] CI related changes
* [x] Documentation content changes
* [ ] clarity.design website / infrastructure changes
* [ ] Other... Please describe:

## What is the current behavior?

The `H2` element contains Jiggypuff as a typo of the character name Jigglypuff in the vertical nav example. See https://v2.clarity.design/vertical-nav/basic-structure/project-pokemon

Issue Number: #4216 

## What is the new behavior?

Display Jigglypuff in the `H2` element for the vertical nav example https://v2.clarity.design/vertical-nav/basic-structure/project-pokemon

## Does this PR introduce a breaking change?

* [ ] Yes
* [x ] No

## Other information

## Describe the bug

In the vertical nav example, Jigglypuff is mentioned in the title as **Jiggypuff**. It should be Jigglypuff.

## How to reproduce

View the example by navigating to https://v2.clarity.design/vertical-nav/basic-structure/project-pokemon

Steps to reproduce the behavior:

1.  Go to https://v2.clarity.design/vertical-nav/basic-structure/project-pokemon
2.  See the error

## Expected behavior

The `H2` element should say **Jigglypuff**

## Versions

**App**

* Angular: na
* Node: na
* Clarity: v2

**Device:**

* Type: All
* OS: All
* Browser All
* Version v2

## Additional notes

No additional notes.

• replaced .sr-only classname with shared .clr-sr-only classname
• deprecated classname-driven API (.is-solid, .has-alert, .has-badge, .is-green, .is-success, .is-red, .is-error, .is-danger, .is-warning, .is-blue, .is-info, .is-highlight, .is-white, .is-inverse, .has-badge--success, .has-badge--danger, .has-badge--info, .has-badge--error
• added 'solid' boolean attribute
• added 'inverse' boolean attribute
• added 'alert' boolean attribute
• added 'status' attribute
• added 'badge' attribute
• updated icon demo to use new properties
• split stateful badge property into badge boolean and badgeType string properties
• updated unit tests
• created deprecated icons demo page to validate 3.0 deprecations work as expected
• added a 'warning' color for badges for consistency with other statuses
• updated icon demo for new badge 'warning' color
• updated icon-set demo page to use new attribute-based API
• added isStringOrNil to common utils
• added hasPropertyChangedAndNotNil to common utils
• changed behavior in icon element so that setting size to nil or empty string clears out sizing
• preserved behavior in icon element where setting shape to nil or empty string accidentally is ignored
• expanded the icon sizing classname vs. styles helpers to handle new edge cases
• added tests to improve code coverage of the icon classname helpers
• added SizeUpdateStrategies enum and a less awesome pattern-matching approach to changing t-shirt vs. numeric sizing
• accounted for null checking with some typescript gymnastics

Signed-off-by: Scott Mathis <smathis@vmware.com>

## PR Checklist

Please check if your PR fulfills the following requirements:

* [x] Tests for the changes have been added (for bug fixes / features)
* [x] Docs have been added / updated (for bug fixes / features)
* [ ] If applicable, have a visual design approval

## PR Type

What kind of change does this PR introduce?

It updates the API of Clarity Core icons to match the newer APIs of the other components.

<!-- Please check the one that applies to this PR using "x". -->

* [ ] Bugfix
* [ ] Feature
* [ ] Code style update (formatting, local variables)
* [x] Refactoring (no functional changes, no api changes)
* [ ] Build related changes
* [ ] CI related changes
* [ ] Documentation content changes
* [ ] clarity.design website / infrastructure changes
* [ ] Other... Please describe:

## What is the current behavior?

<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->

Issue Number: #4193 

## What is the new behavior?

## Does this PR introduce a breaking change?

* [ ] Yes
* [x] No

<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->

## Other information

Provide vertical navigation with `arai-current="page"` when there is `routerLinkActive` set.

## PR Checklist

Please check if your PR fulfills the following requirements:

* [ ] Tests for the changes have been added (for bug fixes / features)
* [x] Docs have been added / updated (for bug fixes / features)
* [ ] If applicable, have a visual design approval

## PR Type

What kind of change does this PR introduce?

<!-- Please check the one that applies to this PR using "x". -->

* [ ] Bugfix
* [x] Feature
* [ ] Code style update (formatting, local variables)
* [ ] Refactoring (no functional changes, no api changes)
* [ ] Build related changes
* [ ] CI related changes
* [x] Documentation content changes
* [ ] clarity.design website / infrastructure changes
* [ ] Other... Please describe:

## What is the current behavior?

<!-- Please describe the current behavior that you are modifying, or link to a relevant issue. -->

Issue Number: #3576 

## What is the new behavior?

## Does this PR introduce a breaking change?

* [ ] Yes
* [ ] No

<!-- If this PR contains a breaking change, please describe the impact and migration path for existing applications below. -->

## Other information

Close #3576 
## Describe the bug

The show/hide popover for datagrids does not display if inside of a wizard or modal.  It's z-index appears to be less than that of the modal, thus appearing behind it.

## How to reproduce

[https://clarity-light-theme-v2-pddhe4.stackblitz.io/](https://clarity-light-theme-v2-pddhe4.stackblitz.io/)

Steps to reproduce the behavior:

1. Press the **Open Wizard** button.
2. Press the show/hide columns button inside the datagrid.
3. Notice nothing happens.

![image](https://user-images.githubusercontent.com/17691864/72556613-d8dca000-3853-11ea-8676-f80a3fd21625.png)

![image](https://user-images.githubusercontent.com/17691864/72556707-06294e00-3854-11ea-9016-6d01f7d81462.png)

![image](https://user-images.githubusercontent.com/17691864/72556717-0f1a1f80-3854-11ea-94a8-360abaf95ebb.png)


## Expected behavior

The show/hide columns popover should display even if inside of a modal / wizard.

## Versions

**App**

* Angular: 8.2.4
* Clarity: 2.1.2

**Device:**

* Type: Surface Book
* OS: Windows 10
* Browser: Chrome
* Version: 79.0.3945.117

## Describe the bug

Using Chrome + NVDA:

When navigating to the close button of a modal, the name of the last button in the modal is read by screen readers.

## How to reproduce

[https://clarity-light-theme-v2-jjgdej.stackblitz.io/](https://clarity-light-theme-v2-jjgdej.stackblitz.io/)

Steps to reproduce the behavior:

1. Tab until the **Open Modal** button.
2. Press **Enter**
3. Tab until the **OK** button.
4. Continue tabbing until the **X** (close) button has focus.
5. Notice that the screen reader is reading the **OK** button and the **Close** button when it should only be reading the **Close** button.

![image](https://user-images.githubusercontent.com/17691864/72553920-8f3d8680-384e-11ea-9940-f34ebf635d91.png)

## Expected behavior

1. When navigating to the **X** (close) button, screen readers should not read content from other parts of the modal.

## Versions

**App**

* Angular: 8.2.4
* Clarity: 2.1.2

**Device:**

* Type: Surface Book
* OS: Windows 10
* Browser: Chrome
* Version: 79.0.3945.117

## Describe the bug

When selecting a tab on the left side of the wizard, the focus does not jump to that tabs content.  Keyboard only users and screen reader users will find it difficult to access the pop-up as they have to navigate through all the controls in the left navigation to reach the main content.

## How to reproduce

[https://clarity-light-theme-v2-p315xm.stackblitz.io/](https://clarity-light-theme-v2-p315xm.stackblitz.io/)

Steps to reproduce the behavior:

1. Tab to the **Open Wizard** button.
2. Press **Enter**
3. Tab until the **Next** button.
4. Press **Enter**
5. Repeat until the last page of the wizard can be accessed.
6. Tab until any tab has focus.
7. Press **Enter**
8. Notice that the content for that tab does not gain focus.

## Expected behavior

When clicking on a wizard tab, focus should move to that tabs content to make the wizard more accessible.

## Versions

**App**

* Angular: 8.2.4
* Clarity: 2.1.2

**Device:**

* Type: Surface Book
* OS: Windows 10
* Browser: Chrome
* Version: 79.0.3945.117

## Describe the bug

Using Chrome + NVDA:

1. The button used to open the wizard is read by screen readers after reaching the end of the wizards content and before focus returns to the beginning of the wizard.

2. The last button of the wizard is read by screen readers after reaching the end of the wizards content and focus returns to the first tab of the wizard.

## How to reproduce

[https://clarity-light-theme-v2-p315xm.stackblitz.io/](https://clarity-light-theme-v2-p315xm.stackblitz.io/)

Steps to reproduce the behavior:

1. Tab until reaching the **Open Wizard** button.
2. Press **Enter**
3. Tab until reaching the **Next** button.
4. Tab more to continue to the start of the wizard.
5. Notice that the screen reader reads **Open Wizard**
6. Tab until reaching the **Page 1** tab.
7. Tab and notice the screen reader is reading **Next**

![Untitled](https://user-images.githubusercontent.com/17691864/72550590-e855ec00-3847-11ea-9548-913068790cfe.png)

## Expected behavior

1. Navigating through the wizard should not prompt screen readers to read content which is outside the wizard.

2. Navigating through the wizard should not prompt screen readers to read incorrect content.

## Versions

**App**

* Angular: 8.2.4
* Clarity: 2.1.2

**Device:**

* Type: Surface Book
* OS: Windows 10
* Browser: Chrome
* Version: 79.0.3945.117

Add the ability to dynamically disable selection of tree node checkboxes.

closes the issue: https://github.com/vmware/clarity/issues/1458

Signed-off-by: Prudhvi Simhadri <prudhvi.af121@gmail.com>

## PR Checklist

Please check if your PR fulfills the following requirements:

* [ ] Tests for the changes have been added (for bug fixes / features)
* [ ] Docs have been added / updated (for bug fixes / features)
* [ ] If applicable, have a visual design approval

## PR Type

What kind of change does this PR introduce?

* [ ] Bugfix
* [X] Feature
* [ ] Code style update (formatting, local variables)
* [ ] Refactoring (no functional changes, no api changes)
* [ ] Build related changes
* [ ] CI related changes
* [ ] Documentation content changes
* [ ] clarity.design website / infrastructure changes
* [ ] Other... Please describe:

closes the issue: #1458