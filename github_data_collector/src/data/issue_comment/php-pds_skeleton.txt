Fixes a number of bugs from #43:
- Check whether the specified folder exists and that it has sufficient permissions. 
- Output a message specific to each of the errors above.
- Existing folders and files do not cause a warning.
- Existing files do not get overridden.
- Add tests to prove the bugs in #43.
Added a few examples, since people will keep asking. We still have `This publication does not otherwise define the structure and contents of the directory`, so the spec remains reasonably neutral in that regard.

Fixes #36 
First of I want to say thanks for this work!

I'm still relatively a beginner developer. From reading this standard it appears to me that a "resources" directory is analogous to a "vendor" directory in a composer project. (I could be  completely wrong)

Considering the relative popularity of composer in PHP projects, how does this standard reconcile the two? Should the "vendor" directory substitute the "resources" directory in a composer project?

Can the two folders be seen as conceptually being the same?
I come up with a question to you. Maybe you have some tips or recommendations?

I was starting a package  with a concrete PHP package skeleton based on your PDS Skeleton:
<https://github.com/tbreuss/php-package-skeleton>

The idea is to have some kind of a boilerplate that enables you to quickly start a new project. In contrast to PDS it contains concrete implementations. 

What do you think about this?
When trying to generate the structure for a new project, I get a bunch of error messages...

~~~
php vendor/bin/pds-skeleton generate xxx
PHP Warning:  mkdir(): File exists in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29

Warning: mkdir(): File exists in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29
PHP Warning:  mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29

Warning: mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29
PHP Warning:  mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29

Warning: mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29
PHP Warning:  mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29

Warning: mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29
PHP Warning:  mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29

Warning: mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29
PHP Warning:  mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29

Warning: mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29
PHP Warning:  mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29

Warning: mkdir(): Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 29
PHP Warning:  file_put_contents(/CHANGELOG.md): failed to open stream: Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 34

Warning: file_put_contents(/CHANGELOG.md): failed to open stream: Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 34
PHP Warning:  chmod(): No such file or directory in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 35

Warning: chmod(): No such file or directory in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 35
PHP Warning:  file_put_contents(/CONTRIBUTING.md): failed to open stream: Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 34

Warning: file_put_contents(/CONTRIBUTING.md): failed to open stream: Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 34
PHP Warning:  chmod(): No such file or directory in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 35

Warning: chmod(): No such file or directory in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 35
PHP Warning:  file_put_contents(/LICENSE.md): failed to open stream: Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 34

Warning: file_put_contents(/LICENSE.md): failed to open stream: Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 34
PHP Warning:  chmod(): No such file or directory in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 35

Warning: chmod(): No such file or directory in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 35
PHP Warning:  file_put_contents(/README.md): failed to open stream: Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 34

Warning: file_put_contents(/README.md): failed to open stream: Permission denied in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 34
PHP Warning:  chmod(): No such file or directory in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 35

Warning: chmod(): No such file or directory in /tmp/test/vendor/pds/skeleton/src/PackageGenerator.php on line 35
Created /bin
Created /config
Created /docs
Created /public
Created /resources
Created /src
Created /tests
Created CHANGELOG.md
Created CONTRIBUTING.md
Created LICENSE.md
Created README.md
~~~

It looks like a permission problem. But it seems that the generator expects that the folder "xxx" already exists.

The following works:

~~~
mkdir yyy
php vendor/bin/pds-skeleton generate yyy
~~~


I put all my autoloaded classes into /src.  But where do I put the source for my _main_* for a command-line executable?  Does that go in /src?  Someplace else?

*main (like `int main()` in C/C++) -- the non-class entry point for the program, which typically receives the command line parameters via `$argv`.
Are the command-line executables which belong in /bin those which are delivered as part of the package?  Or are they executables which are generated by the package, after delivery and installation, via some user-invoked means?  Or both?
Please clarify the difference between /public and /src.

A common setup is to use one index.php file to route requests to other parts of the project. Please address this setup specifically in the documentation.