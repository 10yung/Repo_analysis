```cssselect``` PYPI package was not part of the ```install_requirements``` list in ```setup.py```
When I ran this example, I reported the following error


2019/09/19 10:15:50 [Register] OK <Post: /posts /news?p=1> 
2019/09/19 10:15:50 [Register] OK <Post: /posts?page={page} /news?p={page}> 
2019/09/19 10:15:50 [Register] OK <Page: /posts /news?p=1> 
2019/09/19 10:15:50 [Register] OK <Page: /posts?page={page} /news?p={page}> 
2019/09/19 10:15:50 [Serving ] OK http://0.0.0.0:5001 
2019/09/19 10:15:50 [Serving ] FAIL Windows error 1 
2019/09/19 10:15:50 [Serving ] FAIL Traceback (most recent call last):
  File "D:\python\lib\site-packages\toapi\api.py", line 50, in run
    self.app.run(host, port, **options)
  File "D:\python\lib\site-packages\flask\app.py", line 938, in run
    cli.show_server_banner(self.env, self.debug, self.name, False)
  File "D:\python\lib\site-packages\flask\cli.py", line 629, in show_server_banner
    click.echo(message)
  File "D:\python\lib\site-packages\click\utils.py", line 260, in echo
    file.write(message)
  File "D:\python\lib\site-packages\click\_winconsole.py", line 180, in write
    return self._text_stream.write(x)
  File "D:\python\lib\site-packages\click\_winconsole.py", line 164, in write
    raise OSError(self._get_error_message(GetLastError()))
OSError: Windows error 1


toapi, version 2.1.0
Flask 1.0.2
Python 3.6.0 
Hi, I am interested in contributing, is this still active?
I use:
```
class ProductPage(Item):
      coupon = Attr('.coupon', 'title')
```

However some product pages do not contain the coupon html 
so they fail with
```
  File "/Library/Frameworks/Python.framework/Versions/3.7/lib/python3.7/site-packages/htmlparsing.py", line 79, in parse
    return element.css(self.selector)[0].attrs[self.attr]
IndexError: list index out of range
```

What's the best practice to  deal with that situation?
Hi
The site I am scraping  has urls like:
```
http://remote.com/i-love-cats/1
http://remote.com/dogs-are-really-great/2
http://remote.com/pupies_kanGourOUs/3
````
I want to match them with local urls like those:
```
http://localhost:5000/1
http://localhost:5000/2
http://localhost:5000/3
```
Is there some magical way to do it?

Or I need to do like #107 and also
add custom code in an external two-column db table to match 
```
1 => http://remote.com/i-love-cats/1
...
```

Sure as an alternate solution I could maybe add a route like
`@api.route('page/{complete_remote_url}', '{complete_remote_url}')`
and do like :
```
wget http://localhost:5000/page/http://remote.com/i-love-cats/1
```
but I want to hide the scraped site url so the caller does not see the url
Your FOSSA integration was successful! Attached in this PR is a badge and license report to track scan status in your README.

Below are docs for integrating FOSSA license checks into your CI:

- [CircleCI](https://docs.fossa.io/docs/circleci)
- [TravisCI](https://docs.fossa.io/docs/travisci)
- [Jenkins](https://github.com/fossas/fossa-jenkins-plugin)
- [Other](https://github.com/fossas/fossa-cli)