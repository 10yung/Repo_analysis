Thank you for this package! I used it for assigning people to generations (Boomers, Millenials, etc)  depending on the year they were born (also possible to base it on age using that as a rough approximation of year they were born, but that's more complicated code).  Here's some simplified code of how I used fuzzyjoin. 

`library(fuzzyjoin)`

#create generations table
`name <-  c("Generation ?", "Generation Z", "Millenials", "Xennials", "Generation X", "Baby Boomers","Silent")`

`startyr <- c(2017, 1997, 1984, 1977, 1963, 1944, 1900)`

#there's a dummy year in here for Generation ?
`endyr <-  c(2025, 2016, 1996, 1983, 1976, 1962, 1943)`

`generations <- data.frame(name, startyr, endyr)`


#create a data table of people with the year they were born
`name <-  c("person1", "person2", "person3", "person4", "person5", "person6", "person7", "person8", "person9")`

`yr_birth <-  c(1971, 2018, 1999, 1917, 1965, 1949, 1979, 1983, 1989)`

`people <- data.frame(name, yr_birth)`


#Update the people table to indicate what generation they belong to
#depending on whether their birth year falls on or after start yr and on or before end year of the generation

`people <-  fuzzy_left_join(
  people, generations,
  by = c(
    "yr_birth" = "startyr",
    "yr_birth" = "endyr"
  ),
  match_fun = list(`>=`, `<=`))`
> More examples: I've used this package in other powerful ways, but on proprietary data. I'm interested in ideas for use cases that can be provided as vignettes.

```
fuzzy_left_join(A, B
  by = c(
    "key" = "key",
    "date" = "startDate",
    "date" = "endDate"
  ),
  match_fun = list("==", ">=", "<=")
)
```
If there are duplicate column names (that aren't being matched on), they're currently suffixed with `.x` and `.y`. It'd be nice to be able to change that, like you can in dplyr's joins.
In reference to README: "I'm interested in ideas for use cases that can be provided as vignettes."

Hi, 
I thought to share an interesting data example.

Here is a public dataset: Aboriginal and Torres Strait Islander Languages by www.aiatsis.gov.au
[https://collection.aiatsis.gov.au/datasets/austlang/001](https://collection.aiatsis.gov.au/datasets/austlang/001)
this is a CSV, comma separated, with quotes.

> Languages were transmitted orally and were never written down, hence there are various alternative spellings to refer to the same language.

`language_name` and `language_synonym`
are the two variables to look up, would be a pretty cool example for fuzzyjoin.


wondering if to distance_join() or geo_join() two tables, one with M coords and the other with N coords, say M<=N, your curr implementation is "exaustive" i.e., it runs in O(M\*N) time. if so, consider creating a kd-tree (of kNN fame) of the _smaller_ list in O[M\*log(M)] time and querying it N times for the closest point to P1,P2,...PN on the longer table. only join if the dist(P, closest(P)) < max_dist. this will run in O[(M+N)\*log(M)] which will be at least M/(2\*log(M)) faster than the exaustive method. 
Error: vector memory exhausted (limit reached?)

I’m getting the above error when trying to stringdist_left_join two tables - the left table is 185K rows and the right table is 4.37M rows. The R session never appears to use more than 6GB of memory (according to Activity Monitor) while I’m on a machine with 32GB of memory with available memory in the range of 10GB when the vector memory exhausted error arises. I’ve followed various recommendations to increase R_MAX_VSIZE to a large number - 700GB as shown in the Sys.getenv() output shown below. All this to say it appears that stringdist_left_join does not pay attention to R_MAX_VSIZE. Is there some other setting I can change to use more of the available memory on my machine?

```
Sys.getenv()

Apple_PubSub_Socket_Render          /private/tmp/com.apple.launchd.sSrL33I64Z/Render
COLUMNS                             80
COMMAND_MODE                        unix2003
DISPLAY                             /private/tmp/com.apple.launchd.tTt2eLd6xQ/org.macosforge.xquartz:0
DYLD_FALLBACK_LIBRARY_PATH          /Library/Frameworks/R.framework/Resources/lib:/Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/server
DYLD_LIBRARY_PATH                   /Library/Java/JavaVirtualMachines/jdk1.8.0_91.jdk/Contents/Home/jre/lib/server
EDITOR                              vi
HOME                                /Users/geoffreysnyder
LD_LIBRARY_PATH                     :@JAVA_LD@
LINES                               24
LN_S                                ln -s
LOGNAME                             geoffreysnyder
MAKE                                make
PAGER                               /usr/bin/less
PATH                                /usr/local/bin:/usr/local/mysql/bin:/usr/bin:/bin:/usr/sbin:/sbin:/opt/X11/bin:~/Library/Python/3.7/bin
PWD                                 /Users/geoffreysnyder/repos/Data_Load/code
R_ARCH                              
R_BROWSER                           /usr/bin/open
R_BZIPCMD                           /usr/bin/bzip2
R_DOC_DIR                           /Library/Frameworks/R.framework/Resources/doc
R_GZIPCMD                           /usr/bin/gzip
R_HOME                              /Library/Frameworks/R.framework/Resources
R_INCLUDE_DIR                       /Library/Frameworks/R.framework/Resources/include
R_LIBS_SITE                         
R_LIBS_USER                         ~/Library/R/3.5/library
R_MAX_VSIZE                         700GB
R_PAPERSIZE                         a4
R_PDFVIEWER                         /usr/bin/open
R_PLATFORM                          x86_64-apple-darwin15.6.0
R_PRINTCMD                          lpr
R_QPDF                              /Library/Frameworks/R.framework/Resources/bin/qpdf
R_RD4PDF                            times,inconsolata,hyper
R_SESSION_TMPDIR                    /var/folders/xw/402kc2hc8xl82d008k8x64f00000gq/T//RtmpJdct7Y
R_SHARE_DIR                         /Library/Frameworks/R.framework/Resources/share
R_SYSTEM_ABI                        osx,gcc,gxx,gfortran,?
R_TEXI2DVICMD                       /usr/local/bin/texi2dvi
R_UNZIPCMD                          /usr/bin/unzip
R_ZIPCMD                            /usr/bin/zip
SECURITYSESSIONID                   186a8
SED                                 /usr/bin/sed
SHELL                               /bin/zsh
SHLVL                               0
SSH_AUTH_SOCK                       /private/tmp/com.apple.launchd.UNOOV1wxev/Listeners
SUBLIMEREPL_AC_IP                   127.0.0.1
SUBLIMEREPL_AC_PORT                 None
TAR                                 /usr/bin/tar
TMPDIR                              /var/folders/xw/402kc2hc8xl82d008k8x64f00000gq/T/
TZ                                  America/Los_Angeles
USER                                geoffreysnyder
XPC_FLAGS                           0x0
XPC_SERVICE_NAME                    0
__CF_USER_TEXT_ENCODING             0x1F7:0x0:0x0
```

```
sessionInfo()

R version 3.5.1 (2018-07-02)
Platform: x86_64-apple-darwin15.6.0 (64-bit)
Running under: macOS  10.14.2

Matrix products: default
BLAS: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRblas.0.dylib
LAPACK: /Library/Frameworks/R.framework/Versions/3.5/Resources/lib/libRlapack.dylib

locale:
[1] C

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] bindrcpp_0.2.2  RJDBC_0.2-7.1   rJava_0.9-10    DBI_1.0.0       fuzzyjoin_0.1.4 readr_1.2.0     dplyr_0.7.8    
[8] lubridate_1.7.4 stringr_1.3.1  

loaded via a namespace (and not attached):
 [1] Rcpp_1.0.0       tidyr_0.8.2      assertthat_0.2.0 R6_2.3.0         magrittr_1.5     pillar_1.2.3    
 [7] rlang_0.3.0.1    stringi_1.2.4    tools_3.5.1      glue_1.3.0       purrr_0.2.5      hms_0.4.2.9000  
[13] compiler_3.5.1   pkgconfig_2.0.2  bindr_0.1.1      tidyselect_0.2.5 tibble_1.4.2    
```

I wrote about a problem as issue [#48](https://github.com/dgrtwo/fuzzyjoin/issues/48).   Generally,  I think that this should not be solved at documentation level but on matching level. 
First of all congratulations for this great package.  I was a bit struggling to find out why I could not geo-match my data. I think that it is a bit unfortunate that there is no exact longitude and latitude variable matching in the geo_join function. 

I made a small amendment in the documentation of the function.  However, I think that a clearer matching would be more appropriate, given that Google any many other APIs use by default lng for longitudes. 

` states <- data_frame(state = state.name,
                      lng = state.center$x,
                      lat = state.center$y)

 s1 <- rename(states, state1 = state)
 s2 <- rename(states, state2 = state)

 pairs <- s1 %>%
  geo_inner_join(s2, by = c("lng", "lat"), 
                 max_dist = 200) %>%
  filter(state1 != state2)
 `

Another issue that makes the whole code very difficult to read and amend that only a very few functions are directly imported.  For example, in geo_join  `dplyr::data_frame` and `dplyr::common_by` are not referenced or imported.  It is not logical to me why the above modification should not work.  Given that in geo-matching lat.x must strictly match with lat.y and lon.x with lon.y it would be preferable to clearly pass on these arguments, for example, like by.lat = c("lat", "lat") and by.lon = c("lon", "lng") 

Any plans to support dplyr style calls to external databases, even for some subset of functions?  
I'm guessing that's out of scope for this package, but it would be nice to have that documented in perhaps a more obvious way(?)  Anyway, really cool package here, thanks!
Is there any way to match on normalized string distance?

Ie for osa, lv, and dl, dividing by the nchar of the longest word, or for lcs the additive lengths of both?

1 letter off of a 4 letter string is quite different than 1 letter off of a 20 character string.