When installing with apt you have a warning:
/usr/lib/python3/dist-packages/wifite/tools/ifconfig.py:21: SyntaxWarning: "is" with a literal. Did you mean "=="?
  elif type(args) is 'str':

It is now common (see https://github.com/gnuradio/gnuradio/pull/3066)
Hello!
Wifite was working great, and it still is as far as I know, but when I want to see past cracked APs I get this error.

@linux:~# wifite --cracked
   .               .    
 .  ·  .     .  ·  `.  wifite2 2.5.0
 :  :  :  (¯)  :  :  :  an automated wireless auditor forked from @derv82
 `.  ·  ` /¯\   ·  .  https://github.com/kimocoder/wifite2
   `     /¯¯¯\         


 [!] Error: Expecting value: line 1 column 1 (char 0)
                                                                                                                                                             
 [!] Full stack trace below                                                                                                                                  
                                                                                                                                                             
 [!]    Traceback (most recent call last):                                                                                                                   
 [!]    File "/usr/lib/python3/dist-packages/wifite/__main__.py", line 98, in entry_point
 [!]        wifite.start()
 [!]    File "/usr/lib/python3/dist-packages/wifite/__main__.py", line 42, in start                                                                          
 [!]        CrackResult.display()
 [!]    File "/usr/lib/python3/dist-packages/wifite/model/result.py", line 78, in display                                                                    
 [!]        cracked_targets = loads(fid.read())
 [!]    File "/usr/lib/python3.7/json/__init__.py", line 348, in loads                                                                                       
 [!]        return _default_decoder.decode(s)
 [!]    File "/usr/lib/python3.7/json/decoder.py", line 337, in decode                                                                                       
 [!]        obj, end = self.raw_decode(s, idx=_w(s, 0).end())
 [!]    File "/usr/lib/python3.7/json/decoder.py", line 355, in raw_decode                                                                                   
 [!]        raise JSONDecodeError("Expecting value", s, err.value) from None
 [!]    json.decoder.JSONDecodeError: Expecting value: line 1 column 1 (char 0)                                                                              
                                                                                                                                                             
 [!] Exiting

What could the problem be?

Thanks!
If I run:

`wifite --pmkid `

Wifite will attempt to get the PMKID but nothing happens, then just fails to get it after it timeouts.

If I try using hcxdumptool I'm able to grab PMKID from networks all over, but I noticed it deauths devices when attempting to get PKMID from my own network. 

`hcxdumptool -o file.pcapng -i wlan0mon --enable_status 3`

I'm wondering if it's meant to deauth as I thought the PMKID attack was meant to be silent? 

If it is, maybe wifite is struggle to send deauth packets. 

Any help is appreciated. 
root@aN0n:/home/no1ne/wifite2# ./Wifite.py --crack
   .               .    
 .´  ·  .     .  ·  `.  wifite 2.2.5
 :  :  :  (¯)  :  :  :  automated wireless auditor
 `.  ·  ` /¯\ ´  ·  .´  https://github.com/derv82/wifite2
   `     /¯¯¯\     ´    


 [!] directory not found: hs
 [!] No handshakes found

root@aN0n:/home/no1ne/wifite2# whereis wifite
wifite: /opt/wifite2/bin/wifite

root@aN0n:/home/no1ne/wifite2# ./Wifite.py -vv --crack
   .               .    
 .´  ·  .     .  ·  `.  wifite 2.2.5
 :  :  :  (¯)  :  :  :  automated wireless auditor
 `.  ·  ` /¯\ ´  ·  .´  https://github.com/derv82/wifite2
   `     /¯¯¯\     ´    

 [+] option: verbosity level 2

 [?]  Executing: which aircrack-ng
 [stdout] /usr/bin/aircrack-ng

 [?]  Executing: which iwconfig
 [stdout] /sbin/iwconfig

 [?]  Executing: which ifconfig
 [stdout] /sbin/ifconfig

 [?]  Executing: which reaver
 [stdout] /usr/local/bin/reaver

 [?]  Executing: which bully
 [stdout] /usr/local/bin/bully

 [?]  Executing: which pyrit
 [stdout] /usr/bin/pyrit

 [?]  Executing: which tshark
 [stdout] /usr/bin/tshark

 [?]  Executing: which hashcat
 [stdout] /usr/local/bin/hashcat

 [?]  Executing: which hcxdumptool
 [stdout] /usr/local/bin/hcxdumptool

 [?]  Executing: which hcxpcaptool
 [stdout] /usr/local/bin/hcxpcaptool

 [?]  Executing: which macchanger
 [stdout] /usr/bin/macchanger

Please help!!!!
https://pep8.org/#programming-recommendations

[flake8](http://flake8.pycqa.org) testing of https://github.com/derv82/wifite2 on Python 3.8.0

$ __flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics__
```
./tests/test_Handshake.py:28:13: F821 undefined name 'fail'
            fail()
            ^
./wifite/tools/ifconfig.py:21:14: F632 use ==/!= to compare str, bytes, and int literals
        elif type(args) is 'str':
             ^
1     F632 use ==/!= to compare str, bytes, and int literals
1     F821 undefined name 'fail'
2
```
https://flake8.pycqa.org/en/latest/user/error-codes.html

On the flake8 test selection, this PR does _not_ focus on "_style violations_" (the majority of flake8 error codes that [__psf/black__](https://github.com/psf/black) can autocorrect).  Instead these tests are focus on runtime safety and correctness:
* E9 tests are about Python syntax errors usually raised because flake8 can not build an Abstract Syntax Tree (AST).  Often these issues are a sign of unused code or code that has not been ported to Python 3.  These would be compile-time errors in a compiled language but in a dynamic language like Python they result in the script halting/crashing on the user.
* F63 tests are usually about the confusion between identity and equality in Python.  Use ==/!= to compare str, bytes, and int literals is the classic case.  These are areas where __a == b__ is True but __a is b__ is False (or vice versa).  Python >= 3.8 will raise SyntaxWarnings on these instances.
* F7 tests logic errors and syntax errors in type hints
* F82 tests are almost always _undefined names_ which are usually a sign of a typo, missing imports, or code that has not been ported to Python 3.  These also would be compile-time errors in a compiled language but in Python a __NameError__ is raised which will halt/crash the script on the user.
If SSID have a space " " or un dot ".", the file in directory "hs", no generate the same name of SSID and parameter in cowpatty -s is no correct.
For example:
![image](https://user-images.githubusercontent.com/23158753/71335902-aa54f900-2523-11ea-94a3-c3523afe40fd.png)

![image](https://user-images.githubusercontent.com/23158753/71335914-b8a31500-2523-11ea-96ed-f46483a79b21.png)

![image](https://user-images.githubusercontent.com/23158753/71335933-cfe20280-2523-11ea-889d-245a51c13e8f.png)


The parameter "-s" is not correct. 
![image](https://user-images.githubusercontent.com/23158753/71336154-be4d2a80-2524-11ea-9e0f-e20bd299539c.png)


![image](https://user-images.githubusercontent.com/23158753/71336431-e12c0e80-2525-11ea-9fc4-fce498cda408.png)


You maybe fix this code:
![image](https://user-images.githubusercontent.com/23158753/71337033-847e2300-2528-11ea-9edb-dc26fd192e6e.png)

in wifite/util/crack.py
If SSID have a space " " or un dot "." in name, the file in hs, no generate the same name of SSID and parameter in cowpatty -s is no correct.
For example.
![image](https://user-images.githubusercontent.com/23158753/71335902-aa54f900-2523-11ea-94a3-c3523afe40fd.png)

![image](https://user-images.githubusercontent.com/23158753/71335914-b8a31500-2523-11ea-96ed-f46483a79b21.png)

![image](https://user-images.githubusercontent.com/23158753/71335933-cfe20280-2523-11ea-889d-245a51c13e8f.png)


The parameter "-s" is not correct. 
![image](https://user-images.githubusercontent.com/23158753/71336154-be4d2a80-2524-11ea-9e0f-e20bd299539c.png)


![image](https://user-images.githubusercontent.com/23158753/71336431-e12c0e80-2525-11ea-9fc4-fce498cda408.png)


You maybe fix this code:
![image](https://user-images.githubusercontent.com/23158753/71337033-847e2300-2528-11ea-9edb-dc26fd192e6e.png)

in wifite/util/crack.py
It's a bit shocking how many people use their SSID as their password. 

Unable to run wifite, tried installing all tools manually...Still seems to be same !

wifite
   .               .    
 .´  ·  .     .  ·  `.  wifite 2.2.5
 :  :  :  (¯)  :  :  :  automated wireless auditor
 `.  ·  ` /¯\ ´  ·  .´  https://github.com/derv82/wifite2
   `     /¯¯¯\     ´    

 **[!] Conflicting processes: wpa_supplicant (PID 22225), NetworkManager (PID 22254)**
 [!] If you have problems: kill -9 PID or re-run wifite with --kill)

 [+] Using wlan0mon already in monitor mode                                     

   NUM                      ESSID   CH  ENCR  POWER  WPS?  CLIENT               
   ---  -------------------------  ---  ----  -----  ----  ------
     1                     Mi A3     1   WPA   56db    no                       
     2            Android ap1456     6   WPA   51db    no                       
     3                  ARJIT_40     1   WPA   47db    no    1                  
     4                     Varun     1   WPA   37db   yes                       
     5                 AndroidAP    11   WPA   30db    no    1                  
     6                    Nitika     9   WPA   30db    no                       
     7                   excitel     8   WPA   29db    no                       
     8                   Excitel    13   WPA   23db   yes            