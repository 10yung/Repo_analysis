We have been using `unicorn worker killer` in our application, however, we need to kill the unicorn worker frequently due to high CPU usages and does not release. 
It would be nice to have a feature to restart or kill unicorn based on the CPU usages for a long period. 
This is just a quick question - I've googled this quite a bit and haven't found an answer. In this configuration

`use Unicorn::WorkerKiller::Oom, (192*(1024**2)), (256*(1024**2))`

192 = `memory_limit_min`
256 = `memory_limit_max`

What does the `(1024**2)` represent? Is the `2` the number of processes on the box? I'm running on a 4 core machine, so would I want to change that to `(256*(1024**4))`?

Thanks!

- [x] Cover modules with RSpec tests
- [x] Restructure monolithic `Unicorn::WorkerKiller` module
- [x] Add TravisCI config (support MRI versions since 1.9.3) [![Build Status](https://travis-ci.org/ViliusLuneckas/unicorn-worker-killer.svg?branch=feature/add-rspec)](https://travis-ci.org/ViliusLuneckas/unicorn-worker-killer)
I'm sorry for the silly PR, but I got confused by the message a bit, maybe this is clearer ?  don't hesitate to close it if you don't like it though ðŸ˜‰ 
Running Gitlab on a memory-constrained RPI2, where unicorn-worker-killer is used to restart workers after every X requests. Problem is that requests are infrequent and memory leaks accumulate while worker is running (even without any requests). Would be great to have option to set a time interval for the memory check instead of only doing it every X requests.
Not currently sure how to check if the worker killer is working. Also, where can I check the logs of unicorn worker killer?
When visiting a page that previously would have rendered a 404 page in my rails app, I am now getting a 500 error (after adding unicorn-worker-killer).

I get the following error in my unicorn error log:

```
Error during failsafe response: uncaught throw :warden
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/warden-1.2.6/lib/warden/proxy.rb:128:in `throw'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/warden-1.2.6/lib/warden/proxy.rb:128:in `authenticate!'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/devise-3.5.6/lib/devise/controllers/helpers.rb:116:in `authenticate_user!'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/callbacks.rb:432:in `block in make_lambda'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/callbacks.rb:145:in `block in halting_and_conditional'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/callbacks.rb:504:in `block in call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/callbacks.rb:504:in `each'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/callbacks.rb:504:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/callbacks.rb:92:in `__run_callbacks__'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/callbacks.rb:778:in `_run_process_action_callbacks'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/callbacks.rb:81:in `run_callbacks'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/abstract_controller/callbacks.rb:19:in `process_action'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_controller/metal/rescue.rb:29:in `process_action'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_controller/metal/instrumentation.rb:32:in `block in process_action'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/notifications.rb:164:in `block in instrument'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/notifications/instrumenter.rb:20:in `instrument'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/notifications.rb:164:in `instrument'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_controller/metal/instrumentation.rb:30:in `process_action'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_controller/metal/params_wrapper.rb:250:in `process_action'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activerecord-4.2.7.1/lib/active_record/railties/controller_runtime.rb:18:in `process_action'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/abstract_controller/base.rb:137:in `process'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionview-4.2.7.1/lib/action_view/rendering.rb:30:in `process'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_controller/metal.rb:196:in `dispatch'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_controller/metal/rack_delegation.rb:13:in `dispatch'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_controller/metal.rb:237:in `block in action'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/routing/route_set.rb:74:in `dispatch'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/routing/route_set.rb:43:in `serve'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/journey/router.rb:43:in `block in serve'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/journey/router.rb:30:in `each'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/journey/router.rb:30:in `serve'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/routing/route_set.rb:817:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/middleware/show_exceptions.rb:47:in `render_exception'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/middleware/show_exceptions.rb:35:in `rescue in call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/middleware/show_exceptions.rb:30:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/railties-4.2.7.1/lib/rails/rack/logger.rb:38:in `call_app'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/railties-4.2.7.1/lib/rails/rack/logger.rb:20:in `block in call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/tagged_logging.rb:68:in `block in tagged'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/tagged_logging.rb:26:in `tagged'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/tagged_logging.rb:68:in `tagged'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/railties-4.2.7.1/lib/rails/rack/logger.rb:20:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/request_store-1.3.0/lib/request_store/middleware.rb:9:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/middleware/request_id.rb:21:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/rack-1.6.4/lib/rack/methodoverride.rb:22:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/rack-1.6.4/lib/rack/runtime.rb:18:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/activesupport-4.2.7.1/lib/active_support/cache/strategy/local_cache_middleware.rb:28:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/rack-1.6.4/lib/rack/sendfile.rb:113:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/actionpack-4.2.7.1/lib/action_dispatch/middleware/ssl.rb:24:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/railties-4.2.7.1/lib/rails/engine.rb:518:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/railties-4.2.7.1/lib/rails/application.rb:165:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/newrelic_rpm-3.15.0.314/lib/new_relic/agent/instrumentation/middleware_tracing.rb:96:in `call'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/unicorn-5.0.1/lib/unicorn/http_server.rb:562:in `process_client'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/unicorn-5.0.1/lib/unicorn/http_server.rb:658:in `worker_loop'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/unicorn-5.0.1/lib/unicorn/http_server.rb:508:in `spawn_missing_workers'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/unicorn-5.0.1/lib/unicorn/http_server.rb:132:in `start'
  /home/deploy/.bundler/my_app/ruby/2.3.0/gems/unicorn-5.0.1/bin/unicorn_rails:209:in `<top (required)>'
  /home/deploy/.bundler/my_app/ruby/2.3.0/bin/unicorn_rails:23:in `load'
  /home/deploy/.bundler/my_app/ruby/2.3.0/bin/unicorn_rails:23:in `<main>'
```

Anyone else getting this error? Any ideas?

How can we check that unicorn worker process are getting killed and process can respawn themselves as per the pre-memory limit set in unicorn/worker_killer module.

What is the memory maths around which we should calculate and set the threshold value of max and min memory limit.

I am not able to read the memory process usage. below is the terminal spit and few things I tried to understand the implementation and observation at the memory level that unicorn/worker_killer is doing its task.

https://gist.github.com/arunsingh/55ad56a45ddbc4e9ee35bfb2896f1ef8

Was this a typo? Without install it says

`ERROR:  While executing gem ... (Gem::CommandLineError)
    Unknown command unicorn-worker-killer`

How do I determine how much memory a unicorn worker is currently using?
