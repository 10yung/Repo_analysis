I have tested the solution on this document:

http://somebody.dk/wp-content/uploads/2019/11/TOMv330.xls

But trying to write to a cell destroys elements of the document

This is my code:
```
module Excel
  class SendContract2
    require "spreadsheet"

    def self.return_contract

      Spreadsheet.client_encoding = 'UTF-8'

      tempXLSX = Rails.root.join('app/assets/spreadsheets/contract/TOMv330.xls')
      target = Rails.root.join('2019-11-05_190100.xls')
      target2 = Rails.root.join('2019-11-05_190100_out.xls')

      FileUtils.copy_file(tempXLSX, target)

      book = Spreadsheet.open(target)
      sheet1 = book.worksheet 0

      puts sheet1[0,0]
      sheet1[0,0] = "Tester"

      book.write target2

      return target2
    end
  end
end

```

I call it from console this way:

`f = Excel::SendContract2.return_contract
`
The output says:

```
KONTRAKT OPLYSNINGER
=> #<Pathname:/Users/sre/Project/Motorrummet/web/2019-11-05_190100.xls>

```
I open the f file using:

 \`open #{f}\`

And then Excel says: "Alert: File error: data may have been lost"
After this alert: "Alert: Unable to read file"
Then: "Alert: We found a problem with some content in xxxx Do you want us to try to recover as much as we can? .... "
Saying yes opens up the document 
The good thing: The cell headline was changed ;-)
The bad: 
All formatting is lost ... And even 1 of the sheets is completely missing.

Anyone who can help?
Kind Regards 
Søren Rehné
Add #open option to set the sheet password
https://github.com/zdavatz/spreadsheet/blob/1d746dd225440260756545761d400b21e890a223/lib/spreadsheet/worksheet.rb#L55

I don't see any code that update the columns array, like for example the update for the rows array here:
https://github.com/zdavatz/spreadsheet/blob/1d746dd225440260756545761d400b21e890a223/lib/spreadsheet/worksheet.rb#L231

that result that when i call `columns` on a sheet filled with columns, it return an empty array.