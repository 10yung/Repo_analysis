Hello !

## A detailed description of the proposed feature
It would be very cool to simplify the update/upgrade procedure, actually there is 3 different commands needed to be run periodically:
```
$ brew update
$ brew upgrade
$ brew cask upgrade
```

## The motivation for the feature
It would be simpler for users, to not have to use 3 different commands for the purpose of keeping stuff installed up-to-date.

## How the feature would be relevant to at least 90% of Homebrew users
Everyone would profit from simpler process I guess... ü§∑üèª‚Äç‚ôÄÔ∏è

## What alternatives to the feature have been considered
I checked running some of these as CRON jobs but it's not really practical because of reading the scripts output.

Thanks in advance.

I tried to `brew upgrade` an old/slow system with lots of outdated packages.
Maybe I'm mistaken but it seemed like once there was a failure everything gets rolled back, so there's no way to progress, besides fixing all issues first.
To upgrade at least some packages, I ran `for p in $(brew outdated | cut -f1); do brew upgrade $p; done`.
That works, however it then retries to build failing packages several times which makes it too slow (e.g. `cmake` b/c of outdated Xcode).
I could `brew pin` those packages to speed it up, but that requires manual work.

What I'm missing is some 'best effort'/'ignore failures' option for upgrade that doesn't retry failed dependencies.
Maybe also upgrade packages sorted by the number of dependencies to make it more likely to progress.
These aren't interesting enough to show in `brew config` as they duplicate other data already displayed.

- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [ ] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----
cabal sometimes picks old, possibly incompatible versions of
dependencies. stack pulls dependencies from a known-compatible set of
recent packages when possible, giving more reliable builds.
Debian and other distro packagers use it for this reason.
Cf https://github.com/Homebrew/homebrew-core/pull/49010

This commit just adds Language::Haskell::Stack as an alternate
install method, which can be selected by individual packages.
- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [ ] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [ ] Have you successfully run `brew style` with your changes locally?
- [ ] Have you successfully run `brew tests` with your changes locally?

-----

Discussion [here](https://github.com/Homebrew/brew/pull/6923) and [here](https://github.com/Homebrew/homebrew-core/issues/47627).
- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [ ] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [ ] Have you successfully run `brew style` with your changes locally?
- [ ] Have you successfully run `brew tests` with your changes locally?

-----

We started using `"-ldflags", "-s -w", "-trimpath"` arguments passed to `go build` and it would be nice to have them added to new formulae too by `brew create --go`.
- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [x] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [x] Have you successfully run `brew style` with your changes locally?
- [x] Have you successfully run `brew tests` with your changes locally?

-----

Following on from https://github.com/Homebrew/homebrew-cask/issues/67806, and https://github.com/Homebrew/homebrew-cask/pull/73867#discussion_r362870794 ‚Ä¶
python@2 is EOL, recommend to use system Python 2.

- [x] Have you followed the guidelines in our [Contributing](https://github.com/Homebrew/brew/blob/master/CONTRIBUTING.md) document?
- [x] Have you checked to ensure there aren't other open [Pull Requests](https://github.com/Homebrew/brew/pulls) for the same change?
- [x] Have you added an explanation of what your changes do and why you'd like us to include them?
- [ ] Have you written new tests for your changes? [Here's an example](https://github.com/Homebrew/brew/blob/master/Library/Homebrew/test/PATH_spec.rb).
- [ ] Have you successfully run `brew style` with your changes locally?
- [ ] Have you successfully run `brew tests` with your changes locally?

-----

- [x] are reporting a bug others will be able to reproduce and not asking a question. If you're not sure or want to ask a question do so on our Discourse: https://discourse.brew.sh
- [x] ran a `brew` command and reproduced the problem with multiple formulae? If it's a problem with a single, official formula (not cask) please file this issue at Homebrew/homebrew-core: https://github.com/Homebrew/homebrew-core/issues/new/choose. If it's a `brew cask` problem please file this issue at https://github.com/Homebrew/homebrew-cask/issues/new/choose. If it's a tap (e.g. Homebrew/homebrew-php) problem please file this issue at the tap.
- [x] ran `brew update` and can still reproduce the problem?
- [x] ran `brew doctor`, fixed all issues and can still reproduce the problem?
- [x] ran `brew config` and `brew doctor` and included their output with your issue?

# Bug description

On Catalina CI nodes:

- `brew install --verbose --build-bottle doxygen` (succeeds)
- `brew test --verbose doxygen` (works)
- `brew bottle --verbose --json doxygen --keep-old`

The bottle file produced contains an invalid `doxygen` binary, with many NUL bytes:

```
brew@Catalina ~ % tar xf doxygen--1.8.16.catalina.bottle.tar.gz doxygen/1.8.16/bin/doxygen
brew@Catalina ~ % xxd /usr/local/Cellar/doxygen/1.8.16/bin/doxygen | head -n 5           
00000000: cffa edfe 0700 0001 0300 0080 0200 0000  ................
00000010: 1300 0000 0808 0000 8580 2100 0000 0000  ..........!.....
00000020: 1900 0000 4800 0000 5f5f 5041 4745 5a45  ....H...__PAGEZE
00000030: 524f 0000 0000 0000 0000 0000 0000 0000  RO..............
00000040: 0000 0000 0100 0000 0000 0000 0000 0000  ................
brew@Catalina ~ % xxd ./doxygen/1.8.16/bin/doxygen | head -n 5
00000000: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000010: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000020: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000030: 0000 0000 0000 0000 0000 0000 0000 0000  ................
00000040: 0000 0000 0000 0000 0000 0000 0000 0000  ................
```

If I then reinstall from the bottle, `brew test` will fail as it cannot execute that binary. Note that `brew test` passes after the initial install (not installed from the bottle).
# A detailed description of the proposed feature

When upgrading a bottle, first download the new version, then remove the old one and, finally, install the new.

# The motivation for the feature

When upgrading things, the thing being upgraded will be unavailable for some time, since its first removed and then the download starts.

I regularly run `brew upgrade` and keep working since it takes some time... and often what I'm using (e.g. `go`) becomes unavailable during the process.

This can also lead to a "broken environment" if the user looses internet connection during the download.

# How the feature would be relevant to at least 90% of Homebrew users

Probably the more common use case is being able to use the software being upgraded while its being upgraded...

It is also how other macOS apps works: the "updater" downloads the new version while you're using the currently installed one.

So I think the relevance is in "working as most users would expect" (or maybe its just me üòÇ).

# What alternatives to the feature have been considered

If you keep the machine up all the time, maybe a cron job to do it at 4AM or something... not many ideas though ü§î

---

Thanks for Homebrew BTW, saved me TONS of time of the years! üôè