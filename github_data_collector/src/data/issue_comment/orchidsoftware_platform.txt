**Describe the bug**
Not working filter reset

**To Reproduce**
Steps to reproduce the behavior:

  1. Goto users page
  2. Set filter by name
  3. Try to reset filter by click on badge

**Expected behavior**
Page reloaded without filtration

**Screenshots**
If applicable, add screenshots to help explain your problem.
![image](https://user-images.githubusercontent.com/11323261/72603960-12cca580-392b-11ea-8dbe-ff3442de2489.png)

**Server (please complete the following information):**
  - Platfrom Version: 6.8.3

**Is your feature request related to a problem? Please describe.**
 I'm always frustrated when colors must be specified. Because constants are scattered across base classes. For instance:

```php
// Notification
new \Orchid\Platform\Notifications\DashboardNotification([
    'title'   => 'Hello Word',
    'message' => 'New post!',
    'action'  => 'http://orchid.software/',
    'type'    =>  DashboardNotification::INFO,
]);

// Alert
Alert::message('Welcome Aboard!', Alert::INFO);

// Notice
Toast::message('Welcome Aboard!', Toast::INFO);

// Button
Button::make('Delete')->type(Button::DANGER)
```
This is repeated too many times.

**Describe the solution you'd like**
Create a single class containing all colors as constants.
Which I could indicate in any objects

```php
class Color
{
    /**
     * Visual style.
     */
    public const INFO = 'info';
    public const SUCCESS = 'success';
    public const WARNING = 'warning';
    public const DEFAULT = 'default';
    public const DANGER = 'danger';
    public const PRIMARY = 'primary';
    public const SECONDARY = 'secondary';
    public const LIGHT = 'light';
    public const DARK = 'dark';
    public const LINK = 'link';
    public const ERROR = self::DANGER;
}
```




## Proposed Changes

  - Add more freedom to published migrations, for example - renaming.

Right now on the mobile tables looks very bad:
![image](https://user-images.githubusercontent.com/349293/68473862-1bbb3f80-0235-11ea-9db3-b1bcfb8031c8.png)

One other suggestion: add more responsive design to the tables. 

As example https://codepen.io/Jayesh_v/pen/xmModE

One other solution: have ability to fix one of the column and add horizontal scrolls to the tables.
 


At the moment I am working on the media library functionality for orchid based on vue.js. I would like to know what functionality you would like to see in the implementation. As a starting point I use wordpress media library and Laravel Media Manager plugin. The media library should support the basic functionality of downloading, cropping, resizing, previewing, etc.
If the community has suggestions or implementation questions: let me know

Just FYI: this will be additional package and not included to the base platform.
Sometimes we have a lot of columns on the table list but we not needed to show it for all of the users and it will be good dynamically (without reload page and without saving this in the database) show or hide columns. 
Nice example: https://datatables.net/examples/api/show_hide.html
I think we can do something like this

Обсуждение: [979](https://github.com/orchidsoftware/platform/pull/979)
**Is your feature request related to a problem? Please describe.**
I added a class `mt` to a checkbox like this 

`CheckBox::make('field')->title('Allow download?')->class('mt-4')`

When the field was rendered only the class I added was in the class attribute. I think the class I added should have been added to the already existing classes for the field.

**Describe the solution you'd like**
1. The new class is appended to the existing class for the field or html element when rendered 
      OR
2. The new class is appended by default but there is an option to specify if it should override the existing class

Now all kinds of fields, layers are built for editing by the user and making any changes. But when I need to display data, I have to use my own blade templates. They are quite flexible and convenient to use.

But we could provide some set for displaying data. I see this as a subset of the layer. 
**For example, card:**

![image](https://user-images.githubusercontent.com/5102591/65508209-63317a80-ded8-11e9-94e5-5d6d9b9c6d79.png)

code:

```php
namespace Orchid\Screen\Contents;

use Illuminate\Support\Arr;
use Orchid\Screen\Repository;
use Orchid\Screen\Layouts\Base;
use Orchid\Access\UserInterface;
use Orchid\Platform\Models\User;
use Orchid\Screen\Actions\Button;
use Illuminate\Support\Facades\Auth;
use Orchid\Screen\Contracts\ActionContract;

class CardContent extends Base
{

    /**
     * @return string|null
     */
    protected function title(): ?string
    {
        return $this->query->get('product.name');
    }

    /**
     * @return string|null
     */
    protected function descriptions(): ?string
    {
       return $this->query->get('product.descriptions');
    }

    /**
     * @return string|null
     */
    protected function image(): ?string
    {
         return $this->query->get('product.image');
    }

    /**
     * @return mixed
     */
    protected function status()
    {
        return $this->query->get('product.status');
    }

    /**
     * @return User|User[]|\Illuminate\Contracts\Auth\Authenticatable|null
     */
    protected function users()
    {
        return [
            Auth::user(),
            Auth::user(),
            Auth::user(),
        ];
    }

    /**
     * @param UserInterface $user
     *
     * @return string
     */
    protected function linkForUser(UserInterface $user)
    {
        return route('platform.systems.users.edit', $user);
    }

    /**
     * @return array
     */
    protected function commandBar(): array
    {
        return [
            Button::make('Example Button')
                ->method('example')
                ->icon('icon-bag'),
            Button::make('Example Button')
                ->method('example')
                ->icon('icon-bag'),
        ];
    }
}
```


**Cons or cons.**

All options do not have such flexibility as their own blade templates, but provide the user with examples of construction and operation. Let's try to decide if we need this and whether they will be useful in building the application.


**For example, comments:**
![image](https://user-images.githubusercontent.com/5102591/65508725-84469b00-ded9-11e9-9e91-63f312f3e98e.png)


We can take it out as a separate package. But I am not ready to support him. Therefore, I propose to implement this in the platform.

Let's vote and leave your thoughts and comments here

[![](https://api.gh-polls.com/poll/01DNHHMFJC68GX8HGDSBKFE73K/Display%20information%20required)](https://api.gh-polls.com/poll/01DNHHMFJC68GX8HGDSBKFE73K/Display%20information%20required/vote)
[![](https://api.gh-polls.com/poll/01DNHHMFJC68GX8HGDSBKFE73K/No%2C%20this%20is%20not%20necessary)](https://api.gh-polls.com/poll/01DNHHMFJC68GX8HGDSBKFE73K/No%2C%20this%20is%20not%20necessary/vote)
