Hi!

We are using Slather for generating HTML Code coverage reports in our project. 
Some project details:
- Xcode 11.2.1
- Fastlane 2.128.0
- cocoapods 1.8.4
- Slather 2.4.7

The lane, that running Slather looks like this:
```
          slather(
          build_directory: "#{derivedDataPath}",
          output_directory: "./cov_report",
          source_directory: ".",
          workspace: "./Project.xcworkspace",
          proj: "./Project.xcodeproj",
          scheme: "Scheme",
          cobertura_xml: true,
          circleci: isJenkinsEnv == false,
          jenkins: isJenkinsEnv,
          ignore: "./Pods*"
      )
      # slather can't generate both cubertura and html report at once
        slather(
          build_directory: "#{derivedDataPath}",
          output_directory: "./cov_report_html",
          source_directory: ".",
          workspace: "./Project.xcworkspace",
          proj: "./Project.xcodeproj",
          scheme: "Scheme",
          html: true,
          circleci: isJenkinsEnv == false,
          jenkins: isJenkinsEnv,
          ignore: "./Pods*"
      )
```

However, some time ago we became to get error like follows:
`[2020-01-13T15:47:21.473Z] +--------------------+------+

[2020-01-13T15:47:21.473Z] |       Test Results        |

[2020-01-13T15:47:21.473Z] +--------------------+------+

[2020-01-13T15:47:21.473Z] | Number of tests    | 1557 |

[2020-01-13T15:47:21.473Z] | Number of failures | 0    |

[2020-01-13T15:47:21.473Z] +--------------------+------+

[2020-01-13T15:47:21.473Z] 

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.60]: -----------------------------------------------------

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.60]: Step: Switch to ios gather_coverage_report lane

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.60]: -----------------------------------------------------

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.60]: Cruising over to lane 'ios gather_coverage_report' ðŸš–

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.61]: ---------------------

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.61]: --- Step: slather ---

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.61]: ---------------------

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.61]: gem 'slather' is already installed

[2020-01-13T15:47:22.887Z] INFO [2020-01-13 07:47:22.64]: $ slather coverage --jenkins --cobertura-xml --build-directory derivedData --source-directory . --output-directory ./cov_report --ignore ./Pods\* --scheme Scheme --workspace ./Project.xcworkspace ./Project.xcodeproj

[2020-01-13T15:47:24.285Z] INFO [2020-01-13 07:47:24.09]: â–¸ Slathering...

[2020-01-13T15:48:23.837Z] INFO [2020-01-13 07:48:18.31]: â–¸ sh: /usr/bin/xcrun: Argument list too long

[2020-01-13T15:48:38.270Z] INFO [2020-01-13 07:48:38.18]: â–¸ Slathered

[2020-01-13T15:48:39.154Z] INFO [2020-01-13 07:48:39.09]: ---------------------

[2020-01-13T15:48:39.154Z] INFO [2020-01-13 07:48:39.09]: --- Step: slather ---

[2020-01-13T15:48:39.154Z] INFO [2020-01-13 07:48:39.09]: ---------------------

[2020-01-13T15:48:39.154Z] INFO [2020-01-13 07:48:39.09]: gem 'slather' is already installed

[2020-01-13T15:48:39.154Z] INFO [2020-01-13 07:48:39.09]: $ slather coverage --jenkins --html --build-directory derivedData --source-directory . --output-directory ./cov_report_html --ignore ./Pods\* --scheme Scheme --workspace ./Project.xcworkspace ./Project.xcodeproj

[2020-01-13T15:48:41.833Z] INFO [2020-01-13 07:48:41.14]: â–¸ Slathering...

[2020-01-13T15:49:41.348Z] INFO [2020-01-13 07:49:40.08]: â–¸ sh: /usr/bin/xcrun: Argument list too long

[2020-01-13T15:50:40.861Z] INFO [2020-01-13 07:50:34.88]: â–¸ To open the html reports, use

[2020-01-13T15:50:40.861Z] INFO [2020-01-13 07:50:34.88]: â–¸ open '/jenkins/workspace/Project/cov_report_html/index.html'

[2020-01-13T15:50:40.861Z] INFO [2020-01-13 07:50:34.88]: â–¸ or use '--show' flag to open it automatically.

[2020-01-13T15:50:40.861Z] INFO [2020-01-13 07:50:34.88]: â–¸ Slathered

[2020-01-13T15:50:40.861Z] INFO [2020-01-13 07:50:37.44]: Cruising back to lane 'ios enterprise_tests_failable' ðŸš˜

[2020-01-13T15:50:40.861Z] INFO [2020-01-13 07:50:37.44]: Successfully generated documentation at path '/jenkins/workspace/Project/fastlane/README.md'
`

As a result, HTML report is in place, but it's blank :-( 
`sh: /usr/bin/xcrun: Argument list too long` seems to be a reason for this, but I don't get a clue how to fix it.

Will be very much appreciated your support with this.
Aleks
when ever i am trying this in CLI 

 cd /var/lib/jenkins/workspace/3rd job 

its showing too many argument.
what i need to do for this can you help out form this ??

  PLEASE SIR.
We have modularized our app by moving almost all functionality out of the main app target into separate framework modules. Is there a way to get a slather report on all modules at the same time or do I have to run a separate slather command for each module?
Hi all,

I'm trying to slather my project after running the test sets, but I encountered the following error:

`/Users/MY_USER/.rbenv/versions/2.5.0/lib/ruby/gems/2.5.0/gems/slather-2.4.7/lib/slather/project.rb:138:in `realpath': No such file or directory @ realpath_rec - /Users/MY_USER/Desktop/MY_PROJECT/Carthage/Checkouts/appcenter-sdk-apple (Errno::ENOENT)`

My setup is the following:

- Carthage
`github "microsoft/appcenter-sdk-apple"`

- Rome
```
Cache]
  local = ~/Library/Caches/Rome/

[RepositoryMap]
  appcenter-sdk-apple = static/AppCenter, static/AppCenterCrashes
```

- Fastlane
```
desc "Runs all the tests without rebuilding"
  lane :test do
    run_tests(
      scheme: "Dev",
      configuration: "Dev-Debug",
      code_coverage: true
    )

    prepare_coverage_reports
  end

  desc "Prepares coverage reports"
  lane :prepare_coverage_reports do
    slather(
      build_directory: lane_context[SharedValues::SCAN_DERIVED_DATA_PATH],
      binary_basename: "MY_PRODUCT_DIR",
      scheme: "Dev",
      proj: "MY_PRODUCT.xcodeproj",
      cobertura_xml: true,
      jenkins: true,
      output_directory: "build/coverage",
      ignore: [
        '*ViewController.swift', 
        '*Cell.swift',
        '*View.swift',
        'Carthage/*'
      ]
    )

    convert_code_coverage_for_sonar
  end
```

Of course, I'm hiding the other libraries, but before adding `appcenter-sdk-apple` as a static framework, everything used to work fine.
Additionally, the `Carthage/Checkouts` folder is completely empty, since I'm using `Rome` to download the dependencies locally.

I'm not sure why `slather` started digging in that folder now.

Below my Gemfile.lock if needed

```
GEM
  remote: http://rubygems.org/
  specs:
    CFPropertyList (3.0.1)
    activesupport (4.2.11.1)
      i18n (~> 0.7)
      minitest (~> 5.1)
      thread_safe (~> 0.3, >= 0.3.4)
      tzinfo (~> 1.1)
    addressable (2.7.0)
      public_suffix (>= 2.0.2, < 5.0)
    atomos (0.1.3)
    babosa (1.0.3)
    badge (0.11.0)
      curb (~> 0.9)
      fastimage (>= 1.6)
      fastlane (>= 2.0)
      mini_magick (~> 4.9.5)
    claide (1.0.3)
    clamp (1.3.1)
    colored (1.2)
    colored2 (3.1.2)
    commander-fastlane (4.4.6)
      highline (~> 1.7.2)
    concurrent-ruby (1.1.5)
    curb (0.9.10)
    declarative (0.0.10)
    declarative-option (0.1.0)
    digest-crc (0.4.1)
    domain_name (0.5.20190701)
      unf (>= 0.0.5, < 1.0.0)
    dotenv (2.7.5)
    emoji_regex (1.0.1)
    excon (0.68.0)
    faraday (0.17.0)
      multipart-post (>= 1.2, < 3)
    faraday-cookie_jar (0.0.6)
      faraday (>= 0.7.4)
      http-cookie (~> 1.0.0)
    faraday_middleware (0.13.1)
      faraday (>= 0.7.4, < 1.0)
    fastimage (2.1.7)
    fastlane (2.136.0)
      CFPropertyList (>= 2.3, < 4.0.0)
      addressable (>= 2.3, < 3.0.0)
      babosa (>= 1.0.2, < 2.0.0)
      bundler (>= 1.12.0, < 3.0.0)
      colored
      commander-fastlane (>= 4.4.6, < 5.0.0)
      dotenv (>= 2.1.1, < 3.0.0)
      emoji_regex (>= 0.1, < 2.0)
      excon (>= 0.45.0, < 1.0.0)
      faraday (~> 0.17)
      faraday-cookie_jar (~> 0.0.6)
      faraday_middleware (~> 0.13.1)
      fastimage (>= 2.1.0, < 3.0.0)
      gh_inspector (>= 1.1.2, < 2.0.0)
      google-api-client (>= 0.21.2, < 0.24.0)
      google-cloud-storage (>= 1.15.0, < 2.0.0)
      highline (>= 1.7.2, < 2.0.0)
      json (< 3.0.0)
      jwt (~> 2.1.0)
      mini_magick (>= 4.9.4, < 5.0.0)
      multi_xml (~> 0.5)
      multipart-post (~> 2.0.0)
      plist (>= 3.1.0, < 4.0.0)
      public_suffix (~> 2.0.0)
      rubyzip (>= 1.3.0, < 2.0.0)
      security (= 0.1.3)
      simctl (~> 1.6.3)
      slack-notifier (>= 2.0.0, < 3.0.0)
      terminal-notifier (>= 2.0.0, < 3.0.0)
      terminal-table (>= 1.4.5, < 2.0.0)
      tty-screen (>= 0.6.3, < 1.0.0)
      tty-spinner (>= 0.8.0, < 1.0.0)
      word_wrap (~> 1.0.0)
      xcodeproj (>= 1.8.1, < 2.0.0)
      xcpretty (~> 0.3.0)
      xcpretty-travis-formatter (>= 0.0.3)
    fastlane-plugin-appcenter (1.7.0)
    fastlane-plugin-sentry (1.6.0)
    gh_inspector (1.1.3)
    google-api-client (0.23.9)
      addressable (~> 2.5, >= 2.5.1)
      googleauth (>= 0.5, < 0.7.0)
      httpclient (>= 2.8.1, < 3.0)
      mime-types (~> 3.0)
      representable (~> 3.0)
      retriable (>= 2.0, < 4.0)
      signet (~> 0.9)
    google-cloud-core (1.4.1)
      google-cloud-env (~> 1.0)
    google-cloud-env (1.3.0)
      faraday (~> 0.11)
    google-cloud-storage (1.16.0)
      digest-crc (~> 0.4)
      google-api-client (~> 0.23)
      google-cloud-core (~> 1.2)
      googleauth (>= 0.6.2, < 0.10.0)
    googleauth (0.6.7)
      faraday (~> 0.12)
      jwt (>= 1.4, < 3.0)
      memoist (~> 0.16)
      multi_json (~> 1.11)
      os (>= 0.9, < 2.0)
      signet (~> 0.7)
    highline (1.7.10)
    http-cookie (1.0.3)
      domain_name (~> 0.5)
    httpclient (2.8.3)
    i18n (0.9.5)
      concurrent-ruby (~> 1.0)
    json (2.2.0)
    jwt (2.1.0)
    memoist (0.16.1)
    mime-types (3.3)
      mime-types-data (~> 3.2015)
    mime-types-data (3.2019.1009)
    mini_magick (4.9.5)
    mini_portile2 (2.4.0)
    minitest (5.13.0)
    multi_json (1.14.1)
    multi_xml (0.6.0)
    multipart-post (2.0.0)
    nanaimo (0.2.6)
    naturally (2.2.0)
    nokogiri (1.10.5)
      mini_portile2 (~> 2.4.0)
    os (1.0.1)
    plist (3.5.0)
    public_suffix (2.0.5)
    representable (3.0.4)
      declarative (< 0.1.0)
      declarative-option (< 0.2.0)
      uber (< 0.2.0)
    retriable (3.1.2)
    rouge (2.0.7)
    rubyzip (1.3.0)
    security (0.1.3)
    signet (0.12.0)
      addressable (~> 2.3)
      faraday (~> 0.9)
      jwt (>= 1.5, < 3.0)
      multi_json (~> 1.10)
    simctl (1.6.6)
      CFPropertyList
      naturally
    slack-notifier (2.3.2)
    slather (2.4.7)
      CFPropertyList (>= 2.2, < 4)
      activesupport (>= 4.0.2, < 5)
      clamp (~> 1.3)
      nokogiri (~> 1.8)
      xcodeproj (~> 1.7)
    terminal-notifier (2.0.0)
    terminal-table (1.8.0)
      unicode-display_width (~> 1.1, >= 1.1.1)
    thread_safe (0.3.6)
    tty-cursor (0.7.0)
    tty-screen (0.7.0)
    tty-spinner (0.9.1)
      tty-cursor (~> 0.7)
    tzinfo (1.2.5)
      thread_safe (~> 0.1)
    uber (0.1.0)
    unf (0.1.4)
      unf_ext
    unf_ext (0.0.7.6)
    unicode-display_width (1.6.0)
    word_wrap (1.0.0)
    xcodeproj (1.13.0)
      CFPropertyList (>= 2.3.3, < 4.0)
      atomos (~> 0.1.3)
      claide (>= 1.0.2, < 2.0)
      colored2 (~> 3.1)
      nanaimo (~> 0.2.6)
    xcpretty (0.3.0)
      rouge (~> 2.0.7)
    xcpretty-travis-formatter (1.0.0)
      xcpretty (~> 0.2, >= 0.0.7)

PLATFORMS
  ruby

DEPENDENCIES
  badge
  fastlane
  fastlane-plugin-appcenter
  fastlane-plugin-sentry
  slather

BUNDLED WITH
   2.0.2
```
i use slather on my `declarative-kit`, i really love slather, thanks for your great job dude.
Nokogiri bumped their version

https://github.com/sparklemotion/nokogiri/blob/master/CHANGELOG.md
I add  plugin 'slather'  in my podfile , then when pod install 
[!] Your Podfile requires that the plugin `slather` be installed. Please install it and try installation again.
Getting following error when doing slather through travis ci

`Slathering...
/Users/travis/.rvm/rubies/ruby-2.4.5/lib/ruby/2.4.0/json/common.rb:156:in `parse': 751: unexpected token at '<h2>This website is under heavy load (queue full)</h2><p>We're sorry, too many people are accessing this website at the same time. We're working on this problem. Please try again later.</p>' (JSON::ParserError)
	from /Users/travis/.rvm/rubies/ruby-2.4.5/lib/ruby/2.4.0/json/common.rb:156:in `parse'
	from /Users/travis/.rvm/gems/ruby-2.4.5/gems/slather-2.4.7/lib/slather/coverage_service/coveralls.rb:224:in `post'
	from /Users/travis/.rvm/gems/ruby-2.4.5/gems/slather-2.4.7/lib/slather/command/coverage_command.rb:97:in `post'
	from /Users/travis/.rvm/gems/ruby-2.4.5/gems/slather-2.4.7/lib/slather/command/coverage_command.rb:59:in `execute'
	from /Users/travis/.rvm/gems/ruby-2.4.5/gems/clamp-1.3.1/lib/clamp/command.rb:66:in `run'
	from /Users/travis/.rvm/gems/ruby-2.4.5/gems/clamp-1.3.1/lib/clamp/subcommand/execution.rb:18:in `execute'
	from /Users/travis/.rvm/gems/ruby-2.4.5/gems/clamp-1.3.1/lib/clamp/command.rb:66:in `run'
	from /Users/travis/.rvm/gems/ruby-2.4.5/gems/clamp-1.3.1/lib/clamp/command.rb:140:in `run'
	from /Users/travis/.rvm/gems/ruby-2.4.5/gems/slather-2.4.7/bin/slather:17:in `<top (required)>'
	from /Users/travis/.rvm/gems/ruby-2.4.5/bin/slather:23:in `load'
	from /Users/travis/.rvm/gems/ruby-2.4.5/bin/slather:23:in `<main>'
	from /Users/travis/.rvm/gems/ruby-2.4.5/bin/ruby_executable_hooks:24:in `eval'
	from /Users/travis/.rvm/gems/ruby-2.4.5/bin/ruby_executable_hooks:24:in `<main>'`
I have an App with several Framework Targets each of which has an Test Target:
```
App
AppTest
FrameworkA
FrameworkATest
FrameworkB
FrameworkBTest
...
```
with a corresponding file hierarchy:
```
App/Class.swift
AppTest/ClassTest.swift
FrameworkA/ClassFromFrameworkA.swift
FrameworkATest/ClassFromFrameworkATest.swift
...
```

The hole Project "App.xcodeproj" is wrapped in a Xcode Workspace "App.xcworkspace".
I have a Test.scheme which references all Test Targets. Coverage in Xcode works.

Now when I run 
`slather coverage -s --verbose --scheme Test --workspace App.xcworkspace/  App.xcodeproj/`
I get a list of coverage only for the files of the App and the Testfiles of the Test Targets:
```
App/Class.swift
AppTest/ClassTest.swift
FrameworkATest/ClassFromFrameworkATest.swift
```
The code files of the Frameworks are missing:
```
FrameworkA/ClassFromFrameworkA.swift
```

Thanks in advance for your help.
slather coverage -x --verbose --output-directory sonar-reports/cobertura.xml --source-files Classes/xx.m --scheme iLife --workspace xx.xcworkspace xx.xcodeproj
Slathering...

Processing coverage file: /Users/xx/Library/Developer/Xcode/DerivedData/xx-bjvnokbuenhgoifyeirbwfwusokf/Build/ProfileData/4FFDFBE8-97B6-4AB0-9AF2-FF1078D2B40B/Coverage.profdata
Against binary files:
	/Users/xx/Library/Developer/Xcode/DerivedData/xx-bjvnokbuenhgoifyeirbwfwusokf/Build/Products/Debug-iphonesimulator/xx.app/xx

sh: /usr/bin/xcrun: Argument list too long