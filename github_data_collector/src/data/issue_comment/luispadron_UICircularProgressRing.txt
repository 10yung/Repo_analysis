:warning: **This issue will be closed if the required information is not filled** :warning:

## Version

- Version = 6.1.0

## Details

I don't know How to create gradientColor ring。Can you show Some Code?
Hi

This seems to me a strange behavior but maybe I did not understand something from the documentation.

If I setup the Ring.value before adding the Ring to the view hierarchy, the value shows and when I startProgress(...) it starts from there the animation.

If I setup the Ring.value somewhere else, like after pressing a button and before startProgress(), everything starts from 0.  Although the line is not there anymore, I did try Ring.setNeedsDisplay() to update the visual.

This is test code, but on the official app, I will need the Ring to show progression on a 14 hours period.  The app wont be visible all the time, so I need to set the value from where we are when the app open before starting the animation.

```swift
import UIKit
import UICircularProgressRing

class ViewController: UIViewController {

    let progressRing = UICircularProgressRing()
    
    override func viewDidLoad() {
        super.viewDidLoad()
        prepareRingView()
        self.view.addSubview(progressRing)
    }

    func prepareRingView() {
        progressRing.fullCircle = false
        progressRing.startAngle = 135
        progressRing.endAngle = 45
        progressRing.style = .inside
        progressRing.minValue = 0
        progressRing.maxValue = 14
        progressRing.valueKnobStyle = .default
        progressRing.valueFormatter = UICircularProgressRingFormatter(valueIndicator: " Hr", rightToLeft: false,                                     showFloatingPoint: true, decimalPlaces: 1)
        progressRing.gradientOptions = UICircularRingGradientOptions(startPosition: .left, endPosition: .right, colors: [.green, .yellow, .orange], colorLocations: [0, 0.4, 0.9])
        progressRing.frame = CGRect(x: UIScreen.main.bounds.midX - 100,
                                    y: UIScreen.main.bounds.midY - 100,
                                    width: 200, height: 200)
        progressRing.animationTimingFunction = .linear
        progressRing.value = 2  /// Good at visual, starts from there
    }
    
    @IBAction func buttonPressed(_ sender: Any) {
        let initialTI = 300 - (progressRing.value * 300) / 14
        //progressRing.value = 2  ///Does set to 2, starts from 0
        print("Value 1: \(progressRing.value)")
        progressRing.startProgress(to: 14, duration: TimeInterval(initialTI))
        progressRing.continueProgress()
        print("Initial : \(initialTI)")
    }
    
}
```

Thank you

XCode 11, Swift 5.1

## Bug Report

:warning: **Your issue will be closed if these are not filled out**. :warning:

#### Version

Unpublished beta version

#### Overview of what you tried to do

Fade progress ring inside animation block

#### What is the expected outcome?

Progress ring alpha fades to 0 within animation block, completion called

#### What is the actual outcome?

when I do that, the animation block never gets to the completion block! what I see is that the alpha property was set on the progress ring (it disappears), but the knob remains visible and is unaffected.

#### Post sample code or example here

*If sample code can't be provided because it's too long, please provide a small example project,
where I can test, if you cannot provide either. There is not much I can do.*
I noticed a weird issue that I think may have something to do with the fix you implemented. I think you may want to look into it.
When switching states in my application I use some animations when removing some UI controls. So when I switch from a "playing" state to "stopped", for example, I want the progress ring to fade, and then I remove it, using something like this:

```swift
UIView.animate(withDuration: 0.4, delay: 0.0, options: .curveEaseOut, animations: {
             self.progressRing.alpha = 0.0

            }) { (success) in

                self.progressRing.resetProgress()
                self.progressRing.removeFromSuperview()
}
```
However, when I do that, the animation block never gets to the completion block! what I see is that the alpha property was set on the progress ring (it disappears), but the knob remains visible and is unaffected. I'm not sure what's going on, but because of the strange behavior of the knob not getting the alpha set to 0 I'm assuming it may have something to do with your code change.
I wasn't sure if to write this here (for context) or open a new issue.
Regards,
Yariv.
#### Have you tried fixing this yourself?

This project is open source, and I'm a student with very minimal amount of time.
Please give an attempt at fixing the issue first before creating a bug report.
This saves everyone time and benefits anyone who uses the library.
Pull requests are welcome!



Add inReverse variable to UICircularProgressRing class to all the user to determine which direction the value label is counting.
:warning: **This issue will be closed if the required information is not filled** :warning:

_If it's a question about something that is happening within your code base, either post a small amount of code, or post an example project where I can try to assist.
Make sure to communicate back and keep issue updated or it will be closed_

## Version

- Version = Any

## Details

- Has the question been answered [here](https://github.com/luispadron/UICircularProgressRing/issues?utf8=✓&q=label%3Aquestion) before?
  - No
- Please provide as much detail as possible below
  -  Hi. First of all, thank you for this awesome library. Really appreciate your efforts :) My issue is, I want to let timer run even after endTime. For example, i will give startTime to start the timer and endTime in order to complete 1 circle per ring and I want the timer to run infinitely. Is there any option available? or how can I achieve it? I have attached a video for reference. Thanks!
![ezgif com-video-to-gif](https://user-images.githubusercontent.com/35156670/64140846-624c8200-ce1f-11e9-958d-befd06c393de.gif)



Library should support SwiftUI and integrate with new framework nicely.
**Is your feature request related to a problem? Please describe.**
Currently do not have an easy way to place a background image that fits inside (and only inside) the rings. 
**Describe the solution you'd like**
A way to send in a UIImage that fills the space inside and behind the rings, matching the ring radius.

**Describe alternatives you've considered**
I've tried playing around by adding an Image View inside the UICircularProgressRing view and setting its radius to match that of the rings, clearly this is smelly, and the image seems to always sit on top of the ring, thus hiding the ring. Is there an alternative that is similar to what I have tried that may actually work? I feel like this could be a useful and valuable feature to an already excellent library. 
Try the following code:

`        

    func testProgress()
    {        
        self.progressView.outerRingColor = UIColor.white
        self.progressView.outerRingWidth = 10
        self.progressView.innerRingWidth = 10

        self.progressView.animateProperties(duration: 1.0, animations: { () -> Void in
            self.progressView.outerRingWidth = 20
            self.progressView.innerRingWidth = 20

            self.progressView.outerRingColor = UIColor(alphaHex:"#38383e")
        }, completion: {
            self.progressView.outerRingWidth = 5
            self.progressView.innerRingWidth = 5

            self.progressView.animateProperties(duration: 1.0, animations: { () -> Void in
                self.progressView.outerRingWidth = 30
                self.progressView.innerRingWidth = 30
            })
        })
    }

`

It never sets the width to 5. It goes from 10 to 20, then 30. 

If you take out the second animation, it pops to 5 as expected. Basically mixing animation and non-animation doesn't work.

Also, the color just pops midway through the animation from White to grey. There's no fade.