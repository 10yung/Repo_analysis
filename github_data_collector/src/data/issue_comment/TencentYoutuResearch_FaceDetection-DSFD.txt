pytorch=1.10
cuda=9.0
This error is displaying while running "python widerface_val.py"
Can you tell me where the problem is?

Testing image 1/3226 0_Parade_marchingband_1_465.jpg....
Traceback (most recent call last):
  File "widerface_val.py", line 306, in <module>
    test_widerface()
  File "widerface_val.py", line 293, in test_widerface
    [det2, det3] = multi_scale_test(image, max_im_shrink)#min(2,1400/min(image.shape[0],image.shape[1])))  #multi-scale test
  File "widerface_val.py", line 104, in multi_scale_test
    det_b = detect_face(image, bt)
  File "widerface_val.py", line 60, in detect_face
    y = net(x)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/cqupt/.conda/envs/w_py36/FaceDetection-DSFD/face_ssd.py", line 238, in forward
    conv5_3_x = self.layer3(conv4_3_x)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torch/nn/modules/container.py", line 92, in forward
    input = module(input)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torch/nn/modules/container.py", line 92, in forward
    input = module(input)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torchvision/models/resnet.py", line 98, in forward
    out = self.conv2(out)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torch/nn/modules/module.py", line 493, in __call__
    result = self.forward(*input, **kwargs)
  File "/home/cqupt/.conda/envs/w_py36/lib/python3.6/site-packages/torch/nn/modules/conv.py", line 338, in forward
    self.padding, self.dilation, self.groups)
RuntimeError: CUDA out of memory. Tried to allocate 12.00 MiB (GPU 0; 10.76 GiB total capacity; 9.63 GiB already allocated; 7.06 MiB free; 358.29 MiB cached)


inference code for running getting outputs of multiple images at once (it will give images as well as bounding box coordinate files) 
further the notebook is ready to run on G-colab as well as local system !
This error is displaying while running "!python widerface_val.py"

Traceback (most recent call last):
  File "widerface_val.py", line 10, in <module>
    from data import WIDERFace_ROOT , WIDERFace_CLASSES as labelmap
  File "/content/drive/My Drive/FaceDetection-DSFD/data/__init__.py", line 3, in <module>
    from .widerface import WIDERFaceDetection, WIDERFaceAnnotationTransform, WIDERFace_CLASSES, WIDERFace_ROOT
ImportError: cannot import name 'WIDERFaceDetection'
HI
Is it convenient to provide the **DSFD-ResNet50** model??
many many thanks!!
my emial is [nedved-f@163.com](url)!!
The IAM strategy, which is said as below in the paper,

![image](https://user-images.githubusercontent.com/26649742/67678061-00486d00-f9c9-11e9-854d-45ed3f38df1b.png)

where can i find this Face augmentationing code ? I saw a [thread](https://github.com/TencentYoutuResearch/FaceDetection-DSFD/issues/31) regarding this, so i explored the code, found the code about DAS(data anchor sampling) proposed PyramidBox in the augmentation.py but not found nothing related to IAM. 

Is it implemented in this repo?


Can you directly decompress it under data?
I need a smaller pre-trained backbone for inference in CPU. Thanks.
To run the demo, in addition to the listed requirements, you also need

opencv-python
scipy
matplotlib
This is too big. Release something small.
Using in a conda env with Pytorch GPU, I get the following warning:
```
/tmp/pip-req-build-p5q91txh/torch/csrc/autograd/python_function.cpp:638: UserWarning: Legacy autograd function with non-static forward method is deprecated and will be removed in 1.3. Please use new-style autograd function with static forward method. (Example: https://pytorch.org/docs/stable/autograd.html#torch.autograd.Function)
```
Is this something that is a DIY?