Previous PR: https://github.com/OISF/suricata/pull/4486
But based on: https://github.com/OISF/suricata/pull/4489

Just fixes the FROZEN check on the CentOS 7 GitHub CI
build.

Also tested on a CentOS 8 system that was completley
offline with Rust 1.33 to verify that Cargo.lock
could be generated from vendored sources without
going online.
#4486 without the tmp github-ci fix and with MinGW rust fix.
Add a new set of StringParse* functions and use them for strict parsing in all parser, configuration and setup functions.
Related to [redmine](https://redmine.openinfosecfoundation.org/projects/suricata/issues) ticket: https://redmine.openinfosecfoundation.org/issues/3053
Link to [redmine](https://redmine.openinfosecfoundation.org/projects/suricata/issues) ticket: https://redmine.openinfosecfoundation.org/issues/2779

Note: Everything is specific to DCERPC over UDP only even if at certain places name reads DCERPC only.
Link to redmine ticket:
https://redmine.openinfosecfoundation.org/issues/2859

Describe changes: preparation for fuzzing
- Using more `const` keywords
- log can use a file set from env variable
- adds a util `UTHmemsearch` function to be able to use `memmem` for fuzz targets

Modifies #4454 with :
- removing init.c file
- adds `InitGlobal` function to suricata.c (changing some order for windows)
- adds hack not to use `main` while fuzzing with `#ifdef FUZZING_BUILD_MODE_UNSAFE_FOR_PRODUCTION`

Another way is proposed in v6 : have a different file for `main` which is just a wrapper to the existing function

I am not sure about the `SCInstance suricata` variable :
It seems to be a global variable
But some functions expect it as a parameter, even if it always refer to the global variable
Should fuzz targets use their own global variable ? (to call `PostConfLoadedSetup`)

This bug may cause CheckOverlap to always return true.
This PR converts from using Python to generate C headers from
Rust to using cbindgen, which better understands Rust code.

Also updates the Rust code to Rust 2018.

Previous PR: https://github.com/OISF/suricata/pull/4477

Changes from last PR:
- Remove all distcheck fixups, that while fix some things
  in out of tree offline builds, break some builds as well.

[PRScript](https://redmine.openinfosecfoundation.org/projects/suricata/wiki/PRscript) output (if applicable):
- Fails, builders require cbindgen.
Migrates DHCP logging to use the new JsonBuilder. This is based on
PR #4477 to get Rust 2018 and cbindgen support, so only look at the
commits after that to get an idea of how this looks.

Related ticket:
https://redmine.openinfosecfoundation.org/issues/2726

Previous PR: https://github.com/OISF/suricata/pull/4476

Changes from last PR:
- Drop "sc" prefix on the C functions for the JsonBuilder,
  now its exposed as jb_set_string, etc for JsonBuilder (
  maybe js_ would be better though).
- In DHCP logging, pass in a JsonBuilder instead of
  allocating a new one.
- Remove the rustfmt of logger.rs to easier see the diff.

[PRScript](https://redmine.openinfosecfoundation.org/projects/suricata/wiki/PRscript) output (if applicable):
- Fails as based on #4477 which requires cbindgen.
This PR contains a fix for the coverity discovered issue handling TX detection flags.

Link to [redmine](https://redmine.openinfosecfoundation.org/projects/suricata/issues) ticket:[3431](https://redmine.openinfosecfoundation.org/issues/3434)

Describe changes:
- Update correct TX flags.

Make sure these boxes are signed before submitting your Pull Request -- thank you.

- [x] I have read the contributing guide lines at https://redmine.openinfosecfoundation.org/projects/suricata/wiki/Contributing
- [x] I have signed the Open Information Security Foundation contribution agreement at https://suricata-ids.org/about/contribution-agreement/
- [x] I have updated the user guide (in doc/userguide/) to reflect the changes made (if applicable)

Link to redmine ticket:
[https://redmine.openinfosecfoundation.org/issues/2818](https://redmine.openinfosecfoundation.org/issues/2818)

Describe changes:
```
Added hardware based bypass support on Napatech SmartNICs
Added support for inline processing using Napatech SmartNICs
```
This PR Addresses issues identified in the review of [PR 4472 ](https://github.com/OISF/suricata/pull/4472)
This reflects changes since PR  [Napatech bypass v1.07]https://github.com/OISF/suricata/pull/4472)

(This is a resubmission of the changes in PR v1.09 which had a minor merge error.)
