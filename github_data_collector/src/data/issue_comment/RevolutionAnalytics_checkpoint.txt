The below error is reported from checkpoint_log method and the mranURL is 'file:///c:/dev/snapshot'

Error in data.frame(timestamp = Sys.time(), snapshotDate = snapshotDate,  : 
  arguments imply differing number of rows: 1, 34, 0

The log returned from install.packages is as below
WARNING: Rtools is required to build R packages but is not currently installed. Please download and install the appropriate version of Rtools before proceeding:

https://cran.rstudio.com/bin/windows/Rtools/
Installing package into ‘c:/dev/.checkpoint/2020-01-07/lib/x86_64-w64-mingw32/3.5.1’
(as ‘lib’ is unspecified)
package ‘ggplot2’ successfully unpacked and MD5 sums checked

The content type and size of the content is not getting emitted as it happen through a https:// url.

Can you please assist me on this?
When running 

```
checkpoint(
          librarySnapshot,
          project = project,
          R.version = R.version,
          checkpointLocation = checkpointLocation,verbose = TRUE
        )
```

we get this error:
> **Error in data.frame(timestamp = Sys.time(), snapshotDate = snapshotDate,  : 
  arguments imply differing number of rows: 1, 18, 0**

It is happening in this bit of code:

https://github.com/RevolutionAnalytics/checkpoint/blob/233634f25764cec5a8e872d60e693f8045db88f0/R/checkpoint_log.R#L16-L23

And I believe it happens because the `install.packages` message is in a format that the interpreter isn't expecting.

Here is what the message ends up looking like:

> Browse[4]> log
[1] "also installing the dependencies ‘backports’, ‘ellipsis’, ‘digest’, ‘zeallot’, ‘utf8’, ‘vctrs’, ‘fansi’, ‘pillar’, ‘purrr’, ‘glue’, ‘pkgconfig’, ‘Rcpp’, ‘rlang’, ‘tibble’, ‘tidyselect’, ‘BH’, ‘plogr’"
[2] ""                                                                                                                                                                                                       
[3] "installing the source packages ‘pillar’, ‘pkgconfig’"                                                                                                                                                   
[4] "" 

This leads to the byte count being a zero length character string:
> Browse[5]> extract_bytes(log)
character(0)

which then fails when combined with the other columns:

> Browse[5]> data.frame(timestamp = Sys.time(), snapshotDate = snapshotDate, 
\+            pkg = c(extract_pkgs(log), pkg), bytes = extract_bytes(log), 
\+            stringsAsFactors = FALSE, check.names = FALSE)
**Error in data.frame(timestamp = Sys.time(), snapshotDate = snapshotDate,  : 
  arguments imply differing number of rows: 1, 18, 0**

The other columns are as follows:
> Browse[5]> snapshotDate
[1] "2019-11-01"

> Browse[5]> c(extract_pkgs(log), pkg)
 [1] "backports"  "ellipsis"   "digest"     "zeallot"    "utf8"      
 [6] "vctrs"      "fansi"      "pillar"     "purrr"      "glue"      
[11] "pkgconfig"  "Rcpp"       "rlang"      "tibble"     "tidyselect"
[16] "BH"         "plogr"      "dplyr"

It looks like the code tries to detect something similar but maybe just needs an extra check for the case where there are both binary and source packages:

https://github.com/RevolutionAnalytics/checkpoint/blob/233634f25764cec5a8e872d60e693f8045db88f0/R/checkpoint_log.R#L14

AFAICS checkpoint doesn't scan `.Rprofile` for requirements.

<details>

```
> sessionInfo()
R Under development (unstable) (2019-08-06 r76924)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.3 LTS

Matrix products: default
BLAS:   /home/vspinu/bin/R-latest/lib/libRblas.so
LAPACK: /home/vspinu/bin/R-latest/lib/libRlapack.so

locale:
 [1] LC_CTYPE=en_US.UTF-8       LC_NUMERIC=C               LC_TIME=en_GB.utf8        
 [4] LC_COLLATE=en_US.UTF-8     LC_MONETARY=de_DE.UTF-8    LC_MESSAGES=en_US.UTF-8   
 [7] LC_PAPER=de_DE.UTF-8       LC_NAME=C                  LC_ADDRESS=C              
[10] LC_TELEPHONE=C             LC_MEASUREMENT=de_DE.UTF-8 LC_IDENTIFICATION=C       

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

loaded via a namespace (and not attached):
[1] compiler_3.7.0   tools_3.7.0      checkpoint_0.4.7
```
</details>
Currently `checkpoint` fails when scanForPackages=FALSE and no local directory exists:

```R
> checkpoint::checkpoint("2019-11-01", scanForPackages = FALSE, verbose = FALSE)
Error in checkpoint::checkpoint("2019-11-01", scanForPackages = FALSE,  : 
  Local snapshot location does not exist
```

Would it make more sense to initialize the local repo instead of throwing an error? Or at least have an option to not throw an error? 
https://github.com/r-lib/pak
https://cran.r-project.org/package=pak

Among other things, should be much better than screen-scraping to detect install results.

EDIT: pak is the frontend, [pkgdepends](https://github.com/r-lib/pkgdepends) is the backend, yet to be submitted to CRAN
I am hoping to use `scanForPackages()` to identify all packages used to generate an RMarkdown document, within the document. When run in the console, `scanForPackages(use.knitr = TRUE)` is able to detect all the packages loaded in the `.Rmd` file. But when knitted, it returns without any packages. 

Minimal example, saved as `test.Rmd`:

```
    ---
    title: "Test Doc"
    author: "Connor P. Jackson"
    date: "7/22/2019"
    output:
      pdf_document:
        keep_md: yes
    ---

    ```{r setup}
    library(pander)
    library(checkpoint)
    ```

    ```{r citations}
    scanForPackages(use.knitr = TRUE)
    ```

```

Expected output, as generated when run in the console: 

```
$pkgs
[1] "checkpoint" "pander"    

$error
character(0)
```

But when the document is knitted, the results are:

```
## No file at path '/var/folders/6q/wp5m99kx41z7txrfxwywf2wr0000gn/T//RtmpbZ4NGz/file32a67e5f45d9.Rmd'.

## $pkgs
## character(0)
## 
## $error
## [1] "test.Rmd"
```

Any ideas why this file does not work within a document being knitted? 
First of all thanks for the checkpoint package, I am using this a lot to ensure reproducibility of my analyses!

Recently I found some (for me) surprising behaviour of checkpoint, which seems to be a bug to me.

What I thought calling `checkpoint::checkpoint` would do:
- Change the `.libPaths` so new packages are loaded and installed to the checkpoint folder
- Set `options("repos")` to the MRAN snapshot, so calling `install.packages()` will install from the MRAN website instead of CRAN.

But the second point only seems to be TRUE if I run checkpoint with `scanForPackages = TRUE` **and** there is a new package found, which is not already installed. Else `option("repos")` is **not** changed, so  `install.packages` will install the latest package from CRAN into the checkpoint folder.
I think this is very confusing and probably has negative effects on reproducibility.

I see this code inside the checkpoint function:
```
if(length(packages.to.install) > 0) {
    # set repos
    setMranMirror(snapshotUrl = snapshoturl)
```
So repos is only changed when there are new packages to install. Wouldn't it be better to change this independently even if there are no new packages to install? Because users will still install new packages with `install.packages` and if these packages are installed from `cran.rstudio.com` the whole point of reproducibility with checkpoint is contradicted.

Here is example code to reproduce the problem:

```
.libPaths()
#> [1] "C:/ProgrammePAM/R-3.5.1/library"

options("repos")
#> $repos
#> [1] "https://cran.rstudio.com/"   "https://cloud.r-project.org"

checkpoint::checkpoint("2018-06-01",
                       checkpointLocation = "C:/R",
                       scanForPackages = FALSE)
#> Skipping package scanning
#> checkpoint process complete
#> ---

.libPaths()
#> [1] "C:/R/.checkpoint/2018-06-01/lib/x86_64-w64-mingw32/3.5.1"
#> [2] "C:/R/.checkpoint/R-3.5.1"                                
#> [3] "C:/PROGRA~4/R-35~1.1/library"

# repos is not changed to MRAN!
options("repos")
#> $repos
#> [1] "https://cran.rstudio.com/"   "https://cloud.r-project.org"

checkpoint::checkpoint("2018-06-01",
                       checkpointLocation = "C:/R",
                       scanForPackages = TRUE)
#> Scanning for packages used in this project
#> No file at path 'C:\Users\QXV6024\AppData\Local\Temp\Rtmpek7pGt\file344416693e26.Rmd'.
#> - Discovered 3 packages
#> Installing packages used in this project
#>  - Installing 'A3'
#> A3
#> also installing the dependency 'pbapply'
#> checkpoint process complete
#> ---

library(A3)
#> Loading required package: xtable
#> Loading required package: pbapply

.libPaths()
#> [1] "C:/R/.checkpoint/2018-06-01/lib/x86_64-w64-mingw32/3.5.1"
#> [2] "C:/R/.checkpoint/R-3.5.1"                                
#> [3] "C:/PROGRA~4/R-35~1.1/library"

# Now repos is changed to mran!
options("repos")
#> $repos
#> [1] "https://mran.microsoft.com/snapshot/2018-06-01"
```
Others have filed this class of bug, but not been able to reproduce.

> Error in data.frame(timestamp = Sys.time(), snapshotDate = snapshotDate,  :
>   arguments imply differing number of rows: 1, 11, 0
> Calls: icd_checkpoint -> checkpoint -> checkpoint_log -> data.frame
> Execution halted

The problem is in `checkpoint_log.R`, where a regex assumes that certain words appear in the messages emitted from `install.packages`.

To demonstrate this problem you can use docker:
```
docker run --rm -ti rocker/tidyverse R
```
I had checkpoint output the actual `install.packages` messages, and see the following for a single line R file, in an otherwise empty folder, containing `library(bench)`

```
> checkpoint("2018-08-23")
Error in checkpoint("2018-08-23") : could not find function "checkpoint"
> checkpoint::checkpoint("2018-08-23")
Can I create directory ~/.checkpoint for internal checkpoint use?

Continue (y/n)? y
Scanning for packages used in this project
- Discovered 1 packages
Installing packages used in this project
 - Installing ‘bench’
bench
also installing the dependencies ‘assertthat’, ‘cli’, ‘crayon’, ‘fansi’, ‘utf8’, ‘glue’, ‘pillar’, ‘profmem’, ‘rlang’, ‘tibble’

trying URL 'https://mran.microsoft.com/snapshot/2018-08-23/src/contrib/assertthat_0.2.0.tar.gz'
downloaded 11 KB

trying URL 'https://mran.microsoft.com/snapshot/2018-08-23/src/contrib/cli_1.0.0.tar.gz'
downloaded 1.8 MB

trying URL 'https://mran.microsoft.com/snapshot/2018-08-23/src/contrib/crayon_1.3.4.tar.gz'
downloaded 643 KB
```
etc.

Note that, for whatever reason, there is no line which matches the regex `ptn <- "(Content type .* length )(\\d+).*"` which appears in `checkpoint_log.R`

When the log data frame is contructed, the `bytes` vector is of length zero, so the data frame construction fails. It would be a simple fix just to make this a recycled NA, if bytes is length 0.
I am assuming that the `online` parameter is intended to work similarly to the way `ScanForPackages `does in the `checkpoint` function

this may be similar to #234

```
>system.time(setSnapshot(snapshotDate = "2018-05-30", online = F))
Using CRAN mirror at http://mran.microsoft.com/snapshot/2018-05-30
   user  system elapsed 
   0.00    0.00   21.25
```
Not your problem, but for reference, spinning up a cluster is now taking minutes with this in the code path
```
> system.time(makeCluster(detectCores(logical = FALSE)))
   user  system elapsed 
   0.02    0.00   87.44 
```
Faster than with `online = T` , but still very slow.
```
system.time(setSnapshot(snapshotDate = "2018-05-30", online = T))
Error in setSnapshot(snapshotDate = "2018-05-30", online = T) : 
  Invalid snapshot date.
Timing stopped at: 0 0 42.42
```

```
> sessionInfo()
R version 3.4.3 (2017-11-30)
Platform: x86_64-w64-mingw32/x64 (64-bit)
Running under: Windows 10 x64 (build 17134)

Matrix products: default

locale:
[1] LC_COLLATE=English_United States.1252  LC_CTYPE=English_United States.1252    LC_MONETARY=English_United States.1252 LC_NUMERIC=C                          
[5] LC_TIME=English_United States.1252    

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
[1] RevoUtilsMath_10.0.1 RevoUtils_10.0.7     RevoMods_11.0.0      MicrosoftML_9.3.0    mrsdeploy_1.1.3      RevoScaleR_9.3.0     lattice_0.20-35      rpart_4.1-11         checkpoint_0.4.3    

loaded via a namespace (and not attached):
 [1] codetools_0.2-15       CompatibilityAPI_1.1.0 foreach_1.4.5          grid_3.4.3             R6_2.2.2               jsonlite_1.5           curl_3.1               iterators_1.0.9       
 [9] tools_3.4.3            compiler_3.4.3         rtvs_1.0.0.0           mrupdate_1.0.1        
> 
```

Hi users, I'm checking my bases here before using checkpoint in a professional application. Will there ever be an issue with the version of R being incompatible with older checkpointed packages. For example, if I am using R 3.5.1 and use a package version the hasn't been updated since 3.4.3, it is possible that I can get an error message saying the version of the package is incompatible with the version of R. If I checkpoint back to a 3.4.3 version of a package, will I still get that error message, or has this been accounted for? 