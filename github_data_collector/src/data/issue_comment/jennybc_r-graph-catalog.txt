If you try to click on a figure that's already the last viewed figure, nothing happens (you don't get automatically moved to the figure tab)

I just re-made all the figures (https://github.com/jennybc/r-graph-catalog/commit/5744c6298044353382384946abf7e55e9f7d7def) and the version of, e.g., `ggplot2`, among other things, should get automatically recorded somewhere.

Hello, really nice project here!

I'm wondering whether the developers would be open to giving permission for this to be incorporated in a directory for other languages and packages? There's no LICENSE file, apologies if I've missed it somewhere - "_We are very interested in extending this catalog_" on the about page sounded promising so I thought I'd ask.

Thinking R (ggplot2), MATLAB, a select few of the many Python libraries (matplotlib / seaborn / ggplot / bokeh / vincent), Julia (Gadfly) etc.

Could be an interesting [potentially rather big] challenge but shouldn't be too difficult for any part individually, and would make it easier for people to move out of their comfort zones. The R catalog could make for a good set to replicate in these languages.

Example online, for a single bar chart: [badhessian.org/2014/07/six-of-one-plot-half-dozen-of-the-other](http://badhessian.org/2014/07/six-of-one-plot-half-dozen-of-the-other/) (R ggplot2, R base, Python matplotlib, Python seaborn, Julia Gadfly, and Plot.ly)

- include JB's ggplot2 tutorial graphs and move to top of quilt
- fix display bug in firefox so all 3 columns of quilt are shown 

I need to mine my own ggplot2 tutorial, for example:
https://github.com/jennybc/ggplot2-tutorial

This R Chart Chooser from 2012 is very good, but it doesn't help you get the plot and code in front of your eyeballs at same time:
http://www.yaksis.com/posts/r-chart-chooser.html

This ggplot2 cheat sheet is closer to what we've done here but focuses more on incremental changes to details and is formatted like a blog post vs. a clickable quilt:

http://zevross.com/blog/2014/08/04/beautiful-plotting-in-r-a-ggplot2-cheatsheet-3/

Context: I'm using `make init` to add a few figures. The first one is taking a while to develop but the second one was easy. When I do `make all`, the code for the first figure is run, but throws an error. Of course I can fix the immediate problem by commenting out the code, but I suspect other downstream problems will follow.

Makes me realize we need a way to shut off processing for an entire figure (directory), while leaving what's there intact.

This seems related to the `not doing` tag, which seems to come into play quite late (perhaps only when preparing the app?). Better (= earlier) handling of that might be the solution.

So far, all the reshaping tasks I've encountered (I'm in chapter 4) look well within the capability of `tidyr`. Let's switch over to that instead of explicitly using `reshape2`. It's a friendlier package to present to people. (Of course, under the hood, `reshape2` is still being used.)

As I go through the figures, it's becoming clear that we need a single definitive source for several datasets.

Example: the museum visit length data from Fig 4.10 + others.

It needs to exist in one single location, probably in short and tall form.

This underscores how nice it would be to create a companion `nbr` or `cmeg` data package, even if it's data we have simulated that behaves like the original data we see in these figures.

Then, instead of copying the data around to multiple figure directories, we could just load it with a call to `library(cmeg)`.

Side bonus: we could set factor levels sensibly.
