The previous settings have annoyed people, as indicated by #432. Let's try to find a more balanced, sensible approach.

(Greatly inspired by @junaruga's change in another project: https://github.com/rack-test/rack-test/pull/254. In fact, I copied the `stale.yml` file from that project verbatim. :see_no_evil:)
Can we get a project status update?

Essentially all issues that I can see that have been raised since 2018 have been marked stale and closed by the stalebot very soon afterwards without comment from project owners.

I'm not saying all issues have to be worked on, this is open source and we can contribute, but are there active maintainers that can comment on issues and indicate that a PR would be well received?
(Even then, [valid PRs](https://github.com/ruby-git/ruby-git/pull/420) are being ignored and closed by the stalebot).

At the very least can we disable the stalebot?
### Your checklist for this pull request
ðŸš¨Please review the [guidelines for contributing](../CONTRIBUTING.md) to this repository.

- [X] Ensure all commits include DCO sign-off.
- [X] Ensure that your contributions pass unit testing.
- [X] Ensure that your contributions contain documentation if applicable.

### Description
Removed blank (1 char change) after method name to fix this warning:
```
Users/USER/rvm/gems/ruby-2.7.0-rc1@ruby2.7-no-rails/gems/git-1.5.0/lib/git/branch.rb:40:
warning: parentheses after method name is interpreted as an argument list, not a decomposed argument
```
### Subject of the issue

using ruby git like this
```
require 'git'
puts Git.open(".").describe(nil, {long:true, tags:true, :dirty=>true, always:true})
```
output: `v0.0.0-2-g03626ae`

but running git directly produces the correct result 
```
git describe --long --tags --dirty --always
```
output: `v0.0.0-2-g03626ae-dirty`

### Your environment
* git version 2.24.0
*  ruby-git 1.5.0
* ruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-darwin19]

### Steps to reproduce
Generate a dirty repo, add a tag, add a commit, change a file,
now you have a dirty repo

run 
```
require 'git'
puts Git.open(".").describe(nil, {long:true, tags:true, :dirty=>true, always:true})
```


### Expected behaviour

there should be a _dirty_ in the output string (at the end)

### Actual behaviour

the dirty flag is not in the output
### Subject
Implementation of the [`git cherry`](https://git-scm.com/docs/git-cherry) is missing.

A closed PR https://github.com/ruby-git/ruby-git/pull/97 implementing this command was closed (it was close by stale bot).

### Environment
* version of ruby-git: [1.5.0](https://github.com/ruby-git/ruby-git/releases/tag/v1.5.0)
* version of ruby: 2.6.4
* version of git: 2.21.0
* operating system: Fedora 30

### Expected behaviour
`master` branch includes the following commits: (A)-(B)-(C), where (A) is root and (C) is HEAD.

`feature` branch is created from master and includes two newly added commits: master-(D)-(E), where (E) is the HEAD of the `feature` branch.

Command cherry(`master`, `feature`) should return the two newly added commits (D)-(E).

For further details please see https://git-scm.com/docs/git-cherry

### Actual behaviour
Not supported yet in the latest release.
In git commit, add:
       -n, --no-verify
           This option bypasses the pre-commit and commit-msg hooks. See also githooks(5).

### Your checklist for this pull request
ðŸš¨Please review the [guidelines for contributing](../CONTRIBUTING.md) to this repository.

- [x] Ensure all commits include DCO sign-off.
- [x] Ensure that your contributions pass unit testing.
- [x] Ensure that your contributions contain documentation if applicable.

### Description
Add option to bypasses the pre-commit and commit-msg hooks

Signed-off-by: Rick Pocklington <rick.pocklington@bluemedora.com>

### Your checklist for this pull request
ðŸš¨Please review the [guidelines for contributing](../CONTRIBUTING.md) to this repository.

- [x] Ensure all commits include DCO sign-off.
- [X] Ensure that your contributions pass unit testing.
- [X] Ensure that your contributions contain documentation if applicable.

### Description
Allows `Git.open()` to work on submodules.

Resolves #424 
### Subject of the issue
I was attempting to use ruby_git in fastlane which runs with the working directory under <repo root>/fastlane. When attempting the following code, I get all the files:

```
require 'git'

git = Git.open('../')

p 'Untracked: '
git.status.untracked.each { |s| 
  p "#{s.to_s}" if s[1].untracked
}
```
If I run that some code in my repo root except with `git = Git.open('../')` I get the expected results which is just the files that are untracked. 

### Your environment
git version 2.18.0
ruby 2.6.0p0 (2018-12-25 revision 66547) [x86_64-darwin18]

### Steps to reproduce
Tell us how to reproduce this issue. 

### Expected behaviour
I expected my program to exhibit the same results no matter where it is run provided that Git.open is passed the proper path to the repository root.

### Actual behaviour
See above.
### Your checklist for this pull request
ðŸš¨Please review the [guidelines for contributing](../CONTRIBUTING.md) to this repository.

- [x] Ensure all commits include DCO sign-off.
- [x] Ensure that your contributions pass unit testing.
- [x] Ensure that your contributions contain documentation if applicable.

### Description
Fixes https://github.com/ruby-git/ruby-git/issues/419.

This PR adds a new `git_ssl_no_verify` configuration option like so:

```ruby
  Git.configure do |config|
    config.git_ssl_no_verify = true
  end
```

This option sets `ENV['GIT_SSL_NO_VERIFY']` to `'true'` via `Git::Lib#set_custom_git_env_variables` when `Git::Base.config.git_ssl_no_verify` is truthy.  It allows users to clone git repos over HTTPS without verifying SSL.  This can sometimes ease friction in corporate environments with custom CAs, for example.
Currently, the symbolized key is checked for presence and then the value for the non-symbolized one is used. This works for Hashes with indifferent access (like in rails etc.) but fails for a simple example like

```ruby
Git.open(".").describe("HEAD", abbrev: 0)

=> Git::GitExecuteError (git '--git-dir=/folder/to/repo/.git' '--work-tree=/folder/to/repo' describe '--abbrev=' 'HEAD'  2>&1:error: option `abbrev' expects a numerical value)
```

Changed all references to the symbolized version (since the method signature suggests `@param [{Symbol=>Object}]`).

### Your checklist for this pull request
ðŸš¨Please review the [guidelines for contributing](../CONTRIBUTING.md) to this repository.

- [x] Ensure all commits include DCO sign-off.
- [x] Ensure that your contributions pass unit testing.
- [x] Ensure that your contributions contain documentation if applicable.

### Description
Please describe your pull request.
