### Description of specific issue

Our code, currently compatible with both python27 and python3 series, is characterized as "*straddling*." 

> We are keen to use Python 3 to its full potential, and we currently accept the cost of writing cross-compatible code to allow a smooth transition, but we donâ€™t intend to maintain this compatibility indefinitely. Although the transition has not been as quick as we hoped, we do see it taking place, with more and more people using, teaching and recommending Python 3.

> The developers of the Python language extended support of Python 2.7 from 2015 to January 1, 2020, recognising that many people were still using Python 2. We believe that the extra 5 years is sufficient to transition off of Python 2, and our projects plan to stop supporting Python 2 when upstream support ends in 2020, if not before. We will then be able to simplify our code and take advantage of the many new features in the current version of the Python language and standard library.

**We have [pledged](https://github.com/python3statement/python3statement.github.io/pull/116) to drop support for Python 2.7 no later than 2020.** Please see https://python3statement.org for details on the transition in the Python ecosystem.

- [x] Deprecation notice: changes will be very gradual
- [x] Enhancement: top-down refactoring of source code
- [x] Support installation by pip, e.g. `pip install --pre fecon236`
- [ ] Rebuild Docker container using `Miniconda3-latest-Linux-x86_64.sh` as base

### Expected behavior

The transition should be smooth, and we will take the opportunity to refactor and re-organize the code from top-down. Users using the Anaconda distribution based on python27 will have to install a new distribution based on python3. For the fecon235 Docker image, the transition will be announced and automatically be set up for you.

#### Installation by pip

We have intentionally avoided the `pip` because optimal installation of fecon235 dependencies has been difficult, esp. for binaries and newbies. Unfortunately, `pip` is incapable of true dependency resolution (whereas Anaconda `conda` installs are reliable). This may change towards the year 2020, where only python3 is involved, and `pipenv` matures. The *major* annoyances are summarized here: https://python3statement.org/practicalities -- and minor details, not mentioned, are even more tedious.

- **fecon235 version:** v6 notebooks will begin import of fecon236
- **Python version:** al least 3.4 through 2019, expect at least 3.6 thereafter.
- **Operating systems:** Linux, Mac, Windows




### Description of specific issue

We are expecting major disruption in getting data on 
*equities, mutual funds, and ETFs* via **pandas_datareader** 
due its dependency on API of both ***Yahoo and Google Finance.***

- [/] Fail quote retrieval via our module [lib/yi_stock.py](https://github.com/rsvp/fecon235/blob/master/lib/yi_stocks.py), if no fix upstream.
- [/] Enhancement, if fecon235 takes independent action in its `yi_stock` module.

### Observed behavior

[Yahoo employee has confirmed that the free End-Of-Day data has been terminated, 2017](https://stackoverflow.com/questions/44057580/yahoo-finance-api-changes-2017)
presumably due to acquisition by Verizon.
- Possible work-around: https://stackoverflow.com/questions/44030983/yahoo-finance-url-not-working

[/r/algotrading on Google JSON termination](https://www.reddit.com/r/algotrading/comments/6ygdsg/google_cancelled_their_json_stock_data_feeds_last/)
presumably due to cost-cutting by new product manager.
Our `yi_stock` module may appear to be working, but
please tail() your dataframe to verify whether quote retrieval
goes beyond 2017-09-05 [*silent fail to get() current stock quotes*].

### Alternatives to enhance behavior

1. Switch over to ***Quandl***, using our `lib/yi_quandl.py` module
    - See: https://blog.quandl.com/api-for-stock-data lists premium databases. But for *free* stock price data: https://www.quandl.com/product/WIKIP/WIKI/PRICES-Quandl-End-Of-Day-Stocks-Info.

2. ***Alpha Vantage***: https://www.alphavantage.co/documentation - Requires user to get free API key
    - Python wrapper, MIT license: https://github.com/RomelTorres/alpha_vantage

3. ***tiingo***: https://api.tiingo.com/docs/general/overview - Requires user to get free API key

4. \$\$\$ *EODhistoricaldata*: https://eodhistoricaldata.com

5. Scrape Google Finance pages: https://github.com/CNuge/general_use_functions/blob/master/international_stock_scraper.py (currently also works for international stocks) -- which is not a robust solution (relative to API code) since the page layout is subject to UI changes: https://github.com/pydata/pandas-datareader/issues/408


### Why would the improvement be useful to most users?

Information from the equities markets is vital for financial economics.

Before releasing our own independent solution, we expect to 
make a pull request to the pandas_datareader repository.

***Please kindly propose alternative solutions*** 
below, or at https://gitter.im/rsvp/fecon235
... and look into [pandas_datareader issues](https://github.com/pydata/pandas-datareader/issues)


### Check for revisions upstream

It is possible that a solution has been merged into ***pandas_datareader***
and all that is necessary is an *update* of the package, see its CHANGELOG:
https://pandas-datareader.readthedocs.io/en/latest/whatsnew.html
and make sure the update is compatible with the latest fecon235.

Note: Anaconda distribution uses hyphen, not underscore:
```
$ conda update pandas-datareader
```

### Additional helpful details for bugs

- [/] Problem started recently
- [/] Problem can be reliably reproduced

- **fecon235 version:** v5.17.0603
- **pandas version:** 0.19.2
- **pandas_datareader version:** 0.2.1


Major release v4.15.1230 benefits from the python3 compatibility changes
made during v3. All modules are now operational under 
both Python 2 and 3. Also, code has been rewritten for
cross-platform performance (Linux, Mac, and Windows).

We MOVED the yi-modules from nb to a new directory: lib. 
Python 3 uses absolute import and our python2 code
now conforms to that practice.

To update pre-2016 notebooks, please use import style 
discussed in _docs_ README: https://git.io/fecon-intro 
The top-level module **fecon235.py** 
(formerly known as _nb/fecon.py_) is also 
explained in that introduction.
With adoption of python3 print_function, 
the python2 print statement must be rewritten as a function.

We also highly recommend inclusion of PREAMBLE-p6.15.1223
which gives versioning requirements for successful
notebook replication. With those fixes, our notebooks
should run under both Python kernels in Jupyter, 
without any dependency on Linux.
