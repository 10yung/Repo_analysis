In the build time table, opening the file by using just click down event is too premature and can result in unwanted opening.
We should use Double click instead. It feels more natural for opening a file.

![Screenshot 2019-12-09 at 10 47 25 AM](https://user-images.githubusercontent.com/652167/70403272-54874800-1a71-11ea-954f-dc7c464f5927.png)

The data generated by this app is super useful, but it can be even more when exported to a format that can be used to process this data in different applications and/or compared for improvements.

This PR adds a "Export as CSV…" menu item under "File", which is enabled after a target is picked. I tried to make sure my changes followed the existing structure of the App, so let me know if there's something that could be improved.

Thanks for the great app!
I want export analysis log so that i can find it every time, such as instrument，what can i do
After adding Other Swift Flags and hitting build in Xcode, the new build doesn't appear in the project table. I need to close and reopen the app. It should automatically detect the change, or add a refresh button and an instruction to refresh if Build Time Analyzer app is opened before the new build.
Would love to be able to compare compilation times across builds.

I would love to see a feature to export the compilation time reports so I can make code modifications and see how it affects the build time.

Another way would be to be able to generate the report by providing a build log that I saved off.
Lots of developers add two targets inside their projects, one for `Debug` and one for `Release`. I think it's a good idea to add support to select Debug target in choosing projects (if possible)
I don't know how feasible this might be, but it would be nice to be able to just install a pre-built version of this app app through brew cask. That would require built releases to be stored on github or somewhere else at the very least, but it would be really convenient to not have to pull new code and rebuild it for every update.

How feasible do you think this might be?

The flag used -debug-time-function-bodies only dumps function body times which can account for only a small subset of the total build time per file / for all swift files for some projects. 

Would be better to add support for -debug-time-compilation flag which dumps total build time including its components on a per file basis.

Ref here for more flag info: https://bugs.swift.org/browse/SR-1788

Other option is use -driver-time-compilation recently added to fix above issue in this PR: https://github.com/apple/swift/pull/4367

If you make a change and recompile the code, the Build Time Analyzer window updates the time, but it seems like it's not deleting the old results, and rather it is adding the new builds results to the last build.  Line numbers don't update, and line counts increase rather than decreasing like what is reported.  

Time for function before changes:  1202ms.  
Incremental builds time reported after change: 1800ms.
Time reported after clean and recompile: 52ms.

From the Build time analyzer results Window, the data results table are not copyable. 

It will be useful to be able to copy this and paste it in google docs/ excel.
