It seems to me that lit-html (or lit-element, polymer, etc.) Are addressing roughly the same space.

Can someone please summarize the difference in terms of performance?

(I get that it's a different API, more thinking about raw bottleneck issues.)

Thanks!
Started implementing incremental-dom into twing and now finished the first kinda working version (I know there are many things wrong with the current implementation).
Let me know what you think about the concept of having twing/twig and incremental-dom combined.

Official Twing package: https://github.com/NightlyCommit/twing/
Modified Twing package: https://www.npmjs.com/package/@noelelias/twing or https://github.com/noelelias/twing/tree/noelelias/master
Playground: https://github.com/noelelias/twing-playground
It would be great to have a module build that can be run directly in the browser. For quick demos and experimentation I don't want to set up a bundler.
@dy already started working on this [here](https://github.com/google/incremental-dom/pull/423#issuecomment-541725912).

It would be nice to give the engine a window element which it should render from.
Hello,

I'm using IDOM to manipulate my HTML DOM which works perfectly fine.

Here is a code snippet to illustrate my point

The main page **The static one**

```html
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>Some Title</title>
</head>
<body>
    <div id="app"></div>
</body>
</html>
```

Now when the user hits the `/home` page, the `#app` gets the following component content:

`home-page.component.html`
```html
<div class="container">
    <h1>Welcome Home</h1>
    <hello-world-form></hello-world-form>
</div>
```

`hello-world.component.html`
```html
<form (submit)="this.submitForm($el)">
    <input type="text" name="username" [value]="this.username" />
</form>
```

I'm using `Two-way data binding` which is applied in the `username` input as when the `this.username` property is changed, the input value is changed as well and vice versa.

When any change happens to any property i.e `this.username` i re-run  the patcher from the `home-page.component.html` as it will go through all elements from the top.

the `<hello-world>` component is removed and its content is added instead.

For example the actual output in the browser will be something like: 

```html
<div class="container">
    <h1>Welcome Home</h1>
    <form (submit)="this.submitForm($el)">
        <input type="text" name="username" [value]="this.username" />
    </form>
</div>
```

Now my question: As i mentioned earlier, i'm applying the `patch` function to my `#app` tag which contains the content of the `home-page.component.html` file.

Should i leave the `hello-world` tag in the dom and apply the `patch` function to that element? i.e the dom will look like:

```html
<div class="container">
    <h1>Welcome Home</h1>
    <hello-world>        
        <form (submit)="this.submitForm($el)">
            <input type="text" name="username" [value]="this.username" />
        </form>
    </hello-world>
</div>
```

Or leaving the patch function to the `#app` element.
Using an Object form to trigger prop over attribute setting doesn't work with Boolean objects, because they always resolve to true when applied to boolean DOM properties expecting native booleans, such as checkbox.checked.

a = new Boolean( false );
console.log( !!a ); // outputs true
console.log( a.valueOf() ); // outputs false

By adding something like this to the inside of setProp, this can be easily resolved.

```
// Convert Boolean objects to native boolean values
if ( value instanceof Boolean ) {
  value = value.valueOf();
}
```
Hey guys,

The section of [elementVoid](https://google.github.io/incremental-dom/#elementvoid) has some incorrect information.
```
Description

A combination of elementOpen, followed by elementClose. 
```
and
```
Usage

import { elementClose } from 'incremental-dom';
```

Since i'm new here so i don't know how to fix. 


For now `elementOpen` supports custom element tag names, but what if it's required to create custom element, extended from built-in?

Like in this example from [MDN](https://developer.mozilla.org/en-US/docs/Web/API/Document/createElement#Web_component_example):

```js
let el = document.createElement('ul', { is: 'expanding-list' })
```
That seems to be not implemented: https://github.com/google/incremental-dom/blob/9a78593b62a6000a2942c36f92025d7af81bb8aa/src/nodes.ts#L70

Is there any possible workaround or solution to that? Tricks in `notifications.nodesAdded`?

Any hope that will ever get added?
Running `npm audit` for this library currently produces the following output:

```
                       === npm audit security report ===                        
                                                                                
# Run  npm update js-yaml --depth 5  to resolve 4 vulnerabilities
┌───────────────┬──────────────────────────────────────────────────────────────┐
│ Moderate      │ Denial of Service                                            │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ js-yaml                                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > depcheck > js-yaml                               │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/788                             │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ Moderate      │ Denial of Service                                            │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ js-yaml                                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > preferred-pm > which-pm > load-yaml-file >       │
│               │ js-yaml                                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/788                             │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Code Injection                                               │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ js-yaml                                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > depcheck > js-yaml                               │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/813                             │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Code Injection                                               │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ js-yaml                                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > preferred-pm > which-pm > load-yaml-file >       │
│               │ js-yaml                                                      │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/813                             │
└───────────────┴──────────────────────────────────────────────────────────────┘


# Run  npm update lodash --depth 5  to resolve 12 vulnerabilities
┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ @bazel/karma [dev]                                           │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ @bazel/karma > karma > lodash                                │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ @bazel/karma [dev]                                           │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ @bazel/karma > karma-sauce-launcher > sauce-connect-launcher │
│               │ > lodash                                                     │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ eslint [dev]                                                 │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ eslint > lodash                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ karma [dev]                                                  │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ karma > lodash                                               │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ mocha [dev]                                                  │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ mocha > yargs-unparser > lodash                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > callsite-record > lodash                         │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > depcheck > lodash                                │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > inquirer > lodash                                │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > lodash                                           │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ sinon [dev]                                                  │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ sinon > nise > @sinonjs/formatio > @sinonjs/samsam > lodash  │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > depcheck > babel-traverse > babel-types > lodash │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘


┌───────────────┬──────────────────────────────────────────────────────────────┐
│ High          │ Prototype Pollution                                          │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Package       │ lodash                                                       │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Dependency of │ npm-check [dev]                                              │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ Path          │ npm-check > depcheck > babel-traverse > lodash               │
├───────────────┼──────────────────────────────────────────────────────────────┤
│ More info     │ https://npmjs.com/advisories/1065                            │
└───────────────┴──────────────────────────────────────────────────────────────┘

```

Is it possible to have these dependencies updated to remove some or all of the vulnerabilities?
Apparently, Angular's new render engine, to be released within the next 3 months, [will be based on incremental dom](https://blog.nrwl.io/understanding-angular-ivy-incremental-dom-and-virtual-dom-243be844bf36) (the approach, not this library). Given that this project is not really being updated, and that there is no official template supporting for it because it cannot be built outside of the internal Google repo (https://github.com/google/closure-templates/issues/169#issuecomment-459789312), would this mean that future projects in Google who would want to use the incremental dom approach would choose Angular 8+, leaving this project obsolete?

If Angular 8+ comes with everything that incremental-dom library can do, and it is lightweight enough, I do not see why not.