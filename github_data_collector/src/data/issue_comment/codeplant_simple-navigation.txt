Initialization of this gem triggers a deprecation warning in rails 6:

```
DEPRECATION WARNING: Initialization autoloaded the constants ActionText::ContentHelper and ActionText::TagHelper.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload ActionText::ContentHelper, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <main> at /myapp/config/environment.rb:5)
```

## Steps to reproduce

```
# gem install rails --version 6.0.0.rc2
# rails new myapp --skip-javascript
# cd myapp
# rails db:setup
# rails db:migrate
# rails server
verify it works CTRL-C
# tail log/development.log
no warnings
# echo "gem 'simple-navigation'" >> Gemfile
# bundle install
# rails server
verify it works CTRL-C
# tail -n 13 log/development.log
DEPRECATION WARNING: Initialization autoloaded the constants ActionText::ContentHelper and ActionText::TagHelper.

Being able to do this is deprecated. Autoloading during initialization is going
to be an error condition in future versions of Rails.

Reloading does not reboot the application, and therefore code executed during
initialization does not run again. So, if you reload ActionText::ContentHelper, for example,
the expected changes won't be reflected in that stale Module object.

These autoloaded constants have been unloaded.

Please, check the "Autoloading and Reloading Constants" guide for solutions.
 (called from <main> at /myapp/config/environment.rb:5)
```

## Analysis

The initialization of this gem seems to trigger an autoload of ActionController::Base which triggers the loading of the ActionText helpers.

Autoloading in intializers is going to be deprecated.

see also rails/rails#36546
Thanks for this great gem. Does this support rails 6?
A great gem! Unfortunately I have issues getting it to work properly for CRUD routes. Maybe you can point me to a solution.

I followed the advice in #37 to define the navigation structure. For example:

```
#config/navigation.rb
data.item :arch_objects, 'arch_objects', arch_objects_path do |i|
  i.item :arch_object, 'new arch_object', new_arch_object_path
  i.item :arch_object, 'show arch_object', lambda {arch_object_path(@arch_object)}, :unless => lambda {@arch_object.nil?}
  i.item :arch_object, 'edit arch_object', lambda {edit_arch_object_path(@arch_object)}, :unless => lambda {@arch_object.nil?}
end
```

Unfortunately with this setting everything works fine only for the edit and the show action. For the new action I get the following error:

```
No route matches {:action=>"show", :controller=>"arch_objects", :id=>nil}, missing required keys: [:id]
```

If I turn off the navigation for the edit and the show action, the new action view is displayed normally and the breadcrumb menu works. 

```
#config/navigation.rb
data.item :arch_objects, 'arch_objects', arch_objects_path do |i|
  i.item :arch_object, 'new arch_object', new_arch_object_path
 # i.item :arch_object, 'show arch_object', lambda {arch_object_path(@arch_object)}, :unless => lambda {@arch_object.nil?}
 # i.item :arch_object, 'edit arch_object', lambda {edit_arch_object_path(@arch_object)}, :unless => lambda {@arch_object.nil?}
end
```
What's the reason for this strange behaviour? How is the new action related to the show action with `simple-navigation` activated? 


Tests are failing with Rails 5. Please enable the same.
Here are the logs:

```
Failures:

  1) SimpleNavigation::Renderer::List#render sets the right html classes on the rendered 'ul' tag
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:24:in `block (3 levels) in <module:Renderer>'

  2) SimpleNavigation::Renderer::List#render renders an 'ul' tag for the navigation
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:16:in `block (3 levels) in <module:Renderer>'

  3) SimpleNavigation::Renderer::List#render sets the right html id on the rendered 'ul' tag
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:20:in `block (3 levels) in <module:Renderer>'

  4) SimpleNavigation::Renderer::List#render when an item is selected renders the item's 'li' tag with its id and selected classes
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:53:in `block (4 levels) in <module:Renderer>'

  5) SimpleNavigation::Renderer::List#render when an item is selected renders the item's 'a' tag with the selected classes
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:57:in `block (4 levels) in <module:Renderer>'

  6) SimpleNavigation::Renderer::List#render when an item has no specified id renders the item's 'li' tag with the item's stingified key as id
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:29:in `block (4 levels) in <module:Renderer>'

  7) SimpleNavigation::Renderer::List#render when an item has a specified id renders the item's 'li' tag with the specified id
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:35:in `block (4 levels) in <module:Renderer>'

  8) SimpleNavigation::Renderer::List#render when the :ordered option is true sets the right html id on the rendered 'ol' tag
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:69:in `block (4 levels) in <module:Renderer>'

  9) SimpleNavigation::Renderer::List#render when the :ordered option is true sets the right html classes on the rendered 'ol' tag
     Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

     NameError:
       uninitialized constant SimpleNavigation::Renderer::HTML
     # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
     # ./spec/simple_navigation/renderer/list_spec.rb:73:in `block (4 levels) in <module:Renderer>'

  10) SimpleNavigation::Renderer::List#render when the :ordered option is true renders an 'ol' tag for the navigation
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/list_spec.rb:65:in `block (4 levels) in <module:Renderer>'

  11) SimpleNavigation::Renderer::List#render when no item is selected renders each item as 'a' tag without any selected class
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/list_spec.rb:45:in `block (4 levels) in <module:Renderer>'

  12) SimpleNavigation::Renderer::List#render when no item is selected renders each item as 'li' tag without any selected class
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/list_spec.rb:41:in `block (4 levels) in <module:Renderer>'

  13) SimpleNavigation::Renderer::List#render when a sub navigation item is selected renders the selected nested item's link as selected
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/list_spec.rb:90:in `block (4 levels) in <module:Renderer>'

  14) SimpleNavigation::Renderer::List#render when a sub navigation item is selected renders the parent items as selected
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/list_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/list_spec.rb:86:in `block (4 levels) in <module:Renderer>'

  15) SimpleNavigation::Renderer::Links#render sets the right html classes on the rendered 'div' tag
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:24:in `block (3 levels) in <module:Renderer>'

  16) SimpleNavigation::Renderer::Links#render sets the right html id on the rendered 'div' tag
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:20:in `block (3 levels) in <module:Renderer>'

  17) SimpleNavigation::Renderer::Links#render renders a 'div' tag for the navigation
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:16:in `block (3 levels) in <module:Renderer>'

  18) SimpleNavigation::Renderer::Links#render renders the 'a' tags with the corresponding item's :html_options
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:32:in `block (3 levels) in <module:Renderer>'

  19) SimpleNavigation::Renderer::Links#render renders an 'a' tag for each item
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:28:in `block (3 levels) in <module:Renderer>'

  20) SimpleNavigation::Renderer::Links#render when an item has no specified id uses a default id by stringifying the item's key
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:43:in `block (4 levels) in <module:Renderer>'

  21) SimpleNavigation::Renderer::Links#render when an item has a specified id renders the 'a' tags with the specified id
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:37:in `block (4 levels) in <module:Renderer>'

  22) SimpleNavigation::Renderer::Links#render when no item is selected renders items without the 'selected' class
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:49:in `block (4 levels) in <module:Renderer>'

  23) SimpleNavigation::Renderer::Links#render when an item is selected renders the selected item with the 'selected' class
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:57:in `block (4 levels) in <module:Renderer>'

  24) SimpleNavigation::Renderer::Links#render when a sub navigation item is selected renders the main parent as selected
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:78:in `block (4 levels) in <module:Renderer>'

  25) SimpleNavigation::Renderer::Links#render when a sub navigation item is selected doesn't render the nested item's link
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/links_spec.rb:9:in `block (3 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/links_spec.rb:82:in `block (4 levels) in <module:Renderer>'

  26) SimpleNavigation::Renderer::Breadcrumbs#render sets the right html id on the rendered 'div' tag
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:20:in `block (3 levels) in <module:Renderer>'

  27) SimpleNavigation::Renderer::Breadcrumbs#render renders a 'div' tag for the navigation
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:16:in `block (3 levels) in <module:Renderer>'

  28) SimpleNavigation::Renderer::Breadcrumbs#render sets the right html classes on the rendered 'div' tag
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:24:in `block (3 levels) in <module:Renderer>'

  29) SimpleNavigation::Renderer::Breadcrumbs#render when no item is selected doesn't render any 'a' tag in the 'div' tag
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:29:in `block (4 levels) in <module:Renderer>'

  30) SimpleNavigation::Renderer::Breadcrumbs#render when a sub navigation item is selected renders all items as links
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:100:in `block (4 levels) in <module:Renderer>'

  31) SimpleNavigation::Renderer::Breadcrumbs#render when a sub navigation item is selected when the :static_leaf option is true renders the last item as simple text
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:111:in `block (5 levels) in <module:Renderer>'

  32) SimpleNavigation::Renderer::Breadcrumbs#render when a sub navigation item is selected when the :static_leaf option is true renders the items as links
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:107:in `block (5 levels) in <module:Renderer>'

  33) SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected remders the 'a' tag without any html id
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:41:in `block (4 levels) in <module:Renderer>'

  34) SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected renders the 'a' tag without any html class
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:45:in `block (4 levels) in <module:Renderer>'

  35) SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected renders the selected 'a' tag
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:37:in `block (4 levels) in <module:Renderer>'

  36) SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected and the :allow_classes_and_ids option is true renders the 'a' tag with the selected class
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:52:in `block (5 levels) in <module:Renderer>'

  37) SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected and the :allow_classes_and_ids option is true and the item has an explicitly set id renders the 'a' tag with an html id
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:65:in `block (6 levels) in <module:Renderer>'

  38) SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected and the :allow_classes_and_ids option is true and the item hasn't any id explicitly set renders the 'a' tag without any html id
      Failure/Error: let(:output) { HTML::Document.new(raw_output).root }

      NameError:
        uninitialized constant SimpleNavigation::Renderer::HTML
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:8:in `block (2 levels) in <module:Renderer>'
      # ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:57:in `block (6 levels) in <module:Renderer>'

Finished in 0.45511 seconds (files took 1.06 seconds to load)
385 examples, 38 failures

Failed examples:

rspec ./spec/simple_navigation/renderer/list_spec.rb:23 # SimpleNavigation::Renderer::List#render sets the right html classes on the rendered 'ul' tag
rspec ./spec/simple_navigation/renderer/list_spec.rb:15 # SimpleNavigation::Renderer::List#render renders an 'ul' tag for the navigation
rspec ./spec/simple_navigation/renderer/list_spec.rb:19 # SimpleNavigation::Renderer::List#render sets the right html id on the rendered 'ul' tag
rspec ./spec/simple_navigation/renderer/list_spec.rb:52 # SimpleNavigation::Renderer::List#render when an item is selected renders the item's 'li' tag with its id and selected classes
rspec ./spec/simple_navigation/renderer/list_spec.rb:56 # SimpleNavigation::Renderer::List#render when an item is selected renders the item's 'a' tag with the selected classes
rspec ./spec/simple_navigation/renderer/list_spec.rb:28 # SimpleNavigation::Renderer::List#render when an item has no specified id renders the item's 'li' tag with the item's stingified key as id
rspec ./spec/simple_navigation/renderer/list_spec.rb:34 # SimpleNavigation::Renderer::List#render when an item has a specified id renders the item's 'li' tag with the specified id
rspec ./spec/simple_navigation/renderer/list_spec.rb:68 # SimpleNavigation::Renderer::List#render when the :ordered option is true sets the right html id on the rendered 'ol' tag
rspec ./spec/simple_navigation/renderer/list_spec.rb:72 # SimpleNavigation::Renderer::List#render when the :ordered option is true sets the right html classes on the rendered 'ol' tag
rspec ./spec/simple_navigation/renderer/list_spec.rb:64 # SimpleNavigation::Renderer::List#render when the :ordered option is true renders an 'ol' tag for the navigation
rspec ./spec/simple_navigation/renderer/list_spec.rb:44 # SimpleNavigation::Renderer::List#render when no item is selected renders each item as 'a' tag without any selected class
rspec ./spec/simple_navigation/renderer/list_spec.rb:40 # SimpleNavigation::Renderer::List#render when no item is selected renders each item as 'li' tag without any selected class
rspec ./spec/simple_navigation/renderer/list_spec.rb:89 # SimpleNavigation::Renderer::List#render when a sub navigation item is selected renders the selected nested item's link as selected
rspec ./spec/simple_navigation/renderer/list_spec.rb:85 # SimpleNavigation::Renderer::List#render when a sub navigation item is selected renders the parent items as selected
rspec ./spec/simple_navigation/renderer/links_spec.rb:23 # SimpleNavigation::Renderer::Links#render sets the right html classes on the rendered 'div' tag
rspec ./spec/simple_navigation/renderer/links_spec.rb:19 # SimpleNavigation::Renderer::Links#render sets the right html id on the rendered 'div' tag
rspec ./spec/simple_navigation/renderer/links_spec.rb:15 # SimpleNavigation::Renderer::Links#render renders a 'div' tag for the navigation
rspec ./spec/simple_navigation/renderer/links_spec.rb:31 # SimpleNavigation::Renderer::Links#render renders the 'a' tags with the corresponding item's :html_options
rspec ./spec/simple_navigation/renderer/links_spec.rb:27 # SimpleNavigation::Renderer::Links#render renders an 'a' tag for each item
rspec ./spec/simple_navigation/renderer/links_spec.rb:42 # SimpleNavigation::Renderer::Links#render when an item has no specified id uses a default id by stringifying the item's key
rspec ./spec/simple_navigation/renderer/links_spec.rb:36 # SimpleNavigation::Renderer::Links#render when an item has a specified id renders the 'a' tags with the specified id
rspec ./spec/simple_navigation/renderer/links_spec.rb:48 # SimpleNavigation::Renderer::Links#render when no item is selected renders items without the 'selected' class
rspec ./spec/simple_navigation/renderer/links_spec.rb:56 # SimpleNavigation::Renderer::Links#render when an item is selected renders the selected item with the 'selected' class
rspec ./spec/simple_navigation/renderer/links_spec.rb:77 # SimpleNavigation::Renderer::Links#render when a sub navigation item is selected renders the main parent as selected
rspec ./spec/simple_navigation/renderer/links_spec.rb:81 # SimpleNavigation::Renderer::Links#render when a sub navigation item is selected doesn't render the nested item's link
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:19 # SimpleNavigation::Renderer::Breadcrumbs#render sets the right html id on the rendered 'div' tag
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:15 # SimpleNavigation::Renderer::Breadcrumbs#render renders a 'div' tag for the navigation
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:23 # SimpleNavigation::Renderer::Breadcrumbs#render sets the right html classes on the rendered 'div' tag
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:28 # SimpleNavigation::Renderer::Breadcrumbs#render when no item is selected doesn't render any 'a' tag in the 'div' tag
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:99 # SimpleNavigation::Renderer::Breadcrumbs#render when a sub navigation item is selected renders all items as links
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:110 # SimpleNavigation::Renderer::Breadcrumbs#render when a sub navigation item is selected when the :static_leaf option is true renders the last item as simple text
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:106 # SimpleNavigation::Renderer::Breadcrumbs#render when a sub navigation item is selected when the :static_leaf option is true renders the items as links
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:40 # SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected remders the 'a' tag without any html id
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:44 # SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected renders the 'a' tag without any html class
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:36 # SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected renders the selected 'a' tag
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:51 # SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected and the :allow_classes_and_ids option is true renders the 'a' tag with the selected class
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:64 # SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected and the :allow_classes_and_ids option is true and the item has an explicitly set id renders the 'a' tag with an html id
rspec ./spec/simple_navigation/renderer/breadcrumbs_spec.rb:56 # SimpleNavigation::Renderer::Breadcrumbs#render when an item is selected and the :allow_classes_and_ids option is true and the item hasn't any id explicitly set renders the 'a' tag without any html id
```
idk why from renderer to renderer item params so differ

if we have some navigation with params, it should return all of the defined options regardless of renderer, isnt it ?
The `README.md` states:

> To run the test suite locally against all supported frameworks:
> 
>     % bundle install
>     % rake spec:all

But this results in

```
> rake spec:all
BUNDLE_GEMFILE='gemfiles/rails-3-2-stable.gemfile' bundle -j 4 --quiet
Could not find gem 'rake (< 11.0)' in any of the gem sources listed in your Gemfile.
Run `bundle install` to install missing gems.
rake aborted!
Command failed with status (7): [BUNDLE_GEMFILE='gemfiles/rails-3-2-stable....]
/home/svk/development/sc/simple-navigation/Rakefile:23:in `block (3 levels) in <top (required)>'
/home/svk/.rbenv/versions/2.4.1/bin/bundle:22:in `load'
/home/svk/.rbenv/versions/2.4.1/bin/bundle:22:in `<main>'
Tasks: TOP => spec:all => spec:rails-3-2-stable
(See full trace by running task with --trace)
```

Only when running `bundle install` with `BUNDLE_GEMFILE='gemfiles/rails-3-2-stable.gemfile'`, `rake spec:all` works.

When there is an error in the navigation config, the stack trace won't
include a pointer to the actual config file and line but only something
like

```
(eval):5:in `block in eval_config'
```

This change supplies the path to the config file to `instance_eval` so
that the stack trace now include path and line where the error occurs.
Hi,

When generating the configuration in a rails 4 app with simple-navigation 4.0.3, the generated config does not seem to work.

For example I have this line:

``` ruby
primary.item :key_3, 'Admin', url, class: 'special', if: -> { current_user.admin? }
```

In this case the class does not get applied (using all the time the default renderer, List).

The only way for me to get it to work was to write it in the form (I am not interested in the "if"):

``` ruby
primary.item :key_3, 'Admin', url, html: { class: 'special' }
```

I could not find anything about this "html" parameter in the documentation.

Also if I try to use the html parameter in an item which will be passed a submenu, well I can't figure out how to make it work.
The following snippet:

``` ruby
    primary.item :about, 'About', html: { class: 'nav-link' } do |sub_nav|
      sub_nav.item :who_are_we, 'Who are we?', page_path('who_are_we'),
        html: { class: 'nav-link' }
    end
```

gives me the error:

```
undefined method `split' for {:html=>{:class=>"nav-link"}}:Hash
```

Thanks for your help.

I use custom renderer, and in some places has double classes('selected selected').
May be problem in SimpleNavigation::Item.html_options, if I call it twice I get double classes
(if I set any html options in navigation.rb for item).

```
def html_options
      // Here, if my options[:html] is not blank, I get Link not copy to @options[:html]
      html_opts = options.fetch(:html) { Hash.new } 
      html_opts[:id] ||= autogenerated_item_id

      classes = [html_opts[:class], selected_class, active_leaf_class]
      classes = classes.flatten.compact.join(' ')
      // And at this place, it modifies @options[:html], If I call this method second time, it will be       
      // doubled(selected_class and active_leaf_class will be added second time)
      html_opts[:class] = classes if classes && !classes.empty? 

      html_opts
    end
```

From issue https://github.com/codeplant/simple-navigation/issues/132

Example (custom renderer):

``` ruby
class ContentListRenderer < SimpleNavigation::Renderer::List
  private

  def list_content(item_container)
    item_container.items.map { |item|
      li_options = item.html_options.except(:link)
      li_content = tag_for(item)
      li_content = item.content_before + li_content + item.content_after
      if include_sub_navigation?(item)
        li_content << render_sub_navigation_for(item)
      end
      content_tag(:li, li_content, li_options)
    }.join
  end
end
```

and in navigation (bootstrap list group):

``` ruby
SimpleNavigation::Configuration.run do |navigation|
  navigation.items do |m|
    m.dom_class = 'list-group'
    m.item :approval_list, 'List, '',
           html: { class: 'list-group-item' },
           content_after: "<span class=\"badge\">1234</span>".html_safe,
           link_html: {
             data: {
               push: true,
               target: '#messages .area-content'
             }
           }
  end
end
```
