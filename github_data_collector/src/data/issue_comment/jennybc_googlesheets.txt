As for the last couple of days, the authentication page shows the warning attached.
To some colleagues, it does not even give the advanced option to proceed anyway.
Any way to resolve this?
I know the package will be retiring soon, but I need to keep using this while developing new scripts that do not rely on this package.
![image](https://user-images.githubusercontent.com/15350482/68361118-79d21080-00d7-11ea-8fb2-139687e9277f.png)

Hello Jenny.

If i right googlesheets works on API v3, but i recived message about it will be shut down on March 3, 2020.

Will the googlesheet  works after this date?

![](http://img.netpeak.ua/alsey/157062801897_kiss_31kb.png)
I'm using gs_edit_cells() to add rows into a google sheet with more than 100k rows (12 cols), here's the error message I'm getting:

> Error: Can't guess format of this cell reference:
A100660
In addition: Warning message:
Cell reference follows neither the A1 nor R1C1 format. Example:
A100660
NAs generated. 

I know google sheet have 5,000,000 cells limit thing, but I don't think I'm reaching the limit here.. any ideas?

Ps, I tried use gs_add_row instead, but runs extremely slow and hit bad gateway (HTTP 502) error.
I have successfully been using the googlesheets package until I upgraded to R-3.6.1 (x64).  When I attempt to run gs_ls() on this version of R (running within RStudio), I get the following error message:

```
> gs_ls()
Auto-refreshing stale OAuth token.
Error: evaluation nested too deeply: infinite recursion / options(expressions=)?
Error during wrapup: evaluation nested too deeply: infinite recursion / options(expressions=)?
```

If I switch my R version in Rstudio back to 3.5.2, googlesheets works with no problem.

I've tried adjusting the expressions options as well, with no success.  Below my R options.
```
> options()
$add.smooth
[1] TRUE

$askYesNo
function (msg, ...) 
{
    flush.console()
    ans <- winDialog("yesnocancel", msg)
    switch(ans, YES = TRUE, NO = FALSE, NA)
}
<bytecode: 0x000000000ed90af8>
<environment: namespace:utils>

$browser
function (url) 
{
    .Call(.rs.routines$rs_browseURL, url)
}
<environment: 0x0000000007d2c410>

$browserNLdisabled
[1] FALSE

$buildtools.check
function (action) 
{
    if (identical(.Platform$pkgType, "mac.binary.mavericks")) {
        .Call(.rs.routines$rs_canBuildCpp)
    }
    else {
        if (!.Call("rs_canBuildCpp")) {
            .rs.installBuildTools(action)
            FALSE
        }
        else {
            TRUE
        }
    }
}
<environment: 0x000000000aa4ac98>

$buildtools.with
function (code) 
{
    .rs.addRToolsToPath()
    on.exit(.rs.restorePreviousPath(), add = TRUE)
    force(code)
}
<environment: 0x000000000aa4ac98>

$CBoundsCheck
[1] FALSE

$check.bounds
[1] FALSE

$citation.bibtex.max
[1] 1

$continue
[1] "+ "

$contrasts
        unordered           ordered 
"contr.treatment"      "contr.poly" 

$defaultPackages
[1] "datasets"  "utils"     "grDevices" "graphics"  "stats"     "methods"  

$demo.ask
[1] "default"

$deparse.cutoff
[1] 60

$device
function (width, height, pointsize, record, rescale, xpinch, 
    ypinch, bg, canvas, gamma, xpos, ypos, buffered, title, restoreConsole, 
    clickToConfirm, fillOddEven, family = "", antialias) 
{
    check <- Sys.getenv("_R_CHECK_SCREEN_DEVICE_", "")
    msg <- "screen devices should not be used in examples etc"
    if (identical(check, "stop")) 
        stop(msg, domain = NA)
    else if (identical(check, "warn")) 
        warning(msg, immediate. = TRUE, noBreaks. = TRUE, domain = NA)
    new <- list()
    if (!missing(width)) 
        new$width <- as.double(width)
    if (!missing(height)) 
        new$height <- as.double(height)
    if (!missing(pointsize)) 
        new$pointsize <- as.double(pointsize)
    if (!missing(record)) 
        new$record <- record
    if (!missing(rescale)) 
        new$rescale <- rescale
    if (!missing(xpinch)) 
        new$xpinch <- as.double(xpinch)
    if (!missing(ypinch)) 
        new$ypinch <- as.double(ypinch)
    if (!missing(bg)) 
        new$bg <- bg
    if (!missing(canvas)) 
        new$canvas <- canvas
    if (!missing(gamma)) 
        new$gamma <- gamma
    if (!missing(xpos)) 
        new$xpos <- as.integer(xpos)
    if (!missing(ypos)) 
        new$ypos <- as.integer(ypos)
    if (!missing(buffered)) 
        new$buffered <- buffered
    if (!missing(title)) 
        new$title <- title
    if (!missing(restoreConsole)) 
        new$restoreConsole <- restoreConsole
    if (!missing(clickToConfirm)) 
        new$clickToConfirm <- clickToConfirm
    if (!missing(fillOddEven)) 
        new$fillOddEven <- fillOddEven
    if (!missing(antialias)) 
        new$antialias <- match.arg(antialias, aa.win)
    d <- check.options(new = new, envir = .WindowsEnv, name.opt = ".Windows.Options", 
        reset = FALSE, assign.opt = FALSE)
    rescale <- match(d$rescale, c("R", "fit", "fixed"))
    if (is.na(rescale)) 
        stop("invalid value for 'rescale'")
    antialias <- pmatch(d$antialias, aa.win)
    invisible(.External(C_devga, "", d$width, d$height, 
        d$pointsize, d$record, rescale, d$xpinch, d$ypinch, d$canvas, 
        d$gamma, d$xpos, d$ypos, d$buffered, .PSenv, d$bg, d$restoreConsole, 
        d$title, d$clickToConfirm, d$fillOddEven, family, antialias))
}
<bytecode: 0x0000000008b51eb0>
<environment: namespace:grDevices>

$device.ask.default
[1] FALSE

$digits
[1] 7

$download.file.method
[1] "wininet"

$dplyr.show_progress
[1] TRUE

$echo
[1] TRUE

$editor
function (name, file, title) 
{
    if (is.null(name) || is.function(name)) {
        if (is.null(name)) {
            if (!is.null(file) && nzchar(file)) 
                targetFile <- file
            else targetFile <- scratchFile
        }
        else {
            functionSrc <- .rs.deparseFunction(name, TRUE)
            targetFile <- scratchFile
            writeLines(functionSrc, targetFile)
        }
        if (.Call("rs_editFile", targetFile)) {
            newFunc <- try(eval.parent(parse(targetFile)), silent = TRUE)
            if (inherits(newFunc, "try-error")) {
                stop(newFunc, "You can attempt to correct the error using ", 
                  title, " = edit()")
            }
            return(newFunc)
        }
        else {
            stop("Error occurred while editing function '", 
                name, "'")
        }
    }
    else edit(name, file, title, editor = defaultEditor)
}
<environment: 0x000000000eda8818>

$encoding
[1] "native.enc"

$error
(function () 
{
    .rs.recordTraceback(TRUE)
})()

$example.ask
[1] "default"

$expressions
[1] 5000

$fansi.css
[1] "PRE.fansi SPAN {padding-top: .25em; padding-bottom: .25em};"

$fansi.ctrl
[1] "all"

$fansi.tab.stops
[1] 8

$fansi.tabs.as.spaces
[1] FALSE

$fansi.term.cap
[1] "bright" "256"   

$fansi.warn
[1] TRUE

$ggvis.renderer
[1] "svg"

$googlesheets.client_id
[1] "178989665258-f4scmimctv2o96isfppehg1qesrpvjro.apps.googleusercontent.com"

$googlesheets.client_secret
[1] "iWPrYg0lFHNQblnRrDbypvJL"

$googlesheets.httr_oauth_cache
[1] TRUE

$googlesheets.webapp.client_id
[1] "178989665258-mbn7q84ai89if6ja59jmh8tqn5aqoe3n.apps.googleusercontent.com"

$googlesheets.webapp.client_secret
[1] "UiF2uCHeMiUH0BeNbSAzzBxL"

$googlesheets.webapp.redirect_uri
[1] "http://127.0.0.1:4642"

$help.search.types
[1] "vignette" "demo"     "help"    

$help.try.all.packages
[1] FALSE

$help_type
[1] "html"

$HTTPUserAgent
[1] "R (3.6.1 x86_64-w64-mingw32 x86_64 mingw32)"

$httr_oauth_cache
[1] NA

$httr_oob_default
[1] FALSE

$install.packages.compile.from.source
[1] "interactive"

$internet.info
[1] 2

$keep.parse.data
[1] TRUE

$keep.parse.data.pkgs
[1] FALSE

$keep.source
[1] TRUE

$keep.source.pkgs
[1] FALSE

$locatorBell
[1] TRUE

$mailer
[1] "mailto"

$matprod
[1] "default"

$max.print
[1] 10000

$menu.graphics
[1] FALSE

$na.action
[1] "na.omit"

$nwarnings
[1] 50

$OutDec
[1] "."

$pager
function (files, header, title, delete.file) 
{
    for (i in 1:length(files)) {
        if ((i > length(header)) || !nzchar(header[[i]])) 
            fileTitle <- title
        else fileTitle <- header[[i]]
        .Call(.rs.routines$rs_showFile, fileTitle, files[[i]], 
            delete.file)
    }
}
<environment: 0x000000000aa4ac98>

$papersize
[1] "letter"

$PCRE_limit_recursion
[1] NA

$PCRE_study
[1] 10

$PCRE_use_JIT
[1] TRUE

$pdfviewer
[1] "C:/R/R-36~1.1/bin/x64/open.exe"

$pkgType
[1] "both"

$prompt
[1] "> "

$readr.show_progress
[1] TRUE

$repos
                       CRAN 
"https://cran.rstudio.com/" 
attr(,"RStudio")
[1] TRUE

$restart
function (afterRestartCommand = "") 
{
    afterRestartCommand <- paste(as.character(afterRestartCommand), 
        collapse = "\n")
    .Call(.rs.routines$rs_restartR, afterRestartCommand)
}
<environment: 0x000000000aa4ac98>

$scipen
[1] 0

$shiny.launch.browser
function (url) 
{
    invisible(.Call("rs_shinyviewer", url, getwd(), 3))
}
<environment: 0x000000000aa4ac98>
attr(,"shinyViewerType")
[1] 3

$show.coef.Pvalues
[1] TRUE

$show.error.messages
[1] TRUE

$show.signif.stars
[1] TRUE

$str
$str$strict.width
[1] "no"

$str$digits.d
[1] 3

$str$vec.len
[1] 4


$str.dendrogram.last
[1] "`"

$stringsAsFactors
[1] TRUE

$timeout
[1] 60

$ts.eps
[1] 1e-05

$ts.S.compat
[1] FALSE

$unzip
[1] "internal"

$useFancyQuotes
[1] TRUE

$verbose
[1] FALSE

$viewer
function (url, height = NULL) 
{
    if (!is.character(url) || (length(url) != 1)) 
        stop("url must be a single element character vector.", 
            call. = FALSE)
    if (identical(height, "maximize")) 
        height <- -1
    if (!is.null(height) && (!is.numeric(height) || (length(height) != 
        1))) 
        stop("height must be a single element numeric vector or 'maximize'.", 
            call. = FALSE)
    invisible(.Call("rs_viewer", url, height))
}
<environment: 0x0000000007d2c410>

$warn
[1] 0

$warning.length
[1] 1000

$width
[1] 142

$windowsTimeouts
[1] 100 500
```
Hi, I am having quite a lot of issues running my code on a server v. my local. However, now my local is broken too. Furthermore, I am having issues with authenticating server-side and caching a token via oauth. I have gone through and made everything in terms of the Google API and the client ID and the redirect. However, now googlesheets is no longer working for me. Instead, now I get this error:

```
Listening on http://127.0.0.1:6452
Warning: Error in stopifnot: object 'handover' not found
  52: stopifnot
  51: gs_read_csv
  50: gs_read
Error in stopifnot(inherits(ss, "googlesheet")) : 
  object 'handover' not found
```

Or I am getting a complete 

`Connection Refused`

Please help if you can.
I proposed two functions for handling keys that otherwise fail to register with `gs_key` or `gs_url`. The idea is simple: try and "ping" the sheet using `httr::GET`. The response, if successul, will contain new url, which can be used for conventional url registration.

Closes #322.


Hi there

I'm having some issues using `gs_url()` in a package I'm building. If I use `gs_url()` the first time in a session, then it works and registers the url and I can go ahead and use `gs_read()`.

But, if I then try `gs_url()` again, I get the following error:

```
Sheet-identifying info appears to be a browser URL.
googlesheets will attempt to extract sheet key from the URL.
Putative key: <key>
Error in curl::curl_fetch_memory(url, handle = handle) : 
  Error in the HTTP2 framing layer
```

Even if I clean my environment and start a new session, this still happens. I have only been able to get it to work again by doing "Clean and rebuild" of the whole package. Then I can successfully run gs_url().

Is this something to do with http or httr?

Some additional info:
```
> sessionInfo()
R version 3.5.2 (2018-12-20)
Platform: x86_64-pc-linux-gnu (64-bit)
Running under: Ubuntu 18.04.1 LTS

Matrix products: default
BLAS: /usr/lib/x86_64-linux-gnu/blas/libblas.so.3.7.1
LAPACK: /usr/lib/x86_64-linux-gnu/lapack/liblapack.so.3.7.1

locale:
 [1] LC_CTYPE=en_ZA.UTF-8          LC_NUMERIC=C                  LC_TIME=en_ZA.UTF-8          
 [4] LC_COLLATE=en_ZA.UTF-8        LC_MONETARY=en_ZA.UTF-8       LC_MESSAGES=en_ZA.UTF-8      
 [7] LC_PAPER=en_ZA.UTF-8          LC_NAME=en_ZA.UTF-8           LC_ADDRESS=en_ZA.UTF-8       
[10] LC_TELEPHONE=en_ZA.UTF-8      LC_MEASUREMENT=en_ZA.UTF-8    LC_IDENTIFICATION=en_ZA.UTF-8

attached base packages:
[1] stats     graphics  grDevices utils     datasets  methods   base     

other attached packages:
 [1] googlesheets_0.3.0 here_0.1           bindrcpp_0.2.2     lubridate_1.7.4    orderin_1.0       
 [6] odbc_1.1.6         writexl_1.0        ggplot2_3.0.0      purrr_0.2.5        tidyr_0.8.1       
[11] dplyr_0.7.6       

loaded via a namespace (and not attached):
 [1] Rcpp_0.12.18      cellranger_1.1.0  pillar_1.3.0      compiler_3.5.2    plyr_1.8.4        bindr_0.1.1      
 [7] R.methodsS3_1.7.1 R.utils_2.7.0     tools_3.5.2       bit_1.1-14        jsonlite_1.5      tibble_1.4.2     
[13] gtable_0.2.0      pkgconfig_2.0.2   rlang_0.2.2       DBI_1.0.0         rstudioapi_0.7    curl_3.2         
[19] yaml_2.2.0        rJava_0.9-10      xml2_1.2.0        httr_1.3.1        stringr_1.3.1     mailR_0.4.1      
[25] withr_2.1.2       hms_0.4.2         rprojroot_1.3-2   bit64_0.9-7       grid_3.5.2        tidyselect_0.2.4 
[31] glue_1.3.0        R6_2.2.2          blob_1.1.1        magrittr_1.5      backports_1.1.2   scales_1.0.0     
[37] assertthat_0.2.0  colorspace_1.3-2  stringi_1.2.4     openssl_1.0.2     lazyeval_0.2.1    munsell_0.5.0    
[43] crayon_1.3.4      R.oo_1.22.0  
```
And:
```
> curl::curl_version()
$version
[1] "7.58.0"

$ssl_version
[1] "OpenSSL/1.1.0g"

$libz_version
[1] "1.2.11"

$libssh_version
[1] NA

$libidn_version
[1] "2.0.4"

$host
[1] "x86_64-pc-linux-gnu"

$protocols
 [1] "dict"   "file"   "ftp"    "ftps"   "gopher" "http"   "https"  "imap"   "imaps"  "ldap"   "ldaps"  "pop3"  
[13] "pop3s"  "rtmp"   "rtsp"   "smb"    "smbs"   "smtp"   "smtps"  "telnet" "tftp"  

$ipv6
[1] TRUE

$http2
[1] TRUE

$idn
[1] TRUE
```
First of all, thank you for this amazingly comprehensive package. I've benefited quite a bit through its use and learned quite a bit about OAuth and R in general while reading through the many issues and solutions.

The crux of the problem is that I have no issues authenticating and accessing google sheets with a personal gmail account, but just today I've been getting HTTP 500 errors when going through a G-Suite account.
I have a shiny app running on a ubuntu server using data pulled using google sheets, and it has been working perfectly well for the past week (through the G-Suite account), and just today I ran into this wall.

This is what I've tried so far:
- reinstalled httr, and googlesheets (including the dev version)
- tried authenticating from scratch on the server
- ran nothing but the authentication and called gs_ls() on the local machine (exact same results where the personal one works, while the G-Suite one does not)
- shared the target sheets with the personal account, authenticated with said account - this works perfectly fine, and is my current work around for the app

So far, the only difference I can make out is that one is a regular gmail account and the other is a G-Suite account. I was wondering if anyone has encountered this issue while using the package.
I have the following error from reading my worksheet:

    Error: Columns `Staff`, `Weight`, `Staff`, `Weight` must have unique names

Fair enough - I understand what it means and what I need to do to fix it. However, if I had read the equivalent sheet using `read_excel` from your wonderful `readxl` package, then it would have read the sheet, and labeled the duplicated column names `Staff__1` and `Weight__1`. Just wondering if that could be the default behaviour here? 
I am trying to create a Shiny app where a person saves a user profile and then receives a recommendation based on this information. I have been storing the user profile information in a google sheet using gs_add_row and then accessing this information by calling gs_key and gs_read_csv when the person requests a recommendation. 

On the published Shiny app (link below) both functions of saving and accessing data work separately; however, when I attempt to retrieve information that I have recently stored, it seems that my code cannot access it despite the data appearing in the last row of the google sheet. I am only able to access this data after republishing the Shiny app.

Does this have something to do with the httr-oauth needing to be updated when the google sheet is updated? If so, how can I implement this into a published Shiny app? Or is this simply a problem with the Google Sheets API? Thank you for your help!

https://brookezkeene.shinyapps.io/eAdvisor/
https://github.com/brookezkeene/DataPlus2018_Project21