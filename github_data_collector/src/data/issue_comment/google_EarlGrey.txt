I can find element in UIWebView with `grey_accessibilityLabel` matcher, but can't find element in WKWebView with the same matcher on earlgrey2 branch.
e.g.,  `[EarlGrey selectElementWithMatcher:grey_accessibilityLabel(@"Link to Next Test")]` in `FTRUIWebViewTest.m` on master branch,  doesn't work in WKWebViewTest.m on earlgrey2 branch.
Xcode version: 11.2.1 (11B500)
error trace:
```
2020-01-17 11:56:48.667388+0800 FunctionalTests-Runner[25809:227157] Running tests...
2020-01-17 11:56:48.704900+0800 FunctionalTests-Runner[25809:227157] The EDOHostService (0x600001e79c00) is created and listening on 57398
Test Suite 'Selected tests' started at 2020-01-17 11:56:48.725
Test Suite 'FunctionalTests.xctest' started at 2020-01-17 11:56:48.726
Test Suite 'WKWebViewTest' started at 2020-01-17 11:56:48.727
Test Case '-[WKWebViewTest testNavigationToWKWebViewTestController]' started.
    t =     0.00s Start Test at 2020-01-17 11:56:48.728
    t =     0.05s Set Up
    t =     0.06s     Open com.google.earlgreyftr.dev
    t =     0.11s         Launch com.google.earlgreyftr.dev
    t =     0.52s             Setting up automation session
    t =     1.36s             Wait for com.google.earlgreyftr.dev to idle
2020-01-17 11:56:51.250266+0800 FunctionalTests-Runner[25809:227157] Application Launch Completed. UI Test with EarlGrey Starting
    t =     3.16s     Setting device orientation to Portrait
    t =     9.93s Assertion Failure: WKWebViewTest.m:67: Exception: com.google.earlgrey.ElementInteractionErrorDomain

Exception Name: com.google.earlgrey.ElementInteractionErrorDomain
Exception Reason: Interaction cannot continue because the desired element was not found.
Element Matcher: Cannot find UI Element.
Exception with Assertion: {
  "Assertion Criteria" : "assertWithMatcher:isNotNil",
  "Element Matcher" : "((respondsToSelector(isAccessibilityElement) && isAccessibilityElement) && accessibilityLabel('Link to Next Test'))",
  "Recovery Suggestion" : "Check if the element exists in the UI hierarchy printed below. If it exists, adjust the matcher so that it accurately matches element."
}

Bundle ID: com.google.com.Functional.xctrunner

Stack Trace: (
	0   FunctionalTests                     0x00000001092e31de -[GREYDefaultFailureHandler handleException:details:] + 2702
	1   FunctionalTests                     0x00000001092dcb01 +[GREYElementInteractionErrorHandler handleInteractionError:outError:] + 1169
	2   FunctionalTests                     0x00000001092f0d4d -[GREYElementInteractionProxy assertWithMatcher:error:] + 541
	3   FunctionalTests                     0x00000001092f0ade -[GREYElementInteractionProxy assertWithMatcher:] + 62
	4   FunctionalTests                     0x00000001092a2074 -[WKWebViewTest testNavigationToWKWebViewTestController] + 1268
	5   CoreFoundation                      0x00007fff23c561cc __invoking___ + 140
	6   CoreFoundation                      0x00007fff23c532df -[NSInvocation invoke] + 319
	7   FunctionalTests                     0x00000001092ea9a0 -[GREYTestCaseInvocation invoke] + 112
	8   XCTest                              0x000000010706ea21 __24-[XCTestCase invokeTest]_block_invoke.208 + 78
	9   XCTest                              0x00000001070c8b49 -[XCTestCase(Failures) performFailableBlock:testCaseRun:shouldInterruptTest:] + 57
	10  XCTest                              0x00000001070c8a67 -[XCTestCase(Failures) _performTurningExceptionsIntoFailuresInterruptAfterHandling:block:] + 96
	11  XCTest                              0x000000010706e50a __24-[XCTestCase invokeTest]_block_invoke + 1153
	12  XCTest                              0x00000001070d02d4 -[XCUITestContext performInScope:] + 117
	13  XCTest                              0x000000010706dfc6 -[XCTestCase testContextPerformInScope:] + 183
	14  XCTest                              0x000000010706e07c -[XCTestCase invokeTest] + 137
	15  FunctionalTests                     0x00000001092df668 -[XCTestCase(GREYTest) grey_invokeTest] + 1528
	16  XCTest                              0x000000010706fded __26-[XCTestCase performTest:]_block_invoke_2 + 43
	17  XCTest                              0x00000001070c8b49 -[XCTestCase(Failures) performFailableBlock:testCaseRun:shouldInterruptTest:] + 57
	18  XCTest                              0x00000001070c8a67 -[XCTestCase(Failures) _performTurningExceptionsIntoFailuresInterruptAfterHandling:block:] + 96
	19  XCTest                              0x000000010706fd04 __26-[XCTestCase performTest:]_block_invoke.334 + 88
	20  XCTest                              0x00000001070dc352 +[XCTContext runInContextForTestCase:block:] + 219
	21  XCTest                              0x000000010706f473 -[XCTestCase performTest:] + 668
	22  XCTest                              0x00000001070b4997 -[XCTest runTest] + 57
	23  XCTest                              0x0000000107069a4a __27-[XCTestSuite performTest:]_block_invoke + 365
	24  XCTest                              0x0000000107069174 -[XCTestSuite _performProtectedSectionForTest:testSection:] + 54
	25  XCTest                              0x0000000107069471 -[XCTestSuite performTest:] + 355
	26  XCTest                              0x00000001070b4997 -[XCTest runTest] + 57
	27  XCTest                              0x0000000107069a4a __27-[XCTestSuite performTest:]_block_invoke + 365
	28  XCTest                              0x0000000107069174 -[XCTestSuite _performProtectedSectionForTest:testSection:] + 54
	29  XCTest                              0x0000000107069471 -[XCTestSuite performTest:] + 355
	30  XCTest                              0x00000001070b4997 -[XCTest runTest] + 57
	31  XCTest                              0x0000000107069a4a __27-[XCTestSuite performTest:]_block_invoke + 365
	32  XCTest                              0x0000000107069174 -[XCTestSuite _performProtectedSectionForTest:testSection:] + 54
	33  XCTest                              0x0000000107069471 -[XCTestSuite performTest:] + 355
	34  XCTest                              0x00000001070b4997 -[XCTest runTest] + 57
	35  XCTest                              0x00000001070eb2fe __44-[XCTTestRunSession runTestsAndReturnError:]_block_invoke + 171
	36  XCTest                              0x00000001070eb401 __44-[XCTTestRunSession runTestsAndReturnError:]_block_invoke.84 + 118
	37  XCTest                              0x0000000107083793 -[XCTestObservationCenter _observeTestExecutionForBlock:] + 588
	38  XCTest                              0x00000001070eb0bd -[XCTTestRunSession runTestsAndReturnError:] + 623
	39  XCTest                              0x000000010704cfd7 -[XCTestDriver runTestsAndReturnError:] + 456
	40  XCTest                              0x00000001070d85a4 _XCTestMain + 2484
	41  FunctionalTests-Runner              0x0000000106d9fedd -[_XCTRunnerAppDelegate applicationWillResignActive:] + 0
	42  FunctionalTests-Runner              0x0000000106d9fddb _XCTRunnerRunTests + 0
	43  CoreFoundation                      0x00007fff23bb204c __CFRUNLOOP_IS_CALLING_OUT_TO_A_BLOCK__ + 12
	44  CoreFoundation                      0x00007fff23bb17b8 __CFRunLoopDoBlocks + 312
	45  CoreFoundation                      0x00007fff23bac644 __CFRunLoopRun + 1284
	46  CoreFoundation                      0x00007fff23babe16 CFRunLoopRunSpecific + 438
	47  GraphicsServices                    0x00007fff38438bb0 GSEventRunModal + 65
	48  UIKitCore                           0x00007fff4784fb48 UIApplicationMain + 1621
	49  FunctionalTests-Runner              0x0000000106da0098 main + 183
	50  libdyld.dylib                       0x00007fff51a1dc25 start + 1
	51  ???                                 0x0000000000000005 0x0 + 5
)
```
This PR fixes an issue (#1042) where if the app under test is relaunched, `EarlGrey` would not be able to communicate with it and aborts the test.

This was due to wrong path of `AppFramework` being loaded in application under test during subsequent launches which was causing AppFramework to not be loaded with error:

>"dyld: warning: could not load inserted library '@executable_path/Frameworks/AppFramework.framework/AppFramework,@executable_path/Frameworks/AppFramework.framework/AppFramework' into hardened process because image not found"

More details are in this [comment](https://github.com/google/EarlGrey/issues/1042#issuecomment-572653860)
I had Earlgrey 2.0 working pod setup with my application. But due to some other pod updates (application related) & few other changes I had to do the setup again. Now when I'm trying to do the setup, It is failing to get the automation session for my application (Even for the basic test case). It is getting crashed during the application launch.
Here is the backtrace for that crash :

`libc++abi.dylib: terminating with uncaught exception of type NSException
(lldb) bt
 thread #1, queue = 'com.apple.main-thread', stop reason = signal SIGABRT
   frame #0: 0x00000001279092c6 libsystem_kernel.dylib`__pthread_kill + 10
    frame #1: 0x000000012795cbf1 libsystem_pthread.dylib`pthread_kill + 284
    frame #2: 0x00000001276cbc45 libsystem_c.dylib`abort + 127
    frame #3: 0x00000001251125b1 libc++abi.dylib`abort_message + 231
    frame #4: 0x000000012511274d libc++abi.dylib`default_terminate_handler() + 265
    frame #5: 0x00000001230caa9d libobjc.A.dylib`_objc_terminate() + 97
    frame #6: 0x000000012511e65e libc++abi.dylib`std::__terminate(void (*)()) + 8
    frame #7: 0x000000012511e6d3 libc++abi.dylib`std::terminate() + 51
    frame #8: 0x00000001230caa22 libobjc.A.dylib`objc_terminate + 9
    frame #9: 0x000000012757655f libdispatch.dylib`_dispatch_client_callout + 28
    frame #10: 0x0000000127577d52 libdispatch.dylib`_dispatch_once_callout + 20
    frame #11: 0x000000011afed3ac AppFramework`InitiateCommunicationWithTest + 76
    frame #12: 0x000000011afecde9 AppFramework`InitHostApplication + 9
    frame #13: 0x000000011af2a184 dyld_sim`ImageLoaderMachO::doModInitFunctions(ImageLoader::LinkContext const&) + 518
    frame #14: 0x000000011af2a382 dyld_sim`ImageLoaderMachO::doInitialization(ImageLoader::LinkContext const&) + 40
    frame #15: 0x000000011af257b7 dyld_sim`ImageLoader::recursiveInitialization(ImageLoader::LinkContext const&, unsigned int, char const*, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 343
    frame #16: 0x000000011af24974 dyld_sim`ImageLoader::processInitializers(ImageLoader::LinkContext const&, unsigned int, ImageLoader::InitializerTimingList&, ImageLoader::UninitedUpwards&) + 134
    frame #17: 0x000000011af24a08 dyld_sim`ImageLoader::runInitializers(ImageLoader::LinkContext const&, ImageLoader::InitializerTimingList&) + 74
    frame #18: 0x000000011af18342 dyld_sim`dyld::initializeMainExecutable() + 129
    frame #19: 0x000000011af1c497 dyld_sim`dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) + 4395
    frame #20: 0x000000011af17624 dyld_sim`start_sim + 136
    frame #21: 0x0000000125357234 dyld`dyld::useSimulatorDyld(int, macho_header const*, char const*, int, char const**, char const**, char const**, unsigned long*, unsigned long*) + 2238
    frame #22: 0x00000001253550ce dyld`dyld::_main(macho_header const*, unsigned long, int, char const**, char const**, char const**, unsigned long*) + 522
    frame #23: 0x0000000125350503 dyld`dyldbootstrap::start(macho_header const*, int, char const**, long, macho_header const*, unsigned long*) + 1167
    frame #24: 0x0000000125350036 dyld`_dyld_start + 54
(lldb)`

It seems like this has something to do with 'AppFramework'. I'm not exactly sure though. 
Note: This exact setup was working before but now it's giving this issue.

I tried recreating this issue with the [Earlgrey sample application](https://github.com/jainhitesh3/EarlGreysample) and I'm able to recreate it.

[This](https://github.com/jainhitesh3/EarlGreysample/blob/master/Demo/EarlGreyExample/Podfile) is the podfile I'm using for my project. 

I have tried this with Xcode Version: 11.3 (App Store version), Xcode Version: 11.2.1 & Xcode version: 11.1
as stated in the pod file

```
s.source = { :http => "https://www.github.com/google/EarlGrey/releases/download/2.1.0/EarlGreyApp.zip" }
```

link returns a 404.
It seems that calling `[EDOClientService sendSynchronousRequest:onPort:withExecutor:]` just after starting running the test target raises an Exception.

Here's more from the stacktrace on the main thread.
```
#0	0x00007fff50b97af0 in objc_exception_throw ()
#1	0x00007fff23c4eda8 in +[NSException raise:format:arguments:] ()
#2	0x00007fff256c9b61 in -[NSAssertionHandler handleFailureInMethod:object:file:lineNumber:description:] ()
#3	0x000000010c9fdc34 in +[EDOClientService sendSynchronousRequest:onPort:withExecutor:] ()
#4	0x000000010c9fd21a in +[EDOClientService sendSynchronousRequest:onPort:] ()
#5	0x000000010c9ff01b in +[EDOClientService responseObjectWithRequest:onPort:] ()
#6	0x000000010c9fb0d7 in +[EDOClientService classObjectWithName:port:] ()
#7	0x000000010c952749 in +[GREYTestApplicationDistantObject forwardingTargetForSelector:] ()
#8	0x00007fff23c538f6 in ___forwarding___ ()
#9	0x00007fff23c55f38 in __forwarding_prep_0___ ()
#10	0x000000010c98db5d in __InitiateCommunicationWithTest_block_invoke ()
```
This is reproducible with the latest EarlGrey2 sources on Xcode 11 with Simulators running iOS 13.2.2 .
Hey EG team,

Are there any plans to provide swift package manager support? I feel like it would make it much easier to consume EG compared to direct project copy.
Hi, last week my team was integrating EarlGrey 2.0 into our project using Xcode 11.1, and managed to get tests passing when run locally. However, when we run the tests through fastlane as a part of our automated build pipeline, we sometimes get failures with the message:

```xxx_sample_ios_EarlGreyUITests.LaunchTest
testLaunchPerformance, Failed to get launch progress for <XCUIApplicationImpl: 0x60000233e940 com.xxxxx.xxx-sample-ios at
/Users/xxxx/Library/Developer/Xcode/DerivedData/xxx-sample-ios-dbswclogbcfuttaxymmwxbwqbbgb/Build/Products/Debug-iphonesimulator/xxx-sample-ios.app>:
Expired token: no operation still exists for this token.
  XCUIApplication+GREYTest.m:86


	 Executed 1 test, with 1 failure (0 unexpected) in 6.075 (6.077) seconds
```

As far as I could tell, this error only happened when running a test that included some use of EarlGrey. I tried having a loop to keep trying `let app = XCUIApplication().launch()` until the app exists, but that did not fix the problem. Any recommendations on how to solve this problem?



Internal change
I'm not able to view the Google Group from either the link in the readme or from the link you just sent.

<img width="794" alt="Screen Shot 2019-10-15 at 7 34 08 AM" src="https://user-images.githubusercontent.com/1393261/66841272-4c51d700-ef1e-11e9-8845-0d23bb516cd0.png">

_Originally posted by @normand1 in https://github.com/google/EarlGrey/issues/1055#issuecomment-542244636_