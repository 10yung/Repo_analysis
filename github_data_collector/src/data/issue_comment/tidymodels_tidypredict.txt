data(BostonHousing)
BostonHousing$chas <- as.numeric(BostonHousing$chas) - 1

set.seed(1)
inTrain <- sample(1:nrow(BostonHousing), floor(.8*nrow(BostonHousing)))

train_pred <- BostonHousing[ inTrain, -14]
test_pred  <- BostonHousing[-inTrain, -14]

train_resp <- BostonHousing$medv[ inTrain]
test_resp  <- BostonHousing$medv[-inTrain]

com_model <- cubist(x = train_pred, y = train_resp, committees = 5)


train_cub <- predict(com_model, newdata = train_pred)

predictingFn <- tidypredict_fit(com_model) 

#-------------------------
Results


crim | zn | indus | chas | nox | rm | age | dis | rad | tax | ptratio | b | lstat | **real | pred_r | tidypredict**
-- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | -- | --
0,1415 | 0 | 6,91 | 0 | 0,448 | 6,169 | 6,6 | 5,7209 | 3 | 233 | 17,9 | 383,37 | 5,81 | **25,3 | 24,05105 | 48,158556**
0,09164 | 0 | 10,81 | 0 | 0,413 | 6,065 | 7,8 | 5,2873 | 4 | 305 | 19,2 | 390,91 | 5,52 | **22,8 | 24,00242 | 42,4043666**
1,42502 | 0 | 19,58 | 0 | 0,871 | 6,51 | 100 | 1,7659 | 5 | 403 | 14,7 | 364,31 | 7,39 | **23,3 | 22,91912 | 38,14306904**
11,8123 | 0 | 18,1 | 0 | 0,718 | 6,824 | 76,5 | 1,794 | 24 | 666 | 20,2 | 48,45 | 22,74 | **8,4 | 11,54379 | 19,119236**
10,8342 | 0 | 18,1 | 0 | 0,679 | 6,782 | 90,8 | 1,8195 | 24 | 666 | 20,2 | 21,57 | 25,79 | **7,5 | 10,2055 | 16,8894594**
14,2362 | 0 | 18,1 | 0 | 0,693 | 6,343 | 100 | 1,5741 | 24 | 666 | 20,2 | 396,9 | 20,32 | **7,2 | 10,98567 | 17,4945624**
15,8744 | 0 | 18,1 | 0 | 0,671 | 6,545 | 99,1 | 1,5192 | 24 | 666 | 20,2 | 396,9 | 21,08 | **10,9 | 11,43178 | 16,3770992**
2,77974 | 0 | 19,58 | 0 | 0,871 | 4,903 | 97,8 | 1,3459 | 5 | 403 | 14,7 | 396,9 | 29,29 | **11,8 | 12,31011 | 17,63297084**






Here is the reproducible minimal example for testing.

``` r
library(xgboost)
#> Warning: 程辑包'xgboost'是用R版本3.6.1 来建造的
library(tidyverse)
#> Registered S3 methods overwritten by 'ggplot2':
#>   method         from 
#>   [.quosures     rlang
#>   c.quosures     rlang
#>   print.quosures rlang
#> Warning: 程辑包'dplyr'是用R版本3.6.1 来建造的
train_data <- mtcars %>%
  rename(y = am)
dtrain <-
  xgb.DMatrix(data = as.matrix(train_data %>% select(-y))
              , label = train_data$y)
xgb_model <- xgb.train(
  data = dtrain,
  nround = 10,
  seed = 1,
  max_depth = 1,
  objective = "binary:logistic",
  base_score = mean(train_data$y) # fix uncalibration problem
)
pred_from_model <- predict(xgb_model, newdata = dtrain)
library(sqldf)
#> Warning: 程辑包'sqldf'是用R版本3.6.1 来建造的
#> 载入需要的程辑包：gsubfn
#> Warning: 程辑包'gsubfn'是用R版本3.6.1 来建造的
#> 载入需要的程辑包：proto
#> Warning: 程辑包'proto'是用R版本3.6.1 来建造的
#> 载入需要的程辑包：RSQLite
#> Warning: 程辑包'RSQLite'是用R版本3.6.1 来建造的
library(tidypredict)
pred_from_tidypredict <-
  tidypredict_sql(xgb_model, dbplyr::simulate_dbi()) %>%
  paste("select ", ., " from mtcars") %>%
  str_replace("LN", "log") %>% 
  sqldf() %>%
  pull
(pred_from_model - pred_from_tidypredict) %>% abs %>% mean
#> [1] 1.464673e-08
```

<sup>Created on 2019-10-20 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>

I choose dataset `mtcars` to make a reproducible example below.

``` r
library(xgboost)
#> Warning: 程辑包'xgboost'是用R版本3.6.1 来建造的
library(tidyverse)
#> Registered S3 methods overwritten by 'ggplot2':
#>   method         from 
#>   [.quosures     rlang
#>   c.quosures     rlang
#>   print.quosures rlang
#> Warning: 程辑包'dplyr'是用R版本3.6.1 来建造的
train_data <- mtcars %>% 
    rename(y = am)
dtrain <- 
    xgb.DMatrix(
        data = as.matrix(
            train_data %>% select(-y)
        )
        ,label = train_data$y
    )
xgb_model <- xgb.train(
    data=dtrain,
    nround=10,
    seed = 1, 
    max_depth = 1,
    objective = "binary:logistic",
    base_score = mean(train_data$y) # fix uncalibration problem
)
pred_from_model <- predict(xgb_model, newdata = dtrain)
library(sqldf)
#> Warning: 程辑包'sqldf'是用R版本3.6.1 来建造的
#> 载入需要的程辑包：gsubfn
#> Warning: 程辑包'gsubfn'是用R版本3.6.1 来建造的
#> 载入需要的程辑包：proto
#> Warning: 程辑包'proto'是用R版本3.6.1 来建造的
#> 载入需要的程辑包：RSQLite
#> Warning: 程辑包'RSQLite'是用R版本3.6.1 来建造的
library(tidypredict)
#> Warning: 程辑包'tidypredict'是用R版本3.6.1 来建造的
pred_from_tidypredict <- 
tidypredict_sql(xgb_model, dbplyr::simulate_dbi()) %>% 
  paste("select ",.," from mtcars") %>% 
  # cat
    sqldf() %>% 
  pull
(pred_from_model-pred_from_tidypredict) %>% abs %>% mean
#> [1] 0.04692561
```

<sup>Created on 2019-10-20 by the [reprex package](https://reprex.tidyverse.org) (v0.3.0)</sup>



Hi,

It would be great if this can be added.  As far as I can see, it would require adding the following to 'build_fit_formula_xgb'

```
 else if (objective %in% c("count:poisson")) {
    assigned <- 1
    f <- expr(!!f)
  }
```
Output of a syntax easily adaptable by power Excel/VBA/C users.
Accommodation for models that do not produce explicit rules intercepts and slopes like for mcgv::gam models by using a lookup table to generate approximate prediction. Example: https://stat.ethz.ch/R-manual/R-devel/library/mgcv/html/predict.gam.html and https://stats.stackexchange.com/questions/406566/using-gam-outside-statistical-modelling-software-in-datatabase-outside-r
The intercept object is being added to the parsed model formula (I think instead of its value). 

In the example below should `list(list(col = "(Intercept)", val = 15.173,  op = "none", is_intercept = 1))` be `15.173`?

``` r
``` r
library(Cubist)
#> Loading required package: lattice
library(tidymodels)
#> Registered S3 method overwritten by 'xts':
#>   method     from
#>   as.zoo.xts zoo
#> ── Attaching packages ────────────────────────────────────────────────────────── tidymodels 0.0.2 ──
#> ✔ broom     0.5.1          ✔ purrr     0.3.2     
#> ✔ dials     0.0.2.9000     ✔ recipes   0.1.6     
#> ✔ dplyr     0.8.3          ✔ rsample   0.0.5.9000
#> ✔ ggplot2   3.2.0          ✔ tibble    2.1.3     
#> ✔ infer     0.4.0          ✔ yardstick 0.0.2     
#> ✔ parsnip   0.0.2.9000
#> ── Conflicts ───────────────────────────────────────────────────────────── tidymodels_conflicts() ──
#> ✖ purrr::discard()  masks scales::discard()
#> ✖ dplyr::filter()   masks stats::filter()
#> ✖ dplyr::lag()      masks stats::lag()
#> ✖ ggplot2::margin() masks dials::margin()
#> ✖ recipes::step()   masks stats::step()
library(tidypredict)
library(sessioninfo)
options(width = 100)

data(biomass)

biomass_tr <-
  biomass %>%
  dplyr::filter(dataset == "Training") %>%
  dplyr::select(-dataset, -sample)

biomass_te <-
  biomass %>%
  dplyr::filter(dataset == "Testing") %>%
  dplyr::select(-dataset, -sample)

set.seed(1)
mod <- cubist(x = biomass_tr %>% dplyr::select(-HHV), y = biomass_tr$HHV)
tidypredict_fit(mod)
#> (ifelse(oxygen >= 51.59, list(list(col = "(Intercept)", val = 15.173, 
#>     op = "none", is_intercept = 1)), 0) + ifelse(oxygen < 42.49 & 
#>     carbon < 60.97 & hydrogen < 6.85, 0.12089 + carbon * 0.362 + 
#>     hydrogen * 0.31 + oxygen * -0.009 + sulfur * 0.3, 0) + ifelse(oxygen >= 
#>     42.49 & oxygen < 51.59, 10.20375 + carbon * 0.299 + oxygen * 
#>     -0.123, 0) + ifelse(hydrogen >= 6.85 & carbon < 60.97, -13.1916 + 
#>     carbon * 0.693, 0) + ifelse(carbon >= 60.97 & nitrogen >= 
#>     1.36, 64.2476 + carbon * 0.028 + hydrogen * 0.09 + nitrogen * 
#>     -24.5, 0) + ifelse(carbon >= 60.97 & nitrogen < 1.36, -2.69375 + 
#>     carbon * 0.363 + hydrogen * 1.38 + nitrogen * 0.38, 0))/1

session_info()
#> ─ Session info ───────────────────────────────────────────────────────────────────────────────────
#>  setting  value                       
#>  version  R version 3.6.0 (2019-04-26)
#>  os       macOS High Sierra 10.13.6   
#>  system   x86_64, darwin15.6.0        
#>  ui       X11                         
#>  language (EN)                        
#>  collate  en_US.UTF-8                 
#>  ctype    en_US.UTF-8                 
#>  tz       America/New_York            
#>  date     2019-07-16                  
#> 
#> ─ Packages ───────────────────────────────────────────────────────────────────────────────────────
#>  package       * version    date       lib source                            
#>  assertthat      0.2.1      2019-03-21 [1] CRAN (R 3.6.0)                    
#>  backports       1.1.4      2019-04-10 [1] CRAN (R 3.6.0)                    
#>  base64enc       0.1-3      2015-07-28 [1] CRAN (R 3.6.0)                    
#>  bayesplot       1.6.0      2018-08-02 [1] CRAN (R 3.6.0)                    
#>  broom         * 0.5.1      2018-12-05 [1] CRAN (R 3.6.0)                    
#>  callr           3.2.0      2019-03-15 [1] CRAN (R 3.6.0)                    
#>  class           7.3-15     2019-01-01 [1] CRAN (R 3.6.0)                    
#>  cli             1.1.0      2019-03-19 [1] CRAN (R 3.6.0)                    
#>  codetools       0.2-16     2018-12-24 [1] CRAN (R 3.6.0)                    
#>  colorspace      1.4-1      2019-03-18 [1] CRAN (R 3.6.0)                    
#>  colourpicker    1.0        2017-09-27 [1] CRAN (R 3.6.0)                    
#>  crayon          1.3.4      2017-09-16 [1] CRAN (R 3.6.0)                    
#>  crosstalk       1.0.0      2016-12-21 [1] CRAN (R 3.6.0)                    
#>  Cubist        * 0.2.2      2018-05-21 [1] CRAN (R 3.6.0)                    
#>  dials         * 0.0.2.9000 2019-07-08 [1] local                             
#>  DiceDesign      1.8        2018-10-29 [1] CRAN (R 3.6.0)                    
#>  digest          0.6.20     2019-07-04 [1] CRAN (R 3.6.0)                    
#>  dplyr         * 0.8.3      2019-07-04 [1] CRAN (R 3.6.0)                    
#>  DT              0.5        2018-11-05 [1] CRAN (R 3.6.0)                    
#>  dygraphs        1.1.1.6    2018-07-11 [1] CRAN (R 3.6.0)                    
#>  evaluate        0.14       2019-05-28 [1] CRAN (R 3.6.0)                    
#>  furrr           0.1.0      2018-05-16 [1] CRAN (R 3.6.0)                    
#>  future          1.14.0     2019-07-02 [1] CRAN (R 3.6.0)                    
#>  generics        0.0.2      2018-11-29 [1] CRAN (R 3.6.0)                    
#>  ggplot2       * 3.2.0      2019-06-16 [1] CRAN (R 3.6.0)                    
#>  ggridges        0.5.1      2018-09-27 [1] CRAN (R 3.6.0)                    
#>  globals         0.12.4     2018-10-11 [1] CRAN (R 3.6.0)                    
#>  glue            1.3.1      2019-03-12 [1] CRAN (R 3.6.0)                    
#>  gower           0.2.0      2019-03-07 [1] CRAN (R 3.6.0)                    
#>  gridExtra       2.3        2017-09-09 [1] CRAN (R 3.6.0)                    
#>  gtable          0.3.0      2019-03-25 [1] CRAN (R 3.6.0)                    
#>  gtools          3.8.1      2018-06-26 [1] CRAN (R 3.6.0)                    
#>  highr           0.8        2019-03-20 [1] CRAN (R 3.6.0)                    
#>  htmltools       0.3.6      2017-04-28 [1] CRAN (R 3.6.0)                    
#>  htmlwidgets     1.3        2018-09-30 [1] CRAN (R 3.6.0)                    
#>  httpuv          1.5.1      2019-04-05 [1] CRAN (R 3.6.0)                    
#>  igraph          1.2.4      2019-02-13 [1] CRAN (R 3.6.0)                    
#>  infer         * 0.4.0      2018-11-15 [1] CRAN (R 3.6.0)                    
#>  inline          0.3.15     2018-05-18 [1] CRAN (R 3.6.0)                    
#>  ipred           0.9-8      2018-11-05 [1] CRAN (R 3.6.0)                    
#>  janeaustenr     0.1.5      2017-06-10 [1] CRAN (R 3.6.0)                    
#>  knitr           1.23       2019-05-18 [1] CRAN (R 3.6.0)                    
#>  later           0.8.0      2019-02-11 [1] CRAN (R 3.6.0)                    
#>  lattice       * 0.20-38    2018-11-04 [1] CRAN (R 3.6.0)                    
#>  lava            1.6.5      2019-02-12 [1] CRAN (R 3.6.0)                    
#>  lazyeval        0.2.2      2019-03-15 [1] CRAN (R 3.6.0)                    
#>  listenv         0.7.0      2018-01-21 [1] CRAN (R 3.6.0)                    
#>  lme4            1.1-20     2019-02-04 [1] CRAN (R 3.6.0)                    
#>  loo             2.0.0      2018-04-11 [1] CRAN (R 3.6.0)                    
#>  lubridate       1.7.4      2018-04-11 [1] CRAN (R 3.5.0)                    
#>  magrittr        1.5        2014-11-22 [1] CRAN (R 3.6.0)                    
#>  markdown        1.0        2019-06-07 [1] CRAN (R 3.6.0)                    
#>  MASS            7.3-51.4   2019-03-31 [1] CRAN (R 3.6.0)                    
#>  Matrix          1.2-17     2019-03-22 [1] CRAN (R 3.6.0)                    
#>  matrixStats     0.54.0     2018-07-23 [1] CRAN (R 3.6.0)                    
#>  mime            0.7        2019-06-11 [1] CRAN (R 3.6.0)                    
#>  miniUI          0.1.1.1    2018-05-18 [1] CRAN (R 3.6.0)                    
#>  minqa           1.2.4      2014-10-09 [1] CRAN (R 3.6.0)                    
#>  munsell         0.5.0      2018-06-12 [1] CRAN (R 3.6.0)                    
#>  nlme            3.1-139    2019-04-09 [1] CRAN (R 3.6.0)                    
#>  nloptr          1.2.1      2018-10-03 [1] CRAN (R 3.6.0)                    
#>  nnet            7.3-12     2016-02-02 [1] CRAN (R 3.6.0)                    
#>  parsnip       * 0.0.2.9000 2019-07-16 [1] local                             
#>  pillar          1.4.2      2019-06-29 [1] CRAN (R 3.6.0)                    
#>  pkgbuild        1.0.3      2019-03-20 [1] CRAN (R 3.6.0)                    
#>  pkgconfig       2.0.2      2018-08-16 [1] CRAN (R 3.6.0)                    
#>  plyr            1.8.4      2016-06-08 [1] CRAN (R 3.6.0)                    
#>  prettyunits     1.0.2      2015-07-13 [1] CRAN (R 3.6.0)                    
#>  pROC            1.14.0     2019-03-12 [1] CRAN (R 3.6.0)                    
#>  processx        3.4.0      2019-07-03 [1] CRAN (R 3.6.0)                    
#>  prodlim         2018.04.18 2018-04-18 [1] CRAN (R 3.6.0)                    
#>  promises        1.0.1      2018-04-13 [1] CRAN (R 3.6.0)                    
#>  ps              1.3.0      2018-12-21 [1] CRAN (R 3.6.0)                    
#>  purrr         * 0.3.2      2019-03-15 [1] CRAN (R 3.6.0)                    
#>  R6              2.4.0      2019-02-14 [1] CRAN (R 3.6.0)                    
#>  Rcpp            1.0.1      2019-03-17 [1] CRAN (R 3.6.0)                    
#>  recipes       * 0.1.6      2019-07-02 [1] CRAN (R 3.6.0)                    
#>  reshape2        1.4.3      2017-12-11 [1] CRAN (R 3.6.0)                    
#>  rlang           0.4.0.9000 2019-07-09 [1] Github (r-lib/rlang@a3d7e47)      
#>  rmarkdown       1.14       2019-07-12 [1] CRAN (R 3.6.0)                    
#>  rpart           4.1-15     2019-04-12 [1] CRAN (R 3.6.0)                    
#>  rsample       * 0.0.5.9000 2019-07-12 [1] local                             
#>  rsconnect       0.8.13     2019-01-10 [1] CRAN (R 3.6.0)                    
#>  rstan           2.18.2     2018-11-07 [1] CRAN (R 3.6.0)                    
#>  rstanarm        2.18.2     2018-11-10 [1] CRAN (R 3.6.0)                    
#>  rstantools      1.5.1      2018-08-22 [1] CRAN (R 3.6.0)                    
#>  rstudioapi      0.10       2019-03-19 [1] CRAN (R 3.6.0)                    
#>  scales        * 1.0.0      2018-08-09 [1] CRAN (R 3.6.0)                    
#>  sessioninfo   * 1.1.1.9000 2019-03-26 [1] Github (r-lib/sessioninfo@dfb3ea8)
#>  shiny           1.2.0      2018-11-02 [1] CRAN (R 3.6.0)                    
#>  shinyjs         1.0        2018-01-08 [1] CRAN (R 3.6.0)                    
#>  shinystan       2.5.0      2018-05-01 [1] CRAN (R 3.6.0)                    
#>  shinythemes     1.1.2      2018-11-06 [1] CRAN (R 3.6.0)                    
#>  SnowballC       0.6.0      2019-01-15 [1] CRAN (R 3.6.0)                    
#>  StanHeaders     2.18.1     2019-01-28 [1] CRAN (R 3.6.0)                    
#>  stringi         1.4.3      2019-03-12 [1] CRAN (R 3.6.0)                    
#>  stringr         1.4.0      2019-02-10 [1] CRAN (R 3.6.0)                    
#>  survival        2.44-1.1   2019-04-01 [1] CRAN (R 3.6.0)                    
#>  threejs         0.3.1      2017-08-13 [1] CRAN (R 3.6.0)                    
#>  tibble        * 2.1.3      2019-06-06 [1] CRAN (R 3.6.0)                    
#>  tidymodels    * 0.0.2      2019-07-03 [1] local                             
#>  tidyposterior   0.0.2      2018-11-15 [1] CRAN (R 3.6.0)                    
#>  tidypredict   * 0.4.2      2019-07-15 [1] local                             
#>  tidyr         * 0.8.3      2019-03-01 [1] CRAN (R 3.6.0)                    
#>  tidyselect      0.2.5      2018-10-11 [1] CRAN (R 3.6.0)                    
#>  tidytext        0.2.0      2018-10-17 [1] CRAN (R 3.6.0)                    
#>  timeDate        3043.102   2018-02-21 [1] CRAN (R 3.6.0)                    
#>  tokenizers      0.2.1      2018-03-29 [1] CRAN (R 3.6.0)                    
#>  vctrs           0.2.0.9000 2019-07-15 [1] Github (r-lib/vctrs@a8fb108)      
#>  withr           2.1.2      2018-03-15 [1] CRAN (R 3.6.0)                    
#>  xfun            0.8        2019-06-25 [1] CRAN (R 3.6.0)                    
#>  xtable          1.8-3      2018-08-29 [1] CRAN (R 3.6.0)                    
#>  xts             0.11-2     2018-11-05 [1] CRAN (R 3.6.0)                    
#>  yaml            2.2.0      2018-07-25 [1] CRAN (R 3.6.0)                    
#>  yardstick     * 0.0.2      2018-11-05 [1] CRAN (R 3.6.0)                    
#>  zeallot         0.1.0      2018-01-28 [1] CRAN (R 3.6.0)                    
#>  zoo             1.8-6      2019-05-28 [1] CRAN (R 3.6.0)                    
#> 
#> [1] /Library/Frameworks/R.framework/Versions/3.6/Resources/library
```

<sup>Created on 2019-07-16 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
Model object generated using `Cubist_0.2.2`

``` r
library(tidypredict)
library(sessioninfo)
options(width = 100)

mod <-
  structure(
    list(
      data = "15\\.5,8,318.0,150,2.76,3.520,16.87,0,0,3,2\n15\\.5,8,318.0,150,2.76,3.520,16.87,0,0,3,2\n27\\.3,4,79.0,66,4.08,1.935,18.90,1,1,4,1\n21\\.4,6,258.0,110,3.08,3.215,19.44,1,0,3,1\n21,6,160.0,110,3.90,2.875,17.02,0,1,4,4\n21,6,160.0,110,3.90,2.620,16.46,0,1,4,4\n15\\.8,8,351.0,264,4.22,3.170,14.50,0,1,5,4\n14\\.7,8,440.0,230,3.23,5.345,17.42,0,0,3,4\n10\\.4,8,460.0,215,3.00,5.424,17.82,0,0,3,4\n15\\.2,8,275.8,180,3.07,3.780,18.00,0,0,3,3\n14\\.7,8,440.0,230,3.23,5.345,17.42,0,0,3,4\n18\\.1,6,225.0,105,2.76,3.460,20.22,1,0,3,1\n22\\.8,4,140.8,95,3.92,3.150,22.90,1,0,4,2\n21,6,160.0,110,3.90,2.620,16.46,0,1,4,4\n15,8,301.0,335,3.54,3.570,14.60,0,1,5,8\n21\\.4,4,121.0,109,4.11,2.780,18.60,1,1,4,2\n18\\.1,6,225.0,105,2.76,3.460,20.22,1,0,3,1\n10\\.4,8,460.0,215,3.00,5.424,17.82,0,0,3,4\n13\\.3,8,350.0,245,3.73,3.840,15.41,0,0,3,4\n14\\.7,8,440.0,230,3.23,5.345,17.42,0,0,3,4\n15\\.8,8,351.0,264,4.22,3.170,14.50,0,1,5,4\n26,4,120.3,91,4.43,2.140,16.70,0,1,5,2\n16\\.4,8,275.8,180,3.07,4.070,17.40,0,0,3,3\n22\\.8,4,108.0,93,3.85,2.320,18.61,1,1,4,1\n21\\.4,4,121.0,109,4.11,2.780,18.60,1,1,4,2\n19\\.7,6,145.0,175,3.62,2.770,15.50,0,1,5,6\n15\\.8,8,351.0,264,4.22,3.170,14.50,0,1,5,4\n15\\.2,8,304.0,150,3.15,3.435,17.30,0,0,3,2\n26,4,120.3,91,4.43,2.140,16.70,0,1,5,2\n17\\.3,8,275.8,180,3.07,3.730,17.60,0,0,3,3\n21\\.4,4,121.0,109,4.11,2.780,18.60,1,1,4,2\n22\\.8,4,108.0,93,3.85,2.320,18.61,1,1,4,1",
      names = "| Generated using R version 3.6.0 (2019-04-26)\n| on Mon Jul 15 20:36:50 2019\noutcome.\n\noutcome: continuous.\ncyl: continuous.\ndisp: continuous.\nhp: continuous.\ndrat: continuous.\nwt: continuous.\nqsec: continuous.\nvs: continuous.\nam: continuous.\ngear: continuous.\ncarb: continuous.\n",
      caseWeights = FALSE,
      model = "id=\"Cubist 2.07 GPL Edition 2019-07-15\"\nprec=\"1\" globalmean=\"18.37188\" extrap=\"1\" insts=\"0\" ceiling=\"44.2\" floor=\"0\"\natt=\"outcome\" mean=\"18.37\" sd=\"4.326829\" min=\"10.4\" max=\"27.3\"\natt=\"cyl\" mean=\"6.4\" sd=\"1.740181\" min=\"4\" max=\"8\"\natt=\"disp\" mean=\"252.61\" sd=\"121.1964\" min=\"79\" max=\"460\"\natt=\"hp\" mean=\"161.3\" sd=\"69.12569\" min=\"66\" max=\"335\"\natt=\"drat\" mean=\"3.572\" sd=\"0.5478398\" min=\"2.76\" max=\"4.43\"\natt=\"wt\" mean=\"3.4132\" sd=\"1.007245\" min=\"1.935\" max=\"5.424\"\natt=\"qsec\" mean=\"17.468\" sd=\"1.836215\" min=\"14.5\" max=\"22.9\"\natt=\"vs\" mean=\"0.3\" sd=\"0.4709301\" min=\"0\" max=\"1\"\natt=\"am\" mean=\"0.5\" sd=\"0.5080015\" min=\"0\" max=\"1\"\natt=\"gear\" mean=\"3.7\" sd=\"0.8032203\" min=\"3\" max=\"5\"\natt=\"carb\" mean=\"2.9\" sd=\"1.596052\" min=\"1\" max=\"8\"\nentries=\"1\"\nrules=\"1\"\nconds=\"0\" cover=\"32\" mean=\"18.37\" loval=\"10.4\" hival=\"27.3\" esterr=\"1.46\"\ncoeff=\"20.52\" att=\"disp\" coeff=\"-0.0294\" att=\"drat\" coeff=\"1.33\"\n",
      output = "\nCubist [Release 2.07 GPL Edition]  Mon Jul 15 20:36:50 2019\n---------------------------------\n\n    Target attribute `outcome'\n\nRead 32 cases (11 attributes) from undefined.data\n\nModel:\n\n  Rule 1: [32 cases, mean 18.37, range 10.4 to 27.3, est err 1.46]\n\n\toutcome = 20.52 - 0.0294 disp + 1.33 drat\n\n\nEvaluation on training data (32 cases):\n\n    Average  |error|               0.71\n    Relative |error|               0.19\n    Correlation coefficient        0.94\n\n\n\tAttribute usage:\n\t  Conds  Model\n\n\t         100%    disp\n\t         100%    drat\n\n\nTime: 0.0 secs\n",
      control = list(
        unbiased = FALSE,
        rules = 100,
        extrapolation = 1,
        sample = 0,
        label = "outcome",
        seed = 27L
      ),
      committees = 1,
      maxd = 2.3,
      dims = c(32L, 10L),
      splits = NULL,
      usage = structure(
        list(
          Conditions = c(0, 0, 0, 0, 0, 0, 0, 0, 0, 0),
          Model = c(100,
                    100, 0, 0, 0, 0, 0, 0, 0, 0),
          Variable = c(
            "disp",
            "drat",
            "cyl",
            "hp",
            "wt",
            "qsec",
            "vs",
            "am",
            "gear",
            "carb"
          )
        ),
        row.names = c(NA,-10L),
        class = "data.frame"
      ),
      call = as.call(quote(
        cubist.default(
          x = dat[, names(dat) != ".outcome", drop = FALSE],
          y = dat$.outcome,
          committees = 1,
          control = ctrl
        )
      )),
      coefficients = structure(
        list(
          `(Intercept)` = 20.52,
          cyl = NA_real_,
          disp = -0.0294,
          hp = NA_real_,
          drat = 1.33,
          wt = NA_real_,
          qsec = NA_real_,
          vs = NA_real_,
          am = NA_real_,
          gear = NA_real_,
          carb = NA_real_,
          committee = "1",
          rule = "1"
        ),
        row.names = "(Intercept)",
        reshapeWide = list(
          v.names = "value",
          timevar = "var",
          idvar = "tmp",
          times = structure(
            c(1L,
              4L, 5L, 8L, 6L, 11L, 9L, 10L, 2L, 7L, 3L),
            .Label = c(
              "(Intercept)",
              "am",
              "carb",
              "cyl",
              "disp",
              "drat",
              "gear",
              "hp",
              "qsec",
              "vs",
              "wt"
            ),
            class = "factor"
          ),
          varying = structure(
            c(
              "value.(Intercept)",
              "value.cyl",
              "value.disp",
              "value.hp",
              "value.drat",
              "value.wt",
              "value.qsec",
              "value.vs",
              "value.am",
              "value.gear",
              "value.carb"
            ),
            .Dim = c(1L, 11L)
          )
        ),
        class = "data.frame"
      ),
      vars = list(
        all = c(
          "cyl",
          "disp",
          "hp",
          "drat",
          "wt",
          "qsec",
          "vs",
          "am",
          "gear",
          "carb"
        ),
        used = c("drat", "committee",
                 "rule")
      )
    ),
    class = "cubist"
  )

tidypredict::tidypredict_fit(mod)
#> Error in splits[splits$rule == .x & splits$committee == comm, ]: incorrect number of dimensions

session_info()
#> ─ Session info ───────────────────────────────────────────────────────────────────────────────────
#>  setting  value                       
#>  version  R version 3.6.0 (2019-04-26)
#>  os       macOS High Sierra 10.13.6   
#>  system   x86_64, darwin15.6.0        
#>  ui       X11                         
#>  language (EN)                        
#>  collate  en_US.UTF-8                 
#>  ctype    en_US.UTF-8                 
#>  tz       America/New_York            
#>  date     2019-07-15                  
#> 
#> ─ Packages ───────────────────────────────────────────────────────────────────────────────────────
#>  package     * version    date       lib source                            
#>  assertthat    0.2.1      2019-03-21 [1] CRAN (R 3.6.0)                    
#>  cli           1.1.0      2019-03-19 [1] CRAN (R 3.6.0)                    
#>  crayon        1.3.4      2017-09-16 [1] CRAN (R 3.6.0)                    
#>  digest        0.6.20     2019-07-04 [1] CRAN (R 3.6.0)                    
#>  dplyr         0.8.3      2019-07-04 [1] CRAN (R 3.6.0)                    
#>  evaluate      0.14       2019-05-28 [1] CRAN (R 3.6.0)                    
#>  generics      0.0.2      2018-11-29 [1] CRAN (R 3.6.0)                    
#>  glue          1.3.1      2019-03-12 [1] CRAN (R 3.6.0)                    
#>  highr         0.8        2019-03-20 [1] CRAN (R 3.6.0)                    
#>  htmltools     0.3.6      2017-04-28 [1] CRAN (R 3.6.0)                    
#>  knitr         1.23       2019-05-18 [1] CRAN (R 3.6.0)                    
#>  magrittr      1.5        2014-11-22 [1] CRAN (R 3.6.0)                    
#>  pillar        1.4.2      2019-06-29 [1] CRAN (R 3.6.0)                    
#>  pkgconfig     2.0.2      2018-08-16 [1] CRAN (R 3.6.0)                    
#>  purrr         0.3.2      2019-03-15 [1] CRAN (R 3.6.0)                    
#>  R6            2.4.0      2019-02-14 [1] CRAN (R 3.6.0)                    
#>  Rcpp          1.0.1      2019-03-17 [1] CRAN (R 3.6.0)                    
#>  rlang         0.4.0.9000 2019-07-09 [1] Github (r-lib/rlang@a3d7e47)      
#>  rmarkdown     1.14       2019-07-12 [1] CRAN (R 3.6.0)                    
#>  sessioninfo * 1.1.1.9000 2019-03-26 [1] Github (r-lib/sessioninfo@dfb3ea8)
#>  stringi       1.4.3      2019-03-12 [1] CRAN (R 3.6.0)                    
#>  stringr       1.4.0      2019-02-10 [1] CRAN (R 3.6.0)                    
#>  tibble        2.1.3      2019-06-06 [1] CRAN (R 3.6.0)                    
#>  tidypredict * 0.4.2      2019-07-15 [1] local                             
#>  tidyselect    0.2.5      2018-10-11 [1] CRAN (R 3.6.0)                    
#>  withr         2.1.2      2018-03-15 [1] CRAN (R 3.6.0)                    
#>  xfun          0.8        2019-06-25 [1] CRAN (R 3.6.0)                    
#>  yaml          2.2.0      2018-07-25 [1] CRAN (R 3.6.0)                    
#> 
#> [1] /Library/Frameworks/R.framework/Versions/3.6/Resources/library
```

<sup>Created on 2019-07-15 by the [reprex package](https://reprex.tidyverse.org) (v0.2.1)</sup>
For example, if I pull down a sample of data, run a `glm`, it'd be awesome to be able to use the entire rest of my data as the test set, using `tidypredict::tidypredict_to_column()` and some currently nonexistent functionality to run AUC or R^2 on remaining data.
