InputAxes attribute and allows selection of input axes in a popup.

Scene attribute allows selection of enabled scenes in build settings, in a popup.

I added an attribute that goes through a property setter instead of setting the value of the field directly.
This allows one to have arbitrary reactions to the entered value, from invoking an event after setting it to outright rejecting it.

It automatically looks for a property that matches the display name of the field, and one can explicitly give the property's name instead.

Let me know if you're interested in merging it. I haven't documented it in the readme in case it doesn't get merged anyway, but I'll be happy to document it if you want.
Every time I use the dropdown attribute I get to the point where I want to display dynamic content, like names of children or scene names. If Dropdown would accept properties (getters) or methods this would be easy.

Thanks for your great work!
I just hated to put animator names by my own so decided to create this.

Basicly it makes a dropdown of all animation parameters of given state.
**If you install this, please be sure to click  `Tools/Naughty Attributes/Update Attributes Database` in editor!**

Small example:
```csharp
public Animator animator;

[AnimatorType("animator", AnimatorControllerParameterType.Trigger)]
public string AllTriggers;  // Will return all trigger parameters

// Easy to use like this
public void Start(){
    animator.SetTrigger(AllTriggers);
}
```
As stated in the title, non serialized fields cannot be grouped using BoxGroup. If it works as expected now it would be nice to have this as a feature.
This allows users to make Editor Only and Playmode Only Buttons. This helps when doing simple testing buttons to trigger animations and methods
1) Add [AssetOnly] / [SceneOnly] attributes (as in Odin)
So if you have a slot in inspector is for a prefab, you can put only prefab from Project view there, and couldn't put a scene Gameobjects.
Conversely, if you have a slot for a scene objects only, you can't put assets from Project there.
2) Add serialization for Scene asset.
I want to have an ability to put a Scene in a slot. So I can load scene not by name but by scene asset reference directly.
I had a feature request if it is reasonably feasible.  Could you add a flag for being able to expand and collapse boxgroups similar to how unity does this with structs in the inspector?  For instance something like `BoxGroup(true, "Component Refs") ` which would map to `BoxGroup(bool isCollapsible = false, string name = "")`  

Is something like this trivial, or is it actually really hard?  I know when I try to fiddle with the inspector stuff I run into a ton of issues with this stuff.  Regardless of if this get's implemented, as long as I'm submitting an Issue anyway, I want to thank you for creating this awesome asset.  Naughty Attributes has made customizing the editor so much easier for me.  Everyone should be using this asset, thanks for your work.
This is more a warning to other devs than a bug report.

NaughtyAttributes would just draw a default inspector if you do nesting like this:

```
[Serializable]
public class Inner
{
	public bool Check;

	[NaughtyAttributes.ShowIf("Check")]
	public string hello = "hello";
}


public class NestingTest : MonoBehaviour
{
	public Inner innerTest;
}

```

Same goes for structs.

If you need this, go look somewhere else.
If you don't: wonderful project.


Also see: https://github.com/dbrizov/NaughtyAttributes/issues/19