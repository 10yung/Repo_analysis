I keep getting the same error even after changing the value of HDOP to a higher one, What I mean by high is 2.2 (220). Any solutions to fix it:?

**IF YOU DON'T REMOVE THESE FOUR LINES, THEN YOUR REPORT WILL BE CLOSED AUTOMATICALLY**
Questions and user problems should be directed at the forum (http://discuss.ardupilot.org)
_**Please be very sure you have found a bug when opening this issue**_
If there was a previous discussion in the forum, link to it

### Bug report

**Issue details**

The Yaw drift on APM much much higher than that on Betaflight/Cleanflight when not using a magnetometer. We observed drift of about 1 degree in 1.5 mins on betaflight when sitting on the desk and in APM 1 degree drift was observed in about 10 secs. Tested this on various autopilots and the performance is the same. Our guess was that this is because of the EKF not tuned correctly when not using a magnetometer, so we tried reducing the noise values of gyro and acc but it didn't really make much of a difference. Any ideas?

**Version**
3.6.11 - 4.0.0

**Platform**
[  ] All
[  ] AntennaTracker
[ x ] Copter
[  ] Plane
[  ] Rover
[  ] Submarine

**Airframe type**
Quad X

**Hardware type**
Kakute F7 AIO, Kakute F7 V1.5, Pixracer, mRo Pixhawk 

**Logs**
_Please provide a link to any relevant logs that show the issue_

### Bug report

Request position message using MAV_CMD_SET_MESSAGE_INTERVAL (511 ) doesn't respond within the required interval.

Sending message COMMAND_LONG ( #76 ) with MAV_CMD MAV_CMD_SET_MESSAGE_INTERVAL (511 ) to request a position message (#33) at intervals of 40 ms ( down to 20 ms) doesn't respond coherently.

**Version**
Copter 3.6.12 
Copter 4.0.0

**Platform**
[*  ] Copter

**Hardware type**
Pixhawk



I want to switch than if then else.
I think it is easy to understand that the processing differs depending on the value of the same variable.

This makes for slightly larger builds on F7 and H7, but gives us fast double precision maths. I think it is time we started testing that

This add support for writing to dataflash logs from scripting. This also adds a example writing to both dataflash logs and a file on the SD card. There is also a second example that reads in data over serial and writes to dataflash closing https://github.com/ArduPilot/ardupilot/pull/12801. The examples use find_baudrate() and tabel.concat from https://github.com/ArduPilot/ardupilot/pull/13268. Tested both in SITL and on real hardware.

This generally works OK, not all the the formats are supported for lua so I added a helper to auto fill the timestamp for a 'Q' character in the format string. 

Is there a nicer way to give the binding access to AP_logger? I had to make a couple of functions public to get this working. Possibly we may have also bypassed some checking that gets done by logger before logging. 

Many thanks to @WickedShell for helping me out when I got stuck (more than once) 
As mentioned in this Thread:

https://discuss.ardupilot.org/t/esc-sync-problem-with-update-from-3-6-9-to-3-6-10/48261

We had the Sync Problem, it was gone later in a DEV Version of 4.00. But with the stable 4.00 and 4.01 RC2, the problem is back.

Version
Copter-4.0.0

Platform
[ ] All
[ ] AntennaTracker
[Ã—] Copter
[ ] Plane
[ ] Rover
[ ] Submarine

Airframe type
hex, Y6, octa etc

Hardware type
Cube
T-Motor F55A Pro II Brushless ESC 55A 4in1
This PR solves #1348 which prevents a **fly away** of copter. 
I have created a new param that takes in max allowed distance of the first waypoint when the user switches to mode auto. If the new param, I.e `AUTO_MAX_WP_DIST` is set as '0' this feature is disabled (It is disabled by default). If the distance to first way point is greater than maximum allowed distance then copter does not switch to mode auto and raises a message alert. 


Here is what currently happens on master if a user switches to mode auto when the mission was set from some different location far away. It can easily lead to a fly away situation. 

![Screenshot from 2020-01-17 18-50-28 (copy)](https://user-images.githubusercontent.com/36970042/72616635-5fc96f80-395d-11ea-99ff-75f3a23e9fce.png)

After these commits, and setting up the param, here is the message that is raised:
![Screenshot from 2020-01-17 18-55-36](https://user-images.githubusercontent.com/36970042/72616803-b040cd00-395d-11ea-98fa-cae54aa48c59.png)

I don't know if this is the best approach to solving this problem, but I feel it'll be a good safety feature to add. 
@rmackay9 @peterbarker @magicrub , if possible, please suggest any changes that can be made to make this PR better.