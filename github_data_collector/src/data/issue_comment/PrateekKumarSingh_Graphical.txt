Just some basic validation of the module and the functions
Note currently the Pester is reporting some error since you don't have a LICENSE file on the repo.

Hope it helps :)
This is best practice and should help with the clarity of the code
Using this module in my PowerShell script, the header and footer never show up (although testing it independently I can get it to work).  It seems that the header and footer are falling out of the pipeline and never make it to the output.  To be consistent with the way that `Write-Graph` works, we should output the header and footer using `Write-Host` also.
Hey @PrateekKumarSingh ,

The graph is already great, if the data is in the correct range and the values are steady.

## The problem

However in my case for example I hat to do a time complexity analysis for an algorithm.
Varying the value linear is not really an option because this takes very long, so I multiplied by 4 each time.

I have the following data:

2 | 8 | 32 | 128 | 512
-- | -- | -- | -- | --
1287.7 | 838.5 | 1057.2 | 1027.2 | 1243.3

The time in the second row is the real data I would like to visualize, but doing this directly would not be really good, because the curve is much easier to interpret when the x value of the graph is proportional to the represented value.

The next problem was that the graph doesn't scale to fit the window vertically as well as horizontally.

## My quick solution

My fast solution is to transform the data before visualizing.
I did this by setting a fixed width and dividing my x axis into segments with equal width.
I then check for each segment if a datapoint is in it. I set the new datapoint to the old one if its in the segment, otherwise I set it to 0. (Alternatively the datapoint could be interpolated)

I also scaled the new datapoints in the y axis so that the maximum hits the height.

My solution works quite well. The only problem is that the labels are not correct then.

I could think of many scenarios, where some kind of linearization and scaling could be useful.
I am not sure how exactly this feature should be implemented, but it would be really awesome.

I can share some code on demand or maybe some day I am motivated and implement the feature myself. ๐ 

Thanks for this great module!
Currently I am using `Clear-Host` and draw the graph again with an additional data point when I want to display live data. It works quite well, but it flickers a bit. What would be _really_ awesome is if I could pipe a stream of data points into `Show-Graph` and it would add data points to the graph as they come in.
When repeatedly drawing a graph with different data, I would like to manually set the axis bounds so the axis are "stable". For example, I would like to specify that the Y axis should always start at 0, not the lowest value in the data set.
E.g. if the X axis step is the default 10, and the amount of data points is not dividable by 10, the last `|` box boundary character will be misplaced:
```
Datapoints: 67, 68, 33, 62, 38, 68, 55
โ go_goroutines โ
โ               โ
โ   70โคโโ โ โโ  โ
โ   60โค โโโโโโ  โ
โ   50โค โโโโ โ  โ
โ   40โค  โ โ โ  โ
โ     โโโโโโโโ  โ
โ        โ
โโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68
โ go_goroutines โโ
โ                โ
โ   70โคโโ โ โ โ  โ
โ   60โค โโโโโโโ  โ
โ   50โค โโโโ  โ  โ
โ   40โค  โ โ  โ  โ
โ     โโโโโโโโโ  โ
โ        โ
โโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60
โ go_goroutines โโโ
โ                 โ
โ   70โคโโ โ โ โโ  โ
โ   60โค โโโโโโโโ  โ
โ   50โค โโโโ   โ  โ
โ   40โค  โ โ   โ  โ
โ     โโโโโโโโโโ  โ
โ        โ
โโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60
โ go_goroutines โโโโ
โ                  โ
โ   70โคโโ โ โ โ โ  โ
โ   60โค โโโโโโโโโ  โ
โ   50โค โโโโ    โ  โ
โ   40โค  โ โ    โ  โ
โ     โโโโโโโโโโโฌ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72
โ go_goroutines โโโโโ
โ                   โ
โ   80โค          โ  โ
โ   70โคโโ โ โ โ โโ  โ
โ   60โค โโโโโโโโโโ  โ
โ   50โค โโโโ     โ  โ
โ   40โค  โ โ     โ  โ
โ     โโโโโโโโโโโฌโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54
โ go_goroutines โโโโโโ
โ                    โ
โ   80โค          โโ  โ
โ   70โคโโ โ โ โ โโโ  โ
โ   60โค โโโโโโโโโ โ  โ
โ   50โค โโโโ      โ  โ
โ   40โค  โ โ      โ  โ
โ     โโโโโโโโโโโฌโโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44
โ go_goroutines โโโโโโโ
โ                     โ
โ   80โค          โ โ  โ
โ   70โคโโ โ โ โ โโ โ  โ
โ   60โค โโโโโโโโโ โ   โ
โ   50โค โโโโ      โโ  โ
โ   40โค  โ โ       โ  โ
โ     โโโโโโโโโโโฌโโโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73
โ go_goroutines โโโโโโโโ
โ                      โ
โ   80โค          โ  โ  โ
โ   70โคโโ โ โ โ โโ โโ  โ
โ   60โค โโโโโโโโโ โโโ  โ
โ   50โค โโโโ      โโโ  โ
โ   40โค  โ โ        โ  โ
โ     โโโโโโโโโโโฌโโโโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62
โ go_goroutines โโโโโโโโโ
โ                       โ
โ   80โค          โ  โโ  โ
โ   70โคโโ โ โ โ โโ โโโ  โ
โ   60โค โโโโโโโโโ โโ โ  โ
โ   50โค โโโโ      โโ โ  โ
โ   40โค  โ โ         โ  โ
โ     โโโโโโโโโโโฌโโโโโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62, 75
โ go_goroutines โโโโโโโโโโ
โ                        โ
โ   80โค          โ  โ โ  โ
โ   70โคโโ โ โ โ โโ โโโโ  โ
โ   60โค โโโโโโโโโ โโ  โ  โ
โ   50โค โโโโ      โโ  โ  โ
โ   40โค  โ โ          โ  โ
โ     โโโโโโโโโโโฌโโโโโโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62, 75, 61
โ go_goroutines โโโโโโโโโโโ
โ                         โ
โ   80โค          โ  โ โโ  โ
โ   70โคโโ โ โ โ โโ โโโโโ  โ
โ   60โค โโโโโโโโโ โโ   โ  โ
โ   50โค โโโโ      โโ   โ  โ
โ   40โค  โ โ           โ  โ
โ     โโโโโโโโโโโฌโโโโโโโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62, 75, 61, 53
โ go_goroutines โโโโโโโโโโโโ
โ                          โ
โ   80โค          โ  โ โ โ  โ
โ   70โคโโ โ โ โ โโ โโโโโโ  โ
โ   60โค โโโโโโโโโ โโ   โโ  โ
โ   50โค โโโโ      โโ    โ  โ
โ   40โค  โ โ            โ  โ
โ     โโโโโโโโโโโฌโโโโโโโโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62, 75, 61, 53, 34
โ go_goroutines โโโโโโโโโโโโโ
โ                           โ
โ   80โค          โ  โ โ  โ  โ
โ   70โคโโ โ โ โ โโ โโโโโ โ  โ
โ   60โค โโโโโโโโโ โโ   โโ   โ
โ   50โค โโโโ      โโ    โ   โ
โ   40โค  โ โ             โ  โ
โ     โโโโโโโโโโโฌโโโโโโโโโ  โ
โ              10  โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62, 75, 61, 53, 34, 56
โ go_goroutines โโโโโโโโโโโโโโ
โ                            โ
โ   80โค          โ  โ โ   โ  โ
โ   70โคโโ โ โ โ โโ โโโโโ  โ  โ
โ   60โค โโโโโโโโโ โโ   โโ โ  โ
โ   50โค โโโโ      โโ    โโโ  โ
โ   40โค  โ โ             โโ  โ
โ     โโโโโโโโโโโฌโโโโโโโโโโฌ  โ
โ              10        20  โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62, 75, 61, 53, 34, 56, 74
โ go_goroutines โโโโโโโโโโโโโโโ
โ                             โ
โ   80โค          โ  โ โ    โ  โ
โ   70โคโโ โ โ โ โโ โโโโโ  โโ  โ
โ   60โค โโโโโโโโโ โโ   โโ โโ  โ
โ   50โค โโโโ      โโ    โโ โ  โ
โ   40โค  โ โ             โ โ  โ
โ     โโโโโโโโโโโฌโโโโโโโโโโฌโ  โ
โ              10        20  โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62, 75, 61, 53, 34, 56, 74, 41
โ go_goroutines โโโโโโโโโโโโโโโโ
โ                              โ
โ   80โค          โ  โ โ    โโ  โ
โ   70โคโโ โ โ โ โโ โโโโโ  โโโ  โ
โ   60โค โโโโโโโโโ โโ   โโ โโ   โ
โ   50โค โโโโ      โโ    โโ  โ  โ
โ   40โค  โ โ             โ  โ  โ
โ     โโโโโโโโโโโฌโโโโโโโโโโฌโโ  โ
โ              10        20  โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
Datapoints: 67, 68, 33, 62, 38, 68, 55, 68, 60, 60, 72, 54, 44, 73, 62, 75, 61, 53, 34, 56, 74, 41, 33
โ go_goroutines โโโโโโโโโโโโโโโโโ
โ                               โ
โ   80โค          โ  โ โ    โ โ  โ
โ   70โคโโ โ โ โ โโ โโโโโ  โโ โ  โ
โ   60โค โโโโโโโโโ โโ   โโ โโ    โ
โ   50โค โโโโ      โโ    โโ  โ   โ
โ   40โค  โ โ             โ  โโ  โ
โ     โโโโโโโโโโโฌโโโโโโโโโโฌโโโ  โ
โ              10        20  โ
โโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโโ
```

![2018-08-09 18 54 10](https://user-images.githubusercontent.com/10532611/43913568-ae8c84a0-9c05-11e8-9536-22ed11b45ee9.gif)

I would like to show a graph for data with explicit X values, e.g. where the X axis represents time. Maybe `Datapoints` could accept a hash table where the key is the X value?

Ideally, the key could then be an int, float or `DateTime` object