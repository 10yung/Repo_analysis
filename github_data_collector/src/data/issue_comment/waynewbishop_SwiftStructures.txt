I've fixed implementation of QuickSort. New implementation ensures O(n log n) complexity for case when array contains duplicates.
Old realisation provided quadratic time for such cases.
I've added tests to check QuickSort with different cases - with duplicates, with different array sized, already sorted array.
Hello.
I've found some issues in LinkedList implementation.

I've added this in LinkedList.swift: 
func remove(): counter -= 1 added for deleting first element
func insert(): return added for inserting to non valid index

Also I've added two new tests LinkedTest.swift, func testAddLinkAtIndex()
fix trie search can not finds all possible words issue;

â€¦nt of 1

This crash can be reproduced by creating a new LinkedList, adding a value, and then immediately removing it. The crash occurs because `head.next` is nil.

Additionally, I moved the `index == 0` check before the initialization of `current`, as it doesn't need to use it.

I can change the ternary operator to an if-statement if you think it's more readable.
