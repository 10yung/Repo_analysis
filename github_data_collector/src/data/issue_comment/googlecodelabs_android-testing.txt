



Exist duplicate dependency in app build.gradle:
```
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"

    // Architecture Components
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
```
In project code we have
`@Before
fun init() {
        repository = ServiceLocator.provideTasksRepository(getApplicationContext())
        repository.deleteAllTasksBlocking()
    }`
and in lesson 10 description we have
`@Before
fun resetState() {
    repository = ServiceLocator.provideTasksRepository(getApplicationContext())
}`

Please change method name "resetState" to "init"
As described in the subject:
end_codelab_3 (broken link / missing branch)
Signed-off-by: Doilio Matsinhe <doiliomatsinhe@hotmail.com>
Robolectric provides [`@Config`](https://github.com/robolectric/robolectric/blob/master/annotations/src/main/java/org/robolectric/annotation/Config.java) to facilitate simulated device configuration. 

As far as I can tell, there is no equivalent in the AndroidX test system.

We're trying to move in a direction where our ui tests can run either on device or in a simulated environment via espresso and Robolectric. However, our tests fail on a Robolectric environment because some of our views are drawn with less than 90% of the view on the screen. We don't target mdpi or super small screen size devices at all. Our tests (the same code) all pass on-device using a Pixel 2 emulator.

This might be a limitation in the framework. If so, I'd be happy to create another issue elsewhere. It seems like an important piece of the Nitrogen vision.
Hello

1. Why are the following dependencies imported as `androidTestImplementation` in addition to being imported as `implementation` dependencies to resolve "conflicts" in app-level build.gradle?

``` kotlin
    // Resolve conflicts between main and test APK:
    androidTestImplementation "androidx.annotation:annotation:$androidXAnnotations"
    androidTestImplementation "androidx.legacy:legacy-support-v4:$androidXLegacySupport"
    androidTestImplementation "androidx.recyclerview:recyclerview:$recyclerViewVersion"
    androidTestImplementation "androidx.appcompat:appcompat:$appCompatVersion"
    androidTestImplementation "com.google.android.material:material:$materialVersion"
```

2. Is this pattern best practice?