I have a nested list and for some reason auto scroll is not working. I have attached a code sandbox below for the issue

https://codesandbox.io/s/lucid-bowman-wjdyi

Any help will be much appreciated (👍 
I was also wondering if there is a way to add styles while dragging the element, like an outline maybe?
Item being dragged is not moving. I'm using the basic example to do this with the lockToContainerEdges prop. Sample code below:

`const SortableItem = sortableElement(({value}) => <li style={{ color: 'white'}}>{value}</li>);

const SortableContainer = sortableContainer(({children}) => {
  return <ul>{children}</ul>;
});

class App extends Component {
  state = {
    items: ['Item 1', 'Item 2', 'Item 3', 'Item 4', 'Item 5', 'Item 6'],
  };

  onSortEnd = ({oldIndex, newIndex}) => {
    this.setState(({items}) => ({
      items: arrayMove(items, oldIndex, newIndex),
    }));
  };

  render() {
    const {items} = this.state;

    return (
      <SortableContainer lockToContainerEdges={true} onSortEnd={this.onSortEnd}>
        {items.map((value, index) => (
          <SortableItem key={`item-${value}`} index={index} value={value} />
        ))}
      </SortableContainer>
    );
  }
}`

http://clauderic.github.io/react-sortable-hoc/#/advanced/activate-onpress-200ms?_k=4989vc

When using `srcDoc` on an `iframe`, you're pushing HTML in from your parent `window` into the `iframe` directly. Because of this, we need to reference the element's instances of `HTMLElement` and `window` to ensure we're using the right values.

For instance, an element made in an iframe has a different `HTMLElement` class instance than the one in the parent document which this JavaScript was imported.
This issue is quite similar to issue #630 with sortable-helper "behind" popup. But it is specific to Safari. There are few cases when Safari calculates `z-index`-es in strange way and you need to apply css-transformations to force sortable clone appearing above popup.

There is quite simple PR #605 which can help with this issue -- it allows you to apply custom css-transformations to helper and I believe that it can help in my case.

Is there any chances for this PR to be reviewed and merged?

Does anybody know any another solutions for using of  `react-sortable-hoc` along with popups and Safari?
I can reproduce this using the demo:
https://clauderic.github.io/react-sortable-hoc/#/basic-configuration/basic-usage?_k=00cf93

Add these styles to `.Showcase__style__list Showcase__style__stylizedList`:
``` css
  height: 100vh;
  overflow: visible;
```

![image](https://user-images.githubusercontent.com/45860344/71204472-cfb4df00-2265-11ea-8732-d9c1877c91f4.png)

Scroll down (which scrolls down the body) and try clicking and dragging an item. It moves the item relative to `scrollTop` of `0`, not `scrollTop` of wherever your `body` is at.


^title. We are having a case where we would have to keep the position of certain children - is that possible? (Have already read through the documentation but have not found any solutions to that.)
I see  with `disabled` option the element is not draggable anymore but still moves when I drag another element over it. How can I make it "fixed" position and not let it change the order.
In my case, I need to set the first item fixed, so it should not be draggable and unsortable.
I've just used your library, let me say it is one of the BEST REACT LIBRARIES out there.

But I'm having trouble handling events which have been bound to the elements that are inside of SortableElement. Before adding the "sort" feature, event handlers were working fine. But now, they have become unresponsive, it seems that control does not reach the event handlers.

Can you please point out what I should do to make child events work?

[Stackoverflow question](https://stackoverflow.com/questions/59321390/how-to-add-event-handlers-to-child-components-of-sortableelement)
In iOS 13.1 or later, when combined with react-virtualized, the SortableElement dragged outside the SortableContainer may not be operated.

This bug occurs when the original component of the dragged SortableElement is scrolled out of the SortableContainer and disappears.

The cause is that the disappeared component will not fire the touch event.

This bug can be confirmed by accessing and operating the sample page on an iPad with iOS 13.1 or later installed.

https://clauderic.github.io/react-sortable-hoc/#/react-virtualized/basic-usage?_k=p9q4nq
