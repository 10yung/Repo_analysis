Hi, I am trying retrieving the entities in Austen's Pride and Prejudice and I get the error: `Couldn't parse even with backoff parser!` on a sentence in Chapter 6:
> "No, indeed. I do not wish to avoid the walk. The distance is nothing, when one has a motive; only three miles. I shall be back by dinner."

The error instead does NOT happen if the sentence is unquoted:

> No, indeed. I do not wish to avoid the walk. The distance is nothing, when one has a motive; only three miles. I shall be back by dinner.

What could be the problem? How could I fix it?
I want to know that with conll2003 ner label and the aida-yago entity linking annotations, how to get the joint sparse features, I am a bit confused of the format (there is no coreference column data)
Is there a list of characters which are escaped using \ in the coreference resolution model?

Hi ! When I use the sbt assembly, it just reports that it cannot find the wikipediaInterface sort of problem, is there any suggestions ?

Hi Greg,
I keep getting java OutOfMemoryError when I try to train a new model. I already switched to COREF_TRAIN_PREDICT mode as you suggest in the readme file, but the error is still there. Increasing the heap size does not help. Any suggestions how to fix that would be very much appreciated!
Thanks!
Yulia

UPD: I found the solution. it happened because my conll file was somehow missing document borders and was read in as a single document. adding document borders ("#begin document..") solved the problem.

Hi Greg, 

   I tried with -useGoldMentions option to try coreference resolution with gold mentions. But it seems this is not happening. When I do the evaluation with the output conll file, the mention detection is below 100%. I tried this with some ontonotes conll files. I even tried making useGoldMentions variable true within the code.

Can you please check or am I doing something wrong ?

Thanks,
Joe

java -Xmx47g -jar berkeley-entity-1.0.jar ++config/base.conf -execDir scratch -mode COREF_PREDICT  -testPath /home/development/darsh/MusOntoLearning/ground_truth/semeval/auto_small/ -modelPath models/joint-new-onto.ser.gz  -numItrs 30 -outputPath /tmp/darsh/test_output_small/ -useGoldMentions

This is the command with which I ran the code. I have given the -useGoldMentions flag. I am getting very poor accuracy and the mention detection part is also not 100%. 

Hi Greg, 

  When prunedEdges(i)(j) is true, does that mean the mention pair ith mention and jth mention is ignored(or avoided from further processing) ? 
I got confused when I printed the mention pairs  after pruning.

code snippet

```
def printPrunedEdges(docGraphs:Seq[DocumentGraph])= {

      for(i <- 0 until docGraphs.size){
            println("PRUNED EDGES");

           for(j1<-0 until docGraphs(i).prunedEdges.size) {

               for(j2<-0 until docGraphs(i).prunedEdges(j1).size)

                       if(docGraphs(i).prunedEdges(j1)(j2) == true){

                          println(j1 + " " + docGraphs(i).getMention(j1).words + ": " + j2 + " " + docGraphs(i).getMention(j2).words);

                  }

           }

      }

  }

```

Hi Greg,
I compiled the source files again and created berkeley-entity jar in target directory. Jar creation is successful. But while running the system with this jar I am getting the following error. Please help. 

ERROR: java.lang.RuntimeException: Can't write to models/cached/corefpruner-onto.ser.gz:
edu.berkeley.nlp.entity.GUtil$.save(GUtil.scala:28)
edu.berkeley.nlp.entity.coref.CorefPruner$.trainAndSaveKFoldModels(CorefPruner.scala:103)
edu.berkeley.nlp.entity.coref.CorefPruner$.buildPruner(CorefPruner.scala:93)
edu.berkeley.nlp.entity.coref.CorefSystem$.runTrain(CorefSystem.scala:140)
edu.berkeley.nlp.entity.coref.CorefSystem$.runTrainPredict(CorefSystem.scala:108)
edu.berkeley.nlp.entity.coref.CorefSystem.runTrainPredict(CorefSystem.scala)
edu.berkeley.nlp.entity.Driver.run(Driver.java:343)
edu.berkeley.nlp.futile.fig.exec.Execution.runWithObjArray(Execution.java:479)
edu.berkeley.nlp.futile.fig.exec.Execution.run(Execution.java:432)
edu.berkeley.nlp.entity.Driver.main(Driver.java:319)

Thanks,
Joe

Command: java -Xmx8g -jar target/scala-2.11/berkeley-entity-assembly-1.jar ++config/base.conf -execDir scratch -mode COREF_TRAIN_PREDICT  -testPath /tmp/test_input/  -docSuffix auto_conll -trainPath ./small_train/ -modelPath "models/joint-onto.ser.gz" -wikipediaPath "models/wiki-db-onto.ser.gz"  -useGoldMentions -pruningStrategy build:models/cached/corefpruner-onto.ser.gz:-5:5 -nerPruningStrategy build:models/cached/nerpruner-onto.ser.gz:-9:5 -outputPath /tmp/test_output/ 

Hi, 

   I was trying to use the mention detection module of this project. Can you please help me with pointers on which class and function does the mention detection.  Even if it is not quite straight forward some directions will help. 

Thanks,
Joe
