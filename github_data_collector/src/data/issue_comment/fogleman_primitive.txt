Hi,
is there a parameter in the code I could modify to change the width of the beziers?

Thank you
Bumps [requests](https://github.com/requests/requests) from 2.11.1 to 2.20.0.
<details>
<summary>Changelog</summary>

*Sourced from [requests's changelog](https://github.com/psf/requests/blob/master/HISTORY.md).*

> 2.20.0 (2018-10-18)
> -------------------
> 
> **Bugfixes**
> 
> -   Content-Type header parsing is now case-insensitive (e.g.
>     charset=utf8 v Charset=utf8).
> -   Fixed exception leak where certain redirect urls would raise
>     uncaught urllib3 exceptions.
> -   Requests removes Authorization header from requests redirected
>     from https to http on the same hostname. (CVE-2018-18074)
> -   `should_bypass_proxies` now handles URIs without hostnames (e.g.
>     files).
> 
> **Dependencies**
> 
> - Requests now supports urllib3 v1.24.
> 
> **Deprecations**
> 
> - Requests has officially stopped support for Python 2.6.
> 
> 2.19.1 (2018-06-14)
> -------------------
> 
> **Bugfixes**
> 
> -   Fixed issue where status\_codes.py's `init` function failed trying
>     to append to a `__doc__` value of `None`.
> 
> 2.19.0 (2018-06-12)
> -------------------
> 
> **Improvements**
> 
> -   Warn user about possible slowdown when using cryptography version
>     &lt; 1.3.4
> -   Check for invalid host in proxy URL, before forwarding request to
>     adapter.
> -   Fragments are now properly maintained across redirects. (RFC7231
>     7.1.2)
> -   Removed use of cgi module to expedite library load time.
> -   Added support for SHA-256 and SHA-512 digest auth algorithms.
> -   Minor performance improvement to `Request.content`.
> -   Migrate to using collections.abc for 3.7 compatibility.
> 
> **Bugfixes**
> 
> -   Parsing empty `Link` headers with `parse_header_links()` no longer
>     return one bogus entry.
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`bd84045`](https://github.com/psf/requests/commit/bd840450c0d1e9db3bf62382c15d96378cc3a056) v2.20.0
- [`7fd9267`](https://github.com/psf/requests/commit/7fd9267b3bab1d45f5e4ac0953629c5531ecbc55) remove final remnants from 2.6
- [`6ae8a21`](https://github.com/psf/requests/commit/6ae8a2189235b62d7c5b2a6b95528750f046097c) Add myself to AUTHORS
- [`89ab030`](https://github.com/psf/requests/commit/89ab030cdb83a728a30e172bc65d27ba214d2eda) Use comprehensions whenever possible
- [`2c6a842`](https://github.com/psf/requests/commit/2c6a8426aebd853966747f2c851f551c583cb21a) Merge pull request [#4827](https://github-redirect.dependabot.com/requests/requests/issues/4827) from webmaven/patch-1
- [`30be889`](https://github.com/psf/requests/commit/30be889651e7034eaa56edaf5794d68ffbfde9ed) CVE URLs update: www sub-subdomain no longer valid
- [`a6cd380`](https://github.com/psf/requests/commit/a6cd380c640087218695bc7c62311a4843777e43) Merge pull request [#4765](https://github-redirect.dependabot.com/requests/requests/issues/4765) from requests/encapsulate_urllib3_exc
- [`bbdbcc8`](https://github.com/psf/requests/commit/bbdbcc8f0553f112ff68b0950b4128bd8af000fc) wrap url parsing exceptions from urllib3's PoolManager
- [`ff0c325`](https://github.com/psf/requests/commit/ff0c325014f817095de35013d385e137b111d6e8) Merge pull request [#4805](https://github-redirect.dependabot.com/requests/requests/issues/4805) from jdufresne/https
- [`b0ad249`](https://github.com/psf/requests/commit/b0ad2499c8641d29affc90f565e6628d333d2a96) Prefer https:// for URLs throughout project
- Additional commits viewable in [compare view](https://github.com/requests/requests/compare/v2.11.1...v2.20.0)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=requests&package-manager=pip&previous-version=2.11.1&new-version=2.20.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/fogleman/primitive/network/alerts).

</details>
Hi!

This is a great piece of software!
I'm currently experimenting with it and I have a question regarding the bounding box for generated SVG-files.

If I select a JPEG that is 1920 x 720 pixels in dimensions and use the following code:

`primitive -i mvp.jpg -o output.svg -n 75 -m 8 -s 1920`

...the background rectangle gets the correct dimensions, but the bounding box for the generated SVG becomes 2152,5 x 952,5 pixels. This happens because the polygons "poke out" from the original bounding box of the image.

![primitive-svg](https://user-images.githubusercontent.com/7136350/67367548-ff9d7a00-f575-11e9-8b51-9a1fd0c24f26.png)

Is there a way to make primitive generate an SVG which respects the original bounding box and doesn't have the polygons poke out of the image?

This project is awesome.. I have a question on Static Animation. What parameters should I use to get static animation result?

Thank you
Hi, I'm Yevgeny Pats Founder of [Fuzzit](https://fuzzit.dev) - Continuous fuzzing as a service platform.

We have a free plan for OSS and I would be happy to contribute a PR if that's interesting.
The PR will include the following
- [go-fuzz](https://github.com/dvyukov/go-fuzz) fuzzers (This is generic step not-connected to fuzzit)
- Continuous Fuzzing of master branch which will generate new corpus and look for new crashes
- Regression on every PR that will run the fuzzers through all the generated corpus and fixed crashes from previous step. This will prevent new or old bugs from crippling into master.

You can see our basic example [here](https://github.com/fuzzitdev/example-go) and you can see an example of "in the wild" integration [here](https://github.com/google/syzkaller).

Let me know if this is something worth working on.

Cheers,
Yevgeny

Hi Michael,

I've come across primitive - and I like it.

I do a lot of image processing, and I sometimes like to "artify" my images. I normally use GIMP for this, with the oilify and cartoon filters, and I think primitive is also really neat in this sense.

Now, I'd also like to consider adding support for snaps, which you probably know are cross-distro Linux software packages, supported on LTS and non-LTS Ubuntu, as well as many others distributions.

Making a snap of primitive will enable you to feature your app in the Snap Store (snapcraft.io/store), and reach a large audience of Linux users. There are also automatic updates, so that's quite handy if you want to add a new image processing algorithm and push it out there.

Here's the sequence of technicals bits needed to build snaps (locally) - you can also use a CI system or our free build system (build.snapcraft.io).

Install snapcraft - a command-line to build snaps. I used Ubuntu 18.04 LTS as the build system.

snap install snapcraft --classic --beta
git clone https://github.com/igorljubuncic/primitive.git
cd primitive
git checkout add-snapcraft
snapcraft

The last command creates a <primitive-version>.snap file, something like primitive_1.0_amd64.snap.

This snap can be installed and tested locally with:

snap install primitive_1.0_amd64.snap --dangerous

The --dangerous flag is necessary because the snap hasn’t yet gone through the snap store review process and is not digitally signed.

The primitive command can be executed, e.g.: snap run primitive "input image" "output image".

Everything remains the same from the application behavior.

Then, you will need to complete a couple more steps to get the snap actually published in the store:

- Register a developer account in the snap store https://snapcraft.io/account.
- Register the primitive name in the store. 

snapcraft login
snapcraft register

- Upload a built snap to the store. The store supports multiple risk levels as “channels”. Typically, the 'edge' channel is used to host the latest build from git master. Stable is for releases that have been thoroughly tested and are considered stable for production. You can also use beta and candidate channels.

snapcraft push primitive_1.0_amd64.snap --release edge

- Test installing on a clean machine.

snap install primitive --edge

After you have completed your testing and you're happy, you can push a stable release to the stable channel, update the store page, and promote the application online. We can help there, and we'd be happy to feature your application in our store.

Thanks.

How to define shapes by user?

is there any tools?

thanks
Hi,
first of all congrats to your work.
I created an electron program that runs on ubuntu and windows. Would be could if you could add a link to it on this github project or your homepage primitive.lol
Here's the link to my project : https://github.com/cielito-lindo-productions/primitive.nextgen
Sincerely
Cielito Lindo Productions
It'd be better for lay people in computers! just like only a binary installer to make all the tecnical stuff. Because this app is so interesting even with the lay people in computing.
Would you be willing to share the code used to rotate shapes towards a fixed point in the example listed in readme?  I'm particularly interested in using shapes (triangles) all with the same orientation.  Thanks, great work!