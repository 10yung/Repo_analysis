If I type `gradle dependencies --conf<tab>` it is expanded to `--configuration=` but if I type `gradle mysubproject:dependencies  --conf<tab>` it isn't. Looks like Zsh completion matches full command name instead of the last part after a colon.
Add compopt -o filenames if args use file/directory completion to escape files/directories if needed

Fix #80
Hi there,

Not a gradle user but only read the completion script to see if i can help a user who use it with [fzf-obc](https://github.com/rockandska/fzf-obc/issues/23)

From what i read [here](https://github.com/gradle/gradle-completion/blob/master/gradle-completion.bash#L359-L362), it seems there will be unexpecting results with those args `-b|--build-file|-c|--settings-file|-I|--init-script|-g|--gradle-user-home|--include-build|--project-cache-dir|--project-dir` if the file/directory selected contain a space.

Regards
I'm using `./gradlew` on Mac

The `__gradle-completion-init` command generates this file:

```
bootRun:Runs this project as a Spring Boot application.\nassemble:Assembles the outputs of this project.\nbootJar:Assembles an executable jar archive containing the main classes and their dependencies.\nbuild:Assembles and tests this project.\nbuildDependents:Assembles and tests this project and all projects that depend on it.\nbuildNeeded:Assembles and tests this project and all projects it depends on.\nclasses:Assembles main classes.\nclean:Deletes the build directory.\njar:Assembles a jar archive containing the main classes.\ntestClasses:Assembles test classes.\ninit:Initializes a new Gradle build.\nwrapper:Generates Gradle wrapper files.\njavadoc:Generates Javadoc API documentation for the main source code.\nbuildEnvironment:Displays all buildscript dependencies declared in root project 'timeMonitor'.\ncomponents:Displays the components produced by root project 'timeMonitor'. [incubating]\ndependencies:Displays all dependencies declared in root project 'timeMonitor'.\ndependencyInsight:Displays the insight into a specific dependency in root project 'timeMonitor'.\ndependencyManagement:Displays the dependency management declared in root project 'timeMonitor'.\ndependentComponents:Displays the dependent components of components in root project 'timeMonitor'. [incubating]\nhelp:Displays a help message.\nkotlinDslAccessorsReport:Prints the Kotlin code for accessing the currently available project extensions and conventions.\nmodel:Displays the configuration model of root project 'timeMonitor'. [incubating]\nprojects:Displays the sub-projects of root project 'timeMonitor'.\nproperties:Displays the properties of root project 'timeMonitor'.\ntasks:Displays the tasks runnable from root project 'timeMonitor'.\ngenerateAvroJava:Generates main Avro Java source files from schema/protocol definition files.\ngenerateAvroProtocol:Generates main Avro protocol definition files from IDL files.\ngenerateTestAvroJava:Generates test Avro Java source files from schema/protocol definition files.\ngenerateTestAvroProtocol:Generates test Avro protocol definition files from IDL files.\ncheck:Runs all checks.\nspotlessApply:Applies code formatting steps to sourcecode in-place.\nspotlessCheck:Checks that sourcecode satisfies formatting steps.\ntest:Runs the unit tests.\ncompileJava:Compiles main Java source.\ncompileKotlin:Compiles the compilation 'main' (target  (jvm)).\ncompileTestJava:Compiles test Java source.\ncompileTestKotlin:Compiles the compilation 'test' (target  (jvm)).\ninspectClassesForKotlinIC:\ninstallGitHook:\nprepareKotlinBuildScriptModel:\nprocessResources:Processes main resources.\nprocessTestResources:Processes test resources.\nspotlessCpp:\nspotlessCppApply:\nspotlessCppCheck:\nspotlessJava:\nspotlessJavaApply:\nspotlessJavaCheck:\nspotlessKotlin:\nspotlessKotlinApply:\nspotlessKotlinCheck:\nspotlessKotlinGradle:\nspotlessKotlinGradleApply:\nspotlessKotlinGradleCheck:\nspotlessMisc:\nspotlessMiscApply:\nspotlessMiscCheck:\n
```

Which I assume is my completion file

However when I type `./gradlew <TAB>` it always jumps to `bootRun` - am I missing something here?

If I give it a `-<TAB>` I get all the command line options which is awesome - but I was hoping for tab completion on tasks.  

If I try something like `./gradlew c<TAB>` nothing.  

Thanks for any help that can be offered
There is completion on subcommands (with specific argument completion) in zsh, but this doesn't appear to be the case in bash.
Any chance this could be ported?
Probably a feature request:

The completion works for gradle custom tasks but it doesn't complete the options from the custom tasks. 

example 
    @Option(option = "type", description = "Set the type of project to generate.")
    public void setType(String type) {
        this.type = type;
    }

It would be great of we could have completion for options and options values from custom tasks  
I've tried the tool in my Fish shell and it doesn't work. Are you thinking about adding support for Fish shell too?

Thank you in advance, the tool looks great!
Ratpack, for example, uses `ratpack.gradle`. Gradle will look for "PROJECT_NAME.gradle" automatically, but gradle-completion doesn't yet.
Hi,
it refuses to complete subprojects starting with an uppercase letter, e.g.
`$ gradle :MySubproje...`
In the project I am working, the names are fixed and renaming to lowercase is not an option.

I propose to add in __gradle-long-options() the line

--dependency            - dependency insight argument