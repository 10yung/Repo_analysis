- [x] Improve efficiency of delete queries
- [x] Add `batch_size` parameter for insert, update, upsert, and delete
- [x] Add `verbose` option to print SQL statements (ideally way to do this globally)
- [x] Add `dbxDisconnect` function
- [x] Add examples to PDF doc
- [x] Ensure times are stored in database as UTC
- [x] Add typecasting tests for more data types (time, json/b, binary)
- [x] Run tests against Redshift
- [x] Run tests against MariaDB
- [x] Add timing to SQL logging - `(123.4 ms) SELECT * ...`
- [x] Log transaction SQL for update (begin/commit)
- [x] Add `variables` argument to `dbxConnect`
- [x] Add `connect_timeout` to `dbxConnect`
- [x] Support bind parameters for selects - `bind_params` branch
- [x] Add tests for bigint
- [x] Decide how to cast `difftime` - character or numeric in seconds (numeric in seconds may be too much magic, time doesn't work well for diffs over a day)
- [x] Add tests for factors
- [ ] Auto-increment ids for MySQL/MariaDB - can use `select last_insert_id(), row_count()` https://stackoverflow.com/questions/7333524/how-can-i-insert-many-rows-into-a-mysql-table-and-return-the-new-ids

0.3.0 release

- [ ] Raise error when bigint value out of numeric range - `bigint3` branch

On hold

- [ ] More efficient update query - use temp tables, or for Postgres using `update ... from` [link](https://stackoverflow.com/questions/18797608/update-multiple-rows-in-same-query-using-postgresql) - requires typecasting
- [ ] Add `retries` option to `dbxSelect` - undo revert of `dd9d716651f9321afe74def1fac491de4a4daca0` (users can use a separate package like [retry](https://github.com/ramhiser/retry) for this)
- [ ] Add `statement_timeout` option to `dbxSelect` and maybe other commands - probably not common
- [ ] Make `conn` optional (use global connection if not passed)
- [ ] Add a way to easily create tables - `dbxCreateTable(db, table, records, types=list(id="bigserial primary key", score="float"))` (only first 3 args required, types can be used to override defaults)
- [ ] Add `cache` option to cache select statements to disk - `cache` branch (need ability to cache for duration and force refresh)
- [ ] Run tests against BigQuery