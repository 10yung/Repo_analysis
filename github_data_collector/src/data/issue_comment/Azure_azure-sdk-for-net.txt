I found this link https://docs.microsoft.com/en-us/rest/api/storageservices/client-side-logging-with-the-.net-storage-client-library that describs how to enable client-side log for storage sdk under .net framework.
Is there a way to enable it in .net core?
I tried to enable it using code as the configuration file could not used in .net core and found that the "sharedListeners" is not impletemented in current .net core framework.
Any suggestion?
Fixed the following typos:
succesfully --> successfully
succesful --> successful
recieve --> receive
wether --> whether
Swagger spec PR: 

https://github.com/Azure/azure-rest-api-specs/pull/7911

https://github.com/Azure/azure-rest-api-specs/pull/7823



[IotCentral] Add validation for new SKUs

## Description

<!-- Please add a brief description of the changes made in this PR -->

## Checklist

- [x] I have read the [_Submitting Changes_](../blob/master/CONTRIBUTING.md#submitting-changes) section of [`CONTRIBUTING.md`](../blob/master/CONTRIBUTING.md)
- [x] The title of the PR is clear and informative
- [x] The appropriate `ChangeLog.md` file(s) has been updated:
    - For any service, the `ChangeLog.md` file can be found at `src/{{SERVICE}}/{{SERVICE}}/ChangeLog.md`
    - A snippet outlining the change(s) made in the PR should be written under the `## Upcoming Release` header -- no new version header should be added
- [x] The PR does not introduce [breaking changes](../blob/master/documentation/breaking-changes/breaking-changes-definition.md)
- [x] If applicable, the changes made in the PR have proper test coverage
- [ ] For public API changes to cmdlets:
    - [ ] a cmdlet design review was approved for the changes in [this repository](https://github.com/Azure/azure-powershell-cmdlet-review-pr) (_Microsoft internal only_)
    - [ ] the markdown help files have been regenerated using the commands listed [here](../blob/master/documentation/development-docs/help-generation.md#updating-all-markdown-files-in-a-module)

Referencing package directly doesn't work so I did this.

Calling dotnet build on `KeyVault.Secrets` runs APICompat against the package defined in packages.props.
â€¦stems

Resolves https://github.com/Azure/azure-sdk-for-net/issues/9526
PathClient.Rename() currently doesn't allow you to move files or directories between file systems.  This functionality is supported by the service.
Work in Progress as I need to run recording mode to generate the files, but wanted to start getting feedback.
Note that CI is expected to fail until recordings are in.
We've got great operation names for diagnostic scopes that would be nice to associate with our HTTP logs.  We should add additional events to our AzureCoreEventSource to expose this info.

See #9274 for additional discussion.