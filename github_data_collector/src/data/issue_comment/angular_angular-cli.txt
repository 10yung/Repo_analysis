<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ

Oh hi there! üòÑ

To expedite issue processing please search open and closed issues before submitting a new one.
Existing issues often contain information about workarounds, resolution, or progress updates.

üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->


# üêû Bug report

### Command
<!-- Can you pin-point the command or commands that are effected by this bug? -->
<!-- ‚úçÔ∏èedit: -->

- [ ] new
- [x] build
- [x] serve
- [ ] test
- [ ] e2e
- [ ] generate
- [ ] add
- [ ] update
- [ ] lint
- [ ] xi18n
- [ ] run
- [ ] config
- [ ] help
- [ ] version
- [ ] doc


### Is this a regression?

It started happening in the same version without any version upgrade of any sort.

## Description
There are 2 parts of the BUG. 1 during *serve* and 1 during *build* creation.

### Description During Serve

If I need to tell this clearly, it can only be said that this bug occurred while doing development, And no changes to AppModule was made during that time. You hit npm start and you get the following error:
*ERROR in No NgModule metadata found for 'AppModule'.*

You save any file again and it will start compiling again and compile successfully.

### Description during build

It runs the build and fails with the following error:
*ERROR in members.hasOwnProperty is not a function*


## üî¨ Minimal Reproduction
I don't know how to reproduce it. It has occurred during development and without any upgrade to any packages.

## üî• Exception or Error

### Exception on SERVE:
No exception can be found except for the above error as told in the description.

### Exception on BUILD:
No exception could be found except for the above error. But I will still put some details here:
<pre>
<code>
0 info it worked if it ends with ok
1 verbose cli [
1 verbose cli   'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'run',
1 verbose cli   'build'
1 verbose cli ]
2 info using npm@6.12.1
3 info using node@v12.13.1
4 verbose run-script [ 'prebuild', 'build', 'postbuild' ]
5 info lifecycle xxxx-ers@1.0.0~prebuild: xxxx-ers@1.0.0
6 info lifecycle xxxx-ers@1.0.0~build: xxxx-ers@1.0.0
7 verbose lifecycle xxxx-ers@1.0.0~build: unsafe-perm in lifecycle true
8 verbose lifecycle xxxx-ers@1.0.0~build: PATH: ...
9 verbose lifecycle xxxx-ers@1.0.0~build: CWD: C:\Projects\ERS\Repositories\xxxx.ERS.UI
10 silly lifecycle xxxx-ers@1.0.0~build: Args: [ '/d /s /c', 'npm run env -s && ng build --prod' ]
11 silly lifecycle xxxx-ers@1.0.0~build: Returned: code: 1  signal: null
12 info lifecycle xxxx-ers@1.0.0~build: Failed to exec build script
13 verbose stack Error: xxxx-ers@1.0.0 build: `npm run env -s && ng build --prod`
13 verbose stack Exit status 1
13 verbose stack     at EventEmitter.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-lifecycle\index.js:332:16)
13 verbose stack     at EventEmitter.emit (events.js:210:5)
13 verbose stack     at ChildProcess.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-lifecycle\lib\spawn.js:55:14)
13 verbose stack     at ChildProcess.emit (events.js:210:5)
13 verbose stack     at maybeClose (internal/child_process.js:1021:16)
13 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:283:5)
14 verbose pkgid xxxx-ers@1.0.0
15 verbose cwd C:\Projects\ERS\Repositories\xxxx.ERS.UI
16 verbose Windows_NT 10.0.17134
17 verbose argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "run" "build"
18 verbose node v12.13.1
19 verbose npm  v6.12.1
20 error code ELIFECYCLE
21 error errno 1
22 error xxxx-ers@1.0.0 build: `npm run env -s && ng build --prod`
22 error Exit status 1
23 error Failed at the xxxx-ers@1.0.0 build script.
23 error This is probably not a problem with npm. There is likely additional logging output above.
24 verbose exit [ 1, true ]
</code>
</pre>

## üåç Your Environment
<pre><code>
Angular CLI: 8.3.22
Node: 12.13.1
OS: win32 x64
Angular: 8.2.14
... animations, common, compiler, compiler-cli, core, forms
... language-service, platform-browser, platform-browser-dynamic
... platform-server, router, service-worker

Package                            Version
------------------------------------------------------------
@angular-devkit/architect          0.800.6
@angular-devkit/build-angular      0.800.6
@angular-devkit/build-optimizer    0.800.6
@angular-devkit/build-webpack      0.800.6
@angular-devkit/core               8.0.6
@angular-devkit/schematics         8.3.22
@angular/cdk                       8.2.3
@angular/cli                       8.3.22
@angular/material                  8.2.3
@angular/material-moment-adapter   8.2.3
@ngtools/webpack                   8.0.6
@schematics/angular                8.3.22
@schematics/update                 0.803.22
rxjs                               6.5.4
typescript                         3.4.5
webpack                            4.30.0
</code></pre>

**Anything else relevant?**
I have performed almost all the work arounds I found in the issues earlier reported but none of them worked. Like, adding the AppModule to `tsconfig.app.json`. Making sure `const bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);` is in the one line in `main.ts`. and host of other steps. But none of them works. Please help.

## My main.ts
<pre>
<code>
/*
 * Entry point of the application.
 * Only platform bootstrapping code should be here.
 * For app-specific initialization, use `app/app.component.ts`.
 */

import { enableProdMode } from '@angular/core';
import { platformBrowserDynamic } from '@angular/platform-browser-dynamic';

import { AppModule } from '@app/app.module';
import { environment } from '@env/environment';
import { hmrBootstrap } from './hmr';

if (environment.production) {
  enableProdMode();
}

const bootstrap = () => platformBrowserDynamic().bootstrapModule(AppModule);

if (environment.hmr) {
  hmrBootstrap(module, bootstrap);
} else {
  bootstrap().catch(err => console.error(err));
}
</code>
</pre>

## My App.module.ts
<pre>
<code>
// Angular
import { BrowserModule, HAMMER_GESTURE_CONFIG } from '@angular/platform-browser';
import { APP_INITIALIZER, NgModule } from '@angular/core';
import { TranslateModule } from '@ngx-translate/core';
import { HttpClientModule } from '@angular/common/http';
import { BrowserAnimationsModule } from '@angular/platform-browser/animations';
import { GestureConfig, MatProgressSpinnerModule } from '@angular/material';
import { OverlayModule } from '@angular/cdk/overlay';
// Perfect Scroll bar
import { PERFECT_SCROLLBAR_CONFIG, PerfectScrollbarConfigInterface } from 'ngx-perfect-scrollbar';
// SVG inline
import { InlineSVGModule } from 'ng-inline-svg';
// Env
import { environment } from '@env/environment';
// Hammer JS
import 'hammerjs';
// Copmponents
import { AppComponent } from './app.component';
// Modules
import { AppRoutingModule } from './app-routing.module';
import { CoreModule } from './core/core.module';
import { ThemeModule } from './views/theme/theme.module';
// Partials
import { PartialsModule } from './views/partials/partials.module';
// Layout Services
import {
  //DataTableService,
  //FakeApiService,
  KtDialogService,
  LayoutConfigService,
  LayoutRefService,
  MenuAsideService,
  MenuConfigService,
  MenuHorizontalService,
  PageConfigService,
  SplashScreenService,
  SubheaderService
} from './core/_base/layout';
// CRUD
import { LayoutUtilsService, TypesUtilsService } from './core/_base/crud';
// Config
import { LayoutConfig } from './core/_config/layout.config';
// Highlight JS
import { HIGHLIGHT_OPTIONS, HighlightLanguage } from 'ngx-highlightjs';
import * as typescript from 'highlight.js/lib/languages/typescript';
import * as scss from 'highlight.js/lib/languages/scss';
import * as xml from 'highlight.js/lib/languages/xml';
import * as json from 'highlight.js/lib/languages/json';

// tslint:disable-next-line:class-name
const DEFAULT_PERFECT_SCROLLBAR_CONFIG: PerfectScrollbarConfigInterface = {
  wheelSpeed: 0.5,
  swipeEasing: true,
  minScrollbarLength: 40,
  maxScrollbarLength: 300
};

export function initializeLayoutConfig(appConfig: LayoutConfigService) {
  // initialize app by loading default demo layout config
  return () => {
    if (appConfig.getConfig() === null) {
      appConfig.loadConfigs(new LayoutConfig().configs);
    }
  };
}

export function hljsLanguages(): HighlightLanguage[] {
  return [
    { name: 'typescript', func: typescript },
    { name: 'scss', func: scss },
    { name: 'xml', func: xml },
    { name: 'json', func: json }
  ];
}

@NgModule({
  declarations: [AppComponent],
  imports: [
    BrowserAnimationsModule,
    BrowserModule,
    AppRoutingModule,
    HttpClientModule,
    // environment.isMockEnabled
    //   ? HttpClientInMemoryWebApiModule.forRoot(FakeApiService, {
    //       passThruUnknownUrl: true,
    //       dataEncapsulation: false
    //     })
    //   : [],
    //NgxPermissionsModule.forRoot(),
    PartialsModule,
    CoreModule,
    OverlayModule,
    //AuthModule,
    TranslateModule.forRoot(),
    MatProgressSpinnerModule,
    InlineSVGModule.forRoot(),
    ThemeModule
  ],
  exports: [],
  providers: [
    LayoutConfigService,
    LayoutRefService,
    MenuConfigService,
    PageConfigService,
    KtDialogService,
    //DataTableService,
    SplashScreenService,
    {
      provide: PERFECT_SCROLLBAR_CONFIG,
      useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG
    },
    {
      provide: HAMMER_GESTURE_CONFIG,
      useClass: GestureConfig
    },
    {
      // layout config initializer
      provide: APP_INITIALIZER,
      useFactory: initializeLayoutConfig,
      deps: [LayoutConfigService],
      multi: true
    },
    {
      provide: HIGHLIGHT_OPTIONS,
      useValue: { languages: hljsLanguages }
    },
    // template services
    SubheaderService,
    MenuHorizontalService,
    MenuAsideService,
    //HttpUtilsService,
    TypesUtilsService,
    LayoutUtilsService
  ],
  bootstrap: [AppComponent]
})
export class AppModule {}
</code>
</pre>

## My app-routing.module.ts
<pre>
<code>
// Angular
import { NgModule } from '@angular/core';
import { RouterModule, Routes } from '@angular/router';
// Components
import { BaseComponent } from './views/theme/base/base.component';
import { ErrorPageComponent } from './views/theme/content/error-page/error-page.component';
// Auth
import { AuthGuard } from './core/auth';
import { AuthenticationGuard  } from "@app/core";

const routes: Routes = [
  { path: 'auth', loadChildren: () => import('../app/views/pages/auth/auth.module').then(m => m.AuthModule) },

  {
    path: '',
    component: BaseComponent,
    canActivate: [AuthenticationGuard],
    children: [
      {
        path: 'dashboard',
        loadChildren: () => import('../app/views/pages/dashboard/dashboard.module').then(m => m.DashboardModule)
      },
      {
        path: 'kiosk',
        loadChildren: () => import('../app/views/pages/kiosk/kiosk.module').then(m => m.KioskModule)
      },
      {
        path: 'registration',
        loadChildren: () =>
          import('../app/views/pages/registeration/registeration.module').then(c => c.RegisterationModule)
      },
      {
        path: 'error/403',
        component: ErrorPageComponent,
        data: {
          type: 'error-v6',
          code: 403,
          title: '403... Access forbidden',
          desc: "Looks like you don't have permission to access for requested page.<br> Please, contact administrator"
        }
      },
      { path: 'error/:type', component: ErrorPageComponent },
      { path: '', redirectTo: 'dashboard', pathMatch: 'full' },
      { path: '**', redirectTo: 'dashboard', pathMatch: 'full' }
    ]
  },

  { path: '**', redirectTo: 'error/403', pathMatch: 'full' }
];

@NgModule({
  imports: [RouterModule.forRoot(routes)],
  exports: [RouterModule]
})
export class AppRoutingModule {}
</code>
</pre>


# üöÄ Feature request

### Command (mark with an `x`)
- [x] generate

This feature request is actually about extending the functionality of schematics themselves. `ng generate` is just involved as the requested feature would be accessed through the command.

### Description
Today schematic promts are limited to a fixed set of compile time response values. To allow more advanced scaffolding use cases we also need the ability to dynamically (runtime) generated valid response values.

### Describe the solution you'd like
- Add new promt input type `dynamic-list` or similar
- Provide standardized way of filling the dynamic lists from within schematic code

### Describe alternatives you've considered
Open to any suggestions.

This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [ajv](https://togithub.com/epoberezkin/ajv) | dependencies | minor | [`6.10.2` -> `6.11.0`](https://renovatebot.com/diffs/npm/ajv/6.10.2/6.11.0) |
| [ajv](https://togithub.com/epoberezkin/ajv) | devDependencies | minor | [`6.10.2` -> `6.11.0`](https://renovatebot.com/diffs/npm/ajv/6.10.2/6.11.0) |

---

### Release Notes

<details>
<summary>epoberezkin/ajv</summary>

### [`v6.11.0`](https://togithub.com/epoberezkin/ajv/releases/v6.11.0)

[Compare Source](https://togithub.com/epoberezkin/ajv/compare/v6.10.2...v6.11.0)

Time formats support two digit and colon-less variants of timezone offset ([#&#8203;1061](https://togithub.com/epoberezkin/ajv/issues/1061) , [@&#8203;cjpillsbury](https://togithub.com/cjpillsbury))
Docs: RegExp related security considerations
Tests: Disabled failing typescript test

</details>

---

### Renovate configuration

:date: **Schedule**: "after 10pm every weekday,before 4am every weekday,every weekend" in timezone America/Tijuana.

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about these updates again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).
Currently certain steps like `e2e-cli-node-10` and `snapshot_publish` are being run for PRs which are created via non forked repos. Such as renovate and users who create PRs directly from github via `Edit file`.

Example of such branch names are;

```
renovate/sass-loader
alan-agius4-testing-branch
```
This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [style-loader](https://togithub.com/webpack-contrib/style-loader) | dependencies | patch | [`1.1.2` -> `1.1.3`](https://renovatebot.com/diffs/npm/style-loader/1.1.2/1.1.3) |

---

### Release Notes

<details>
<summary>webpack-contrib/style-loader</summary>

### [`v1.1.3`](https://togithub.com/webpack-contrib/style-loader/blob/master/CHANGELOG.md#&#8203;113httpsgithubcomwebpack-contribstyle-loadercomparev112v113-2020-01-17)

[Compare Source](https://togithub.com/webpack-contrib/style-loader/compare/v1.1.2...v1.1.3)

</details>

---

### Renovate configuration

:date: **Schedule**: "after 10pm every weekday,before 4am every weekday,every weekend" in timezone America/Tijuana.

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).
This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [sass](https://togithub.com/sass/dart-sass) | dependencies | minor | [`1.24.5` -> `1.25.0`](https://renovatebot.com/diffs/npm/sass/1.24.5/1.25.0) |

---

### Release Notes

<details>
<summary>sass/dart-sass</summary>

### [`v1.25.0`](https://togithub.com/sass/dart-sass/blob/master/CHANGELOG.md#&#8203;1250)

[Compare Source](https://togithub.com/sass/dart-sass/compare/1.24.5...1.25.0)

-   Add functions to the built-in "sass:math" module.

    -   `clamp($min, $number, $max)`. Clamps `$number` in between `$min` and `$max`.

    -   `hypot($numbers...)`. Given _n_ numbers, outputs the length of the
        _n_-dimensional vector that has components equal to each of the inputs.

    -   Exponential. All inputs must be unitless.

        -   `log($number)` or `log($number, $base)`. If no base is provided, performs
             a natural log.
        -   `pow($base, $exponent)`
        -   `sqrt($number)`

    -   Trigonometric. The input must be an angle. If no unit is given, the input is
        assumed to be in `rad`.

        -   `cos($number)`
        -   `sin($number)`
        -   `tan($number)`

    -   Inverse trigonometric. The output is in `deg`.
        -   `acos($number)`. Input must be unitless.
        -   `asin($number)`. Input must be unitless.
        -   `atan($number)`. Input must be unitless.
        -   `atan2($y, $x)`. `$y` and `$x` must have compatible units or be unitless.

-   Add the variables `$pi` and `$e` to the built-in "sass:math" module.

##### JavaScript API

-   `constructor.value` fields on value objects now match their Node Sass
    equivalents.

</details>

---

### Renovate configuration

:date: **Schedule**: "after 10pm every weekday,before 4am every weekday,every weekend" in timezone America/Tijuana.

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:no_bell: **Ignore**: Close this PR and you won't be reminded about this update again.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).
This PR contains the following updates:

| Package | Type | Update | Change |
|---|---|---|---|
| [@angular/animations](https://togithub.com/angular/animations-builds) | dependencies | digest | [`f0cd077` -> `2937cb2`](https://renovatebot.com/diffs/npm/angular%2fanimations-builds//) |
| [@angular/common](https://togithub.com/angular/common-builds) | dependencies | digest | [`c79b636` -> `8b45f2e`](https://renovatebot.com/diffs/npm/angular%2fcommon-builds//) |
| [@angular/compiler](https://togithub.com/angular/compiler-builds) | dependencies | digest | [`79d3453` -> `0697d28`](https://renovatebot.com/diffs/npm/angular%2fcompiler-builds//) |
| [@angular/compiler-cli](https://togithub.com/angular/compiler-cli-builds) | dependencies | digest | [`41e6628` -> `a8c92d4`](https://renovatebot.com/diffs/npm/angular%2fcompiler-cli-builds//) |
| [@angular/core](https://togithub.com/angular/core-builds) | dependencies | digest | [`f57f2a5` -> `34a8b7f`](https://renovatebot.com/diffs/npm/angular%2fcore-builds//) |
| [@angular/forms](https://togithub.com/angular/forms-builds) | dependencies | digest | [`2a227b0` -> `b0a0525`](https://renovatebot.com/diffs/npm/angular%2fforms-builds//) |
| [@angular/language-service](https://togithub.com/angular/language-service-builds) | dependencies | digest | [`27c59f8` -> `f4d444c`](https://renovatebot.com/diffs/npm/angular%2flanguage-service-builds//) |
| [@angular/localize](https://togithub.com/angular/localize-builds) | dependencies | digest | [`34c5503` -> `3954e0d`](https://renovatebot.com/diffs/npm/angular%2flocalize-builds//) |
| [@angular/platform-browser](https://togithub.com/angular/platform-browser-builds) | dependencies | digest | [`93ec063` -> `5a4a260`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-builds//) |
| [@angular/platform-browser-dynamic](https://togithub.com/angular/platform-browser-dynamic-builds) | dependencies | digest | [`d74c0f0` -> `25434b8`](https://renovatebot.com/diffs/npm/angular%2fplatform-browser-dynamic-builds//) |
| [@angular/platform-server](https://togithub.com/angular/platform-server-builds) | dependencies | digest | [`8ff617a` -> `59b21e2`](https://renovatebot.com/diffs/npm/angular%2fplatform-server-builds//) |
| [@angular/router](https://togithub.com/angular/router-builds) | dependencies | digest | [`5991797` -> `daf2504`](https://renovatebot.com/diffs/npm/angular%2frouter-builds//) |

:abcd: If you wish to disable git hash updates, add `":disableDigestUpdates"` to the extends array in your config.

---

### Renovate configuration

:date: **Schedule**: "after 10pm every weekday,before 4am every weekday,every weekend" in timezone America/Tijuana.

:vertical_traffic_light: **Automerge**: Disabled by config. Please merge this manually once you are satisfied.

:recycle: **Rebasing**: Whenever PR becomes conflicted, or if you modify the PR title to begin with "`rebase!`".

:ghost: **Immortal**: This PR will be recreated if closed unmerged. Get [config help](https://togithub.com/renovatebot/config-help/issues) if that's undesired.

---

 - [ ] <!-- rebase-check -->If you want to rebase/retry this PR, check this box

---

This PR has been generated by [WhiteSource Renovate](https://renovate.whitesourcesoftware.com). View repository job log [here](https://app.renovatebot.com/dashboard#angular/angular-cli).
The rxjs path mapping function does not have any parameters and has not since version 5.5.0 which is not supported.
<!--üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ

Oh hi there! üòÑ

To expedite issue processing please search open and closed issues before submitting a new one.
Existing issues often contain information about workarounds, resolution, or progress updates.

üîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖüîÖ-->


# üêû Bug report

### Command (mark with an `x`)
<!-- Can you pin-point the command or commands that are effected by this bug? -->
<!-- ‚úçÔ∏èedit: -->

- [ ] new
- [x] build
- [ ] serve
- [ ] test
- [ ] e2e
- [ ] generate
- [ ] add
- [ ] update
- [ ] lint
- [ ] xi18n
- [ ] run
- [ ] config
- [ ] help
- [ ] version
- [ ] doc

### Description

<!-- ‚úçÔ∏è--> 
Angular build ignores `webpackChunkName` magic comments in lazy module imports.

## üî¨ Minimal Reproduction
<!--
Please create and share minimal reproduction of the issue starting with this template: https://stackblitz.com/fork/angular-issue-repro2
-->
<!-- ‚úçÔ∏è--> 

<!--
If StackBlitz is not suitable for reproduction of your issue, please create a minimal GitHub repository with the reproduction of the issue.
A good way to make a minimal reproduction is to create a new app via `ng new repro-app` and add the minimum possible code to show the problem. 
Share the link to the repo below along with step-by-step instructions to reproduce the problem, as well as expected and actual behavior.

Issues that don't have enough info and can't be reproduced will be closed.

You can read more about issue submission guidelines here: https://github.com/angular/angular/blob/master/CONTRIBUTING.md#-submitting-an-issue
-->

1. Add webpack's magic comment to lazy module's `import()`, like this:
```typescript
const routes: Routes = [{
  path: 'lazy',
  loadChildren: () =>
    import(
      /* webpackChunkName: 'some-name' */
      './some/lazy.module'
    ).then(m => m.LazyModule),
}];
```
2. Run `ng build --prod`.

**Expected result:**
There's a chunk named `some-name-es2015.e2d08f36b5c9ed0b9118.js` in `dist/app`.

**Actual result:**
The chunk is named something like this `7-es2015.e2d08f36b5c9ed0b9118.js`.

## üåç  Your Environment

**Angular Version:**
<pre><code>
<!-- run `ng version` and paste output below -->
Angular CLI: 8.3.23
Node: 10.17.0
OS: linux x64
Angular: 8.2.14
... animations, common, compiler, compiler-cli, core, forms
... language-service, platform-browser, platform-browser-dynamic
... router

Package                           Version
-----------------------------------------------------------
@angular-devkit/architect         0.803.23
@angular-devkit/build-angular     0.803.23
@angular-devkit/build-optimizer   0.803.23
@angular-devkit/build-webpack     0.803.23
@angular-devkit/core              8.3.23
@angular-devkit/schematics        8.3.23
@angular/cli                      8.3.23
@ngtools/webpack                  8.3.23
@schematics/angular               8.3.23
@schematics/update                0.803.23
rxjs                              6.4.0
typescript                        3.5.3
webpack                           4.39.2
<!-- ‚úçÔ∏è-->

</code></pre>

**Anything else relevant?**
`webpackChunkName` works as expected with other dynamic imports, e.g. inside components. Other magic comments work (tried `webpackPrefetch`).

# üöÄ Feature request

### Command (mark with an `x`)
- [x] config

### Description
I'm quite surprised by this move: #16682, which enables TypeScript `skipLibCheck` by default. From what I know, it's usually considered as a *temporary* workaround for issues that should be correctly resolved. While it may have performances and compatibility advantages, it degrades types strictness (ie. some real errors may not be reported anymore).

It goes in an opposite way than the new `--strict` option in v9 that finally enables strict mode.

### Describe the solution you'd like
I won't argue on your choice to make `skipLibCheck` the default (I suppose it comes from some issues I'm not aware of), but is it possible to *not* enable it when the `--strict` option has been provided, for people who wants to work with strict types?