Currently `LEGO_EXPERIMENTAL_CNAME_SUPPORT` has almost no documentation and lego does not show which DNS lookups/responses it made/received to debug a setup.

In addition it seems that only very few DNS adapters have implemented the "lookup" workflow properly.


matbao.net is one of the biggest DNS provider for `.vn` domain (vietnam) but it does not have any acme provider.

Is there a reason not to have one? How can we add a driver for it? Should I contact matbao or you?

Thanks and best!

Hello, I noticed the lego directory containing accounts and certificates get saved at the current working directory.
This might introduce inconsistency depending on the location you run it.
Saving the directory under $HOME like many other programs might be favorable.
Regards
https://github.com/go-acme/lego/blob/8afde164a15aea9b5d7eddc1f1d267b56fb5132e/challenge/dns01/nameserver.go#L13

https://github.com/go-acme/lego/blob/8afde164a15aea9b5d7eddc1f1d267b56fb5132e/challenge/dns01/nameserver.go#L28-L29

https://github.com/go-acme/lego/blob/8afde164a15aea9b5d7eddc1f1d267b56fb5132e/challenge/dns01/nameserver.go#L72-L74

cc https://github.com/miekg/dns/issues/334
see: https://www.bookmyname.com

API doc: https://api.doc.bookmyname.com/
I have been trying to create a certificate using letsencrypt and route53 the certificate im trying to create is for 'server.sub.domain.com' when trying to use route53 it I get an error saying that it can not find the host zone id for sub.domain.com, I belive that is a bug as the domain it should be looking for is domain.com, and that does exist, there is no issues creating certificates for that domain.

I have also tested it with cloudflare for another domain and that works perfectly, so I belive that the problem is when the api call towards route53
After getting certificates for about 45 domains, caddy suddenly stopped and I got this error:

```
[INFO] [mydomain.com] acme: Obtaining bundled SAN certificate
http: TLS handshake error from 127.0.0.1:59836: EOF
[ERROR][mydomain.com] failed to obtain certificate: acme: error: 400 :: POST :: https://acme-v02.api.letsencrypt.org/acme/new-order :: urn:ietf:params:acme:error:malformed :: JWS verification error, url: (attempt 1/3; challenge=tls-alpn-01)
[INFO] [mydomain.com] acme: Obtaining bundled SAN certificate
[ERROR][mydomain.com] failed to obtain certificate: acme: error: 400 :: POST :: https://acme-v02.api.letsencrypt.org/acme/new-order :: urn:ietf:params:acme:error:malformed :: JWS verification error, url: (attempt 2/3; challenge=tls-alpn-01)
[INFO] [mydomain.com] acme: Obtaining bundled SAN certificate
[ERROR][mydomain.com] failed to obtain certificate: acme: error: 400 :: POST :: https://acme-v02.api.letsencrypt.org/acme/new-order :: urn:ietf:params:acme:error:malformed :: JWS verification error, url: (attempt 3/3; challenge=tls-alpn-01)
[INFO] [mydomain.com] acme: Obtaining bundled SAN certificate
[ERROR][mydomain.com] failed to obtain certificate: acme: error: 400 :: POST :: https://acme-v02.api.letsencrypt.org/acme/new-order :: urn:ietf:params:acme:error:malformed :: JWS verification error, url: (attempt 1/3; challenge=http-01)
[INFO] [mydomain.com] acme: Obtaining bundled SAN certificate
[ERROR][mydomain.com] failed to obtain certificate: acme: error: 400 :: POST :: https://acme-v02.api.letsencrypt.org/acme/new-order :: urn:ietf:params:acme:error:malformed :: JWS verification error, url: (attempt 2/3; challenge=http-01)
[INFO] [mydomain.com] acme: Obtaining bundled SAN certificate
[ERROR][mydomain.com] failed to obtain certificate: acme: error: 400 :: POST :: https://acme-v02.api.letsencrypt.org/acme/new-order :: urn:ietf:params:acme:error:malformed :: JWS verification error, url: (attempt 3/3; challenge=http-01)
http: TLS handshake error from 152.115.135.58:55802: failed to obtain certificate: acme: error: 400 :: POST :: https://acme-v02.api.letsencrypt.org/acme/new-order :: urn:ietf:params:acme:error:malformed :: JWS verification error, url:
```

Happens on all new domains I add.

I'm running caddy 1.0.3.
Can I share a single lego.Client across multiple goroutines safely? I don't see any code saying one way or the other.

Let's assume that things like `Challenge.SetHTTP01Provider` are only called from one thread before the concurrent area.
Depending on the lego Go module ends up causing your project to depend on dozens of other modules which implement the APIs for different DNS providers (primarily). While their packages won't bloat your binary size if unused, it does cause your dependency graph to be larger, and if you do use one of those libraries it can affect what version of the library gets used in your project even if you don't use the relevant piece.  (eg, when we added lego to our project it affected our AWS library version even though we aren't using either AWS provider.)

Would it be possible to split off `providers` into its own Go module? `cmd` would also need to be its own module because it depends on `providers`. That way, projects consuming `lego` as a library that implement their own provider or use one of the dependency-free built in providers won't end up with the 25+ provider libraries in their project.
Hi,
I have added the DNS Support for servercow some time ago to acme.sh (https://github.com/Neilpang/acme.sh/blob/master/dnsapi/dns_servercow.sh).

Could you please add this to lego?

I would try to do it by myself, but I am not firm with golang :(