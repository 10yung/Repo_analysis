Description
-----------

`compdef` in plugin scripts have no effect.


Steps to reproduce
------------------

Minimal `.zshrc`:

```sh
if [ ! -d "$HOME/.antigen" ]; then 
    git clone --branch master https://github.com/zsh-users/antigen.git "$HOME/.antigen"
fi
source $HOME/.antigen/antigen.zsh
antigen bundle fanzeyi/zsh-at
antigen apply
```

The `zsh-at` plugin provides an `@` command, which provided its own completion function, but when I hit  `tab` after the `@` command, I got default filename completions.

Expected behavior:

    - The `_zsh_at_completion` function provided by the plugin should be used for completions for the `@` command.

## Software version

- `antigen version`:  v2.2.2 (8846aa9)
- `zsh --version`: zsh 5.7.1 (x86_64-redhat-linux-gnu)

## More information

By inspecting the cached script `init.zsh`, I found that:

1. The `compinit` function was called in `_antigen_compinit`, which was called by a `precmd` hook;
2. This `precmd` hook got triggered only **after** the init script was sourced, and before the first command prompt;
3.  All the plugin scripts sourced in the init script called an **empty** `compdef` function defined in the init script, with the zsh completion system uninitialized.
4. When I got to a command prompt, no completion provided by plugins worked at all.

I found the code regarding completions quite confusing. Why not call _antigen_compinit directly instead of using a hook? Why is there an empty `compdef` function?
Description
-----------

Is there documentation for uninstallation instructions? Thanks.
Description
-----------

When I run `antigen list` in a new terminal tab for the first time I get an error instead of the list

```
$ antigen list                                                                                                                                                                                                                        
/usr/local/Cellar/antigen/2.2.3/share/antigen/antigen.zsh:2058: defining function based on alias `TRACE'
/usr/local/Cellar/antigen/2.2.3/share/antigen/antigen.zsh:2058: parse error near `()'
```


Steps to reproduce
------------------

Minimal steps to reproduce this behavior. Example:

    1 - Open terminal
    2 - antigen list 
    3 - error is displayed

Expected behavior:

    - List of antigen plugins
 

## Software version

- `Antigen v2.2.3 (ff391b5)`
- `zsh 5.7.1 (x86_64-apple-darwin18.2.0)`
- `Darwin ITs-MBP-2 19.2.0 Darwin Kernel Version 19.2.0: Sat Nov  9 03:47:04 PST 2019; root:xnu-6153.61.1~20/RELEASE_X86_64 x86_64 i386 MacBookPro16,1 Darwin`

## Configuration

- https://github.com/deiga/dotfiles/blob/master/zshrc
- https://github.com/deiga/dotfiles/blob/master/zsh/plugins/antigen.zsh

Description
-----------
When I log in to the root user (with zsh and antigen) and then `su` to my user antigen tries to install all my plugins to `/root`. If I `su` to my user from bash or log in to that user directly it correctly finds my `.antigen` folder and all the installed plugins.


Steps to reproduce
------------------

Minimal steps to reproduce this behavior. Example:

    1 - Log in as root (with zsh shell and antigen loaded)
    2 - Su to a different user which also uses zsh and antigen
    3 - Antigen tries to install the user's plugins to /root

Expected behavior:

    - Everything works correctly
 

## Software version

- Antigen v1.3.3
- zsh 5.7.1 (x86_64-pc-linux-gnu)
- Linux i7 5.3.5-arch1-1-ARCH #1 SMP PREEMPT Mon Oct 7 19:03:08 UTC 2019 x86_64 GNU/Linux

## More information

```
[19:15, 14/10/19]
root@i7 [/] -> su lars
mkdir: cannot create directory ‘/root’: Permission denied
mkdir: cannot create directory ‘/root’: Permission denied
Installing robbyrussell/oh-my-zsh... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
Installing robbyrussell/oh-my-zsh... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
Installing robbyrussell/oh-my-zsh... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
Installing robbyrussell/oh-my-zsh... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
Installing robbyrussell/oh-my-zsh... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
Installing zsh-users/zsh-syntax-highlighting... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
Installing knu/zsh-manydots-magic... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
Installing supercrabtree/k... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
Installing zsh-users/zsh-autosuggestions... -antigen-ensure-repo:26: permission denied: /root/.antigen/antigen.log
Error! See "/root/.antigen/antigen.log".
-zcache-generate-cache:45: permission denied: /root/.antigen/.cache/.zcache-payload
-zcache-generate-cache:46: permission denied: /root/.antigen/.cache/.zcache-bundles
zcache-load-cache:source:1: permission denied: /root/.antigen/.cache/.zcache-payload
zsh: command not found: shrink_path
```

I cannot figure out how to make `antigen theme` work in a docker container. Here's what I've tried:

```zsh
docker run -e LANG=C.UTF-8 -e TERM -it --rm debian:buster bash -uexc '
  apt update && apt install -y zsh git curl gawk sudo
  useradd -ms /bin/zsh test
  sudo -u test curl -fsSLo ~test/antigen.zsh https://git.io/antigen
  sudo -u test tee ~test/.zshrc >/dev/null <<<"
    POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true
    source ~/antigen.zsh
    antigen theme romkatv/powerlevel10k
    antigen apply"
  exec su - test'
```

Eventually this command prints `Installing romkatv/powerlevel10k!...` and then apparently nothing happens. At this point zsh is responsive but its `PROMPT` is empty.

```
echo -E - ${(q)PROMPT}
''
pwd
/home/test
```

(Here `echo` and `pwd` are commands I've typed.)

`~/.antigen/init.zsh` doesn't have a command to `source` the theme.

```
grep powerlevel10k ~/.antigen/init.zsh
fpath+=(/home/test/.antigen/bundles/romkatv/powerlevel10k) path+=(/home/test/.antigen/bundles/romkatv/powerlevel10k)
typeset -gaU _ANTIGEN_BUNDLE_RECORD; _ANTIGEN_BUNDLE_RECORD=('https://github.com/romkatv/powerlevel10k.git / theme true')
typeset -ga _ZCACHE_BUNDLE_SOURCE; _ZCACHE_BUNDLE_SOURCE=('/home/test/.antigen/bundles/romkatv/powerlevel10k//')
```

I've tried it with a different theme by replacing `antigen theme romkatv/powerlevel10k` with `antigen theme powerlevel9k/powerlevel9k` in the docker command. The result is the same. Loading themes by manually sourcing them works fine.

A seemingly identical command works on my local machine running the same distro.

```zsh
(
  emulate -L zsh
  setopt err_return no_unset
  sudo useradd -ms /bin/zsh test
  {
    sudo -u test curl -fsSLo ~test/antigen.zsh https://git.io/antigen
    sudo -u test tee ~test/.zshrc >/dev/null <<<"
      POWERLEVEL9K_DISABLE_CONFIGURATION_WIZARD=true
      source ~/antigen.zsh
      antigen theme romkatv/powerlevel10k
      antigen apply"
    sudo su - test
 } always {
   sudo userdel -r test 2>/dev/null
 }
)
```

Here after `Installing romkatv/powerlevel10k!...` the expected prompt appears. `~/.antigen/init.zsh` **does** have a command to `source` the theme.

```zsh
grep powerlevel10k ~/.antigen/init.zsh
fpath+=(/home/test/.antigen/bundles/romkatv/powerlevel10k) path+=(/home/test/.antigen/bundles/romkatv/powerlevel10k)
source '/home/test/.antigen/bundles/romkatv/powerlevel10k/powerlevel10k.zsh-theme.antigen-compat';
typeset -gaU _ANTIGEN_BUNDLE_RECORD; _ANTIGEN_BUNDLE_RECORD=('https://github.com/romkatv/powerlevel10k.git / theme true')
typeset -ga _ZCACHE_BUNDLE_SOURCE; _ZCACHE_BUNDLE_SOURCE=('/home/test/.antigen/bundles/romkatv/powerlevel10k//' '/home/test/.antigen/bundles/romkatv/powerlevel10k///powerlevel10k.zsh-theme')
```

The only difference I can think of between these two environments is that on my local machine I have extra packages installed. Is it possible that in my docker container some external command is missing that antigen needs? What could it be?

I'm attaching `~/.antigen/debug.log` from docker.

[debug.log](https://github.com/zsh-users/antigen/files/3694256/debug.log)

The Asciinema video is broken ATM, and currently it has a misleading "Archival" warning, which at first glance made me think the entire Antigen project was affected. I don't see an archive of it online anywhere so I can't offer a repaired link, so for now I think it'd be best to remove it entirely.
Description
-----------

I'm on a machine on which I don't have sudo privilege, so I had to install `zsh` in my home directory. I assume this is what causes the following problem (although I cannot verify because I can't install `zsh` in the normal location).

When I run `exec zsh` I get:

```
/gaia/class/student/dorstm/.antigen/antigen.zsh:9: failed to load module `zsh/parameter': /usr/lib/zsh/4.3.11/zsh/parameter.so: cannot open shared object file: No such file or directory
/gaia/class/student/dorstm/.antigen/antigen.zsh:57: failed to load module `zsh/parameter': /usr/lib/zsh/4.3.11/zsh/parameter.so: cannot open shared object file: No such file or directory
Antigen: Please install git to use Antigen.
/gaia/class/student/dorstm/.zshrc:12: command not found: antigen
/gaia/class/student/dorstm/.zshrc:15: command not found: antigen
/gaia/class/student/dorstm/.zshrc:16: command not found: antigen
/gaia/class/student/dorstm/.zshrc:17: command not found: antigen
/gaia/class/student/dorstm/.zshrc:18: command not found: antigen
/gaia/class/student/dorstm/.zshrc:19: command not found: antigen
/gaia/class/student/dorstm/.zshrc:22: command not found: antigen
/gaia/class/student/dorstm/.zshrc:25: failed to load module `zsh/zle': /usr/lib/zsh/4.3.11/zsh/zle.so: cannot open shared object file: No such file or directory
/gaia/class/student/dorstm/.zshrc:26: command not found: bindkey
/gaia/class/student/dorstm/.zshrc:33: command not found: antigen
/gaia/class/student/dorstm/.zshrc:48: command not found: antigen
/gaia/class/student/dorstm/.zshrc:99: command not found: pyenv
/gaia/class/student/dorstm/.zshrc:102: command not found: rbenv
zsh: failed to load module `zsh/zle': /usr/lib/zsh/4.3.11/zsh/zle.so: cannot open shared object file: No such file or directory
```

Steps to reproduce
------------------

Minimal steps to reproduce this behavior. Example:

    1 - Install `zsh` in your home folder (I followed [these instructions](https://stackoverflow.com/a/52567731/1291990))
    2 - Use [this .zshrc][zshrc]
    3 - Run `exec zsh`

Expected behavior:

Antigen should not generate errors
 
## Software version

- `antigen version` does not run because of the error, but the current version is `v2.2.2`.
- `zsh 4.3.11 (i386-redhat-linux-gnu)`
- `Linux [host url redacted] 2.6.32-754.18.2.el6.i686 #1 SMP Wed Aug 14 16:52:11 UTC 2019 i686 i686 i386 GNU/Linux`

## Configuration

- Don't have a `.antigenrc`
- [`.zshrc`][zshrc]

## More information

Screenshot or any other information you may find relevant to troubleshoot the issue.

[zshrc]: https://github.com/mfdorst/dotfiles/blob/master/universal/.zshrc
Description
-----------
When starting a new shell, I receive the following error:

```
/Users/$USER/.antigen/bundles/robbyrussell/oh-my-zsh/plugins/osx/osx.plugin.zsh:source:329: no such file or directory: /plugins/osx/spotify
```

**Note:** I do no have `oh-my-zsh` installed with homebrew. I don't know if this is necessary or not.

Steps to reproduce
------------------

Minimal steps to reproduce this behavior. Example:

	1 - install `zsh` through homebrew
	2 - install `antigen` using `curl -L git.io/antigen > antigen.zsh`
    3 - populate `.zshrc` with config below
    4 - Open terminal
	
The error shows up before seeing a prompt.

Expected behavior:

    - No error
 

## Software version

- `antigen version`: Antigen v2.2.2
- `zsh --version`: zsh 5.7.1 (x86_64-apple-darwin18.2.0)
- `uname -a`: Darwin Jakes-MacBook-Pro-2.local 18.6.0 Darwin Kernel Version 18.6.0: Thu Apr 25 23:16:27 PDT 2019; root:xnu-4903.261.4~2/RELEASE_X86_64 x86_64

## Configuration

- gist of `.zshrc`

```
# load Antigen
source $HOME/antigen.zsh

########## Antigen Plugins ##########

antigen bundle <<EOBUNDLES
    # Bundles from the default repo (robbyrussell's oh-my-zsh)
    git

    # Syntax highlighting bundle.
    zsh-users/zsh-syntax-highlighting

    # Fish-like auto suggestions
    zsh-users/zsh-autosuggestions

    # Extra zsh completions
    zsh-users/zsh-completions

    # Guess what to install when running an unknown command.
    command-not-found

    # Auto completion plugins
    git
    git-extras
    brew
    brew-cask
    lein
    osx
    node
    ssh-agent
    web-search

    # Other general oh-my-zsh plugins
    common-aliases
    extract
    z
    colored-man-pages

    # Pure Prompt
    mafredri/zsh-async
    sindresorhus/pure
EOBUNDLES

#####################################

# apply all changes
antigen apply

Description
-----------

TL;DR, [unixorn/autoupdate-antigen.zshplugin](https://github.com/unixorn/autoupdate-antigen.zshplugin) does not seem to be working.


Steps to reproduce
------------------

Minimal steps to reproduce this behavior:

    1 - `antigen bundle unixorn/autoupdate-antigen.zshplugin`

Expected behavior:

Should auto update once a week and produce some output like this:
```
Updating mafredri/zsh-async@master... Done. Took 0s.
Updating robbyrussell/oh-my-zsh@master... Done. Took 1s.
Updating sindresorhus/pure@master... Done. Took 0s.
Updating zsh-users/zsh-autosuggestions@master... Done. Took 1s.
Updating zsh-users/zsh-syntax-highlighting@master... Done. Took 1s.
```
 
Current behavior:

Never outputs anything.

## Software version

- `antigen version`
Antigen develop (d1dd78b)
Revision date: 2018-01-15 14:37:21 -0300
- `zsh --version`
zsh 5.5.1 (x86_64-debian-linux-gnu)
- `uname -a`
Linux (can't disclose)

## Configuration

- gist of `.zshrc`

```
source ~/.antigen/antigen.zsh
antigen use oh-my-zsh

# Plugins
antigen bundle git
antigen bundle sudo
antigen bundle history
antigen bundle extract
antigen bundle debian

antigen bundle zsh-users/zsh-syntax-highlighting
antigen bundle zsh-users/zsh-autosuggestions
antigen bundle unixorn/autoupdate-antigen.zshplugin # Auto updates for antigen

# Theme
antigen bundle mafredri/zsh-async
antigen bundle sindresorhus/pure

antigen apply
```

## More information

I went through the hassle of forking and rewriting the auto update plugin [here](https://github.com/jackcogdill/autoupdate-antigen.zshplugin/blob/master/autoupdate-antigen.zsh).

After some debugging, it seems that everything in the plugin should work, except running `antigen update` or `antigen selfupdate` finishes instantly with no output.

I ran `which antigen` inside the script and it produced this output:
```zsh
antigen () {
        local MATCH MBEGIN MEND
        [[ "$ZSH_EVAL_CONTEXT" =~ "toplevel:*" || "$ZSH_EVAL_CONTEXT" =~ "cmdarg:*" ]] && source "/my/usr/path/.antigen/antigen.zsh" && eval antigen $@
        return 0
}
```

It appears that `[[ "$ZSH_EVAL_CONTEXT" =~ "toplevel:*" || "$ZSH_EVAL_CONTEXT" =~ "cmdarg:*" ]]` evaluates to false. My question is, is this intended behavior for scripts? Why can we not use `antigen update` inside of a plugin?
Description
-----------

`antigen update` fails with a `1` exit status code.


Steps to reproduce
------------------

    1 - Open terminal
    2 - Run `antigen update`
    3 - `Updating @master... Error! Activate logging and try again.` is displayed

Expected behavior:

    - No error message is displayed and all bundles get updated accordingly.
 

## Software version

- `antigen version`:
```
Antigen develop (d1dd78b)
Revision date: 2018-01-15 14:37:21 -0300
```
- `zsh --version`: `zsh 5.7.1 (x86_64-pc-linux-gnu)`
- `uname -a`: `Linux pensieve 5.0.7-1-MANJARO #1 SMP PREEMPT Sat Apr 6 08:50:27 UTC 2019 x86_64 GNU/Linux`

## Configuration

- gist of `.antigenrc`: *no such file*
- gist of `.zshrc`: https://git.io/fjmGf

## More information

- [debug.log](https://github.com/zsh-users/antigen/files/3076095/debug.log)
