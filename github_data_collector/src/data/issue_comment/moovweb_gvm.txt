
When the user changes directories, automatically use a compatible Go version, or else warn the user that the Go version specified in go.mod is not installed.
Hi @voxxit 

Based on last commits and many unreplied issues it looks like that gvm is abandoned, is it?
If yes, can you recommend alternative?

Thanks
It's convenient to provide the ability to change the default base URL for downloading go binaries, as the default setting - `https://storage.googleapis.com/golang` - may be not accessible in some regions (e.g. China).

```
gvm install go1.13
Downloading Go source...
ERROR: Couldn't download Go source. Check the logs /Users/mcj/.gvm/logs/go-download.log
```

* log 日志格式

```
➜  ~ tail -f /Users/mcj/.gvm/logs/go-download.log
error: RPC failed; curl 18 transfer closed with outstanding read data remaining
fatal: the remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
Cloning into '/Users/mcj/.gvm/archive/go'...
Cloning into '/Users/mcj/.gvm/archive/go'...
error: RPC failed; curl 56 LibreSSL SSL_read: SSL_ERROR_SYSCALL, errno 60
fatal: the remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
```
Every time I switch to a new go version, some binaries (e.g. go linters)  in GOBIN must be reinstalled or copied manually, which is inconvenient. 

It's really helpful that `gvm` supports copying or moving binaries in GOBIN between different go versions.
 
Running `gvm install go1.12.6` (or any version) gets me

```
Installing go1.12.6...
 * Compiling...
/home/{myname}/.gvm/scripts/install: line 84: go: command not found
ERROR: Failed to compile. Check the logs at /home/{myname}/.gvm/logs/go-go1.12.6-compile.log
ERROR: Failed to use installed version
```

The log gives me

```
Building Go cmd/dist using /home/{myname}/go1.4.
ERROR: Cannot find /home/{myname}/go1.4/bin/go.
Set $GOROOT_BOOTSTRAP to a working Go tree >= Go 1.4.
```
Sometimes I need to run Go command line tools from a privileged environment. However, gvm is trickier to use with `sudo`. The best I've found so far is:

```sh
$ sudo -E bash
$ <go, gvm, or custom go tool here...>
$ exit
$
```

However, it would be more convenient to have a one-line syntax for this kind of command call. Any tips?

I tried `sudo -E tonixxx clean boil` and `sudo -E bash -c 'tonixxx clean boil'` but strangely they were not able to receive my full environment, so bash was not able to find my `tonixxx` binary like it can in a normal user shell. I am loading gvm from direnv, in case that matters.
Sure, you can list them and pick the latest, but that requires manual intervention. a "Get Latest" option would also be useful for scripts.

Not sure if this project is being actively developed from looking at the info here on git.