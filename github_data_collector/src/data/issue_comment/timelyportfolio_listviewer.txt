The accompanying documentation and examples are quite sparse with no screenshots or screencasts.  Add some more visual material so potential new users know how handy this little widget is.
Hi!

The `miniUI` package is required but not installed with the `listviewer` package. Maybe it should be? 

```r
if (!require(listviewer)) install.packages("listviewer")
#> Loading required package: listviewer
library(listviewer)
list <- list(a = 1, b = 2)
jsonedit_gadget(list)
#> Loading required namespace: miniUI
#> Failed with error:  ‘there is no package called ‘miniUI’’
#> Error in jsonedit_gadget(list): requireNamespace("miniUI") is not TRUE
```
Can anyone help me to print duplicate nodes using listviewer in R
Hi,

To improve the interactivity, can you add some event when use choose a list item and return to shiny?
Something similar to onChange, which is implemented.

Thanks.
Hi timelyportfolio, 
Could this same method be applied to S4 objects? 

Thank you, 
Marcel

That's a very nice editor but I don't understand how I can save the modification in an R object.

listviewer is really cool! I thought this would be great fit for Rselenium because it creates some difficult to navigate lists. I tried it out but get a bunch of warnings (see below) but no listviewer. Any ideas?

```
library(RSelenium)
pJS <- phantom()
remDr <- remoteDriver(browserName = 'phantomjs')
remDr$open(silent = TRUE)
remDr$navigate("http://vnijs.rady.ucsd.edu:3838/marketing")
webElems <- remDr$findElements("css selector", "label")
jsonedit(webElems)
remDr$close()
pJS$stop() 
```

Warning messages:
1: In FUN(X[[28L]], ...) :
  converting an R function to JSON as null. To change this, define a method for toJSON() for a 'function' object.

@timelyportfolio raised this question on twitter … yes it would be nice to be able to search or filter the list being inspected. This could be taken literally or maybe just control the initial state of the expansion toggle I see in the example based on `par()`.

This new CRAN package [`searchable`](http://cran.r-project.org/web/packages/searchable/index.html) has intriguing functionality.

It feels like an XPath-like syntax for communicating which parts of the list are interesting would be worth exploring.

JSON string easy to add.

For XML, will need to convert to JSON.
- https://github.com/metatribal/xmlToJSON
- https://developer.mozilla.org/en-US/docs/JXON
