I'm using Unity 2019.2.11f1 (64-bit) version and it keeps showing this mesh with pink color.

![Capture](https://user-images.githubusercontent.com/39672683/68525997-45d83480-02fd-11ea-9e7d-46d4f3fbe890.PNG)


I know I need to make assets for Universal render Pipeline but, it not showing any option to make these assets.
is there any problem??
**BoatAttack/Packages/com.verasl.water-system/package.json** as of https://github.com/Verasl/BoatAttack/commit/90a1395792a19cded7f3495acca405ed37f7ca6e

Reads:
`"com.unity.render-pipelines.universal": "7.0.0"`

But should read:
`"com.unity.render-pipelines.universal": "7.1.0"`
**BoatAttack/Packages/com.verasl.water-system/package.json** as of https://github.com/Verasl/BoatAttack/commit/90a1395792a19cded7f3495acca405ed37f7ca6e

Reads:
`"com.unity.burst": "0.2.4-preview.30",`

But should read:
`"com.unity.burst": "1.1.2",`
https://github.com/Verasl/BoatAttack/blob/5ee2c7561dad4087fa427ca96b687f8ffeed51f8/Assets/Scripts/GameSystem/AppSettings.cs#L81

Also, some comments/description would be much appreciated! I'm having trouble figuring out what the calculations are doing. From what I can understand, if it detects the frame rate is dropping bellow some number, it performs dynamic scaling to reduce rendering time. But the actual code with all the keeps and clamps and bias and offset floats is a bit hard to understand. ðŸ˜”

Very nice repository overall though, generally very clean code and lots of ideas I'll be borrowing. Thanks :)
Was removed by accident?
Some earlier Qualcomm Vulkan drivers don't support the format.
- Added Scene Navigation System.
- Fixed a material problem in RandomHue script (using Shared Materials).
- Added a script that make singletons navigate from scene to another.
- Added MainMenuController script that control ,for now, main menu buttons' actions.
I kinda feel a bit stupid, but I couldnt finde a way to change the foam texture. Is there any way that I am overseeing?
Windows 10, Unity 2019.1.6f1, Android 8.0.0 , Samsung Tab S3. Branch - Release->2019.1

Build is running on very low FPS like 10-15 and a lot of objects are not visible. Please check attachment. Everything is visible in Editor.

![Screenshot_20190616-142859_BoatAttack](https://user-images.githubusercontent.com/6245802/59562335-2e966300-904d-11e9-8c62-78582d3b5b63.jpg)


I have tried to change rendertexture format because i thought that my device isn't supported but it supports. I checked with script. Tried to change resolution to 512 and depth buffer from 24 to 16 or 32 nothing changed. I think waterfx or one of the shaders not working properly. Because also caustics are in wrong y-position. What could be the problem, Verasl? Black foam is caused by baked light also can you change foam color to blend light probes? I want to use your sea in my project because it's performance is so good with buoyancy. I can do some water with graph shader but it will take so long time and i don't know hlsl. At the right it is my map border it's not water artifact :)
![Capture+_2019-04-21-14-30-39 1](https://user-images.githubusercontent.com/28352067/56469408-2d2c2e00-6442-11e9-908d-37be833ce37e.png)


I've seen this error in Boat Attack and VR for many versions now of LWRP since 2018.  I probably should have reported it sooner.   The reflections are split into two images on the water.   I'm still getting this error in Unity 2019.1.0f1 with LWRP 5.10.0.  I also tried LWRP 5.12.0 with the same effect.   I'm using Oculus Integration 1.35.   I tried boat attack's custom "ForwardRendererData" and Forward Renderer.   Unity XR settings are set to Single Pass stereo rendering mode.  I have "Shared Depth Buffer" enabled.  Graphics API for Windows is Direct3D11.   Color space is Linear.
Has anyone testing this with Oculus Rift found a way to remove the split reflection images?  And is it still possible to keep some transparency to the water?   Thanks in advance for any help on this.

![LWRP-Water-Rift](https://user-images.githubusercontent.com/40904467/56101480-1b9ecf80-5ef2-11e9-87a2-d0c703e5f5e8.png)

Edit:  The screen shot is just the left eye view.   So you actually end up in VR with 4 overlapping reflections on the water.