Hello,

  I couldn't find any reference in the docs nor the issues about using the JWT claims.
Can I use the role claim from an JWT token as the pg role for the session ? (Ã  la postgrest)

Thanks
Hi,
I am using pREST in a project, but when I make a transaction insert on mysql adapter it is not returning value.
**Want to start talking sorry** ðŸ˜­

In 2017 I opened this issue proposing architectural change: https://github.com/prest/prest/issues/190

In my view we miss the architecture split into many packages, generating many PR in any repositories. I would like to start planning a new architecture of internal pREST packages (one repository).

```
github.com/prest/prest
    â”œâ”€â”€ adapters
        â”œâ”€â”€ ...
    â”œâ”€â”€ cmd
        â”œâ”€â”€ main.go - initial file
        â”œâ”€â”€ vendor
        â”œâ”€â”€ ...
    â”œâ”€â”€ config
        â”œâ”€â”€ ...
    â”œâ”€â”€ middlewares
        â”œâ”€â”€ ...
    â”œâ”€â”€ controllers
        â”œâ”€â”€ ...
    â”œâ”€â”€ ...
```

In this way it is possible to use as a framework (extend the pREST by importing internal packages without vendor directory conflict).
Nowadays pREST midlewares implements JSON and XML renderer.
Sometimes, CSV format is more appropriate.
- pREST version (or commit ref): 0.3.4
- pREST endpoint: localhost:8000/
- PostgreSQL version: 9.6
- Operating system: mac
- Go version:  1.13
- Log gist: 

## Description

when in single mode, set single_db_mode = true, default_database = test and default_schema = public
in prest.toml,  for users table, just request this url http://127.0.0.1:8000/users

just ignore database name and schema name in url ....

I'm extending pREST and using `config.PrestConf.Adapter.*` to directly manipulate the database.

 If someone happens to send an incorrect URL to the server, such as: `http://example.com/nondb/public/tablename` (*with a database that doesn't exist*) the server tries to open the db, fails and returns the error as expected but it loses the old connection or database name. Then no direct SQL statement will work anymore.

If I send a valid URL the pREST reconnects to the database and then everything works again.

- pREST version: 0.3.0
- pREST endpoint: any
- PostgreSQL version: 11.2
- Operating system: Ubuntu 18.04
- Go version: 1.12.6
- Log gist:

## Description

I am using Let's Encrypt Certbot generated certificates. Here is my setting:

```
[ssl]
mode = "require"
sslcert = "/etc/letsencrypt/live/api1.welfana.com/fullchain.pem"
sslkey = "/etc/letsencrypt/live/api1.welfana.com/privkey.pem"
sslrootcert = "/etc/letsencrypt/trustid-x3-root.pem"

```
I am not sure what to put as sslrootcert. I have tried manu combinations using a couple of certs from Let's Encrypt website here https://letsencrypt.org/certificates/ but nothing works. 

I am getting
  `SSL_ERROR_RX_RECORD_TOO_LONG `

Can anyone point where my mistakes are?

Root certs sections on the website:
![letsencrypt](https://user-images.githubusercontent.com/816052/60649787-4ce5c680-9e75-11e9-947c-38f2cfd1d95a.png)

Matches the given url with a whitelist from config.core

example:
```go
func MatchURL(url string) (match bool, err error) {
	for _, exp := range strings.Fields(config.Get.JWTWhiteList) {
		match, err = regexp.Match(exp, []byte(url))
		if match || err != nil {
			return
		}
	}
	return
}
```
Thanks for this awesome project.

I am now running prest with another software which provides graphql api.
If prest can support graphql directly, I can only run prest in my project.

Is there any plan for supporting graphql?


Thanks again.

I am following the document to install the prest, after running the command:
docker run -e PREST_HTTP_PORT=3000 -e PREST_PG_HOST=127.0.0.1 -e PREST_PG_PORT=5432 -e PREST_PG_USER=postgres -e PREST_PG_PASS=123456 prest/prest
there is the error
9/04/20 14:14:18 [error] dial tcp 127.0.0.1:54320: connect: connection refused

but i am using go get to install prest and run prest local can access the prest
How to resolve the problem?
