I was trying to determine the licenses for my dependencies. I found that the RubyGems API will return the license, but only if it is specified in your gemspec file.

On larger screens the email preview iframe is being limited to a height of 800 pixels, and the full available screen size is not being used.

Hi,

I'm using Rails 4.1 and have not installed the gem separately.
I have a catch all route as the last route in my routes.rb file 

```
get '*path' => 'main#page_not_found'
```

This catches also the preview path.

What would be the recommended way to implement the catch all route so that it would not conflict with the preview path? Or can I explicitly define the preview path in the route file?

How can I use this gem to render an incoming email as a partial. I can have the incoming email in raw format (as a huge string) or as a `Mail` object.
Any help is appreciated.

This will make it show up on rubygems.org. I'm doing due diligence on our gems and need to find out the licenses for all the gems. Having it show up on rubygems.org cuts out the step of having to go to the github repo.

**Steps to reproduce:**
1. Executing this code which has an error

``` ruby
class MailPreview < MailView
    def invitation
      this_will_raise_an_error!!

      account = Account.first
      inviter, invitee = account.users[0, 2]
      Notifier.invitation(inviter, invitee) 
    end
end
```
1. Then removing the

``` ruby
this_will_raise_an_error!!
```

The error persists until I restart the server

**How should it behave?**

I shouldn't need to restart the server in order to make the MailPreview execute without the "this_will_raise_an_error!!" line

in rails 4.1, you should inherit your preview mailer from ActionMailer::Preview instead of MailView

I wanted to preview my templates with a different locale.
To make this process easier I wanted to change the locale based on the locale param.

I use factories for specs and I find them very convenient to use in mail_view's "actions".
Factories — as well as other methods for generating sample data on the fly — need to be cleaned after.
Since mail_view is supposed to be read-only, I see no disadvantage in actual prevention of data changes persistency  — using transactions.

The first commit is kinda working draft for discussion, I'll add specs+docs if needed.

p.s. I've seen #69 but did neither like the solution nor understand the discussion there.

slightly-off-topic: Might be useful to include in the docs: [mail_view for human — and also for automatic — testing](http://mines.mouldwarp.com/2014/03/mailview-for-human-and-also-for.html).

```
/Users/r625503/Programming/projectv/config/routes.rb:4:in `block in <top (required)>': uninitialized constant MailPreview (NameError)
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/actionpack-3.2.16/lib/action_dispatch/routing/route_set.rb:285:in `instance_exec'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/actionpack-3.2.16/lib/action_dispatch/routing/route_set.rb:285:in `eval_block'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/actionpack-3.2.16/lib/action_dispatch/routing/route_set.rb:263:in `draw'
    from /Users/r625503/Programming/projectv/config/routes.rb:1:in `<top (required)>'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/bundler/gems/rails-dev-boost-3e25b06c5c53/lib/rails_development_boost/loadable_patch.rb:14:in `load'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application/routes_reloader.rb:40:in `block in load_paths'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application/routes_reloader.rb:40:in `each'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application/routes_reloader.rb:40:in `load_paths'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application/routes_reloader.rb:16:in `reload!'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application/routes_reloader.rb:26:in `block in updater'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/activesupport-3.2.16/lib/active_support/file_update_checker.rb:78:in `call'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/activesupport-3.2.16/lib/active_support/file_update_checker.rb:78:in `execute'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application/routes_reloader.rb:27:in `updater'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application/routes_reloader.rb:7:in `execute_if_updated'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application/finisher.rb:66:in `block in <module:Finisher>'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/initializable.rb:30:in `instance_exec'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/initializable.rb:30:in `run'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/initializable.rb:55:in `block in run_initializers'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/initializable.rb:54:in `each'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/initializable.rb:54:in `run_initializers'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/application.rb:136:in `initialize!'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/railtie/configurable.rb:30:in `method_missing'
    from /Users/r625503/Programming/projectv/config/environment.rb:5:in `<top (required)>'
    from /Users/r625503/Programming/projectv/config.ru:3:in `block in <main>'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/rack-1.4.5/lib/rack/builder.rb:51:in `instance_eval'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/rack-1.4.5/lib/rack/builder.rb:51:in `initialize'
    from /Users/r625503/Programming/projectv/config.ru:in `new'
    from /Users/r625503/Programming/projectv/config.ru:in `<main>'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/rack-1.4.5/lib/rack/builder.rb:40:in `eval'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/rack-1.4.5/lib/rack/builder.rb:40:in `parse_file'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/rack-1.4.5/lib/rack/server.rb:200:in `app'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/commands/server.rb:46:in `app'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/rack-1.4.5/lib/rack/server.rb:304:in `wrapped_app'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/rack-1.4.5/lib/rack/server.rb:254:in `start'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/commands/server.rb:70:in `start'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/commands.rb:55:in `block in <top (required)>'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/commands.rb:50:in `tap'
    from /Users/r625503/.rvm/gems/ruby-2.0.0-p195/gems/railties-3.2.16/lib/rails/commands.rb:50:in `<top (required)>'
    from script/rails:6:in `require'
    from script/rails:6:in `<main>'
```

Not sure why though. The gems in the gemfile and I copy-pasted the mounting call into routes. 

ruby is at 2.0.0 and rails is at 3.2.16
