The gem doesn't install with Rails 6. Will we be getting support soon?
Hi,

I'd like to get the humanity score reported by Google. In you doc says

> You need to verify this token with verify_recaptcha in your controller in order to get the score.

but I can't get the score, only a boolean.

Is there any way to get the actual number? There is another gem, new_google_recaptcha that can report the score to the controller.

Regards and thanks in advance.
we use this gem in 3 scenarios. One of them does not use turbolinks and it works flawless.
The other 2 pages have turbolinks enabled. 
With recaptcha v3 and fallback v2 we experienced different errors.

The first one that came up was:
**"grecaptcha not defined"** as library loading seems to not be in sync when using turbolinks.
There were some solutions for older rails versions but using 6 nothing has worked to fix the error.
We therefore removed the immediate execution of executeRecaptchaForRequest and instead passed this as a callback into the  api.js url in order to have it executed when the library has been loaded.

This fixed the error but then the definition of the async method led to a syntax error **"unexpected token function"**. Since we already used a patch we also deleted this definition since we don't use it right now. This worked for us but is not really the good way and can crash when recaptcha gets updated.

Are there any solution I missed working with rails 6? (ajax: true didn't work for us)
I saw implementation of `recaptcha_error` which is called in `verify_recaptcha` when error occur.
https://github.com/ambethia/recaptcha/blob/33e8b4f0f3778783e54b0f2f852baf34f0583da5/lib/recaptcha/adapters/controller_methods.rb#L61-L67

In my case the request is kind of XHR and respond json, and no mode involved.

How do I get default error messages for errors?

Just use `Recaptcha::Helpers.to_error_message(:verification_failed)` is a option, but it will be wrong if the error is a timeout.

Maybe giving a stub of model to verify_recaptcha and get errors from it is a solution.

Thanks in advance.
I'm utilizing the reCAPTCHA v3 API and am seeing the error `Can't find variable: grecaptcha` come through logs on a recurring basis. 

It is recurring with a specific `newsletter` action because it errors out when attempting to call `executeRecaptchaForNewsletter`.

Here's is my implementation â€“ 

```
    if verify_recaptcha(action: 'newsletter', minimum_score: 0.5)
      SignEmailUpForMailingListJob.perform_later(params[:email])
    end
```

However, the urls where the error is occurring do not even include the`= recaptcha_v3` code as they are all internal urls. 

I'm assuming this error is timing related but would appreciate any insight you might have.
Hi, 

we're facing an issue with recaptcha v3 in Microsoft Internet Explorer 11 (default configuration, no plugins, clean installation with Windows 10, version 11.615.17763.0). 

Recaptcha token is not fetched because of JS errors/double rendered ending script tag - please see the screenshots attached.

We use common helper attributes, not playing with JS generation/callbacks/scripts etc.

```
<%= recaptcha_v3(action: 'login', hl: I18n.locale, site_key: 'oursitekey') %>
```

In all other browsers (Chrome, Opera, Firefox) we don't have any issues at all. Unfortunately, a lot of our clients still use MSIE and we cannot switch them.

I didn't find any information that reCaptcha v3 should not work in MSIE 11, so could it be a gem's JS script issue?

Anyway, thanks for the awesome gem!

![Screenshot (3)](https://user-images.githubusercontent.com/656029/63754656-8a833080-c8b5-11e9-9ce3-775181e3f93f.png)
![Screenshot (4)](https://user-images.githubusercontent.com/656029/63754653-89ea9a00-c8b5-11e9-93aa-918f01946835.png)
![Screenshot (5)](https://user-images.githubusercontent.com/656029/63754654-89ea9a00-c8b5-11e9-9d1c-618350931086.png)

I am running the Recaptcha with the v3 and the `verify_recaptcha` is returning false even when the response is a success.

```sh
2019-08-22T14:10:04+02:00 DEBUG [httplog] Response:
{
  "success": true,
  "challenge_ts": "2019-08-22T12:10:02Z",
  "hostname": "localhost",
  "score": 0.9
}
```
The response makes sense according to the API documentation https://developers.google.com/recaptcha/docs/verify#api-response

But inside the `verify_recaptcha` it runs the `self. verify_via_api_call ` that [tries to verify if the action is valid](https://github.com/ambethia/recaptcha/blob/c9ef2815a3c3d7b8e0abd4b5b85207a34db23cc0/lib/recaptcha.rb#L70), but the response of the "siteverify" request does not include the action on the response body. 

```ruby
verify_recaptcha(action: "user_registration_form", minimum_score: 0.7) # => false
```

It seems that when using `invisible_recaptcha_tags`, the native HTML input attribute `required` is bypassed. 

For a login/signup form it would be great to be able to first validate that the fields are not empty on the client side using `required: "true"` before challenging with recaptcha.

Am I missing a helper parameter?
Using the W3C validator, I am getting errors from the Recaptcha tags that are created in the final HTML.

Validator can be found here:
https://validator.w3.org/

My html.erb simply contains:
<%= recaptcha_tags %>

The error I am getting is "The 'scrolling' attribute on the 'iframe' element is obsolete. Use CSS instead."

How can the Recaptcha rubygem be updated to remove the 'scrolling="no"' attribute in the tag?


Hi,

The data-disable-with attribute doesn't work with the invisible_recaptcha_tags.

**My code:**
`= invisible_recaptcha_tags text: 'Sign up', class: 'btn btn-primary', 'data-disable-with' => 'Please wait...'`

**I also tried:**
`= invisible_recaptcha_tags ui: :input, value: 'Sign up', class: 'btn btn-primary', 'data-disable-with' => 'Please wait...'`

**HTML generated with `ui: :input`:**
`<input type="submit" data-sitekey="blablabla" data-callback="invisibleRecaptchaSubmit" class="g-recaptcha btn btn-primary" value="Sign up" data-disable-with="Please wait...">`

**EDIT:**

It's weird but if I add a button_tag like this:
`= button_tag 'hello', class: 'btn btn-primary', data: {disable_with: 'world'}`

When I click on this button, the data-disable-with of the invisible_recaptcha_tags works.
Maybe the problem is in the `invisibleRecaptchaSubmit`function in client_helper.rb?

```
var eles = document.getElementsByClassName('g-recaptcha');
            if (eles.length > 0) {
              var form = closestForm(eles[0]);
              if (form) {
                form.submit();
              }
            }
```

I think the Js is stoped after the submit, so the jQuery function for data-disable-with is not executed. I'm not good with JS so I'm not sure if it's right and how I could fix that. ðŸ¤”