Hi!
Please, help me solve the problem.
I use HelixToolkit.Wpf.SharpDX. There are two semitransparent surfaces on the scene, one over another. The OrthographicCamera is used. In the Viewport3DX window, a color spot is displayed on the surfaces.

![image](https://user-images.githubusercontent.com/1488127/72661503-e462cf00-39eb-11ea-89e9-b08506c00a66.png)
What is the color spot? As I understand this spot is related to the camera target point. How is it possible to remove the spot?
The source code for this case is here - https://github.com/Forester-/HTKX/tree/master/HxRflc

Thanks in advance!
Hi,

when I compile your FileLoadDemo-example (sharpdx-wpf) and copy the bin/debug folder to
my target-pc, this example does not start.
No message.
Soloution was to copy the 
packages\AssimpNet.4.1.0\runtimes\win-x86\native\assimp.dll
into this folder.
On my development pc, this DLL will be found in the GAC.
I think this is an error.

Thanks,
Gregor
I have an issue with updating the Helix3DViewport in WPF.

I am trying to update the robot position through iterations but i dont know how to update it before the loop finishes. As it is right now robot moves (teleports) to the last position after the function that called it finishes. But i would like it to be updated each iteration (each iteration it moves by small fraction). 

` <Grid Grid.Column="1" Background="LightGray">
                            <HelixToolkit:HelixViewport3D ZoomExtentsWhenLoaded="True" 
 Margin="10,10,10,10" Name="HelixToolkitViewport1" 
                                          RenderTransformOrigin="0.451,0.386">
                                        <HelixToolkit:DefaultLights/>
                                        <ModelVisual3D Content="{Binding RobotModel}"/>
                </HelixToolkit:HelixViewport3D>
            </Grid>`

`           for (int i =0; i < 20; i++)
            {
                RobotJointAngles = PointToDouble(movedPoint);
                RobotUR5.MoveByJoint(RobotJointAngles);
                RobotUR5.UpdateRobotModel();
                System.Threading.Thread.Sleep(20);
            }`

I don't know how or where to access the update of the viewport, any help would be welcome! ty
Attach a screen capture of my app.
![jaggy](https://user-images.githubusercontent.com/59012971/72037681-5fd4ca00-32e2-11ea-83e4-d5262246ef0b.PNG)

Jaggy is occurring where shadows and objects overlap.
I want to know how to get rid of this jaggy.

I found the following web page.
･[https://helixtoolkit.userecho.com/communities/1/topics/1143-sharpdx-why-does-my-model-look-better-when-using-the-deferred-rendertechnique-instead-of-eg](url)
･[https://github.com/helix-toolkit/helix-toolkit/issues/311](url)
･[https://github.com/helix-toolkit/helix-toolkit/issues/306](url)

From the above contents,
I think that it can be solved by using "delayed rendering" and
modifying the "SampleDescription" of "DPFCanvas.cs".

But now latest HelixToolkit.Wpf.SharpDX(v.2.10.0),
"SampleDescription" of "DPFCanvas.cs" does not exist.
And "RenderTechniquesManager" or "RenderTechnique" also do not exist,
I do not know how to specify the rendering equivalent to [https://github.com/helix-toolkit/helix-toolkit/issues/306](url).

How to specify in the latest version(v.2.10.0)?

Hi! I have a problem with export metadata.
I updated FileLoadDemo example
My function -
        private void CreateMetadata(HelixToolkitScene _scene, bool WithRootMd)
        {
            var root = _scene.Root;
            int i = 30;
            foreach (var node in root.Traverse())
            {
                if (!WithRootMd && node == root)
                    continue;
                // Metadata 
                if (node is GroupNode gn)
                {
                    gn.Metadata = new Metadata();
                    var hmStr = new Metadata.Entry(MetaDataType.String, "Md" + i.ToString());
                    gn.Metadata.Add("Name-string", hmStr);
                }
            }
        }

It called from OpenFile()
....
                        foreach(var n in scene.Root.Traverse())
                        {
                            n.Tag = new AttachedNodeViewModel(n);
                        }
                        CreateMetadata(scene, true); //             <---- here
...

then after pressing Export to assbin-format
I see property "md30" for all nodes (if CreateMetadata(scene, true);)
or
see nothing for CreateMetadata(scene, false);

[111.zip](https://github.com/helix-toolkit/helix-toolkit/files/3994680/111.zip)

Is it possible build something like terrain surface in SharpDX project?
Such example is present in WPF branch, but absent in SharpDX
I'm trying to import a  FBX model created with 3DS Max. The model is imported in the viewport "exploded". By looking around it appears that the problem was already reported on Assimp but it should have been solved. Do you know how to solve it? May it be an importation configuration?

![Capture](https://user-images.githubusercontent.com/7974047/70378677-85596700-1923-11ea-99b2-8ae11e90cd11.PNG)

Hello everyone.
I want to share the rendered scene over the internet. For that I want to use WebRTC. Don't worry too much about the WebRTC part, because that is mostly working. The WebRTC pipline expects a SharpDX.Direct3D11.Texture2D, which then gets encoded on the GPU and send to the remote peer.
I am completely new to WPF 3D/helix-toolkit, so please be patient with me. The following code is not writte by me, but by a colleague.
The application is a Viewer, to look at various image formats.
Here is the Code how the image is loaded.

```
 public async Task Load(Rect area, double scale, CancellationToken ct, int zLayer)
        {
            if (_isLoaded)
                return;

            var model = new MeshNode();

            var meshBuilder = new MeshBuilder(true, true, false);
            meshBuilder.AddBox(new Rect3D(0, 0, 0, _bitmapFrame.PixelWidth, _bitmapFrame.PixelHeight, 0.0), BoxFaces.PositiveZ);
            MeshGeometry3D geometry = meshBuilder.ToMeshGeometry3D();
            model.Geometry = geometry;

            model.Material = new PhongMaterialCore
            {
                DiffuseAlphaMap = _bitmapFrame.AsMemoryStream(FileExtension == ".png"),
                SpecularColor = Color.Black,
                DiffuseMap = _bitmapFrame.AsMemoryStream(FileExtension == ".png")
            };

            ModelGroup.AddNode(model);

            _isLoaded = true;
        }
```

And is then rendered like this

```
<hx:Element3DPresenter x:Name="MainContent" Content="{Binding ImageDataProvider.ModelGroup}" 
                                   IsHitTestVisible="False"/>
```

I went through the classes and was looking for a place where I could catch a Texture2D right before or after it is rendered. But without success.

This is the function I would call to send a videoframe to the encoder. Where the IntPtr is the nativePointer of Texture2D.
`public void SendVideoFrame(IntPtr rgbaPixels, int stride, int width, int height, VideoFrameFormat videoFrameFormat);`

In this example I use windows `DesktopDuplicationApi` to capture my desktop. And send it to the WebRTC pipeline.

```
while (IsRunning)
{
  // Try to get duplicated frame within given time is ms
  var res = duplicatedOutput.TryAcquireNextFrame(_options.TimeOut, out var frameInfo, out var screenResource);

  if (res.Success)
  {
    if (frameInfo.AccumulatedFrames == 0)
    {
      duplicatedOutput.ReleaseFrame();
      continue;
    }

    using (var screenTexture2D = screenResource.QueryInterface<Texture2D>())
    {
      videoTrack.SendVideoFrame(screenTexture2D.NativePointer, 0, screenTexture2D.Description.Width, screenTexture2D.Description.Height, WebRtc.VideoFrameFormat.GpuTextureD3D11);
    }
    screenResource.Dispose();
  }
}
```

So my question is. Is it possible to catch the currently rendered frame or about to be rendered frame, and can that be used as Texture2D? Otherwise is it possible to convert a `MeshNode` into a Texture2D ? Please keep in mind that I am developing a low latency application, so performance is very important. I don't want unnecessary copies between RAM and GPU memory.

Please let me know if you need more information about my problem. I will respond asap.

Thank you
How does one update rendering upon geometry color/material change? In an older version of Helix, we used to detach and re-attach the `GeometryModel3D` objects like so: https://github.com/DynamoDS/Dynamo/blob/f0337bd5bd86d5c75571bd7d7d6f45caa4301580/src/DynamoCoreWpf/ViewModels/Watch3D/AttachedProperties.cs#L40. 
```
var geom = (GeometryModel3D)obj;
                
                if (geom.IsAttached)
                {
                    var host = geom.RenderHost;
                    geom.Detach();
                    geom.Attach(host);
                }
```
I understand that this was probably not the best way to do it performance-wise but any suggestion on the recommended way to do so in the newer versions of Helix would be helpful. @holance?
Hello guys, I am reading the docs and I would like to create a rectangle from the mouse selection on a plane only, does anyone happen to have an example or similar? I saw this class but not really sure how to use it 
`https://www.csharpcodi.com/vs2/2157/helix-toolkit/Source/HelixToolkit.Wpf/SelectionCommands/RectangleSelectionCommand.cs/`