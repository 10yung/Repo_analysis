
- I updated pod from unSupported version "swift 3" to support the latest swift version "swift 5"
- solve issue #112 

please update your Pod swift version to latest swift version "swift 5".
This PR adds support for Swift 5.0. Besides, I updated the project to the settings recommended by Xcode.
Currently, if the in-memory cache is purged and on-disk cached items remain, when an item is requested from the cache, it is loaded from disk each time it's requested. This is a fix that simply places items back into the in-memory cache when they're loaded from disk. 

A test has been added. 

Open to other suggestions. 
* Errors and warnings fixed
* Recommended Xcode settings applied

I set the cache time to 24 hours

```
     internal struct UserTrackingCache {
        static let cacheName = "userTrackingCache"
        static let locationCacheTime: Double = 24 * 60 * 60 //24 hours
    }
```
    

```
        ///Save to cache
        do {
            let fullKey = "\(root)_\(key)"
            let cache = try Cache<NSData>(name: UserTrackingCache.cacheName)
            let cachedData = NSKeyedArchiver.archivedDataWithRootObject("Y")
            cache.setObject(cachedData, forKey: fullKey, expires: CacheExpiry.Seconds(UserTrackingCache.locationCacheTime))

        } catch _ {
            Log.error("Something went wrong with the cache = \(UserTrackingCache.cacheName)")
        }
```
I remove the expired cache when App starts in AppDelegate

```
        do {
            
            let cache = try Cache<NSData>(name: UserTrackingService.UserTrackingCache.cacheName)
            cache.removeExpiredObjects()
            
        } catch _ {
            Log.debug("Something went wrong with the cache")
        }
```
        

But I found the cache timeout sooner than I expected. Almost after a few hours, it expires

Does anyone encounter the same issue? or did I do something wrong ?

