@MaxGraey @subzey @CyberAP @reklatsmasters @oriSomething I added description for all your amazing hacks. Can you double-check these descriptions?

https://github.com/ai/nanoid/blob/master/random.js
https://github.com/ai/nanoid/blob/master/index.browser.js
https://github.com/ai/nanoid/blob/master/format.js
https://github.com/ai/nanoid/blob/master/format.browser.js
https://github.com/ai/nanoid/blob/master/non-secure/generate.js
https://github.com/ai/nanoid/blob/master/non-secure/index.js
https://github.com/ai/nanoid/blob/master/async/format.browser.js
https://github.com/ai/nanoid/blob/master/async/format.js
https://github.com/ai/nanoid/blob/master/async/index.browser.js
https://github.com/ai/nanoid/blob/master/async/index.js
https://github.com/ai/nanoid/blob/master/async/random.js
In next 3.0 we will be able to drop IE support and return fast mask from https://github.com/ai/nanoid/pull/145
Basically, `require` is not available in browser, for which the js source code files are unable to use directly in modern Browser HTML context where ECMA Modules Feature has been supported natively.

I've also noticed that you are using `parcel` to build up a es style module file for usage in demo html file.

Why not directly make it available through es-module-aware entry in `package.json`:
https://github.com/rollup/rollup/wiki/pkg.module
Not clear how to run **nanoid** within browser, which file should I load via script tag?
Are there `dist` or `.min.js` build available?

Think this information would be valuable for documentation (README.md) as well, because right now all examples show only Node.js `require` synax.
I understand the motivation of async generation for the IDs. But most of the time, the use case requires synchronous generation. But if async generation allowed for a batch of nanoIDs to be generated and stored, then  we could have synchronous consumption and based on the rate of consumption a developer could trigger async batch generations as needed.

Do you think the idea is good?