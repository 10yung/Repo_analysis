My application is Beego + React. Beego will also serve the React static files.

React-router will handle routing for URLs in the front-end. So we need to have a "default route" for Beego. For example, all URLs starting with "/api" like "api/xxx" will go to Beego backend and all other URLs (like "/view", "/admin") should go through Beego and go into static files and let React-router serve it.

Of course I can implement such a functionality with a custom filter and determine whether a URL is starting with "/api" by myself. But I'm still looking for an elegant way to do this. For example, a default route, so any URL that doesn't match any other "/api" routes will go into this default route, and let Beego serve static files -- the entry point of React.

Any suggestion?
 自动匹配很好用！
 后期会支持 post: user/login 路由到 func LoginPost() 吗
Please answer these questions before submitting your issue. Thanks!

1. What version of Go and beego are you using (`bee version`)?

go1.13 & Beego 1.12.0

2. What operating system and processor architecture are you using (`go env`)?

windows

现在验证提示要想显示xxx 不能为空，必须手动自定义message， 一行一行写比较麻烦， 建议 增加 label

type AddTagForm struct {
	Id       string `form:"id" json:"id" valid:"Required;"`
	Name     string `form:"name" json:"name" valid:"Required;" label:"标签名称"`
}

error message 自动加上提示 “标签名称不能为空”




![image](https://user-images.githubusercontent.com/32833966/72515676-448e2f80-388b-11ea-8747-eac383eae345.png)

Please answer these questions before submitting your issue. Thanks!

1. What version of Go and beego are you using (`bee version`)?
go1.13.5 windows/amd64      bee version v1.10.0

2. What operating system and processor architecture are you using (`go env`)?
win7   intel(R) i5-4460

3. What did you do?
appname = MyBeegoAPI
httpport = 8080
HttpsPort = 10443
HTTPSCertFile = "conf/1_wwwcn_bundle.crt"
HTTPSKeyFile = "conf/2_wwwcn.key"
runmode = dev
autorender = false
copyrequestbody = true
EnableDocs = true
EnableHTTPS = true
EnableHttpTLS = true
EnableHTTP = true
为了能用https访问，配置如上，直接在goland编辑器运行，可以得到如下两句日志
http server Running on http://:8080
https server Running on https://:10443
并且可以用https://127.0.0.1:10443和http://127.0.0.1:8080访问
停掉刚才运行的服务。
接着我用go build打包exe得到可执行文件，拿出来直接双击运行，日志只提示
http server Running on http://:8080
并且https://127.0.0.1:1044访问不了，只有http://127.0.0.1:8080可以访问。

4. What did you expect to see?
我想打包之后得到的可执行文件也能用https访问

5. What did you see instead?
打包之后直接运行exe，https访问不了。
在使用注解路由的时候，如果路由发生了更新，在下一次启动的时候应该需要重新生成路由代码文件，能否在生成的运行时，同时使生成的路由策略生效。
Please answer these questions before submitting your issue. Thanks!

1. What version of Go and beego are you using (`bee version`)?


2. What operating system and processor architecture are you using (`go env`)?


3. What did you do?
If possible, provide a recipe for reproducing the error.
A complete runnable program is good.


4. What did you expect to see?


5. What did you see instead?
```go
// run filter for all request before routing
beego.InsertFilter("/*", beego.BeforeRouter, filter.Filter)

beego.Handler("/a", &Handler{}) // http.Handler
beego.Router("/b", &Controller{}, "get:Get") // beego.Controller
```
The `Filter` populates some values into the context of request, the values is visible in the `Controller` but not for the `Handler`.

This is caused by https://github.com/astaxie/beego/blob/develop/router.go#L776: pass the original req rather than the one in context. The request in context is the one that the filters may modify

PR https://github.com/astaxie/beego/pull/3905 fixes this issue
The filters may do some changes to the request, such as putting values in the request's context

Signed-off-by: Wenkai Yin <yinw@vmware.com>