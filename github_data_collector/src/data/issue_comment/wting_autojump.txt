I upgraded autojump to the 22.5.3-3 version, and when using cd or j, I receive this error :
```
Traceback (most recent call last):                                                                 
  File "/usr/bin/autojump", line 39, in <module>
    from autojump_argparse import ArgumentParser
ModuleNotFoundError: No module named 'autojump_argparse'
```
I downgraded it to the 22.5.3-1 version, and it works.
I'm using Arch linux.
When `CD` into a new directory. The autojump will copy the path into the clipboard which is super annoying. How to fix this?
I just re-installed arch and I see that autojump doesn't seem to be available in arch repos.. What happened?
Hi,

When a custom install location is given to `install.py`, it [modifies `autojump.sh` erroneously][1]: it appends a new `if` block at the end of the file, when it should instead include another `elif` so that it does not potentially source the main shell file twice in case a distribution symlinks it into a standard location.

On a default Homebrew installation using `/usr/local` prefix, this is the resulting `autojump.sh` symlinked at `/usr/local/etc/profile.d/autojump.sh` after installation:

```sh
# the login $SHELL isn't always the one used
# NOTE: problems might occur if /bin/sh is symlinked to /bin/bash
if [ -n "${BASH}" ]; then
    shell="bash"
elif [ -n "${ZSH_NAME}" ]; then
    shell="zsh"
elif [ -n "${__fish_datadir}" ]; then
    shell="fish"
elif [ -n "${version}" ]; then
    shell="tcsh"
else
    shell=$(echo ${SHELL} | awk -F/ '{ print $NF }')
fi

# prevent circular loop for sh shells
if [ "${shell}" = "sh" ]; then
    return 0

# check local install
elif [ -s ~/.autojump/share/autojump/autojump.${shell} ]; then
    source ~/.autojump/share/autojump/autojump.${shell}

# check global install
elif [ -s /usr/local/share/autojump/autojump.${shell} ]; then
    source /usr/local/share/autojump/autojump.${shell}
fi

# check custom install
if [ -s /usr/local/Cellar/autojump/22.5.3/share/autojump/autojump.${shell} ]; then
    source /usr/local/Cellar/autojump/22.5.3/share/autojump/autojump.${shell}
fi
```

The Homebrew installation does create symlinks at `/usr/local/share/autojump/autojump.${shell}`, so because the "check custom install" block is not an `elif`, it sources twice and essentially doubles autojump's load time in shell startup.

[1]: https://github.com/wting/autojump/blob/06e082c91805cb022900819b2e0881eeae780d58/install.py#L32-L38
When I installed Catalina, I figured I'd migrate from bash to zsh as per the default setting. Zsh sourced my entire `~/.bashrc` with no problems EXCEPT the `autojump.sh`, which caused numerous errors. I don't know exactly what caused all the errors, but I did notice the following:

-`autojump.sh` overwrites `$fpath`, which caused all sorts of issues

I was able to fix this by changing the `source ...etc/profile.d/autojump.sh` (which is supposed to work on all shells) to `source .../share/autojump/autojump.zsh`

* The installer said something about adding to my `.zshrc` in zsh, so I *think* it correctly identified my shell. However, it did not correctly source.
* The `source /etc/profile.d/autojump.sh` DOES work in bash for me.
* I experienced this exact problem installing with `brew install autojump` (which installs in `usr/local`) and by cloning the repository then calling `./install.py` (which installs in `~/.autojump`). In both cases, regardless of which folder I was finding the `autojump.zsh`, I had this issue.
* Maybe this is the expected behavior, but I don't think the documentation makes clear "add the correct version to your .rc file"

Add openSUSE distribution information for installing autojump.
I would expect to be able to do `j ~/some/directory/path` and 1) have autocompletion and 2) actually go to that directory.  Neither happens on a fresh install on Ubuntu.

Also would expect tab autocompletion to give the options in autojump's database, typing `j g<tab>` would show if the first result is `/home/example/great` that i want or `/home/example/goof` that i don't want, so i know if i should type more letters.

Are my expectations off, or something wrong with my install?
`j -s`
![image](https://user-images.githubusercontent.com/25716039/62071278-30397600-b20a-11e9-887f-c8f67ac54256.png)


![image](https://user-images.githubusercontent.com/25716039/62071363-5a8b3380-b20a-11e9-8fbd-3d4366673f83.png)

IMO, autojump should always prioritize deeper sub-dirs to jump to OR jump to more complete matches(counter matches counter 100% vs counter to counter_website). 
Hi @wting thank you very much for autojump! Amazingly useful.

This PR makes the `autojump.sh` file more POSIX-compliant, which is useful in some OSs that link `/bin/sh` to secondary shells for performance improvements while still using `bash|zsh|...` as the default shell

References:
- https://wiki.ubuntu.com/DashAsBinSh
- padde/jump.vim#3
This change makes 'jo' command check command 'explorer.exe' existance and use it if available. Instead it uses default behaviour.

This is needed to make this command normally work in WSL (Windows Subsystem for Linux).

Closes #575 
