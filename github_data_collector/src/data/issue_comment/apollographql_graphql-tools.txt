<!--
  Thanks for filing a pull request on GraphQL Tools!

  Please look at the following checklist to ensure that your PR
  can be accepted quickly:
-->

The custom Date scalar example should convert the String value to a Number so that the value gets correctly converted to a Date object.

TODO:

- [X] If this PR is a new feature, reference an issue where a consensus about the design was reached (not necessary for small changes)
- [X] Make sure all of the significant new logic is covered by tests
- [X] Rebase your changes on master so that they can be merged easily
- [X] Make sure all tests and linter rules pass
- [X] Update CHANGELOG.md with your change. Include a description of your change, link to PR (always) and issue (if applicable). Add your CHANGELOG entry under vNEXT. Do not create a new version number for your change yourself.


typo in the word GraphiQL

<!--
  Thanks for filing a pull request on GraphQL Tools!

  Please look at the following checklist to ensure that your PR
  can be accepted quickly:
-->

TODO:

- [x] If this PR is a new feature, reference an issue where a consensus about the design was reached (not necessary for small changes)
- [x] Make sure all of the significant new logic is covered by tests
- [x] Rebase your changes on master so that they can be merged easily
- [x] Make sure all tests and linter rules pass
- [x] Update CHANGELOG.md with your change. Include a description of your change, link to PR (always) and issue (if applicable). Add your CHANGELOG entry under vNEXT. Do not create a new version number for your change yourself.


See discussion in: https://github.com/yaacovCR/graphql-tools-fork/issues/32.

PR #1206 will be updated to include v15 support when v15 is finalized.
If there is an enum with internal values, like e.g.

```javascript
const resolvers = {
  AllowedColor: {
    RED: '#f00',
    GREEN: '#0f0',
    BLUE: '#00f',
  }
};
```
(example taken from the [Apollo Docs](https://www.apollographql.com/docs/graphql-tools/scalars/#internal-values))

custom scalars will throw an error, if they aren't named the same way they are named in their corresponding exported scalar type object. So let's say, we are using graphql-type-json, then we can't name our scalar "Jayson" or anything different than "JSON".

I made [this codesandbox](https://codesandbox.io/s/enum-issue-yq0rl), just uncomment the section with the enum resolver to see the bug in action. Note: If you rename the scalar to "DateTime", it will work again.

Any ideas how to fix this problem quickly? At the moment I can only see two options, but none of them make me feel happy:
opt. 1: not using internal values like shown in the [Apollo Docs](https://www.apollographql.com/docs/graphql-tools/scalars/#internal-values)
opt. 2: not using my own names for scalars

Any help would be appreciated!
GraphiQL => GraphQL

<!--
  Thanks for filing a pull request on GraphQL Tools!

  Please look at the following checklist to ensure that your PR
  can be accepted quickly:
-->

TODO:

- [ ] If this PR is a new feature, reference an issue where a consensus about the design was reached (not necessary for small changes)
- [ ] Make sure all of the significant new logic is covered by tests
- [ ] Rebase your changes on master so that they can be merged easily
- [ ] Make sure all tests and linter rules pass
- [ ] Update CHANGELOG.md with your change. Include a description of your change, link to PR (always) and issue (if applicable). Add your CHANGELOG entry under vNEXT. Do not create a new version number for your change yourself.


The doc for data fetching (https://github.com/apollographql/graphql-tools/blob/84e77ac7d7e06f149019c5a42dd2e86907e27ac1/docs/source/connectors.md) is referencing to the repo apollostack/GitHunt-API which doesn't exist anymore.
dependencies:
    "graphql": "^14.5.8",
    "graphql-tools": "^4.0.6"
I'm getting `Unknown directive "deprecated"` when using the deprecated directive in an extend type and `mergeSchemas`. Just using `makeExecutableSchema` works fine.

```
const { mergeSchemas, makeExecutableSchema } = require('graphql-tools');

const chirpSchema = `
  type Chirp {
    id: ID!
    text: String
    authorId: ID!
    "works"
    foo: String! @deprecated(reason: "test")
  }

  type Query {
    chirpById(id: ID!): Chirp
    chirpsByAuthorId(authorId: ID!): [Chirp]
  }

  extend type Chirp {
    "breaks"
    bar: String @deprecated(reason: "test")
}
`

const authorSchema = `
  type User {
    id: ID!
    email: String
  }

  type Query {
    userById(id: ID!): User
  }
`

makeExecutableSchema({ typeDefs: chirpSchema }); // works
mergeSchemas({ schemas: [chirpSchema] }); // Error: Unknown directive "deprecated".
mergeSchemas({ schemas: [chirpSchema, authorSchema] }); // Error: Unknown directive "deprecated".
```

Hi everybody,

I'm having an issue when passing "previousContext.graphqlContext.Authorization" on my apollo server middleware that is mean to be deployed on a lambda function. 

I have tried using all these methods: https://www.apollographql.com/docs/graphql-tools/remote-schemas/ but any of them seems to work on my project. Is it possible you tell me what's wrong. 

`
"use strict";
const { ApolloServer } = require("apollo-server-lambda");
const { setContext } = require("apollo-link-context");
const {
    introspectSchema,
    makeRemoteExecutableSchema
  } = require("graphql-tools"),
  { createHttpLink } = require("apollo-link-http"),
  fetch = require("node-fetch");


  const http = new createHttpLink({ uri: 'https://rbmxmp6zyd.execute-api.ap-southeast-2.amazonaws.com/Prod/graphql/', fetch });

  const link = setContext((request, previousContext) => ({
    headers: {
      // 'Authorization': `${previousContext.graphqlContext.headers.Authorization}`,
      'Authorization': `${previousContext.graphqlContext.Authorization}`,
    }
  })).concat(http);



//GET REMOTE SCHEMA
const createServiceSchema = async () => {
  const schema = await introspectSchema(link);

  const executableSchema = makeRemoteExecutableSchema({
    schema,
    link,
  });

  return executableSchema
};
var createdSchemana = createServiceSchema();

// const server = new ApolloServer({ schema: createdSchemana, context: {headers: request ? request.headers : null} });
const server = new ApolloServer({ schema: createdSchemana });
exports.graphqlHandler = server.createHandler();
`

I will really appreciate your help.

Cheers

JC

`react-native: 0.61.2`

When I import `makeExecutableSchema` I get the following error:

```
"message": "TypeError: _1.extractExtensionDefinitions is not a function. (In '_1.extractExtensionDefinitions(astDocument)', '_1.extractExtensionDefinitions' is undefined)",
"stack": [
  {
    "functionName": "buildSchemaFromTypeDefinitions",
    "lineNumber": 24,
    "columnNumber": 55,
    "fileName": "/node_modules/graphql-tools/dist/generate/buildSchemaFromTypeDefinitions.js"
  },
  {
    "functionName": "makeExecutableSchema",
    "lineNumber": 26,
    "columnNumber": 59,
    "fileName": "/node_modules/graphql-tools/dist/makeExecutableSchema.js"
  },
  {
    "functionName": "setSchema",
    "lineNumber": 9,
    "columnNumber": 38,
    "fileName": "/app/graphql/config/mocks/schema.js"
  },
  {
    "functionName": "setApolloClientMock",
    "lineNumber": 8,
    "columnNumber": 31,
    "fileName": "/app/graphql/config/mocks/client.js"
  },
  {
    "functionName": "<global>",
    "lineNumber": 16,
    "columnNumber": 21,
    "fileName": "/app/components/App/App.js"
  },
  {
    "functionName": "loadModuleImplementation",
    "lineNumber": 322,
    "columnNumber": 6,
    "fileName": "/node_modules/metro/src/lib/polyfills/require.js"
  },
  {
    "functionName": "guardedLoadModule",
    "lineNumber": 201,
    "columnNumber": 45,
    "fileName": "/node_modules/metro/src/lib/polyfills/require.js"
  },
  {
    "functionName": "runUpdatedModule",
    "lineNumber": 657,
    "columnNumber": 17,
    "fileName": "/node_modules/metro/src/lib/polyfills/require.js"
  },
  {
    "functionName": "metroHotUpdateModule",
    "lineNumber": 533,
    "columnNumber": 8,
    "fileName": "/node_modules/metro/src/lib/polyfills/require.js"
  },
  {
    "functionName": "define",
    "lineNumber": 53,
    "columnNumber": 24,
    "fileName": "/node_modules/metro/src/lib/polyfills/require.js"
  },
  {
    "functionName": "global code",
    "lineNumber": 1,
    "columnNumber": 4,
    "fileName": "http://localhost:8081/app/graphql/config/mocks/typeDefs.bundle?platform=ios&dev=true&minify=false&modulesOnly=true&runModule=false&shallow=true"
  },
  {
    "functionName": null,
    "lineNumber": null,
    "columnNumber": null,
    "fileName": "[native code]"
  },
  {
    "functionName": "inject",
    "lineNumber": 62,
    "columnNumber": 35,
    "fileName": "/node_modules/metro/src/lib/bundle-modules/injectUpdate.js"
  },
  {
    "functionName": "forEach",
    "lineNumber": null,
    "columnNumber": null,
    "fileName": "[native code]"
  },
  {
    "functionName": "injectUpdate",
    "lineNumber": 71,
    "columnNumber": 26,
    "fileName": "/node_modules/metro/src/lib/bundle-modules/injectUpdate.js"
  },
  {
    "functionName": "on$argument_1",
    "lineNumber": 40,
    "columnNumber": 21,
    "fileName": "/node_modules/metro/src/lib/bundle-modules/HMRClient.js"
  },
  {
    "functionName": "emit",
    "lineNumber": 202,
    "columnNumber": 37,
    "fileName": "/node_modules/eventemitter3/index.js"
  },
  {
    "functionName": "_ws.onmessage",
    "lineNumber": 72,
    "columnNumber": 20,
    "fileName": "/node_modules/metro/src/lib/bundle-modules/WebSocketHMRClient.js"
  },
  {
    "functionName": "EventTarget.prototype.dispatchEvent",
    "lineNumber": 818,
    "columnNumber": 39,
    "fileName": "/node_modules/event-target-shim/dist/event-target-shim.js"
  },
  {
    "functionName": "_eventEmitter.addListener$argument_1",
    "lineNumber": 232,
    "columnNumber": 27,
    "fileName": "/node_modules/react-native/Libraries/WebSocket/WebSocket.js"
  },
  {
    "functionName": "emit",
    "lineNumber": 190,
    "columnNumber": 12,
    "fileName": "/node_modules/react-native/Libraries/vendor/emitter/EventEmitter.js"
  },
  {
    "functionName": "callFunctionReturnFlushedQueue",
    "lineNumber": null,
    "columnNumber": null,
    "fileName": "[native code]"
  }
]
}
```
