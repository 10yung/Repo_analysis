Some apps show up as "FocusProxy". The fix is described here: https://github.com/autokey/autokey/issues/113
- Fully moved to Python3
- Fixed COCOA-PyobjC wrong integration
- Fixed wrongful self-kill of MacOS X client
- Fixed SQLAlchemy inconsistency data types with the new library version
- Merge pull request #1 from jimmyyentran/master
- Merge pull request #2 from xamogast/master
Corrected 'too' to 'to.'
When running `selfstats --pactive`, I get the following output;

```
16 keystrokes in 8 key sequences, 8 clicks (8 excluding scroll), 3944 mouse movements

Total time active: 3m 34s

Processes sorted by activity:
1707650, 3m 19s
2556100, 3m 18s
2493928, 3m 7s
1576380, 3m 2s
12324066, 3m 1s
12258530, 3m 0s
399578, 3m 0s
7801186, 3m 0s
```

I unfortunately don't know my process name PIDs by heart, so it would be helpful to see their names as `chrome.exe`, for example. Is this expected behavior for Windows?
Selfspy crashes after I enter a password for my database with this stack : 
```
selfspy
Password: 
Traceback (most recent call last):
  File "/home/gagbo/.local/bin/selfspy", line 11, in <module>
    load_entry_point('selfspy==0.3.0', 'console_scripts', 'selfspy')()
  File "build/bdist.linux-x86_64/egg/selfspy/__init__.py", line 109, in main
  File "build/bdist.linux-x86_64/egg/selfspy/password_dialog.py", line 32, in get_password
  File "build/bdist.linux-x86_64/egg/selfspy/password_dialog.py", line 39, in get_user_password
  File "build/bdist.linux-x86_64/egg/selfspy/password_dialog.py", line 84, in get_tty_password
  File "build/bdist.linux-x86_64/egg/selfspy/__init__.py", line 89, in check_with_encrypter
  File "build/bdist.linux-x86_64/egg/selfspy/__init__.py", line 75, in make_encrypter
TypeError: new() takes at least 2 arguments (1 given)
```

Indeed, the Blowfish constructor is called with only 1 argument in code [currently](https://github.com/selfspy/selfspy/blob/a98a9c06d14b6f8b6ad76948ab75a2f09c89c578/selfspy/__init__.py#L75)

And from the help in a python interactive prompt there should be 2 arguments there :

```
Help on module Crypto.Cipher.Blowfish in Crypto.Cipher:

NAME
    Crypto.Cipher.Blowfish - Module's constants for the modes of operation supported with Blowf
ish:

FILE
    /home/gagbo/.local/lib/python2.7/site-packages/Crypto/Cipher/Blowfish.py

DESCRIPTION
    :var MODE_ECB: Electronic Code Book (ECB)
    :var MODE_CBC: Cipher-Block Chaining (CBC)
    :var MODE_CFB: Cipher FeedBack (CFB)
    :var MODE_OFB: Output FeedBack (OFB)
    :var MODE_CTR: CounTer Mode (CTR)
    :var MODE_OPENPGP:  OpenPGP Mode
    :var MODE_EAX: EAX Mode

FUNCTIONS
    new(key, mode, *args, **kwargs)
        Create a new Blowfish cipher
         currently
        :param key:
            The secret key to use in the symmetric cipher.
            Its length can vary from 5 to 56 bytes.
        :type key: byte string
        
        :param mode:
            The chaining mode to use for encryption or decryption.
        :type mode: One of the supported ``MODE_*`` constants
...
```

I only cloned the repo and used pip to install `Xlib` dependencies, then ran `python setup.py install --user`, trusting `requirements.txt`, but even after changing `pycrypto>=2.5` to `pycrypto==2.5` I still have the issue. (For the record, I have pycrypto 2.6 on a Fedora 28 machine)

Does anyone else manage to run selfspy with a password on DB ? Can I just change this call to encrypter according to #160 and everything else will work without issue ?
If you run selfstats right after installation it (logically) cannot find the database. It then proceeds to throw up all over the terminal. It should print an error message instead.
Added OpenBSD install instructions, and cleaned up the install docs a bit.
I have an issue using the --key-freqs command, I get a error saying 

`zlib.error: Error -3 while decompressing data: incorrect header check`

Whenever selfspy would crash (or even exit), it would leave behind the
lockfile, which is a problem in itself, which this doesn't fix. But at
least, we should be able to recover when a lockfile is left behind but
the actual PID file is missing.
papasmacbookpro:selfspy smorris$ sudo make install
Password:
mkdir -p /var/lib/selfspy
install selfspy/*.py /var/lib/selfspy
ln -s /var/lib/selfspy/__init__.py /usr/bin/selfspy
ln: /usr/bin/selfspy: Operation not permitted
make: *** [install] Error 1
-------------
papasmacbookpro:selfspy smorris$ ls -ld /usr/bin
drwxr-xr-x  1067 root  wheel  36278 Aug 31 02:04 /usr/bin
-------------
I think apple is restricting access to /usr/bin and wants people to use /usr/local/bin instead. I just installed there manually but I haven't tested.