Hello,

I have been using your website interface to graph my data but would like to switch over to graphing in R to take advantage of choosing some details, like the color of the plots. Is there a function to analyze the data with the median (instead of the default mean) in R? I can't seem to find it, if it's out there already!

Thanks for this wonderful resource!
Miwa


Hello,
Is there a way to add a darker average line for the multi-paired two group plot?

Thank you,
Ben
Hi,
I would like to include in the rawplot.ylabel special characters and chemical formulas. I have tried few approach but so far no lack.
do you have any suggestion?
thanks 
D
  
Hello,

The issue: I needed flexibility in the choice of colours for the raw data in an estimation plot AND a colour vector long enough to cover a number of data groups >11, the number of colours in the bigger RColorBrewer palettes. The following worked for me. In code file R/plot.R from GitHub, I replaced the original line 452,

`      ggplot2::scale_color_brewer(palette = palette) +
`

with

`    ggplot2::scale_colour_manual(values = rep(c("#70A4CE", "#70A4CE", "#CF955C", "#CF955C"), 3)) +
`

This was suitable for 12 data groups paired by color, alternating blue and dark orange as in the DABEST paper by Ho et al., Nature Methods, 2019. I'm running dabestr_0.2.2 from CRAN, and had to read in the (non-modified) plot_helpers.R and flat_violin.R files to make this work, in addition to the edited plot.R file.


Hi guys!

I'm currently changing some of my analysis for a publication using estimation statistics and estimation plots.
Firstly, it is fantastic!

I could use some help on two little issues, hope they are not naive enough (can't say I'm an R-expert).

1) I'm trying to use par(mfrow()) to plot multiple plots side-by-side but I've failed so far. Can't figure out why. Could you guys help me with this one?

2) The default color for the bootstrap sampling distribution in Gardner–Altman plots is grey and I can't find a way to change this. However, in Fig. 1e (Ho et al. 2019) it is red. Was it changed manually in another software? I read that color setting is an issue for v0.3.0, but if there is an alternative available, it would be of great help.

Thank you!
Substituted Swarmplot code to add function that plot points with add error bars (SEM or SD), intended for multilevel designs.
Hello!

I've been trying to add error bars to the individual points (for technical replicates in an experiment). It seems the plot function generates a ggplot2 object but it's not mantaining the original variable names maybe?

```
require(dabestr)
require(dplyr)
require(ggplot2)

GroupCtrl = rnorm(n = 5, mean = 5000000, sd = 500000)
GroupTest = rnorm(n = 5, mean = 4500000, sd = 450000)

SimulatedData = data.frame(Group = factor(c(rep(0,15),rep(1,15))),
                      Replicate = factor(rep(rep(c(1,2,3,4,5), each = 3),2)),
                      PeakArea = c(sapply(GroupCtrl, function(x){x + rnorm(n = 1, mean = 0, sd = 35000)}),
                                     sapply(GroupCtrl, function(x){x + rnorm(n = 1, mean = 0, sd = 45000)}),
                                     sapply(GroupCtrl, function(x){x + rnorm(n = 1, mean = 0, sd = 15000)}),
                                     sapply(GroupTest, function(x){x + rnorm(n = 1, mean = 0, sd = 25000)}),
                                     sapply(GroupTest, function(x){x + rnorm(n = 1, mean = 0, sd = 20000)}),
                                     sapply(GroupTest, function(x){x + rnorm(n = 1, mean = 0, sd = 30000)})))
levels(SimulatedData$Group) = c('Control', 'Treatment')

SEM = function(x){return(sd(x)/sqrt(length(x)))}

GroupedData = SimulatedData %>% group_by(.dots = c('Group','Replicate')) %>% summarize(AvrgPA = mean(PeakArea),SEM = SEM(PeakArea))
unpaired_mean_diff <- dabest(GroupedData, Group, AvrgPA,
                             idx = c("Control", "Treatment"),
                             paired = FALSE) 

p = plot(unpaired_mean_diff) 
p
```


So far so good, but if I try to add error bars..

`
p + geom_pointrange(aes(ymin=AvrgPA-SEM, ymax=AvrgPA+SEM))
`
> Error in FUN(X[[i]], ...) : object 'AvrgPA' not found

Any workaround this?

Thank you so much!

I followed the code in vignette and got this error when I tried to plot. I was able to get dabest.object but can't plot it. The development version also has this issue. Any advice? Thanks!
I appear to have sorted out issues related #36 but have found a new issue (in v. 0.2.1.9). When doing a multi-paired plot, if a color column is passed to the plot function, there is no way to change the palette.

Eyeball test says that plot.R should have `ggplot2::scale_color_brewer(palette = palette) +` on line 410.

Reprex (designed for consistency with my current real data):
```
library(dabestr)
library(tidyverse)
demo_data <- data.frame(id = rep(seq(1:32), each = 2),
                        group = rep(c("amber", "blue"), 
                                    times = c(34, 30)),
                        phase = rep(c("baseline", "ptx"),
                                    times = 32, each = 1),
                        score = rnorm(64, mean = 10, sd = 2),
                        sex = rep(c("Male", "Female"),
                                  times = 16, each = 2))

demo_data <- demo_data %>%
  unite(group, c("group", "phase"), sep = "_")


demo_dabest <- dabest(demo_data,
                      group, score,
                      idx = list(c("blue_baseline", "blue_ptx"),
                                 c("amber_baseline", "amber_ptx")),
                      paired = TRUE,
                      id.col = id)

# Black and white
plot(demo_dabest)

# Set1 colors
plot(demo_dabest,
     color.column = sex)

# Should be Dark1, but is in fact Set1
plot(demo_dabest,
     color.column = sex,
     palette = "Dark1")
```

Love the package! It makes a comparison in a paper I'm contributing _really_ easy to visualize. 

I would like to use the Bayesian bootstrap so as to be consistent with the other analytics in the paper. In the context of the plot/data, the difference between the methods will be indistinguishable, but statistical reviewers would know it's technically incorrect. Rasmus Bååth has a package already for this at https://github.com/rasmusab/bayesboot and probably there are some others that might be easy to integrate. 

Thanks for considering this!