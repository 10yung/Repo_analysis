With `mntutil_posExt1010` you are providing the 3D standard coordinates for a 10% electrode placement system. I am trying to calculate the 10% positions myself and reading the code in this toolbox, I wonder where the following angles (in 90/4Â°)  are coming from:

https://github.com/bbci/bbci_public/blob/d6bf0e442d58d7a6f04952660712b617377b425e/visualization/private/mntutil_posExt1010.m#L32-L72

Were they computed using a different function? Or are these factors somehow obvious from the rules of the 10% placement system and I just don't understand it?

Furthermore, what coordinate system is this? It seems to be spherical with `ea` being the azimuthal angle and `eb` being the polar angle, but I cannot make sense of their conversion to xyz with the `abr2xyz` function:
https://github.com/bbci/bbci_public/blob/48fab93b7b7746b53eb382d82fef975c5f63d0a6/visualization/private/mntutil_posExt1010.m#L85-L94

... because for spherical coordinates, the conversion would rather look like:
```
x = r * sin(polar) * cos(azimuthal)
y = r * sin(polar) * sin(azimuthal)
z = r * cos(polar)
```

 A brief explanation would be appreciated! I have read the [5% article by oostenveld]() as a reference.

Selection inversion (using 'not') is faulty (returns ALL classes) if classes are given as a vector of indices and not as strings
With the default value 0 for 'LegendPos', Matlab (version R2016b) returns this error:

Using an integer to specify the legend location is not supported. Specify the legend location with respect to the axes using the 'Location' parameter.

Is this a Matlab version issue?
If mnt has no field 'box' then the second output argument is not produced. However, the function grid_plot always expects this second output in line 158. This leads to an error if field 'box' does not exist.
fix fastICA call when using epoched data with N ica_components < N channels
I am using BCI competition III data set II for P300 speller data. 
How can i use this toolbox for 'Subject_A_Train.mat' file which is available online?
added functions for labstreaming layer (lsl) online toolbox support for feedback 
In order to facilitate using BBCI toolbox for offline analysis, I'm sharing the script I use to convert data recorded at our lab using other frameworks to convenient BBCI data format saved in .mat extension, the current scripts convert files created by the following software packages:
- BCI2000
- OpenVibe
the files you need to use proc_MARA moved to a new website
https://irenne.github.io/artifacts/
this information should be included into the MARA environment
Unify the usage of the functions

proc_cspAuto (or the new proc_csp),
proc_spoc,
proc_cspoc,
proc_fastICA,
proc_ssd,
proc_pca

such that their input and output is consistent.
