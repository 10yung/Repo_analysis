These docs show how to add full control for GS:

https://jenkins-x.io/docs/managing-jx/common-tasks/storage/#gke-storage-permissions

However, the path to doing this from the start using JX tools seems to be:

jx create cluster gke --skip-installation --enhanced-scopes -n jxtest2

However, to determine that takes a code deep dive which appears to be here:

https://github.com/jenkins-x/jx/blob/master/pkg/cmd/create/create_cluster_gke.go

```
if o.Flags.EnhancedScopes {
		o.Flags.Scopes = []string{"https://www.googleapis.com/auth/cloud-platform",
			"https://www.googleapis.com/auth/compute",
			"https://www.googleapis.com/auth/devstorage.full_control",
			"https://www.googleapis.com/auth/service.management",
			"https://www.googleapis.com/auth/servicecontrol",
			"https://www.googleapis.com/auth/logging.write",
			"https://www.googleapis.com/auth/monitoring"}
	}
```

However, the naming under the hood in GC seems to be different maybe this is it?? I see full control... but devstorage? Needs to be more clear in the docs.
https://jenkins-x.io/docs/getting-started/setup/boot/

In a github context "owner" has a meaning as the repository owner. 

cluster:
  environmentGitOwner: myorg

This name is ambiguous and immediately, IMO, implies the user that owns the repository. Not the org. The message in the Help is not better.

> Jenkins X leverages GitOps to track and control what gets deployed into environments.  This requires a Git repository per environment. This question is asking for the Git Owner where these repositories will live.


This message clearly knows it's in a Git context, but still uses the "owner" name when it's an org that is most likely meant and isn't deconflicting from the repository "owner" which is usually a user account.

More information would make this immediately clear.

> Jenkins X leverages GitOps to track and control what gets deployed into environments.  This requires a Git repository per environment. This question is asking for the Git Owner where these repositories will live. This is either an org or user account e.g. github.com/OWNER

### Summary 
Dev/staging/production environment build fails with `jx boot` setup usage.

### Steps to reproduce the behavior
1. Create private clone of the `jenkins-x-boot-config` repo
2. Setup credentials by using `jx step verify preinstall`
3. Update `jx-requirements.yml` with additional configuration. The full version of the file:
```
autoUpdate:
  enabled: false
  schedule: ""
bootConfigURL: https://github.com/geeoz/environment-razomer-dev
cluster:
  clusterName: geeoz
  devEnvApprovers:
  - alexvolsh
  - sergevoloshyn
  environmentGitOwner: geeoz
  gitKind: github
  gitName: github
  gitServer: https://github.com
  namespace: razomer
  provider: kubernetes
  registry: https://docker.geeoz.com
environments:
- ingress:
    domain: razomer.com
    externalDNS: false
    namespaceSubDomain: .
    tls:
      email: alex@geeoz.com
      enabled: true
      production: false
  key: dev
  repository: environment-razomer-dev
- ingress:
    domain: razomer.com
    externalDNS: false
    namespaceSubDomain: ""
    tls:
      email: alex@geeoz.com
      enabled: true
      production: false
  key: staging
  repository: environment-razomer-staging
- ingress:
    domain: razomer.com
    externalDNS: false
    namespaceSubDomain: ""
    tls:
      email: alex@geeoz.com
      enabled: true
      production: false
  key: production
  repository: environment-razomer-production
gitops: true
ingress:
  domain: razomer.com
  externalDNS: false
  namespaceSubDomain: .
  tls:
    email: alex@geeoz.com
    enabled: true
    production: false
kaniko: true
repository: none
secretStorage: local
storage:
  backup:
    enabled: false
    url: ""
  logs:
    enabled: false
    url: ""
  reports:
    enabled: false
    url: ""
  repository:
    enabled: false
    url: ""
vault: {}
velero:
  schedule: ""
  ttl: ""
versionStream:
  ref: master
  url: https://github.com/jenkins-x/jenkins-x-versions.git
webhook: prow
```
4. Run `jx boot` command
Successful command result log:
```
Git tokens seem to be setup correctly
Installation is currently looking: GOOD
```

File `jx-requirements.yml` was updated with:
```
versionStream:
  ref: v1.0.307
```
5. Push changes of the `jx-requirements.yml` file to the GitHub private dev repo (https://github.com/geeoz/environment-razomer-dev). Example changes:
```
versionStream:
  ref: master
```

### Expected behavior

Build start and finish successfully.

### Actual behavior

Build creates multiple pods that are still running after building failure.

`kubectl get pod` returns:

```
NAME                                                                    READY   STATUS      RESTARTS   AGE
crier-76bb69cdcc-lrwlw                                                  1/1     Running     0          12m
deck-6d894bd6c-5p74w                                                    1/1     Running     0          12m
deck-6d894bd6c-mc5xk                                                    1/1     Running     0          12m
geeoz-environment-razomer-dev-m-7dp6m-1-release-2cwzj-pod-0380f9        19/19   Running     0          3m27s
geeoz-environment-razomer-dev-m-7dp6m-1-release-2cwzj-pod-322d4a        0/19    Completed   0          3m27s
geeoz-environment-razomer-dev-m-7dp6m-1-release-2cwzj-pod-783140        19/19   Running     0          3m27s
geeoz-environment-razomer-dev-m-7dp6m-1-release-5hgsq-pod-4a942d        19/19   Running     0          3m27s
geeoz-environment-razomer-dev-m-7dp6m-1-release-5hgsq-pod-660c08        0/19    Completed   0          3m26s
geeoz-environment-razomer-dev-m-7dp6m-1-release-5hgsq-pod-e5acc6        19/19   Running     0          3m27s
geeoz-environment-razomer-dev-m-7dp6m-1-release-h42q8-pod-44fad9        19/19   Running     0          3m27s
geeoz-environment-razomer-dev-m-7dp6m-1-release-h42q8-pod-d5983e        0/19    Completed   0          3m27s
geeoz-environment-razomer-dev-m-7dp6m-1-release-h42q8-pod-f29ad5        19/19   Running     0          3m27s
geeoz-environment-razomer-dev-m-gkt22-1-release-cccjk-pod-11fc5d        0/19    Completed   0          4m16s
geeoz-environment-razomer-dev-m-gkt22-1-release-cccjk-pod-5aea96        19/19   Running     0          4m17s
geeoz-environment-razomer-dev-m-gkt22-1-release-cccjk-pod-6254ed        19/19   Running     0          4m16s
geeoz-environment-razomer-dev-m-gkt22-1-release-hn9vb-pod-15f62d        19/19   Running     0          4m17s
geeoz-environment-razomer-dev-m-gkt22-1-release-hn9vb-pod-4f0b0d        19/19   Running     0          4m17s
geeoz-environment-razomer-dev-m-gkt22-1-release-hn9vb-pod-c2ca7a        6/19    Running     0          4m17s
geeoz-environment-razomer-dev-m-gkt22-1-release-tdzm9-pod-0e68a2        0/19    Completed   0          4m17s
geeoz-environment-razomer-dev-m-gkt22-1-release-tdzm9-pod-8f3f7b        19/19   Running     0          4m17s
geeoz-environment-razomer-dev-m-gkt22-1-release-tdzm9-pod-ef1472        19/19   Running     0          4m17s
hook-68777d88c7-9rxhn                                                   1/1     Running     0          12m
hook-68777d88c7-r784q                                                   1/1     Running     0          12m
horologium-7ffb6d7cfd-5cv4h                                             1/1     Running     0          12m
jenkins-x-chartmuseum-5459d54d46-mrzhr                                  1/1     Running     0          74s
jenkins-x-controllerbuild-84d8857865-589sn                              1/1     Running     0          72s
jenkins-x-controllerrole-7c545585cf-wr8gv                               1/1     Running     0          12m
jenkins-x-gcactivities-1579359600-25c7d                                 0/1     Completed   0          4m18s
jenkins-x-gcpods-1579359600-g9xsg                                       0/1     Completed   0          4m18s
jenkins-x-gcpreviews-1579359600-d8cxc                                   0/1     Completed   0          4m18s
jenkins-x-heapster-59ddd47fc9-bhlsh                                     2/2     Running     0          33s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-5s9sr-pod-021e27   5/5     Running     0          5m3s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-5s9sr-pod-022f4b   5/5     Running     0          5m3s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-5s9sr-pod-2db1ce   0/5     Completed   0          5m3s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-kwh7k-pod-45b128   0/5     Completed   0          5m3s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-kwh7k-pod-97a946   5/5     Running     0          5m3s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-kwh7k-pod-cbcf13   5/5     Running     0          5m3s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-p55pj-pod-022e8b   5/5     Running     0          5m2s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-p55pj-pod-abd9ff   5/5     Running     0          5m2s
meta-geeoz-environment-razomer-jtkdw-1-meta-pipeline-p55pj-pod-b368fd   0/5     Completed   0          5m2s
pipeline-599c968cc5-cnjhn                                               1/1     Running     0          12m
pipelinerunner-7b6dcb5956-8zstc                                         1/1     Running     0          12m
tekton-pipelines-controller-569d5f977d-kfxcv                            1/1     Running     0          12m
tide-5f6df69548-4hl9m                                                   1/1     Running     0          12m
```

### Jx version

The output of `jx version` is:

```
NAME               VERSION
jx                 2.0.1139
Kubernetes cluster v1.15.6
kubectl            v1.17.1
helm client        v2.16.1+gbbdfe5e
helm server        v2.16.1+gbbdfe5e
git                2.25.0
Operating System   Mac OS X 10.15.3 build 19D62e


verifying packages
```

### Jenkins type

<!--
Select which installation type are you using. 
-->
- [x] Serverless Jenkins X Pipelines (Tekton + Prow)
- [ ] Classic Jenkins

### Kubernetes cluster

<!--
What kind of Kubernetes cluster are you using & how did you create it?
-->
Self-created with kubespray

### Operating system / Environment

<!--
In which environment are you running the jx CLI?
-->
Running the CLI on my MacBook Pro (OS X)
I'm seeing this error:
```
Showing logs for build dev1/environment-pr-470-6-lh-bdd-ghe-dev/pr-1 #1 promotion-build stage pr-checks and container step-verify-parameters
error: resolve the secrets URIs: replacing secrets URIs: replacing vault paths in adminUser:
  password: local:pr-470-6-lh-bdd-ghe/adminUser:password
  username: admin
enableDocker: false
pipelineUser:
  email: jenkins-x@googlegroups.com
  token: local:pr-470-6-lh-bdd-ghe/pipelineUser:token
  username: dev1
prow:
  hmacToken: local:pr-470-6-lh-bdd-ghe/prow:hmacToken
: unable to find "password" in secret at "pr-470-6-lh-bdd-ghe/adminUser"
```

That's on a PR to the dev env.

cc @ccojocar - any ideas?
### Summary 
Prerequisites: `jx-app-sso` installed in cluster.

Deploy an application to staging with the following SSO:
```
apiVersion: "jenkins.io/v1"
kind: "SSO"
metadata:
  name: "sso-{{ .Values.service.name }}"
spec:
  oidcIssuerUrl: {{ .Values.oidcIssuerUrl | quote }}
  upstreamService: {{ .Values.service.name | quote }}
  forwardToken: true
  domain: {{ .Values.domain | quote }}
  certIssuerName: "letsencrypt-prod"
  urlTemplate: {{ .Values.urlTemplate | quote }}
  cookieSpec:
    name: "sso-{{ .Values.service.name }}"
    expire: "168h"
    refresh: "60m"
    secure: true
    httpOnly: true
  proxyImage: "quay.io/pusher/oauth2_proxy"
  proxyImageTag: "v3.1.0"
  proxyResources:
    limits:
      cpu: 100m
      memory: 256Mi
    requests:
      cpu: 80m
      memory: 128Mi
```
and this config included in values.yaml:
```
domain: "kill-9.uk"
oidcIssuerUrl: "https://dex-jx.kill-9.uk"
urlTemplate: "{{.Service}}-{{.Namespace}}.{{.Domain}}"
```

The service is deployed correctly.

The sso-operator service creates an sso-proxy instance in staging.

An Ingress is created in staging, however it never becomes ready, remaining in state `Waiting for CertificateRequest "tls-kill-9-uk-p-2429289759" to complete`.

Cert-manager reports the following:
```
I0117 14:02:47.585267       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx-staging/test317"
I0117 14:02:47.593851       1 controller.go:129] cert-manager/controller/certificates "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p"
I0117 14:02:47.594100       1 sync.go:227] cert-manager/controller/certificates "level"=0 "msg"="existing private key data is invalid, generating a new private key" "related_resource_kind"="Secret" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Certificate" "resource_name"="tls-kill-9-uk-p" "resource_namespace"="jx-staging"
I0117 14:02:47.595349       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx-staging/test317"
I0117 14:02:47.595448       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx-staging/test317"
I0117 14:02:47.595546       1 sync.go:163] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate already exists for ingress resource, ensuring it is up to date" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:02:47.595612       1 sync.go:176] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate resource is already up to date for ingress" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:02:47.595679       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx-staging/test317"
I0117 14:02:47.680532       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx-staging/test317"
I0117 14:02:47.680794       1 sync.go:163] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate already exists for ingress resource, ensuring it is up to date" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:02:47.680877       1 sync.go:176] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate resource is already up to date for ingress" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:02:47.680944       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx-staging/test317"
E0117 14:02:47.736061       1 pki.go:128] cert-manager/controller/certificates "msg"="error decoding x509 certificate" "error"="error decoding cert PEM block" "related_resource_kind"="Secret" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Certificate" "resource_name"="tls-kill-9-uk-p" "resource_namespace"="jx-staging" "secret_key"="tls.crt"
I0117 14:02:47.736944       1 conditions.go:155] Setting lastTransitionTime for Certificate "tls-kill-9-uk-p" condition "Ready" to 2020-01-17 14:02:47.736934192 +0000 UTC m=+13582.653862232
I0117 14:02:47.744487       1 controller.go:135] cert-manager/controller/certificates "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p"
I0117 14:02:47.744667       1 controller.go:129] cert-manager/controller/certificates "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p"
I0117 14:02:47.744514       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx-staging/test317"
I0117 14:02:47.744886       1 sync.go:163] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate already exists for ingress resource, ensuring it is up to date" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:02:47.744932       1 sync.go:176] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate resource is already up to date for ingress" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:02:47.744956       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx-staging/test317"
I0117 14:02:47.745287       1 sync.go:361] cert-manager/controller/certificates "level"=0 "msg"="no existing CertificateRequest resource exists, creating new request..." "related_resource_kind"="Secret" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Certificate" "resource_name"="tls-kill-9-uk-p" "resource_namespace"="jx-staging"
I0117 14:02:47.752803       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-acme "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.753019       1 conditions.go:200] Setting lastTransitionTime for CertificateRequest "tls-kill-9-uk-p-2429289759" condition "Ready" to 2020-01-17 14:02:47.753012852 +0000 UTC m=+13582.669940834
I0117 14:02:47.753684       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-ca "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.753843       1 conditions.go:200] Setting lastTransitionTime for CertificateRequest "tls-kill-9-uk-p-2429289759" condition "Ready" to 2020-01-17 14:02:47.753837526 +0000 UTC m=+13582.670765507
I0117 14:02:47.754119       1 sync.go:373] cert-manager/controller/certificates "level"=0 "msg"="created certificate request" "related_resource_kind"="Secret" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Certificate" "resource_name"="tls-kill-9-uk-p" "resource_namespace"="jx-staging" "request_name"="tls-kill-9-uk-p-2429289759"
E0117 14:02:47.754302       1 pki.go:128] cert-manager/controller/certificates "msg"="error decoding x509 certificate" "error"="error decoding cert PEM block" "related_resource_kind"="Secret" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Certificate" "resource_name"="tls-kill-9-uk-p" "resource_namespace"="jx-staging" "secret_key"="tls.crt"
I0117 14:02:47.754384       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-selfsigned "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.754473       1 conditions.go:200] Setting lastTransitionTime for CertificateRequest "tls-kill-9-uk-p-2429289759" condition "Ready" to 2020-01-17 14:02:47.754469103 +0000 UTC m=+13582.671397102
I0117 14:02:47.754771       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-vault "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.754831       1 conditions.go:200] Setting lastTransitionTime for CertificateRequest "tls-kill-9-uk-p-2429289759" condition "Ready" to 2020-01-17 14:02:47.754828288 +0000 UTC m=+13582.671756278
I0117 14:02:47.754982       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-venafi "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.755026       1 conditions.go:200] Setting lastTransitionTime for CertificateRequest "tls-kill-9-uk-p-2429289759" condition "Ready" to 2020-01-17 14:02:47.755007742 +0000 UTC m=+13582.671935733
E0117 14:02:47.772142       1 controller.go:131] cert-manager/controller/certificaterequests-issuer-vault "msg"="re-queuing item  due to error processing" "error"="Operation cannot be fulfilled on certificaterequests.cert-manager.io \"tls-kill-9-uk-p-2429289759\": the object has been modified; please apply your changes to the latest version and try again" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.772188       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-vault "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.772304       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-vault "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.772545       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-acme "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.772579       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-acme "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.772753       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-acme "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
E0117 14:02:47.773062       1 controller.go:131] cert-manager/controller/certificaterequests-issuer-ca "msg"="re-queuing item  due to error processing" "error"="Operation cannot be fulfilled on certificaterequests.cert-manager.io \"tls-kill-9-uk-p-2429289759\": the object has been modified; please apply your changes to the latest version and try again" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.773104       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-ca "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.773207       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-ca "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.773967       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx-staging/test317"
I0117 14:02:47.774088       1 sync.go:163] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate already exists for ingress resource, ensuring it is up to date" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:02:47.774205       1 sync.go:176] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate resource is already up to date for ingress" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:02:47.774240       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx-staging/test317"
E0117 14:02:47.776691       1 controller.go:131] cert-manager/controller/certificaterequests-issuer-selfsigned "msg"="re-queuing item  due to error processing" "error"="Operation cannot be fulfilled on certificaterequests.cert-manager.io \"tls-kill-9-uk-p-2429289759\": the object has been modified; please apply your changes to the latest version and try again" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.776734       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-selfsigned "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.776827       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-selfsigned "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.776958       1 controller.go:135] cert-manager/controller/certificates "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p"
I0117 14:02:47.777123       1 controller.go:129] cert-manager/controller/certificates "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p"
E0117 14:02:47.777358       1 controller.go:131] cert-manager/controller/certificaterequests-issuer-venafi "msg"="re-queuing item  due to error processing" "error"="Operation cannot be fulfilled on certificaterequests.cert-manager.io \"tls-kill-9-uk-p-2429289759\": the object has been modified; please apply your changes to the latest version and try again" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.777391       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-venafi "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.777816       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-venafi "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:47.777970       1 sync.go:379] cert-manager/controller/certificates "level"=0 "msg"="validating existing CSR data" "related_resource_kind"="CertificateRequest" "related_resource_name"="tls-kill-9-uk-p-2429289759" "related_resource_namespace"="jx-staging" "resource_kind"="Certificate" "resource_name"="tls-kill-9-uk-p" "resource_namespace"="jx-staging"
I0117 14:02:47.778192       1 sync.go:479] cert-manager/controller/certificates "level"=0 "msg"="CertificateRequest is not in a final state, waiting until CertificateRequest is complete" "related_resource_kind"="CertificateRequest" "related_resource_name"="tls-kill-9-uk-p-2429289759" "related_resource_namespace"="jx-staging" "resource_kind"="Certificate" "resource_name"="tls-kill-9-uk-p" "resource_namespace"="jx-staging" "state"="Pending"
E0117 14:02:47.778376       1 pki.go:128] cert-manager/controller/certificates "msg"="error decoding x509 certificate" "error"="error decoding cert PEM block" "related_resource_kind"="Secret" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Certificate" "resource_name"="tls-kill-9-uk-p" "resource_namespace"="jx-staging" "secret_key"="tls.crt"
I0117 14:02:47.778525       1 controller.go:135] cert-manager/controller/certificates "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p"
I0117 14:02:52.772386       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-vault "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:52.772537       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-vault "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:52.773261       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-ca "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:52.773490       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-ca "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:52.776939       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-selfsigned "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:52.777114       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-selfsigned "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:52.777647       1 controller.go:129] cert-manager/controller/certificaterequests-issuer-venafi "level"=0 "msg"="syncing item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:02:52.777789       1 controller.go:135] cert-manager/controller/certificaterequests-issuer-venafi "level"=0 "msg"="finished processing work item" "key"="jx-staging/tls-kill-9-uk-p-2429289759"
I0117 14:03:23.755299       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx-staging/test317"
I0117 14:03:23.755392       1 sync.go:163] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate already exists for ingress resource, ensuring it is up to date" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:03:23.755480       1 sync.go:176] cert-manager/controller/ingress-shim "level"=0 "msg"="certificate resource is already up to date for ingress" "related_resource_kind"="Certificate" "related_resource_name"="tls-kill-9-uk-p" "related_resource_namespace"="jx-staging" "resource_kind"="Ingress" "resource_name"="test317" "resource_namespace"="jx-staging"
I0117 14:03:23.755682       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx-staging/test317"
```

The ingress-controllers report:
```
I0117 14:02:47.586002       6 event.go:255] Event(v1.ObjectReference{Kind:"Ingress", Namespace:"jx-staging", Name:"test317", UID:"0a841ffd-3932-11ea-92b4-42010a84013b", APIVersion:"networking.k8s.io/v1beta1", ResourceVersion:"6301249", FieldPath:""}): type: 'Normal' reason: 'CREATE' Ingress jx-staging/test317
W0117 14:02:47.586164       6 backend_ssl.go:46] Error obtaining X.509 certificate: unexpected error creating SSL Cert: no valid PEM formatted block found
I0117 14:02:47.681183       6 event.go:255] Event(v1.ObjectReference{Kind:"Ingress", Namespace:"jx-staging", Name:"test317", UID:"0a841ffd-3932-11ea-92b4-42010a84013b", APIVersion:"networking.k8s.io/v1beta1", ResourceVersion:"6301252", FieldPath:""}): type: 'Normal' reason: 'UPDATE' Ingress jx-staging/test317
W0117 14:02:47.681756       6 backend_ssl.go:46] Error obtaining X.509 certificate: unexpected error creating SSL Cert: no valid PEM formatted block found
I0117 14:02:47.733864       6 store.go:446] secret jx-staging/tls-kill-9-uk-p was updated and it is used in ingress annotations. Parsing...
W0117 14:02:47.734308       6 backend_ssl.go:46] Error obtaining X.509 certificate: unexpected error creating SSL Cert: no certificate PEM data found, make sure certificate content starts with 'BEGIN CERTIFICATE'
W0117 14:02:48.329042       6 controller.go:920] Service "jx-staging/test317" does not have any active Endpoint.
W0117 14:02:48.329069       6 controller.go:920] Service "jx-staging/sso-test317" does not have any active Endpoint.
W0117 14:02:48.329142       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
I0117 14:02:48.329211       6 controller.go:134] Configuration changes detected, backend reload required.
I0117 14:02:48.435606       6 controller.go:150] Backend successfully reloaded.
10.20.3.1 - - [17/Jan/2020:14:02:50 +0000] "GET /.well-known/openid-configuration HTTP/2.0" 200 312 "-" "Go-http-client/2.0" 63 0.001 [jx-dex-80] [] 10.20.3.89:8080 749 0.001 200 62cb48106e13745d7c3238c11be238c7
W0117 14:02:51.662451       6 controller.go:920] Service "jx-staging/test317" does not have any active Endpoint.
W0117 14:02:51.662483       6 controller.go:920] Service "jx-staging/sso-test317" does not have any active Endpoint.
W0117 14:02:51.662544       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
W0117 14:02:54.995854       6 controller.go:920] Service "jx-staging/sso-test317" does not have any active Endpoint.
W0117 14:02:54.996063       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
W0117 14:02:58.329059       6 controller.go:920] Service "jx-staging/sso-test317" does not have any active Endpoint.
W0117 14:02:58.329129       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
I0117 14:03:23.750324       6 status.go:287] updating Ingress jx-staging/test317 status from [] to [{104.155.33.132 }]
W0117 14:03:23.756095       6 backend_ssl.go:46] Error obtaining X.509 certificate: unexpected error creating SSL Cert: no certificate PEM data found, make sure certificate content starts with 'BEGIN CERTIFICATE'
I0117 14:03:23.756189       6 event.go:255] Event(v1.ObjectReference{Kind:"Ingress", Namespace:"jx-staging", Name:"test317", UID:"0a841ffd-3932-11ea-92b4-42010a84013b", APIVersion:"networking.k8s.io/v1beta1", ResourceVersion:"6301480", FieldPath:""}): type: 'Normal' reason: 'UPDATE' Ingress jx-staging/test317
W0117 14:03:23.756509       6 controller.go:920] Service "jx-staging/sso-test317" does not have any active Endpoint.
W0117 14:03:23.756681       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
W0117 14:03:27.995052       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
W0117 14:03:31.328530       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
W0117 14:03:41.179553       6 controller.go:920] Service "jx-staging/sso-test317" does not have any active Endpoint.
W0117 14:03:41.179871       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
W0117 14:03:44.513095       6 controller.go:920] Service "jx-staging/sso-test317" does not have any active Endpoint.
W0117 14:03:44.513325       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
W0117 14:04:21.624231       6 controller.go:1125] Error getting SSL certificate "jx-staging/tls-kill-9-uk-p": local SSL certificate jx-staging/tls-kill-9-uk-p was not found. Using default certificate
```

Both are complaining about PEM issues.

The Ingress is actually wired up, but using the default K8S dummy certificate.
Because a browser window caches wildcard certificates, it is possible to circumvent this error by visiting one of the jx services prior to accessing the URL of this service which skips the browser TLS error and shows that the service is indeed exposed via insecure TLS cert and authenticated via the SSO proxy.

### Jx version

The output of `jx version` is:

```
x                 2.0.1133
Kubernetes cluster v1.13.11-gke.14
kubectl            v1.17.0
helm client        Client: v2.14.0+g05811b8
git                2.21.0
Operating System   Mac OS X 10.15.2 build 19C57
```

### Jenkins type

<!--
Select which installation type are you using. 
-->
- [x] Serverless Jenkins X Pipelines (Tekton + Prow) - Boot
- [ ] Classic Jenkins


### Summary 
Cannot run `jx create vault` on an existing jenkins x installation.

### Steps to reproduce the behavior

```sh
AWS_DEFAULT_REGION=eu-west-2 jx create vault jx-vault --aws-access-key-id $AWS_ACCESS_KEY_ID --aws-secret-access-key $AWS_SECRET_ACCESS_KEY --cluster-name fb -n jx  --aws-s3-region=eu-west-2 --aws-auto-create=true --aws-kms-region=eu-west-2  --aws-dynamodb-region=eu-west-2 --verbose
```

### Expected behavior
Vault being created successfully

### Actual behavior
```
DEBUG: vault jx-vault not found in namespace jx, err is the server could not find the requested resource (get vaults.vault.banzaicloud.com jx-vault)
DEBUG: Current configuration dir: /home/victor/.jx
DEBUG: VersionRepository: https://github.com/jenkins-x/jenkins-x-versions.git git ref: master
DEBUG: ? A local Jenkins X versions repository already exists, pulling the latest: Yes
DEBUG: Created service account 'jx-vault-auth-sa' for Vault authentication
panic: runtime error: invalid memory address or nil pointer dereference
[signal SIGSEGV: segmentation violation code=0x1 addr=0x68 pc=0x2cc2a77]

goroutine 1 [running]:
github.com/jenkins-x/jx/pkg/vault/create.(*defaultVaultCreator).applyDefaultRegionIfEmpty(0xa5b9d00, 0x0, 0xc000050013, 0x9)
	/workspace/source/pkg/vault/create/create.go:440 +0x37
github.com/jenkins-x/jx/pkg/vault/create.(*defaultVaultCreator).vaultAWSConfig(0xa5b9d00, 0xc0007fd880, 0x7ffe406ce00c, 0x8, 0x7ffe406ce08e, 0x2, 0x7ffe406ce094, 0x2, 0x0, 0x0, ...)
	/workspace/source/pkg/vault/create/create.go:304 +0xa4
github.com/jenkins-x/jx/pkg/vault/create.(*defaultVaultCreator).setCloudProviderSpecificSettings(0xa5b9d00, 0xc0007fd880, 0x7ffe406ce00c, 0x8, 0x7ffe406ce08e, 0x2, 0x7ffe406ce094, 0x2, 0x0, 0x0, ...)
	/workspace/source/pkg/vault/create/create.go:216 +0xdc
github.com/jenkins-x/jx/pkg/vault/create.(*defaultVaultCreator).CreateOrUpdateVault(0xa5b9d00, 0x7ffe406ce00c, 0x8, 0x7ffe406ce08e, 0x2, 0x7ffe406ce094, 0x2, 0x0, 0x0, 0xc0007cf638, ...)
	/workspace/source/pkg/vault/create/create.go:154 +0x357
github.com/jenkins-x/jx/pkg/cmd/create/vault.(*CreateVaultOptions).Run(0xc00000a780, 0x0, 0x0)
	/workspace/source/pkg/cmd/create/vault/create_vault.go:223 +0x6e7
github.com/jenkins-x/jx/pkg/cmd/create/vault.NewCmdCreateVault.func1(0xc000946000, 0xc0009761c0, 0x1, 0xe)
	/workspace/source/pkg/cmd/create/vault/create_vault.go:91 +0x6f
github.com/spf13/cobra.(*Command).execute(0xc000946000, 0xc0009760e0, 0xe, 0xe, 0xc000946000, 0xc0009760e0)
	/workspace/go/pkg/mod/github.com/spf13/cobra@v0.0.5/command.go:830 +0x2ae
github.com/spf13/cobra.(*Command).ExecuteC(0xc00024a780, 0xc0007b6180, 0x5a380c0, 0xc0000da000)
	/workspace/go/pkg/mod/github.com/spf13/cobra@v0.0.5/command.go:914 +0x2fc
github.com/spf13/cobra.(*Command).Execute(...)
	/workspace/go/pkg/mod/github.com/spf13/cobra@v0.0.5/command.go:864
github.com/jenkins-x/jx/cmd/jx/app.Run(0x0, 0x0, 0x0, 0xc000669f88, 0xc0000c0058)
	/workspace/source/cmd/jx/app/jx.go:19 +0x185
main.main()
	/workspace/source/cmd/jx/jx.go:11 +0x32
```
https://github.com/jenkins-x/jx/blob/e8349e4b1c798aed3f2834c1f2c1c990deaf291d/pkg/vault/create/create.go#L440
### Jx version
```
NAME               VERSION
jx                 2.0.1133
jenkins x platform 2.0.1870
Kubernetes cluster v1.14.9-eks-c0eccc
kubectl            v1.16.3
helm client        Client: v2.16.1+gbbdfe5e
git                2.20.1
Operating System   Ubuntu 19.04
```

### Jenkins type

<!--
Select which installation type are you using. 
-->
- [ ] Serverless Jenkins X Pipelines (Tekton + Prow)
- [x] Classic Jenkins

### Kubernetes cluster

<!--
What kind of Kubernetes cluster are you using & how did you create it?
-->

### Operating system / Environment

<!--
In which environment are you running the jx CLI?
-->

### Summary 
Cert-manager is reporting that some of the jx components are missing the annotations necessary to trigger the correct provision of a TLS-based ingress. Whilst they are currently working, this may be due to side-effects of the wildcard certificate from other services.

```
I0117 13:36:29.513258       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx/chartmuseum"
I0117 13:36:29.513336       1 sync.go:50] cert-manager/controller/ingress-shim "level"=0 "msg"="not syncing ingress resource as it does not contain a \"cert-manager.io/issuer\" or \"cert-manager.io/cluster-issuer\" annotation" "resource_kind"="Ingress" "resource_name"="chartmuseum" "resource_namespace"="jx"
I0117 13:36:29.513348       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx/chartmuseum"
I0117 13:36:29.525999       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx/deck"
I0117 13:36:29.526111       1 sync.go:50] cert-manager/controller/ingress-shim "level"=0 "msg"="not syncing ingress resource as it does not contain a \"cert-manager.io/issuer\" or \"cert-manager.io/cluster-issuer\" annotation" "resource_kind"="Ingress" "resource_name"="deck" "resource_namespace"="jx"
I0117 13:36:29.526137       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx/deck"
I0117 13:36:29.540574       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx/hook"
I0117 13:36:29.540734       1 sync.go:50] cert-manager/controller/ingress-shim "level"=0 "msg"="not syncing ingress resource as it does not contain a \"cert-manager.io/issuer\" or \"cert-manager.io/cluster-issuer\" annotation" "resource_kind"="Ingress" "resource_name"="hook" "resource_namespace"="jx"
I0117 13:36:29.540755       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx/hook"
I0117 13:36:29.560827       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx/nexus"
I0117 13:36:29.560915       1 sync.go:50] cert-manager/controller/ingress-shim "level"=0 "msg"="not syncing ingress resource as it does not contain a \"cert-manager.io/issuer\" or \"cert-manager.io/cluster-issuer\" annotation" "resource_kind"="Ingress" "resource_name"="nexus" "resource_namespace"="jx"
I0117 13:36:29.560928       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx/nexus"
I0117 13:36:29.578984       1 controller.go:129] cert-manager/controller/ingress-shim "level"=0 "msg"="syncing item" "key"="jx/tide"
I0117 13:36:29.579087       1 sync.go:50] cert-manager/controller/ingress-shim "level"=0 "msg"="not syncing ingress resource as it does not contain a \"cert-manager.io/issuer\" or \"cert-manager.io/cluster-issuer\" annotation" "resource_kind"="Ingress" "resource_name"="tide" "resource_namespace"="jx"
I0117 13:36:29.579114       1 controller.go:135] cert-manager/controller/ingress-shim "level"=0 "msg"="finished processing work item" "key"="jx/tide"
```

### Jx version

The output of `jx version` is:

```
jx                 2.0.1133
Kubernetes cluster v1.13.11-gke.14
kubectl            v1.17.0
helm client        Client: v2.14.0+g05811b8
git                2.21.0
Operating System   Mac OS X 10.15.2 build 19C57
```

### Jenkins type

<!--
Select which installation type are you using. 
-->
- [x] Serverless Jenkins X Pipelines (Tekton + Prow) - Boot
- [ ] Classic Jenkins

### Kubernetes cluster

<!--
What kind of Kubernetes cluster are you using & how did you create it?
-->

### Operating system / Environment

<!--
In which environment are you running the jx CLI?
-->

To be able to install vault on AWS using jx boot, these environment variables need to be set:
VAULT_AWS_ACCESS_KEY_ID
VAULT_AWS_SECRET_ACCESS_KEY

However, this appears nowhere in the docs.
### Summary 
`jx delete app jx-app-sso --auto-merge` removes the chart from the requirements.yaml but leaves the jx-app-sso folder and contents in the env folder of the dev environment under boot.

### Jx version

The output of `jx version` is:

```
jx                 2.0.1133
Kubernetes cluster v1.13.11-gke.14
kubectl            v1.17.0
helm client        Client: v2.14.0+g05811b8
git                2.21.0
Operating System   Mac OS X 10.15.2 build 19C57
```

### Jenkins type

<!--
Select which installation type are you using. 
-->
- [x] Serverless Jenkins X Pipelines (Tekton + Prow) - Boot
- [ ] Classic Jenkins


### Summary 
With the latest CLI I receive the following errors on GitHub Enterprise:

```
error: handle dev environment repository: creating remote for dev environment environment-jx-eval-01-dev: duplicating https://github.com/tomfrenken/jenkins-x-boot-config to jx-test-org/environment-jx-eval-01-dev: getting repo for https://github.com/tomfrenken/jenkins-x-boot-config: failed to get repository tomfrenken/jenkins-x-boot-config due to: GET https://github.tools.sap/api/v3/repos/tomfrenken/jenkins-x-boot-config: 404 Not Found []
error: failed to interpret pipeline file jenkins-x.yml: failed to run '/bin/sh -c jx step verify env' command in directory '.', output: ''
```
I previously forked the repo and changed the files, the `jx-requirements.yaml` looks like this:

```yaml
cluster:
  clusterName: ""
  environmentGitOwner: ""
  environmentGitPublic: false
  gitKind: github
  gitName: ghe
  gitServer: https://github.tools.sap
  project: ""
  provider: gke
  zone: ""
gitops: true
environments:
- key: dev
- key: staging
- key: production
ingress:
  domain: ""
  externalDNS: false
  tls:
    email: ""
    enabled: false
    production: false
kaniko: true
secretStorage: local
storage:
  logs:
    enabled: true
    url: ""
  reports:
    enabled: true
    url: ""
  repository:
    enabled: true
    url: ""
versionStream:
  ref: "master"
  url: https://github.com/jenkins-x/jenkins-x-versions.git
webhook: lighthouse
```

### Steps to reproduce the behavior
Fork the boot-config, change values to work with GHE, run `jx boot`

### Expected behavior
It works

### Actual behavior
It doesn't

### Jx version

The output of `jx version` is:

```
NAME               VERSION
jx                 2.0.1133
Kubernetes cluster v1.13.11-gke.14
kubectl            v1.17.1
helm client        Client: v2.16.1+gbbdfe5e
git                2.25.0
Operating System   Mac OS X 10.15.2 build 19C57
```

### Jenkins type

<!--
Select which installation type are you using. 
-->
- [X] Serverless Jenkins X Pipelines (Tekton + Lighthouse)
- [ ] Classic Jenkins
