The library used previously is intended for the `Accept` header, and as such never actually triggered any of the payload compression. The custom `parseAccept` function expects the commonly used values and triggers compression correctly:

```
% curl -vvv -H 'Accept-Encoding: gzip' http://localhost:6080/api/v1/state | gunzip
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed
  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0*   Trying ::1:6080...
* TCP_NODELAY set
* Connected to localhost (::1) port 6080 (#0)
> GET /api/v1/state HTTP/1.1
> Host: localhost:6080
> User-Agent: curl/7.66.0
> Accept: */*
> Accept-Encoding: gzip
> 
* Mark bundle as not supporting multiuse
< HTTP/1.1 200 OK
< Content-Encoding: gzip
< Content-Type: application/json
< Etag: "aae368a064d7c5a433d0bf2c4f5554cc"
< Trailer: clair-error
< Date: Wed, 15 Jan 2020 19:55:25 GMT
< Transfer-Encoding: chunked
< 
{ [84 bytes data]
100    73    0    73    0     0  18250      0 --:--:-- --:--:-- --:--:-- 18250
* Connection #0 to host localhost left intact
{"state":"aae368a064d7c5a433d0bf2c4f5554cc"}
```

Hi Team,

I am using your image  image: quay.io/coreos/clair:v2.0.6

 when it publish the report and when I see this report in jenkins HTML view using the plugin publishHTML . It gives me distorted view. all shifted  to the left and not at all readable.


When I download that HTML report and open it locally , I am able to see it in good format but this is not how it should respond, Is this becasue of the CSS getting use? 


have anyone found a solution to it how to use it ?

I have attached screenshot of how it looks.


![clair_report](https://user-images.githubusercontent.com/59609930/71898711-02286c80-3180-11ea-8b70-245511a9673b.jpg)


<!--

Project discussion and other meta topics should be discussed on the mailing list.

GitHub issues are ONLY for bugs and features for the Clair API.
Please first create an issue on your client's repository before opening one here.

Are you using a development build of Clair (e.g. quay.io/coreos/clair-git)?
Your problem might be solved by switching to a stable release (e.g. quay.io/coreos/clair).

-->

### Description of Problem / Feature Request

<!--- your content here --->

### Expected Outcome

<!--- your content here --->

### Actual Outcome

<!--- your content here --->

### Environment

<!--

Issues that do not contain the Environment section are AUTOMATICALLY CLOSED.
If you're making a feature request, please specify "N/A" under the environment section.

-->

- Clair version/image: 
- Clair client name/version: 
- Host OS: 
- Kernel (e.g. `uname -a`): 
- Kubernetes version (use `kubectl version`): 
- Helm version (use `helm version`): 
- Network/Firewall setup: 

Backport of 3cd5431 for release-2.0 branch.
<!--

Project discussion and other meta topics should be discussed on the mailing list.

GitHub issues are ONLY for bugs and features for the Clair API.
Please first create an issue on your client's repository before opening one here.

Are you using a development build of Clair (e.g. quay.io/coreos/clair-git)?
Your problem might be solved by switching to a stable release (e.g. quay.io/coreos/clair).

-->

### Description of Problem / Feature Request

Alpine Severity levels reports "Unknown"

### Expected Outcome

```
{
  "Vulnerability": {
    "Name": "CVE-2019-14697",
    "NamespaceName": "alpine:v3.8",
    "Link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14697",
    "Severity": "High/Critical/Medium/Something Else"
  }
}
```

### Actual Outcome

```
{
  "Vulnerability": {
    "Name": "CVE-2019-14697",
    "NamespaceName": "alpine:v3.8",
    "Link": "https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2019-14697",
    "Severity": "Unknown"
  }
}
```

### Environment

<!--

Issues that do not contain the Environment section are AUTOMATICALLY CLOSED.
If you're making a feature request, please specify "N/A" under the environment section.

-->

- Clair version/image: v2.1.0, v2.1.1 and v2.1.2
- Clair client name/version: curl and quay
- Host OS: N/A 
- Kernel (e.g. `uname -a`): N/A
- Kubernetes version (use `kubectl version`): N/A
- Helm version (use `helm version`): N/A
- Network/Firewall setup: N/A

Modular rpm is a special type of RPMs which requires different handler.
Modular rpms have been introduced in RHEL8 and Fedora 28.

Modular rpms are stored in rpm database, but to be able to tell if given
modular rpm is vulnerable we need to know which module contains given
rpm. Module name and streams are used as an rpm namespace.


https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/8/html/installing_managing_and_removing_user_space_components/installing-rhel-8-content_using-appstream
https://fedoramagazine.org/modularity-fedora-28-server-edition/

IMPORTANT: I was not able to test the new Photon OS driver with a running instance of Clair.
I tried to do it using [clair-scanner](https://github.com/arminc/clair-scanner) but they don't support API version 3 [issue #27](https://github.com/arminc/clair-scanner/issues/27)

Please provide me with feedback and if you can test it against a running Clair instance.

Currently, Photon OS is not supported by Clair and it will a valuable
addition for all Photon users if that's changed.

This code is not created for a particular version of Photon but
instead fetches information about the released versions of
Photon. If, a new version of Photon is released Clair will
automatically support it.

I started my work based on [issue #693](https://github.com/quay/clair/issues/693)

Signed-off-by: Martin Vrachev mvrachev@vmware.com
It seems that the latest clair does not support archlinux pacman package scanning.
Postgres has the ability to configure read-only streaming replicas but by the current Clair startup attempts a number of operations that do not work on these read-only replicas.

This PR adds support for configuring a read-only database and skips the `RegisterConfiguredDetectors` and `migrateDatabase` calls that would block startup.
<!--

Project discussion and other meta topics should be discussed on the mailing list.

GitHub issues are ONLY for bugs and features for the Clair API.
Please first create an issue on your client's repository before opening one here.

Are you using a development build of Clair (e.g. quay.io/coreos/clair-git)?
Your problem might be solved by switching to a stable release (e.g. quay.io/coreos/clair).

-->

### Description of Problem / Feature Request

We are looking curl command/ API to list the layers respective image. we want to perform manual scan for each layers. 

### Expected Outcome

<!--- your content here --->

### Actual Outcome

<!--- your content here --->

### Environment

<!--

Issues that do not contain the Environment section are AUTOMATICALLY CLOSED.
If you're making a feature request, please specify "N/A" under the environment section.

-->

- Clair version/image: 
- Clair client name/version: 
- Host OS: 
- Kernel (e.g. `uname -a`): 
- Kubernetes version (use `kubectl version`): 
- Helm version (use `helm version`): 
- Network/Firewall setup: 
