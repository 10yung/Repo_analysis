<!-- Below information IS REQUIRED with every PR -->
## Type of Change
<!-- What type of change does your code introduce -->
 - [x] Bug fix (non-breaking change, fixes #6217 )
 - [ ] New feature (non-breaking change, adds functionality, fixes #<!--issue number--> )
 - [ ] Breaking change (effects multiple commands or functionality, fixes #<!--issue number--> )
 - [x] Ran manual Pester test and has passed (`.\tests\manual.pester.ps1)
 - [ ] Adding code coverage to existing functionality
 - [ ] Pester test is included
 - [ ] If new file reference added for test, has is been added to github.com/sqlcollaborative/appveyor-lab ?
 - [ ] Nunit test is included
 - [ ] Documentation
 - [ ] Build system
 
<!-- Below this line you can erase anything that is not applicable -->
### Purpose
Ignore PowerBI service during runtime, as the ManagedComputer WMI object does not have an instance of PowerBI service.

### Approach
compare service name
<!-- Below information IS REQUIRED with every PR -->
## Type of Change
<!-- What type of change does your code introduce -->
 - [x] Bug fix (non-breaking change, fixes #6311, fixes #6310 )
 - [ ] New feature (non-breaking change, adds functionality, fixes #<!--issue number--> )
 - [ ] Breaking change (effects multiple commands or functionality, fixes #<!--issue number--> )
 - [x] Ran manual Pester test and has passed (`.\tests\manual.pester.ps1)
 - [ ] Adding code coverage to existing functionality
 - [ ] Pester test is included
 - [ ] If new file reference added for test, has is been added to github.com/sqlcollaborative/appveyor-lab ?
 - [ ] Nunit test is included
 - [ ] Documentation
 - [ ] Build system
 
<!-- Below this line you can erase anything that is not applicable -->
### Purpose
Fixing bugs

### Approach
Moving code around
need to fix credential and reg server

```
[10.99 ms] C:\github> Start-DbaMigration -Source sql2016 -Destination sql2017 -Exclude Databases -WhatIf                                                                                  What if: Performing the operation "Updating RecoveryInterval [recovery interval (min)]" on target "sql2017".
What if: Performing the operation "Updating AllowUpdates [allow updates]" on target "sql2017".
What if: Performing the operation "Updating UserConnections [user connections]" on target "sql2017".
What if: Performing the operation "Updating Locks [locks]" on target "sql2017".
What if: Performing the operation "Updating OpenObjects [open objects]" on target "sql2017".
What if: Performing the operation "Updating FillFactor [fill factor (%)]" on target "sql2017".
What if: Performing the operation "Updating DisallowResultsFromTriggers [disallow results from triggers]" on target "sql2017".
What if: Performing the operation "Updating NestedTriggers [nested triggers]" on target "sql2017".
What if: Performing the operation "Updating ServerTriggerRecursionEnabled [server trigger recursion]" on target "sql2017".
What if: Performing the operation "Updating RemoteAccess [remote access]" on target "sql2017".
What if: Performing the operation "Updating DefaultLanguage [default language]" on target "sql2017".
What if: Performing the operation "Updating CrossDBOwnershipChaining [cross db ownership chaining]" on target "sql2017".
What if: Performing the operation "Updating MaxWorkerThreads [max worker threads]" on target "sql2017".
What if: Performing the operation "Updating NetworkPacketSize [network packet size (B)]" on target "sql2017".
What if: Performing the operation "Updating ShowAdvancedOptions [show advanced options]" on target "sql2017".
What if: Performing the operation "Updating RemoteProcTrans [remote proc trans]" on target "sql2017".
What if: Performing the operation "Updating C2AuditMode [c2 audit mode]" on target "sql2017".
What if: Performing the operation "Updating DefaultFullTextLanguage [default full-text language]" on target "sql2017".
What if: Performing the operation "Updating TwoDigitYearCutoff [two digit year cutoff]" on target "sql2017".
What if: Performing the operation "Updating IndexCreateMemory [index create memory (KB)]" on target "sql2017".
What if: Performing the operation "Updating PriorityBoost [priority boost]" on target "sql2017".
What if: Performing the operation "Updating RemoteLoginTimeout [remote login timeout (s)]" on target "sql2017".
What if: Performing the operation "Updating RemoteQueryTimeout [remote query timeout (s)]" on target "sql2017".
What if: Performing the operation "Updating CursorThreshold [cursor threshold]" on target "sql2017".
What if: Performing the operation "Updating SetWorkingSetSize [set working set size]" on target "sql2017".
What if: Performing the operation "Updating UserOptions [user options]" on target "sql2017".
What if: Performing the operation "Updating AffinityMask [affinity mask]" on target "sql2017".
What if: Performing the operation "Updating ReplicationMaxTextSize [max text repl size (B)]" on target "sql2017".
What if: Performing the operation "Updating MediaRetention [media retention]" on target "sql2017".
What if: Performing the operation "Updating CostThresholdForParallelism [cost threshold for parallelism]" on target "sql2017".
What if: Performing the operation "Updating MaxDegreeOfParallelism [max degree of parallelism]" on target "sql2017".
What if: Performing the operation "Updating MinMemoryPerQuery [min memory per query (KB)]" on target "sql2017".
What if: Performing the operation "Updating QueryWait [query wait (s)]" on target "sql2017".
What if: Performing the operation "Updating MinServerMemory [min server memory (MB)]" on target "sql2017".
What if: Performing the operation "Updating MaxServerMemory [max server memory (MB)]" on target "sql2017".
What if: Performing the operation "Updating QueryGovernorCostLimit [query governor cost limit]" on target "sql2017".
What if: Performing the operation "Updating LightweightPooling [lightweight pooling]" on target "sql2017".
What if: Performing the operation "Updating ScanForStartupProcedures [scan for startup procs]" on target "sql2017".
What if: Performing the operation "Updating Affinity64Mask [affinity64 mask]" on target "sql2017".
What if: Performing the operation "Updating AffinityIOMask [affinity I/O mask]" on target "sql2017".
What if: Performing the operation "Updating Affinity64IOMask [affinity64 I/O mask]" on target "sql2017".
What if: Performing the operation "Updating TransformNoiseWords [transform noise words]" on target "sql2017".
What if: Performing the operation "Updating PrecomputeRank [precompute rank]" on target "sql2017".
What if: Performing the operation "Updating ProtocolHandlerTimeout [PH timeout (s)]" on target "sql2017".
What if: Performing the operation "Updating IsSqlClrEnabled [clr enabled]" on target "sql2017".
What if: Performing the operation "Updating FullTextCrawlRangeMax [max full-text crawl range]" on target "sql2017".
What if: Performing the operation "Updating FullTextNotifyBandwidthMin [ft notify bandwidth (min)]" on target "sql2017".
What if: Performing the operation "Updating FullTextNotifyBandwidthMax [ft notify bandwidth (max)]" on target "sql2017".
What if: Performing the operation "Updating FullTextCrawlBandwidthMin [ft crawl bandwidth (min)]" on target "sql2017".
What if: Performing the operation "Updating FullTextCrawlBandwidthMax [ft crawl bandwidth (max)]" on target "sql2017".
What if: Performing the operation "Updating DefaultTraceEnabled [default trace enabled]" on target "sql2017".
What if: Performing the operation "Updating BlockedProcessThreshold [blocked process threshold (s)]" on target "sql2017".
What if: Performing the operation "Updating InDoubtTransactionResolution [in-doubt xact resolution]" on target "sql2017".
What if: Performing the operation "Updating RemoteDacConnectionsEnabled [remote admin connections]" on target "sql2017".
What if: Performing the operation "Updating DefaultBackupCompression [backup compression default]" on target "sql2017".
What if: Performing the operation "Updating FilestreamAccessLevel [filestream access level]" on target "sql2017".
What if: Performing the operation "Updating OptimizeAdhocWorkloads [optimize for ad hoc workloads]" on target "sql2017".
What if: Performing the operation "Updating AccessCheckCacheBucketCount [access check cache bucket count]" on target "sql2017".
What if: Performing the operation "Updating AccessCheckCacheQuota [access check cache quota]" on target "sql2017".
What if: Performing the operation "Updating BackupChecksumDefault [backup checksum default]" on target "sql2017".
What if: Performing the operation "Updating AutomaticSoftnumaDisabled [automatic soft-NUMA disabled]" on target "sql2017".
What if: Performing the operation "Updating ExternalScriptsEnabled [external scripts enabled]" on target "sql2017".
What if: Performing the operation "Updating AgentXPsEnabled [Agent XPs]" on target "sql2017".
What if: Performing the operation "Updating DatabaseMailEnabled [Database Mail XPs]" on target "sql2017".
What if: Performing the operation "Updating SmoAndDmoXPsEnabled [SMO and DMO XPs]" on target "sql2017".
What if: Performing the operation "Updating OleAutomationProceduresEnabled [Ole Automation Procedures]" on target "sql2017".
What if: Performing the operation "Updating XPCmdShellEnabled [xp_cmdshell]" on target "sql2017".
What if: Performing the operation "Updating AdHocDistributedQueriesEnabled [Ad Hoc Distributed Queries]" on target "sql2017".
What if: Performing the operation "Updating ReplicationXPsEnabled [Replication XPs]" on target "sql2017".
What if: Performing the operation "Updating ContainmentEnabled [contained database authentication]" on target "sql2017".
What if: Performing the operation "Updating HadoopConnectivity [hadoop connectivity]" on target "sql2017".
What if: Performing the operation "Updating PolybaseNetworkEncryption [polybase network encryption]" on target "sql2017".
What if: Performing the operation "Updating RemoteDataArchiveEnabled [remote data archive]" on target "sql2017".
What if: Performing the operation "Updating AllowPolybaseExport [allow polybase export]" on target "sql2017".
What if: Performing the operation "Creating custom error 60000 us_english" on target "sql2017".
What if: Performing the operation "Creating custom error 60000 Français" on target "sql2017".
What if: Performing the operation "Copying abc" on target "".


DateTime          : 2020-01-18 14:31:10.902
SourceServer      : sql2016
DestinationServer : sql2017
Name              : abc
Type              : Credential
Status            : Successful
Notes             :

What if: Performing the operation "Copying SHARED ACCESS SIGNATURE" on target "".
DateTime          : 2020-01-18 14:31:10.930
SourceServer      : sql2016
DestinationServer : sql2017
Name              : azureblob
Type              : Credential
Status            : Successful
Notes             :

What if: Performing the operation "Copying dbatools" on target "".
DateTime          : 2020-01-18 14:31:10.935
SourceServer      : sql2016
DestinationServer : sql2017
Name              : AzureCredential
Type              : Credential
Status            : Successful
Notes             :

What if: Performing the operation "Copying base\sharepoint" on target "".
DateTime          : 2020-01-18 14:31:10.947
SourceServer      : sql2016
DestinationServer : sql2017
Name              : BackupCopyUser
Type              : Credential
Status            : Successful
Notes             :

What if: Performing the operation "Copying storageaccountname" on target "".
DateTime          : 2020-01-18 14:31:10.955
SourceServer      : sql2016
DestinationServer : sql2017
Name              : mycredential
Type              : Credential
Status            : Successful
Notes             :

What if: Performing the operation "Copying base\powershell" on target "".
DateTime          : 2020-01-18 14:31:10.966
SourceServer      : sql2016
DestinationServer : sql2017
Name              : PowerShell Proxy Account
Type              : Credential
Status            : Successful
Notes             :

What if: Performing the operation "Copying base\ctrlb" on target "".
DateTime          : 2020-01-18 14:31:10.972
SourceServer      : sql2016
DestinationServer : sql2017
Name              : PowerShell Service Account
Type              : Credential
Status            : Successful
Notes             :

What if: Performing the operation "Migrating all mail server configuration values." on target "sql2017".
What if: Performing the operation "Migrating account 'dbatoolssci@dbatools.io'." on target "sql2017".
What if: Performing the operation "Migrating account 'The DBA Team'." on target "sql2017".
What if: Performing the operation "Migrating mail profile 'The DBA Team'." on target "sql2017".
What if: Performing the operation "Migrating account mail server smtp.ad.local." on target "sql2017".
What if: Performing the operation "Migrating account mail server SQL2016." on target "sql2017".
What if: Performing the operation "Creating group Prod" on target "sql2017".
What if: Performing the operation "Copying SQL Server Cluster" on target "sql2017".
What if: Performing the operation "Creating group Test" on target "sql2017".
Cannot index into a null array.
At C:\github\dbatools\functions\Copy-DbaRegServer.ps1:245 char:17
+ ...             $toSubGroup = $destinationGroup.ServerGroups[$fromSubGrou ...
+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : NullArray

What if: Performing the operation "Creating group Dev" on target "sql2017".
What if: Performing the operation "Checking to see if server is the CMS equals current server name" on target "sql2017".
What if: Performing the operation "Copying SQL Server 2017" on target "sql2017".
What if: Performing the operation "Copying SQL Server 2019" on target "sql2017".
What if: Performing the operation "Generating SQL code for sup baw" on target "sql2017".
What if: Performing the operation "Stating that the actual file copy is about to occur" on target "console".
What if: Performing the operation "Updating create code to use new path" on target "sql2017".
What if: Performing the operation "Copying \\SQL2016\C$\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\Backup\sup baw.bak to \\sql2017\C$\Program Files\Microsoft SQL Server\MSSQL14.MSSQLSERVER\MSSQL\Backup using BITSTransfer" on target "sql2017".
What if: Performing the operation "Adding backup device sup baw" on target "sql2017".
What if: Performing the operation "Creating server trigger tr_MScdc_db_ddl_event" on target "sql2017".
What if: Performing the operation "Adding SQL login app1" on target "sql2017".
What if: Performing the operation "Updating SQL login app1 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login appAdmin" on target "sql2017".
What if: Performing the operation "Updating SQL login appAdmin permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login auto" on target "sql2017".
What if: Performing the operation "Updating SQL login auto permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BASE\Administrator" on target "sql2017".
What if: Performing the operation "Updating SQL login BASE\Administrator permissions" on target "sql2017".
What if: Performing the operation "Stating BASE\ctrlb is skipped because it exists at destination." on target "console".
What if: Performing the operation "Adding SQL login BASE\Developers" on target "sql2017".
What if: Performing the operation "Updating SQL login BASE\Developers permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BASE\domain admins" on target "sql2017".
What if: Performing the operation "Updating SQL login BASE\domain admins permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BASE\fred" on target "sql2017".
What if: Performing the operation "Updating SQL login BASE\fred permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BASE\powershell" on target "sql2017".
What if: Performing the operation "Updating SQL login BASE\powershell permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login base\sharepoint" on target "sql2017".
What if: Performing the operation "Updating SQL login base\sharepoint permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BASE\sql2014$" on target "sql2017".
What if: Performing the operation "Updating SQL login BASE\sql2014$ permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BASE\sqlserver" on target "sql2017".
What if: Performing the operation "Updating SQL login BASE\sqlserver permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BASE\test" on target "sql2017".
What if: Performing the operation "Updating SQL login BASE\test permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BUILTIN\Administrators" on target "sql2017".
What if: Performing the operation "Updating SQL login BUILTIN\Administrators permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login BUILTIN\Users" on target "sql2017".
What if: Performing the operation "Updating SQL login BUILTIN\Users permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login claudio" on target "sql2017".
What if: Performing the operation "Updating SQL login claudio permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login dbatoolsci_exportdbauser_login" on target "sql2017".
What if: Performing the operation "Updating SQL login dbatoolsci_exportdbauser_login permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login dbatoolsuser" on target "sql2017".
What if: Performing the operation "Updating SQL login dbatoolsuser permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login dbcollectionlogin" on target "sql2017".
What if: Performing the operation "Updating SQL login dbcollectionlogin permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login distributor_admin" on target "sql2017".
What if: Performing the operation "Updating SQL login distributor_admin permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login export-sqllogintest" on target "sql2017".
What if: Performing the operation "Updating SQL login export-sqllogintest permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login heman" on target "sql2017".
What if: Performing the operation "Updating SQL login heman permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login1" on target "sql2017".
What if: Performing the operation "Updating SQL login login1 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login10" on target "sql2017".
What if: Performing the operation "Updating SQL login login10 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login11" on target "sql2017".
What if: Performing the operation "Updating SQL login login11 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login12" on target "sql2017".
What if: Performing the operation "Updating SQL login login12 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login13" on target "sql2017".
What if: Performing the operation "Updating SQL login login13 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login14" on target "sql2017".
What if: Performing the operation "Updating SQL login login14 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login15" on target "sql2017".
What if: Performing the operation "Updating SQL login login15 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login16" on target "sql2017".
What if: Performing the operation "Updating SQL login login16 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login17" on target "sql2017".
What if: Performing the operation "Updating SQL login login17 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login18" on target "sql2017".
What if: Performing the operation "Updating SQL login login18 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login19" on target "sql2017".
What if: Performing the operation "Updating SQL login login19 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login2" on target "sql2017".
What if: Performing the operation "Updating SQL login login2 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login20" on target "sql2017".
What if: Performing the operation "Updating SQL login login20 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login21" on target "sql2017".
What if: Performing the operation "Updating SQL login login21 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login22" on target "sql2017".
What if: Performing the operation "Updating SQL login login22 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login23" on target "sql2017".
What if: Performing the operation "Updating SQL login login23 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login24" on target "sql2017".
What if: Performing the operation "Updating SQL login login24 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login25" on target "sql2017".
What if: Performing the operation "Updating SQL login login25 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login26" on target "sql2017".
What if: Performing the operation "Updating SQL login login26 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login27" on target "sql2017".
What if: Performing the operation "Updating SQL login login27 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login28" on target "sql2017".
What if: Performing the operation "Updating SQL login login28 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login29" on target "sql2017".
What if: Performing the operation "Updating SQL login login29 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login3" on target "sql2017".
What if: Performing the operation "Updating SQL login login3 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login30" on target "sql2017".
What if: Performing the operation "Updating SQL login login30 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login31" on target "sql2017".
What if: Performing the operation "Updating SQL login login31 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login32" on target "sql2017".
What if: Performing the operation "Updating SQL login login32 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login33" on target "sql2017".
What if: Performing the operation "Updating SQL login login33 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login34" on target "sql2017".
What if: Performing the operation "Updating SQL login login34 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login35" on target "sql2017".
What if: Performing the operation "Updating SQL login login35 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login36" on target "sql2017".
What if: Performing the operation "Updating SQL login login36 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login37" on target "sql2017".
What if: Performing the operation "Updating SQL login login37 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login38" on target "sql2017".
What if: Performing the operation "Updating SQL login login38 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login4" on target "sql2017".
What if: Performing the operation "Updating SQL login login4 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login5" on target "sql2017".
What if: Performing the operation "Updating SQL login login5 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login6" on target "sql2017".
What if: Performing the operation "Updating SQL login login6 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login7" on target "sql2017".
What if: Performing the operation "Updating SQL login login7 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login8" on target "sql2017".
What if: Performing the operation "Updating SQL login login8 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login login9" on target "sql2017".
What if: Performing the operation "Updating SQL login login9 permissions" on target "sql2017".
What if: Performing the operation "Stating NT AUTHORITY\SYSTEM was skipped because it is a local machine name." on target "console".
What if: Performing the operation "Stating NT SERVICE\MSSQLSERVER was skipped because it is a local machine name." on target "console".
What if: Performing the operation "Stating NT SERVICE\SQLSERVERAGENT was skipped because it is a local machine name." on target "console".
What if: Performing the operation "Stating NT SERVICE\SQLTELEMETRY was skipped because it is a local machine name." on target "console".
What if: Performing the operation "Stating NT SERVICE\SQLWriter was skipped because it is a local machine name." on target "console".
What if: Performing the operation "Stating NT SERVICE\Winmgmt was skipped because it is a local machine name." on target "console".
What if: Performing the operation "Adding SQL login securityadmintest" on target "sql2017".
What if: Performing the operation "Updating SQL login securityadmintest permissions" on target "sql2017".
What if: Performing the operation "Stating SQL2016\winLogin was skipped because it is a local machine name." on target "console".
What if: Performing the operation "Adding SQL login sqladmin" on target "sql2017".
What if: Performing the operation "Updating SQL login sqladmin permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login SQLCMD_User" on target "sql2017".
What if: Performing the operation "Updating SQL login SQLCMD_User permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login storageuser" on target "sql2017".
What if: Performing the operation "Updating SQL login storageuser permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login TestDba" on target "sql2017".
What if: Performing the operation "Updating SQL login TestDba permissions" on target "sql2017".
What if: Performing the operation "Stating testlogin is skipped because it exists at destination." on target "console".
What if: Performing the operation "Adding SQL login TestOrphan1" on target "sql2017".
What if: Performing the operation "Updating SQL login TestOrphan1 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login TestOrphan2" on target "sql2017".
What if: Performing the operation "Updating SQL login TestOrphan2 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login TestRenamed" on target "sql2017".
What if: Performing the operation "Updating SQL login TestRenamed permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login testuser1" on target "sql2017".
What if: Performing the operation "Updating SQL login testuser1 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login testuser2" on target "sql2017".
What if: Performing the operation "Updating SQL login testuser2 permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login testuserkey" on target "sql2017".
What if: Performing the operation "Updating SQL login testuserkey permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login TestWithoutOwner" on target "sql2017".
What if: Performing the operation "Updating SQL login TestWithoutOwner permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login ToMigrate" on target "sql2017".
What if: Performing the operation "Updating SQL login ToMigrate permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login UserNOTOrphan" on target "sql2017".
What if: Performing the operation "Updating SQL login UserNOTOrphan permissions" on target "sql2017".
What if: Performing the operation "Adding SQL login webuser" on target "sql2017".
What if: Performing the operation "Updating SQL login webuser permissions" on target "sql2017".
What if: Performing the operation "Migrating localhost" on target "sql2017".
What if: Performing the operation "Migrating repl_distributor" on target "sql2017".
What if: Performing the operation "Migrating " on target "sql2017".
What if: Performing the operation "Migrating SQL2012" on target "sql2017".
What if: Performing the operation "Migrating SQL2014" on target "sql2017".
What if: Performing the operation "Migrating " on target "sql2017".
What if: Performing the operation "Migrating TEST" on target "sql2017".
What if: Performing the operation "Migrating " on target "sql2017".
What if: Performing the operation "Migrating " on target "sql2017".
What if: Performing the operation "Migrating " on target "sql2017".
What if: Performing the operation "Server reconfiguration not yet supported. Only Collection Set migration will be migrated at this time." on target "sql2017".
What if: Performing the operation "Attempting to modify Data Collector configuration" on target "sql2017".
What if: Performing the operation "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\ does not exist on sql2017. Skipping Audit-20160502-100608. Specify -Force to create the directory." on target "sql2017".
What if: Performing the operation "Creating server audit Audit-20170210-150427" on target "sql2017".
What if: Performing the operation "C:\Program Files\Microsoft SQL Server\MSSQL13.MSSQLSERVER\MSSQL\DATA\STIG\ does not exist on sql2017. Skipping DISA_STIG. Specify -Force to create the directory." on target "sql2017".
What if: Performing the operation "Audit DISA_STIG does not exist on sql2017. Skipping DISA_STIG_SERVER_SPECIFICATION." on target "sql2017".
What if: Performing the operation "Audit  does not exist on sql2017. Skipping DISA_STIG_Specs." on target "sql2017".
What if: Performing the operation "Audit Audit-20160502-100608 does not exist on sql2017. Skipping ServerAuditSpecification-20160502-100608." on target "sql2017".
What if: Performing the operation "Creating server endpoint Mirroring." on target "sql2017".
What if: Performing the operation "Migrating condition aaa" on target "sql2017".
What if: Performing the operation "Migrating policy xp_cmdshell must be disabled" on target "sql2017".
What if: Performing the operation "Updating Resource Governor settings" on target "sql2017".
What if: Performing the operation "Migrating pool pOffHoursProcessing" on target "sql2017".
What if: Performing the operation "Migrating pool pProductionProcessing" on target "sql2017".
What if: Performing the operation "Reconfiguring" on target "sql2017".
What if: Performing the operation "Copying user objects." on target "sql2017".
What if: Performing the operation "Migrating session AlwaysOn Autoseed" on target "sql2017".
What if: Performing the operation "Migrating session Login Tracker" on target "sql2017".
What if: Performing the operation "Migrating session Profiler TSQL Duration" on target "sql2017".
What if: Performing the operation "Migrating session QuickSessionStandard" on target "sql2017".
What if: Performing the operation "Migrating session QuickSessionTSQL" on target "sql2017".
What if: Performing the operation "Extended Event Session 'telemetry_xevents' was skipped because it already exists on sql2017." on target "sql2017".
What if: Performing the operation "Creating Operator category OPZ" on target "sql2017".
What if: Performing the operation "Creating Alert category ALERTZ" on target "sql2017".
What if: Performing the operation "Creating Job category AdminJobs" on target "sql2017".
What if: Performing the operation "Creating Job category DB Helth Monitoring" on target "sql2017".
What if: Performing the operation "Creating Job category Event Cleanup" on target "sql2017".
What if: Performing the operation "Creating Job category Rationalisation" on target "sql2017".
What if: Performing the operation "Creating Job category Stats Rollup" on target "sql2017".
What if: Performing the operation "Creating Job category Topn past day" on target "sql2017".
What if: Performing the operation "Creating Job category Topn past month" on target "sql2017".
What if: Performing the operation "Creating Job category Topn past week" on target "sql2017".
What if: Performing the operation "Creating Job category Topn past year" on target "sql2017".
What if: Performing the operation "Creating Operator MSXOperator" on target "sql2017".
What if: Performing the operation "Creating Operator poobutt" on target "sql2017".
What if: Performing the operation "Creating Operator Teste" on target "sql2017".
What if: Performing the operation "Creating Operator The DBA Team" on target "sql2017".
What if: Performing the operation "Creating Alert Defaults" on target "sql2017".
What if: Performing the operation "Creating Alert adf" on target "sql2017".
What if: Performing the operation "Moving Notifications adf" on target "sql2017".
What if: Performing the operation "Creating Alert Error 3452" on target "sql2017".
What if: Performing the operation "Moving Notifications Error 3452" on target "sql2017".
What if: Performing the operation "Creating Alert Error 5572" on target "sql2017".
What if: Performing the operation "Moving Notifications Error 5572" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Error Number 823" on target "sql2017".
What if: Performing the operation "Moving Notifications Error Number 823" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Error Number 824" on target "sql2017".
What if: Performing the operation "Moving Notifications Error Number 824" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Error Number 825" on target "sql2017".
What if: Performing the operation "Moving Notifications Error Number 825" on target "sql2017".
What if: Performing the operation "Creating Alert Replication Warning: Long merge over dialup connection (Threshold: mergeslowrunduration)" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication Warning: Long merge over dialup connection (Threshold: mergeslowrunduration)" on target "sql2017".
What if: Performing the operation "Creating Alert Replication Warning: Long merge over LAN connection (Threshold: mergefastrunduration)" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication Warning: Long merge over LAN connection (Threshold: mergefastrunduration)" on target "sql2017".
What if: Performing the operation "Creating Alert Replication Warning: Slow merge over dialup connection (Threshold: mergeslowrunspeed)" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication Warning: Slow merge over dialup connection (Threshold: mergeslowrunspeed)" on target "sql2017".
What if: Performing the operation "Creating Alert Replication Warning: Slow merge over LAN connection (Threshold: mergefastrunspeed)" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication Warning: Slow merge over LAN connection (Threshold: mergefastrunspeed)" on target "sql2017".
What if: Performing the operation "Creating Alert Replication Warning: Subscription expiration (Threshold: expiration)" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication Warning: Subscription expiration (Threshold: expiration)" on target "sql2017".
What if: Performing the operation "Creating Alert Replication Warning: Transactional replication latency (Threshold: latency)" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication Warning: Transactional replication latency (Threshold: latency)" on target "sql2017".
What if: Performing the operation "Creating Alert Replication: agent custom shutdown" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication: agent custom shutdown" on target "sql2017".
What if: Performing the operation "Creating Alert Replication: agent failure" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication: agent failure" on target "sql2017".
What if: Performing the operation "Creating Alert Replication: agent retry" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication: agent retry" on target "sql2017".
What if: Performing the operation "Creating Alert Replication: agent success" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication: agent success" on target "sql2017".
What if: Performing the operation "Creating Alert Replication: Subscriber has failed data validation" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication: Subscriber has failed data validation" on target "sql2017".
What if: Performing the operation "Creating Alert Replication: Subscriber has passed data validation" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication: Subscriber has passed data validation" on target "sql2017".
What if: Performing the operation "Creating Alert Replication: Subscription reinitialized after validation failure" on target "sql2017".
What if: Performing the operation "Moving Notifications Replication: Subscription reinitialized after validation failure" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 016" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 016" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 017" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 017" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 018" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 018" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 019" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 019" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 020" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 020" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 021" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 021" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 022" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 022" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 023" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 023" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 024" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 024" on target "sql2017".
What if: Performing the operation "Missing operator(s) at destination." on target "sql2017".
What if: Performing the operation "Creating Alert Severity 025" on target "sql2017".
What if: Performing the operation "Moving Notifications Severity 025" on target "sql2017".
DateTime          : 2020-01-18 14:31:15.542
SourceServer      : sql2016
DestinationServer : sql2017
Name              : CopyBackupProxy
Type              : Credential
Status            : Skipped
Notes             : Associated credential account, BackupCopyUser, does not exist on sql2017

DateTime          : 2020-01-18 14:31:15.556
SourceServer      : sql2016
DestinationServer : sql2017
Name              : PowerShell Proxy
Type              : Credential
Status            : Skipped
Notes             : Skipping migration of PowerShell Proxy due to misconfigured (empty) credential name

What if: Performing the operation "Creating schedule CDC capture agent schedule." on target "sql2017".
What if: Performing the operation "Creating schedule CDC cleanup agent schedule." on target "sql2017".
What if: Performing the operation "Shared job schedule CollectorSchedule_Every_10min exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating schedule CollectorSchedule_Every_10min" on target "sql2017".
What if: Performing the operation "Shared job schedule CollectorSchedule_Every_15min exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating schedule CollectorSchedule_Every_15min" on target "sql2017".
What if: Performing the operation "Shared job schedule CollectorSchedule_Every_30min exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating schedule CollectorSchedule_Every_30min" on target "sql2017".
What if: Performing the operation "Shared job schedule CollectorSchedule_Every_5min exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating schedule CollectorSchedule_Every_5min" on target "sql2017".
What if: Performing the operation "Shared job schedule CollectorSchedule_Every_60min exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating schedule CollectorSchedule_Every_60min" on target "sql2017".
What if: Performing the operation "Shared job schedule CollectorSchedule_Every_6h exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating schedule CollectorSchedule_Every_6h" on target "sql2017".
What if: Performing the operation "Creating schedule daily" on target "sql2017".
What if: Performing the operation "Creating schedule daily" on target "sql2017".
What if: Performing the operation "Creating schedule Database Mirroring Monitor Schedule" on target "sql2017".
What if: Performing the operation "Creating schedule mdw_purge_data_schedule" on target "sql2017".
What if: Performing the operation "Creating schedule mdw_purge_data_schedule" on target "sql2017".
What if: Performing the operation "Creating schedule OccursEvery15Minutes" on target "sql2017".
What if: Performing the operation "Creating schedule OccursEveryOneHour" on target "sql2017".
What if: Performing the operation "Creating schedule OccursOnceADayAt12:01AM" on target "sql2017".
What if: Performing the operation "Creating schedule Replication agent schedule." on target "sql2017".
What if: Performing the operation "Creating schedule Replication agent schedule." on target "sql2017".
What if: Performing the operation "Creating schedule Replication agent schedule." on target "sql2017".
What if: Performing the operation "Creating schedule Replication agent schedule." on target "sql2017".
What if: Performing the operation "Shared job schedule RunAsSQLAgentServiceStartSchedule exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating schedule RunAsSQLAgentServiceStartSchedule" on target "sql2017".
What if: Performing the operation "Creating schedule SQLWATCH-LOGGER-DISK-UTILISATION" on target "sql2017".
What if: Performing the operation "Creating schedule SQLWATCH-LOGGER-MISSING-INDEXES" on target "sql2017".
What if: Performing the operation "Shared job schedule syspolicy_purge_history_schedule exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating schedule syspolicy_purge_history_schedule" on target "sql2017".
What if: Performing the operation "Database(s) DBWithCDC DBWithCDC doesn't exist on destination. Skipping job [cdc.DBWithCDC_capture]." on target "sql2017".
What if: Performing the operation "Database(s) DBWithCDC doesn't exist on destination. Skipping job [cdc.DBWithCDC_cleanup]." on target "sql2017".
What if: Performing the operation "Creating Job CommandLog Cleanup" on target "sql2017".
What if: Performing the operation "Reporting status of migration for CommandLog Cleanup" on target "sql2017".
What if: Performing the operation "Creating Job Daily Full Backups" on target "sql2017".
What if: Performing the operation "Reporting status of migration for Daily Full Backups" on target "sql2017".
What if: Performing the operation "Creating Job Database Mirroring Monitor Job" on target "sql2017".
What if: Performing the operation "Reporting status of migration for Database Mirroring Monitor Job" on target "sql2017".
What if: Performing the operation "Creating Job DatabaseBackup - SYSTEM_DATABASES - FULL" on target "sql2017".
What if: Performing the operation "Reporting status of migration for DatabaseBackup - SYSTEM_DATABASES - FULL" on target "sql2017".
What if: Performing the operation "Creating Job DatabaseBackup - USER_DATABASES - DIFF" on target "sql2017".
What if: Performing the operation "Reporting status of migration for DatabaseBackup - USER_DATABASES - DIFF" on target "sql2017".
What if: Performing the operation "Creating Job DatabaseBackup - USER_DATABASES - FULL" on target "sql2017".
What if: Performing the operation "Reporting status of migration for DatabaseBackup - USER_DATABASES - FULL" on target "sql2017".
What if: Performing the operation "Creating Job DatabaseBackup - USER_DATABASES - LOG" on target "sql2017".
What if: Performing the operation "Reporting status of migration for DatabaseBackup - USER_DATABASES - LOG" on target "sql2017".
What if: Performing the operation "Creating Job DatabaseIntegrityCheck - SYSTEM_DATABASES" on target "sql2017".
What if: Performing the operation "Reporting status of migration for DatabaseIntegrityCheck - SYSTEM_DATABASES" on target "sql2017".
What if: Performing the operation "Creating Job DatabaseIntegrityCheck - USER_DATABASES" on target "sql2017".
What if: Performing the operation "Reporting status of migration for DatabaseIntegrityCheck - USER_DATABASES" on target "sql2017".
What if: Performing the operation "Creating Job Hourly Log Backups" on target "sql2017".
What if: Performing the operation "Reporting status of migration for Hourly Log Backups" on target "sql2017".
What if: Performing the operation "Creating Job IndexOptimize - USER_DATABASES" on target "sql2017".
What if: Performing the operation "Reporting status of migration for IndexOptimize - USER_DATABASES" on target "sql2017".
What if: Performing the operation "Creating Job Output File Cleanup" on target "sql2017".
What if: Performing the operation "Reporting status of migration for Output File Cleanup" on target "sql2017".
What if: Performing the operation "Creating Job Replication agents checkup" on target "sql2017".
What if: Performing the operation "Reporting status of migration for Replication agents checkup" on target "sql2017".
What if: Performing the operation "Creating Job sp_delete_backuphistory" on target "sql2017".
What if: Performing the operation "Reporting status of migration for sp_delete_backuphistory" on target "sql2017".
What if: Performing the operation "Creating Job sp_purge_jobhistory" on target "sql2017".
What if: Performing the operation "Reporting status of migration for sp_purge_jobhistory" on target "sql2017".
What if: Performing the operation "Creating Job SQLWATCH-LOGGER-DISK-UTILISATION" on target "sql2017".
What if: Performing the operation "Reporting status of migration for SQLWATCH-LOGGER-DISK-UTILISATION" on target "sql2017".
What if: Performing the operation "Creating Job SQLWATCH-LOGGER-MISSING-INDEXES" on target "sql2017".
What if: Performing the operation "Reporting status of migration for SQLWATCH-LOGGER-MISSING-INDEXES" on target "sql2017".
What if: Performing the operation "Job syspolicy_purge_history exists at destination. Use -Force to drop and migrate." on target "sql2017".
What if: Performing the operation "Creating Job test" on target "sql2017".
What if: Performing the operation "Reporting status of migration for test" on target "sql2017".
What if: Performing the operation "Copying Agent Properties" on target "sql2017".
What if: Performing the operation "Creating startup procedure dbo.STIG_Trace" on target "sql2017".
What if: Performing the operation "Creating startup procedure dbo.OpenQueryStoreStartup" on target "sql2017".
```


### Environmental information
Name                           Value                                                                                                                                                                                                   
----                           -----                                                                                                                                                                                                   
PSVersion                      5.1.14393.3053                                                                                                                                                                                          
PSEdition                      Desktop                                                                                                                                                                                                 
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                                                 
BuildVersion                   10.0.14393.3053                                                                                                                                                                                         
CLRVersion                     4.0.30319.42000                                                                                                                                                                                         
WSManStackVersion              3.0                                                                                                                                                                                                     
PSRemotingProtocolVersion      2.3                                                                                                                                                                                                     
SerializationVersion           1.1.0.1 

Name    : dbatools
Path    : C:\Program Files\WindowsPowerShell\Modules\dbatools\1.0.83\dbatools.psd1
Version : 1.0.83

Name    : dbatools
Path    : C:\Program Files\WindowsPowerShell\Modules\dbatools\1.0.81\dbatools.psd1
Version : 1.0.81


#### SQL Server: 
Microsoft SQL Server 2016 (SP2-CU7-GDR) (KB4505222) - 13.0.5366.0 (X64)   Jun 15 2019 08:22:25   Copyright (c) Microsoft Corporation  Enterprise Edition: Core-based Licensing (64-bit) on Windows Server 2016 Datacenter 10.0 <X64> (Build 14393: ) (Hypervisor) 

### Report
When using a CDL of servers, only the last one passed in gets executed.
Start-DbaAgentJob -sqlinstance IP1, IP2 -sqlcredential $DCred -job "LSCopy_QDW-Preview_Test"
--above only runs on IP2.
Start-DbaAgentJob -sqlinstance IP1, IP2 -sqlcredential $DCred -job "LSCopy_QDW-Preview_Test"
-- above only runs on IP1

I have verified the job exists on both server.  Command can be run individually with 1 server, but not with multiple




#### Host used
- [XXXX ] ISE


If anything other than powershell.exe was used, please confirm that you can duplicate the issue with powershell.exe

- [XXXX ] Still buggy in powershell.exe

#### Errors Received

no errors.  output just shows the job successful on last server passed in.

#### Steps to Reproduce
run command below adding correct info
Start-DbaAgentJob -sqlinstance <input multiple instances> -sqlcredential <creds here> -job "job name here"


#### Expected Behavior
Job should run on all servers in the CDL

#### Actual Behavior

only runs on last server listed
![image](https://user-images.githubusercontent.com/59977920/72644201-7f9d6b00-393e-11ea-8bb6-021f489763b5.png)

When running Get-DbaDatabase in Azure SQL DB, it fails with error "[Invoke-QueryRawDatabases] Failure | 'SUSER_SNAME' cannot be invoked with parameters in this version of SQL Server." This occurs at lines 261 and 263. Either we can igonor Azure SQL DB's for this or we can update to "SELECT name, database_id, owner_sid, SUSER_SNAME() AS [Owner] FROM sys.databases"
### Summary of new feature

* Support add/removing/updating of data classification for a table column

### Proposed technical details (if applicable)

* Classification Information types and Sensitivity are stored as extended properties on tables
  * The values are GUID's, I've found a mapping table here [GUID Mapping](https://github.com/Azure/azure-powershell/blob/f67e6f777dc35b80214fea3f526abdf53edc25b3/src/Sql/Sql/DataClassification/InformationProtectionPolicy.cs#L34)
* Below is the SQL code that was added when adding a Classification to TABLE1 and Column 'EXPIRATION_TS'. the classfication was Information type: *[NA]* and Sensitivity: *General*
```sql
EXEC sys.sp_addextendedproperty 
     @name = N'sys_information_type_id', 
     @value = N'', 
     @level0type = N'SCHEMA', 
     @level0name = N'dbo', 
     @level1type = N'TABLE', 
     @level1name = N'TABLE1', 
     @level2type = N'COLUMN', 
     @level2name = N'EXPIRATION_TS';
GO
EXEC sys.sp_addextendedproperty 
     @name = N'sys_information_type_name', 
     @value = N'', 
     @level0type = N'SCHEMA', 
     @level0name = N'dbo', 
     @level1type = N'TABLE', 
     @level1name = N'TABLE1', 
     @level2type = N'COLUMN', 
     @level2name = N'EXPIRATION_TS';
GO
EXEC sys.sp_addextendedproperty 
     @name = N'sys_sensitivity_label_id', 
     @value = N'684a0db2-d514-49d8-8c0c-df84a7b083eb', 
     @level0type = N'SCHEMA', 
     @level0name = N'dbo', 
     @level1type = N'TABLE', 
     @level1name = N'TABLE1', 
     @level2type = N'COLUMN', 
     @level2name = N'EXPIRATION_TS';
GO
EXEC sys.sp_addextendedproperty 
     @name = N'sys_sensitivity_label_name', 
     @value = N'General', 
     @level0type = N'SCHEMA', 
     @level0name = N'dbo', 
     @level1type = N'TABLE', 
     @level1name = N'TABLE1', 
     @level2type = N'COLUMN', 
     @level2name = N'EXPIRATION_TS';
GO
```
Here is the same but with the Information Type set to *Other*
```sql
EXEC sys.sp_addextendedproperty 
     @name = N'sys_information_type_id', 
     @value = N'9C5B4809-0CCC-0637-6547-91A6F8BB609D', 
     @level0type = N'SCHEMA', 
     @level0name = N'dbo', 
     @level1type = N'TABLE', 
     @level1name = N'Table1', 
     @level2type = N'COLUMN', 
     @level2name = N'EXPIRATION_TS';
GO
EXEC sys.sp_addextendedproperty 
     @name = N'sys_information_type_name', 
     @value = N'Other', 
     @level0type = N'SCHEMA', 
     @level0name = N'dbo', 
     @level1type = N'TABLE', 
     @level1name = N'Table1', 
     @level2type = N'COLUMN', 
     @level2name = N'EXPIRATION_TS';
GO
EXEC sys.sp_addextendedproperty 
     @name = N'sys_sensitivity_label_id', 
     @value = N'684a0db2-d514-49d8-8c0c-df84a7b083eb', 
     @level0type = N'SCHEMA', 
     @level0name = N'dbo', 
     @level1type = N'TABLE', 
     @level1name = N'Table1', 
     @level2type = N'COLUMN', 
     @level2name = N'EXPIRATION_TS';
GO
EXEC sys.sp_addextendedproperty 
     @name = N'sys_sensitivity_label_name', 
     @value = N'General', 
     @level0type = N'SCHEMA', 
     @level0name = N'dbo', 
     @level1type = N'TABLE', 
     @level1name = N'Table1', 
     @level2type = N'COLUMN', 
     @level2name = N'EXPIRATION_TS';
GO
```
### Latest version of dbatools as of writing

* dbatools 1.0.83

![image](https://user-images.githubusercontent.com/59977920/72558344-8067cb80-3870-11ea-9371-9123743c2378.png)

Came across 2 issues using invoke-dbadblogshipping on version1.0.83.  It appears that when specifying DestinationSQLCredential, it does not properly identify that I passed in a SQL login.  it thinks its a windows login which caused the error shows since source and destination instances are on different domains.

second, it appears that when i used whatif = $True it should not have tried to access the remote share from what i was told.
<!--
Please note, effective June 2019, we will begin closing bug reports that do not follow the bug report format. We ask only what is required to help us resolve the issue faster. We are constantly updating dbatools, so knowing what version you are using, for instance, saves us a ton of time.
-->

<!--
dbatools 1.0 has been released as of June 20, 2019
Please ensure you are on this version before submitting an issue
-->

### Environmental information

<!--
Run below command, paste results below:
& {"``````";"#### PowerShell version:`n$($PSVersionTable | Out-String)"; "`n#### dbatools Module version:`n$(gmo dbatools -List | select name, path, version | fl -force | Out-String)";"``````"} | clip
-->
```
#### PowerShell version:

Name                           Value                                                                                                                                                                                
----                           -----                                                                                                                                                                                
PSVersion                      5.1.14393.2430                                                                                                                                                                       
PSEdition                      Desktop                                                                                                                                                                              
PSCompatibleVersions           {1.0, 2.0, 3.0, 4.0...}                                                                                                                                                              
BuildVersion                   10.0.14393.2430                                                                                                                                                                      
CLRVersion                     4.0.30319.42000                                                                                                                                                                      
WSManStackVersion              3.0                                                                                                                                                                                  
PSRemotingProtocolVersion      2.3                                                                                                                                                                                  
SerializationVersion           1.1.0.1                                                                                                                                                                              




#### dbatools Module version:


Name    : dbatools
Path    : C:\Program Files\WindowsPowerShell\Modules\dbatools\1.0.83\dbatools.psd1
Version : 1.0.83

Name    : dbatools
Path    : C:\Program Files\WindowsPowerShell\Modules\dbatools\1.0.33\dbatools.psd1
Version : 1.0.33

Name    : dbatools
Path    : C:\Program Files\WindowsPowerShell\Modules\dbatools\1.0.22\dbatools.psd1
Version : 1.0.22

Name    : dbatools
Path    : C:\Program Files\WindowsPowerShell\Modules\dbatools\0.9.777\dbatools.psd1
Version : 0.9.777




```

<!-- Only if using non-English versions of Windows -->
<!-- Paste output of `Get-Culture` -->
```powershell
# Replace with output of Get-Culture
```


#### SQL Server: 
<!-- Paste output of `SELECT @@VERSION` -->
```sql
Microsoft SQL Server 2016 (SP2-CU8) (KB4505830) - 13.0.5426.0 (X64)   Jul 21 2019 21:16:47   Copyright (c) Microsoft Corporation  Enterprise Edition: Core-based Licensing (64-bit) on Windows Server 2016 Datacenter 10.0 <X64> (Build 14393: ) (Hypervisor) 
```

<!-- Only if using non-English Database Engine -->
<!-- Paste output of `SELECT @@LANGUAGE` -->
```sql
/* REPLACE WITH output of @@LANGUAGE */
```

### Report

<!--
Things to consider:
- Errors received are not related to permissions?
- Have you tried the same command using powershell.exe instead of a hosted powershell instance like ISE or VS Code?
- If this refers to Copy-DbaDatabase can you replace the problem with Backup-DbaDatabase and Restore-DbaDatabase?
- Copy-DbaDatabase will not work in every environment and every situation. Instead, we try to ensure Backup & Restore work in your environment.
--> 


#### Host used

- [x] powershell.exe
- [ ] ISE
- [ ] VS Code
- [ ] Other (please specify)

If anything other than powershell.exe was used, please confirm that you can duplicate the issue with powershell.exe

- [ ] Still buggy in powershell.exe

#### Errors Received

<!-- 
Run this command and paste below:
& {"``````";$error[0] | select *;"``````"} | clip
-->
```


writeErrorStream      : True
PSMessageDetails      : 
Exception             : System.Exception: Collection was modified; enumeration operation may not execute. ---> System.InvalidOperationException: Collection was modified; enumeration operation may not execute.
                           at System.Collections.SortedList.SortedListEnumerator.MoveNext()
                           at lambda_method(Closure , Object[] , StrongBox`1[] , InterpretedFrame )
                           --- End of inner exception stack trace ---
TargetObject          : [cdc_resource_pool]
CategoryInfo          : OperationStopped: ([cdc_resource_pool]:ResourcePool) [Write-Error], Exception
FullyQualifiedErrorId : dbatools_Copy-DbaResourceGovernor,Stop-Function
ErrorDetails          : Collection was modified; enumeration operation may not execute.
InvocationInfo        : System.Management.Automation.InvocationInfo
ScriptStackTrace      : at Stop-Function, C:\Program Files\WindowsPowerShell\Modules\dbatools\1.0.33\allcommands.ps1: line 80999
                        at Copy-DbaResourceGovernor<Process>, C:\Program Files\WindowsPowerShell\Modules\dbatools\1.0.33\allcommands.ps1: line 8846
                        at <ScriptBlock>, <No file>: line 1
PipelineIterationInfo : {0, 1}

```



#### Steps to Reproduce

<!--
If you have confirmed this issue can be reproduced, please provide the exact steps (T-SQL, PowerShell, ext)
-->
copy-DbaresourceGovernor -Source sourceInstance -Destination destinationInstance -verbose -force
#### Expected Behavior

<!--
What did you expect to happen?
-->
Completely drop and replace the Resource Governor on the destinationInstance
#### Actual Behavior

<!--
What happened?
-->
When the destinationInstance has an existing Resource Pool with a Workload Group, the Workload Group is deleted but the Resource Pool is not. The failure to delete results in a "Moving On" and the group is not recreated
The command provides two ways of passing in multiple accounts to assign SYSADMIN role at installation:

- `-AdminAccount` which is `[string[]]`
- `-Configuration` which you put `SQLSYSADMINACCOUNTS`

However the way it is parsing it is wrong and causes failure. The below ini file is formatted properly with multiple admin accounts being included. The command should be updated to properly populate these in the ini file or on the command line when it is running the command.

Using the `Configuration` the ini file (saving with the `ConfigureFile`) it puts the parameter in as this format:

```
SQLSYSADMINACCOUNTS="LAB\dabadmin LAB\sql01-ny_agent LAB\sql01-ny_engine"
```

The correct format being:

```
SQLSYSADMINACCOUNTS="LAB\dabadmin" "LAB\sql01-ny_agent" "LAB\sql01-ny_engine"
```

The correct ini format is below:

```
PS> Enter-PSSession -VMName $vmname -Credential $domainCred
[SQL01 (New York)]: PS C:\Users\dabadmin\Documents> Get-Content .\install.ini
[OPTIONS]
FEATURES="SQLENGINE,FullText,Conn"
SQLUSERDBDIR="F:\SQL\USER\DATA"
QUIET="True"
SQLTEMPDBLOGDIR="F:\SQL\TEMPDB"
SQLBACKUPDIR="F:\SQL\DATA\BACKUPS"
TCPENABLED="1"
ACTION="Install"
HELP="False"
AGTSVCSTARTUPTYPE="Automatic"
INSTALLSHAREDDIR="E:\Programs\SQL Server"
RSSVCSTARTUPTYPE="Automatic"
ERRORREPORTING="False"
SQLSVCSTARTUPTYPE="Automatic"
INSTALLSQLDATADIR="F:\SQL\DATA"
X86="False"
SQLCOLLATION="SQL_Latin1_General_CP1_CI_AS"
SQMREPORTING="False"
UPDATEENABLED="1"
SQLUSERDBLOGDIR="F:\SQL\USER\LOG"
INSTANCENAME="MSSQLSERVER"
INSTANCEDIR="E:\Programs\SQL Server"
INDICATEPROGRESS="False"
INSTANCEID="MSSQLSERVER"
INSTALLSHAREDWOWDIR="E:\Programs (x86)\SQL Server"
QUIETSIMPLE="False"
SQLTEMPDBDIR="F:\SQL\TEMPDB"
ENABLERANU="False"
SQLSYSADMINACCOUNTS="LAB\dabadmin" "LAB\sql01-ny_agent" "LAB\sql01-ny_engine"
BROWSERSVCSTARTUPTYPE="Manual"
SQLTEMPDBFILECOUNT="1"
FILESTREAMLEVEL="0"
[SQL01 (New York)]: PS C:\Users\dabadmin\Documents> Install-DbaInstance -Version 2019 -Path 'D:\' -ConfigurationFile .\install.ini -Confirm:$false


ComputerName : SQL01-NY.lab.local
InstanceName : MSSQLSERVER
Version      : 15.0
Port         :
Successful   : True
Restarted    : False
Installer    : D:\setup.exe
ExitCode     : 0
LogFile      : C:\Program Files\Microsoft SQL Server\150\Setup Bootstrap\Log\Summary.txt
Notes        : {}
```
`RSINSTALLMODE="DefaultNativeMode"`

The above is added to the ini file I save out when I'm not asking or providing RS in features config.

```powershell
$config = @{
    UPDATEENABLED = 1
    FEATURES = "SQLENGINE,FullText,Conn"
    INSTANCEDIR = 'E:\Programs\SQL Server'
    INSTALLSHAREDDIR = 'E:\Programs\SQL Server'
    INSTALLSHAREDWOWDIR = 'E:\Programs (x86)\SQL Server'
    INSTALLSQLDATADIR = 'F:\SQL\DATA'
    SQLBACKUPDIR = 'F:\SQL\DATA\BACKUPS'
    SQLTEMPDBDIR = 'F:\SQL\TEMPDB'
    SQLTEMPDBLOGDIR = 'F:\SQL\TEMPDB'
    SQLUSERDBDIR = 'F:\SQL\USER\DATA'
    SQLUSERDBLOGDIR = 'F:\SQL\USER\LOG'
    TCPENABLED = 1
    BROWSERSVCSTARTUPTYPE = 'Manual'
}

# Install-DbaInstance -Version 2019 -Path 'D:\' -Configuration $config -EngineCredential $credEngine -AgentCredential $credAgent -PerformVolumeMaintenanceTask -Restart
```

The RSINSTALLMODE should not be provided on versions 2017 and above, nor should it be provided if not passed in the Configuration parameter as a feature.