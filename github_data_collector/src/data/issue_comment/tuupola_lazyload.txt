Added quotes because without them some images (e.g. with parenthesis in name) arent loaded properly
Does 'lazyload' support lazyloading of background images (css), like [bLazy](https://github.com/dinbror/blazy), for example? What about iframes?
Lazy loading images using the library works without problems, but when i include my page in another page inside an iframe it suddenly stops working. I have a bunch of images that have the `data-src` attribute and I just call lazyload after adding them to the page

```
new Lazyload(null, {
  rootMargin: '100px',
});
```

I also tried setting a root element for the intersection observer but without success.

I'm not sure if this is a problem with the library or with the intersection observer. The [MDN page](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) mentions something about iframes but I've read that paragraph 3 times now and I just don't get it ðŸ˜… 
Using v2
Working fine on load but not working on ajax response
how to solve the problem after Blur effect
you can see that after the Blur effect,
it turn white
and the photo show from top to bottom.


![11](https://user-images.githubusercontent.com/16351105/57912917-0c7abb00-78be-11e9-91d5-837bb31a18a5.gif)


can we fade in the images instead of just popup?
Be great if the documentation mentioned which browser versions are supported by v2.x. AFAIK it requires `IntersectionObserver` for lazy loading, and it falls back to loading all the images immediately on older browsers?

I haven't tested these all myself:

- Internet Explorer - no
- Microsoft Edge 15+ (2017)
- Chrome 51+ (2016)
- Firefox 55+ (2017)
- Safari 12.1+ (2019)

See [https://caniuse.com/#feat=intersectionobserver](url)
https://addyosmani.com/blog/lazy-loading/
Hi,

Thanks for this great work

I noticed a recent issue with Google Console: URL Inspection shows a screenshot without the lazyloaded images, and the "more info" tab shows a JS error:
`Uncaught TypeError: undefined is not a function
https://www.my-website.com/assets/javascripts/plugins/loaders/lazyload.js:136`

I tested with a minimal test file.

Updated so that if an image fails to load in data-src or data-srcset, it will revert to the original default src value as in:

```
<img src="default.jpg" data-src="imageToLoad.jpg" data-srcset="imageToLoad.jpg 1x, imageToLoadRetina.jpg 2x">
```

It does this by creating a data-original attribute when changing the src value.