Hello,

I use Multicore-opt-TSNE on a big data, 24 000 000 events and 18 parameters on a ubuntu server with 40 core, and 500G Ram  with this command line : 

`python2 MulticoreTSNE/run/run_optsne.py --optsne --data Data.csv --outfile Data_tsne.csv --n_threads 40 --perp 50 `

and i have this error : `Memory allocation failed!`

Can you tell me if i change something in my commande line (in my parameters) i have more luck to run my job or if you know the setup necessary to run a Multicore-Tsne on thi big data ?

Best regards.

Quentin Barbier


Hello,

Both through the pip and git clone install I get this:

`  ERROR: running bdist_wheel
  running build
  running build_py
  creating build
  creating build/lib.linux-x86_64-3.7
  creating build/lib.linux-x86_64-3.7/MulticoreTSNE
  copying MulticoreTSNE/__init__.py -> build/lib.linux-x86_64-3.7/MulticoreTSNE
  creating build/lib.linux-x86_64-3.7/MulticoreTSNE/tests
  copying MulticoreTSNE/tests/__init__.py -> build/lib.linux-x86_64-3.7/MulticoreTSNE/tests
  copying MulticoreTSNE/tests/test_base.py -> build/lib.linux-x86_64-3.7/MulticoreTSNE/tests
  running egg_info
  creating MulticoreTSNE.egg-info
  writing MulticoreTSNE.egg-info/PKG-INFO
  writing dependency_links to MulticoreTSNE.egg-info/dependency_links.txt
  writing requirements to MulticoreTSNE.egg-info/requires.txt
  writing top-level names to MulticoreTSNE.egg-info/top_level.txt
  writing manifest file 'MulticoreTSNE.egg-info/SOURCES.txt'
  reading manifest file 'MulticoreTSNE.egg-info/SOURCES.txt'
  reading manifest template 'MANIFEST.in'
  writing manifest file 'MulticoreTSNE.egg-info/SOURCES.txt'
  running build_ext
  cmake version 3.14.4
  
  CMake suite maintained and supported by Kitware (kitware.com/cmake).
  -- The CXX compiler identification is unknown
  CMake Error at CMakeLists.txt:1 (PROJECT):
    No CMAKE_CXX_COMPILER could be found.
  
    Tell CMake where to find the compiler by setting either the environment
    variable "CXX" or the CMake cache entry CMAKE_CXX_COMPILER to the full path
    to the compiler, or to the compiler name if it is in the PATH.
  
  
  -- Configuring incomplete, errors occurred!
  See also "/tmp/pip-req-build-ztrw2075/build/temp.linux-x86_64-3.7/CMakeFiles/CMakeOutput.log".
  See also "/tmp/pip-req-build-ztrw2075/build/temp.linux-x86_64-3.7/CMakeFiles/CMakeError.log".
  
  ERROR: Cannot generate Makefile. See above errors`
I am using a python 3.7 version and could not install MulticoreTSNE using conda, or using pip (pip install MulticoreTSNE) since it tries to downgrade a few installed packages, including python itself (to 3.6.8). Below is the error message.

Should we be expecting MulticoreTSNE to be compatable with python 3.7, or would you recommend installing 3.6.8? I would avoid the latter, since it means quite a bit of reloading.

Cheers


## Upon trying to install:

The following packages will be DOWNGRADED:

  _ipyw_jlab_nb_ext~                           0.1.0-py37_0 --> 0.1.0-py36_0
  louvain                              0.6.1-py37h0a44026_2 --> 0.6.1-py36h0a44026_2
  mkl-service                          1.1.2-py37hfbe908c_5 --> 1.1.2-py36hfbe908c_5
  navigator-updater                            0.2.1-py37_0 --> 0.2.1-py36_0
  pot                               0.5.1-py37h1702cab_1000 --> 0.5.1-py36h1702cab_1000
  pycairo                          1.18.0-py37ha54c0a8_1000 --> 1.18.0-py36ha54c0a8_1000
  pycurl                            7.43.0.2-py37ha12b0ac_0 --> 7.43.0.2-py36ha12b0ac_0
  pyqt                                 5.9.2-py37h655552a_2 --> 5.9.2-py36h655552a_2
  pyreadr                              0.1.9-py37h2573ce8_0 --> 0.1.9-py36h2573ce8_0
  **python                                   3.7.3-h359304d_0 --> 3.6.8-haf84260_0**
  python-igraph                  0.7.1.post7-py37h01d97ff_0 --> 0.7.1.post7-py36h01d97ff_0
  sphinxcontrib                                  1.0-py37_1 --> 1.0-py36_1

Wonderful work! The API is simply perfect. But I wonder to know how to see the steps I have run and how can I visualize every step during the progress?

Tiny fix for issue #62, compiles fine and `pip install .` now works. The problem was a simple typo.
For some reason, the information being printed out when using the `verbose` flag was outputting to `stderr` and not `stdout`. This makes sense for errors, but not for general information. Was this done for a specific reason?
Hello 

I get "segmentation fault (core dumped)" when run multicore-tsne. One of the cases that the crash occurs is when the input data contains lots of zeros. Is there any fix for this problem? 
Thanks

```
from MulticoreTSNE import MulticoreTSNE as TSNE
import numpy as np
tsne = TSNE(n_jobs=40, perplexity=30)
tsne.fit(np.zeros([5,3]))
```
```python
import numpy as np

print(np.log(np.nextafter(0, np.inf, dtype=np.float64)))

from MulticoreTSNE import MulticoreTSNE as TSNE
tsne = TSNE(n_jobs=6)

print(np.log(np.nextafter(0, np.inf, dtype=np.float64)))

```
Result:
```python
# print(np.log(np.nextafter(0, np.inf, dtype=np.float64)))
-744.4400719213812
# from MulticoreTSNE import MulticoreTSNE as TSNE
# tsne = TSNE(n_jobs=6)
# print(np.log(np.nextafter(0, np.inf, dtype=np.float64)))
__main__:1: RuntimeWarning: divide by zero encountered in log
-inf
```

**After calling `tsne = TSNE(n_jobs=6)` my numpy is not working any more as intended.**

How can I fix this?