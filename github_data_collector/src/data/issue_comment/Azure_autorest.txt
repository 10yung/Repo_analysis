We have documented response types and error types in our swagger. I've added the x-ms-error-response extension to all responses except the 200/OK response.

The generated code now picks up the correct type in the signature, but tries to assign _all_ responses, incl. the errors to a field of the type of the OK response.

I generated the code with autorest --csharp --input-file=Desktop\swagger.json
Is there any other switch I need to set here?

Generated code:
if ((int)_statusCode == 200)
{
    _responseContent = await _httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
    _result.Body = SafeJsonConvert.DeserializeObject<IList<KeywordDataset>>(_responseContent, DeserializationSettings);
}
if ((int)_statusCode == 401)
{
    _responseContent = await _httpResponse.Content.ReadAsStringAsync().ConfigureAwait(false);
    _result.Body = SafeJsonConvert.DeserializeObject<ErrorContent>(_responseContent, DeserializationSettings);
}

Both types are assigned to the same field, which will of course not work. Any clue how I can generate correctly compiling code?
When "Azure-arm: true" is set, api-version will be missing in the generated code. And the error is as below when running a powershell cmdlet.

_PS C:\Users\xidi\src\azure-powershell\src\HanaOnAzure [Az.Hana]> Get-AzHanaInstance
Get-AzHanaInstance : The api-version query parameter (?api-version=) is required for all requests.
At line:1 char:1
+ Get-AzHanaInstance
+ ~~~~~~~~~~~~~~~~~~
+ CategoryInfo          : InvalidOperation: ({ SubscriptionId = System.String[] }:<>f__AnonymousType2`1) [Get-AzHanaInstance_List], RestException`1
+ FullyQualifiedErrorId : MissingApiVersionParameter,Microsoft.Azure.PowerShell.Cmdlets.Hana.Cmdlets.GetAzHanaInstance_List_

According to comments from Garrett, "Azure-arm: true" is what the v2 generators used, and we need to fix this bad side effect this switch makes on autorest v3.
@bganapa Create a bug.

I removed nodejs from the machine.  Deleted all npm folders and caches.  Reinstalled nodejs v10.15.3 and installed using the following command and it still doesn't work,

```
 npm install -g @autorest/autorest
```

```
E:\github\azure-powershell\src\StackAdmin\Azs.Compute.Admin>autorest-beta
AutoRest code generation utility [version: 3.0.6149; node: v10.15.3, max-memory: 8192 gb]
(C) 2018 Microsoft Corporation.
https://aka.ms/autorest
   Loading AutoRest core      'C:\Users\jerobins.REDMOND\node_modules\@microsoft.azure\autorest-core\dist' (2.0.4407)
Failed to acquire 'require'd configuration 'file:///E:/github/azure-powershell/src/StackAdmin/Azs.Compute.Admin/readme.azurestack.md'
  Error: Could not read 'file:///E:/github/azure-powershell/src/StackAdmin/Azs.Compute.Admin/readme.azurestack.md'.
```


```
Windows 10
AutoRest code generation utility [version: 2.0.4407; node: v12.14.1]
```

I installed the newest autorest and when I do the commands,

```
> autorest --latest
> autorest --reset
```

I get the following error,

```
[Exception] No input files provided.
```

Here is the screenshot.

![image](https://user-images.githubusercontent.com/1381210/72197265-414efb80-33d4-11ea-9f01-9fc1d4d262aa.png)


Hi!
There is a question about Autorest 3.
I have the following simplest scheme:
```json
{
  "openapi": "3.0.1",
  "info": {
    "title": "zzzzzzzzzzzzzzzz Solution REST API documentation",
    "description": "For this sample, you can use the key to satisfy the authorization filters.",
    "termsOfService": "https://zzzzzzzzzzzzzzzz.com/terms",
    "contact": {
      "name": "zzzzzzzz zzzzzzzz",
      "url": "https://zzzzzzzzzzzzzzzz.com",
      "email": "support@zzzzzzzzzzzzzzzz.com"
    },
    "license": {
      "name": "zzzzzzzz zzzzzzzz Open Software License 3.0",
      "url": "http://zzzzzzzzzzzzzzzz.com/opensourcelicense"
    },
    "version": "v1"
  },
  "paths": {
    "/api/platform/security/users": {
      "delete": {
        "tags": [
          "zzzzzzzzzzzzzzzz platform"
        ],
        "summary": "Delete users by name",
        "operationId": "Security_Delete",
        "parameters": [
          {
            "name": "names",
            "in": "query",
            "description": "An array of user names.",
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "nullable": true
              },
              "nullable": true
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Success"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          }
        }
      }
    }
  }
}
```
The string array is in the method parameter.
If I try to apply autorest to this spec, I'll get an error:  `autoRest : FATAL: System.NotSupportedException: Collection format None is not supported.`
Could you explain me what is wrong with this spec? Or is there a some autorest bug?
Versions:
```
AutoRest code generation utility [version: 3.0.6151; node: v10.16.0, max-memory: 8192 gb]
   Loading AutoRest core      'C:\Users\admin\AppData\Roaming\npm\node_modules\@autorest\core\dist' (3.0.6182)
```
Thanks!
On Linux, the PHP generator appears to ignore the `--output-folder` option.  Using the OpenAPI petstore example in a fresh project:

```sh
cd "$(mktemp -d)"
npm init -y
npm install autorest
wget https://raw.githubusercontent.com/OAI/OpenAPI-Specification/master/examples/v2.0/yaml/petstore.yaml
./node_modules/.bin/autorest --php --input-file=petstore.yaml --output-folder=generated-php
```
Fails with the following output:

    AutoRest code generation utility [version: 2.0.4407; node: v10.17.0]
    (C) 2018 Microsoft Corporation.
    https://aka.ms/autorest
       Loading AutoRest core      '/home/kevin/.autorest/@microsoft.azure_autorest-core@2.0.4407/node_modules/@microsoft.azure/autorest-core/dist' (2.0.4407)
       Loading AutoRest extension '@microsoft.azure/autorest.php' (~2.0.12->2.0.16)
       Loading AutoRest extension '@microsoft.azure/autorest.modeler' (2.1.22->2.1.22)
      Error: EACCES: permission denied, open '/SwaggerPetstore.php'

It appears that autorest ignores `--output-folder` and tries to create the files at the filesystem root.

Thanks,
Kevin
The code generated for an enum schema with `x-ms-enum` does not escape string values for the target language, which can cause invalid code to be generated.  For example, generating C# for an enum with a string value that contains `"`, `\n`, or `\\` will generate incorrect or invalid code.

<details>
<summary>Full OpenAPI Example</summary>

```json
{
  "swagger": "2.0",
  "info": {
    "title": "Problematic enum strings example",
    "version": "1.0.0"
  },
  "definitions": {
    "ErrorMessage": {
      "type": "string",
      "enum": [
        "Error:\tInvalid character: \\",
        "Error:\tInvalid quote character: \"",
        "TypeError:\tInvalid type.\nBigInt is not supported."
      ],
      "x-ms-enum": {
        "name": "ErrorMessage",
        "modelAsString": false
      }
    }
  },
  "paths": {
    "/last-error": {
      "get": {
        "operationId": "getLastError",
        "responses": {
          "200": {
            "description": "Success",
            "schema": {
              "$ref": "#/definitions/ErrorMessage"
            }
          }
        }
      }
    }
  }
}
```
</details>
<details>
<summary>Generated C#</summary>

```csharp
// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace OpenapiEscaping.Models
{
    using Newtonsoft.Json;
    using Newtonsoft.Json.Converters;
    using System.Runtime;
    using System.Runtime.Serialization;

    /// <summary>
    /// Defines values for ErrorMessage.
    /// </summary>
    [JsonConverter(typeof(StringEnumConverter))]
    public enum ErrorMessage
    {
        [EnumMember(Value = "Error:	Invalid character: \")]
        ErrorInvalidcharacter,
        [EnumMember(Value = "Error:	Invalid quote character: "")]
        ErrorInvalidquotecharacter,
        [EnumMember(Value = "TypeError:	Invalid type.
        BigInt is not supported.")]
        TypeErrorInvalidtypeBigIntisnotsupported
    }
    internal static class ErrorMessageEnumExtension
    {
        internal static string ToSerializedValue(this ErrorMessage? value)
        {
            return value == null ? null : ((ErrorMessage)value).ToSerializedValue();
        }

        internal static string ToSerializedValue(this ErrorMessage value)
        {
            switch( value )
            {
                case ErrorMessage.ErrorInvalidcharacter:
                    return "Error:	Invalid character: \";
                case ErrorMessage.ErrorInvalidquotecharacter:
                    return "Error:	Invalid quote character: "";
                case ErrorMessage.TypeErrorInvalidtypeBigIntisnotsupported:
                    return "TypeError:	Invalid type.
                    BigInt is not supported.";
            }
            return null;
        }

        internal static ErrorMessage? ParseErrorMessage(this string value)
        {
            switch( value )
            {
                case "Error:	Invalid character: \":
                    return ErrorMessage.ErrorInvalidcharacter;
                case "Error:	Invalid quote character: "":
                    return ErrorMessage.ErrorInvalidquotecharacter;
                case "TypeError:	Invalid type.
                BigInt is not supported.":
                    return ErrorMessage.TypeErrorInvalidtypeBigIntisnotsupported;
            }
            return null;
        }
    }
}
```
</details>

Note that the error occurs whether `modelAsString` `true` or `false`.

Thanks for considering,
Kevin
In Autorest V3, the "model-deduplicator" step takes ~8 minutes when process swagger of data factory: ...\azure-rest-api-specs\specification\datafactory\resource-manager\readme.md

![image](https://user-images.githubusercontent.com/6038235/72063615-10f45800-3315-11ea-9380-0b627309f7da.png)


Hi. We recently upgraded Newtonsoft.Json to 12.0.3 from 11.0.2 and started getting this error:

Exception has been thrown by the target of an invocation.System.Reflection.TargetInvocationException: Exception has been thrown by the target of an invocation. ---> System.TypeLoadException: Method 'get_SerializationSettings' in type 'TestClient' from assembly 'Test, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null' does not have an implementation.

Here is a sample implementation of my TestClient:

```
public class TestClient:  ServiceClient<TestClient>, IAzureClient {
    public JsonSerializerSettings SerializationSettings { get; private set; }
    public TestClient() {
        SerializationSettings = new JsonSerializerSettings();
    }

}
```

- I am using these AutoRest packages:
Microsoft.Rest.ClientRuntime - 2.3.18
Microsoft.Rest.ClientRuntime.Azure - 3.3.18
Microsoft.Rest.ClientRuntime.Azure.Authentication - 2.3.6
It works well if the swagger file is located in https://github.com/Azure/azure-rest-api-specs. But if the swagger file is located in a private repo, it will report an error as below.
![error](https://user-images.githubusercontent.com/11451757/71875906-6f2c0a00-3160-11ea-8dfa-c9b973ee269b.jpg)
