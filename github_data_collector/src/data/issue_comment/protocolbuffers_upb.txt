Make it possible for a user to define a different version of the upb dependencies by wrapping them in maybe(). Then the upb dependencies will not be added if they previously have been declared.
Context: https://github.com/bazelbuild/bazel/issues/10270
Hi, 

I'm building gRPC in Envoyproxy as an external bazel repository. gRPC calls `grpc_deps()` and `grpc_extra_deps()` in their workspace. `grpc_extra_deps()` includes loading `upb_deps()`. However, Envoy independently uses zlib, and we run into a problem linking against two copies of the library. I run in to the error:
```
ERROR: /usr/local/google/home/asraa/.cache/bazel/_bazel_asraa/f23f95d44d486dfd95cb67d4d7eb464d/external/upb/bazel/workspace_deps.bzl:30:5: no such target '@com_google_protobuf//:third_party/zlib.BUILD': target 'third_party/zlib.BUILD' not declared in package ''; however, a source file of this name exists.  (Perhaps add 'exports_files(["third_party/zlib.BUILD"])' to /BUILD?) defined by /usr/local/google/home/asraa/.cache/bazel/_bazel_asraa/f23f95d44d486dfd95cb67d4d7eb464d/external/com_google_protobuf/BUILD and referenced by '//external:zlib'
```

I believe the problem is similar to https://github.com/protocolbuffers/protobuf/pull/5784. Would loading zlib if not existing in `upb_deps()` solve the issue?

Here is the reproducing code when importing gRPC 1.25.0 in to Envoy: https://github.com/envoyproxy/envoy/pull/8968


As it says in the description, I cannot see how your CMakeList.txt would be able to install the libraries and headers. Maybe your intention is to support this later?

`upb` and `rules_foreign_cc` both define `bazel_version` files and they conflict with each other.

https://github.com/bazelbuild/rules_foreign_cc/blob/a0dc109915cea85909bef586e2b2a9bbdc6c8ff5/workspace_definitions.bzl#L91

https://github.com/protocolbuffers/upb/blob/master/bazel/workspace_deps.bzl#L7

I'm guessing they should be prefixed with the library name, e.g. upb_bazel_version.
The Ubuntu status link in the README, for example, points to <https://fusion.corp.google.com/projectanalysis/summary/KOKORO/prod%3Aupb%2Fubuntu%2Fcontinuous>. This page is not accessible to non-Googlers.

In commit 84fb01ad0f7301b416e03d97fbffef1a7512e7ea you removed third_party/protobuf submodule
But submodule entry still exists in .gitmodules file
This causes problem on CI when it trying to recursive mirror repositories locally

Please remove entry from .gitmodules if submodule is not needed anymore or restore submodule if it was removed by mistake

Thanks!
https://github.com/google/oss-fuzz#accepting-new-projects