I've been playing around with slickless for the past few days. I'm particularly interested in getting extensible records to work with slick. A "record projection" would be a nice feature IMHO. Either by providing a `RecordShape` or by a `MappedProjection`.

    class Users(tag: Tag) extends Table[Long :: String :: HNil](tag, "users") {
      def id    = column[Long]( "id", O.PrimaryKey, O.AutoInc )
      def email = column[String]("email")

      def * = ('id ->> id) :: ('email ->> email) :: HNil    // support by RecordShape
      // or
      def * = (id :: email :: HNil).mappedWithRecord('id :: 'email :: HNil)  // support by MappedProjection
    }

As I just started my journey with shapeless, I could not get any of these two approaches to work. The closest I could come up with is a non working MappedProjection:

    def mappedWithRecord[R <: HList : ClassTag, U <: HList, K <: HList](keys: K)
      (implicit
        shape: Shape[_ <: FlatShapeLevel, T, U, _]) =
      new MappedProjection[R, U](
        shape.toNode(hlist),
        MappedScalaType.Mapper(
          ((f: HList) => f.zipWithKeys(keys)).asInstanceOf[Any => Any], // compiler error: could not find implicit value for parameter withKeys: shapeless.ops.hlist.ZipWithKeys[K,shapeless.HList]

          ((g: HList) => ???).asInstanceOf[Any => Any],
          None
        ),
        implicitly[ClassTag[R]]
      )
    }

So basically my two questions are:

1. Would it even be possible to provide a `RecordShape`? Unfortunately I could not even figure out where to start...
2. Why can't the compile find the implicit parameter `withKeys` in the code above? What am I missing?
The project build depends on slick and shapeless, naturally. But should they be run-time dependencies to allow the end user to make minor version changes?

Not sure what the best practice is here.  For example, as of right now while I'm writing this issue, we've published slickless for Slick 3.2.0-M2. If I want to use this with 3.2.0 final I see:

```
[warn] There may be incompatibilities among your library dependencies.
[warn] Here are some of the libraries that were evicted:
[warn] 	* com.typesafe.slick:slick_2.12:3.2.0-M2 -> 3.2.0
[warn] Run 'evicted' to see detailed eviction warnings
```

I think we can mark these lines as `% runtime` (or something like that):

https://github.com/underscoreio/slickless/blob/master/build.sbt#L21-L22

I'll do that, unless anyone wants to point to th error of my ways :-)

Nuff said ...