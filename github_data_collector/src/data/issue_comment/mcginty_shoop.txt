I have two basically identically-setup laptops here and for some reason ssh keeps failing after a few gigabytes of data. I want to try shoop and installed it on both devices but when I try to transfer any file in either direction I am only asked to give the password (for the ssh connection) two times and then shoop immediately exits with code `1` without creating the file locally.

How do I debug this? `--debug` only shows ` - establishing SSH session...`.

right now it just crashes and causes an SSH error

Really, I'd like to have an interface kind of similar to hashcat where you can hit "q" at any time during the transfer to quit, "r" to force-reinitialize the session connection (until we make the connection detection good enough to not need it).

Hi. I tested shoop on my environment and see that it 5x times slower than scp.

My environment:

**Client:**
- Core i5 with 8Gb RAM
- Debian 8 with latest updates
- Rust from rustup 0.5.0 (4be1012 2016-07-30)
- libsodium 1.0.0-1 from debian repos
- shoop 0.0.1-prealpha.4

**Server:**
- Digital Ocean 512Mb droplet
- Debian 8 with latest updates
- Rust from rustup 0.5.0 (4be1012 2016-07-30)
- libsodium 1.0.0-1 from debian repos
- shoop 0.0.1-prealpha.4

**Network and test file:**
- Broadband connection, speed is around 40Mbit/s. 
- Ping and speed to the USA: http://www.speedtest.net/my-result/5546858786
- Test file is a 1GB sample, downloaded from http://www.thinkbroadband.com/download.html

**SCP:**

```
strangeman@strangebook:~/tmp$ time scp root@104.236.122.157:/root/1GB.zip .
1GB.zip                                                  100% 1024MB   4.1MB/s   04:08    

real    4m12.082s
user    0m7.052s
sys 0m10.004s
```

**SHOOP:**

```
strangeman@strangebook:~/tmp$ time shoop root@104.236.122.157:/root/1GB.zip 
downloading ./1GB.zip (1024.0MB)
   1024.0M / 1024.0M (100%) [ avg 0.8 MB/s ]
shooped it all up in 20m48s

real    20m51.508s
user    13m48.492s
sys 7m9.124s
```

Why? Did shoop optimised only for slow and unstable connections?

Depending on how advanced we want to be, this could be as easy as having the client request starting at the existing size of a file.

defeats the purpose of connection resumption, silly @mcginty

- opening UDT connection...[E] errrrrrrr connecting to 192.168.1.4:60500 - UdtError { err_code: 1001, err_msg: "Connection setup failure: connection time out." }

which makes sense, as the client is not inside the LAN. But it should make the UDT connection to the same ip as the original ssh did.

Hey Jake! Just wanted to let you know that I got shoop up and running on my server! Great stuff!
The one bit of feedback that I have is regarding the ports that shoop uses. It was kind of annoying having to manually open those ports, so it would be nice to have UPnP support or something. 

Any solution that involves not having to manually open ports would be nice. Feel free to close this issue if you don't think it's worthwhile.

Snappy or LZ4 comes to mind: https://github.com/BurntSushi/rust-snappy, https://github.com/bozaro/lz4-rs
