i use this script in a rails application , but at this time the application is getting multitenant and i have to create folders for each tenant , i will trigger the script with a rake task with whenever gem ...
What is the query of mongodb that will take the datas in each model (with a tenant_id) and store it in a folder with the name or id of tenant ... at this time there is no need to store tenant model. Just for the models data belongs to tenants. 


## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Server type and version:
* Operating System and version:


<!--- Please notice that this Project is not under current/heavy development -->
<!--- If you would like to take ownership, get in contact with the maintainers -->


<!--- Provide a general summary of the issue in the Title above -->

## Expected Behavior
<!--- If you're describing a bug, tell us what should happen -->
<!--- If you're suggesting a change/improvement, tell us how it should work -->

## Current Behavior
<!--- If describing a bug, tell us what happens instead of the expected behavior -->
<!--- If suggesting a change/improvement, explain the difference from current behavior -->

## Possible Solution
<!--- Not obligatory, but suggest a fix/reason for the bug, -->
<!--- or ideas how to implement the addition or change -->

## Steps to Reproduce (for bugs)
<!--- Provide a link to a live example, or an unambiguous set of steps to -->
<!--- reproduce this bug. Include code to reproduce, if relevant -->
1.
2.
3.
4.

## Context
<!--- How has this issue affected you? What are you trying to accomplish? -->
<!--- Providing context helps us come up with a solution that is most useful in the real world -->

## Your Environment
<!--- Include as many relevant details about the environment you experienced the bug in -->
* Version used:
* Server type and version:
* Operating System and version:

OS: Ubuntu 16.04
Mongo version 3.4

ISSUE:
Started running the bash script providing the hostname, port, user, password and auth database but it just creates an empty log file, empty folders in the location.
But it does not start any backup or doesn't write any logs can anyone please help me here.

--quiet should be removed from mongodump. its not available in the actually version.

[root@vsm-prod backuptest]# mongodump --version
mongodump version 2.2.0


Sorry but i tried to run this script and its  giving this error 
automongobackup.sh: 368: [: yes: unexpected operator
automongobackup.sh: 393: [: yes: unexpected operator

MongoDB  version v2.6.10
ubuntu 16.04 LTS




Hello! Currently we can run a command when the backup finishes with the `POSTBACKUP` option. I'm wondering whether there's a way to run a command specifically when the backup fails, or if there's some way to detect if it failed from within the `POSTBACKUP` option?

My use case is: I have no idea how to set up `mail` on my server, and would like to use a simple nodejs script like this:
```
require('nodemailer').createTransport('smtps://blablablabh.com%40gmail.com:hf92ugbijvb29vub92u29vu2b922b92bviw9bv9@smtp.gmail.com').sendMail({to:'myemail@gmail.com', from:'automongobackup', subject:'automongobackup ERROR - check your logs!'});
```
I'm a bash noob, so if this is not something that's achievable, that's cool - I'll try wrangle together some workaround. Thanks!
I configured this script to just do daily and hourly backups on a single instance of mongod w/o auth. Pretty simple. My question is when I enable both daily / hourly to "yes", how do I schedule this in cron.daily or crontab? Would I need to schedule this script every hour and if so, does that mean it will take a full backup (daily) every single hour I really just want an hourly backup? Confused on how the logic flows here. How do I get dailys at 1 AM and an hourly backup every hour? Are they just full hourly dumps?
`mongodump` executable may be missing and in order to improve the UX the script should attempt to install it using this logic

* if `dnf` is present, try `dnf install -y mongo-tools`
* if `yum` is present, try `yum install -y mongo-tools`
* if `apt-get` is present, try `apt-get install -y ???`

Implementing this would avoid some confusions like the ones from #18 
```
+(automongobackup:454): select_secondary_member(): local __return=secondary
+(automongobackup:458): select_secondary_member(): members=($(mongo --quiet --host $DBHOST:$DBPORT --eval 'rs.conf().members.forEach(function(x){ print(x.host) })' $OPTSEC ))
++(automongobackup:458): select_secondary_member(): mongo --quiet --host 127.0.0.1:27017 --eval 'rs.conf().members.forEach(function(x){ print(x.host) })'
^C
root@mondogb:/var/backups/mongodb# mongo --quiet --host 127.0.0.1:27017 --eval 'rs.conf().members.forEach(function(x){ print(x.host) })'
2016-09-06T21:44:29.413+0200 TypeError: Cannot read property 'members' of null
root@mongodb:/var/backups/mongodb#
```

I havent any inforamtion about this error in logs. 

I think it is nice to be able to use a script from GitHub without modifying the script itself so that updates are as simple as a pull. To make that easier it would be good to include an example external config file to start from. 

I'm guessing you'll want some changes to this before it goes in so just let me know or feel free to commandeer this change.  

BTW wonderful simple backup script, thanks.

I'm getting this error.

```
Failed: error getting database names: not authorized on admin to execute command { listDatabases: 1 }
```

Tried using users with "backup" role and "root" role.  Logging in through the shell and doing "show dbs" works fine.  Mongodb 3.2.
