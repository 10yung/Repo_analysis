I get this error, when i am setting allowed file types and then select file from file browser: 
```
ERROR TypeError: this.contentTypes.find is not a function
    at NgUploaderService.push../node_modules/ngx-uploader/fesm5/ngx-uploader.js.NgUploaderService.allContentTypesAllowed (ngx-uploader.js:365)
    at NgUploaderService.push../node_modules/ngx-uploader/fesm5/ngx-uploader.js.NgUploaderService.isContentTypeAllowed (ngx-uploader.js:376)
    at ngx-uploader.js:73
    at FileList.reduce (<anonymous>)
    at NgUploaderService.push../node_modules/ngx-uploader/fesm5/ngx-uploader.js.NgUploaderService.handleFiles (ngx-uploader.js:70)
    at HTMLInputElement.NgFileSelectDirective.fileListener (ngx-uploader.js:568)
```
This method is in app.component.ts

    startUpload(): void {
        const event: UploadInput = {
            type: 'uploadAll',
            url: 'http://test.com77s/8887',
            method: 'POST',
            data: {
                test: 'test'
            }
        }
        console.info('Starting upload', event, this);
        this.uploadInput.emit(event);
    }

This code is in app component and I want to upload it using upload component which is child of app component.

When I try putting the <input> directly to app component its working but when I try to do it from child its not working 

    <app-select-files (parentStartUploadButtonClick)="startUpload()"></app-select-files>

above app-select files is in app component

    import { Component, OnInit, Output, EventEmitter } from '@angular/core';
    
    @Component({
      selector: 'app-select-files',
      templateUrl: './select-files.component.html',
      styleUrls: ['./select-files.component.scss']
    })
    export class SelectFilesComponent implements OnInit {
    
      @Output() parentStartUploadButtonClick = new EventEmitter<any>();
      constructor() { }
    
      ngOnInit() {
      }
    
      protected startUploadButtonClick(event?: any): any {
        console.log(event);
        this.parentStartUploadButtonClick.emit(event);
      }
   
    }

This app-select-files component html is given here

    <div class="drop-container" ngFileDrop [options]="options" (uploadOutput)="onChildUploadOutput($event)" [uploadInput]="uploadInput" [ngClass]="{ 'is-drop-over': dragOver }">
        <h1>Drag &amp; Drop</h1>

        <label class="upload-button">
            <input type="file" ngFileSelect [options]="options" (uploadOutput)="onChildUploadOutput($event)"
                [uploadInput]="uploadInput" multiple>
            or choose file(s)
        </label>

        <button type="button" class="start-upload-btn" (click)="startUploadButtonClick($event)">
            Start Upload
        </button>
    </div>

When I try to press the button start upload Its not uploading file. So when I debug the code in the parent of this component which is app component I found that the UploadInput EventEmitter has no Observers.

But when I try putting the html to upload the files in the app component its working.

Can anyone tell me what to do If I want to do it from the app-select-files component.

Thanks in Advance.
Adding the ability to handle failed uploads. This is done by adding the 'load' event on the XMLHttpRequrest and looking for a status < 400. Instead of bubbling an error I went with the approach of setting the file UploadStatus to Failed (new enum value) and pushing it in the observable state with a type of 'failed'.

I felt this would be the least disruptive and most simple to implement.
I put  this.options = {
            concurrency: 1,
            maxUploads: 5
        }

1. I Browse more than maxUploads it allow only 5 files and rest put into rejected list.
2. I Drag more than maxUploads it allow only 5 files and rest put into rejected list.
But when I browse some files and drag some file then maxUploads fails.


This happens when we drop email from outlook to chrome.  The default drop effect in chrome is taking it as "MOVE" instead of "Copy". We can fix this by taking the **dragover event** and changing drop effect. Something like this,

Angular component

@HostListener("document:dragover", ["$event"]) dragOver(ev: DragEvent): void {

    if (ev && ev.dataTransfer && ev.dataTransfer.dropEffect != "copy") {

        ev.dataTransfer.dropEffect  = "copy";

    }

}

can we include this feature inbuild to ourlibrary.


resolve #499
Why can't I use ngx-uploader after I upload the file and the server reports an error. I hope that after the server reports an error, I click the upload button and still upload. what should I do?
## Description

Currently `allowedContentTypes` for input options only seems to accept very specific MIME types. The expected results would be that the `allowedContentTypes` array would match how a DOM `<input accept="<allowedContentTypes>"` performs.

## Specific Issues
Noticed mismatch on:
blanket MIME types (`image/*`, `audio/*`)
specific extensions (`.dae`, `.dxf`)

## Reproduction
Using the demo **.ts** and **.html** files, append options to include:

`allowedContentTypes: ['image/*', '.dae']`

This results in the input rejecting all image files and .dae extension files.

Append `<input accept="image/*, .dae" />` and image files and .dae extensions are no longer rejected, but are the only files allowed to be selected for upload.
`i` has been added as shorthand for `install` and `--save` is defaulted to true in latest npm cli. The replacement LoC in the readme is 100% equivalent shorthand that may help save folks time for this (and other) installs.
`ERROR in node_modules/ngx-uploader/src/ngx-uploader/classes/ngx-uploader.class.ts(112,32): error TS2339: Property 'lastModifiedDate' does not exist on type 'File'.`

I'm getting this error while I was upgrading my angular app from version 5.2 to version 8.
I believe it's because the newer version of typescript has deprecated this field in favor of the new field introduced, `lastModified`.

My current app configuration is:

```
Angular: 8.1.1
@angular-devkit/architect         0.13.9
@angular-devkit/build-angular     0.13.9
@angular-devkit/build-optimizer   0.13.9
@angular-devkit/build-webpack     0.13.9
@angular-devkit/core              7.3.9
@angular-devkit/schematics        7.3.9
@angular/cli                      7.3.9
@ngtools/webpack                  7.3.9
@schematics/angular               7.3.9
@schematics/update                0.13.9
rxjs                              6.5.2
typescript                        3.4.5
webpack                           4.29.0
```