When I attempt to run cargo run --example factorial 

I get the below error library not found for -lstdc++

I have googled this and it appears that stdlib has changed in XCODE

recommendations are to replace the following in the CMakeLists.txt file
 set(CMAKE_CXX_FLAGS "-stdlib=libc++")

I have performed this step and still get the above error.  It appears that the changes in CMakeList.txt file are not being read.

Is there another location in the build process that I can change the stdlib?

Thanks

Joe
Without this a qml file using a [ChartView](http://doc.qt.io/qt-5/qml-qtcharts-chartview.html) will crash at runtime. According to https://stackoverflow.com/questions/51532648/qml-crash-in-qt-5-9-help-to-read-stack-trace this is expected and an application using ChartView needs to use `QApplication` instead of `QGuiApplication`. This also matches the [Qt Charts documentation](http://doc.qt.io/qt-5/qtcharts-index.html):
> Note: Projects created with Qt Creator's Qt Quick Application wizard are based on the Qt Quick 2 template that uses QGuiApplication by default. All such QGuiApplication instances in the project must be replaced with QApplication as the module depends on Qt's Graphics View Framework for rendering.
When building qmlrs, I got this error message:
```
thread 'main' panicked at 'cmake produced stderr: CMake Warning at CMakeLists.txt:24 (find_package):
  By not providing "FindQt5Core.cmake" in CMAKE_MODULE_PATH this project has
  asked CMake to find a package configuration file provided by "Qt5Core", but
  CMake did not find one.

  Could not find a package configuration file provided by "Qt5Core" with any
  of the following names:

    Qt5CoreConfig.cmake
    qt5core-config.cmake

  Add the installation prefix of "Qt5Core" to CMAKE_PREFIX_PATH or set
  "Qt5Core_DIR" to a directory containing one of the above files.  If
  "Qt5Core" provides a separate development package or SDK, be sure it has
  been installed.
 ...
```
It goes on but it is all related to not being able to find Qt.

I tried to fix this by setting the CMAKE_PREFIX_PATH: `set(CMAKE_PREFIX_PATH "E:/Qt/5.9.1/mingw53_32/")`, but that doesn't seem to work at all. 

I had to set each packages path individually for that error to go away: 
```
set(Qt5Core_DIR "E:/Qt/5.9.1/msvc2017_64/lib/cmake/Qt5core")
set(Qt5Quick_DIR "E:/Qt/5.9.1/msvc2017_64/lib/cmake/Qt5Quick")
```
But then another error showed up:
```
thread 'main' panicked at 'called `Result::unwrap()` on an `Err` value: "`\"pkg-config\" \"--libs\" \"--cflags\" \"Qt5Core Qt5Gui Qt5Qml Qt5Quick\"` did not exit successfully: exit code: 1\n--- stderr\nPackage Qt5Core was not found in the pkg-config se
arch path.\nPerhaps you should add the directory containing `Qt5Core.pc\'\nto the PKG_CONFIG_PATH environment variable\nNo package \'Qt5Core\' found\nPackage Qt5Gui was not found in the pkg-config search path.\nPerhaps you should add the directory cont
aining `Qt5Gui.pc\'\nto the PKG_CONFIG_PATH environment variable\nNo package \'Qt5Gui\' found\nPackage Qt5Qml was not found in the pkg-config search path.\nPerhaps you should add the directory containing `Qt5Qml.pc\'\nto the PKG_CONFIG_PATH environment
 variable\nNo package \'Qt5Qml\' found\nPackage Qt5Quick was not found in the pkg-config search path.\nPerhaps you should add the directory containing `Qt5Quick.pc\'\nto the PKG_CONFIG_PATH environment variable\nNo package \'Qt5Quick\' found\n"', src\l
ibcore\result.rs:860:4
```
Doing a backtrace, the error occured on the last line of build.rc (92).

I tried to set the PKG_CONFIG_PATH environmental variable to `E:\Qt\5.9.1\mingw53_32\lib\pkgconfig`, but that doesn't seem to do anything, any ideas?

Thanks
Disclaimer: completely new to Rust and QML.

I want to be able to return a `Vec<CustomType>` and be able to iterate over the vector from within my QML template.  For instance, I fetch a vector of `User`'s from a DB.  How can I pass this vector to my QML template?

I've tried passing an array of primitives without luck.  What's the idiomatic way to handle this?

Thank you!


Script causing the errors (win7 64bit):
----------------
set CMAKE_PREFIX_PATH=C:\msys64\mingw64\qt5-static
set PKG_CONFIG_PATH=C:\msys64\mingw64\qt5-static\lib\pkgconfig
set LIBRARY_PATH=C:\msys64\mingw64\lib
cargo.exe build
cargo rustc --release --example factorial_string

The error log:
-------------
   Compiling qmlrs v0.1.1 (file:///C:/Users/Vano/.cargo/registry/src/github.com-1ecc6299db9ec823/qmlrs-0.1.1)
warning: unused import: `QVariant`, #[warn(unused_imports)] on by default
 --> src\lib.rs:5:11
  |
5 | use ffi::{QVariant, QrsEngine, QObject};
  |           ^^^^^^^^

    Finished dev [unoptimized + debuginfo] target(s) in 1.93 secs
   Compiling qmlrs v0.1.1 (file:///C:/Users/Vano/.cargo/registry/src/github.com-1ecc6299db9ec823/qmlrs-0.1.1)
warning: unused import: `QVariant`, #[warn(unused_imports)] on by default
 --> src\lib.rs:5:11
  |
5 | use ffi::{QVariant, QrsEngine, QObject};
  |           ^^^^^^^^

error: linking with `gcc` failed: exit code: 1
  |
  = note: "gcc" "-Wl,--enable-long-section-names" "-fno-use-linker-plugin" "-Wl,--nxcompat" "-nostdlib" "-m64" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\crt2.o" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\rsbegin.o" "-L" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib" "C:\\Users\\Vano\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qmlrs-0.1.1\\target\\release\\examples\\factorial_string-2da5422af6f2b9b6.0.o" "-o" "C:\\Users\\Vano\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qmlrs-0.1.1\\target\\release\\examples\\factorial_string-2da5422af6f2b9b6.exe" "-Wl,--gc-sections" "-nodefaultlibs" "-L" "C:\\Users\\Vano\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qmlrs-0.1.1\\target\\release\\deps" "-L" "C:\\Windows\\system32" "-L" "C:\\Users\\Vano\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qmlrs-0.1.1\\ext/libqmlrswrapper/build" "-L" "C:/msys64/mingw64/qt5-static/lib" "-L" "C:/repo/mingw-w64-qt5-static/src/x86_64/qtbase/lib" "-L" "C:/repo/mingw-w64-qt5-static/src/x86_64/qtdeclarative/lib" "-L" "C:/repo/mingw-w64-qt5-static/src/x86_64/qtbase/lib" "-L" "C:/msys64/mingw64/qt5-static/lib" "-L" "C:/repo/mingw-w64-qt5-static/src/x86_64/qtbase/lib" "-L" "C:/msys64/mingw64/qt5-static/lib" "-L" "C:/repo/mingw-w64-qt5-static/src/x86_64/qtbase/lib" "-L" "C:/msys64/mingw64/qt5-static/lib" "-L" "C:/repo/mingw-w64-qt5-static/src/x86_64/qtbase/lib" "-L" "C:/msys64/mingw64/qt5-static/lib" "-L" "C:/repo/mingw-w64-qt5-static/src/x86_64/qtbase/lib" "-L" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib" "-Wl,-Bstatic" "-Wl,-Bdynamic" "C:\\Users\\Vano\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qmlrs-0.1.1\\target\\release\\deps\\libqmlrs-d79f33cee0e046f9.rlib" "C:\\Users\\Vano\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\qmlrs-0.1.1\\target\\release\\deps\\liblibc-e8bd7a8d60e9ed01.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libstd-f652078ccb4a05c6.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\librand-1b7958d453cbec37.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libcollections-a314922a873913c3.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libstd_unicode-fdbeec883a26ecfb.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libpanic_unwind-1f7e6dd09e19d555.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libunwind-0f98a378f2be1b7f.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\liblibc-fe9699f3e1ddd65d.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\liballoc-ea650dc98a507b3e.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\liballoc_system-d80227dea4fa1575.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libcore-f76daf1e47d968ad.rlib" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\libcompiler_builtins-fd588520ea9f540f.rlib" "-l" "stdc++" "-l" "Qt5Quick" "-l" "comdlg32" "-l" "oleaut32" "-l" "imm32" "-l" "winmm" "-l" "glu32" "-l" "opengl32" "-l" "dnsapi" "-l" "iphlpapi" "-l" "ssl" "-l" "crypto" "-l" "gdi32" "-l" "crypt32" "-l" "ole32" "-l" "uuid" "-l" "ws2_32" "-l" "advapi32" "-l" "shell32" "-l" "user32" "-l" "kernel32" "-l" "mpr" "-l" "Qt5Gui" "-l" "Qt5Qml" "-l" "Qt5Network" "-l" "Qt5Core" "-l" "advapi32" "-l" "ws2_32" "-l" "userenv" "-l" "shell32" "-l" "gcc_eh" "-lmingwex" "-lmingw32" "-lgcc" "-lmsvcrt" "-luser32" "-lkernel32" "C:\\Users\\Vano\\.rustup\\toolchains\\nightly-x86_64-pc-windows-gnu\\lib\\rustlib\\x86_64-pc-windows-gnu\\lib\\rsend.o"
  = note: ld: C:/msys64/mingw64/qt5-static/lib/libQt5Quick.a(moc_qquickdesignerwindowmanager_p.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Gui.a(moc_qopengltimerquery.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Gui.a(qguiapplication.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Qml.a(moc_qquickworkerscript_p.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Qml.a(qqmlapplicationengine.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Qml.a(qqmlengine.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Qml.a(qqmlcontext.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Network.a(moc_qsslsocket_openssl_p.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(moc_qeventtransition.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qarraydata.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qlist.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qstring.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qlogging.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qcoreapplication.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qurl.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qbytearray.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qmetaobject.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qvariant.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qobject.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          ld: C:/msys64/mingw64/qt5-static/lib/libQt5Core.a(qglobal.o): Recognised but unhandled machine type (0x8664) in Import Library Format archive
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text+0xd6): undefined reference to `QString::fromUtf8_helper(char const*, int)'
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text+0x168): undefined reference to `QArrayData::deallocate(QArrayData*, unsigned long long, unsigned long long)'
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text+0x18c): undefined reference to `QArrayData::deallocate(QArrayData*, unsigned long long, unsigned long long)'
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text+0x1cd): undefined reference to `QMessageLogger::fatal(char const*, ...) const'
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text+0x226): undefined reference to `QString::fromUtf8_helper(char const*, int)'
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text+0x2b8): undefined reference to `QArrayData::deallocate(QArrayData*, unsigned long long, unsigned long long)'
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text+0x2dc): undefined reference to `QArrayData::deallocate(QArrayData*, unsigned long long, unsigned long long)'
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text+0x31d): undefined reference to `QMessageLogger::fatal(char const*, ...) const'
          C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj):qrsdynamicobject_capi.cpp:(.text$_ZN7QStringD1Ev[_ZN7QStringD1Ev]+0xfffffffffffffcef): undefined reference to `QArrayData::deallocate(QArrayData*, unsigned long long, unsigned long long)'
          ld: C:\Users\Vano\.cargo\registry\src\github.com-1ecc6299db9ec823\qmlrs-0.1.1\target\release\deps\libqmlrs-d79f33cee0e046f9.rlib(qrsdynamicobject_capi.cpp.obj): bad reloc address 0x2f in section `.text$_ZN7QStringD1Ev[_ZN7QStringD1Ev]'
          ld: final link failed: Invalid operation
          

error: aborting due to previous error

error: Could not compile `qmlrs`.

To learn more, run the command again with --verbose.


I'm testing cross compile this lib for Raspberry Pi 2. 
1. Mount RPi rootfs to **/mnt/rasp-pi-rootfs/**. Create symlink in **/usr/local** to **/mnt/rasp-pi-rootfs/usr/local/QtDIR**.
2. Create simple test bin with `cargo new hello --bin` and add qmlrs to dependencies.
3. Add target to `~/.cargo/config` 

``` cargo
[target.armv7-unknown-linux-gnueabihf]
linker = "/mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-gcc"
```
1. First run `cargo build --target=armv7-unknown-linux-gnueabihf` for fetch dependencies.
2. Add 

```
set(CMAKE_SYSTEM_NAME Linux)
set(CMAKE_SYSROOT /mnt/rasp-pi-rootfs)
set(CMAKE_C_COMPILER /home/di-erz/projects/images/gcc-4.7-linaro-rpi-gnueabihf/bin/arm-linux-gnueabihf-gcc)
set(CMAKE_CXX_COMPILER /home/di-erz/projects/images/gcc-4.7-linaro-rpi-gnueabihf/bin/arm-linux-gnueabihf-g++)
set(CMAKE_FIND_ROOT_PATH_MODE_PROGRAM NEVER)
set(CMAKE_FIND_ROOT_PATH_MODE_LIBRARY ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_INCLUDE ONLY)
set(CMAKE_FIND_ROOT_PATH_MODE_PACKAGE ONLY)
```

to _CMakeLists.txt_ to **qmlrs-0.1.1/ext/libqmlrswrapper**. 
Then build static **libqmlrswrapper**

``` bash
$ cd qmlrs-0.1.1/ext/libqmlrswrapper/build

$ PATH=$PATH:/mnt/rasp-pi-rootfs/usr/local/Qt-rasp2-5.7.0 \
LD_LIBRARY_PATH=$LD_LIBRARY_PATH:/mnt/rasp-pi-rootfs/usr/local/Qt-rasp2-5.7.0/lib \
PKG_CONFIG_PATH=$PKG_CONFIG_PATH:/mnt/rasp-pi-rootfs/usr/local/Qt-rasp2-5.7.0/lib/pkgconfig/ \
CMAKE_SYSROOT=/mnt/rasp-pi-rootfs/ \
CMAKE_CXX_COMPILER=/mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-cpp \
CMAKE_C_COMPILER=/mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-gcc \
cmake ../

$ make
```
1. Return to test project dir, clean, and rebuild.

``` bash
$ cd projects/hello

$ CMAKE_SYSROOT=/mnt/rasp-pi-rootfs \
PATH=/mnt/rasp-pi-rootfs/usr/local/Qt-rasp2-5.7.0:$PATH \
PKG_CONFIG_PATH=/mnt/rasp-pi-rootfs/usr/local/Qt-rasp2-5.7.0/lib/pkgconfig/ \
PKG_CONFIG_ALLOW_CROSS=1 \
cargo build --target=armv7-unknown-linux-gnueabihf --verbose
```

Cargo exit with 101 error code.

```
   Compiling hello v0.1.0 (file:///home/di-erz/projects/rust_test_armf7/hello)
     Running `rustc src/main.rs --crate-name hello --crate-type bin -g -C metadata=633f842f00664fda --out-dir /home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug --emit=dep-info,link --target armv7-unknown-linux-gnueabihf -C linker=/mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-gcc -L dependency=/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/deps --extern qmlrs=/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/deps/libqmlrs-4c95d386a3275de2.rlib -L native=/home/di-erz/.cargo/registry/src/github.com-1ecc6299db9ec823/qmlrs-0.1.1/ext/libqmlrswrapper/build -L native=/usr/local/Qt-rasp2-5.7.0/lib`
error: linking with `/mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-gcc` failed: exit code: 2
  |
  = note: "/mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-gcc" "-Wl,--as-needed" "-Wl,-z,noexecstack" "-L" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib" "/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/hello.0.o" "-o" "/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/hello" "-Wl,--gc-sections" "-pie" "-nodefaultlibs" "-L" "/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/deps" "-L" "/home/di-erz/.cargo/registry/src/github.com-1ecc6299db9ec823/qmlrs-0.1.1/ext/libqmlrswrapper/build" "-L" "/usr/local/Qt-rasp2-5.7.0/lib" "-L" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib" "-Wl,-Bstatic" "-Wl,-Bdynamic" "/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/deps/libqmlrs-4c95d386a3275de2.rlib" "/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/deps/liblibc-1bd8847afb79f283.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libstd-958ae23af751ccd2.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libpanic_unwind-a9a59c59600d7fc2.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libunwind-6c9d51e4a80592ac.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libcollections-d6fc9dbb93241229.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/liballoc-d486feb737ebb44c.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/liballoc_jemalloc-ffb42151b6c9616e.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/liblibc-233ca0904a4b2a29.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/librand-2bb4926cb0753fd8.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/librustc_unicode-ccb09dfcfc8f1ea6.rlib" "/home/di-erz/.multirust/toolchains/nightly-x86_64-unknown-linux-gnu/lib/rustlib/armv7-unknown-linux-gnueabihf/lib/libcore-aad7393ea968a91e.rlib" "-l" "stdc++" "-l" "Qt5Quick" "-l" "Qt5Gui" "-l" "Qt5Qml" "-l" "Qt5Network" "-l" "Qt5Core" "-l" "util" "-l" "dl" "-l" "rt" "-l" "pthread" "-l" "gcc_s" "-l" "pthread" "-l" "c" "-l" "m" "-l" "rt" "-l" "util" "-l" "compiler-rt"
  = note: /mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-gcc: 1: /mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-gcc: Syntax error: word unexpected (expecting ")")


error: aborting due to previous error

error: Could not compile `hello`.

Caused by:
  Process didn't exit successfully: `rustc src/main.rs --crate-name hello --crate-type bin -g -C metadata=633f842f00664fda --out-dir /home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug --emit=dep-info,link --target armv7-unknown-linux-gnueabihf -C linker=/mnt/rasp-pi-rootfs/usr/bin/arm-linux-gnueabihf-gcc -L dependency=/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/deps --extern qmlrs=/home/di-erz/projects/rust_test_armf7/hello/target/armv7-unknown-linux-gnueabihf/debug/deps/libqmlrs-4c95d386a3275de2.rlib -L native=/home/di-erz/.cargo/registry/src/github.com-1ecc6299db9ec823/qmlrs-0.1.1/ext/libqmlrswrapper/build -L native=/usr/local/Qt-rasp2-5.7.0/lib` (exit code: 101)
```

I would be glad of any idea!

It is ready to try [in my fork repo](https://github.com/gemmarx/qmlrs/tree/qml_embedded).
This experimental hack has, however, been checked on an x86-64 linux box.
Would anyone help me to do more checks and support windows or mac osx etc.?

examples/factorial_qrc.rs gives an example of use.
After building of crate,

```
$ cd examples
$ make factorial_qrc
# or if you have built with --release option,
$ make BUILD_TYPE=release factorial_qrc
# An execution file will be made under /target .
$ ../target/debug/examples/factorial_qrc
```

Move the executable binary to anywhere you like, and it works stand-alone without qml files.

I can put this building process in build.rs for cargo, but I do not know how to switch conditions in the script with or without --example option.

Are there any plans to support this on Android using [tamaka's android-rs-glue](https://github.com/tomaka/android-rs-glue) or is this supported somehow already?

I am stuck running with the examples. I have installed a lot of qt library already including 
- qtbase5-dev
- qtdeclarative5-dev
- libqt5qml-quickcontrols
- qtcreator qtcreator-dev

still getting this error

```
qmlrs/examples/factorial_ui.qml:2 module "QtQuick.Controls" version 1.2 is not installed
```

What am I missing?

I can't yet declare signals in Rust Q_OBJECTS, which is sad because I'd really like that feature.

There seems to be a bunch of commented-out code related to signals. Is anyone working on this feature? If not, I might like to try and make it work myself.
