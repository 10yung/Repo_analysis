With Kotlin 1.3 the support for `raspberry` was added (which is a `linuxArm32Hfp` plattform). 
It would be great to extend the project for this platform.

I already compiled the libui manually and added it, but it should be done directly in this project instead of doing it manualy.

These would be a welcome addition to the DSL, as the tornadofx has them and they're handy
https://github.com/edvin/tornadofx/wiki/Forms

I saw [this](https://github.com/msink/kotlin-libui/blob/master/samples/form/src/nativeMain/kotlin/main.kt) sample, but it doesn't work for the ComboBox and probably others.
Not sure if it is macOS only and if it is blocked by upstream. But I couldn't find any issue/info in the upstream libui project. 

Right click -> copy works though.
Hi, 
I'm using this library to build a desktop project but I need to close the window manually and re-create it later. Now I'm using the ktx library but I cannot find any methods to do this. Are there any methods for me to use in order to close the window? My code is attached below. Thanks.

```kotlin
fun main(args: Array<String>?) {
    appMain() // Display the UI and block
    // To do some extra work.
}

fun appMain() = appWindow(
    title = "Sample",
    width = 320,
    height = 240
) {
    vbox {
        button ("Quit") {
            action {
                // uiControlDestroy
                // I tried it but the window closes without continuing the statements in main().
                this@appWindow.dispose()
            }
        }
    }
}
```
As Kotlin 1.3.31 now can build for 32-bit windows - I decided just switch windows build to 32-bit, and drop support for 64-bit windows, at least for now.
Do not see any reasons for 64-bit windows executable for simple utilites.
If anyone have significant reasons - please comment here, and I will create **new** target `windows_x64`

To migrate - just replace in your build scripts `mingwX64` to `mingwX86`, and `msys2-mingw-w64-x86_64-gcc-7.3.0-clang-llvm-lld-6.0.1` to `msys2-mingw-w64-i686-gcc-7.4.0-clang-llvm-6.0.1`.
Gradle should be upgraded to 5.4 - `gradle wrapper --gradle-version 5.4 --distribution-type all`

I'm thinking about writing applications that run natively, but also on the JVM.
Is it possible to write one single gui code, using the kotlin-libui syntax ? 
Can the kotlin-libui library be extended, so it uses e.g. Tornado-FX, but still provide the same programming interface to the developer?
For now there is almost no documentation, except for autogenerated.
Any contributions will be very helpful.
Need to integrate coroutines support from
https://github.com/Kotlin/kotlinx.coroutines/tree/master/native
and add sample similar to `timer` but based on coroutines.
Hi, one more thing ;)

I've seen files like this: https://github.com/msink/kotlin-libui/blob/5f1c615a6fa1ba846fb1e910a76fe26ff44e19cf/samples/table/src/main/resources/andlabs_16x16test_24june2016.png.kt

They look like they are generated from the png file, and I'm interested how you generated them.

Is the generator part of the repo? And is it possible to extract the generation of the files as a step in the gradle-build?
Hi, me again. :)

I've noticed the dispose() method is never called for me in the examples.
I've tried hello-ktx and controlgallery, OS is Manjaro (4.19 Kernel).

The callback from uiOnShouldQuit is never reached.

Even when I dispose the mainWindow manually, I would have expected all children's dispose() method to be called - which was not the case!

I'm not sure if I missed something, or maybe it's a bug?

Andreas