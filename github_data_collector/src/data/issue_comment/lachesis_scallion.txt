Reading the issues about this stacktrace:
```
Unhandled Exception:
System.TypeInitializationException: The type initializer for 'OpenSSL.Core.Native' threw an exception. ---> System.EntryPointNotFoundException: ERR_load_crypto_strings
  at (wrapper managed-to-native) OpenSSL.Core.Native.ERR_load_crypto_strings()
  at OpenSSL.Core.Native..cctor () [0x00080] in <38c0e4f76c27429fb3b78d7e3d807f68>:0 
   --- End of inner exception stack trace ---
  at OpenSSL.Core.ThreadInitialization.InitializeThreads () [0x00001] in <38c0e4f76c27429fb3b78d7e3d807f68>:0 
  at scallion.Program.Main (System.String[] args) [0x00008] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: System.TypeInitializationException: The type initializer for 'OpenSSL.Core.Native' threw an exception. ---> System.EntryPointNotFoundException: ERR_load_crypto_strings
  at (wrapper managed-to-native) OpenSSL.Core.Native.ERR_load_crypto_strings()
  at OpenSSL.Core.Native..cctor () [0x00080] in <38c0e4f76c27429fb3b78d7e3d807f68>:0 
   --- End of inner exception stack trace ---
  at OpenSSL.Core.ThreadInitialization.InitializeThreads () [0x00001] in <38c0e4f76c27429fb3b78d7e3d807f68>:0 
  at scallion.Program.Main (System.String[] args) [0x00008] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0 
```

I gathered that `libssl1.0-dev` is required but newer Ubuntu releases don't provide it at all. Is there a solution to that problem?
```Looks good!
LoopIteration:62  HashCount:1040.19MH  Speed:2543.2MH/s  Runtime:00:00:00  Predicted:00:00:00  Lack of work for the GPU!! Taking a nap!!
LoopIteration:124  HashCount:2080.37MH  Speed:629.5MH/s  Runtime:00:00:03  Predicted:00:00:03  Lack of work for the GPU!! Taking a nap!!
LoopIteration:310  HashCount:5200.94MH  Speed:751.0MH/s  Runtime:00:00:06  Predicted:00:00:02  Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
LoopIteration:372  HashCount:6241.12MH  Speed:506.4MH/s  Runtime:00:00:12  Predicted:00:00:04  Lack of work for the GPU!! Taking a nap!!
LoopIteration:434  HashCount:7281.31MH  Speed:477.8MH/s  Runtime:00:00:15  Predicted:00:00:04  Lack of work for the GPU!! Taking a nap!!
LoopIteration:620  HashCount:10401.87MH  Speed:551.8MH/s  Runtime:00:00:18  Predicted:00:00:03  Lack of work for the GPU!! Taking a nap!!
LoopIteration:682  HashCount:11442.06MH  Speed:525.7MH/s  Runtime:00:00:21  Predicted:00:00:04  Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
LoopIteration:744  HashCount:12482.25MH  Speed:459.4MH/s  Runtime:00:00:27  Predicted:00:00:04  Lack of work for the GPU!! Taking a nap!!
LoopIteration:807  HashCount:13539.21MH  Speed:450.3MH/s  Runtime:00:00:30  Predicted:00:00:04  Found new key! Found 1 unique keys.```

Lack of work for GPU is it normal?
Just as the title says
![image](https://user-images.githubusercontent.com/31206758/64907350-d75e6800-d6f9-11e9-82bb-72bfafc9b979.png)

I am on Windows 10


Debian 9
Impossible to setup correctly.
Maybe somebody knows
Is it possible in Linux to use the same way as in Windows,
install Visual studio,  Open 'scallion.sln' in VS and  Build the solution ? 

This is under macOS 10.13.4

The computation fails after about a minute and stops with the below error.

Info only, in case someone might get some useful debug info from it. Thanks for a cool tool, btw. ;)

```
$ mono Downloads/scallion-v2.0/scallion.exe -d 1 <some_key>
WARNING: The runtime version supported by this application is unavailable.
Using default runtime: v4.0.30319
Cooking up some delicions scallions...
Using kernel optimized from file kernel.cl (Optimized4)
Using work group size 32
Compiling kernel... done.
Testing SHA1 hash...
CPU SHA-1: d3486ae9136e7856bc42212385ea797094475802
GPU SHA-1: d3486ae9136e7856bc42212385ea797094475802
Looks good!
LoopIteration:39221  HashCount:658019,19MH  Speed:4077,5MH/s  Runtime:00:02:41  Predicted:51.03:12:50  Stacktrace:

  at <unknown> <0xffffffff>
  at (wrapper managed-to-native) OpenSSL.Core.Native.i2d_RSAPublicKey (intptr,byte**) [0x00002] in <38c0e4f76c27429fb3b78d7e3d807f68>:0
  at scallion.RSAWrapper.get_DER () [0x00033] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0
  at scallion.OnionToolConfig.GetPublicKeyData (scallion.RSAWrapper,int&) [0x00001] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0
  at scallion.CLRuntime.CreateInput () [0x0013c] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0
  at System.Threading.ThreadHelper.ThreadStart_Context (object) [0x00014] in <1e9f48e5e12b467fac5ee4c865427163>:0
  at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext,System.Threading.ContextCallback,object,bool) [0x00071] in <1e9f48e5e12b467fac5ee4c865427163>:0
  at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext,System.Threading.ContextCallback,object,bool) [0x00000] in <1e9f48e5e12b467fac5ee4c865427163>:0
  at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext,System.Threading.ContextCallback,object) [0x0002b] in <1e9f48e5e12b467fac5ee4c865427163>:0
  at System.Threading.ThreadHelper.ThreadStart () [0x00008] in <1e9f48e5e12b467fac5ee4c865427163>:0
  at (wrapper runtime-invoke) object.runtime_invoke_void__this__ (object,intptr,intptr,intptr) [0x0004d] in <1e9f48e5e12b467fac5ee4c865427163>:0

Unhandled Exception:
System.NullReferenceException: Object reference not set to an instance of an object
  at (wrapper managed-to-native) OpenSSL.Core.Native.i2d_RSAPublicKey(intptr,byte**)
  at scallion.RSAWrapper.get_DER () [0x00033] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0 
  at scallion.OnionToolConfig.GetPublicKeyData (scallion.RSAWrapper rsa, System.Int32& exp_index) [0x00001] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0 
  at scallion.CLRuntime.CreateInput () [0x0013c] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0 
  at System.Threading.ThreadHelper.ThreadStart_Context (System.Object state) [0x00014] in <1e9f48e5e12b467fac5ee4c865427163>:0 
  at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00071] in <1e9f48e5e12b467fac5ee4c865427163>:0 
  at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00000] in <1e9f48e5e12b467fac5ee4c865427163>:0 
  at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state) [0x0002b] in <1e9f48e5e12b467fac5ee4c865427163>:0 
  at System.Threading.ThreadHelper.ThreadStart () [0x00008] in <1e9f48e5e12b467fac5ee4c865427163>:0 
[ERROR] FATAL UNHANDLED EXCEPTION: System.NullReferenceException: Object reference not set to an instance of an object
  at (wrapper managed-to-native) OpenSSL.Core.Native.i2d_RSAPublicKey(intptr,byte**)
  at scallion.RSAWrapper.get_DER () [0x00033] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0 
  at scallion.OnionToolConfig.GetPublicKeyData (scallion.RSAWrapper rsa, System.Int32& exp_index) [0x00001] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0 
  at scallion.CLRuntime.CreateInput () [0x0013c] in <1229c4d7c88140dba1cf0e6bed5a8c08>:0 
  at System.Threading.ThreadHelper.ThreadStart_Context (System.Object state) [0x00014] in <1e9f48e5e12b467fac5ee4c865427163>:0 
  at System.Threading.ExecutionContext.RunInternal (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00071] in <1e9f48e5e12b467fac5ee4c865427163>:0 
  at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state, System.Boolean preserveSyncCtx) [0x00000] in <1e9f48e5e12b467fac5ee4c865427163>:0 
  at System.Threading.ExecutionContext.Run (System.Threading.ExecutionContext executionContext, System.Threading.ContextCallback callback, System.Object state) [0x0002b] in <1e9f48e5e12b467fac5ee4c865427163>:0 
  at System.Threading.ThreadHelper.ThreadStart () [0x00008] in <1e9f48e5e12b467fac5ee4c865427163>:0 
LoopIteration:39222  HashCount:658035,97MH  Speed:4077,5MH/s  Runtime:00:02:41  Predicted:51.03:12:47  
$


$ mono --version
Mono JIT compiler version 5.18.0.225 (tarball Thu Jan 10 03:09:05 GMT 2019)
Copyright (C) 2002-2014 Novell, Inc, Xamarin Inc and Contributors. www.mono-project.com
	TLS:           
	SIGSEGV:       altstack
	Notification:  kqueue
	Architecture:  amd64
	Disabled:      none
	Misc:          softdebug 
	Interpreter:   yes
	LLVM:          supported, not enabled.
	Suspend:       preemptive
	GC:            sgen (concurrent by default)
$ 

$ mono Downloads/scallion-v2.0/scallion.exe -l
WARNING: The runtime version supported by this application is unavailable.
Using default runtime: v4.0.30319
Id:0 Name:Intel(R) Core(TM) i7-7700 CPU @ 3.60GHz
    PreferredGroupSizeMultiple:1 ComputeUnits:8 ClockFrequency:3600
    MaxConstantBufferSize:65536 MaxConstantArgs:8 MaxMemAllocSize:8589934592

Id:1 Name:GeForce GTX 1080 Ti
    PreferredGroupSizeMultiple:32 ComputeUnits:28 ClockFrequency:1290
    MaxConstantBufferSize:65536 MaxConstantArgs:8 MaxMemAllocSize:2952790016

Id:2 Name:AMD Radeon Pro 560 Compute Engine
    PreferredGroupSizeMultiple:64 ComputeUnits:16 ClockFrequency:907
    MaxConstantBufferSize:65536 MaxConstantArgs:8 MaxMemAllocSize:1073741824

$ 

```
Fixes #103
PS C:\Users\Hannah\Downloads\scallion-v2.0> ./scallion.exe -k 8192 --gpg CAFEF00D
Cooking up some delicions scallions...
Using kernel optimized from file kernel.cl (Optimized4)
Using work group size 32
Compiling kernel... done.
Testing SHA1 hash...
CPU SHA-1: [[ REDACTED ]]
GPU SHA-1: [[ REDACTED ]]
Looks good!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
Lack of work for the GPU!! Taking a nap!!
README says the average time to get a partial collision for GPG is:

> 2^(4*length-1) / hashspeed

Where does -1 come from? I believe it should be:

> 2^(4*length) / hashspeed
