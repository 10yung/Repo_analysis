It happens unexpectedly from time to time on background and on foreground.
iOS 12 and iOS 13 on different iPhones versions.

```
3  Repeat                         0x10330c760 $s6Repeat8RepeaterC5reset_7restartyAC8IntervalOSg_SbtF + 196
4  Repeat                         0x10330a864 $s6Repeat9DebouncerC4call8newDelayyAA8RepeaterC8IntervalOSg_tF + 200
```

Or

```
3  Repeat                         0x103854a18 $s6Repeat8RepeaterC8setPause33_97E5396AC7E12D74879B993A593805A9LL4from2toSbAC5StateO_AItF + 168
4  Repeat                         0x103854cfc $s6Repeat8RepeaterC9timeFired33_97E5396AC7E12D74879B993A593805A9LLyyF + 628
5  Repeat                         0x10385676c $s6Repeat8RepeaterC14configureTimer33_97E5396AC7E12D74879B993A593805A9LLSo24OS_dispatch_source_timer_pyFyycfU_TA + 60
6  Repeat                         0x103852b60 $sIeg_IeyB_TR + 28
```
We need to specify the DispatchQueue for the Debouncer's underlying Repeater / Timer.

And yes it's possible to customise the DispatchQueue directly in the Debouncer's callback, but the proposed changes would make it easier and keep the interface consistent to the Repeater's own Interface.
Hello.
Thank you for Repeat.
In this pull request I reverted all deployment targets to the values before #39. Fixed #41.
I saw your configuration`s.ios.deployment_target = "12.2"`

Our application is live and we are getting too much crash on Throttler.swift line 100.

Below is the method where the application is crashing as per the fabric logs

```
	public func call() {
		callbackJob.cancel()
		callbackJob = DispatchWorkItem { [weak self] in
			if let selfStrong = self {
				selfStrong.lastExecutionTime = .now()
				selfStrong.waitingForPerform = false
			}
			self?.callback?()
		}

		let (now, dispatchTime) = self.evaluateDispatchTime()
		self.previousScheduled = now
		self.waitingForPerform = true

		queue.asyncAfter(deadline: dispatchTime, execute: callbackJob)
	}

```
Below is the line as per the fabric where the application is crashing
		let (now, dispatchTime) = self.evaluateDispatchTime()


Below is the crash logs as per the fabric,


#12. Crashed: com.apple.root.default-qos
0  libobjc.A.dylib                0x20479c6ec objc_destructInstance + 36
1  libswiftCore.dylib             0x1066e75f0 swift_deallocClassInstance + 32
2  libswiftCore.dylib             0x1066e7584 _swift_release_dealloc + 28
3  Repeat                         0x106214004 Throttler.call() (Throttler.swift:100)
4  OneLinkHome                    0x1046a5ed0 @objc AccessoryListViewController.checkIfSetupNeeded() (<compiler-generated>)
5  OneLinkHome                    0x104559270 partial apply for closure #1 in background(_:) (<compiler-generated>)
6  OneLinkHome                    0x104558a18 thunk for @escaping @callee_guaranteed () -> () (<compiler-generated>)
7  libdispatch.dylib              0x204ff56c8 _dispatch_call_block_and_release + 24
8  libdispatch.dylib              0x204ff6484 _dispatch_client_callout + 16
9  libdispatch.dylib              0x204fcca6c _dispatch_queue_override_invoke + 664
10 libdispatch.dylib              0x204fd8aec _dispatch_root_queue_drain + 344
11 libdispatch.dylib              0x204fd934c _dispatch_worker_thread2 + 116
12 libsystem_pthread.dylib        0x2051d917c _pthread_wqthread + 472
13 libsystem_pthread.dylib        0x2051dbcec start_wqthread + 4

--

#0. com.apple.main-thread
0  libsystem_kernel.dylib         0x205147ea4 mach_msg_trap + 8
1  libsystem_kernel.dylib         0x20514737c mach_msg + 72
2  CoreFoundation                 0x20554cbe8 __CFRunLoopServiceMachPort + 236
3  CoreFoundation                 0x205547a84 __CFRunLoopRun + 1396
4  CoreFoundation                 0x2055471f0 CFRunLoopRunSpecific + 436
5  GraphicsServices               0x2077c0584 GSEventRunModal + 100
6  UIKitCore                      0x23278ad40 UIApplicationMain + 212
7  OneLinkHome                    0x1045291e4 main (AppDelegate.swift:20)
8  libdyld.dylib                  0x205006bb4 start + 4

#1. com.apple.uikit.eventfetch-thread
0  libsystem_kernel.dylib         0x205147ea4 mach_msg_trap + 8
1  libsystem_kernel.dylib         0x20514737c mach_msg + 72
2  CoreFoundation                 0x20554cbe8 __CFRunLoopServiceMachPort + 236
3  CoreFoundation                 0x205547a84 __CFRunLoopRun + 1396
4  CoreFoundation                 0x2055471f0 CFRunLoopRunSpecific + 436
5  Foundation                     0x205f3d494 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 300
6  Foundation                     0x205f3d340 -[NSRunLoop(NSRunLoop) runUntilDate:] + 148
7  UIKitCore                      0x23287b1f4 -[UIEventFetcher threadMain] + 136
8  Foundation                     0x20607023c __NSThread__start__ + 1040
9  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
10 libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
11 libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#2. GAIThread
0  libsystem_kernel.dylib         0x205147ea4 mach_msg_trap + 8
1  libsystem_kernel.dylib         0x20514737c mach_msg + 72
2  CoreFoundation                 0x20554cbe8 __CFRunLoopServiceMachPort + 236
3  CoreFoundation                 0x205547a84 __CFRunLoopRun + 1396
4  CoreFoundation                 0x2055471f0 CFRunLoopRunSpecific + 436
5  Foundation                     0x205f3d494 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 300
6  Foundation                     0x205f78e84 -[NSRunLoop(NSRunLoop) run] + 88
7  OneLinkHome                    0x1048d1468 +[GAI threadMain:] + 4346827880
8  Foundation                     0x20607023c __NSThread__start__ + 1040
9  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
10 libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
11 libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#3. Thread
0  libsystem_kernel.dylib         0x205147ea4 mach_msg_trap + 8
1  libsystem_kernel.dylib         0x20514737c mach_msg + 72
2  CoreFoundation                 0x20554cbe8 __CFRunLoopServiceMachPort + 236
3  CoreFoundation                 0x205547a84 __CFRunLoopRun + 1396
4  CoreFoundation                 0x2055471f0 CFRunLoopRunSpecific + 436
5  Foundation                     0x205f3d494 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 300
6  HomeKit                        0x21da99fe8 -[_HMLocationHandler createLocationManager] + 496
7  Foundation                     0x20607023c __NSThread__start__ + 1040
8  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
9  libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
10 libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#4. com.apple.NSURLConnectionLoader
0  libsystem_kernel.dylib         0x205147ea4 mach_msg_trap + 8
1  libsystem_kernel.dylib         0x20514737c mach_msg + 72
2  CoreFoundation                 0x20554cbe8 __CFRunLoopServiceMachPort + 236
3  CoreFoundation                 0x205547a84 __CFRunLoopRun + 1396
4  CoreFoundation                 0x2055471f0 CFRunLoopRunSpecific + 436
5  CFNetwork                      0x205b6a00c -[__CoreSchedulingSetRunnable runForever] + 212
6  Foundation                     0x20607023c __NSThread__start__ + 1040
7  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
8  libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
9  libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#5. com.apple.CFSocket.private
0  libsystem_kernel.dylib         0x205153350 __select + 8
1  CoreFoundation                 0x205555a38 __CFSocketManager + 620
2  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
3  libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
4  libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#6. com.twitter.crashlytics.ios.MachExceptionServer
0  OneLinkHome                    0x104a2aac4 CLSProcessRecordAllThreads + 4348242628
1  OneLinkHome                    0x104a2aac4 CLSProcessRecordAllThreads + 4348242628
2  OneLinkHome                    0x104a2a980 CLSProcessRecordAllThreads + 4348242304
3  OneLinkHome                    0x104a19e70 CLSHandler + 4348173936
4  OneLinkHome                    0x104a14e84 CLSMachExceptionServer + 4348153476
5  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
6  libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
7  libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#7. JavaScriptCore bmalloc scavenger
0  libsystem_kernel.dylib         0x205152f0c __psynch_cvwait + 8
1  libsystem_pthread.dylib        0x2051d5410 _pthread_cond_wait$VARIANT$armv81 + 620
2  libc++.1.dylib                 0x2047204d0 std::__1::condition_variable::wait(std::__1::unique_lock<std::__1::mutex>&) + 24
3  JavaScriptCore                 0x20c8fe9c8 void std::__1::condition_variable_any::wait<std::__1::unique_lock<bmalloc::Mutex> >(std::__1::unique_lock<bmalloc::Mutex>&) + 104
4  JavaScriptCore                 0x20c902abc bmalloc::Scavenger::threadRunLoop() + 176
5  JavaScriptCore                 0x20c9021f0 bmalloc::Scavenger::Scavenger(std::__1::lock_guard<bmalloc::Mutex>&) + 10
6  JavaScriptCore                 0x20c903c9c std::__1::__thread_specific_ptr<std::__1::__thread_struct>::set_pointer(std::__1::__thread_struct*) + 38
7  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
8  libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
9  libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#8. WebThread
0  libsystem_kernel.dylib         0x205147ea4 mach_msg_trap + 8
1  libsystem_kernel.dylib         0x20514737c mach_msg + 72
2  CoreFoundation                 0x20554cbe8 __CFRunLoopServiceMachPort + 236
3  CoreFoundation                 0x205547a84 __CFRunLoopRun + 1396
4  CoreFoundation                 0x2055471f0 CFRunLoopRunSpecific + 436
5  WebCore                        0x20e3b6eec RunWebThread(void*) + 592
6  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
7  libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
8  libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#9. AVAudioSession Notify Thread
0  libsystem_kernel.dylib         0x205147ea4 mach_msg_trap + 8
1  libsystem_kernel.dylib         0x20514737c mach_msg + 72
2  CoreFoundation                 0x20554cbe8 __CFRunLoopServiceMachPort + 236
3  CoreFoundation                 0x205547a84 __CFRunLoopRun + 1396
4  CoreFoundation                 0x2055471f0 CFRunLoopRunSpecific + 436
5  AVFAudio                       0x20b55a60c GenericRunLoopThread::Entry(void*) + 164
6  AVFAudio                       0x20b586768 CAPThread::Entry(CAPThread*) + 88
7  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
8  libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
9  libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#10. Thread
0  libsystem_kernel.dylib         0x205153b9c __workq_kernreturn + 8
1  libsystem_pthread.dylib        0x2051d9100 _pthread_wqthread + 348
2  libsystem_pthread.dylib        0x2051dbcec start_wqthread + 4

#11. Thread
0  libsystem_kernel.dylib         0x205147ea4 mach_msg_trap + 8
1  libsystem_kernel.dylib         0x20514737c mach_msg + 72
2  CoreFoundation                 0x20554cbe8 __CFRunLoopServiceMachPort + 236
3  CoreFoundation                 0x205547a84 __CFRunLoopRun + 1396
4  CoreFoundation                 0x2055471f0 CFRunLoopRunSpecific + 436
5  Foundation                     0x205f3d494 -[NSRunLoop(NSRunLoop) runMode:beforeDate:] + 300
6  AWSIoT                         0x1054d2258 -[AWSIoTMQTTClient openStreams:] (AWSIoTMQTTClient.m:635)
7  Foundation                     0x20607023c __NSThread__start__ + 1040
8  libsystem_pthread.dylib        0x2051d825c _pthread_body + 128
9  libsystem_pthread.dylib        0x2051d81bc _pthread_start + 48
10 libsystem_pthread.dylib        0x2051dbcf4 thread_start + 4

#12. Crashed: com.apple.root.default-qos
0  libobjc.A.dylib                0x20479c6ec objc_destructInstance + 36
1  libswiftCore.dylib             0x1066e75f0 swift_deallocClassInstance + 32
2  libswiftCore.dylib             0x1066e7584 _swift_release_dealloc + 28
3  Repeat                         0x106214004 Throttler.call() (Throttler.swift:100)
4  OneLinkHome                    0x1046a5ed0 @objc AccessoryListViewController.checkIfSetupNeeded() (<compiler-generated>)
5  OneLinkHome                    0x104559270 partial apply for closure #1 in background(_:) (<compiler-generated>)
6  OneLinkHome                    0x104558a18 thunk for @escaping @callee_guaranteed () -> () (<compiler-generated>)
7  libdispatch.dylib              0x204ff56c8 _dispatch_call_block_and_release + 24
8  libdispatch.dylib              0x204ff6484 _dispatch_client_callout + 16
9  libdispatch.dylib              0x204fcca6c _dispatch_queue_override_invoke + 664
10 libdispatch.dylib              0x204fd8aec _dispatch_root_queue_drain + 344
11 libdispatch.dylib              0x204fd934c _dispatch_worker_thread2 + 116
12 libsystem_pthread.dylib        0x2051d917c _pthread_wqthread + 472
13 libsystem_pthread.dylib        0x2051dbcec start_wqthread + 4

#13. Thread
0  libsystem_kernel.dylib         0x205153b9c __workq_kernreturn + 8
1  libsystem_pthread.dylib        0x2051d91c0 _pthread_wqthread + 540
2  libsystem_pthread.dylib        0x2051dbcec start_wqthread + 4

#14. Thread
0  libsystem_pthread.dylib        0x2051dbce8 start_wqthread + 190

#15. Thread
0  libsystem_kernel.dylib         0x205153b9c __workq_kernreturn + 8
1  libsystem_pthread.dylib        0x2051d91c0 _pthread_wqthread + 540
2  libsystem_pthread.dylib        0x2051dbcec start_wqthread + 4

#16. Thread
0  libsystem_kernel.dylib         0x205153b9c __workq_kernreturn + 8
1  libsystem_pthread.dylib        0x2051d91c0 _pthread_wqthread + 540
2  libsystem_pthread.dylib        0x2051dbcec start_wqthread + 4

#17. Thread
0  libsystem_kernel.dylib         0x205153b9c __workq_kernreturn + 8
1  libsystem_pthread.dylib        0x2051d9100 _pthread_wqthread + 348
2  libsystem_pthread.dylib        0x2051dbcec start_wqthread + 4


I use the below code for print date and time every 2 second. but Repeat run inside code 2 time in each fire.
`private var timer: Repeater?`
`self.timer = Repeater.every(.seconds(2)) { _ in`
    `print("App from \(from) => \(String(self.gf.getCurrentDateTime()))")`
`}`
Result in console is here:
`App from vcChatMain => 20181130135222`
`App from vcChatMain => 20181130135222`
`App from vcChatMain => 20181130135224`
`App from vcChatMain => 20181130135224`
`App from vcChatMain => 20181130135226`
`App from vcChatMain => 20181130135226`
`App from vcChatMain => 20181130135228`
`App from vcChatMain => 20181130135228`
As you see, every 2 second, `print` method fire 2 time. Why this problem occurred?
/// Destroy current timer
	private func destroyTimer() {
		self.timer?.setEventHandler(handler: nil)
		self.timer?.cancel()

		if state == .paused || state == .finished {
			self.timer?.resume()
		}
	}
This method when the order is written is wrong, the timer if is put up, is to call self. The timer?resume (), and then call the self. The timer?.cancel () in the self. The timer = nil to release,Or it will collapse
First up, Great library. We've a light-weight macOS app that uses an infinite timer to update the UI. Since switching to `Repeater`, we've seen our app's CPU usage go by 5-10%. Is this something that can be avoided or are there any best practices to keep down the CPU usage/energy impact?

Thanks!