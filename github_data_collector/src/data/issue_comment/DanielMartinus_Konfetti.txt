Bumps [spotless-plugin-gradle](https://github.com/diffplug/spotless) from 3.27.0 to 3.27.1.
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/diffplug/spotless/commit/a62ab5924f35cefb382d835192ef292c6931579b"><code>a62ab59</code></a> Published gradle/3.27.1</li>
<li><a href="https://github.com/diffplug/spotless/commit/cfd63e2445e3dfd1888aecd3d61d0cf081b0c98d"><code>cfd63e2</code></a> Fix some typos in the changelogPush override.</li>
<li><a href="https://github.com/diffplug/spotless/commit/5a27f234a880741cc78dde834d6f6b15aa6a74f8"><code>5a27f23</code></a> FormatExtension.licenseXXX methods were returning a package-private config ob...</li>
<li><a href="https://github.com/diffplug/spotless/commit/6d2846bb016ddad2bab0451d21dbdb15456737e9"><code>6d2846b</code></a> Make it possible to release a plugin with unreleased changes in lib (because ...</li>
<li><a href="https://github.com/diffplug/spotless/commit/fc8f05231dfe9416b8ffd61cae83e919873d9ea3"><code>fc8f052</code></a> Merge pull request <a href="https://github-redirect.dependabot.com/diffplug/spotless/issues/510">#510</a> from diffplug/feat-changelog</li>
<li><a href="https://github.com/diffplug/spotless/commit/3ffaa2ed89695ef0c4a93f607c7433bc05af8a6d"><code>3ffaa2e</code></a> Release checklist got a lot shorter.</li>
<li><a href="https://github.com/diffplug/spotless/commit/81e31f0181b565f780ecca8d651179cc7e6373dc"><code>81e31f0</code></a> Make sure we don't release a plugin with unreleased library changes.</li>
<li><a href="https://github.com/diffplug/spotless/commit/06fe3a19e81721a3741a29b75e8929cd7483e036"><code>06fe3a1</code></a> Set the per-project commit and tag formats.</li>
<li><a href="https://github.com/diffplug/spotless/commit/8f561a9a02554c02be04ede0d90e78a19ffe6fc7"><code>8f561a9</code></a> Make sure the gradle/ scripts get formatted too.</li>
<li><a href="https://github.com/diffplug/spotless/commit/aac5b2b1c108abff1e3a2a0b954902278600196b"><code>aac5b2b</code></a> Now <code>:changelogPush</code> dependsOn <code>:lib:bintrayUpload</code> and `:lib-extra:bintrayUp...</li>
<li>Additional commits viewable in <a href="https://github.com/diffplug/spotless/compare/gradle/3.27.0...gradle/3.27.1">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=com.diffplug.spotless:spotless-plugin-gradle&package-manager=gradle&previous-version=3.27.0&new-version=3.27.1)](https://dependabot.com/compatibility-score.html?dependency-name=com.diffplug.spotless:spotless-plugin-gradle&package-manager=gradle&previous-version=3.27.0&new-version=3.27.1)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>

Hi, having problem some reports with this:

Input dispatching timed out (Waiting to send non-key event because the touched window has not finished processing certain input events that were delivered to it over 500.0ms ago. Wait queue length: 10. Wait queue head age: 7251.3ms.)

"main" tid=1 Runnable 
"main" prio=5 tid=1 Runnable
  | group="main" sCount=0 dsCount=0 flags=0 obj=0x73664710 self=0x7e7ecc2a00
  | sysTid=24824 nice=-10 cgrp=default sched=0/0 handle=0x7e836b99b0
  | state=R schedstat=( 157132874466 40567429970 321874 ) utm=11754 stm=3959 core=5 HZ=100
  | stack=0x7ff4178000-0x7ff417a000 stackSize=8MB
  | held mutexes= "mutator lock"(shared held)
  at java.util.Locale.equals (Locale.java)
  at android.os.LocaleList.getDefault (LocaleList.java:483)
- locked <0x0fcf420e> (a java.lang.Object)
  at android.os.LocaleList.getAdjustedDefault (LocaleList.java:511)
  at android.graphics.Paint.<init> (Paint.java:489)
  at android.graphics.Paint.<init> (Paint.java:471)
  at nl.dionsegijn.konfetti.Confetti.<init> (Confetti.java)
  at nl.dionsegijn.konfetti.Confetti.<init> (Confetti.java)
  at nl.dionsegijn.konfetti.emitters.RenderSystem.addConfetti (RenderSystem.java)
  at nl.dionsegijn.konfetti.emitters.RenderSystem.access$addConfetti (RenderSystem.java)
  or                     .isDoneEmitting (RenderSystem.java)
  or                     .render (RenderSystem.java)
  at nl.dionsegijn.konfetti.emitters.RenderSystem$1.invoke (RenderSystem.java)
  at nl.dionsegijn.konfetti.emitters.RenderSystem$1.invoke (RenderSystem.java)
  at nl.dionsegijn.konfetti.emitters.StreamEmitter.createParticle (StreamEmitter.java)
  at nl.dionsegijn.konfetti.emitters.StreamEmitter.build (StreamEmitter.java)
  or                     .build$default (StreamEmitter.java)
  or                     .createConfetti (StreamEmitter.java)
  at nl.dionsegijn.konfetti.emitters.RenderSystem.access$addConfetti (RenderSystem.java)
  or                     .isDoneEmitting (RenderSystem.java)
  or                     .render (RenderSystem.java)
  at nl.dionsegijn.konfetti.KonfettiView.onDraw (KonfettiView.java)
  at android.view.View.draw (View.java:19123)
  at android.view.View.updateDisplayListIfDirty (View.java:18073)
  at android.view.View.draw (View.java:18851)
  at android.view.ViewGroup.drawChild (ViewGroup.java:4214)
  at android.view.ViewGroup.dispatchDraw (ViewGroup.java:4000)
  at androidx.constraintlayout.widget.ConstraintLayout.dispatchDraw (ConstraintLayout.java)
  at android.view.View.draw (View.java:19126)
  at android.view.View.updateDisplayListIfDirty (View.java:18073)
  at android.view.View.draw (View.java:18851)
  at android.view.ViewGroup.drawChild (ViewGroup.java:4214)
  at android.view.ViewGroup.dispatchDraw (ViewGroup.java:4000)
  at android.view.View.draw (View.java:19126)
  at android.view.View.updateDisplayListIfDirty (View.java:18073)
  at android.view.View.draw (View.java:18851)
  at android.view.ViewGroup.drawChild (ViewGroup.java:4214)
  at android.view.ViewGroup.dispatchDraw (ViewGroup.java:4000)
  at android.view.View.draw (View.java:19126)
  at android.view.View.updateDisplayListIfDirty (View.java:18073)
  at android.view.View.draw (View.java:18851)
  at android.view.ViewGroup.drawChild (ViewGroup.java:4214)
  at android.view.ViewGroup.dispatchDraw (ViewGroup.java:4000)
  at android.view.View.draw (View.java:19126)
  at android.view.View.updateDisplayListIfDirty (View.java:18073)
  at android.view.View.draw (View.java:18851)
  at android.view.ViewGroup.drawChild (ViewGroup.java:4214)
  at android.view.ViewGroup.dispatchDraw (ViewGroup.java:4000)
  at android.view.View.draw (View.java:19126)
  at android.view.View.updateDisplayListIfDirty (View.java:18073)
  at android.view.View.draw (View.java:18851)
  at android.view.ViewGroup.drawChild (ViewGroup.java:4214)
  at android.view.ViewGroup.dispatchDraw (ViewGroup.java:4000)
  at android.view.View.draw (View.java:19126)
  at android.view.View.updateDisplayListIfDirty (View.java:18073)
  at android.view.View.draw (View.java:18851)
  at android.view.ViewGroup.drawChild (ViewGroup.java:4214)
  at android.view.ViewGroup.dispatchDraw (ViewGroup.java:4000)
  at android.view.View.draw (View.java:19126)
  at com.android.internal.policy.DecorView.draw (DecorView.java:795)
  at android.view.View.updateDisplayListIfDirty (View.java:18073)
  at android.view.ThreadedRenderer.updateViewTreeDisplayList (ThreadedRenderer.java:643)
  at android.view.ThreadedRenderer.updateRootDisplayList (ThreadedRenderer.java:649)
  at android.view.ThreadedRenderer.draw (ThreadedRenderer.java:757)
  at android.view.ViewRootImpl.draw (ViewRootImpl.java:2994)
  at android.view.ViewRootImpl.performDraw (ViewRootImpl.java:2798)
  at android.view.ViewRootImpl.performTraversals (ViewRootImpl.java:2351)
  at android.view.ViewRootImpl.doTraversal (ViewRootImpl.java:1390)
  at android.view.ViewRootImpl$TraversalRunnable.run (ViewRootImpl.java:6754)
  at android.view.Choreographer$CallbackRecord.run (Choreographer.java:911)
  at android.view.Choreographer.doCallbacks (Choreographer.java:723)
  at android.view.Choreographer.doFrame (Choreographer.java:658)
  at android.view.Choreographer$FrameDisplayEventReceiver.run (Choreographer.java:897)
  at android.os.Handler.handleCallback (Handler.java:789)
  at android.os.Handler.dispatchMessage (Handler.java:98)
  at android.os.Looper.loop (Looper.java:251)
  at android.app.ActivityThread.main (ActivityThread.java:6563)
  at java.lang.reflect.Method.invoke (Method.java)
  at com.android.internal.os.Zygote$MethodAndArgsCaller.run (Zygote.java:240)
  at com.android.internal.os.ZygoteInit.main (ZygoteInit.java:767)
It would be useful to have an option to infinitely emit particles.

Something like this:
`KonfettiView.build().streamFor(xxx, INFINITE)`
I can't seem to use any colors with transparency, how would I go about doing this?

Thanks!
I wonder if it is possible to change axis acceleration, to make the confettis fall faster/slower, or even fall in a constant velocity. I think it would be great to manipulate the acceleration, specially on y axis.

Oh, and thanks for the great lib! 
Lots of stuff is missing, for example that you're able to create your own emitter. Also things can be explained in a better way.
I am thinking it would be nice to have more shapes :) Rectangles (not just squares), stars and long rectangles maybe (or serpentine streamers)