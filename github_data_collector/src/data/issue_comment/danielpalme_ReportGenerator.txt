Can we extend the badge generation functionality to generate different some different stylings? I'm looking for something more simple like what [shields.io](https://shields.io/category/coverage) has.
If the C++ project is large it is possible that some logic is placed header files and this files are used from different source files.
As a result the coverage.info (lcov output) contains multiple "SN" entrances for the same header files.
Lcov parser doesn't recognize this situation and creates duplicates of the same class (file name) in assembly. 
This leads to two effects:
1. The html report contains duplicated entrances for such header files
2. History throws exception because of the key duplication.

The proposed changes could be:

                    var @class = new Class(fileName, assembly);

                    this.ProcessClass(@class, fileName, lines, ref i);

                    var exClass = assembly.Classes.FistOrDefault( cl => cl.Name == fileName );
                    if(exClass != nulptr)
                    {
                        exClass.Merge(@class);
                    }
                    else
                    {
                        assembly.AddClass(@class);
                    }                    

At  private void ProcessAssembly(Assembly assembly, string[] lines)

When using -verbosity:Error I only expect to get any output if something goes wrong, but reportgenerator still outputs a list of all received arguments. I would not expecct that sort of output at any level lower than Verbose