Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/facebook/flux/network/alerts).

</details>
react-dom.development.js:12372 Warning: componentWillReceiveProps has been renamed, and is not recommended for use. See https://fb.me/react-unsafe-component-lifecycles for details.

* Move data fetching code or side effects to componentDidUpdate.
* If you're updating state whenever props change, refactor your code to use memoization techniques or move it to static getDerivedStateFromProps. Learn more at: https://fb.me/react-derived-state
* Rename componentWillReceiveProps to UNSAFE_componentWillReceiveProps to suppress this warning in non-strict mode. In React 17.x, only the UNSAFE_ name will work. To rename all deprecated lifecycles to their new names, you can run `npx react-codemod rename-unsafe-lifecycles` in your project source folder.

**Please update the following components: FluxContainer(containerClass)**
When installing `flux`, the following warning is output:
`warning myapp > flux > fbjs > core-js@1.2.7: core-js@<2.6.8 is no longer maintained. Please, upgrade to core-js@3 or at least to actual version of core-js@2.`

Updating `fbjs` should resolve this
I have one Flux store that is imported by two components. One a security based component and the other an app business data view. That Login.js component successfully logs in using Okta, obtains user info. from the application and stores it in the Flux store. The user navigates to the app data page, the dataview.js, which imports the store, uses it to retrieve user info before making fetch calls. The problem is the user state in the store is now undefined since the store has been newly constructed. It seems since the user info has not changed it should not be removed. The app data is still null since it hasn't retrieved the info yet. The store should behave like a singleton and ONLY update state when an action has been dispatched. 
`FluxContainer` contains `componentWillReceiveProps`.
Does flux fix this problem?
I getting lots of these errors:
`ERROR in [at-loader] ./node_modules/@types/flux/node_modules/@types/react/index.d.ts:2762:13 
    TS2403: Subsequent variable declarations must have the same type.  Variable 'a' must be of type 'DetailedHTMLProps<AnchorHTMLAttributes<HTMLAnchorElement>, HTMLAnchorElement>', but here has type 'HTMLProps<HTMLAnchorElement>'.`
hello, I followed your tutorial on flux on the todo list.
at step "3. Setting up Flux" when I modify the root.js, i get the following issue : 

> ERROR in /home/jubo/infini-fab/web/test/flux/utils.js
> Module not found: Error: Cannot resolve 'file' or 'directory' ./lib/FluxContainer in /home/jubo/infini-fab/web/test/flux
>  @ /home/jubo/infini-fab/web/test/flux/utils.js 10:27-57
> 
> ERROR in /home/jubo/infini-fab/web/test/flux/utils.js
> Module not found: Error: Cannot resolve 'file' or 'directory' ./lib/FluxMixinLegacy in /home/jubo/infini-fab/web/test/flux
>  @ /home/jubo/infini-fab/web/test/flux/utils.js 11:23-55
> 
> ERROR in /home/jubo/infini-fab/web/test/flux/utils.js
> Module not found: Error: Cannot resolve 'file' or 'directory' ./lib/FluxReduceStore in /home/jubo/infini-fab/web/test/flux
>  @ /home/jubo/infini-fab/web/test/flux/utils.js 12:29-61
> 
> ERROR in /home/jubo/infini-fab/web/test/flux/utils.js
> Module not found: Error: Cannot resolve 'file' or 'directory' ./lib/FluxStore in /home/jubo/infini-fab/web/test/flux
>  @ /home/jubo/infini-fab/web/test/flux/utils.js 13:23-49
> 
> ERROR in /home/jubo/infini-fab/web/test/flux/index.js
> Module not found: Error: Cannot resolve 'file' or 'directory' ./lib/Dispatcher in /home/jubo/infini-fab/web/test/flux
>  @ /home/jubo/infini-fab/web/test/flux/index.js 10:28-55

there no folder "lib" created during the install. Here are the warning I have during the npm install : 

> npm WARN prepublish-on-install As of npm@5, `prepublish` scripts are deprecated.
> npm WARN prepublish-on-install Use `prepare` for build steps and `prepublishOnly` for upload-only.
> npm WARN prepublish-on-install See the deprecation note in `npm help scripts` for more information.
> npm WARN lifecycle flux@3.1.3~prepublish: cannot run in wd %s %s (wd=%s) flux@3.1.3 gulp publish /home/jubo/infini-fab/web/test/flux
> npm WARN babelify@8.0.0 requires a peer of babel-core@6 || 7 || ^7.0.0-alpha || ^7.0.0-beta || ^7.0.0-rc but none is installed. You must install peer dependencies yourself.
> npm WARN optional SKIPPING OPTIONAL DEPENDENCY: fsevents@1.1.3 (node_modules/fsevents):
> npm WARN notsup SKIPPING OPTIONAL DEPENDENCY: Unsupported platform for fsevents@1.1.3: wanted {"os":"darwin","arch":"any"} (current: {"os":"linux","arch":"x64"})
> 
> added 116 packages in 14.406s

My OS : Ubuntu 16.04
node : v 8.9.1
npm : v 5.5.1

Thanks

$ npm run test
openssl config failed: error:02001003:system library:fopen:No such process

> flux-jest@1.0.0 test C:\Users\JThai3\workspace\flux\examples\flux-jest
> jest

 FAIL  src\__tests__\TodoStore-test.js
  ● Test suite failed to run

    ReferenceError: Unknown plugin "syntax-async-functions" specified in "C:\\Users\\JThai3\\workspace\\flux\\examples\\flux-todomvc\\.babelrc" at 0, attempted to resolve relative to "C:\\Users\\JThai3\\workspace\\flux\\examples\\flux-todomvc"

      at node_modules\babel-core\lib\transformation\file\options\option-manager.js:180:17
      at Array.map (native)

Test Summary
 › Ran all tests.
 › 1 test suite failed, 0 tests passed (0 total in 1 test suite, run time 1.162s)
openssl config failed: error:02001003:system library:fopen:No such process

npm ERR! Windows_NT 10.0.14393
npm ERR! argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "run" "test"
npm ERR! node v6.11.0
npm ERR! npm  v3.10.10
npm ERR! code ELIFECYCLE
npm ERR! flux-jest@1.0.0 test: `jest`
npm ERR! Exit status 1
npm ERR!
npm ERR! Failed at the flux-jest@1.0.0 test script 'jest'.
npm ERR! Make sure you have the latest version of node.js and npm installed.
npm ERR! If you do, this is most likely a problem with the flux-jest package,
npm ERR! not with npm itself.
npm ERR! Tell the author that this fails on your system:
npm ERR!     jest
npm ERR! You can get information on how to open an issue for this project with:
npm ERR!     npm bugs flux-jest
npm ERR! Or if that isn't available, you can get their info via:
npm ERR!     npm owner ls flux-jest
npm ERR! There is likely additional logging output above.

npm ERR! Please include the following file with any support request:
npm ERR!     C:\Users\JThai3\workspace\flux\examples\flux-jest\npm-debug.log
openssl config failed: error:02001003:system library:fopen:No such process

https://facebook.github.io/flux/docs/flux-utils.html

```
There are four main classes exposed in Flux Utils:
```
On github it says `three` but on production page it still says `four`
@kad, what do you think? People using the regular Flux package won't get the immutable-js dependency, but people that do want to use it could add a separate npm package (say `flux-immutable` or something similar).