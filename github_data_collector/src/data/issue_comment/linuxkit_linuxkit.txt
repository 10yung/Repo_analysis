When `userns-remap` is enabled in the Docker daemon on the host, the `iso-efi` format cannot be built.

A `bin/linuxkit build -format iso-efi linuxkit.yml` fails with:
```
Add files:
  etc/linuxkit-config
Create outputs:
  linuxkit-efi.iso
FATA[0026] Error writing outputs: Error writing iso-efi output: docker run linuxkit/mkimage-iso-efi:667bd641fd37062eaf9d2173c768ebfcedad3876 failed: exit status 1 output:
```

While a `bin/linuxkit build linuxkit.yml` successfully completes. I've tested this in both Arch Linux and Alpine Linux 10. I tested this on the current master, fce020a111aa775a0631e590fda661a6fe361817. `chmod -R 777 .` in the `linuxkit` directory does not help.

**Description**

Currently we have version sprawl and a large delta to the latest release:

Circle CI = `Go 1.11.3`
Linuxkit Go-Compile = `Go 1.11.5`
Latest = `Go 1.13.6`

As a contibutor this is annoying as I'm seeing inconsistent errors with `gofmt` between go versions.

For example, on `master` currently


**Steps to reproduce the issue:**
`make` vs. `make local-check`

**Describe the results you received:**

```
$ make local-check
16:23:52 gofmt...
src/cmd/linuxkit/run_openstack.go src/cmd/linuxkit/gcp.go src/cmd/linuxkit/push_openstack.go
Makefile:77: recipe for target 'local-check' failed
make: *** [local-check] Error 1

$ make                                                                                                                                                      16:26:43 tar cf - -C src/cmd/linuxkit . | docker run --rm --net=none --log-driver=none -i  linuxkit/go-compile:8de0e27a38498389e43b3a5b520d943a2b3be5ba --package github.com/linuxkit/linuxkit/src/cmd/linuxkit --ldflags "-X github.com/linuxkit/linuxkit/src/cmd/linuxkit/version.GitCommit=fce020a111aa775a0631e590fda661a6fe361817 -X github.com/linuxkit/linuxkit/src/cmd/linuxkit/version.Version="v0.7+"" -o bin/linuxkit > tmp_linuxkit_bin.tar
gofmt...
gcp.go
push_openstack.go
run_openstack.go
sh: push_openstack.go: unknown operand
Makefile:60: recipe for target 'tmp_linuxkit_bin.tar' failed
make: *** [tmp_linuxkit_bin.tar] Error 2
make: *** Deleting file 'tmp_linuxkit_bin.tar'
```

**Describe the results you expected:**

The results should be consistent

**Additional information you deem important (e.g. issue happens only occasionally):**

We should probably have a conversation about how to best manage Go versions in the project before we start opening PRs to fix it.
Note, as mentioned on https://github.com/linuxkit/linuxkit/pull/3426 the recent addition of devmapper as a snapshotter to containerd caused the coantainerd tests on LinuxKit to fail. To fix this, this PR:
- compiles containerd without devmapper support
- cherry picks an upstream containerd commit to prevent devmapper tests to run (see https://github.com/containerd/containerd/issues/3940 and https://github.com/containerd/containerd/pull/3941)

![golden-pheasant](https://user-images.githubusercontent.com/3338098/72028174-7c88e780-3279-11ea-90cc-6dcd974be074.jpeg)

linuxkit documentation has been driven entirely through docs on this repo. For many uses - especially those looking not just to modify it - that isn't enough. We need a proper doc site, oriented towards end-users.
Following on from [this tweet](https://twitter.com/justinmbarrick/status/1211344963348443137) from @justinbarrick, we need to document better how to use custom kernels. Specifically:

* how to package and use a different kernel
* where drivers are/should be installed
* how to override/change the init system
Reverts linuxkit/linuxkit#3300

This does not work and the CI fails building the GCP image (see https://github.com/linuxkit/linuxkit/pull/3451). Enabling more logging in `mkimage-gcp` gives the following error:

```
supermin: build: visiting /usr/lib/x86_64-linux-gnu/guestfs/supermin.d/packages type uncompressed packages
supermin: build: visiting /usr/lib/x86_64-linux-gnu/guestfs/supermin.d/packages-hfsplus type uncompressed packages
supermin: build: visiting /usr/lib/x86_64-linux-gnu/guestfs/supermin.d/packages-reiserfs type uncompressed packages
supermin: build: visiting /usr/lib/x86_64-linux-gnu/guestfs/supermin.d/packages-xfs type uncompressed packages
supermin: build: visiting /usr/lib/x86_64-linux-gnu/guestfs/supermin.d/udev-rules.tar.gz type gzip base image (tar)
supermin: mapping package names to installed packages
supermin: resolving full list of package dependencies
supermin: build: 192 packages, including dependencies
supermin: build: 10676 files
supermin: build: 6472 files, after matching excludefiles
supermin: build: 6475 files, after adding hostfiles
supermin: build: 6475 files, after removing unreadable files
supermin: build: 6478 files, after munging
supermin: kernel: picked kernel vmlinuz-4.9.0-5-amd64
supermin: kernel: picked modules path /lib/modules/4.9.0-5-amd64
supermin: kernel: kernel_version 4.9.0-5-amd64
supermin: kernel: modules /lib/modules/4.9.0-5-amd64
supermin: ext2: creating empty ext2 filesystem '/var/tmp/.guestfs-0/appliance.d.fchyrekj/root'
supermin: ext2: populating from base image
supermin: error: statvfs: No space left on device: /var/tmp/.guestfs-0/appliance.d.fchyrekj/root
libguestfs: error: /usr/bin/supermin exited with error status 1, see debug messages above
libguestfs: trace: launch = -1 (error)
```

I've tried a number of different options for sizing and none seem to work.

I suggest to revert this PR for now.
Proposing to remove support for 4.9.x and 4.14.x kernels.
- 4.9.x is ancient and has not had several security fixes back-ported.
- With 5.4.x the new LTS and 4.19.x as a mature LTS, we don't really need 4.14.x anymore.
<!--
If you are reporting a new issue, make sure that we do not have any duplicates
already open. You can ensure this by searching the issue list for this
repository. If there is a duplicate, please close your issue and add a comment
to the existing issue instead.

If you suspect your issue is a bug, please edit your issue description to
include the BUG REPORT INFORMATION shown below. If you fail to provide this
information within 7 days, we cannot debug your issue and will close it. We
will, however, reopen it if you later provide the information.

For more information about reporting issues, see
https://github.com/linuxkit/linuxkit/blob/master/CONTRIBUTING.md#reporting-other-issues

---------------------------------------------------
BUG REPORT INFORMATION
---------------------------------------------------
Use the commands below to provide key information from your environment:
You do NOT have to include this information if this is a FEATURE REQUEST
-->

**Description**

When building linuxkit images I get:

```
WARN[0052] targets/justin metadata is nearing expiry, you should re-sign the role metadata
WARN[0052] targets/riyaz metadata is nearing expiry, you should re-sign the role metadata
```
For at least:

* linuxkit/sysfs:v0.7
* linuxkit/openntpd:v0.7
* linuxkit/node_exporter:v0.7

Since v0.7 is the latest major in most cases, it seems they might all soon trigger this warning.

**Steps to reproduce the issue:**
linuxkit build -format kernel+initrd build.yml

**Describe the results you received:**
WARN[0052] targets/{justin|riyaz} metadata is nearing expiry, you should re-sign the role metadata

**Describe the results you expected:**
No warnings.


**Additional information you deem important (e.g. issue happens only occasionally):**


The initrd image can now be generated with a prefix path to the root
filesystem of the Docker image, using the '-prefix' option.

This is a useful feature when trying to create a custom ramfs build, as
it removes the constraint of placing the Docker filesystem at the root
of the resulting image.

The code necessary for this is mostly already present, it only needs to
link with a CLI option.

Signed-off-by: Bogdan Neacsu <bnneacsu@amazon.com>

<!--
Please make sure you've read and understood our contributing guidelines;
https://github.com/linuxkit/linuxkit/blob/master/CONTRIBUTING.md

** Make sure all your commits include a signature generated with `git commit -s` **

For additional information on our contributing process, read our contributing
guide https://docs.docker.com/opensource/code/

If this is a bug fix, make sure your description includes "fixes #xxxx", or
"closes #xxxx"

Please provide the following information:
-->

**- What I did**

Per the discussion in #3437, having a working CI system is important to attract contributors to the project and reduce the burden on maintainers. I have spent some time looking at consolidating our CI system sprawl (CircleCI, LinuxKitCI etc..) and replacing it with GitHub Actions.

This PR introduced a single worflow for CI.
It:
- Builds binaries and runs unit tests on all supported platforms
- Runs all integration tests (in parallel)

In future this can be extended to include anything and everything that is on the CI wishlist.

A few points of note:

1. Tests are run using containerized qemu (no nested virt)
2. Overall CI time is still 1hr, but that is mainly spent running the packages tests
3. The GCP test that was running on LinuxKit CI has been ported to RTF but isn't running just yet due to security concerns around secrets
4. I'm not sure what the security model is around changes to workflow/actions. I'll clarify before merge.

**- How I did it**

Wrote lots of YAML and tested on my LinuxKit fork.

**- How to verify it**
You can see the latest green run on my fork: https://github.com/dave-tucker/linuxkit/commit/71a95bff490e7d4505767dbf337b769c58e46f16/checks?check_suite_id=329481528

**- Description for the changelog**
<!--
Write a short (one line) summary that describes the changes in this
pull request for inclusion in the changelog:
-->


**- A picture of a cute animal (not mandatory but encouraged)**
![image](https://user-images.githubusercontent.com/3781777/69637766-396c0f80-1051-11ea-846a-83d602d2d881.png)
