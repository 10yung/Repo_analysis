Once I define some factorVars, all myVars are treated as categorical in the table. I have checked, and they are continous in the dataframe. I attach code and result. Thank you very much.
[tableone categorical continous variables trouble.docx](https://github.com/kaz-yos/tableone/files/4034594/tableone.categorical.continous.variables.trouble.docx)



Hi,

Love this library and use a lot on my work.
I have a question for printing tableone output. For binary categorical variable, is there an 
argument to choose which label to use? e.g. In surgeon specialty, I have Thoracic or Other
value in the variable. Instead of printing SPECIALTY = Other (%), can I manually choose to display
SPECIALTY = Thoracic (%)? I don't want to use showAllLevels mode because it would also display too many YES/NO variables that made my tableone unnecessarily long.

Thanks in advance
Hi Mr. Yoshida,


Thank you and your colleagues for creating a great resource for all of us to benefit from! My issue is not so much an issue as a functionality question. Is there was a way to vertically align digits on the decimal point using the print(CreateTableOne) function? I get that sending print(CreateTableOne) creates a matrix object, but I'm not sure how to align those digits in R. Any advice or suggestions would be greatly appreciated.

```
repro<-structure(c("1000", "2000.00 (0.00)", "1000.00 (00.00)", "600", 
"700.00 (0.00)", "50.72 (50.00)"), .Dim = 3:2, .Dimnames = list(
    c("n", "unique_n", "Age"), `Stratified by Something` = c("0", 
    "1")))

         Stratified by Something
           0                 1              
  n        "1000"            "600"          
  unique_n "2000.00 (0.00)"  "700.00 (0.00)"
  Age      "1000.00 (00.00)" "50.72 (50.00)"
```

Huge fan of tableone. This is my first time posting on github. Is there a way for tableone to take a continuous variable and calculate its total rather than its mean? 

For example I have a dataset where rows are different pharmacies and one column is units sold of a drug. I want tableone to show the total units sold across all pharmacies rather than showing the mean number of units sold at each pharmacy.
Is there any way to have the table include a comma at the thousands place.  Current output is this
alk.phos (mean (SD)) "1982.66 (2140.39)"

Is there a way to get this instead? alk.phos (mean (SD)) "1,982.66 (2,140.39)"
hi! 

I thought this might be useful for someone.

This few lines of code combine table1 overall and table one stratified and export it to a nice *.xlsx automatically.

```
table1_printed<-as.data.frame(print(table1))
table1strat_printed<-as.data.frame(print(table1strat))
table1_final<-cbind(table1_printed,table1strat_printed)

xlsx::write.xlsx(as.data.frame(print(table1_final)), "table1_final.xlsx")
```
One issue I run into in creating various table 1's is if a subject can select multiple categories the counts are off.  

Example say I have 2 subjects, but they are allowed to select multiple race's.  

We typically report the total selected (in this case 0,1, or 2) for each race and the total within the race category may not sum to the total overall N (in this case 2).  I don't think there is currently a way around this in CreateTableOne.   I'd be willing to submit a pull request if this type of enhancement would be accepted.

````
library(tidyverse)
library(tableone)

dat <- tibble(id = c("A", "B", "B"),
              race = c("W", "W", "B"))

t2 <- CreateTableOne(data = dat, vars = c("race"))

print(t2, showAllLevels = TRUE)
````

gives

````
           level Overall  
  n              3        
  race (%) B     1 (33.3) 
           W     2 (66.7) 
````

What I would like is to be able to say count by unique id and get something more like

````
           level Overall  
  n              2        
  race (%) B     1 (50.0) 
           W     2 (100) 
````

thoughts?
As brought up in #32, `kableone()` only lets you pass arguments to `kable()` and not to `print.tableone()`.

I think there are a couple of related issues here. Right now I'm thinking a good PR for this will do the following:

1) Move the code currently in `print.tableone` to `as.data.frame.tableone` with `printToggle = FALSE` to avoid `capture.output()`
2) change `print.tableone` to something like
```r
print.tableone <- function(x, {arguments}, ...) {
  x <- as.data.frame(x, {arguments})
  print(x, ...)
}
```
3) Change `kableone()` to something like
```r
kableone <- function(x, kable_args = list(), print_args = list()) {
 #  need to evaluate arguments as well
 # ...
  x <- as.data.frame(x, print_args)
  knitr::kable(x, kable_args)
}
```

Many thanks to your package!
I want to create a table like below:
![image](https://user-images.githubusercontent.com/12363417/53288095-87e93680-37bf-11e9-878f-fa6006e899b5.png)

Say I have data like this:

|Gram|Species|Count|
|--|--|--|
|pos|A|1|
|pos|B|1|
|neg|C|1|
|neg|D|1|
|neg|D|1|

How to output first table using tableone?
THANK YOU!
Currently tableone object can only be written out using write.csv. Suggest expand to write_csv 