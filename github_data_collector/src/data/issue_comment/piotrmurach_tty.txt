```
C:/Ruby26-x64/lib/ruby/gems/2.6.0/gems/tty-0.10.0/lib/tty/commands/add.rb:69:in `read': No such file or directory @ rb_sysopen - li
b/rev2test/cli.rb (Errno::ENOENT)
```

### Describe the problem
Specs fail on ruby 2.7.0p0, mostly due to deprecation of hash argument being treated as keywords by ruby < 2.7.0 but deprecated in 2.7.0+.

### Steps to reproduce the problem
`bundle exec rake spec` using ruby 2.7.0p0

### Actual behaviour

```
Finished in 10.59 seconds (files took 0.39076 seconds to load)
42 examples, 20 failures, 1 pending

Failed examples:

rspec ./spec/integration/new_spec.rb:271 # teletype new generates C extensions boilerplate
rspec ./spec/integration/new_spec.rb:292 # teletype new generates code of conduct file
rspec ./spec/integration/new_spec.rb:321 # teletype new displays help
rspec ./spec/integration/new_spec.rb:5 # teletype new generates cli application
rspec ./spec/integration/new_namespaced_spec.rb:2 # teletype new generates cli application namespaced
rspec ./spec/integration/add_force_spec.rb:2 # `teletype add --force` command forces adding already existing command
rspec ./spec/integration/add_subcommand_spec.rb:2 # `teletype add` subcommad adds a new subcommand
rspec ./spec/integration/add_subcommand_spec.rb:175 # `teletype add` subcommad adds a new subcommand with minitest
rspec ./spec/integration/add_spec.rb:238 # `teletype add` command adds more than one command to cli file
rspec ./spec/integration/add_spec.rb:2 # `teletype add` command adds a command
rspec ./spec/integration/add_spec.rb:343 # `teletype add` command adds complex command name as camel case
rspec ./spec/integration/add_spec.rb:415 # `teletype add` command adds complex command name as snake case
rspec ./spec/integration/add_spec.rb:122 # `teletype add` command adds a command with minitests
rspec ./spec/integration/add_spec.rb:498 # `teletype add` command displays help
rspec ./spec/integration/add_spec.rb:186 # `teletype add` command adds command in cli without any commands
rspec ./spec/integration/add_namespaced_spec.rb:127 # teletype add adds a subcommand to namespaced application
rspec ./spec/integration/add_namespaced_spec.rb:2 # teletype add adds a command to namespaced application
rspec ./spec/integration/add_desc_args_spec.rb:124 # `teletype add --desc --args` command adds command with variadic number of arguments
rspec ./spec/integration/add_desc_args_spec.rb:250 # `teletype add --desc --args` command adds subcommand with description and custom arguments
rspec ./spec/integration/add_desc_args_spec.rb:4 # `teletype add --desc --args` command adds command with description and custom arguments
```


### Expected behaviour
Specs to pass

### Describe your environment

* OS version: Ubuntu 18.04
* Ruby version: 2.7.0p0
* TTY version: master

adding `method_option :services, type: :boolean` 

causes tests (correctly) to fail:

```
  1) `test-cmd config` command executes `test-cmd help config` command successfully
     Failure/Error: expect(output).to eq(expected_output)

       expected: "Usage:\n  test-cmd config\n\nOptions:\n  -h, [--help], [--no-help]  # Display usage information\n\nCommand description...\n"
            got: "Usage:\n  test-cmd config\n\nOptions:\n  -h, [--help], [--no-help]          # Display usage information\n      [--services], [--no-services]  \n\nCommand description...\n"
```

and then when I copy/paste the output in
```
    expected_output = <<-OUT
Usage:
  test-cmd config

Options:
  -h, [--help], [--no-help]          # Display usage information
      [--services], [--no-services]

Command description...
    OUT
```

and I re-run the tests I get:
```
     Failure/Error: expect(output).to eq(expected_output)

       expected: "Usage:\n  test-cmd config\n\nOptions:\n  -h, [--help], [--no-help]          # Display usage information\n      [--services], [--no-services]\n\nCommand description...\n"
            got: "Usage:\n  test-cmd config\n\nOptions:\n  -h, [--help], [--no-help]          # Display usage information\n      [--services], [--no-services]  \n\nCommand description...\n"
```

And I'm giving up because this just feels stupid way to test and adjust whitespaces.

```
$ teletype new test-cmd
# remove todos from gemspec
$ teletype add config
```

```
$ rake
  1) `test-cmd config` command executes `test-cmd help config` command successfully
     Failure/Error: output = `test-cmd help config`

     Errno::ENOENT:
       No such file or directory - test-cmd
```

"fix" by prefixing runner to use `exe/test-cmd` :
```
RSpec.describe "`test-cmd config` command", type: :cli do
  it "executes `test-cmd help config` command successfully" do
    output = `exe/test-cmd help config`
```


### Describe the problem
It seems teletype isn't escaping / quoting the relative path (i.e. app name) for bundler, which then errors due to invalid arguments.

### Steps to reproduce the problem
```
cd ~/
mkdir 'weird dir' && cd 'weird dir'
teletype new app
```

### Actual behaviour
`teletype new app` returns 1, prints traceback:
```
ERROR: "bundle gem" was called with arguments ["/Users/tim/weird", "dir/app"]
Usage: "bundle gem NAME [OPTIONS]"
Traceback (most recent call last):
        9: from /Users/tim/.rbenv/versions/2.6.5/bin/teletype:23:in `<main>'
        8: from /Users/tim/.rbenv/versions/2.6.5/bin/teletype:23:in `load'
        7: from /Users/tim/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/tty-0.10.0/exe/teletype:14:in `<top (required)>'
        6: from /Users/tim/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/base.rb:466:in `start'
        5: from /Users/tim/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor.rb:387:in `dispatch'
        4: from /Users/tim/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/invocation.rb:126:in `invoke_command'
        3: from /Users/tim/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/thor-0.20.3/lib/thor/command.rb:27:in `run'
        2: from /Users/tim/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/tty-0.10.0/lib/tty/cli.rb:128:in `new'
        1: from /Users/tim/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/tty-0.10.0/lib/tty/commands/new.rb:126:in `execute'
/Users/tim/.rbenv/versions/2.6.5/lib/ruby/gems/2.6.0/gems/tty-command-0.9.0/lib/tty/command.rb:106:in `run': Running `bundle gem /Users/tim/weird dir/app --no-mit --no-exe --coc --no-ext -t rspec` failed with (TTY::Command::ExitError)
  exit status: 15
  stdout: ERROR: "bundle gem" was called with arguments ["/Users/tim/weird", "dir/app"]
Usage: "bundle gem NAME [OPTIONS]"
  stderr: Nothing written
```

### Expected behaviour
For the presence or absence of spaces in the project path to make no noticeable difference to an end-user's experience invoking `teletype new`.

### Describe your environment

I only noticed this because I store some stuff in iCloud Drive, which has this unfortunate location on disk: `/Users/tim/Library/Mobile Documents/com~apple~CloudDocs`.

- ruby 2.6.5p114 (2019-10-01 revision 67812) [x86_64-darwin19]
- macOS 10.15.1
- tty (0.10.0)
### Describe the change
Updates the README.md file to help people understand that subcommands cannot be added to existing commands.

### Why are we doing this?
Because auf #46, which also caused me some headaches.

### Benefits
It helps users to better understand how `teletype` works.

### Drawbacks
It does not address the problem the `teletype` crashes ungracefully when attempting to add a subcommand to an existing command.

### Requirements
Put an X between brackets on each line if you have done the item:
- [ ] Tests written & passing locally?
- [ ] Code style checked?
- [ ] Rebased with `master` branch?
- [x] Documentaion updated?

### Describe the problem
Bundling a project with this gem and bundler 2 yields the following error:

```
Bundler could not find compatible versions for gem "bundler":
  In Gemfile:
    tty (~> 0.9.1) was resolved to 0.9.1, which depends on
      bundler (< 2.0, ~> 1.16)

  Current Bundler version:
    bundler (2.0.1)
This Gemfile requires a different version of Bundler.
Perhaps you need to update Bundler by running `gem install bundler`?

Could not find gem 'bundler (< 2.0, ~> 1.16)', which is required by gem 'tty (~> 0.9.1)', in any of the sources.
```
This is because Bundler is pinned to <2.0 [here](https://github.com/piotrmurach/tty/blob/master/tty.gemspec#L47).

### Steps to reproduce the problem

0. Install Bundler 2.0 or greater.
1. Create a Gemfile with the following:

```ruby
source 'https://rubygems.org'
gem 'tty', '~> 0.9.1'
```

2. Run `bundle`

### Describe your environment

* Bundler version: 2.0.1
* OS version: OSX Mojave
* Ruby version: ruby 2.5.1p57
* TTY version: 0.9.1

> Reposted from tty-file, by request. 

> Thanks, John for reporting!

> Does the contacts command already exist when you're trying to create contacts phonelist subcommand? Would it be possible for you to report this issue at https://github.com/piotrmurach/tty since that's where the teletype tool is developed?

I cannot use teletype to create a subcommand of a command.
When I do I get an exception

```
> teletype add contacts phonelist --force                                                                                                                                    136ms
      create  spec/integration/contacts/phonelist_spec.rb
      create  spec/unit/contacts/phonelist_spec.rb
      create  lib/ddca/commands/contacts/phonelist.rb
      create  lib/ddca/templates/contacts/phonelist/.gitkeep
Traceback (most recent call last):
	10: from /Users/jschank/.asdf/installs/ruby/2.5.1/bin/teletype:23:in `<main>'
	 9: from /Users/jschank/.asdf/installs/ruby/2.5.1/bin/teletype:23:in `load'
	 8: from /Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/tty-0.8.1/exe/teletype:14:in `<top (required)>'
	 7: from /Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/thor-0.20.0/lib/thor/base.rb:466:in `start'
	 6: from /Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/thor-0.20.0/lib/thor.rb:387:in `dispatch'
	 5: from /Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/thor-0.20.0/lib/thor/invocation.rb:126:in `invoke_command'
	 4: from /Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/thor-0.20.0/lib/thor/command.rb:27:in `run'
	 3: from /Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/tty-0.8.1/lib/tty/cli.rb:88:in `add'
	 2: from /Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/tty-0.8.1/lib/tty/commands/add.rb:131:in `execute'
	 1: from /Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/tty-file-0.6.0/lib/tty/file.rb:512:in `inject_into_file'
/Users/jschank/.asdf/installs/ruby/2.5.1/lib/ruby/gems/2.5.0/gems/tty-file-0.6.0/lib/tty/file.rb:512:in `escape': no implicit conversion of nil into String (TypeError)
```
It doesn't matter if I try to define parameters or not. I met this problem when I tried a more complex call:
```
> teletype add contacts phone_list --desc "Color code the phone extension list" --args contacts_file extension_xslx
```

Ultimately resulted in the same exception, from the same place


It would be great to support banners. We use this a lot in our scripts.

![image](https://cloud.githubusercontent.com/assets/526195/13151338/527a5d3e-d62f-11e5-8804-57d16029946f.png)
