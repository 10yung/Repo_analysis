


It looks like when creating an external charge, we are not verifying the validity between the `accountId` and the `invoiceId` specified in the json leading to data integrity issue.
Given the catalog below:

1. Dry-run invoicing with a target date in the middle of the `DISCOUNT` period only invoices for that month (instead of catching-up)
2. Actual invoicing past the `DISCOUNT` phase doesn't reflect the `EVERGREEN` price

Here's a simple catalog to reproduce it (we also have `ReducedSpyCarAdvancedWithThreePhasesAddOns.xml` in our Ruby integration tests):
```
<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<catalog xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:noNamespaceSchemaLocation="https://docs.killbill.io/latest/catalog.xsd">
    <effectiveDate>2019-01-01T00:00:00+00:00</effectiveDate>
    <catalogName>ExampleCatalog</catalogName>
    <recurringBillingMode>IN_ADVANCE</recurringBillingMode>
    <currencies>
        <currency>USD</currency>
    </currencies>
    <products>
        <product name="Standard">
            <category>BASE</category>
        </product>
    </products>
    <rules>
        <changePolicy>
            <changePolicyCase>
                <policy>END_OF_TERM</policy>
            </changePolicyCase>
        </changePolicy>
        <cancelPolicy>
            <cancelPolicyCase>
                <policy>END_OF_TERM</policy>
            </cancelPolicyCase>
        </cancelPolicy>
    </rules>
    <plans>
        <plan name="standard-monthly">
            <product>Standard</product>
            <initialPhases>
                <phase type="TRIAL">
                    <duration>
                        <unit>DAYS</unit>
                        <number>30</number>
                    </duration>
                    <fixed>
                        <fixedPrice>
                            <price>
                                <currency>USD</currency>
                                <value>0</value>
                            </price>
                        </fixedPrice>
                    </fixed>
                </phase>
                <phase type="DISCOUNT">
                    <duration>
                        <unit>MONTHS</unit>
                        <number>6</number>
                    </duration>
                    <recurring>
                        <billingPeriod>MONTHLY</billingPeriod>
                        <recurringPrice>
                            <price>
                                <currency>USD</currency>
                                <value>4.95</value>
                            </price>
                        </recurringPrice>
                    </recurring>
                </phase>
            </initialPhases>
            <finalPhase type="EVERGREEN">
                <duration>
                    <unit>UNLIMITED</unit>
                </duration>
                <recurring>
                    <billingPeriod>MONTHLY</billingPeriod>
                    <recurringPrice>
                        <price>
                            <currency>USD</currency>
                            <value>24.95</value>
                        </price>
                    </recurringPrice>
                </recurring>
            </finalPhase>
        </plan>
    </plans>
    <priceLists>
        <defaultPriceList name="DEFAULT">
            <plans>
                <plan>standard-monthly</plan>
            </plans>
        </defaultPriceList>
    </priceLists>
</catalog>
```
`PaymentApi#getPayment` called from `InvoiceResource#getPaymentsForInvoice` for instance would not populate the `accountId`.
Creating the PR so we keep track of it. If we decide to not merge it, at least we have the closed PR as a reference and we can update such PR with details on the decision.
When creating an external charge for instance, `createdExternalChargesJson` has `startDate` and `endDate` populated as `0001-01-01` instead of being `null`.

This could affect other endpoints (e.g. `createTaxItems`).
While running a test doing s SOT cancellation [our code throws an exception](https://github.com/killbill/killbill/blob/killbill-0.21.4/subscription/src/main/java/org/killbill/billing/subscription/api/user/DefaultSubscriptionBaseApiService.java#L696) -- depending on when the test is ran in the day.

All JAX-RS APIs return a multi-versioned catalog (even when a version is specified), which we don't know how to deserialize, yet we cannot upload a multi-version one.