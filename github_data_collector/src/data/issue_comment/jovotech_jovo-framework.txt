## Proposed changes
This is a pull request for the first version of the Jovo Bixby Platform Integration. It will function as a thread for open discussion, roadmap and transparent development stage.

## Types of changes
<!--- Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (non-breaking change which fixes an issue)
- [x] New feature (non-breaking change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

## Checklist
- [x] My code follows the code style of this project
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed

## Roadmap
- [x] Dynamic Speech Output
- [x] Session Data
- [x] Basic Jovo Integration functionality (e.g. persistent user storage, i18n, ...)
- [x] AudioPlayer functionality
- [ ] Error Handling
- [ ] Integral Host Support (e.g. AWS Lambda, Azure, Heroku, ...)
- [ ] Complex Dialog & Views

Hello,

Thanks for creating a very useful framework for the voice assistant development,

I would like to use Dialogflow api's in the chatbot, so is there any way that I can use Jovo for Alexa, Google Assistant and the Dialogflow integration with the chatbot.

Thanks.
## I'm submitting a...
<!-- Put an `x` in all the boxes that apply -->
- [x] Bug report
- [ ] Feature request
- [ ] Documentation issue or request
- [ ] Other... Please describe:

## Description
If you compare the sample intent requests between Alexa and Google (Dialogflow), you'll see that the Alexa one [doesn't include screen capabilities](https://github.com/jovotech/jovo-framework/blob/master/jovo-platforms/jovo-platform-alexa/sample-request-json/v1/IntentRequest1.json#L24) but the Dialogflow one [does](https://github.com/jovotech/jovo-framework/blob/master/jovo-platforms/jovo-platform-dialogflow/sample-request-json/v2/google/DefaultWelcomeIntent.json#L49,L80) (SCREEN_OUTPUT). That causes problems when using the request builder to build intent requests for unit tests, because there's then no way to create a Dialogflow request that doesn't have a screen interface (JovoRequest has a setScreenInterface method but not a clearScreenInterface method).

## Your Environment
* Jovo Framework version used: 2.2.25
* Operating System: Windows 10
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.2.0 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.2.0...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.2.0&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/jovotech/jovo-framework/network/alerts).

</details>
## I'm submitting a...
<!-- Put an `x` in all the boxes that apply -->
- [ ] Bug report
- [x] Feature request
- [ ] Documentation issue or request
- [ ] Other... Please describe:

## Expected Behavior
<!--- Bug report? Tell us what should happen -->
<!--- Feature request? Tell us how it should work -->
I'd like to be able to deploy using a new ask profile after previously using another one.

## Current Behavior
<!--- Bug report? tell us what happens instead of the expected behavior -->
<!--- Include full errors, uncaught exceptions, stack traces, and relevant logs -->
I'm currently getting the error below. This happens when I try to deploy using a new ask profile. The solution is to rebuild the project directory, and then add in the endpoint details inside the `skill.json` (because deploy won't do that automatically and it won't deploy otherwise).

### Error log
```
    ❯ Deploying Alexa Skill 
      ✖ Updating Alexa Skill project for ASK profile yyyyyy
       -> askApiUpdateSkill:You do not have access to the resource.
```

## Your Environment
<!--- Include as many relevant details about the environment where the bug was discovered -->
* Jovo Framework version used: 2.2.24
* Operating System: Ubuntu/Linux
## I'm submitting a...
<!-- Put an `x` in all the boxes that apply -->
- [X] Bug report
- [ ] Feature request
- [ ] Documentation issue or request
- [ ] Other... Please describe:

## Expected Behavior
<!--- Bug report? Tell us what should happen -->
this.getUserId() and this.$user.GetId() should return the same value
<!--- Feature request? Tell us how it should work -->

## Current Behavior
Ran into a ton of crazy issues once I implemented skill events. Realized that this.getUserId returns null within skill event since the session object isnt populated. this.$user.getId() works though.

There is a mismatch between the two methods on AlexaSkill and AlexaRequest. As you can see, when the user is on the session its fine. But on AlexaSkill, the userId property is reading from context.user when it should be context.System.user.

https://github.com/jovotech/jovo-framework/blob/1f7fedca249b9d9c3018a4c2ba2646c7af378571/jovo-platforms/jovo-platform-alexa/src/core/AlexaSkill.ts#L144

https://github.com/jovotech/jovo-framework/blob/1f7fedca249b9d9c3018a4c2ba2646c7af378571/jovo-platforms/jovo-platform-alexa/src/core/AlexaRequest.ts#L532

### Error log
N/A

## Your Environment
<!--- Include as many relevant details about the environment where the bug was discovered -->
* Jovo Framework version used: latest

## I'm submitting a...
<!-- Put an `x` in all the boxes that apply -->
- [x] Bug report
- [ ] Feature request
- [ ] Documentation issue or request
- [ ] Other... Please describe:

## Expected Behavior
<!--- Bug report? Tell us what should happen -->
<!--- Feature request? Tell us how it should work -->
My voice app uses a google assistant carousel for displaying a number of options (based on code from here: https://www.jovo.tech/docs/google-assistant/visual-output#carousel-selector). I expect to be able to scroll through the list of options in the carousel and tap to select one.

## Current Behavior
<!--- Bug report? tell us what happens instead of the expected behavior -->
<!--- Include full errors, uncaught exceptions, stack traces, and relevant logs -->
It works as intended on a phone but when attempting to scroll through the options on a Google Home Hub, the default fallback intent is triggered as soon as I start to scroll, so instead of being able to scroll - I am sent to the default fallback screen in my app. This happens if I attempt to scroll before the ask dialogue has finished speaking. If I wait until the microphone opens and then scroll the issue doesn't occur. Is there anything else I would need to implement to enable scrolling?

This is the request I receive when starting to scroll the screen:

`
{
	"responseId": "1d06e2a7-d254-4be6-8054-22fdd84576c7-d5ae01f3",
	"queryResult": {
		"parameters": {},
		"allRequiredParamsPresent": true,
		"outputContexts": [
			{
				"name": "projects/my-project-ksy/agent/sessions/ABwppHH9bqu3KYaf59z6DpqiTXpSuAhPQfSYuHsQ8OFOI_Hi1DhWT7D-fsmukn8eyhaXDuI5la8z3pjLQAT3NGrxvk1QxetNulHbVF0/contexts/actions_capability_media_response_audio"
			},
			{
				"name": "projects/my-project-ksy/agent/sessions/ABwppHH9bqu3KYaf59z6DpqiTXpSuAhPQfSYuHsQ8OFOI_Hi1DhWT7D-fsmukn8eyhaXDuI5la8z3pjLQAT3NGrxvk1QxetNulHbVF0/contexts/actions_capability_account_linking"
			},
			{
				"name": "projects/my-project-ksy/agent/sessions/ABwppHH9bqu3KYaf59z6DpqiTXpSuAhPQfSYuHsQ8OFOI_Hi1DhWT7D-fsmukn8eyhaXDuI5la8z3pjLQAT3NGrxvk1QxetNulHbVF0/contexts/actions_capability_screen_output"
			},
			{
				"name": "projects/my-project-ksy/agent/sessions/ABwppHH9bqu3KYaf59z6DpqiTXpSuAhPQfSYuHsQ8OFOI_Hi1DhWT7D-fsmukn8eyhaXDuI5la8z3pjLQAT3NGrxvk1QxetNulHbVF0/contexts/actions_capability_audio_output"
			},
			{
				"name": "projects/my-project-ksy/agent/sessions/ABwppHH9bqu3KYaf59z6DpqiTXpSuAhPQfSYuHsQ8OFOI_Hi1DhWT7D-fsmukn8eyhaXDuI5la8z3pjLQAT3NGrxvk1QxetNulHbVF0/contexts/google_assistant_input_type_voice"
			}
		],
		"intent": {
			"name": "projects/my-project-ksy/agent/intents/0fcf79b8-1a6b-4501-98a9-b5486bf15bb5",
			"displayName": "Default Fallback Intent",
			"isFallback": true
		},
		"intentDetectionConfidence": 1,
		"languageCode": "en"
	},
	"originalDetectIntentRequest": {
		"source": "google",
		"version": "2",
		"payload": {
			"user": {
				"locale": "en-GB",
				"lastSeen": "2019-10-28T09:59:11Z",
				"userStorage": "{\"userId\":\"d29d842a-5d03-4a9a-b2da-0376d2820f2f\"}",
				"userVerificationStatus": "VERIFIED"
			},
			"conversation": {
				"conversationId": "ABwppHH9bqu3KYaf59z6DpqiTXpSuAhPQfSYuHsQ8OFOI_Hi1DhWT7D-fsmukn8eyhaXDuI5la8z3pjLQAT3NGrxvk1QxetNulHbVF0",
				"type": "ACTIVE",
				"conversationToken": "[]"
			},
			"inputs": [
				{
					"intent": "actions.intent.TEXT",
					"rawInputs": [
						{
							"inputType": "VOICE"
						}
					],
					"arguments": [
						{
							"name": "text"
						}
					]
				}
			],
			"surface": {
				"capabilities": [
					{
						"name": "actions.capability.MEDIA_RESPONSE_AUDIO"
					},
					{
						"name": "actions.capability.ACCOUNT_LINKING"
					},
					{
						"name": "actions.capability.SCREEN_OUTPUT"
					},
					{
						"name": "actions.capability.AUDIO_OUTPUT"
					}
				]
			},
			"isInSandbox": true,
			"availableSurfaces": [
				{
					"capabilities": [
						{
							"name": "actions.capability.SCREEN_OUTPUT"
						},
						{
							"name": "actions.capability.WEB_BROWSER"
						},
						{
							"name": "actions.capability.AUDIO_OUTPUT"
						}
					]
				}
			]
		}
	},
	"session": "projects/my-project-ksy/agent/sessions/ABwppHH9bqu3KYaf59z6DpqiTXpSuAhPQfSYuHsQ8OFOI_Hi1DhWT7D-fsmukn8eyhaXDuI5la8z3pjLQAT3NGrxvk1QxetNulHbVF0"
}
`

### Error log
```
If you have an error log, please paste it here.
```

## Your Environment
<!--- Include as many relevant details about the environment where the bug was discovered -->
* Jovo Framework version used: 2.2.19
* Operating System: macOS 10.14.4
* Running locally using Jovo run - but also same issue when running on Lambda 
## I'm submitting a...
<!-- Put an `x` in all the boxes that apply -->
- [ ] Bug report
- [x] Feature request
- [ ] Documentation issue or request
- [ ] Other... Please describe:

## Expected Behavior
<!--- Feature request? Tell us how it should work -->
[Mycroft](https://mycroft.ai) is the only open-source voice assistant there is. Its user base is relatively small, but it's basically the Linux of voice assistants. I'd like to target it, as a fan of open platforms, but I'd like to target the commonly used platforms as well.

Would you consider adding support for Mycroft as a third platform?
## I'm submitting a...
- [X] Bug report

## Expected Behavior
Builds should finish in ~1s without erroring/timing out

## Current Behavior
Somewhat randomly (though often in groups) error spikes will happen, accompanied by time outs.

Average error rate seems to be ~2-3% per day according to Alexa Dev Console session metrics (although it has gone above it by a lot for a few days, higher lambda timeouts seem to help a bit)

## What I've Tried
I narrowed down what external services are used in my skill to: external assets, dynamoDB, analytics.

Based on logs, it does seem to save (`Saved user: [id]`), analytics return, it sends a response (`Response JSON (jovo-framework)` / `Response  (framework)`) and ends with `-- middleware 'platform.output' done` - however at this point it eventually times out (based on how long my lambda timeout is, currently 8s).

Our working guess is that despite a response being sent the lambda never closes, which eventually sends and `END RequestId: [id]`, causing an error despite everything going alright. However, nothing other than the lambda seem to be an issue when tested (everything seems to return, DB metrics look fine, mp3 files are only used on device side).

Small side note is that we have two jovo skills, and interestingly the large error / duration spikes happen at almost exactly the same time / amount (looking at cloudwatch metrics). Another skill the client has also uses Jovo and while it does have timeouts, they don't mirror the results like my two skills do. Note: My two skills use separate databases / lambdas, but do use the same server for assets (though nothing fetched server side) and same analytics platform (though again it always returns way before timeout); nothing else should be shared.

## Logs
Logs look something like this (with DEBUG level on):
```
@timestamp,@message
(NOTE: the line below is a log I have at the top of app.js, right before 'new App()')
18:00:35.004,"2019-08-21T18:00:35.003Z	[id]	process.env.DEBUG = false, global.gAppMode = production
18:00:34.421,"END RequestId: [id]
18:00:34.421,"REPORT RequestId: [id]	Duration: 8005.38 ms	Billed Duration: 8000 ms 	Memory Size: 128 MB	Max Memory Used: 53 MB	
18:00:34.421,"2019-08-21T18:00:34.420Z [id] Task timed out after 8.01 seconds

18:00:27.724,"[id]	-- middleware 'platform.output' done (38 ms)
18:00:27.724,"[id]	
18:00:27.724,"[id]	Response  (framework) -------------------------------------------------
18:00:27.724,"[id]	
18:00:27.724,"[id]	
18:00:27.724,"[id]	  -- Response JSON (jovo-framework) ----------------------------------------
18:00:27.724,"[id]	
18:00:27.724,"[id]	{
18:00:27.724,"[id]		""version"": ""1.0"",
18:00:27.724,"[id]		""response"": {
18:00:27.724,"[id]			""shouldEndSession"": false,
18:00:27.724,"[id]			""outputSpeech"": { ... },
18:00:27.724,"[id]			""reprompt"": { ... },
18:00:27.724,"[id]			""directives"": [ ... ],
18:00:27.724,"[id]			""card"": { ... }
18:00:27.724,"[id]		},
18:00:27.724,"[id]		""sessionAttributes"": {
18:00:27.724,"[id]			""_JOVO_STATE_"": ""PlayerCountSelectState""
18:00:27.724,"[id]		}
18:00:27.724,"[id]	}
18:00:27.724,"[id]	-- middleware 'response' done (1 ms)
18:00:27.647,"[id]	 this.$user.$metaData
18:00:27.647,"[id]	-- middleware 'user.save' done (260 ms)
18:00:27.647,"[id]	
18:00:27.647,"[id]	Output object: this.$output (framework) -------------------------------
18:00:27.647,"[id]	
18:00:27.647,"[id]	{
18:00:27.647,"[id]		""Alexa"": {
18:00:27.647,"[id]			""DisplayTemplate"": { ... },
18:00:27.647,"[id]			""StandardCard"": { ... },
18:00:27.647,"[id]			""Directives"": [ ... ]
18:00:27.647,"[id]		},
18:00:27.647,"[id]		""ask"": { ... }
18:00:27.647,"[id]	}
18:00:27.646,"[id]	
18:00:27.646,"[id]	Jovo user: (save)  (framework) ----------------------------------------
18:00:27.646,"[id]	
18:00:27.646,"[id]	 Saved user: [account]
18:00:27.646,"[id]	 this.$user.$context
18:00:27.646,"[id]	{
18:00:27.646,"[id]		""prev"": [ ... ]
18:00:27.646,"[id]	}
18:00:27.646,"[id]	 this.$user.$data
18:00:27.646,"[id]	{ ... }
18:00:27.387,"[id]	
18:00:27.387,"[id]	  -- ON_REQUEST ------------------------------------------------------------
18:00:27.387,"[id]	
18:00:27.387,"[id]	 ON_REQUEST (0 ms)
18:00:27.387,"[id]	
18:00:27.387,"[id]	Handle  (framework) ---------------------------------------------------
18:00:27.387,"[id]	
18:00:27.387,"[id]	
18:00:27.387,"[id]	-- middleware 'handler' done (160 ms)
18:00:27.386,"2019-08-21T18:00:27.385Z	[id]	startState: PlayerCountSelectState
18:00:27.386,"[id]	 toIntent: Start
18:00:27.386,"[id]	 NEW_SESSION (159 ms)
18:00:27.328,"2019-08-21T18:00:27.327Z	[id]	startState: StartGame
18:00:27.328,"[id]	 toIntent: Start
18:00:27.268,"[id]	 toIntent: Start
18:00:27.228,"2019-08-21T18:00:27.228Z	[id]	startState: Greeting
18:00:27.227,"[id]	{
18:00:27.227,"[id]		""type"": ""LAUNCH"",
18:00:27.227,"[id]		""path"": ""LAUNCH""
18:00:27.227,"[id]	}
18:00:27.227,"[id]	-- middleware 'router' done (2 ms)
18:00:27.227,"[id]	
18:00:27.227,"[id]	Jovo handler  (framework) ---------------------------------------------
18:00:27.227,"[id]	
18:00:27.227,"[id]	
18:00:27.227,"[id]	  -- NEW_SESSION -----------------------------------------------------------
18:00:27.227,"[id]	
18:00:27.226,"[id]	
18:00:27.226,"[id]	Jovo router  (framework) ----------------------------------------------
18:00:27.226,"[id]	
18:00:27.226,"[id]	Route object:
18:00:27.225,"[id]	this.$user.new = false
18:00:27.225,"[id]	{
18:00:27.225,"[id]		""prev"": [ ... ]
18:00:27.225,"[id]	}
18:00:27.225,"[id]	this.$user.$data
18:00:27.225,"[id]	{ ... }
18:00:27.225,"[id]	this.$user.$metaData
18:00:27.225,"[id]	-- middleware 'user.load' done (640 ms)
18:00:27.225,"[id]	-- middleware 'before.router' done (0 ms)
18:00:27.168,"[id]	
18:00:27.168,"[id]	Jovo user (load) (framework) ------------------------------------------
18:00:27.168,"[id]	
18:00:27.168,"[id]	this.$user.getId(): [id]
18:00:26.588,"[id]	-- middleware 'platform.nlu' done (37 ms)
18:00:26.588,"[id]	
18:00:26.588,"[id]	After nlu  (framework) ------------------------------------------------
18:00:26.588,"[id]	
18:00:26.588,"[id]	this.$nlu : undefined
18:00:26.588,"[id]	this.$inputs : {}
18:00:26.548,"[id]	-- middleware 'after.platform.init' done (1 ms)
18:00:26.548,"[id]	-- middleware 'platform.init' done (3 ms)
18:00:26.548,"[id]	
18:00:26.548,"[id]	After init  (framework) -----------------------------------------------
18:00:26.548,"[id]	
18:00:26.548,"[id]	this.$alexaSkill initialized
18:00:26.548,"[id]	this.$type: {""type"":""LAUNCH""}
18:00:26.548,"[id]	this.$session.$data : {}
18:00:26.545,"[id]	
18:00:26.545,"[id]	  -- Request JSON (jovo-framework) -----------------------------------------
18:00:26.545,"[id]	
18:00:26.545,"[id]	{
18:00:26.545,"[id]		""version"": ""1.0"",
18:00:26.545,"[id]		""session"": { ... },
18:00:26.545,"[id]		""context"": { ... },
18:00:26.545,"[id]		""request"": { ... }
18:00:26.545,"[id]	}
18:00:26.545,"[id]	-- middleware 'request' done (57 ms)
18:00:26.488,"[id]	-- middleware 'setup' done (69 ms)
18:00:26.424,"[id]	Adding resources to $cms object:
18:00:26.424,"[id]	{}
18:00:26.418,"[id]	
18:00:26.418,"[id]	Start request (framework) ---------------------------------------------
18:00:26.418,"[id]	
18:00:26.415,"START RequestId: [id] Version: $LATEST
```

==Conclusion==
I'm not sure if I am perhaps missing something obvious from the logs or if it's some internal Jovo thing I may not have accounted for, but after working with amazon a bit on trying to narrow down the issue we decided it would be best to reach out to you. Any help would of course be appreciated.

## Your Environment
    "jovo-db-dynamodb": "^2.2.0",
    "jovo-framework": "^2.1.1",
    "jovo-platform-alexa": "^2.1.2",
    "jovo-plugin-debugger": "^2.1.1",
* Operating System: Local: mac. Server: AWS Lambda
## I'm submitting a...
<!-- Put an `x` in all the boxes that apply -->
- [x] Bug report
- [ ] Feature request
- [ ] Documentation issue or request
- [ ] Other... Please describe:

## Expected Behavior
Botanalytics should work for both platforms.

## Current Behavior
Botanalytics refuses to log requests for the google assistant.

### Error log

```
[2019-08-28 14:14:33] [LOG]    [Botanalytics] Error: Failed to log message Error: The request was unacceptable. This is often due to missing a required parameter. ERROR:[object Object]
    at Object.checkResponse (/root/projet/jovo/node_modules/botanalytics/util.js:41:28)
    at Request.request [as _callback] (/root/projet/jovo/node_modules/botanalytics/platforms/google.js:134:35)
    at Request.self.callback (/root/projet/jovo/node_modules/request/request.js:185:22)
    at emitTwo (events.js:126:13)
    at Request.emit (events.js:214:7)
    at Request.<anonymous> (/root/projet/jovo/node_modules/request/request.js:1161:10)
    at emitOne (events.js:116:13)
    at Request.emit (events.js:211:7)
    at IncomingMessage.<anonymous> (/root/projet/jovo/node_modules/request/request.js:1083:12)
    at Object.onceWrapper (events.js:313:30)
```

Looking more closely at the response object in `node_modules/botanalytics`
```
[ '\'userId\' field(s) is/are required inside \'user\' parameter in json payload' ]
```

request object in `node_modules/botanalytics`
```
[nodejs] {url: '/messages/google-assistant/dialogflow/',
[nodejs]   method: 'POST',
[nodejs]   json: true,
[nodejs]   body: 
[nodejs]    { request: 
[nodejs]       { responseId: '2b347f59-c7ad-4b49-978e-12303ddfa6fb-ee1dc704',
[nodejs]         queryResult: 
[nodejs]          { queryText: 'GOOGLE_ASSISTANT_WELCOME',
[nodejs]            parameters: {},
[nodejs]            allRequiredParamsPresent: true,
[nodejs]            outputContexts: 
[nodejs]             [ {...}, {...}, ... ],
[nodejs]            intent: 
[nodejs]             { name: 'projects/.../agent/intents/4922b44d-6665-457d-8668-49cb2b76e6ec',
[nodejs]               displayName: 'Default Welcome Intent' },
[nodejs]            intentDetectionConfidence: 1,
[nodejs]            languageCode: 'fr' },
[nodejs]         originalDetectIntentRequest: 
[nodejs]          { source: 'google',
[nodejs]            version: '2',
[nodejs]            payload: 
[nodejs]             GoogleActionRequest {
[nodejs]               user: 
[nodejs]                { locale: 'fr-FR',
[nodejs]                  lastSeen: '2019-08-28T10:07:13Z',
[nodejs]                  idToken: '...',
[nodejs]                  userVerificationStatus: 'VERIFIED' },
[nodejs]               conversation: 
[nodejs]                { conversationId: 'ABwppHGgslF-cQwW55PSuOqmHaUeg3BpErPRFesFsiTIYSKFuSrYANCunxLUKfC_WQd1i2QaSsAfEDwkaAg',
[nodejs]                  type: 'NEW' },
[nodejs]               inputs: 
[nodejs]                [ { intent: 'actions.intent.MAIN',
[nodejs]                    rawInputs: 
[nodejs]                     [ { inputType: 'KEYBOARD',
[nodejs]                         query: 'Parler avec mon application test' } ] } ],
[nodejs]               surface: 
[nodejs]                { capabilities: 
[nodejs]                   [ { name: 'actions.capability.WEB_BROWSER' },
[nodejs]                     { name: 'actions.capability.AUDIO_OUTPUT' },
[nodejs]                     { name: 'actions.capability.ACCOUNT_LINKING' },
[nodejs]                     { name: 'actions.capability.MEDIA_RESPONSE_AUDIO' },
[nodejs]                     { name: 'actions.capability.SCREEN_OUTPUT' } ] },
[nodejs]               isInSandbox: true,
[nodejs]               requestType: 'SIMULATOR' } },
[nodejs]         session: 'projects/.../agent/sessions/ABwppHGgslF-cQwW55PSuOqmHaUeg3BpErPRFesFsiTIYSKFuSrYANCunxLUKfC_WQd1i2QaSsAfEDwkaAg' },
[nodejs]      response: 
[nodejs]       DialogflowResponse {
[nodejs]         fulfillmentText: '...',
[nodejs]         outputContexts: [],
[nodejs]         payload: 
[nodejs]          { google: 
[nodejs]             GoogleActionResponse {
[nodejs]               expectUserResponse: true,
[nodejs]               richResponse: 
[nodejs]                { items: 
[nodejs]                   [ { simpleResponse: 
[nodejs]                        { ssml: '...'} } ],
[nodejs]                  suggestions: 
[nodejs]                   [{...}, {...}] },
[nodejs]               noInputPrompts: 
[nodejs]                [ { ssml: '...'} ],
[nodejs]               userStorage: '{"userId":"..."}' } } } } }
```

## Your Environment
* Operating System: Ubuntu 18.04
* Typescript 3.4.5
```
"jovo-analytics-botanalytics": "^2.2.10",
"jovo-cms-googlesheets": "^2.2.12",
"jovo-framework": "^2.2.13",
"jovo-platform-alexa": "^2.2.15",
"jovo-platform-dialogflow": "^2.2.11",
"jovo-platform-googleassistant": "^2.2.13",
```