It is import to 

> put Notification component into your Layout component

, otherwise react-admin  will not deal OPTIMISTIC logic, it will block in START_OPTIMISTIC_MODE redux status, so following actions will be lost.

```
<Layout>
    .....
    <Notification />
<Layout>
```

**Is your feature request related to a problem? Please describe.**
It is very hard to write proper browser tests for react admin based applications since most of the elements have no proper selectors.

**Describe the solution you'd like**
A solution would be to have some attribute like data-js or data-test on the elements that atleast give some context. For example the resource menu items could have ``data-js=resource_menu_item:{resource_id}`` and buttons like the save form button to have `data-js=resource_submit_button:{resource_id}`.

Fix #4313

The `useGetMatchingReference` hook has an unused property: `filter`. So I just remove it.

## Todo

- [x] Remove the unused prop
- [x] Fix tests if broken


I just stumble across the following in current master branch:

`useGetMatchingReferenceSelector` `filter` prop is defined but not being used inside the hook.

I believe it could affect the initial value of `useReferenceInputController` `filter` prop.

```js

const useGetMatchingReferenceSelector = ({
    referenceSource,
    filter, //  <-- Defined, but not used 
    reference,
    resource,
    source,
    id,
}) => {
    const getMatchingReferences = useCallback(
        state => {
            const referenceResource = getReferenceResource(state, {
                reference,
            });
            const possibleValues = getPossibleReferenceValues(state, {
                referenceSource,
                resource,
                source,
            });

            return getPossibleReferences(referenceResource, possibleValues, [
                id,
            ]);
        },
        [referenceSource, reference, resource, source, id]
    );

    return useSelector(getMatchingReferences);
};


<!-- Please do not submit support requests or "How to" questions here. For that, go to [Stack Overflow](http://stackoverflow.com/questions/tagged/react-admin). -->

**What you were expecting:**
<!-- Describe what the behavior would be without the bug. -->
When  submit  form to update data, which will use "useMutation" , then through DataProvider.
Data in "resources" key of redux can be changed successfully. But it do not update data inside "customQuery" .

**What happened instead:**
<!-- Describe how the bug manifests. -->
Should synchronize data inside  two key or reload "Custom Query".

**Steps to reproduce:**
<!--  Please explain the steps required to duplicate the issue, especially if you are able to provide a sample application. -->
Trace in  redux devtools.

**Environment**

* React-admin version: V3
* Last version that did not exhibit the issue (if applicable):
* React version:
* Browser:
* Stack trace (in case of a JS error):

Greetings all. 
First of all, I wanted to thank you for react-admin.
About problem. I faced with moment when filter disappears (from Filter panel) after clearing the value after returning to the page/refresh page. 

**What you were expecting:**
**displayedFilters** will contain information about current filter.

**What happened instead:**
**displayedFilters** is empty.

**Steps to reproduce:**
How it looks you can check in [RA example](https://marmelab.com/react-admin-demo/#/)
1. Open **Catalog** -> **Posters**
2. **Add filters** -> **Max width**
3. Set some value (e.g. 1000), url will looks like [this](https://marmelab.com/react-admin-demo/#/products?filter=%7B%22width_lte%22%3A1000%7D&order=ASC&page=1&perPage=20&sort=id)
4. Refresh page/or open any tile from grid and press back button
5. Select your value from step 3 and remove (not cross button)
6. Filter disappears 

**Related code:**
In my project I have Author filter. When I add this filter from list (Add filter) I got this
```
displayedFilters: {authorId: true}
filterValues: {}
```
It's correct. I select some Author and now props look like
```
displayedFilters: {authorId: true}
filterValues: {authorId: Array(1)}
```
It looks correct too.
But if I refresh page (or open view page and return back) I have this props
```
displayedFilters: {}
filterValues: {authorId: Array(1)}
```
And because of **displayedFilters** is empty when I remove value filter is disappears.
Because of this, the user has trouble when they just want to delete the current value and enter another to select a different author.

**Environment**

* React-admin version: 3.0.3 (also tested on 3.1.2)
* React version: 16.11.0
* Browser: Chrome (Version 79.0.3945.117), Safari (13.0.4)


**What you were expecting:**
I was expecting to see a login page or a the last page I had signed into before upgrading from 3.1.1 to 3.1.2

**What happened instead:**
The localhost launches a browser window and just iterates through all the routes. In firefox it asks to stop or wait. In chorme it just never ends

**Steps to reproduce:**
Upgrade from 3.1.1 to 3.1.2. I can get you access to my private repo - but not sure what else I can do. 

Cant create a sandbox. One of the things I found was the issue showed up on staging after I did npm install --production. Once I did that on my local machine it started doing the same thing. But after that when I deleted my node_module folder the issue was still there. The issue disappeared when I downgraded from 3.1.2 to 3.1.1. 


**Environment**

* React-admin version: 3.1.2
* Last version that did not exhibit the issue (if applicable):3.1.1
* React version:16.12.0
* Browser:Firefox/Chrome
* Stack trace (in case of a JS error):

This could be a good start to fix [Object object] issue on SimpleFormIterator. I was able to reproduce and fix the issue if you have a plain array (such as [''tag1, 'tag2', 'tag3'].

I didn't edited docs, but the idea is if you don't specify a `source` param in the TextInput and it's just 1 input > it's a plain string array otherwise it's an object (you could add more than just input or just name property as you wish on `source`)

#2489
To solve it I use the `loader-container` css class from the demo.
```jsx
<Admin
     loading={() => <Loading className="loader-container"/>}
     ...
>
```
Sandbox: https://codesandbox.io/s/mystifying-dirac-lo5m1
Note: You have to enlarge the sandbox frame in order to see it.

![Screenshot of mystifying-dirac-lo5m1 - CodeSandbox](https://user-images.githubusercontent.com/8268610/72530915-26a2d980-384f-11ea-9a75-3bee02899666.jpg)

Using version 3.1.2.