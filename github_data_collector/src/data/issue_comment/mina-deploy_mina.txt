Hi, I ran into an error without any detail info when running `mina deploy`:

```
-----> Precompiling asset files
 !     ERROR: Deploy failed.
-----> Cleaning up build
       Unlinking current
       OK
       Connection to myserver.com closed.

 !     Run Error
```

My `config/deploy.rb` content:

```ruby
# frozen_string_literal: true

require 'mina/rails'
require 'mina/git'
require 'mina/rvm'    # for rvm support. (https://rvm.io)

set :application_name, 'myapp'
set :domain, 'mydomain.com
set :deploy_to, '/var/www/myapp'
set :repository, 'git@myrepo.git'
set :branch, 'master'

# Shared dirs and files will be symlinked into the app-folder by the 'deploy:link_shared_paths' step.
# Some plugins already add folders to shared_dirs like `mina/rails` add `public/assets`, `vendor/bundle` and many more
# run `mina -d` to see all folders and files already included in `shared_dirs` and `shared_files`
# set :shared_dirs, fetch(:shared_dirs, []).push('public/assets')
 set :shared_files, fetch(:shared_files, []).push('config/database.yml', 'config/master.key')

# This task is the environment that is loaded for all remote run commands, such as
# `mina deploy` or `mina rake`.
task :remote_environment do
  # For those using RVM, use this to load an RVM version@gemset.
   invoke :'rvm:use', 'ruby-2.7.0'
end

# Put any custom commands you need to run at setup
# All paths in `shared_dirs` and `shared_paths` will be created on their own.
task :setup do
  # command %{rbenv install 2.3.0 --skip-existing}
end

desc 'Deploys the current version to the server.'
task :deploy do
  # uncomment this line to make sure you pushed your local branch to the remote origin
  invoke :'git:ensure_pushed'
  deploy do
    # Put things that will set up an empty directory into a fully set-up
    # instance of your project.
    invoke :'git:clone'
    invoke :'deploy:link_shared_paths'
    invoke :'bundle:install'
    invoke :'rails:db_migrate'
    invoke :'rails:assets_precompile'
    invoke :'deploy:cleanup'

    on :launch do
      in_path(fetch(:current_path)) do
        command %(mkdir -p tmp/)
        command %(touch tmp/restart.txt)
      end
    end
  end

end
```
The previous steps(bundle installing, db migration) seem to be working fine.

My env:
Ruby 2.7.0
Rails 6.0.2.1
Ubuntu 18.04

Any idea why and how to fix it?
```
[DEPRECATED] The `--deployment` flag is deprecated because it relies on being remembered across bundler invocations, which bundler will no longer do in future versions. Instead please use `bundle config set deployment 'true'`, and stop using this flag
[DEPRECATED] The `--path` flag is deprecated because it relies on being remembered across bundler invocations, which bundler will no longer do in future versions. Instead please use `bundle config set path 'vendor/bundle'`, and stop using this flag
[DEPRECATED] The `--without` flag is deprecated because it relies on being remembered across bundler invocations, which bundler will no longer do in future versions. Instead please use `bundle config set without 'development test'`, and stop using this flag
```
In Rails 6, Webpacker is the default JavaScript compiler. 
This PR adds app/javascript/ to asset_dir & public/packs/ to complied_asset_path as it is the default directory used by Webpacker.
Mina throws exception during deploy while commit owner's name contains special characters (in this case `Ä…` character). When i changed my git name to another without special characters, and then pushed commit with deploy it works fine.


Error:
```
/builds/project/vendor/ruby/2.6.0/gems/mina-1.2.3/lib/mina/helpers/output.rb:6:in `===': invalid byte sequence in US-ASCII (ArgumentError)
from /builds/project/vendor/ruby/2.6.0/gems/mina-1.2.3/lib/mina/helpers/output.rb:6:in `print_line'
from /builds/project/vendor/ruby/2.6.0/gems/mina-1.2.3/lib/mina/runner/pretty.rb:21:in `block (2 levels) in run'

#<Thread:0x0000558153915940@/builds/project/vendor/ruby/2.6.0/gems/mina-1.2.3/lib/mina/runner/pretty.rb:25 run> terminated with exception (report_on_exception is true):
/builds/project/vendor/ruby/2.6.0/gems/mina-1.2.3/lib/mina/runner/pretty.rb:26:in `gets': stream closed in another thread (IOError)
from /builds/project/vendor/ruby/2.6.0/gems/mina-1.2.3/lib/mina/runner/pretty.rb:26:in `block (2 levels) in run'
mina aborted!
ArgumentError: invalid byte sequence in US-ASCII
```
I wanted to ask if there is an existing code or plugin that allows one to log in to the server a deploy was done? We want to log our deploys just basic information such as when it happened. 
(Related to https://github.com/mina-deploy/mina/issues/651)

I'd like to execute some commands depending on whether a deployment is the first one or not.

In the following pseudo code, I'm using a hypothetical `first_deploy?` method:

```ruby
task :deploy do
  # uncomment this line to make sure you pushed your local branch to the remote origin
  invoke :'git:ensure_pushed'

  deploy do
    invoke :'git:clone'
    invoke :'deploy:link_shared_paths'
    invoke :'bundle:install'
    invoke :'rails:db_schema_load' if first_deploy?
    invoke :'rails:db_migrate'
    command %{#{fetch(:rails)} db:seed} if first_deploy?
    invoke :'rails:assets_precompile'
    invoke :'deploy:cleanup'

    on :launch do
      if first_deploy?
        invoke :'puma:start'
      else
        invoke :'puma:phased_restart'
      end
    end
  end
end
```

How can I achieve this?
Hello

I'm still unsure when to load my DB schema when setting up a new application using Mina.

I know about `invoke :'rails:db_schema_load'` in `deploy`, but I only need to run it the very first deploy. So why not move it to `setup`? Or at least only run it the very first time - because now I have to uncomment it manually after the first run, otherwise:

```
rake aborted!
       ActiveRecord::ProtectedEnvironmentError: You are attempting to run a destructive action against your 'production' database.
```

Thank you.
Hi - I have been stuck with an issue for months that I still could not resolve, so any help is much appreciated.  

Everytime I run 'mina deploy' I come across this error

```
-----> Symlinking shared paths
       Files /var/www/test/current/db/migrate/20170423140256_create_jobs.rb and ./db/migrate/20170423140256_create_jobs.rb differ
```

Because of this the deployment fails and is rolled back.

I've tried downloading this file from my git repository and comparing it to my local version of the file using diff, cmp and also hexdump.

They all report absolutely no differences, so I can't understand why mina says there is a difference?

Happy to share any other details/answer questions that could help resolve this.


Hi,
 I succesfully deployed my app using mina deploy. then I deleted my app folder  from the server . and again tried to deploy from start.  I am using mina 0.3.8 gem, After the mina setup. when I run mina deploy --verbose 
 I am getting 
           **(cd "/home/deploy/apps/myapp/scm" && git fetch "https://github.com/myname/myapp.git" "master:master" --force)
fatal: not a git repository (or any of the parent directories): .git**

desc "Deploys the current version to the server."
task :deploy => :environment do
  to :before_hook do
    # Put things to run locally before ssh
  end
  deploy do
    # Put things that will set up an empty directory into a fully set-up
    # instance of your project.
    invoke :'git:clone'
    invoke :'deploy:link_shared_paths'
    invoke :'bundle:install'
    invoke :'rails:db_migrate'
    invoke :'rails:assets_precompile'
    invoke :'deploy:cleanup'

    to :launch do
      # invoke :'unicorn:restart'
      queue "cd #{fetch(:deploy_to)}/current ; mkdir -p tmp ; touch tmp/restart.txt"
      # queue "mkdir -p #{deploy_to}/current/tmp2/"
      # queue "touch #{deploy_to}/current/tmp2/restart.txt"
    end
  end
end 


my setup 
**task :setup => :environment do
  queue %[mkdir -p "#{fetch(:deploy_to)}/shared/log"]
  queue %[chmod g+rx,u+rwx "#{fetch(:deploy_to)}/shared/log"]

  queue %[mkdir -p "#{fetch(:deploy_to)}/shared/config"]
  queue %[chmod g+rx,u+rwx "#{fetch(:deploy_to)}/shared/config"]

  queue %[mkdir -p "#{fetch(:deploy_to)}/shared/sockets"]
  queue %[chmod g+rx,u+rwx "#{fetch(:deploy_to)}/shared/sockets"]

  queue %[touch "#{fetch(:deploy_to)}/shared/config/database.yml"]
  queue  %[echo "-----> Be sure to edit 'shared/config/database.yml'."]

  queue %[touch "#{fetch(:deploy_to)}/shared/config/secrets.yml"]
  queue %[echo "-----> Be sure to edit 'shared/config/secrets.yml'."]

  queue %[touch "#{fetch(:deploy_to)}/shared/config/config.yml"]
  queue %[echo "-----> Be sure to edit 'shared/config/config.yml'."]

  queue %[touch "#{fetch(:deploy_to)}/.env"]
  queue %[echo "-----> Be sure to edit '.env"]

  
  queue %[mkdir -p "#{fetch(:deploy_to)}/shared/pids/"]
  queue %[chmod g+rx,u+rwx "#{fetch(:deploy_to)}/shared/pids"]
end**
I have a git repo, dir structure like this. These is a config to set sub dir "a_rails_app" as rails base for running rails commands ? This config seems like [capistrano](https://capistranorb.com/documentation/getting-started/configuration/) repo_tree.
```
/a_rails_app/
    - app/
    - config/
    - Gemfile
    - Gemfile.lock
/another_dir
```