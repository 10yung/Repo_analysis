**Describe the bug**
I have returned from holiday and I am no able longer to build the app on my device. Building on simulator works without a problem. The source code had no changes according to git. I tried setting up a brand new dummy project with the instructions provided here https://github.com/aws-amplify/aws-sdk-ios#cocoapods but the error persists.


**To Reproduce**
Steps to reproduce the behavior:
1. Follow the tutorial to install dependencies via CocoaPods https://github.com/aws-amplify/aws-sdk-ios#cocoapods
2. Connect your iPhone via USB
3. Build your project
4. See error (below)

**Which AWS service(s) are affected?**
It seems like all?

**Expected behavior**
I would expect the project to be buildable and the application to operate like it used to

**Environment(please complete the following information):**
 - Package versions:
```
Installing AWSAutoScaling (2.12.6)
Installing AWSCloudWatch (2.12.6)
Installing AWSCognito (2.12.6)
Installing AWSCognitoIdentityProvider (2.12.6)
Installing AWSCognitoIdentityProviderASF (1.0.1)
Installing AWSCore (2.12.6)
Installing AWSDynamoDB (2.12.6)
Installing AWSEC2 (2.12.6)
Installing AWSElasticLoadBalancing (2.12.6)
Installing AWSIoT (2.12.6)
Installing AWSKinesis (2.12.6)
Installing AWSLambda (2.12.6)
Installing AWSMachineLearning (2.12.6)
Installing AWSMobileAnalytics (2.12.6)
Installing AWSS3 (2.12.6)
Installing AWSSES (2.12.6)
Installing AWSSNS (2.12.6)
Installing AWSSQS (2.12.6)
Installing AWSSimpleDB (2.12.6)
```
 - Dependency Manager: CocoaPods
 - Swift Version : 5.1

**Device Information (please complete the following information):**
 - Device: iPhone X
 - iOS Version: 13.3.1
 - Specific to simulators: No - it works perfectly fine on simulators

**Additional context**
```
dyld: Library not loaded: @rpath/AWSAutoScaling.framework/AWSAutoScaling
  Referenced from: /private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/newtest
  Reason: no suitable image found.  Did find:
	/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling: code signature invalid for '/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling'

	/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling: stat() failed with errno=25
	/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling: code signature invalid for '/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling'

	/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling: stat() failed with errno=1
	/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling: code signature invalid for '/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling'

	/private/var/containers/Bundle/Application/B4B3310C-D4BF-4071-895B-8EC89CFC052D/newtest.app/Frameworks/AWSAutoScaling.framework/AWSAutoScaling: stat() failed with errno=1
(lldb) 
```

You can see this happens to AWSAutoScaling, but in my main application it happens on AWSAuthCore
Regarding:
https://github.com/aws-amplify/aws-sdk-ios/issues/2203

Server seems to be throwing an error when sending email_verified as part of the request.  In this context, I don't see how sending this field is relevant, so it seems to make sense to filter this field out.

By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.

*Issue #, if available:*
#1166 

*Description of changes:*
This change includes a sample P12 file, created from a certificate generated from the AWS IoT console. The certificate is only used for testing the import of data by the AWSIoT SDK, and is not tied to any resource in any AWS account. It should not be used to secure any other application, since the private key can be extracted (and in fact must be, as part of the included test suite) by using the passphrase hardcoded into the name of the file itself. :)

By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.

Addresses bug submitted here:
https://github.com/aws-amplify/aws-sdk-ios/issues/2220

By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.


**\*\*PLEASE ADVISE IF THIS IS THE WRONG PLACE TO POST THIS OR THE WRONG FORMAT, FIRST TIME POSTER\*\***

**Describe the bug**
This is the code I'm using to upload files to S3. After adding teh Cache-Control headers I started getting SignatureDoesNotMatch error. Not sure if I have to add the header somewhere else so that it will be included in the signature calculation.

```
AWSS3TransferUtility *transferUtility = [AWSS3TransferUtility defaultS3TransferUtility];

AWSS3TransferUtilityUploadExpression *expression = [AWSS3TransferUtilityUploadExpression new];
[expression setValue:@"public-read" forRequestHeader:@"x-amz-acl"];
[expression setValue:@"max-age=36000" forRequestHeader:@"Cache-Control"];
expression.progressBlock = ^(AWSS3TransferUtilityTask *task, NSProgress *progress) {
    dispatch_async(dispatch_get_main_queue(), ^{
        [upload save:^{
            upload.progress = progress.fractionCompleted;
            upload.status = [HARAssetUpload titleForStatus:HARAssetUploadStatusWorking];
        }];
    });
};

[transferUtility uploadFile:photoFileUrl bucket:bucketName key:fileName contentType:@"image/jpg" expression:expression completionHandler:^(AWSS3TransferUtilityUploadTask * _Nonnull task, NSError * _Nullable error)
 {
     if (error) {
         //Handle error
     } else {
         //Succesful upload
     }
     
     [[NSFileManager defaultManager] removeItemAtPath:filePath error:nil];
 }];
```

**To Reproduce**
Steps to reproduce the behavior:
1. Add `[expression setValue:@"max-age=36000" forRequestHeader:@"Cache-Control"];` to your expression before upload
2. Call uploadFile on the transfer utility
3. You should a 403 error saying SignatureDoesNotMatch

**Which AWS service(s) are affected?**
S3

**Expected behavior**
The Cache-Control headers should be applied to the uploaded file. If the signature needs to be recalculated based on these headers then the SDK should calculate this

**Screenshots**
N/A

**Environment(please complete the following information):**
 - SDK Version: 2.12.6
 - Dependency Manager: Cocoapods

**Device Information (please complete the following information):**
 - Device: iPhone Xr, Simulator
 - iOS Version: 13.3

**Additional context**
Here's the full text of the error returned from the resulting call to AWS
```
<Error>
	<Code>SignatureDoesNotMatch</Code>
	<Message>The request signature we calculated does not match the signature you provided. Check your key and signing method.</Message>
	<AWSAccessKeyId>ASIAYSPGTYDRNYCZ55F6</AWSAccessKeyId>
	<StringToSign>AWS4-HMAC-SHA256
		20200117T185202Z 20200117/us-east-1/s3/aws4_request
		7ebcb0a7a2b4301adbc6de9e93d028698640f15c6e6db972b7f78f2b4e9dcc39</StringToSign>
	<SignatureProvided>264ae750da52445fce9b30098d9d8f66c17067751236172542b22ea62b41d906</SignatureProvided>
	<StringToSignBytes>41 57 53 34 2d 48 4d 41 43 2d 53 48 41 32 35 36 0a 32 30 32 30 30 31 31 37 54 31 38 35 32 30 32 5a 0a 32 30 32 30 30 31 31 37 2f 75 73 2d 65 61 73 74 2d 31 2f 73 33 2f 61 77 73 34 5f 72 65 71 75 65 73 74 0a 37 65 62 63 62 30 61 37 61 32 62 34 33 30 31 61 64 62 63 36 64 65 39 65 39 33 64 30 32 38 36 39 38 36 34 30 66 31 35 63 36 65 36 64 62 39 37 32 62 37 66 37 38 66 32 62 34 65 39 64 63 63 33 39</StringToSignBytes>
	<CanonicalRequest>PUT
		/content.har.com/matrix_media_upload/77908169/F7B791C9-BB38-4B38-8F85-C5F349170C05.jpg X-Amz-Algorithm=AWS4-HMAC-SHA256&amp;X-Amz-Credential=ASIAYSPGTYDRNYCZ55F6%2F20200117%2Fus-east-1%2Fs3%2Faws4_request&amp;X-Amz-Date=20200117T185202Z&amp;X-Amz-Expires=2999&amp;X-Amz-Security-Token=IQoJb3JpZ2luX2VjECMaCXVzLWVhc3QtMSJIMEYCIQCJGofW2xdO4T1OV94iDsL8TgXqHm9rNWcAxQP0t7kZnAIhANgHSHEZXrra%2FK0grjzsWZkV2opJGCwuc%2FQhQlYjgOc%2FKtMFCKz%2F%2F%2F%2F%2F%2F%2F%2F%2F%2FwEQABoMNTg5NDMxMDI5OTg2IgzreZKhC40iCrMfJ44qpwXzsOvDatOxOMLW9i7THvo0%2FXdWbvzRYmzj5bsBM4ubRkxxm1Nb44vR7z8a%2B6xGEo4u5bhPYGePvwxsxOcAcgK%2FaROk4ol9Q7UPGEiGqCprTo5aqnkvY7YT8ohGNB60QqsBExQA57k2td3S1U%2FhSAj8klXauhEiS8eLrxHaJ9vp4%2Bd8qakXX4j3L3kXbqwIjX36s1eJDrMOLk091lGjVXPVNPU8Mb1Q4xeZ2UhIGE%2FYGim0WhmA4IFmNXnxkznoTPnz6k7mKUXLvC5pSlFlCVPviabr1cKhu%2BnRxcoOQSXDDd8DryBcs4o7cj8ACKinsl%2FXoQJ%2F%2FNgV%2FEjNARMiUZhH37tEr%2FtslOglenfF4MJWTiVXzzdHoOhpwSYP4%2FCo3KsTorwH5q7eH9bdTGyU5li8V9NaX%2FuD6SzGcJFHSfhkonq6IxkMaDhWlP63J15mGIEunLeus4qLC0IcUAgIVc5xeAOQESQtNt6D72FtlPLp32qAlp%2Fml7X0ZIwtbT70Mi4Um12vxHU%2BiLHApuQ%2BDbkMQwEvPGdqaLUfuy8u2mtjBvgDXCXVImHLQCdaP0s31neIE5xmUuzUSypshZaXKdfyT0WKM5b9HbyA8fGH71t%2BfY61nmn3%2B7Bvox3PO4LuRXA2rR4HRHYndehE3pXEoih%2B%2Br%2FvFcxA4AskDJkQK1zltebL2C11BqX3JtaOzcSQwyRMSQdYSyiM%2B0Zi1Z3lWoYReei98JOaF9uVDKVCV8jfnDwGq0Zzzy9BxvnVW9LCESqsxTvGiCWKWPtYr8bxc9oCW67zljA1x7YL6KVvtntJOtIWX62VDu55o4p19SWNeC8NC7dJ79KdYD7r224slZp%2BB9naOkThG%2Boo7GcbnWuohSHayx6VrN9MvZ5cZNNjPqJDjl8gOqFIMNGEiPEFOswCq2Ts%2FYHMUUJ6ertTZO3uWFPz4IoNnv7yVHnSMJN%2FliHge7XPP%2BgtmTjL2KvkPTtc4fYcPDB565WlMlQlhy450BQ3oDAPQKf0SQVrnnT6a8X1dHnFd%2BLcF3WnN6NUBaZGagdwkzVjtgUFXWYyCMromvtSZ5AVaCEnz8cZ0WDNkXlf20UEV3z76%2FJoRPl0aUOn48kOIo8l30SCPOlGjLUrJP0TBB0ICky3w8Ii0ie4hIlkGIKSwIc3IOIfg7P6Q%2FUVZlk%2FhHC5OxcKOz3hciJhooJCxuG8EG6XkMm42PpSBnFQ%2FgNCpOq54KGl0izR0hjTGztswo8jJ8QszsI2yKwqXLyeovbRu6MXJSgfOnLMeia3YZTFjfIwXqFaoRYTAMYDsOFHz%2F9oSsty1F7rZd0YWgc0oZc1iAKDX9YN9%2B%2FFL40aWpXz2Eb2oz4V2GU%3D&amp;X-Amz-SignedHeaders=cache-control%3Bcontent-type%3Bhost%3Bx-amz-acl
		cache-control:max-age=36000,no-cache content-type:image/jpg
		host:s3.amazonaws.com x-amz-acl:public-read
		cache-control;content-type;host;x-amz-acl UNSIGNED-PAYLOAD</CanonicalRequest>
	<CanonicalRequestBytes>50 55 54 0a 2f 63 6f 6e 74 65 6e 74 2e 68 61 72 2e 63 6f 6d 2f 6d 61 74 72 69 78 5f 6d 65 64 69 61 5f 75 70 6c 6f 61 64 2f 37 37 39 30 38 31 36 39 2f 46 37 42 37 39 31 43 39 2d 42 42 33 38 2d 34 42 33 38 2d 38 46 38 35 2d 43 35 46 33 34 39 31 37 30 43 30 35 2e 6a 70 67 0a 58 2d 41 6d 7a 2d 41 6c 67 6f 72 69 74 68 6d 3d 41 57 53 34 2d 48 4d 41 43 2d 53 48 41 32 35 36 26 58 2d 41 6d 7a 2d 43 72 65 64 65 6e 74 69 61 6c 3d 41 53 49 41 59 53 50 47 54 59 44 52 4e 59 43 5a 35 35 46 36 25 32 46 32 30 32 30 30 31 31 37 25 32 46 75 73 2d 65 61 73 74 2d 31 25 32 46 73 33 25 32 46 61 77 73 34 5f 72 65 71 75 65 73 74 26 58 2d 41 6d 7a 2d 44 61 74 65 3d 32 30 32 30 30 31 31 37 54 31 38 35 32 30 32 5a 26 58 2d 41 6d 7a 2d 45 78 70 69 72 65 73 3d 32 39 39 39 26 58 2d 41 6d 7a 2d 53 65 63 75 72 69 74 79 2d 54 6f 6b 65 6e 3d 49 51 6f 4a 62 33 4a 70 5a 32 6c 75 58 32 56 6a 45 43 4d 61 43 58 56 7a 4c 57 56 68 63 33 51 74 4d 53 4a 49 4d 45 59 43 49 51 43 4a 47 6f 66 57 32 78 64 4f 34 54 31 4f 56 39 34 69 44 73 4c 38 54 67 58 71 48 6d 39 72 4e 57 63 41 78 51 50 30 74 37 6b 5a 6e 41 49 68 41 4e 67 48 53 48 45 5a 58 72 72 61 25 32 46 4b 30 67 72 6a 7a 73 57 5a 6b 56 32 6f 70 4a 47 43 77 75 63 25 32 46 51 68 51 6c 59 6a 67 4f 63 25 32 46 4b 74 4d 46 43 4b 7a 25 32 46 25 32 46 25 32 46 25 32 46 25 32 46 25 32 46 25 32 46 25 32 46 25 32 46 25 32 46 77 45 51 41 42 6f 4d 4e 54 67 35 4e 44 4d 78 4d 44 49 35 4f 54 67 32 49 67 7a 72 65 5a 4b 68 43 34 30 69 43 72 4d 66 4a 34 34 71 70 77 58 7a 73 4f 76 44 61 74 4f 78 4f 4d 4c 57 39 69 37 54 48 76 6f 30 25 32 46 58 64 57 62 76 7a 52 59 6d 7a 6a 35 62 73 42 4d 34 75 62 52 6b 78 78 6d 31 4e 62 34 34 76 52 37 7a 38 61 25 32 42 36 78 47 45 6f 34 75 35 62 68 50 59 47 65 50 76 77 78 73 78 4f 63 41 63 67 4b 25 32 46 61 52 4f 6b 34 6f 6c 39 51 37 55 50 47 45 69 47 71 43 70 72 54 6f 35 61 71 6e 6b 76 59 37 59 54 38 6f 68 47 4e 42 36 30 51 71 73 42 45 78 51 41 35 37 6b 32 74 64 33 53 31 55 25 32 46 68 53 41 6a 38 6b 6c 58 61 75 68 45 69 53 38 65 4c 72 78 48 61 4a 39 76 70 34 25 32 42 64 38 71 61 6b 58 58 34 6a 33 4c 33 6b 58 62 71 77 49 6a 58 33 36 73 31 65 4a 44 72 4d 4f 4c 6b 30 39 31 6c 47 6a 56 58 50 56 4e 50 55 38 4d 62 31 51 34 78 65 5a 32 55 68 49 47 45 25 32 46 59 47 69 6d 30 57 68 6d 41 34 49 46 6d 4e 58 6e 78 6b 7a 6e 6f 54 50 6e 7a 36 6b 37 6d 4b 55 58 4c 76 43 35 70 53 6c 46 6c 43 56 50 76 69 61 62 72 31 63 4b 68 75 25 32 42 6e 52 78 63 6f 4f 51 53 58 44 44 64 38 44 72 79 42 63 73 34 6f 37 63 6a 38 41 43 4b 69 6e 73 6c 25 32 46 58 6f 51 4a 25 32 46 25 32 46 4e 67 56 25 32 46 45 6a 4e 41 52 4d 69 55 5a 68 48 33 37 74 45 72 25 32 46 74 73 6c 4f 67 6c 65 6e 66 46 34 4d 4a 57 54 69 56 58 7a 7a 64 48 6f 4f 68 70 77 53 59 50 34 25 32 46 43 6f 33 4b 73 54 6f 72 77 48 35 71 37 65 48 39 62 64 54 47 79 55 35 6c 69 38 56 39 4e 61 58 25 32 46 75 44 36 53 7a 47 63 4a 46 48 53 66 68 6b 6f 6e 71 36 49 78 6b 4d 61 44 68 57 6c 50 36 33 4a 31 35 6d 47 49 45 75 6e 4c 65 75 73 34 71 4c 43 30 49 63 55 41 67 49 56 63 35 78 65 41 4f 51 45 53 51 74 4e 74 36 44 37 32 46 74 6c 50 4c 70 33 32 71 41 6c 70 25 32 46 6d 6c 37 58 30 5a 49 77 74 62 54 37 30 4d 69 34 55 6d 31 32 76 78 48 55 25 32 42 69 4c 48 41 70 75 51 25 32 42 44 62 6b 4d 51 77 45 76 50 47 64 71 61 4c 55 66 75 79 38 75 32 6d 74 6a 42 76 67 44 58 43 58 56 49 6d 48 4c 51 43 64 61 50 30 73 33 31 6e 65 49 45 35 78 6d 55 75 7a 55 53 79 70 73 68 5a 61 58 4b 64 66 79 54 30 57 4b 4d 35 62 39 48 62 79 41 38 66 47 48 37 31 74 25 32 42 66 59 36 31 6e 6d 6e 33 25 32 42 37 42 76 6f 78 33 50 4f 34 4c 75 52 58 41 32 72 52 34 48 52 48 59 6e 64 65 68 45 33 70 58 45 6f 69 68 25 32 42 25 32 42 72 25 32 46 76 46 63 78 41 34 41 73 6b 44 4a 6b 51 4b 31 7a 6c 74 65 62 4c 32 43 31 31 42 71 58 33 4a 74 61 4f 7a 63 53 51 77 79 52 4d 53 51 64 59 53 79 69 4d 25 32 42 30 5a 69 31 5a 33 6c 57 6f 59 52 65 65 69 39 38 4a 4f 61 46 39 75 56 44 4b 56 43 56 38 6a 66 6e 44 77 47 71 30 5a 7a 7a 79 39 42 78 76 6e 56 57 39 4c 43 45 53 71 73 78 54 76 47 69 43 57 4b 57 50 74 59 72 38 62 78 63 39 6f 43 57 36 37 7a 6c 6a 41 31 78 37 59 4c 36 4b 56 76 74 6e 74 4a 4f 74 49 57 58 36 32 56 44 75 35 35 6f 34 70 31 39 53 57 4e 65 43 38 4e 43 37 64 4a 37 39 4b 64 59 44 37 72 32 32 34 73 6c 5a 70 25 32 42 42 39 6e 61 4f 6b 54 68 47 25 32 42 6f 6f 37 47 63 62 6e 57 75 6f 68 53 48 61 79 78 36 56 72 4e 39 4d 76 5a 35 63 5a 4e 4e 6a 50 71 4a 44 6a 6c 38 67 4f 71 46 49 4d 4e 47 45 69 50 45 46 4f 73 77 43 71 32 54 73 25 32 46 59 48 4d 55 55 4a 36 65 72 74 54 5a 4f 33 75 57 46 50 7a 34 49 6f 4e 6e 76 37 79 56 48 6e 53 4d 4a 4e 25 32 46 6c 69 48 67 65 37 58 50 50 25 32 42 67 74 6d 54 6a 4c 32 4b 76 6b 50 54 74 63 34 66 59 63 50 44 42 35 36 35 57 6c 4d 6c 51 6c 68 79 34 35 30 42 51 33 6f 44 41 50 51 4b 66 30 53 51 56 72 6e 6e 54 36 61 38 58 31 64 48 6e 46 64 25 32 42 4c 63 46 33 57 6e 4e 36 4e 55 42 61 5a 47 61 67 64 77 6b 7a 56 6a 74 67 55 46 58 57 59 79 43 4d 72 6f 6d 76 74 53 5a 35 41 56 61 43 45 6e 7a 38 63 5a 30 57 44 4e 6b 58 6c 66 32 30 55 45 56 33 7a 37 36 25 32 46 4a 6f 52 50 6c 30 61 55 4f 6e 34 38 6b 4f 49 6f 38 6c 33 30 53 43 50 4f 6c 47 6a 4c 55 72 4a 50 30 54 42 42 30 49 43 6b 79 33 77 38 49 69 30 69 65 34 68 49 6c 6b 47 49 4b 53 77 49 63 33 49 4f 49 66 67 37 50 36 51 25 32 46 55 56 5a 6c 6b 25 32 46 68 48 43 35 4f 78 63 4b 4f 7a 33 68 63 69 4a 68 6f 6f 4a 43 78 75 47 38 45 47 36 58 6b 4d 6d 34 32 50 70 53 42 6e 46 51 25 32 46 67 4e 43 70 4f 71 35 34 4b 47 6c 30 69 7a 52 30 68 6a 54 47 7a 74 73 77 6f 38 6a 4a 38 51 73 7a 73 49 32 79 4b 77 71 58 4c 79 65 6f 76 62 52 75 36 4d 58 4a 53 67 66 4f 6e 4c 4d 65 69 61 33 59 5a 54 46 6a 66 49 77 58 71 46 61 6f 52 59 54 41 4d 59 44 73 4f 46 48 7a 25 32 46 39 6f 53 73 74 79 31 46 37 72 5a 64 30 59 57 67 63 30 6f 5a 63 31 69 41 4b 44 58 39 59 4e 39 25 32 42 25 32 46 46 4c 34 30 61 57 70 58 7a 32 45 62 32 6f 7a 34 56 32 47 55 25 33 44 26 58 2d 41 6d 7a 2d 53 69 67 6e 65 64 48 65 61 64 65 72 73 3d 63 61 63 68 65 2d 63 6f 6e 74 72 6f 6c 25 33 42 63 6f 6e 74 65 6e 74 2d 74 79 70 65 25 33 42 68 6f 73 74 25 33 42 78 2d 61 6d 7a 2d 61 63 6c 0a 63 61 63 68 65 2d 63 6f 6e 74 72 6f 6c 3a 6d 61 78 2d 61 67 65 3d 33 36 30 30 30 2c 6e 6f 2d 63 61 63 68 65 0a 63 6f 6e 74 65 6e 74 2d 74 79 70 65 3a 69 6d 61 67 65 2f 6a 70 67 0a 68 6f 73 74 3a 73 33 2e 61 6d 61 7a 6f 6e 61 77 73 2e 63 6f 6d 0a 78 2d 61 6d 7a 2d 61 63 6c 3a 70 75 62 6c 69 63 2d 72 65 61 64 0a 0a 63 61 63 68 65 2d 63 6f 6e 74 72 6f 6c 3b 63 6f 6e 74 65 6e 74 2d 74 79 70 65 3b 68 6f 73 74 3b 78 2d 61 6d 7a 2d 61 63 6c 0a 55 4e 53 49 47 4e 45 44 2d 50 41 59 4c 4f 41 44</CanonicalRequestBytes>
	<RequestId>D95736AD8B9EDC9B</RequestId>
	<HostId>3VWuFJ2g4yzUnDJspjXWLbI2XTqPy6C8sdll1eTrBqgEFEMs/E4pBoL8alWrHEfCYZcOGhZU8A4=</HostId>
</Error>
```
*Issue #, if available:*
Projects that depend on our sdk are seeing a lot of compiler warning due to the missing nullability flags in the objc code base.

*Description of changes:*
I am adding flags based on the fact that the method that get invoked will not get crashed based on the flag.

*Testing*
Need to add few unit test around this


By submitting this pull request, I confirm that you can use, modify, copy, and redistribute this contribution, under the terms of your choice.

How could I upload image to s3 with public permissions?

This code didn't work.
```
        let expression = AWSS3TransferUtilityUploadExpression()
        expression.progressBlock = uploadProgressBlock
        expression.setValue("public-read", forRequestHeader: "x-amz-acl")

        let transferUtility = AWSS3TransferUtility.default()
        transferUtility.uploadData(data, bucket: bucketName, key: uploadKeyName, contentType: contentType, expression: expression, completionHandler: uploadCompletionHandler).continueWith { (task) -> AnyObject? in
            if let error = task.error {
            
            }
            if let _ = task.result {
                
            }
            return nil
        }

```
but this code worked
```
        let expression = AWSS3TransferUtilityUploadExpression()
        expression.progressBlock = uploadProgressBlock
//        expression.setValue("public-read", forRequestHeader: "x-amz-acl")

        let transferUtility = AWSS3TransferUtility.default()
        transferUtility.uploadData(data, bucket: bucketName, key: uploadKeyName, contentType: contentType, expression: expression, completionHandler: uploadCompletionHandler).continueWith { (task) -> AnyObject? in
            if let error = task.error {
                
            }
            if let _ = task.result {
                
            }
            return nil
        }

```
Why did I fail to add requestHeader?
Hi,
I'm currently using:
- AWS Cognito User Pools to log users
- AWS Cognito Federated to authorize user via IAM
- API Gateway to execute lambda
- Amplify on iOS app to collect all pieces.

Currently everything works perfect at first day:
- user can login
- make authenticated requested

After 3 days (not exactly this time, but it's to give some advice) the app stops to make auth request and every response in 403.

The strange thing is that I can perform a getUser correctly and get a new token using the getSession method.

I've tried everything but I cannot solve this problem.

Currently using 2.12.5 version.
The bug seems related to the fact that with social login (hostedUI) after some days the login is requested back.


**Describe the bug**
By calling the getUploadTasks method of a transfer utility after the app gets active to re associate the uncompleted tasks to a completion handler, this method returns even the completed tasks. I have confirmed it many times. This happens every time I put the app to the background and then open it in the foreground.

**To Reproduce**
Upload something, push the app to background and open the app again by calling getUploadTasks in applicationDidBecomeActive. All the tasks (even the finished) are returned.

**Which AWS service(s) are affected?**
AWSS3TransferUtility

**Expected behavior**
I would expect to get only the uncompleted tasks.

**Screenshots**
If applicable, add screenshots to help explain your problem.

**Environment(please complete the following information):**
 - SDK Version: 2.12.5
 - Dependency Manager: Cocoapods
 - Swift Version : 5.1.3

**Device Information (please complete the following information):**
 - Device: iPhone 6s, Simulator
 - iOS Version: iOS 13.3
 - Specific to simulators: -

**Additional context**

**Describe the bug**
New users created with the Cognito management console will not get their email addresses verified after a successful login with a temporary password. This will make it impossible for them to use forget password functionality in the future.

This issue surfaced when I was migrating my app from one aws org to another, and needed to create a new user pool. I would like to prepopulate my new user pool with my existing users/email addresses, prompting them with a temp password. However, after they successfully login and set a new password - they do not get their email address verified.

Image link: https://imgur.com/ouu8GCW

If i prepopulate them selecting verified email address - they get the issue here:
https://github.com/aws-amplify/aws-sdk-ios/issues/2203
"Cannot modify the non-mutable attribute email_verified"

Steps to reproduce the behavior:
Create a new user in cognito user pool without a verified email address. Attempt login through aws ios sdk with temporary password. Verify in user pool that email address is not verified.

**Which AWS service(s) are affected?**
Cognito

**Expected behavior**
After a user logins with a temporary password from their email, their email address should be confirmed in cognito.

**Screenshots**
Image link: https://imgur.com/ouu8GCW

**Environment(please complete the following information):**
PODS:
  - Alamofire (4.9.1)
  - AppleWelcomeScreen (1.0.2):
    - SnapKit
  - AWSAuthCore (2.12.5):
    - AWSCore (= 2.12.5)
  - AWSAuthUI (2.12.5):
    - AWSAuthCore (= 2.12.5)
    - AWSCore (= 2.12.5)
  - AWSCognitoIdentityProvider (2.12.5):
    - AWSCognitoIdentityProviderASF (= 1.0.1)
    - AWSCore (= 2.12.5)
  - AWSCognitoIdentityProviderASF (1.0.1)
  - AWSCore (2.12.5)
  - AWSMobileClient (2.12.5):
    - AWSAuthCore (= 2.12.5)
    - AWSCognitoIdentityProvider (= 2.12.5)
  - AWSS3 (2.12.5):
    - AWSCore (= 2.12.5)
  - AWSUserPoolsSignIn (2.12.5):
    - AWSAuthCore (= 2.12.5)
    - AWSCognitoIdentityProvider (= 2.12.5)
  - Cache (5.2.0)
  - ESTabBarController-swift (2.7)
  - Imaginary (4.2.0):
    - Cache (~> 5.0)
  - Kingfisher (5.12.0):
    - Kingfisher/Core (= 5.12.0)
  - Kingfisher/Core (5.12.0)
  - Lightbox (2.3.0):
    - Imaginary (~> 4.0)
  - lottie-ios (3.1.5)
  - Mapbox-iOS-SDK (5.6.1):
    - MapboxMobileEvents (= 0.10.2)
  - MapboxMobileEvents (0.10.2)
  - Realm (4.3.0):
    - Realm/Headers (= 4.3.0)
  - Realm/Headers (4.3.0)
  - RealmSwift (4.3.0):
    - Realm (= 4.3.0)
  - SnapKit (5.0.1)
  - WSTagsField (5.2.0)
 - Dependency Manager: Cocoapods
 - Swift Version : 4

**Device Information (please complete the following information):**
N/A

**Additional context**
Issue arising due to need to migrate user pools from one aws org to another.