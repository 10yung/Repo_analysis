I'm having problems installing `vagrant-digitalocean` on a fresh installation of Ubuntu 19.10.

The `vagrant` package which comes from `apt` is  2.2.3, which comes pre-packaged with `vagrant-libvirt` version 0.0.45.

```shell
$ vagrant --version    
Vagrant 2.2.3

$ vagrant plugin list
vagrant-libvirt (0.0.45, system)
```
When I try to install `vagrant-digitalocean` I get the following version conflict:

```shell
$ vagrant plugin install vagrant-digitalocean
Installing the 'vagrant-digitalocean' plugin. This can take a few minutes...
Bundler, the underlying system Vagrant uses to install plugins,
reported an error. The error is shown below. These errors are usually
caused by misconfigured plugin installations or transient network
issues. The error from Bundler is:

conflicting dependencies fog-core (~> 1.43.0) and fog-core (= 2.1.0)
  Activated fog-core-2.1.0
  which does not match conflicting dependency (~> 1.43.0)

  Conflicting dependency chains:
    fog-core (= 2.1.0), 2.1.0 activated

  versus:
    vagrant-libvirt (> 0), 0.0.41 activated, depends on
    fog-core (~> 1.43.0)
```

Is there a known workaround for this problem?
Automatically assign a floating IP after the droplet is created.

Fixes #278
It would be nice to be able to specify (along with image/size/region) a floating IP to use on the droplet. Being created.  When I setup a 'Vagrantfile' I typically make all these settings configurable via a file(along with a set of default settings).  I would like to allow the developer to specify a floating IP(which is already provisioned and not assigned on the DO account) to attach to the droplet after it's up and running.  

This is particularly useful for our application which requires a domain/subdomain be pointed to it to function properly (it's core to the functionality of the application) so that we don't have to change dns records and wait for TTL, or update /etc/host records each time we recreate the droplet.

If this is really easy to do and you can point me in the right direction, I can take a look at submitting a pull request, but my ruby experience it pretty rudimentary (I have only ever used it for editing "Vagrantfile"s)
After asking passphrase and creating a droplet Vagrant tries to copy synced folders, and it output is:

```Command: "rsync" "--verbose" "--archive" "-z" "--chmod=ugo=rwX" "--no-perms" "--no-owner" "--no-group" "--rsync-path" "sudo rsync" "-e" "ssh -p 22 -o LogLevel=FATAL   -o IdentitiesOnly=yes -o StrictHostKeyChecking=no -o 
UserKnownHostsFile=/dev/null -i 'C:/Users/Admin/.ssh/digocean'" "--exclude" ".vagrant/" "--exclude" ".gitignore" "--exclude" "vendor/" "--exclude" "README.md" "--exclude" ".git" "--exclude" "node_modules/" "/cygdrive/c/Coding/project/" "ubuntu@ip.ip.ip.ip:/var/www/project"
Error: This rsync lacks old-style --compress due to its external zlib.  Try -zz.
Continuing without compression.

Permission denied (publickey).
rsync: connection unexpectedly closed (0 bytes received so far) [sender]
rsync error: error in rsync protocol data stream (code 12) at io.c(226) [sender=3.1.2]
```

Vagrantfile:
```vmconfig.vm.provider :digital_ocean do |provider, override|
  override.ssh.private_key_path = '~/.ssh/digocean'
  override.vm.box = 'digital_ocean'
  override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"
  override.nfs.functional = false
  provider.token = '<TOKEN>'
  provider.ssh_key_name = 'mykey'
  provider.image = 'ubuntu-16-04-x64'
  provider.region = 'fra1'
  provider.size = '512mb'
end
vmconfig.vm.synced_folder "../sites/project", "/var/www/project",
                                  type: "rsync",
                                  rsync__args: ["--verbose", "--archive", "-z"],
                                  rsync__exclude: [".vagrant/", ".gitignore", "vendor/", "README.md", ".git", "node_modules/"]
vmconfig.vm.synced_folder ".", "/vagrant", disabled: true
vmconfig.vm.synced_folder "../provisioners/nginx", "/vagrant/provisioners/nginx"
```
Moreover, I can login in droplet with `vagrant ssh` successfully. I tried to remove first synced folder for running rsync without custom parameters, after that Vagrant shows error with 3rd synced folder in output. Also I tried connect with ssh keys and without -o key option, mentioned above `ssh -p 22 -i 'C:/Users/Admin/.ssh/digocean' vagrant2@ip.ip.ip.ip`, and it connected successfully. 

Host Windows 10 x64
### Vagrant version
Vagrant 2.0.1

### Host operating system
macOS 10.13.1 (17B48)

### Guest operating system
Ubuntu Server 17.10 x64 (DigitalOcean)

### Vagrantfile
https://gist.github.com/utkonos/a1d2f3d0a021580ef3e3636f40b09ea8

### Debug output
https://gist.github.com/utkonos/5d51009f034359cb3850c632f68b2d49

### Expected behavior
Normal vagrant up

### Actual behavior
Error: No host IP was given to the Vagrant core NFS helper.

### Steps to reproduce
Use the above Vagrantfile and run `vagrant up`
```
Vagrant.configure("2") do |config|
    config.vm.define "machine1" do |config|
        config.vm.provider :digital_ocean do |provider, override|
            override.ssh.private_key_path = File.expand_path("~/.ssh/id_rsa")
            override.vm.box = 'digital_ocean'
            override.vm.box_url = 'https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box'
            provider_token = ENV['DO_TOKEN']
            provider.image = 'ubuntu-17-04-x86'
            provider.region = 'nyc1'
            provider.size = '512mb'
        end
    end
end
```

This fails with 401 unauthorized. $DO_TOKEN is the same token I'm using for Terraform and tugboat. I can get a listing of all available images if I run:

`vagrant digitalocean-list images $DO_TOKEN`

```
$ vagrant version
Installed Version: 1.9.5
Latest Version: 1.9.5

You're running an up-to-date version of Vagrant!
```

```
$ vagrant plugin list
vagrant-cachier (1.2.1)
vagrant-digitalocean (0.9.1)
vagrant-hostsupdater (1.0.2)
vagrant-share (1.1.8, system)
vagrant-triggers (0.5.3)
vagrant-vmware-fusion (4.0.19)
```
Hi Guys,

I am using puphpet + vagrant-digitalocean & runing vagrant up does create the droplet at DO and get's the IP. But right after that it freezes.

Puphpet is saying, that it's not their issue but vagrant-digitalocean.

Can you please verify, if this is an known issue? and if yes, what is the solution?

Best Regards
Danyal

brew cask install vagrant --force
brew cask install virtualbox --force
vagrant box --insecure --box  centos/7
vagrant init centos/7
vagrant up

you get 

`E, [2016-08-26T17:13:53.138230 #17073] ERROR -- net.ssh.authentication.session[814f4e40]: all authorization methods failed (tried none, publickey)

DEBUG ssh: == Net-SSH connection debug-level log END ==
 INFO ssh: SSH not ready: #<Vagrant::Errors::SSHAuthenticationFailed: SSH authentication failed! This is typically caused by the public/private
keypair for the SSH user not being properly set on the guest VM. Please
verify that the guest VM is setup with the proper public key, and that
the private key path for Vagrant is setup properly as well.>
 INFO subprocess: Starting process: ["/usr/local/bin/VBoxManage", "showvminfo", "b3af67de-1ff8-41ea-9251-e3c28a3be008", "--machinereadable"]`

you also can not ssh -i .... into the box

but if you add

config.ssh.insert_key = false

it all works.

Vagrant up seems to hang after creating the user account. I can "vagrant ssh" into the box and a droplet is created correctly - but the original command never comes back from the "vagrant up" command.  Also if I include a provisioning script - it's never executed (I have to vagrant up --provision that).

I am running this from a Win7x64 box if that's an issue. 

```
C:\Dev\vagrant\xen-jekyll>vagrant up
Bringing machine 'default' up with 'digital_ocean' provider...
   ==> default: Using existing SSH key: Vagrant
   ==> default: Creating a new droplet...
   ==> default: Assigned IP address: <ip-address-censored>
   ==> default: Private IP address: <ip-address-censored>
   Text will be echoed in the clear. Please install the HighLine or Termios libraries to suppress
   Enter passphrase for <path-to-key-file-censored>
   ==> default: Creating user account: ubuntu...*
```

Vagrant file is below:

```
# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.

Vagrant.configure("2") do |config|

  config.vm.hostname = 'MSPLDTEST'
  # Alternatively, use provider.name below to set the Droplet name. config.vm.hostname takes precedence.

  config.vm.provider :digital_ocean do |provider, override|
    override.ssh.username = 'ubuntu'
    override.ssh.private_key_path = '~/.ssh/id_rsa_mindsplode'
    override.vm.box = 'digital_ocean'
    override.vm.box_url = "https://github.com/devopsgroup-io/vagrant-digitalocean/raw/master/box/digital_ocean.box"

    provider.token = '<token-censored>'
    provider.image = 'ubuntu-16-04-x64'
    provider.region = 'nyc2'
    provider.size = '1gb'
    provider.private_networking = true
    provider.ssh_key_name = Vagrant
    provider.setup = true
  end
end
```

TIA!

It will be nice to have support for the [Block Storage API ](https://developers.digitalocean.com/documentation/v2/#block-storage). Any chance to get one?
