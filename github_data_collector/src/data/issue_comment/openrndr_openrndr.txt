The big questions would be on how to use them. Perhaps through `shadeStyles`?
For some video files the audio plays with an audible stutter/jitter. I suspect this is caused by sound frames that are smaller than what OpenAL can conveniently chain.
Based on [GCN Execution Patterns in Full Screen Passes)(https://michaldrobot.com/2014/04/01/gcn-execution-patterns-in-full-screen-passes/) and [Cat like coding](https://catlikecoding.com/unity/tutorials/scriptable-render-pipeline/post-processing/)

@edwinRNDR I'm unsure if GPUs nowadays perform optimizations for this special case and if so, whether there is a need to provide this option to the Filter.
**Describe the bug**
The batch mode methods like `drawer.circles` and `drawer.rectangles` lock in on the style that was set before the method call. The individual classes should have a way to set them before rendering.

**To Reproduce**
```
drawer.circles((0 until 100).map{
drawer.fill = ColorRgba(Random.nextDouble(1.0), Random.nextDouble(1.0), Random.nextDouble(1.0)
Circle(Random.nextDouble(width), Random.nextDouble(height), 10.0)
})
```

**Expected behavior**
All circles should have a random colour

**Context:**
 - macOS 10.14.6
 - OpenRNDR 0.3.35
 - 1.8

Hello.

I'm interested in improving OpenRNDR's SVG support, with a personal end-goal being to be able to render SVG's exported from OpenStreetMap layers. As far as I can see, the current `SVGLoader` class supports only the 'tiny' base profile and so far not fully. How can I best help in increasing SVG support in line with any current goals or work on this? Failing any specific requirements, I'd like start improving just 'tiny' profile support.

Thanks!
http://www.hsluv.org/

> HSLuv is a human-friendly alternative to HSL. HSLuv extends CIELUV with a new saturation component that allows you to span all the available chroma as a neat percentage. 

From Slack, about HSLuv vs ColorLUVa:
> ColorLUVa is (CIE)Luv. HSLuv seems to be based on the cylindrical transformation of Luv, LCHuv. From a quick glance it is tries to rectify the LCHuv color space.

HSLuv Java implementation:
https://github.com/hsluv/hsluv-java/blob/master/src/main/java/org/hsluv/HUSLColorConverter.java