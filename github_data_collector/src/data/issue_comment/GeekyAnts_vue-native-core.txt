Hi, 

I've been trying to figure out how to access native android / objective-c api's in vue-native. 

Could someone point me to the correct place in the docs. 

Thanks
I'm looking to write a VueJS PWA with a NodeJS backend. I will have to convert the app into a native iOS one afterwards. Are there any tools to automate the conversion process? How do I go about it?

Thank you!
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/GeekyAnts/vue-native-core/network/alerts).

</details>
I got warnings like below, it looks like all components from react-native had been imported by default, so can I set that as empty or just `view` and `text`, and I will import the others when I need them.

Thanks.

![2019-11-14_231809](https://user-images.githubusercontent.com/668285/68870862-89380600-0736-11ea-9ace-fc9d32923512.png)

Tried to use vue-i18n with vue-native-core, and when attempting use with 

``` 
Vue.use(VueI18n);
```
I get this warning: [vue-i18n] vue-i18n (undefined) need to use Vue 2.0 or later (Vue: 0.1.4). Then when using $t() I get this error: [Vue warn]: Property or method "$t" is not defined on the instance but referenced during render. Make sure to declare reactive data properties in the data option.
**Description of the bug**
I want to use data provider pattern, but i got warnings like
`Warning: Each child in a list should have a unique "key" prop.%s%s See https://fb.me/react-warning-keys for more information.%s` when two components is inside default slot in provider component. Adding key property doesn't fix this. For this I don't use render method in data provider component and it looks like this
```html
<template>
    <view>
        <slot :data="data" :loading="loading" />
    </view>
</template>
```
```html
<provider :url="providerUrl">
    <template scope="{ data, loading }">
        <nb-text v-if="!loading">{{ data.name }}</nb-text>
        <nb-text v-if="!loading">{{ data.desc }}</nb-text>
    </template>
</provider>
```

When I use render method in data provider component, i got
* `Warning: React.createElement: type is invalid -- expected a string (for built-in components) or a class/function (for composite components) but got: %s.%s%s, object`
* `Invariant Violation: Invariant Violation: Element type is invalid: expected a string (for built-in components) or a class/function (for composite components) but got: object`

***This working without warnings***
```html
<provider :url="providerUrl">
    <template scope="{ data, loading }">
        <nb-text v-if="!loading" :key="data.id">{{ data.name }}</nb-text>
    </template>
</provider>
```


**Did I use `vue-native-cli` to create the project?**
Yes

**Am I using Expo?**
Yes

**Additional context**
What is data provider:
* https://vuedose.tips/tips/data-provider-component-in-vue-js/
* https://codesandbox.io/s/3rmol5rpqm

I try install app in docker container, but i got error:
```
Can't read JSON file: /root/work/test/app.json
└─ Cause: Error: ENOENT: no such file or directory, open '/root/work/test/app.json'
```
I run this commands:

- `docker run -ti --rm node:10.16-alpine sh`
- `yarn global add react-native-cli expo-cli vue-native-cli`
- `mkdir ~/work && cd ~/work && vue-native init test`

Next after set name and use yarn to install, i got the error.

Any tips?
Whenever I try to open the camera I get an error 'autoFocus failed' every time?

Any ideas?

```
<template>
  <view class="container">
    <text class="text-color-primary">{{message}}</text>
    <Camera class="camera-container" :type="cameraSettings.type" ref="camera" />
    <button :on-press="takePic" title="Snap"></button>
  </view>
</template>
```


```
<script>
import { Camera, Permissions } from "expo";
export default {
  data: function() {
    return {
      message: "Hello World",
      cameraSettings: {
        useCamera2Api: false, 
        show: false,
        flash: "off",
        zoom: 0,
        autoFocus: "off",
        type: Camera.Constants.Type.back,
        whiteBalance: "auto",
        ratio: "16:9",
        ratios: [],
        barcodeScanning: false,
        faceDetecting: false,
        faces: [],
        newPhotos: false,
        permissionsGranted: false,
        pictureSize: undefined,
        pictureSizes: [],
        pictureSizeId: 0,
        showGallery: false,
        showMoreOptions: false
      }
    };
  },
  methods: {
    takePic() {
      this.$refs.camera
        .takePictureAsync({ skipProcessing: true })
        .then(photo => {
            console.log(photo);
        })
        .catch(err => {
          console.log(err);
        });
    }
  },
  mounted: function() {
    Permissions.askAsync(Permissions.CAMERA)
      .then(status => {
        this.cameraSettings.permissionsGranted =
          status.status == "granted" ? true : false;
          this.cameraSettings.show = true;
      })
      .catch(err => {
       console.log(err);
      });
  },
  components: { Camera }
};
</script>
<style scoped>
.container {
  flex: 1;
  background-color: white;
  align-items: center;
  justify-content: center;
}
.text-color-primary {
  color: blue;
  font-size: 30;
}
</style>
```

Package.json:


```
{
  "name": "empty-project-template",
  "main": "node_modules/expo/AppEntry.js",
  "private": true,
  "scripts": {
    "start": "expo start",
    "android": "expo start --android",
    "ios": "expo start --ios",
    "eject": "expo eject"
  },
  "dependencies": {
    "babel-plugin-module-resolver": "^3.1.3",
    "expo": "^32.0.1",
    "react": "^16.7.0",
    "react-native": "^0.57.8",
    "vue-native-core": "0.0.8",
    "vue-native-helper": "0.0.11"
  },
  "devDependencies": {
    "babel-preset-expo": "^5.0.0",
    "vue-native-scripts": "^0.0.14"
  }
}

```


Seems that CSS classes can only be set to a single class, not a string of multiple classes.

Seems like a limitation, and I don't see why it can't concatenate the computed styles together.

ie:

`
class="one two" 
`

doesn't work. But in react native world, it's totally possible to do something like:

`
style={[styles.one, styles.two]}
`

Also seems that I cannot split/share class definitions, either, ie:

```

.class1 {
  color: blue;
}
.class1, .class2 {
  background-color: red;
}
```

The above will actually only apply the second reference to class1, and totally ignore the style defined in the first reference.

This is really a hindrance to creating any sort of app of reasonable scale.
I'm trying to run my app using the web variant. I'm getting this error when the app spins up. Ive tried to look through the expo-cli package to see if I could find anything and came up empty. I'm guessing that i'm missing a config somewhere.

```
Failed to compile.
C:/Users/smplman/AppData/Roaming/npm/node_modules/expo-cli/node_modules/react-dev-utils/webpackHotDevClient.js
Error: Failed to load config "universe/node" to extend from.
Referenced from: BaseConfig
    at _normalizeObjectConfigDataBody.next (<anonymous>)
    at _normalizeObjectConfigData.next (<anonymous>)
```
Here is how I setup my app
```
vue-native init test-app
cd test-app
npm run web
``` 