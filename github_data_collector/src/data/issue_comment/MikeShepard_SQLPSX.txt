Performance issues.  Might need a configuration option to prefer NVarchar or Varchar for strings.
Hi,

I have tried scripting out the publication but it’s returning the below error, I have installed and loaded the RMO assembly. I have installed the PSExtensions but still it's returning the below error. 


Can you please help me out with this.

Exception calling “Script” with “1” argument(s): “Could not load file or assembly ‘Microsoft.SqlServer.Replication, Version=14.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91’ or one of its dependencies.
The system cannot find the file specified.”
At line:32 char:9
+ $publication.Script([Microsoft.SqlServer.Replication.scriptoptions]::Cre …
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
+ CategoryInfo : NotSpecified: (:) [], MethodInvocationException
+ FullyQualifiedErrorId : FileNotFoundException
Hey Mike,
I'm a little bit confused. What is the right way to open one single connection to an SQL Server via your module, so that every Get-Sql or Set-Sql command is using this session and how to close this session after several operations.

I managed this like the following:

$sqlsrv = Get-SqlServer -sqlserver $ServerName
$sqldb = Get-SqlPSXDatabase -sqlserver $sqlsrv -dbname $DBName


My Get- and Set-SqlData now looks like this:

Get-SqlData -sqlserver $sqlsrv -dbname $sqldb -qry $SQLQuery

If I run my script this way, all seems to be quiet fine, but I'm unable to manually close this server and/or database connection. The server session is automatically closed, then I close my PowerShell session.

If I would establish several connections to different servers and/or different databases it would be fine to close some not need session within the script and not then the scripts terminates or?

Regards
Markus
None
None
Hi Mike, when I run the command 
◾import-module sqlpsx
Several modules succesflyu get imported but I get several errors as follows(my PS version is 5 on win 10)

```
Loading SQLPSX Module - SQLmaint
Loading SQLPSX Module - SQLServer
Loading SQLPSX Module - Agent
Loading SQLPSX Module - Repl
add-type : Could not load file or assembly 'Microsoft.SqlServer.Rmo, Version=9.0.242.0, Culture=neutral, 
PublicKeyToken=89845dcd8080cc91' or one of its dependencies. The system cannot find the file specified.
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\Repl\Repl.psm1:17 char:8
+ catch {add-type -AssemblyName "Microsoft.SqlServer.Rmo"}
+        ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Add-Type], FileNotFoundException
    + FullyQualifiedErrorId : System.IO.FileNotFoundException,Microsoft.PowerShell.Commands.AddTypeCommand

Loading SQLPSX Module - SSIS
add-type : Cannot add type. The assembly 'Microsoft.SqlServer.ManagedDTS, Version=10.0.0.0, Culture=neutral, 
PublicKeyToken=89845dcd8080cc91' could not be found.
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SSIS\SSIS.psm1:21 char:5
+     add-type -AssemblyName "Microsoft.SqlServer.ManagedDTS, Version=1 ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : ObjectNotFound: (Microsoft.SqlSe...9845dcd8080cc91:String) [Add-Type], Exception
    + FullyQualifiedErrorId : ASSEMBLY_NOT_FOUND,Microsoft.PowerShell.Commands.AddTypeCommand

add-type : Cannot add type. One or more required assemblies are missing.
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SSIS\SSIS.psm1:21 char:5
+     add-type -AssemblyName "Microsoft.SqlServer.ManagedDTS, Version=1 ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidData: (:) [Add-Type], InvalidOperationException
    + FullyQualifiedErrorId : ASSEMBLY_LOAD_ERRORS,Microsoft.PowerShell.Commands.AddTypeCommand

Loading SQLPSX Module - Showmbrs
Loading SQLPSX Module - SQLParser
Loading SQLPSX Module - adolib
Loading SQLPSX Module - SQLIse
Exception calling "GetUserStoreForAssembly" with "0" argument(s): "Unable to determine granted permission for 
assembly."
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\Library-UserStore.ps1:6 char:5
+     $userStore = [System.IO.IsolatedStorage.IsolatedStorageFile]::Get ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : IsolatedStorageException

You cannot call a method on a null-valued expression.
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\Library-UserStore.ps1:8 char:9
+     if ($userStore.GetDirectoryNames($dirName))
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

Exception calling "GetUserStoreForAssembly" with "0" argument(s): "Unable to determine granted permission for 
assembly."
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\Library-UserStore.ps1:38 char:5
+     $userStore = [System.IO.IsolatedStorage.IsolatedStorageFile]::Get ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : IsolatedStorageException

You cannot call a method on a null-valued expression.
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\Library-UserStore.ps1:40 char:9
+     if (-not $userStore.GetDirectoryNames($dirName))
+         ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

You cannot call a method on a null-valued expression.
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\Library-UserStore.ps1:65 char:9
+         $file.Close()
+         ~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

You cannot call a method on a null-valued expression.
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\Library-UserStore.ps1:66 char:9
+         $userStore.Close()
+         ~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : InvalidOperation: (:) [], RuntimeException
    + FullyQualifiedErrorId : InvokeMethodOnNull

Exception calling "GetUserStoreForAssembly" with "0" argument(s): "Unable to determine granted permission for 
assembly."
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\Library-UserStore.ps1:6 char:5
+     $userStore = [System.IO.IsolatedStorage.IsolatedStorageFile]::Get ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : IsolatedStorageException

Exception calling "GetUserStoreForAssembly" with "0" argument(s): "Unable to determine granted permission for 
assembly."
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\Library-UserStore.ps1:77 char:5
+     $userStore = [System.IO.IsolatedStorage.IsolatedStorageFile]::Get ...
+     ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException
    + FullyQualifiedErrorId : IsolatedStorageException

Read-UserStore : Cannot open file SQLIse\options.txt
At C:\Users\salam.SALAM\Documents\WindowsPowerShell\Modules\SQLIse\SQLIse.psm1:43 char:12
+ $options = Read-UserStore -fileName "options.txt" -dirName "SQLIse" - ...
+            ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Write-Error], WriteErrorException
    + FullyQualifiedErrorId : Microsoft.PowerShell.Commands.WriteErrorException,Read-UserStore

Loading SQLPSX Modules is Done!
```



Invoke-BulkCopy only has "new connection" parameters.

Only use double-quotes for interpolation and escape characters
