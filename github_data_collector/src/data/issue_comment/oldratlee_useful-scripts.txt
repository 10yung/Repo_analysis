如果可以支持docker，希望可以分享一下用法和案例，谢谢！

如果可能，期望生成文件和目录属于运行用户

这样可以简化用户使用：查看文件时，不需要sudo
# 👷 `Bash/Shell`最佳实践与安全编程

- **_`Google Shell Style Guide`_**
    - https://google.github.io/styleguide/shell.xml
    - 中文版 https://zh-google-styleguide.readthedocs.io/en/latest/google-shell-styleguide/background/
- 编写可靠shell脚本的八个建议
    https://www.xshell.net/shell/1577.html
- Bash Pitfalls: 编程易犯的错误 - 团子的小窝
    - http://kodango.com/bash-pitfalls-part-1
    - http://kodango.com/bash-pitfalls-part-2
    - http://kodango.com/bash-pitfalls-part-3
    - http://kodango.com/bash-pitfalls-part-4
- Shell 编码风格 - 团子的小窝
    http://kodango.com/shell-script-style
- Bash 优良编程实践
    http://blog.jobbole.com/93447/
- 不要自己去指定sh的方式去执行脚本
    https://github.com/oldratlee/useful-scripts/issues/57#issuecomment-326485965
- Use the Unofficial Bash Strict Mode (Unless You Looove Debugging)
    http://redsymbol.net/articles/unofficial-bash-strict-mode/
- koalaman/shellcheck: ShellCheck, a static analysis tool for shell scripts
    https://github.com/koalaman/shellcheck

# 🎶 Tips

- 让你提升命令行效率的 Bash 快捷键 【完整版】
    https://linuxtoy.org/archives/bash-shortcuts.html
    补充：`ctrl + x, ctrl + e` 就地打开文本编辑器来编辑当前命令行，对于复杂命令行特别有用
- 应该知道的Linux技巧 | | 酷 壳 - CoolShell
    https://coolshell.cn/articles/8883.html
- 简洁的 Bash Programming 技巧 - 团子的小窝
    - http://kodango.com/simple-bash-programming-skills
    - http://kodango.com/simple-bash-programming-skills-2
    - http://kodango.com/simple-bash-programming-skills-3
- Bash 测试和比较函数 — `test`、`[`、`[[`、`((`、和 `if-then-else` 解密
    https://www.ibm.com/developerworks/cn/linux/l-bash-test.html
- Filenames and Pathnames in Shell (bash, dash, ash, ksh, and so on): How to do it Correctly
    https://dwheeler.com/essays/filenames-in-shell.html
- 理解 IFS - 团子的小窝
    http://kodango.com/understand-ifs
- shell中的IFS详解 – 笑遍世界
    http://smilejay.com/2011/12/bash_ifs/
- Bash脚本：怎样一行行地读文件（最好和最坏的方法）
    http://blog.jobbole.com/72185/
- Shell 脚本避免多次重复 source - 团子的小窝
    http://kodango.com/avoid-repeated-source-in-shell
- 一个奇怪的 echo 结果 - 团子的小窝
    http://kodango.com/a-strange-echo-result
- 浅谈 Shell 脚本配置文件格式 - 团子的小窝
    http://kodango.com/config-file-format-in-shell
- Bash function 还能这么玩 - 团子的小窝
    http://kodango.com/bash-functions
- Bash 获取当前函数名 - 团子的小窝
    http://kodango.com/get-function-name-in-bash
- Zsh和Bash，究竟有何不同 坑很深
    https://www.xshell.net/shell/bash_zsh.html

# 💎 系统学习

看文章、了解Tips完全不能替代系统学习才能真正理解并专业开发！

- [Bash Pocket Reference](https://book.douban.com/subject/26738258/)
    力荐！说明简单直接结构体系的佳作，专业`Bash`编程必备！且更新到了新版的`Bash 4`
- [学习bash](https://book.douban.com/subject/1241361/)
    上面那本的展开版
- Bash的官方手册（`man`的中文译文）
    http://ahei.info/chinese-bash-man.htm
- Bash Reference Manual http://www.gnu.org/software/bash/manual/ 
    官方文档，讲得全面且有深度，比如会全面地讲解不同转义的区别、命令的解析过程，这有助统一深入的方式认识Bash整个执行方式和过程。这些内容在其它书中往往不会讲（因为复杂难于深入浅出的讲解），但却一通百通的关键。 
- [命令行的艺术- github.com/jlevy/the-art-of-command-line](https://github.com/jlevy/the-art-of-command-line/blob/master/README-zh.md)
- wzb56/13_questions_of_shell: shell十三问--shell教程 https://github.com/wzb56/13_questions_of_shell
    - 信息来自 https://github.com/KeKe-Li/book#linux
- alebcay/awesome-shell: A curated list of awesome command-line frameworks, toolkits, guides and gizmos. Inspired by awesome-php.
    https://github.com/alebcay/awesome-shell
- 实用 Shell 文档 - 团子的小窝
    http://kodango.com/useful-documents-about-shell

更多参见 [书籍豆列 **_`Bash/Shell`_**](https://www.douban.com/doulist/1779379/)

详见 https://hongjiang.info/duplicate-classes-check-script/

如 选项有没有设置过，设置的值是什么

[shUnit2 is a xUnit unit test framework for Bourne based shell scripts](https://code.google.com/p/shunit2/)

- `Mac`下使用解析命令行参数出错。`Mac`的`getopt`不兼容`GNU`。
    - 这个不是问题。自己手动来解析 来实现即可。
- `Mac`下`show-busy-java-threads`出错。`Mac`的`ps`不兼容`GNU`。
    - 比如 不支持 输出 线程`ID`（即 `-L` 选项）。
        - `Mac`下的`ps`的`-L`是：
            `List the set of keywords available for the -O and -o options.`

``` bash
parseOpts "a,a-long:|b,b-long:|c,c-long+" -avalue1 --b-long=v2
```
