I structured the changes into several smaller commits that were focused on a specific change/related set of changes in the upstream rustc crates, and included details about the upstream change in the commit messages (hope this makes it somewhat easier to review!). 

I decided to focus on getting rustfmt to just "work" with the latest rustc crate versions, and defer making certain other changes (like refactoring, supporting the new half open range syntax - #4009, etc.) to future PRs.  My thinking is defering those other changes will hopefully make this easier to merge since there's already a decent sized diff just from upgrading the rustc-ap versions, and I suspect this PR has a higher potential than normal for merge conflicts
Using this version of `rustfmt`:

```
$ cargo +nightly fmt -- -V
rustfmt 1.4.11-nightly (18382352 2019-12-03)
```

and starting with this file:

```
/** foobar */
const foo: u32 = 0;
```

I find that `rustfmt` keeps adding asterisks to the end of the comment.  If I keep re-running `rustfmt`, I get more asterisks:

```
$ cat src/dummy.rs 
/** foobar */
const foo: u32 = 0;
$ cargo +nightly fmt -- src/dummy.rs 
$ cat src/dummy.rs 
/** foobar **/
const foo: u32 = 0;
$ cargo +nightly fmt -- src/dummy.rs 
$ cat src/dummy.rs 
/** foobar * **/
const foo: u32 = 0;
$ cargo +nightly fmt -- src/dummy.rs 
$ cat src/dummy.rs 
/** foobar * * **/
const foo: u32 = 0;
$ cargo +nightly fmt -- src/dummy.rs 
$ cat src/dummy.rs 
/** foobar * * * **/
const foo: u32 = 0;
$ cargo +nightly fmt -- src/dummy.rs 
$ cat src/dummy.rs 
/** foobar * * * * **/
const foo: u32 = 0;
$ cargo +nightly fmt -- src/dummy.rs 
$ cat src/dummy.rs 
/** foobar * * * * * **/
const foo: u32 = 0;
$ 
```
fix: #3988 
Two issues I found while messing with this, first
```rust 
fn main() {
    println!("Hello World! I think rustfmt deletes comments between two semicolons.");
    //if you run rustfmt..
    //these 
    //lines will disappear!
    //delete me!!
    ;
}
```
See [playground](https://play.rust-lang.org/?version=stable&mode=debug&edition=2018&gist=26c1b9525594b08f97e0a37a5714f08e). 

And rustfmt panics if you have a block-comment inside two semicolons, like
```rust
fn main() {
    ;/* rustfmt panics!*/;
}
```
See [playground](https://play.rust-lang.org/?version=nightly&mode=debug&edition=2018&gist=ff3e39893e9690085c46c4157a347820). 
After we disabled the recursive formatting by default, `self_tests` is only targetting src/lib.rs. We need to modify the test so that the `recursive` value of the `Config` is set to `true`.
- Parse the rhs as statement
- Do not format unsafe block on the statement position in a single line

Close #3419.

I'm not sure this is a bug or intended behavior. So if it is intended, please feel free to close this.

### Environment

- rustfmt: `rustfmt 1.4.11-nightly (18382352 2019-12-03)`
- OS: macOS 10.14

### Repro

Please prepare following code:

```rust
struct X {
    // foo
    // bar
}
```

and run `rustfmt` (here I'm using nightly):

```
$ rustup run nightly rustfmt blah.rs
```

### Expected behavior

`rustfmt` changes nothing

### Actual behavior

`rustfmt` changes code as follows:

```rust
struct X {
    // foo
// bar
}
```
Looks like there's going to be some changes in the rustc parser that will involve the removal of parts of the parser interface that rustfmt uses today (`default_submod_path` and I'd guess `submod_path_from_attr` too).

https://github.com/rust-lang/rust/pull/68135#issuecomment-573377958

> Note that methods like default_submod_path are going to be removed from the parser when we fix #64197, so making those public will likely be short-lived. (cc petrochenkov)

Not sure what the changes will entail, but opening this to help keep track of the pending upstream changes in the parser. 

Places in rustfmt that'll probably be impacted by those upstream changes:
https://github.com/rust-lang/rustfmt/blob/cc56957656ff9b14168805104f901b19550cea07/rustfmt-core/rustfmt-lib/src/syntux/session.rs#L140-L152

https://github.com/rust-lang/rustfmt/blob/cc56957656ff9b14168805104f901b19550cea07/rustfmt-core/rustfmt-lib/src/modules.rs#L258-L261

https://github.com/rust-lang/rustfmt/blob/cc56957656ff9b14168805104f901b19550cea07/rustfmt-core/rustfmt-lib/src/syntux/parser.rs#L133-L135

https://github.com/rust-lang/rustfmt/blob/cc56957656ff9b14168805104f901b19550cea07/rustfmt-core/rustfmt-lib/src/modules.rs#L244-L249

Unsure if this is intentional, but I assume it isn't. rustfmt removes newlines in comments between chain calls. I can get behind removing newlines between line comments, but removing them in block comments I find odd.

**Original Code:**

*Minimal example to reproduce issue.*

```rust
let x = (0..3)
        /*
        Foo

        Bar
        */
        .map(|i| i + 1)
        // Foo

        // Bar
        .map(|i| i + 1)
        /*
        Foo


        Bar
        */
        .collect::<Vec<_>>();
```

**Formatted Code:**

```rust
let x = (0..3)
        /*
        Foo
        Bar
        */
        .map(|i| i + 1)
        // Foo
        // Bar
        .map(|i| i + 1)
        /*
        Foo
        Bar
        */
        .collect::<Vec<_>>();
```

---

rustfmt 1.4.9-stable (33e36670 2019-10-07)