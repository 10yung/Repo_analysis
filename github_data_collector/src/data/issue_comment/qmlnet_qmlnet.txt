There is no setWindowIcon method available from .Net
 The lack of documentation is surprising, I'm new to all of this so It confuses me alot how to even beginn a project.
Could someone have a look and verify which modules need to be installed for a **minimal** Qml.Net to work, And add this to a wiki?

Additional Questions: 
Does Visual Studio need all these C++ dependencies if QT have them?
Is there a way to simple choose between MSVC and MinGW ?


(Minimal build consider only Windows x64; Linux and Mac, x86 and arm64 as optional modules)

- **Install Visual Studio**

Install Net Core 3.0-Runtime
Install Net Core 3.1 SDK
Install Net Framework 4.7.2 - targeting pack
Install Net Framework 4.8 SDK
Install Package for setting target versions of Net Framework 4.6.1
Install Package for setting target versions of Net Framework 4.8
Install CLR for SQL Server
Install Dependency Validation
Install NuGet-Paket-Manager
Install Text Template Transformation
Install C# & Visual Basic Rosyln-Compiler
Install C++ 2019 Redistributable MSMs
Install C++ 2019 Redistributable Update
Install C++/CLI Support for v142-Buildtools 14.24
Install C++ CMake Tools for Windows
Install MSBuild
Install MSVC v142 - VS 2019 C++ x64/x86 Buildtools
Install .Net Profiling Tools
Install C++ Profiling Tools
Install JIT Debugger
Install C# & Visual Basic
Install C++ Core features
Install IntelliCode
Install C++ ATL v142-Buildtools for x64/x86
Install C++ MFC v142-Buildtools for x64/x86 
Optional: Install Net Native
Optional: Install Net Compiler Platform SDK
Optional: Install C++ Module for v142-Buildtools
Optional: Install C++ UWP v142-Buildtools for ARM64
Optional: Install MSVC v142 - VS 2019 C++ ARM64 Buildtools
Optional: Install MSVC v142 - VS 2019 C++ x64/x86 Buildtools Spectre
Optional: Install C++ for Linux Development
Optional: Install C++ CMake Tools for Linux 
Optional: Install Embedded & IoT Development tools
Optional: Install C++ ATL v142-Buildtools for ARM64
Optional: Install C++ MFC v142-Buildtools for ARM64
Optional: Install Entity Framework 6-Tools
Optional: Install USB Support
Optional: Install Windows 10 SDK
Optional: Install Windows Universal C-Runtime


- **1. Install QT**

Optional: Enable Preview Packages
Install QT Creator
Install QT 5.xx.x (Newest version)
Install Developer and Designer Tools / QT Creator Debugger Support 
Install Developer and Designer Tools / Debbuging Tools for Windows
Install Developer and Designer Tools / MinGW 7.3.0 64-bit
Install Developer and Designer Tools / CMake 3.16.0 64-bit
Optional: Install Developer and Designer Tools / QT Installer Framework (Or similiar publishing packaging solution)


- **Add QT to Environment Variables**

```
REM Set up Microsoft Visual Studio 2017, where <arch> is amd64, x86, etc.
CALL "C:\Program Files (x86)\Microsoft Visual Studio\2017\Professional\VC\Auxiliary\Build\vcvarsall.bat" <arch>
SET _ROOT=C:\Qt\Qt-5
SET PATH=%_ROOT%\qtbase\bin;%_ROOT%\gnuwin32\bin;%PATH%
REM Uncomment the below line when using a git checkout of the source repository
REM SET PATH=%_ROOT%\qtrepotools\bin;%PATH%
SET _ROOT=
```

- **Configure and Build QT (https://doc.qt.io/qt-5/configure-options.html)**

`configure -debug -nomake examples -nomake tests -skip qtwebengine -opensource`

`nmake`
or
`mingw32-make`


- **Install Qml.Net**

```
dotnet add package Qml.Net
dotnet add package Qml.Net.WindowsBinaries
```

Optional: 
```
dotnet add package Qml.Net.OSXBinaries
dotnet add package Qml.Net.LinuxBinaries
```

Bumps [Microsoft.CSharp](https://github.com/dotnet/corefx) from 4.5.0 to 4.7.0.
<details>
<summary>Release notes</summary>

*Sourced from [Microsoft.CSharp's releases](https://github.com/dotnet/corefx/releases).*

> ## .NET Core 2.1.0 RC1
> - [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/Preview/2.1.0-rc1.md)
> - [Known Issues](https://github.com/dotnet/core/blob/master/release-notes/2.1/Preview/2.1.0-rc1-known-issues.md)
> - [Download and Install](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.1.0-rc1-download.md)
> 
> ## Repos
> - [CoreCLR](https://github.com/dotnet/coreclr/releases/tag/v2.1-rc1)
> - [CoreFX](https://github.com/dotnet/corefx/releases/tag/v2.1-rc1)
> - [Core-Setup](https://github.com/dotnet/core-setup/releases/tag/v2.1-rc1)
> - [CLI](https://github.com/dotnet/cli/releases/tag/v2.1.300-rc1-008673)
</details>
<details>
<summary>Commits</summary>

- See full diff in [compare view](https://github.com/dotnet/corefx/commits)
</details>
<br />

[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=Microsoft.CSharp&package-manager=nuget&previous-version=4.5.0&new-version=4.7.0)](https://dependabot.com/compatibility-score.html?dependency-name=Microsoft.CSharp&package-manager=nuget&previous-version=4.5.0&new-version=4.7.0)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
Bumps [System.Reflection.Emit.Lightweight](https://github.com/dotnet/corefx) from 4.3.0 to 4.7.0.
<details>
<summary>Release notes</summary>

*Sourced from [System.Reflection.Emit.Lightweight's releases](https://github.com/dotnet/corefx/releases).*

> ## .NET Core 2.1.0 RC1
> - [Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/Preview/2.1.0-rc1.md)
> - [Known Issues](https://github.com/dotnet/core/blob/master/release-notes/2.1/Preview/2.1.0-rc1-known-issues.md)
> - [Download and Install](https://github.com/dotnet/core/blob/master/release-notes/download-archives/2.1.0-rc1-download.md)
> 
> ## Repos
> - [CoreCLR](https://github.com/dotnet/coreclr/releases/tag/v2.1-rc1)
> - [CoreFX](https://github.com/dotnet/corefx/releases/tag/v2.1-rc1)
> - [Core-Setup](https://github.com/dotnet/core-setup/releases/tag/v2.1-rc1)
> - [CLI](https://github.com/dotnet/cli/releases/tag/v2.1.300-rc1-008673)
</details>
<details>
<summary>Commits</summary>

- See full diff in [compare view](https://github.com/dotnet/corefx/commits)
</details>
<br />

[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=System.Reflection.Emit.Lightweight&package-manager=nuget&previous-version=4.3.0&new-version=4.7.0)](https://dependabot.com/compatibility-score.html?dependency-name=System.Reflection.Emit.Lightweight&package-manager=nuget&previous-version=4.3.0&new-version=4.7.0)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
I've tried registering Properties.Settings as a type, but that didn't work.
Bumps [Newtonsoft.Json](https://github.com/JamesNK/Newtonsoft.Json) from 12.0.2 to 12.0.3.
<details>
<summary>Release notes</summary>

*Sourced from [Newtonsoft.Json's releases](https://github.com/JamesNK/Newtonsoft.Json/releases).*

> ## 12.0.3
> * New feature - Added support for nullable reference types
> * New feature - Added KebabCaseNamingStrategy
> * Change - Package now uses embedded package icon
> * Fix - Fixed bug when merging JToken with itself
> * Fix - Fixed performance of calling ICustomTypeDescriptor.GetProperties
> * Fix - Fixed serializing Enumerable.Empty and empty arrays on .NET Core 3.0
> * Fix - Fixed deserializing some collection types with constructor
> * Fix - Fixed deserializing IImmutableSet to ImmutableHashSet instead of ImmutableSortedSet
> * Fix - Fixed deserializing IImmutableDictionary to ImmutableDictionary instead of ImmutableSortedDictionary
> * Fix - Fixed deserializing into constructors with more than 256 parameters
> * Fix - Fixed hang when deserializing JTokenReader with preceding comment
> * Fix - Fixed JSONPath scanning with nested indexer
> * Fix - Fixed deserializing incomplete JSON object to JObject
> * Fix - Fixed using StringEnumConverter with naming strategy and specified values
</details>
<details>
<summary>Commits</summary>

- [`7c3d7f8`](https://github.com/JamesNK/Newtonsoft.Json/commit/7c3d7f8da7e35dde8fa74188b0decff70f8f10e3) Update version to 12.0.3
- [`0688f3f`](https://github.com/JamesNK/Newtonsoft.Json/commit/0688f3f206eefb1ad5e4f2d8dfe89eafa5988443) Embiggen package icon
- [`cb09e67`](https://github.com/JamesNK/Newtonsoft.Json/commit/cb09e67abe181d3a2b6eda424f9023cecf191493) Update package to use embedded PackageIcon
- [`e27710f`](https://github.com/JamesNK/Newtonsoft.Json/commit/e27710ffaa6d31e0d3f6d03f9760ad1474bab2a8) Update version to 12.0.3-beta2
- [`23be46f`](https://github.com/JamesNK/Newtonsoft.Json/commit/23be46f665887c9be03faf7864ae98890ca08246) Fix using StringEnumConverter with naming strategy and specifie… ([#2186](https://github-redirect.dependabot.com/JamesNK/Newtonsoft.Json/issues/2186))
- [`ff6f51b`](https://github.com/JamesNK/Newtonsoft.Json/commit/ff6f51b667b7bb05b7f595c331074ecb6c93bd56) Added KebabCaseNamingStrategy
- [`baa1e21`](https://github.com/JamesNK/Newtonsoft.Json/commit/baa1e21612cae4fb3d3b495e022e327afa50b946) Fix deserializing incomplete JSON object to JObject ([#2181](https://github-redirect.dependabot.com/JamesNK/Newtonsoft.Json/issues/2181))
- [`541eab2`](https://github.com/JamesNK/Newtonsoft.Json/commit/541eab2fbd5495e77798af5b25f549cb2fbd15c6) Fix JSONPath scanning with nested indexer ([#2180](https://github-redirect.dependabot.com/JamesNK/Newtonsoft.Json/issues/2180))
- [`c89d6ad`](https://github.com/JamesNK/Newtonsoft.Json/commit/c89d6addf118745c4c14536ce64fd69566ebd644) Update dependencies from .NET Core 3.0 ([#2179](https://github-redirect.dependabot.com/JamesNK/Newtonsoft.Json/issues/2179))
- [`3219c47`](https://github.com/JamesNK/Newtonsoft.Json/commit/3219c47f74f279351548e8763946653f8cdc527e) Fix hang when deserializing JTokenReader with preceding comment ([#2178](https://github-redirect.dependabot.com/JamesNK/Newtonsoft.Json/issues/2178))
- Additional commits viewable in [compare view](https://github.com/JamesNK/Newtonsoft.Json/compare/12.0.2...12.0.3)
</details>
<br />

[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=Newtonsoft.Json&package-manager=nuget&previous-version=12.0.2&new-version=12.0.3)](https://dependabot.com/compatibility-score.html?dependency-name=Newtonsoft.Json&package-manager=nuget&previous-version=12.0.2&new-version=12.0.3)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Automerge options (never/patch/minor, and dev/runtime dependencies)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
Hello,
First of all, thanks @pauldotknopf (and all contributors) to make the dream – to have a C# crossplatform UI library – come true.
This fits perfectly my needs.

But there's a lack of documentation, and I can understand because the project is pretty new.

I could contribute on writing it, oh god if only I could.
I have not a lot experimentation with C# nor with Qt (although for the last one, I have a bit, but still, it's from school memories), and I truly need to know the uses cases and more in depth, the usage, best practices and bad practices, etc.

The "quick start" is good to setup the library. The first tutorial [https://github.com/Jodeldiplom/qmlnet-tutorials](here) (thanks @Jodeldiplom) is basically the same as the quick start, and the second is quite good but not enough because there are no signals.

The PhotoFrame example is well detailed, but as a beginner in this language, I can't get to understand what's underneath the surface and how it works. And I think to make good things you must be able to understand every part of the program. There can't be "magic working stuff", and for that, I would really like to dig.

It has been 2 days than I'm looking at the source codes, opening them, trying to make changes to understand. But wow, I feel terribly bad because I can't get anything to work when I want to add a feature.

For example, i've been trying to add signals to the Contacts tutorial 02 from @Jodeldiplom, to make the Contact list dynamic. No success (I don't know if it's because I have signals on other types than "string" or "int" that are showed in the examples...).

I don't have excuses, I should be able to make it work since it's not that hard. I understand the [Quick Overview](https://github.com/qmlnet/qmlnet#quick-overview), but I would like to know more about the library.

Thank you.
ListView in QML needs a ListModel to populate data. Also you need to define a delegate to define how data inside a model should be displayed in the view.  ([Link](https://doc.qt.io/qt-5/qml-qtquick-listview.html#model-prop)).

After working more than 10 years with Qt, I've found this as one of the best features of Qt/Qml. Most important, **you can use property binding of model element in the delegates**. It means by changing the model data, all the delegates will update theme-self. No extra refreshes are needed!

Now it seems that these property bindings are no longer working in qml.net. It's a huge drawback if there is no solution considered. I've prepared a simple example (The sample is attached):

This is a ListView in Qml with a simple delegate.
![2](https://user-images.githubusercontent.com/53909162/65226089-85dc2180-dadb-11e9-9bc4-61a82de36f84.png)

The data are comming from .Net model:
![2](https://user-images.githubusercontent.com/53909162/65226306-deabba00-dadb-11e9-8d87-4c13ab48d05a.png)

Whenever user clicks on the each row, I try to change title of that row:
![3](https://user-images.githubusercontent.com/53909162/65226405-0b5fd180-dadc-11e9-892d-748012f8e952.png)
![4](https://user-images.githubusercontent.com/53909162/65226505-364a2580-dadc-11e9-866c-4573b2839892.png)

The title is changed successfully yet we can't see the change in the view!
![5](https://user-images.githubusercontent.com/53909162/65226669-7f9a7500-dadc-11e9-818f-cc4fece54dda.png)
(the title is remained fixed though it's changed in the model)


Therefore it seems that the .Net models are making all property bindings gone unless there is a solution I'm not aware of that :) I'll appreciate if anyone can help me.
[Example.zip](https://github.com/qmlnet/qmlnet/files/3630175/Example.zip)



is it possible to use https://github.com/mellinoe/Veldrid inside qml.net?
any hint about where to start would be appreciated. 
Please give some examples how to use Qt native i18n tools such as qsTr in QML