```
snyk ignore --id='snyk:lic:golang:github.com%2Fhashicorp%2Fhcl:MPL-2.0' --expiry='2020-01-31' --reason='Waiting for  inputs'
snyk ignore --id='snyk:lic:golang:github.com%2Fhashicorp%2Fhcl:MPL-2.0' --expiry='2020-01-31' --reason='Waiting for  inputs'
snyk ignore --id='snyk:lic:golang:github.com/hashicorp/hcl:MPL-2.0' --expiry='2020-01-31' --reason='Waiting for  inputs'
snyk ignore --id='snyk:lic:golang:github.com/hashicorp/hcl:MPL-2.0' --expiry='2020-01-31' --reason='Waiting for  inputs'
snyk ignore --id='snyk:snyk:lic:golang:github.com%2Fhashicorp%2Fhcl:MPL-2.0' --expiry='2020-01-31' --reason='Waiting for  inputs'
```

### Expected behaviour
I expect the next `snyk test` to not fail for the same licence error

### Actual behaviour
`snyk test` fails anyway


### Steps to reproduce

- Running `snyk test`
- got an error about License
- run `snyk ignore --id='license' --expiry='2020-01-31' --reason='reson'`
- Running `snyk test` got an error again

**Gopkg.lock**
```
# This file is autogenerated, do not edit; changes may be undone by the next 'dep ensure'.


[[projects]]
  digest = "1:e4b30804a381d7603b8a344009987c1ba351c26043501b23b8c7ce21f0b67474"
  name = "github.com/BurntSushi/toml"
  packages = ["."]
  pruneopts = ""
  revision = "3012a1dbe2e4bd1391d42b32f0577cb7bbc7f005"
  version = "v0.3.1"

[[projects]]
  digest = "1:ee35b514b6826a6e65bc24795873020d86570e5252c30c7e136581d0fa4ebdb0"
  name = "github.com/NYTimes/gziphandler"
  packages = ["."]
  pruneopts = ""
  revision = "dd0439581c7657cb652dfe5c71d7d48baf39541d"
  version = "v1.1.1"

[[projects]]
  branch = "master"
  digest = "1:fb0dfd36effa1fc1b8e669e29c586ec87eb10562ad5e4617c03fd0d0db7d280d"
  name = "github.com/asaskevich/govalidator"
  packages = ["."]
  pruneopts = ""
  revision = "475eaeb164960a651e97470412a7d3b0c5036105"

[[projects]]
  digest = "1:d37b5cbae31a6d3685931cdb7d355e650a5dcb265dc340b57b6f17158234bd38"
  name = "github.com/aws/aws-lambda-go"
  packages = [
    "events",
    "lambda",
    "lambda/handlertrace",
    "lambda/messages",
    "lambdacontext",
  ]
  pruneopts = ""
  revision = "b5b7267d297de263cc5b61f8c37543daa9c95ffd"
  version = "v1.13.3"

[[projects]]
  digest = "1:2d06a35a9627cddd6ce2b221a7d46d6b479bc116dc516d5f76a2a60a995d130d"
  name = "github.com/aws/aws-sdk-go"
  packages = [
    "aws",
    "aws/arn",
    "aws/awserr",
    "aws/awsutil",
    "aws/client",
    "aws/client/metadata",
    "aws/corehandlers",
    "aws/credentials",
    "aws/credentials/ec2rolecreds",
    "aws/credentials/endpointcreds",
    "aws/credentials/processcreds",
    "aws/credentials/stscreds",
    "aws/csm",
    "aws/defaults",
    "aws/ec2metadata",
    "aws/endpoints",
    "aws/request",
    "aws/session",
    "aws/signer/v4",
    "internal/ini",
    "internal/s3err",
    "internal/sdkio",
    "internal/sdkmath",
    "internal/sdkrand",
    "internal/sdkuri",
    "internal/shareddefaults",
    "internal/strings",
    "private/protocol",
    "private/protocol/eventstream",
    "private/protocol/eventstream/eventstreamapi",
    "private/protocol/json/jsonutil",
    "private/protocol/jsonrpc",
    "private/protocol/query",
    "private/protocol/query/queryutil",
    "private/protocol/rest",
    "private/protocol/restxml",
    "private/protocol/xml/xmlutil",
    "service/cloudwatch",
    "service/kms",
    "service/s3",
    "service/s3/internal/arn",
    "service/s3/s3iface",
    "service/s3/s3manager",
    "service/sts",
    "service/sts/stsiface",
  ]
  pruneopts = ""
  revision = "0b1278033d8e0b68eb64faec9ca9512ccd8695e0"
  version = "v1.28.0"

[[projects]]
  digest = "1:b58425a547a819682379775ae3c5331cc65475f61bf0af739a20a2acacfcdd75"
  name = "github.com/bxcodec/faker"
  packages = [
    ".",
    "support/slice",
  ]
  pruneopts = ""
  revision = "4fc883c366aee07dc236743292ea86a649700b19"
  version = "v1.5.0"

[[projects]]
  digest = "1:0deddd908b6b4b768cfc272c16ee61e7088a60f7fe2f06c547bd3d8e1f8b8e77"
  name = "github.com/davecgh/go-spew"
  packages = ["spew"]
  pruneopts = ""
  revision = "8991bc29aa16c548c550c7ff78260e27b9ab7c73"
  version = "v1.1.1"

[[projects]]
  digest = "1:6098222470fe0172157ce9bbef5d2200df4edde17ee649c5d6e48330e4afa4c6"
  name = "github.com/dgrijalva/jwt-go"
  packages = ["."]
  pruneopts = ""
  revision = "06ea1031745cb8b3dab3f6a236daf2b0aa468b7e"
  version = "v3.2.0"

[[projects]]
  branch = "master"
  digest = "1:06670a03b08e82883ea49fa3bf35f4d12e47b8c553c8759c9ae7800ce3327771"
  name = "github.com/durmaze/gobank"
  packages = [
    ".",
    "predicates",
    "responses",
  ]
  pruneopts = ""
  revision = "aa169ba28e80ad30a59ccce6d304094cf817bca1"

[[projects]]
  digest = "1:eb53021a8aa3f599d29c7102e65026242bdedce998a54837dc67f14b6a97c5fd"
  name = "github.com/fsnotify/fsnotify"
  packages = ["."]
  pruneopts = ""
  revision = "c2828203cd70a50dcccfb2761f8b1f8ceef9a8e9"
  version = "v1.4.7"

[[projects]]
  digest = "1:26d175e5ae3907016981aae86d2ef8acbbb94391a2b6a01b96a5f7fb682dc04c"
  name = "github.com/go-chi/chi"
  packages = [
    ".",
    "middleware",
  ]
  pruneopts = ""
  revision = "08d9051ef6546d57c5dca8eae13e6df362e2d568"
  version = "v3.3.4"

[[projects]]
  digest = "1:2a284c67986bb690d0af2728e4ac7fd4d04896f8f04d7a84e39c005dd36d06c6"
  name = "github.com/go-chi/cors"
  packages = ["."]
  pruneopts = ""
  revision = "dba6525398619dead495962a916728e7ee2ca322"
  version = "v1.0.0"

[[projects]]
  digest = "1:9b65ba1b0091274d19622cdb1f230771df68716ab9ca340c44e45597a72e290b"
  name = "github.com/go-playground/locales"
  packages = [
    ".",
    "currency",
  ]
  pruneopts = ""
  revision = "9f105231d3a5f6877a2bf8321dfa15ea6f844b1b"
  version = "v0.13.0"

[[projects]]
  digest = "1:b7edb31103e55ef4cf5f6a2b790b34f68f1209590f7f8008115ca09f1fa2a853"
  name = "github.com/go-playground/universal-translator"
  packages = ["."]
  pruneopts = ""
  revision = "f87b1403479a348651dbf5f07f5cc6e5fcf07008"
  version = "v0.17.0"

[[projects]]
  digest = "1:68c64bb61d55dcd17c82ca0b871ddddb5ae18b30cfe26f6bfd4b6df6287dc2e0"
  name = "github.com/golang/mock"
  packages = ["gomock"]
  pruneopts = ""
  revision = "9fa652df1129bef0e734c9cf9bf6dbae9ef3b9fa"
  version = "1.3.1"

[[projects]]
  digest = "1:b852d2b62be24e445fcdbad9ce3015b44c207815d631230dfce3f14e7803f5bf"
  name = "github.com/golang/protobuf"
  packages = ["proto"]
  pruneopts = ""
  revision = "6c65a5562fc06764971b7c5d05c76c75e84bdbf7"
  version = "v1.3.2"

[[projects]]
  digest = "1:ad92aa49f34cbc3546063c7eb2cabb55ee2278b72842eda80e2a20a8a06a8d73"
  name = "github.com/google/uuid"
  packages = ["."]
  pruneopts = ""
  revision = "0cd6bf5da1e1c83f8b45653022c74f71af0538a4"
  version = "v1.1.1"

[[projects]]
  digest = "1:d14365c51dd1d34d5c79833ec91413bfbb166be978724f15701e17080dc06dec"
  name = "github.com/hashicorp/hcl"
  packages = [
    ".",
    "hcl/ast",
    "hcl/parser",
    "hcl/printer",
    "hcl/scanner",
    "hcl/strconv",
    "hcl/token",
    "json/parser",
    "json/scanner",
    "json/token",
  ]
  pruneopts = ""
  revision = "8cb6e5b959231cc1119e43259c4a608f9c51a241"
  version = "v1.0.0"

[[projects]]
  digest = "1:b3c5b95e56c06f5aa72cb2500e6ee5f44fcd122872d4fec2023a488e561218bc"
  name = "github.com/hpcloud/tail"
  packages = [
    ".",
    "ratelimiter",
    "util",
    "watch",
    "winfile",
  ]
  pruneopts = ""
  revision = "a30252cb686a21eb2d0b98132633053ec2f7f1e5"
  version = "v1.0.0"

[[projects]]
  digest = "1:13fe471d0ed891e8544eddfeeb0471fd3c9f2015609a1c000aefdedf52a19d40"
  name = "github.com/jmespath/go-jmespath"
  packages = ["."]
  pruneopts = ""
  revision = "c2b33e84"

[[projects]]
  digest = "1:d37aa12be5d833ccb709a3b3017181f61c8d9dfbae4dd3ae2e16b35c07009362"
  name = "github.com/jmoiron/sqlx"
  packages = [
    ".",
    "reflectx",
  ]
  pruneopts = ""
  revision = "de8647470aafe4854c976707c431dbe1eb2822c6"

[[projects]]
  digest = "1:0f51cee70b0d254dbc93c22666ea2abf211af81c1701a96d04e2284b408621db"
  name = "github.com/konsorten/go-windows-terminal-sequences"
  packages = ["."]
  pruneopts = ""
  revision = "f55edac94c9bbba5d6182a4be46d86a2c9b5b50e"
  version = "v1.0.2"

[[projects]]
  digest = "1:eadc94347700e0ea690190ca59cbe66cd9997633fee4344206419e6fc878373e"
  name = "github.com/leodido/go-urn"
  packages = ["."]
  pruneopts = ""
  revision = "a0f5013415294bb94553821ace21a1a74c0298cc"
  version = "v1.2.0"

[[projects]]
  digest = "1:b424ab60bdff8b8899fa0b27c9b35083f2607fbbaa7b6430617c53ca4501d286"
  name = "github.com/lib/pq"
  packages = [
    ".",
    "oid",
    "scram",
  ]
  pruneopts = ""
  revision = "99274577be97ac9b1d95a2d61d566dc9b7cc6a54"
  version = "v1.3.0"

[[projects]]
  digest = "1:ae39921edb7f801f7ce1b6b5484f9715a1dd2b52cb645daef095cd10fd6ee774"
  name = "github.com/magiconair/properties"
  packages = ["."]
  pruneopts = ""
  revision = "de8848e004dd33dc07a2947b3d76f618a7fc7ef1"
  version = "v1.8.1"

[[projects]]
  digest = "1:bcc46a0fbd9e933087bef394871256b5c60269575bb661935874729c65bbbf60"
  name = "github.com/mitchellh/mapstructure"
  packages = ["."]
  pruneopts = ""
  revision = "3536a929edddb9a5b34bd6861dc4a9647cb459fe"
  version = "v1.1.2"

[[projects]]
  digest = "1:7d91dd44311060450afe8aecfaeb1d13f02b60eb75b6dd2e04168aa02524772c"
  name = "github.com/onsi/ginkgo"
  packages = [
    ".",
    "config",
    "extensions/table",
    "internal/codelocation",
    "internal/containernode",
    "internal/failer",
    "internal/leafnodes",
    "internal/remote",
    "internal/spec",
    "internal/spec_iterator",
    "internal/specrunner",
    "internal/suite",
    "internal/testingtproxy",
    "internal/writer",
    "reporters",
    "reporters/stenographer",
    "reporters/stenographer/support/go-colorable",
    "reporters/stenographer/support/go-isatty",
    "types",
  ]
  pruneopts = ""
  revision = "388ac7e50a3abf0798010091d5094171f4aefc0b"
  version = "v1.11.0"

[[projects]]
  digest = "1:7629480825744221a7f0f05ce8f054692758b3619677c0beff8afc4f5d1dbb1e"
  name = "github.com/onsi/gomega"
  packages = [
    ".",
    "format",
    "gstruct",
    "gstruct/errors",
    "internal/assertion",
    "internal/asyncassertion",
    "internal/oraclematcher",
    "internal/testingtsupport",
    "matchers",
    "matchers/support/goraph/bipartitegraph",
    "matchers/support/goraph/edge",
    "matchers/support/goraph/node",
    "matchers/support/goraph/util",
    "types",
  ]
  pruneopts = ""
  revision = "22a9feb22fe99439870ed2e013401725a9d495df"
  version = "v1.8.1"

[[projects]]
  digest = "1:e08c534e8bd62efd64d644a2aca7bdc22f6d194e1ab2b132ca1e1c880c1ca22c"
  name = "github.com/parnurzeal/gorequest"
  packages = ["."]
  pruneopts = ""
  revision = "b735e503d8bf955a72baf89723cdb50ab0bd668c"
  version = "v0.2.16"

[[projects]]
  digest = "1:5f347ea0b4656f17f0ddffae1419dafaac4bc6ed57c92d58cadc7452f8a9ac3f"
  name = "github.com/pelletier/go-toml"
  packages = ["."]
  pruneopts = ""
  revision = "903d9455db9ff1d7ac1ab199062eca7266dd11a3"
  version = "v1.6.0"

[[projects]]
  digest = "1:abc18400dc34c1d52960a2b0551578f3c35f295be167ad64dbe80b6cd30249e7"
  name = "github.com/pkg/errors"
  packages = ["."]
  pruneopts = ""
  revision = "49f8f617296114c890ae0b7ac18c5953d2b1ca0f"
  version = "v0.9.0"

[[projects]]
  digest = "1:256484dbbcd271f9ecebc6795b2df8cad4c458dd0f5fd82a8c2fa0c29f233411"
  name = "github.com/pmezard/go-difflib"
  packages = ["difflib"]
  pruneopts = ""
  revision = "792786c7400a136282c1664665ae0a8db921c6c2"
  version = "v1.0.0"

[[projects]]
  digest = "1:8b765bac58049f0c54c1fadb0b011bce1adc986506264c9d498cb27dd32679f4"
  name = "github.com/sethgrid/pester"
  packages = ["."]
  pruneopts = ""
  revision = "03e26c9abbbf5accb8349790bf9f41bde09d72c3"
  version = "1.0.0"

[[projects]]
  digest = "1:1a405cddcf3368445051fb70ab465ae99da56ad7be8d8ca7fc52159d1c2d873c"
  name = "github.com/sirupsen/logrus"
  packages = ["."]
  pruneopts = ""
  revision = "839c75faf7f98a33d445d181f3018b5c3409a45e"
  version = "v1.4.2"

[[projects]]
  digest = "1:956f655c87b7255c6b1ae6c203ebb0af98cf2a13ef2507e34c9bf1c0332ac0f5"
  name = "github.com/spf13/afero"
  packages = [
    ".",
    "mem",
  ]
  pruneopts = ""
  revision = "588a75ec4f32903aa5e39a2619ba6a4631e28424"
  version = "v1.2.2"

[[projects]]
  digest = "1:0a3d8f7dc17afdc30a5a5becb45fb91ff28aaa64645c69836ccd600d88e9ed9e"
  name = "github.com/spf13/cast"
  packages = ["."]
  pruneopts = ""
  revision = "1ffadf551085444af981432dd0f6d1160c11ec64"
  version = "v1.3.1"

[[projects]]
  digest = "1:cc15ae4fbdb02ce31f3392361a70ac041f4f02e0485de8ffac92bd8033e3d26e"
  name = "github.com/spf13/jwalterweatherman"
  packages = ["."]
  pruneopts = ""
  revision = "94f6ae3ed3bceceafa716478c5fbf8d29ca601a1"
  version = "v1.1.0"

[[projects]]
  digest = "1:688428eeb1ca80d92599eb3254bdf91b51d7e232fead3a73844c1f201a281e51"
  name = "github.com/spf13/pflag"
  packages = ["."]
  pruneopts = ""
  revision = "2e9d26c8c37aae03e3f9d4e90b7116f5accb7cab"
  version = "v1.0.5"

[[projects]]
  digest = "1:ede5f300103cb012aafde77c692dc853c4b590bb412d3c7965a11748a5c37635"
  name = "github.com/spf13/viper"
  packages = ["."]
  pruneopts = ""
  revision = "eabbc68a3ecd5cf8c11a2f84dbda5e7a38493b2f"
  version = "v1.6.1"

[[projects]]
  digest = "1:f7b541897bcde05a04a044c342ddc7425aab7e331f37b47fbb486cd16324b48e"
  name = "github.com/stretchr/testify"
  packages = ["assert"]
  pruneopts = ""
  revision = "221dbe5ed46703ee255b1da0dec05086f5035f62"
  version = "v1.4.0"

[[projects]]
  digest = "1:e818a738c880c5571b3817e9173add5c598a90f8615fa7a9bafc23fea774a603"
  name = "github.com/subosito/gotenv"
  packages = ["."]
  pruneopts = ""
  revision = "2ef7124db659d49edac6aa459693a15ae36c671a"
  version = "v1.2.0"

[[projects]]
  branch = "master"
  digest = "1:5372ed388f189f6204f1864a2bae1ce9bbdf33f47528ffc776d31a649e3978aa"
  name = "github.com/xeipuuv/gojsonpointer"
  packages = ["."]
  pruneopts = ""
  revision = "02993c407bfbf5f6dae44c4f4b1cf6a39b5fc5bb"

[[projects]]
  branch = "master"
  digest = "1:604f98a38394d2805a78c462396a4992b93fdd5b7306130add330f1a99ac6b0a"
  name = "github.com/xeipuuv/gojsonreference"
  packages = ["."]
  pruneopts = ""
  revision = "bd5ef7bd5415a7ac448318e64f11a24cd21e594b"

[[projects]]
  digest = "1:d8392d33ffa61de4bbc62ca31af50f80a64e416ae132fb14709a4222a9cd326f"
  name = "github.com/xeipuuv/gojsonschema"
  packages = ["."]
  pruneopts = ""
  revision = "82fcdeb203eb6ab2a67d0a623d9c19e5e5a64927"
  version = "v1.2.0"

[[projects]]
  branch = "master"
  digest = "1:cab37ea831bb9be343b41a7673e64b6bb8399bc0f051180c04ce561573ed2c89"
  name = "golang.org/x/net"
  packages = [
    "context",
    "context/ctxhttp",
    "html",
    "html/atom",
    "html/charset",
    "idna",
    "publicsuffix",
  ]
  pruneopts = ""
  revision = "c0dbc17a35534bf2e581d7a942408dc936316da4"

[[projects]]
  branch = "master"
  digest = "1:571c7f844acf3c916ac5997f82f227c49a38490f1fca65afd47d64d188ced96e"
  name = "golang.org/x/oauth2"
  packages = [
    ".",
    "clientcredentials",
    "internal",
  ]
  pruneopts = ""
  revision = "bf48bf16ab8d622ce64ec6ce98d2c98f916b6303"

[[projects]]
  branch = "master"
  digest = "1:ca984d839d46cda7860ac472476ef53423d8be07f19822f59a7c575127f995be"
  name = "golang.org/x/sys"
  packages = ["unix"]
  pruneopts = ""
  revision = "548cf772de5052aa878ccb47cdeb7d262b75c8ec"

[[projects]]
  digest = "1:740b51a55815493a8d0f2b1e0d0ae48fe48953bf7eaf3fcc4198823bf67768c0"
  name = "golang.org/x/text"
  packages = [
    "collate",
    "collate/build",
    "encoding",
    "encoding/charmap",
    "encoding/htmlindex",
    "encoding/internal",
    "encoding/internal/identifier",
    "encoding/japanese",
    "encoding/korean",
    "encoding/simplifiedchinese",
    "encoding/traditionalchinese",
    "encoding/unicode",
    "internal/colltab",
    "internal/gen",
    "internal/language",
    "internal/language/compact",
    "internal/tag",
    "internal/triegen",
    "internal/ucd",
    "internal/utf8internal",
    "language",
    "runes",
    "secure/bidirule",
    "transform",
    "unicode/bidi",
    "unicode/cldr",
    "unicode/norm",
    "unicode/rangetable",
  ]
  pruneopts = ""
  revision = "342b2e1fbaa52c93f31447ad2c6abc048c63e475"
  version = "v0.3.2"

[[projects]]
  branch = "master"
  digest = "1:9d4ac09a835404ae9306c6e1493cf800ecbb0f3f828f4333b3e055de4c962eea"
  name = "golang.org/x/xerrors"
  packages = [
    ".",
    "internal",
  ]
  pruneopts = ""
  revision = "9bdfabe68543c54f90421aeb9a60ef8061b5b544"

[[projects]]
  digest = "1:c4404231035fad619a12f82ae3f0f8f9edc1cc7f34e7edad7a28ccac5336cc96"
  name = "google.golang.org/appengine"
  packages = [
    "internal",
    "internal/base",
    "internal/datastore",
    "internal/log",
    "internal/remote_api",
    "internal/urlfetch",
    "urlfetch",
  ]
  pruneopts = ""
  revision = "971852bfffca25b069c31162ae8f247a3dba083b"
  version = "v1.6.5"

[[projects]]
  digest = "1:eb53021a8aa3f599d29c7102e65026242bdedce998a54837dc67f14b6a97c5fd"
  name = "gopkg.in/fsnotify.v1"
  packages = ["."]
  pruneopts = ""
  revision = "c2828203cd70a50dcccfb2761f8b1f8ceef9a8e9"
  source = "gopkg.in/fsnotify/fsnotify.v1"
  version = "v1.4.7"

[[projects]]
  digest = "1:a4b477a58cba8512494a4cacd5c1beb61c17ac04599da9910cac40a413686449"
  name = "gopkg.in/go-playground/validator.v9"
  packages = ["."]
  pruneopts = ""
  revision = "21c910fc6d9c3556c28252b04beb17de0c2d40ec"
  version = "v9.31.0"

[[projects]]
  digest = "1:1582dd711e6e5ef92d6245a5dd0646da19d0d0acb94ea615d43896b7b6c6620b"
  name = "gopkg.in/guregu/null.v3"
  packages = ["."]
  pruneopts = ""
  revision = "80515d440932108546bcade467bb7d6968e812e2"
  version = "v3.4.0"

[[projects]]
  digest = "1:d68a26e5d4ba1d9213041aad76d2d6b6d68dba853ceb585235311bd86748e473"
  name = "gopkg.in/ini.v1"
  packages = ["."]
  pruneopts = ""
  revision = "94291fffe2b14f4632ec0e67c1bfecfc1287a168"
  version = "v1.51.1"

[[projects]]
  digest = "1:18cf9da58ba71892aafe711980c732f07c5074c51beaa286b804b6f59f49f768"
  name = "gopkg.in/testfixtures.v2"
  packages = ["."]
  pruneopts = ""
  revision = "572ce0c218ae72aea460616fc9d7c5c81d76e458"
  version = "v2.6.0"

[[projects]]
  branch = "v1"
  digest = "1:a96d16bd088460f2e0685d46c39bcf1208ba46e0a977be2df49864ec7da447dd"
  name = "gopkg.in/tomb.v1"
  packages = ["."]
  pruneopts = ""
  revision = "dd632973f1e7218eb1089048e0798ec9ae7dceb8"

[[projects]]
  digest = "1:5a53f6ef09fb1ac261a97f8a72e8837ff53cbaa969022a6679da210e4cbe9b0f"
  name = "gopkg.in/yaml.v2"
  packages = ["."]
  pruneopts = ""
  revision = "1f64d6156d11335c3f22d9330b0ad14fc1e789ce"
  version = "v2.2.7"

[[projects]]
  digest = "1:a007311f74ec15ad1c56672245793e98e67566e78a0bee8b575f9856a8d5299a"
  name = "moul.io/http2curl"
  packages = ["."]
  pruneopts = ""
  revision = "5cd742060b0e0de91f875277b77dd7d7e68b23ca"
  version = "v2"

[solve-meta]
  analyzer-name = "dep"
  analyzer-version = 1
  input-imports = [
    "github.com/BurntSushi/toml",
    "github.com/NYTimes/gziphandler",
    "github.com/asaskevich/govalidator",
    "github.com/aws/aws-lambda-go/events",
    "github.com/aws/aws-lambda-go/lambda",
    "github.com/aws/aws-sdk-go/aws",
    "github.com/aws/aws-sdk-go/aws/awserr",
    "github.com/aws/aws-sdk-go/aws/session",
    "github.com/aws/aws-sdk-go/service/cloudwatch",
    "github.com/aws/aws-sdk-go/service/kms",
    "github.com/aws/aws-sdk-go/service/s3",
    "github.com/aws/aws-sdk-go/service/s3/s3manager",
    "github.com/bxcodec/faker",
    "github.com/dgrijalva/jwt-go",
    "github.com/durmaze/gobank",
    "github.com/durmaze/gobank/predicates",
    "github.com/durmaze/gobank/responses",
    "github.com/go-chi/chi",
    "github.com/go-chi/chi/middleware",
    "github.com/go-chi/cors",
    "github.com/golang/mock/gomock",
    "github.com/google/uuid",
    "github.com/jmoiron/sqlx",
    "github.com/lib/pq",
    "github.com/onsi/ginkgo",
    "github.com/onsi/ginkgo/extensions/table",
    "github.com/onsi/gomega",
    "github.com/onsi/gomega/gstruct",
    "github.com/pkg/errors",
    "github.com/sirupsen/logrus",
    "github.com/spf13/viper",
    "github.com/stretchr/testify/assert",
    "github.com/xeipuuv/gojsonschema",
    "gopkg.in/go-playground/validator.v9",
    "gopkg.in/guregu/null.v3",
    "gopkg.in/testfixtures.v2",
  ]
  solver-name = "gps-cdcl"
  solver-version = 1
```


---

If applicable, please append the `--debug` flag on your command and include the output here **ensuring to remove any sensitive/personal details or tokens.
- node -v
v10.18.0
- npm -v
6.13.4
- snyk -v
1.278.0
- Command run:
snyk test


### Expected behaviour
This maven project uses a pattern of embeddeding a  [maven wrapper](https://www.baeldung.com/maven-wrapper) pinned at a specific version in the repo instead of trusting each user to have mvn installed.  THis is dues a history of sharp API breaking changes in maven's life.  This is especially popular in the Spring community.

So instead of `mvn test` etc, we (or our CI) runs `./mwn test` etc.   Any everyone and all our machines work the same way ...  Dig?

I would expect a way to instruct snyk to use the same maven the rest of my build process does.

### Actual behaviour
`/bin/sh: 1: mvn: not found`



### Steps to reproduce

Run `snyk test` on a Maven project using the [maven wrapper](https://www.baeldung.com/maven-wrapper)

---

If applicable, please append the `--debug` flag on your command and include the output here **ensuring to remove any sensitive/personal details or tokens.


- [X] Ready for review
- [X] Follows [CONTRIBUTING](https://github.com/snyk/snyk/blob/master/.github/CONTRIBUTING.md) rules
- [ ] Reviewed by Snyk internal team

#### What does this PR do?
Ignore directories when using --all-projects.
Added tests for test and monitor with --exclude.

#### How should this be manually tested?
snyk test --all-projects --detection-depth=2 --exclude=...

#### What are the relevant tickets?
BST-1126

- [ ] Ready for review
- [ ] Follows [CONTRIBUTING](https://github.com/snyk/snyk/blob/master/.github/CONTRIBUTING.md) rules
- [ ] Reviewed by Snyk internal team

#### What does this PR do?
Fix for issue where snyk gets added as a dependency whenever there are version updates to anything in package.json.
- `node -v`: v12.13.1
- `npm -v`: 6.13.2
- `snyk -v`: 1.269.0. Upgraded to 1.272.0 and the problem persists
- Command run: `snyk wizard`

### Expected behaviour
Run snyk wizard using globally installed snyk, but not add snyk as a local project dependency

### Actual behaviour
snyk is added to `dependencies` in package.json. 

It also doesn't seem to apply the patch it says it will, and the .snyk file appears stuck in an old state, as follows:
```
# Snyk (https://snyk.io) policy file, patches or ignores known vulnerabilities.
version: v1.13.5
# ignores vulnerabilities until expiry date; change duration by modifying expiry date
ignore:
  SNYK-JS-AUTOLINKER-73494:
    - autolinker:
        reason: None given
        expires: '2019-02-21T18:08:23.436Z'
  'npm:mem:20180117':
    - showdown > yargs > os-locale > mem:
        reason: no fix available
        expires: '2019-12-25T11:40:57.014Z'
  SNYK-JS-AXIOS-174505:
    - googleapis > google-auth-library > axios:
        reason: breaking changes in v37
        expires: '2019-06-30T10:32:53.965Z'
    - googleapis > google-auth-library > gcp-metadata > axios:
        reason: breaking changes in v37
        expires: '2019-06-30T10:32:53.965Z'
  SNYK-JS-HTTPSPROXYAGENT-469131:
    - googleapis > google-auth-library > gtoken > gaxios > https-proxy-agent:
        reason: no fix available
        expires: '2019-12-25T12:02:02.294Z'
    - snyk > proxy-agent > pac-proxy-agent > https-proxy-agent:
        reason: None given
        expires: '2019-11-21T12:24:46.045Z'
    - snyk > proxy-agent > https-proxy-agent:
        reason: None given
        expires: '2019-11-21T12:24:46.045Z'
  SNYK-JS-SHOWDOWN-469487:
    - showdown:
        reason: no remediation available
        expires: '2019-11-21T12:20:45.283Z'
SNYK-JS-HTTPSPROXYAGENT-469131:
  - googleapis > google-auth-library > gtoken > gaxios > https-proxy-agent:
      reason: breaking changes in v37
      expires: '2020-01-12T12:05:10.000Z'
# patches apply the minimum changes required to fix a vulnerability
patch:
  SNYK-JS-LODASH-450202:
    - '@financial-times/biz-ops-schema > lodash':
        patched: '2019-07-08T13:03:18.462Z'
    - elasticsearch > lodash:
        patched: '2019-07-08T13:03:18.462Z'
    - archiver > async > lodash:
        patched: '2019-07-08T13:03:18.462Z'
    - lodash:
        patched: '2019-07-08T13:03:18.462Z'
    - snyk > snyk-config > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > snyk-mvn-plugin > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > snyk-go-plugin > graphlib > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > snyk-nodejs-lockfile-parser > graphlib > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > snyk-php-plugin > @snyk/composer-lockfile-parser > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > @snyk/dep-graph > graphlib > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > snyk-nodejs-lockfile-parser > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > @snyk/dep-graph > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > snyk-nuget-plugin > lodash:
        patched: '2019-07-08T13:08:55.850Z'
    - snyk > inquirer > lodash:
        patched: '2019-07-08T13:08:55.850Z'
  SNYK-JS-HTTPSPROXYAGENT-469131:
    - googleapis > google-auth-library > gtoken > gaxios > https-proxy-agent:
        patched: '2019-11-25T12:00:35.593Z'
```

### Steps to reproduce
Run snyk wizard in a project without snyk as a local dependency. Choose dfault at each stage of the wizard

---

```
$ snyk wizard --debug
  snyk wizard { _: [ [Circular] ], debug: true } +0ms
  snyk ~~~~ LIVE RUN ~~~~ +0ms
  snyk sending request to: https://snyk.io/api/v1/verify/token +0ms
  snyk request body size: 46 +0ms
  snyk gzipped request body size: 66 +1ms
  snyk not using proxy +0ms
  snyk not using proxy +740ms

Snyk's wizard will:

  * Enumerate your local dependencies and query Snyk's servers for vulnerabilities
  * Guide you through fixing found vulnerabilities
  * Create a .snyk policy file to guide snyk commands such as `test` and `protect`
  * Remember your dependencies to alert you when new vulnerabilities are disclosed

? Existing .snyk policy found. Ignore it and start from scratch [y] or update it [N]? No
Analyzing npm dependencies for /Users/wheresrhys/Projects/biz-ops-runbooks
  snyk policies found [ncies for biz-ops-runbooks project dir
  '/Users/wheresrhys/Projects/biz-ops-runbooks',
  '/Users/wheresrhys/Projects/biz-ops-runbooks/node_modules/serverless-offline-sts'
] +0ms
  snyk converting dep-tree to dep-graph { name: 'biz-ops-runbooks', targetFile: 'package-lock.json' } +106ms
  snyk done converting dep-tree to dep-graph { uniquePkgsCount: 292 } +74ms
Analyzing npm dependencies for biz-ops-runbooks project dir
  snyk sending request to: https://snyk.io/api/v1/test-dep-graph +46s
  snyk request body size: 57158 +0ms
  snyk gzipped request body size: 9350 +0ms
  snyk not using proxy +4ms
Querying vulnerabilities database...
Tested 291 dependencies for known vulnerabilities, found 1 vulnerability, 1 vulnerable path.
  snyk starting questions +50s
  snyk getUpdatePrompts +0ms

  snyk final show SNYK-JS-HTTPSPROXYAGENT-469131 when {
  when: [Function: when],
  name: 'SNYK-JS-HTTPSPROXYAGENT-469131-u0',
  type: 'list',
  message: '\u001b[1m\u001b[33m✗ Medium severity vuln found in https-proxy-agent@2.2.2, introduced via googleapis@27.0.0\u001b[39m\u001b[22m\n' +
    '    Description: Man-in-the-Middle (MitM)\n' +
    '    Info: \u001b[4mhttps://snyk.io\u001b[24m\u001b[4m/vuln/SNYK-JS-HTTPSPROXYAGENT-469131\u001b[24m\n' +
    '    From: googleapis@27.0.0 > google-auth-library@1.6.1 > gtoken@2.3.3 > gaxios@1.8.4 > https-proxy-agent@2.2.2\n' +
    '\u001b[32m\u001b[39m\n' +
    '\u001b[32m  Remediation options\u001b[39m',
  patches: [Object],
  default: 0,
  choices: [Array],
  vuln: [Object]
} +11ms
? ✗ Medium severity vuln found in https-proxy-agent@2.2.2, introduced via googleapis@27.0.0
    Description: Man-in-the-Middle (MitM)
    Info: https://snyk.io/vuln/SNYK-JS-HTTPSPROXYAGENT-469131
    From: googleapis@27.0.0 > google-auth-library@1.6.1 > gtoken@2.3.3 > gaxios@1.8.4 > https-proxy-agent@2.2.2

  Remediation options Re-install googleapis@27.0.0
  snyk getPatchPrompts +34s
  snyk getIgnorePrompts +3ms
? Add `snyk test` to package.json file to fail test on newly disclosed vulnerabilities?
This will require authentication via `snyk auth` when running tests. No
  snyk {
  snyk   ignore: [],
  snyk   update: [
  snyk     {
  snyk       CVSSv3: 'CVSS:3.0/AV:A/AC:H/PR:N/UI:N/S:C/C:H/I:N/A:N/E:P/RL:U/RC:C',
  snyk       alternativeIds: [],
  snyk       creationTime: '2019-09-26T10:01:07.677036Z',
  snyk       cvssScore: 6.1,
  snyk       disclosureTime: '2019-09-25T08:21:57Z',
  snyk       exploit: 'Proof of Concept',
  snyk       fixedIn: [Array],
  snyk       functions: [],
  snyk       functions_new: [],
  snyk       id: 'SNYK-JS-HTTPSPROXYAGENT-469131',
  snyk       identifiers: [Object],
  snyk       language: 'js',
  snyk       modificationTime: '2019-10-23T09:58:05.142531Z',
  snyk       moduleName: 'https-proxy-agent',
  snyk       packageManager: 'npm',
  snyk       packageName: 'https-proxy-agent',
  snyk       patches: [Array],
  snyk       publicationTime: '2019-10-02T08:08:11Z',
  snyk       references: [Array],
  snyk       semver: [Object],
  snyk       severity: 'medium',
  snyk       title: 'Man-in-the-Middle (MitM)',
  snyk       from: [Array],
  snyk       upgradePath: [Array],
  snyk       isUpgradable: true,
  snyk       isPatchable: true,
  snyk       name: 'https-proxy-agent',
  snyk       version: '2.2.2',
  snyk       nearestFixedInVersion: undefined,
  snyk       __filename: '/Users/wheresrhys/Projects/biz-ops-runbooks/node_modules/https-proxy-agent/package.json',
  snyk       shrinkwrap: undefined,
  snyk       bundled: undefined,
  snyk       parentDepType: 'prod'
  snyk     }
  snyk   ],
  snyk   patch: [],
  snyk   skip: []
  snyk } +38s
  snyk to upgrade { prod: [ 'googleapis@27.0.0' ] } +0ms
  snyk to uninstall [ 'googleapis' ] +0ms
  snyk /Users/wheresrhys/Projects/biz-ops-runbooks$ npm uninstall --save googleapis +0ms
  snyk npm uninstall --save complete +12s
  snyk /Users/wheresrhys/Projects/biz-ops-runbooks$ npm install --save googleapis@27.0.0 +3ms
  snyk npm install --save complete +22s
Applying updates using npm...
  snyk {
  snyk   "version": "v1.13.5",
  snyk   "ignore": {
  snyk     "SNYK-JS-AUTOLINKER-73494": [
  snyk       {
  snyk         "autolinker": {
  snyk           "reason": "None given",
  snyk           "expires": "2019-02-21T18:08:23.436Z"
  snyk         }
  snyk       }
  snyk     ],
  snyk     "npm:mem:20180117": [
  snyk       {
  snyk         "showdown > yargs > os-locale > mem": {
  snyk           "reason": "no fix available",
  snyk           "expires": "2019-12-25T11:40:57.014Z"
  snyk         }
  snyk       }
  snyk     ],
  snyk     "SNYK-JS-AXIOS-174505": [
  snyk       {
  snyk         "googleapis > google-auth-library > axios": {
  snyk           "reason": "breaking changes in v37",
  snyk           "expires": "2019-06-30T10:32:53.965Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "googleapis > google-auth-library > gcp-metadata > axios": {
  snyk           "reason": "breaking changes in v37",
  snyk           "expires": "2019-06-30T10:32:53.965Z"
  snyk         }
  snyk       }
  snyk     ],
  snyk     "SNYK-JS-HTTPSPROXYAGENT-469131": [
  snyk       {
  snyk         "googleapis > google-auth-library > gtoken > gaxios > https-proxy-agent": {
  snyk           "reason": "no fix available",
  snyk           "expires": "2019-12-25T12:02:02.294Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > proxy-agent > pac-proxy-agent > https-proxy-agent": {
  snyk           "reason": "None given",
  snyk           "expires": "2019-11-21T12:24:46.045Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > proxy-agent > https-proxy-agent": {
  snyk           "reason": "None given",
  snyk           "expires": "2019-11-21T12:24:46.045Z"
  snyk         }
  snyk       }
  snyk     ],
  snyk     "SNYK-JS-SHOWDOWN-469487": [
  snyk       {
  snyk         "showdown": {
  snyk           "reason": "no remediation available",
  snyk           "expires": "2019-11-21T12:20:45.283Z"
  snyk         }
  snyk       }
  snyk     ]
  snyk   },
  snyk   "SNYK-JS-HTTPSPROXYAGENT-469131": [
  snyk     {
  snyk       "googleapis > google-auth-library > gtoken > gaxios > https-proxy-agent": {
  snyk         "reason": "breaking changes in v37",
  snyk         "expires": "2020-01-12T12:05:10.000Z"
  snyk       }
  snyk     }
  snyk   ],
  snyk   "patch": {
  snyk     "SNYK-JS-LODASH-450202": [
  snyk       {
  snyk         "@financial-times/biz-ops-schema > lodash": {
  snyk           "patched": "2019-07-08T13:03:18.462Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "elasticsearch > lodash": {
  snyk           "patched": "2019-07-08T13:03:18.462Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "archiver > async > lodash": {
  snyk           "patched": "2019-07-08T13:03:18.462Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "lodash": {
  snyk           "patched": "2019-07-08T13:03:18.462Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > snyk-config > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > snyk-mvn-plugin > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > snyk-go-plugin > graphlib > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > snyk-nodejs-lockfile-parser > graphlib > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > snyk-php-plugin > @snyk/composer-lockfile-parser > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > @snyk/dep-graph > graphlib > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > snyk-nodejs-lockfile-parser > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > @snyk/dep-graph > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > snyk-nuget-plugin > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       },
  snyk       {
  snyk         "snyk > inquirer > lodash": {
  snyk           "patched": "2019-07-08T13:08:55.850Z"
  snyk         }
  snyk       }
  snyk     ],
  snyk     "SNYK-JS-HTTPSPROXYAGENT-469131": [
  snyk       {
  snyk         "googleapis > google-auth-library > gtoken > gaxios > https-proxy-agent": {
  snyk           "patched": "2019-11-25T12:00:35.593Z"
  snyk         }
  snyk       }
  snyk     ]
  snyk   },
  snyk   "__modified": "2020-01-03T17:30:02.911Z",
  snyk   "__created": "2020-01-03T16:54:34.162Z",
  snyk   "__filename": ".snyk"
  snyk } +0ms
Saving .snyk policy file...
  snyk snyk version: 1.272.0 +34s
  snyk /Users/wheresrhys/Projects/biz-ops-runbooks$ npm install --save snyk +489ms
  snyk npm install --save complete +27s
Updating package.json...
  snyk running monitor +27s
  snyk Analyzing npm dependencies for /Users/wheresrhys/Projects/biz-ops-runbooks/package-lock.json +0ms
  snyk not using proxy +2m
  snyk Org financial-times doesn't have 'experimental-dep-graph' feature enabled +0mslock.json
  snyk sending request to: https://snyk.io/api/v1/monitor/npm +2sps-runbooks/package-lock.json
  snyk request body size: 125528 +0ms
  snyk gzipped request body size: 10035 +1ms
  snyk not using proxy +0ms
Remembering current dependencies for future notifications...

Your .snyk policy file has been successfully updated.
To review your policy, run `snyk policy`.

You can see a snapshot of your dependencies here:
https://snyk.io/org/financial-times/monitor/715eddb9-a33d-4c2c-81d0-0452ca8a1e71

We'll notify you when relevant new vulnerabilities are disclosed.


  snyk analytics {
  args: [
    {
      debug: true,
      org: null,
      ignoreDisabled: false,
      traverseNodeModules: false,
      packageManager: 'npm',
      file: 'package-lock.json',
      projectNames: [Array],
      packageLeading: '',
      packageTrailing: ''
    }
  ],
  command: 'wizard',
  org: null,
  metadata: {
    payloadSize: [ 46, 57158, 125528 ],
    gzippedPayloadSize: [ 66, 9350, 10035 ],
    'inline-auth': false,
    'start-over': false,
    local: [ true, true, true ],
    'generating-node-dependency-tree': [ [Object], [Object] ],
    pluginName: 'snyk-nodejs-lockfile-parser',
    policies: 2,
    packageManager: [ 'npm', 'npm' ],
    packageName: 'biz-ops-runbooks',
    packageVersion: '1.0.0',
    package: 'biz-ops-runbooks@1.0.0',
    depGraph: true,
    isDocker: false,
    'vulns-pre-policy': 1,
    vulns: 1,
    answers: [ [Object] ],
    'add-snyk-test': false,
    'add-snyk-protect': undefined,
    monitorGraph: true,
    targetBranch: 'upgrade'
  },
  version: '1.272.0',
  os: 'macOS Mojave',
  nodeVersion: 'v12.13.1',
  id: '035dbac64666f8557efae9562d31d8c4e6042fee',
  ci: false,
  durationMs: 160083
} +0ms
  snyk sending request to: https://snyk.io/api/v1/analytics/cli +8s
  snyk request body size: 1180 +0ms
  snyk gzipped request body size: 656 +0ms
  snyk not using proxy +0ms
- Analyzing npm dependencies for /Users/wheresrhys/Projects/biz-ops-runbooks/package-lock.json
```
- [x] Ready for review
- [x] Follows [CONTRIBUTING](https://github.com/snyk/snyk/blob/master/.github/CONTRIBUTING.md) rules
- [ ] Reviewed by Snyk internal team

#### What does this PR do?
- Setup.py support was added in the python plugin but the image doesn't install the dependencies
- Custom requirements.txt support
- Improve docs / drop repetitive examples

#### How should this be manually tested?
Check the updated README for more examples:

Build the local image from the docker dir:
```docker build -f Dockerfile.python-3  . -t snyk/snyk-cli:python-3-local```

Run on a `setup.py` project:
```
docker run -it -e "SNYK_TOKEN=*******" -e "TARGET_FILE=setup.py" -v "$PWD:/project" snyk/snyk-cli:python-3-local
``` 

### Tickets
https://github.com/snyk/snyk/issues/786
- `node -v`: 8.11.3
- `npm -v`: 5.6.0
- `snyk -v`:  1.261.0
- Command run: snyk protect

### Expected behaviour
Snyk protect runs successfully

### Actual behaviour
Snyk fails with following error:

```
> snyk protect


<--- Last few GCs --->

[71394:0x102800c00]   125259 ms: Mark-sweep 1445.9 (1592.4) -> 1445.8 (1594.4) MB, 590.2 / 0.0 ms  allocation failure GC in old space requested
[71394:0x102800c00]   125996 ms: Mark-sweep 1445.8 (1594.4) -> 1445.7 (1538.4) MB, 737.0 / 0.0 ms  last resort GC in old space requested
[71394:0x102800c00]   126860 ms: Mark-sweep 1445.7 (1538.4) -> 1445.7 (1525.9) MB, 863.1 / 0.0 ms  last resort GC in old space requested


<--- JS stacktrace --->

==== JS stack trace =========================================

Security context: 0x3625803a5879 <JSObject>
    1: fromString(aka fromString) [buffer.js:314] [bytecode=0x3625e26d1fe1 offset=164](this=0x3625a2a822d1 <undefined>,string=0x362512e79369 <Very longstring[286506116]>,encoding=0x3625803b58e9 <String[4]: utf8>)
    2: from [buffer.js:177] [bytecode=0x3625e26d1ae9 offset=11](this=0x3625c40364f1 <JSFunction Buffer (sfi = 0x3625803fc461)>,value=0x362512e79369 <Very long string[286506116]>,encodi...

FATAL ERROR: CALL_AND_RETRY_LAST Allocation failed - JavaScript heap out ofmemory
 1: node::Abort() [/usr/local/bin/node]
 2: node::FatalException(v8::Isolate*, v8::Local<v8::Value>, v8::Local<v8::Message>) [/usr/local/bin/node]
 3: v8::internal::V8::FatalProcessOutOfMemory(char const*, bool) [/usr/local/bin/node]
 4: v8::internal::Factory::NewRawTwoByteString(int, v8::internal::PretenureFlag) [/usr/local/bin/node]
 5: v8::internal::String::SlowFlatten(v8::internal::Handle<v8::internal::ConsString>, v8::internal::PretenureFlag) [/usr/local/bin/node]
 6: v8::String::WriteUtf8(char*, int, int*, int) const [/usr/local/bin/node]
 7: node::StringBytes::Write(v8::Isolate*, char*, unsigned long, v8::Local<v8::Value>, node::encoding, int*) [/usr/local/bin/node]
 8: node::Buffer::New(v8::Isolate*, v8::Local<v8::String>, node::encoding) [/usr/local/bin/node]
 9: node::Buffer::(anonymous namespace)::CreateFromString(v8::FunctionCallbackInfo<v8::Value> const&) [/usr/local/bin/node]
10: v8::internal::FunctionCallbackArguments::Call(void (*)(v8::FunctionCallbackInfo<v8::Value> const&)) [/usr/local/bin/node]
11: v8::internal::MaybeHandle<v8::internal::Object> v8::internal::(anonymous namespace)::HandleApiCallHelper<false>(v8::internal::Isolate*, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::HeapObject>, v8::internal::Handle<v8::internal::FunctionTemplateInfo>, v8::internal::Handle<v8::internal::Object>, v8::internal::BuiltinArguments) [/usr/local/bin/node]
12: v8::internal::Builtin_Impl_HandleApiCall(v8::internal::BuiltinArguments, v8::internal::Isolate*) [/usr/local/bin/node]
13: 0x1fa7108842fd
14: 0x1fa71093d1d6
✨  Done in 128.55s.
```

### Steps to reproduce

run `snyk protect`
---

If applicable, please append the `--debug` flag on your command and include the output here **ensuring to remove any sensitive/personal details or tokens.
- Command ran: `snyk auth`

### Expected Behaviour
Authenticates the use of my Snyk account with the Snyk CLI.

### Actual Behaviour
Console prints out: "Authentication failed. Please check the API token on [https://snyk.io](https://snyk.io)"

### Steps To Reproduce
npm install -g snyk
snyk auth
*Click the authenticate button the website that the command links you to.*

----------------------------

Please note that I am using the newest LTS version of NodeJS and NPM installed on a Windows 10 machine. I have already upgraded and updated all packages to make sure that the problem was not on my end or due to any packages I may have installed on my machine. Also, I already have an account on Snyk that I made previously on the website if that information is of any importance to the developers or community working on this project.

- `node -v`: v12.12.0
- `npm -v`: 6.12.1
- `snyk -v`: 1.254.0
- Command run:
`snyk test --all-sub-projects`

### Expected behaviour
Gradle project name should be picked up from `settings.gradle` or another way to provide name of the root project.

### Actual behaviour
Directory name is picked up. This is especially troublesome when running a build on a CI server (e.g. codebuild) where you do not control name of the source directory so all projects go as non-sensical names or worse still projects get overridden. 
An alternative is to provide `--project-name` but this is incompatible with `--all-sub-projects`

### Steps to reproduce
1. Have your source code in directory named '00'
2. Have gradle project name in `settings.gradle` (i.e. rootProject.name = 'awesome-api')
2. `snyk test --all-sub-projects`
3. Watch project names
4. Optionally run `snyk monitor --all-sub-projects` to see project named `00` appear on dashboard

---

If applicable, please append the `--debug` flag on your command and include the output here **ensuring to remove any sensitive/personal details or tokens.
- [X] Ready for review
- [X] Follows [CONTRIBUTING](https://github.com/snyk/snyk/blob/master/.github/CONTRIBUTING.md) rules
- [ ] Reviewed by Snyk internal team

#### What does this PR do?
Reverts calls to inspect back to synchronous operations to
avoid problems running plugins concurrently.
Keep calls to registry as asynchronous operations.

#### Any background context you want to provide?
After discussing and testing, decided running all monitor operations asynchronously could cause issues (performance, inspects interfering with one another). This change keeps registry calls asynchronous, but changes inspect calls back to synchronous.
