```W1209 14:04:14.656383 34370101248 deprecation_wrapper.py:119] From train.py:13: The name tf.placeholder is deprecated. Please use tf.compat.v1.placeholder instead.

W1209 14:04:14.659156 34370101248 deprecation_wrapper.py:119] From train.py:159: The name tf.GraphDef is deprecated. Please use tf.compat.v1.GraphDef instead.

Traceback (most recent call last):
  File "train.py", line 160, in <module>
    graph_def.ParseFromString(fileContent)
  File "/usr/local/lib/python3.6/site-packages/google/protobuf/message.py", line 187, in ParseFromString
    return self.MergeFromString(serialized)
  File "/usr/local/lib/python3.6/site-packages/google/protobuf/internal/python_message.py", line 1128, in MergeFromString
    if self._InternalParse(serialized, 0, length) != length:
  File "/usr/local/lib/python3.6/site-packages/google/protobuf/internal/python_message.py", line 1180, in InternalParse
    buffer, new_pos, wire_type)  # pylint: disable=protected-access
  File "/usr/local/lib/python3.6/site-packages/google/protobuf/internal/decoder.py", line 952, in _DecodeUnknownField
    raise _DecodeError('Wrong wire type in tag.')
google.protobuf.message.DecodeError: Wrong wire type in tag.
```

py36-tensorflow-1.14.0

thanks!!
filenames = sorted(glob.glob("../colornet/*/*.jpg")) 
File "train.py", line 179, in <module>
    colorimage = input_pipeline(filenames, batch_size, num_epochs=num_epochs)
  File "train.py", line 31, in input_pipeline
    filenames, num_epochs=num_epochs, shuffle=False)
i don't exactly know why i am facing this error.any solutions to it.



File "/home/atul/Desktop/train.py", line 196, in <module>
    pred = colornet(tensors)
  File "/home/atul/Desktop/train.py", line 67, in colornet
    conv1 = tf.nn.relu(tf.nn.conv2d(batch_norm(_tensors["conv4_3"], 512, phase_train),_tensors["weights"]["wc1"], [1, 1, 1, 1], 'SAME'))
  File "/home/atul/Desktop/train.py", line 45, in batch_norm
    x = bn.normalize(x, train=phase_train)
  File "/home/atul/Desktop/batchnorm.py", line 45, in normalize
    if train:
  File "/home/atul/.local/lib/python2.7/site-packages/tensorflow/python/framework/ops.py", line 620, in __nonzero__
    raise TypeError("Using a `tf.Tensor` as a Python `bool` is not allowed. "
TypeError: Using a `tf.Tensor` as a Python `bool` is not allowed. Use `if t is not None:` instead of `if t:` to test if a tensor is defined, and use TensorFlow ops such as tf.cond to execute subgraphs conditioned on the value of a tensor.
Does, anyone have any clue, or is there any script, so as how to test the trained model? It would be quite nice to try it on few B/W images.
Traceback (most recent call last):
  File "train.py", line 160, in <module>
    graph_def.ParseFromString(fileContent)
google.protobuf.message.DecodeError: Error parsing messag
This error info：
Traceback (most recent call last):
  File "E:\robin\ColorNet\train.py", line 131, in <module>
    grayscale = tf.concat(3, [grayscale, grayscale, grayscale])
  File "D:\ProgramFiles\Python\Python35\lib\site-packages\tensorflow\python\ops\array_ops.py", line 1029, in concat
    dtype=dtypes.int32).get_shape(
  File "D:\ProgramFiles\Python\Python35\lib\site-packages\tensorflow\python\framework\ops.py", line 639, in convert_to_tensor
    as_ref=False)
  File "D:\ProgramFiles\Python\Python35\lib\site-packages\tensorflow\python\framework\ops.py", line 704, in internal_convert_to_tensor
    ret = conversion_func(value, dtype=dtype, name=name, as_ref=as_ref)
  File "D:\ProgramFiles\Python\Python35\lib\site-packages\tensorflow\python\framework\constant_op.py", line 113, in _constant_tensor_conversion_function
    return constant(v, dtype=dtype, name=name)
  File "D:\ProgramFiles\Python\Python35\lib\site-packages\tensorflow\python\framework\constant_op.py", line 102, in constant
    tensor_util.make_tensor_proto(value, dtype=dtype, shape=shape, verify_shape=verify_shape))
  File "D:\ProgramFiles\Python\Python35\lib\site-packages\tensorflow\python\framework\tensor_util.py", line 370, in make_tensor_proto
    _AssertCompatible(values, dtype)
  File "D:\ProgramFiles\Python\Python35\lib\site-packages\tensorflow\python\framework\tensor_util.py", line 302, in _AssertCompatible
    (dtype.name, repr(mismatch), type(mismatch).__name__))
TypeError: Expected int32, got list containing Tensors of type '_Message' instead.

Anybody have meet this problem？How to solve？
I get this error when I am doing graph_def.ParseFromString(fileContent). Any ideas on why this occurs or how to correct it?
i want to know which tf version can support this code??
thanks
@pavelgonchar 
fixed error (TensorFlow 0.12.0, OS X El Capitan, python 2.7) :

> tensorflow.python.framework.errors.FailedPreconditionError: Attempting to use uninitialized value input_producer/limit_epochs/epochs
> 	 [[Node: input_producer/limit_epochs/CountUpTo = CountUpTo[T=DT_INT64, _class=["loc:@input_producer/limit_epochs/epochs"], limit=1000000000, _device="/job:localhost/replica:0/task:0/cpu:0"](input_producer/limit_epochs/epochs)]]
> 
> FailedPreconditionError (see above for traceback): Attempting to use uninitialized value input_producer/limit_epochs/epochs
> 	 [[Node: input_producer/limit_epochs/CountUpTo = CountUpTo[T=DT_INT64, _class=["loc:@input_producer/limit_epochs/epochs"], limit=1000000000, _device="/job:localhost/replica:0/task:0/cpu:0"](input_producer/limit_epochs/epochs)]]
> 