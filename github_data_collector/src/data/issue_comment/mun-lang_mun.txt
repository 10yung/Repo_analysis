Depends on #82 
Temporary fix for Windows, as long as we are using `malloc`.
- [ ] claim this issue (assign yourself or comment below)
- [ ] [setup repository on your local machine](https://github.com/mun-lang/mun) and make sure all tests pass (`cargo test`)
- [ ] read our [contributing guidelines](https://github.com/mun-lang/mun/blob/master/CONTRIBUTING.md)
- [ ] add a framework (I've been looking at [criterion](https://github.com/bheisler/criterion.rs) but you're free to use whatever) to benchmark Mun code and add regression tests
- [ ] start a Pull Request. Set description to `closes #58`. If this is your first PR, welcome :tada: :smile:

This could be combined with #57
- [ ] claim this issue (assign yourself or comment below)
- [ ] [setup repository on your local machine](https://github.com/mun-lang/mun) and make sure all tests pass (`cargo test`)
- [ ] read our [contributing guidelines](https://github.com/mun-lang/mun/blob/master/CONTRIBUTING.md)
- [ ] add a framework (I've been looking at [criterion](https://github.com/bheisler/criterion.rs) but you're free to use whatever) to benchmark compilation times and add regression tests
- [ ] start a Pull Request. Set description to `closes #57`. If this is your first PR, welcome :tada: :smile:

This could be combined with #58
**This issue requires some collaboration with the core contributors for language design**

- [ ] claim this issue (assign yourself or comment below)
- [ ] [setup repository on your local machine](https://github.com/mun-lang/mun) and make sure all tests pass (`cargo test`)
- [ ] read our [contributing guidelines](https://github.com/mun-lang/mun/blob/master/CONTRIBUTING.md)
- [ ] propose a language construct for heap-allocated variables ([join Discord](https://discord.gg/SfvvcCU) and post in the #development channel and comment below). For inspiration have a look at Rust's [`Box`](https://doc.rust-lang.org/std/boxed/struct.Box.html).
- [ ] improve and conclude your language design based on feedback
- [ ] implement heap-allocated variables
  * [ ] lexing
  * [ ] parsing
  * [ ] type checking
  * [ ] code generation
  * [ ] ABI
  * [ ] Hot reloading
- [ ] start a Pull Request. Set description to `closes #54`. If this is your first PR, welcome :tada: :smile:
- [x] claim this issue (assign yourself or comment below)
- [x] [setup repository on your local machine](https://github.com/mun-lang/mun) and make sure all tests pass (`cargo test`)
- [x] read our [contributing guidelines](https://github.com/mun-lang/mun/blob/master/CONTRIBUTING.md)
- [ ] add conversion of [`Diagnostic`](https://github.com/mun-lang/mun/blob/10909c9cca998279686a71ae05b6d284f9413f08/crates/mun_hir/src/diagnostics.rs) instances to annotated snippets using this [crate](https://crates.io/crates/annotate-snippets).
- [ ] start a Pull Request. Set description to `closes #50`. If this is your first PR, welcome :tada: :smile: