Maybe I'm missing something from the documentation, should it inject dependencies automatically?

Before object creation I setup default injector, create object by calling init, but it's dependencies show up only when I manually `injectDependencies:`.
This object is created by `bindBlock:toClass:` if that matters.

Is it the way it should be?
I've discovered that this feature was partially implemented.
As the result, bindings from one injector was not available to the others.

My problem explained here: https://stackoverflow.com/questions/45587406/jsobjectionscopesingleton-is-partially-broken-in-objection-framework?noredirect=1#comment78133843_45587406

With my fixes the global context has bindings from any of created injectors.
I've discovered that this feature was partially implemented.
As the result, bindings from one injector was not available to the others.

My problem explained here: https://stackoverflow.com/questions/45587406/jsobjectionscopesingleton-is-partially-broken-in-objection-framework?noredirect=1#comment78133843_45587406

With my fixes the global context has bindings from any of created injectors.
This pull request corrects the capitalization of **Xcode** :sweat_smile:
https://developer.apple.com/xcode/

Created with [`xcode-readme`](https://github.com/dkhamsing/xcode-readme).

Typhoon supports injecting non-object properties. https://github.com/appsquickly/Typhoon/wiki/wrap-primitive-values-into-NSValue

I consider it highly desirable to be able to apply injection to primitive properties. Even if you still need to wrap primitives into objects during registration, it would preserve the simplicity of implementation in the classes and keep them pure.

allow use of Objection in targets with 

```
    platform :watchos, '2.0'
```


On fresh install of 1.6.1 version of Objection I'm getting 2 Undeclared selector warnings:
@selector(objectionRequires)
@selector(objectionInitializer)

After each install I'm adding this ignore statement for the files which produce this warnings:
# pragma GCC diagnostic ignored "-Wundeclared-selector"

But would be great if that would come out of the box.

In file "JSObjectionEntry.h"
`@property (nonatomic, assign) JSObjectionInjector *injector;`

