http://modernizr.com/ is down 

Quick note here as I don't have time to write this up into a proper PR yet.

[Hyperlink auditing](https://html.spec.whatwg.org/multipage/links.html#hyperlink-auditing) allows for a parallel background request to be made on a hyperlink click, often used for tracking and click-detection. It is currently not supported by modernizr.

According to [this SO post](https://stackoverflow.com/questions/57608000/feature-detection-of-a-ping-hyperlink-auditing), the expression:

    "ping" in HTMLAnchorElement.prototype

will return `true` if the feature is supported, `false` otherwise. Empirically, we find this to be true.
I'm not sure if this is the expected behavior or if I am simply misunderstanding something. The `mq` function is defined as follows in 3.8.0:

```
var mq = (function() {
    var e = window.matchMedia || window.msMatchMedia;
    return e
      ? function(t) {
          var r = e(t);
          return (r && r.matches) || !1;
        }
      : function(e) {
          var t = !1;
          return (
            injectElementWithStyles(
              '@media ' + e + ' { #modernizr { position: absolute; } }',
              function(e) {
                t =
                  'absolute' ===
                  (window.getComputedStyle ? window.getComputedStyle(e, null) : e.currentStyle)
                    .position;
              }
            ),
            t
          );
        };
  })();
```
On the 6th line in the snippet above, it seems like the function is checking whether or not the document matches the MediaQueryList. For example, on phones, it is expected that `matchmedia('(hover: hover)')` would give `matches: false` because there is no pointer mechanism that would allow hovering.

But is this testing the right thing? Even the official description says:
> Detect support for Hover based media queries

If the result of `matches` is `false` the query itself is actually *supported*, but device or browser does not meet the condition in said query.

I was expecting the test to check if the `media` property is `not all` which means that the browser does not understand the query itself. From w3.org:

> **Unknown media features.** User agents are to represent a media query as "not all" when one of the specified media features is not known.

Isn't this a bug?
I managed to deploy an updated version of the webpage to new.modernizr.com since @patrickkettner doesnt seem to have time (or doesnt get any email anymore) for updating the old one. Maybe this gets the train rolling again...

Any idea on how to go onward with the page would be highly appreciated...

Fixes https://github.com/Modernizr/modernizr-neue/issues/140 and https://github.com/Modernizr/modernizr-neue/issues/141
Providing support to test if openDatabase driver is virtually removed.
In some cases users would like to test what if openDatabase driver doesn't support by setting openDatabase to null. In this case the test application/method will fail to use openDatabase driver and Modernizr must behave same.

Signed-off-by: ossdev07 <ossdev@puresoftware.com>
Im trying to get a fallback for object-fit working but in all browsers I get not supported in the console from the simplest bit of code.

```javascript
if (Modernizr.objectfit) {
    console.log('supported');
} else {
    console.log('not supported');
}
```

Im using the latest version of Modernizr... 3.6.0
Modernizr detects all versions of Edge as supporting css position sticky despite partial support: https://caniuse.com/#search=sticky

If sticky is used on elements other than `th`, there is a known big with Edge which causes a flicker effect upon scroll.
I really likes Modernizr library, thanks everyone to make it excellent.

I am requesting a new feature detection in Modernizr.
According to [CSS Align 3 specs](https://www.w3.org/TR/css-align-3/#gaps) the gap property, and its row-gap and column-gap sub-properties, are being extended to Flex layout as well.
As of today only [Firefox 63+](https://developer.mozilla.org/en-US/docs/Web/CSS/gap#Support_in_Flex_layout) supports gap properties for flex box.
I don't see any feature detection in Modernizr for it, would it be helpful if we add it ?


Line 42 and 43 of `/lib/build.js` says:

```JavScript
// remove last return statement and trailing })
contents = contents.replace(/return.*[^return]*$/, '');
```

[lgtm spotted a duplicate r](https://lgtm.com/projects/g/Modernizr/Modernizr/snapshot/8b121bd16ccc619bef5060e78eccb6420c4e7b87/files/lib/build.js?sort=name&dir=ASC&mode=heatmap) inside `[^return]`.

Should the lines be like this instead?

```JavaScript
// remove last return statement and trailing })
contents = contents.replace(/return.*([^r][^e][^t][^u][^r][^n])+$/, '');
```

Completely not tested AV1 detection code.

Possible problems:
- AV1 can be contained by a lot of containers .mkv `video/x-matroska`, webm `video/webm`, .mp4 `video/mp4` and not sure if any other, research is required. Right now is only being tested for .mp4.
- AV1.1 could be a problem, not completely sure.

It simply needs some research and testing ðŸ™ƒ 