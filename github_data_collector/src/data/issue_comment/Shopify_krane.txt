**What are you trying to accomplish with this PR?**
Allow compatibility with `fog-google` and recent `google-api-client` gems that require a newer version of `googleauth`

**How is this accomplished?**

Relax version dependency in gemspec 

**What could go wrong?**

New `googleauth` could break google functionality in krane, which is actually functionality in `kubeclient`.  I don't see anything breaking in the changelog here: https://github.com/googleapis/google-auth-library-ruby/blob/master/CHANGELOG.md , but, I'm not familiar enough with krane's test suite to say if the `kubeclient` bits that use `googleauth` are implicitly tested anywhere. So, what do y'all think? 
When reading the usage of `krane run` in the `README.md`, I noticed the `--template` option was documented as being optional.

This doesn't match the current behaviour of `krane run`:

```
$ krane run
No value provided for required options '--template'
```

After chatting with @dturn, it sounds like this was a typo in the `README.md`, hence this PR. üòÑ 
**What are you trying to accomplish with this PR?**
Release v1.1.1

**How is this accomplished?**
Follow the steps in https://github.com/Shopify/krane/blob/master/CONTRIBUTING.md#ci-external-contributors

Also grab commits  #662  

**What could go wrong?**
Missed something in the change lot.
Code that got merged was bad.

**What are you trying to accomplish with this PR?**

Do not use `deprecated` fields of k8s Events api.

**How is this accomplished?**

This PR just removes code that was added to handle a situation where `count` and `lastTimestamp` k8s fields where not available locally when running tests.

After investigation with Danny, seems the problem happens when you have a `minikube` cluster  with incompatible `client` and `server`, which was my case:

```bash
¬ª kubectl --context minikube version                                                                               
Client Version: version.Info{Major:"1", Minor:"13+", GitVersion:"v1.13.11-dispatcher", GitCommit:"2e298c7e992f83f47af60cf4830b11c7370f6668", GitTreeState:"clean", BuildDate:"2019-09-19T22:26:40Z", GoVersion:"go1.11.13", Compiler:"gc", Platform:"darwin/amd64"}
Server Version: version.Info{Major:"1", Minor:"16", GitVersion:"v1.16.2", GitCommit:"c97fe5036ef3df2967d086711e6c0c405941e14b", GitTreeState:"clean", BuildDate:"2019-10-15T19:09:08Z", GoVersion:"go1.12.10", Compiler:"gc", Platform:"linux/amd64"}
``` 

**Update:** Actually, the real cause is that `Kubernetes 1.16.2` is affected by a bug as described [here](https://github.com/Shopify/krane/pull/666#issuecomment-575798448).

Which caused this:

<img width="1228" alt="Screen Shot 2020-01-16 at 4 22 13 PM" src="https://user-images.githubusercontent.com/411301/72563793-6a600800-387c-11ea-9185-9f4facdfeeb8.png">


To fix it, I deleted my local cluster with `minikube delete` and recreated one with `dev up`, which gave me this:

```bash
¬ª kubectl --context minikube version                                                                               
Client Version: version.Info{Major:"1", Minor:"13+", GitVersion:"v1.13.11-dispatcher", GitCommit:"2e298c7e992f83f47af60cf4830b11c7370f6668", GitTreeState:"clean", BuildDate:"2019-09-19T22:26:40Z", GoVersion:"go1.11.13", Compiler:"gc", Platform:"darwin/amd64"}
Server Version: version.Info{Major:"1", Minor:"11", GitVersion:"v1.11.10", GitCommit:"7a578febe155a7366767abce40d8a16795a96371", GitTreeState:"clean", BuildDate:"2019-05-01T04:05:01Z", GoVersion:"go1.10.8", Compiler:"gc", Platform:"linux/amd64"}
```

Which made the test pass üëç 

<img width="1227" alt="Screen Shot 2020-01-16 at 4 25 43 PM" src="https://user-images.githubusercontent.com/411301/72564030-e22e3280-387c-11ea-8bab-3cdc84850545.png">

**What could go wrong?**

I can't think of any problem as our tests are running in `buildkite` and locally, but it should be easier to revert if we bump into a new problem.

**What are you trying to accomplish with this PR?**
Makes it easier to install in apps that have other versions of googleauth

**How is this accomplished?**
Relax googleauth version to be greater than or equal to the version it used to require

**What could go wrong?**
Deployments fail if there's a new version of googleauth with a breaking change (any version of 0.x does not have any compatibility promises according to semver)

<sup><small>1</small></sup> <sub>Helm is already well established in the community and has a wealth of prebuilt packages. It would be great if krane could be used with helm so that you use helm to install your software but use krane to determine the success of the rollout.</sub>

### Why upgrade Thor?

The update to Thor contains 2 desirable changes:
__1.__ [Accept `-` as an argument, not a flag](https://github.com/erikhuda/thor/pull/691)
__2.__ [Allow options to be repeatable](https://github.com/erikhuda/thor/pull/674)

__1__ will allow us to deprecate the `--stdin` flag in favour of allowing `-` to be passed as an argument to `-f`
__2__ allows a closer semblance to `kubectl` semantics by allowing flags to be repeated in a given invocation

### TODO

- [ ] Flesh out CLI tests


**What are you trying to accomplish with this PR?**

Make it safer and easier to write tests that modify the global namespace.

Related to https://github.com/Shopify/krane/issues/637.

**How is this accomplished?**

- [x] Make `deploy_global_fixtures` automatically rescope all resources correctly, including CRDs.
- [x] Make the test suite automatically clean up everything deployed by `deploy_global_fixtures` _after_ the test is finished (the same time we clean up namespaces).
- [x] Get rid of all usage of `deploy_global_fixtures_non_namespaced` and the `clean_up: false` option on `global_deploy_dirs_without_profiling`
- [x] Scope all CRD name fields to the test to make them truly unique. Adjust a boatload of tests.
- [x] Move any tests that are now concurrency-safe out of the serial test file and make sure the reasons the others can't move are well documented.

Note that unfortunately any test that creates CRDs still isn't concurrency-safe, because it effectively changes our dynamic pruning whitelist. If a CRD is removed in the middle of a namespaced deploy, that deploy will fail with an `apply` error because the pruning whitelist will reference a non-existent kind. That said, CRD tests are still improved by this PR in that the suite now cleans up after them properly with no additional effort on the test writer's part, and we no longer need to wait for the CRDs to fully go away between tests because they are actually unique (and won't interfere with each other).

**What could go wrong?**
Tests could be invalidated or become flakey.

**What are you trying to accomplish with this PR?**

Fix the pipeline setting in https://github.com/Shopify/krane/pull/651

space alignment is wrong in last PR üò≠ , but good news is our shipit CI build is able to recognize these two pipelines



**What are you trying to accomplish with this PR?**

Fixes #395 for good.

**How is this accomplished?**
* We know that kubectl is returning utf-8 encoded strings, so if Ruby has interpreted them otherwise, correct it. 
* Only do the gsub when we're going to use the result.

**What could go wrong?**
* I don't have much experience working with encodings, so if this solution is weird, call me out!
