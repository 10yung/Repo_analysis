Hi all,

First off, thanks to all the contributors for this library. My engineers are really loving it and we've been using it for about a year now. I'm a designer/web dev and not super fluent with React but the engineers I have on my team have praises for this app.

We're looking for someone that can help us build a customized react-pdf viewer/editor for our application. We are maxed out in production right now and have an immediate need to ship this so figured we might find someone here that is willing and interested in earning some extra side gig cash.

Here is a preview of what we're trying to design/build:

![image](https://user-images.githubusercontent.com/3383906/71694219-bf275d00-2d6b-11ea-884c-ffbadadcddaf.png)

✅ PDF/Image viewer main screen; vertical scroll
✅ drag & drop rearrange (rearrange order)
✅ Switch view between edit and view
✅ Drag & drop upload (entire component)

We will deliver static HTML/CSS.

Expected deliverable: Customized library for PDF viewer/editor component.

If you are interested and capable, please reach out! You can respond here or send me an email: [austin@vendorpay.app](mailto:austin@vendorpay.app)
**Describe the bug**
In CSS, its valid to use `text-decoration: underline line-through` however, when using the equivalent in ReactPDF, neither are rendered.

**To Reproduce**
```
const Test = () => (
  <Document>
    <Page style={styles.body}>
      <Text style={{textDecoration: 'underline line-through'}}>
        Created with react-pdf
      </Text>
   
    </Page>
  </Document>
);
```
[Example in Repl](https://react-pdf.org/repl?code=3187b0760ce02e00402a05368c0bc30050129503e0c0a061801e0044460057016c130a1d0a24801404301cc119a013c01b04280379f411001d002310004d7805f46cd9b144003d618a1c3854049b48250009cd940096e00170c00e494c2c8427f85b0dcdc780b450005898825071f9d8292930a910030898239822c8c003b85bf8c1c5b3014378003ac8019a46a803d0683247171097b1732890979152d3d232600373e3e0018b814049c4705b40bba3093015b3505bf2f2d9d803c84325b3f2c9d800d130409b03cdf94142e44358949415f6487343985b004a8350944094832eaec89401b80230033094009a007d38001a4006a0036100003800ea202f94800aab23fb5181000d00271b00082f88921c0a767c0283a5d50240b45001121503000329d3044cbf02010fd60265f463260c9e4b6718a9726c592c9dc1c3808172b63f80158b6a2f164ac01c00108810e206a2d8a14ae298a255280048804c1600179f556f2c351014ca98258a082617142ef42675a10b60013000599d447d269f16e0e181e6c03a3e84c9b4f5f5ba53199cdec4b159acc98ee75b128fe0b47a545ea80faad7e980fdfd2197418a0118b14663719722654d43609886602d4eaf53040c00199d4eeda50a4aef74c045cc52f972b3f586d73bddf72d9abb5d2ca7a6b379a663e399818f43f5e2f31573d8dcd693dedf46f83c530c3723d1fb000ad28d00b01578edb9f26a99eef61c0162d0103780012aea6c1804789e301819c256b391097bb8108b896300769560e85e5d8f6e6a5a36bd0b84fc4388e4c0211cb8a2e39e443cef795637876847b87d940ba806544a8cfa36cdbd8b1bd06dad6a03f045bd81c1c47fa8ece98a5c0007234148f44ce469bc691586f9d86c14810080fc016083fe8c5f40bb5eb58c8fdbcabc73082014502d876510968844e4c02e5d6e1abe2d889099898664976349082c9d456c14a74f8241f13642c290dd00c74338263a06a120b009438252400000)


**Expected behavior**
Both an underline and a line through the text


**Screenshots**
![Screen Shot 2020-01-07 at 1 08 24 PM](https://user-images.githubusercontent.com/50305305/71858098-d0e37880-314e-11ea-8d12-a1efbfa6f00b.png)


Is it possible to implement a `measureText` method to the painter object for the Canvas? pdfkit has `widthOfString` method to achieve this.

When I try to register a font with Font.register() and then I try to style a Text, the document is just loading.
Even in the documentation the error occurs. When you remove fontFamily from all Text, the pdf is rendered. Am I doing something wrong?

Here is repl.it:

https://react-pdf.org/repl?example=font-register

The issue may relate to the following: #806 #796 #793 
Can someone please help me either change 
https://fonts.google.com/?subset=korean&selection.family=Noto+Sans+KR 
to a workable ttf? I have the ttf file but didn't work and gave me an error i downloaded bird font and tried to export from there but it wouldn't let me.  It'll be a really nice feature if we can use google font urls directly 
Bumps [handlebars](https://github.com/wycats/handlebars.js) from 4.1.2 to 4.5.3.
<details>
<summary>Changelog</summary>

*Sourced from [handlebars's changelog](https://github.com/wycats/handlebars.js/blob/master/release-notes.md).*

> ## v4.5.3 - November 18th, 2019
> Bugfixes:
> 
> - fix: add "no-prototype-builtins" eslint-rule and fix all occurences - f7f05d7
> - fix: add more properties required to be enumerable - 1988878
> 
> Chores / Build:
> - fix: use !== 0 instead of != 0 - c02b05f
> - add chai and dirty-chai and sinon, for cleaner test-assertions and spies, 
>   deprecate old assertion-methods  - 93e284e, 886ba86, 0817dad, 93516a0
> 
> Security:
> 
> - The properties `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` 
>   have been added to the list of "properties that must be enumerable".
>   If a property by that name is found and not enumerable on its parent, 
>   it will silently evaluate to `undefined`. This is done in both the compiled template and the "lookup"-helper. 
>   This will prevent new Remote-Code-Execution exploits that have been
>   published recently.
> 
> Compatibility notes: 
> 
> - Due to the security-fixes. The semantics of the templates using
>   `__proto__`, `__defineGetter__`, `__defineSetter__` and `__lookupGetter__` in the respect that those expression now return 
>   `undefined` rather than their actual value from the proto.
> - The semantics have not changed in cases where the properties are  enumerable, as in:
> 
> ```js
> {
>   __proto__: 'some string'
> }
> ```
> 
> - The change may be breaking in that respect, but we still only 
>   increase the patch-version, because the incompatible use-cases
>   are not intended, undocumented and far less important than fixing
>   Remote-Code-Execution exploits on existing systems.
> 
> 
> 
> [Commits](https://github.com/wycats/handlebars.js/compare/v4.5.2...v4.5.3)
> 
> ## v4.5.2 - November 13th, 2019
> # Bugfixes
> 
> - fix: use String(field) in lookup when checking for "constructor" - d541378
> - test: add fluent API for testing Handlebars - c2ac79c
> 
> Compatibility notes:
> - no incompatibility are to be expected
></tr></table> ... (truncated)
</details>
<details>
<summary>Commits</summary>

- [`c819c8b`](https://github.com/wycats/handlebars.js/commit/c819c8b533934d2ac18001d7eb27a3205b00c2f3) v4.5.3
- [`827c9d0`](https://github.com/wycats/handlebars.js/commit/827c9d0747bef7d7f89829779523b6b2dcf3051d) Update release notes
- [`f7f05d7`](https://github.com/wycats/handlebars.js/commit/f7f05d7558e674856686b62a00cde5758f3b7a08) fix: add "no-prototype-builtins" eslint-rule and fix all occurences
- [`1988878`](https://github.com/wycats/handlebars.js/commit/198887808780bbef9dba67a8af68ece091d5baa7) fix: add more properties required to be enumerable
- [`886ba86`](https://github.com/wycats/handlebars.js/commit/886ba86c2f9cc71b7d99b9018fbe2d72a57085cc) test/chore: add chai/expect and sinon to "runtime"-environment
- [`0817dad`](https://github.com/wycats/handlebars.js/commit/0817dad7e72c51d07f7700547d0c69aa79a4976b) test: add sinon as global variable to eslint in the specs
- [`93516a0`](https://github.com/wycats/handlebars.js/commit/93516a0b07026ebd23c84fddf270a0c8b570bc59) test: add sinon.js for spies, deprecate current assertions
- [`93e284e`](https://github.com/wycats/handlebars.js/commit/93e284ed9be1e38c5e6945f15af1ccd689f2ada6) chore: add chai and dirty-chai for better test assertions
- [`c02b05f`](https://github.com/wycats/handlebars.js/commit/c02b05fa819f46bb66c878bebc6e8006408ebd5c) fix: use !== 0 instead of != 0
- [`8de121d`](https://github.com/wycats/handlebars.js/commit/8de121d21c88a6ab877e3a0eec9daaac483f3bf0) v4.5.2
- Additional commits viewable in [compare view](https://github.com/wycats/handlebars.js/compare/v4.1.2...v4.5.3)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=handlebars&package-manager=npm_and_yarn&previous-version=4.1.2&new-version=4.5.3)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/diegomura/react-pdf/network/alerts).

</details>
I found out that `text-transform` isn't inheritable propery in React PDF. But it should be (See [W3C info](https://www.w3.org/TR/CSS21/propidx.html)).

I updated `resume` example to debug this error (moved `textTranform` from each child to whole `detailColumn`):

### Before:
![before](https://user-images.githubusercontent.com/206567/71472906-ecad5d00-27e5-11ea-9a3f-8a0bf92034b8.png)

### After:
![Xnip2019-12-26_13-35-36](https://user-images.githubusercontent.com/206567/71472857-b4a61a00-27e5-11ea-82f8-07c363f2193f.jpg)
**Describe the bug**
Something like:
<Text style={ { borderWidth: 1,textAlign: 'center' }}>Lorem Ipsum</Text>
should not draw the text outside of the "rectangle" drawn by the borderWidth=1. This works as expected until you put it inside of a View with "flexDirection: 'row'".

**To Reproduce**
[Link to the repl with the case](https://react-pdf.org/repl?code=3187b0760ce02e00408a057025803c450298c0bc300500943807cf805030c00f0022230080b6198531165d400a02180e659a004f003619b006f61622003a0046200099080beed3a72a00d490600ee31a788912019989434900270cc0a127000b8600721b21f5bd5ea3a6ca2a00150c145863496339600c111175006158911800462a007a10b08d00c0ecf0a8511328d918b8f50019103b46182400070826182510111aa324581e66284c82dcbce0d0c2e2c8a29932e4f51e2546a408246024303e1858ee81d1a1ad0cdd035dccde015cccba0666567602006e3207d04831991c180065498c77800b0c0c28194ec3c4c1e0241c450a95ce0cd034e6f335904400d570019800ac001a7f0c0e14a045f00042e82808118ae001b162717882400246a480017b80a03c111a3a9945536328e50e4c0619c5a6acf8ae2e6711436250606c007524128a03f572a5799c4c184008222241f0c0ae370c558b2b736232194d3c878c000359f13c083012812ed1aa1a00c418000b0fa7d668e2a8c8aa3b83c004a181b540b8340018ac8ecced95e0a888543a0b019622868000)
Steps to reproduce the behavior including code snippet (if applies):

**Expected behavior**
The text should not go out of its "bounding box"

**Describe the bug**
Something like this:
```
<Image
        style={ {objectFit: 'fill', objectPositionX: 'center', objectPositionY: 'center' }}
        src="/static/images/quijote1.jpg"
      />
```

fails to render.

The message in the console says:
```
repl.js:1 Uncaught (in promise) Error: unsupported number: 37center
    at Function.value (repl.js:1)
    at repl.js:1
    at Array.map (<anonymous>)
    at n.transform (repl.js:1)
    at n.image (repl.js:1)
    at t.n.renderImage (repl.js:1)
    at t.<anonymous> (repl.js:1)
    at x (main-747079b0e846e0d98e75.js:1)
    at Generator._invoke (main-747079b0e846e0d98e75.js:1)
    at Generator.e.<computed> [as next] (main-747079b0e846e0d98e75.js:1)
```


**To Reproduce**

[link to the repl](https://react-pdf.org/repl?code=3187b0760ce02e00408a057025803c450298c0bc300500943807cf805030c00f0022230080b6198531165d400a02180e659a004f003619b006f61622003a0046200099080beed3a72a01251bf0c1d36569e2a545118e523d03561a310013b06c008803d341e5093077d7f421dc011d9000add030011964c2001cf95ded29dc34b5dd7804d2a9dce8199959d80801b8c8c800c5c0a1651c30f891a0311cf0243800cc791890448400b86001c801e42001dc784494060068389d81fa06002ca0a0e2217bdddcdaaae4f8bc7d816541193ddc40c62695dc00dca20199dc013401f4005401a400d400d840003800ea201bbc800aa4a7ba305e000d00270f0008288d92acda03322a84a65502416026080e060006573189894b0c061aac05ab78302d0e22854fd56a68e23c2512890603e1bc40717ebdc00acb376673b9bc8010ba0a020463f47ea2fb072b93cbe00024408e24000bcaa132172b28aa314c00202567d8f48e7a980be4d43a1a6051636706d76ad4ebf5ac6740018cd9451920945025bf585002600fd929483e0adfad198e69e43c60001acf88e10020c04a003088044dac5ad4a68198081e4610c300a0e524141166d6e88866f66aed7eb5c0b93690e01862d802c4c2383b9a2edd6a0bd883f7c04f61e8e9a13ce2291c4a26a029be1982472baac95f09395f5e6f1c4592e3916f21102030abca19e9aa48b22c20c590c624d98ec590004a183a6338d0e50d42c39e78150882a0910c0a9362400000)

**Expected behavior**
It should render

**Describe the bug**
I tried to change the text style of a component with CSS property _**fontWeight**_.
Nothing has changed. 
Use https://react-pdf.org/repl?example=font-register to check the accuracy, but repl won't launch.

**To Reproduce**
Steps to reproduce the behavior including code snippet (if applies):
1. Go to https://react-pdf.org/repl?example=font-register
2. See error

**Expected behavior**
Expected to see how font become **bold**

**Desktop (please complete the following information):**
 - OS: Ubuntu 19.04
 - Browser: Firefox 71.0
 - React-pdf version: 1.6.8
