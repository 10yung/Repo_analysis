Unfortunately the introduction of adjusting SSL interception at runtime had one blind spot that only becomes visible when one really makes use of the selective SSL redirection.

When SSL interception is enabled, Ettercap checks if a seen packet is part of SSL interception. Then it's flagged not to be forwarded by Ettercap as its terminated by the sockets Ettercap created for the connection. This check is solely based on source or destination port e.g. 443.

If you now try to limit the SSL interception with the new feature to let say 203.0.113.1 HTTPS, all traffic from and to this IP would be intercepted by Ettercap and the forwarding engine does not forward these packets. So far so good.

Under this constellation, all other packets on port 443 (HTTPS) will be dropped. They're not redirected to the Ettercap listener and they're still marked to be dropped because the port matched. This blackholes all other HTTPS traffic which is not the wanted behaviour of selective SSL interception and need correction.


This pull request addresses this issue. The check is being extended to also check if the source or destination IP lies within the IP specification done in the SSL interception dialog.

To reduce the per-packet processing overhead, I decided to remove the possibility to specify a source IP since I can't imagine there are any requirements or use-cases that would make use of it.

Sorry, the explanation was a little bit lengthy, but the issue is not trivial - at least to find and understand.

On OpenBSD, some things need to get adjusted to get Ettercap built on OpenBSD.
Could please help me with the problem.
When I press and hold ctrl+s(scan for hosts), Ettercap crashes with segmentation fault. This is what it says:
"Ooops ! This shouldn't happen...
Segmentation Fault...

Please recompile in debug mode, reproduce the bug and send a bugreport

 Have a nice day!"
Can someone please take me through the steps to make it work?

`SEND L3 ERROR: 72 byte packet (86dd:3a) destined to ff02::1:ff00:1 was not forwarded (libnet_write_raw_ipv6(): -1 bytes written (No route to host)
)
SEND L3 ERROR: 72 byte packet (86dd:3a) destined to ff02::1:ff00:1 was not forwarded (libnet_write_raw_ipv6(): -1 bytes written (No route to host)
)
SEND L3 ERROR: 72 byte packet (86dd:3a) destined to ff02::1:ff00:1 was not forwarded (libnet_write_raw_ipv6(): -1 bytes written (No route to host)
)
SEND L3 ERROR: 160 byte packet (86dd:11) destined to ff02::fb was not forwarded (libnet_write_raw_ipv6(): -1 bytes written (No route to host)
)
SEND L3 ERROR: 76 byte packet (86dd:3a) destined to ff02::16 was not forwarded (libnet_write_raw_ipv6(): -1 bytes written (No route to host)
)
SEND L3 ERROR: 198 byte packet (86dd:11) destined to ff02::fb was not forwarded (libnet_write_raw_ipv6(): -1 bytes written (No route to host)
)
SEND L3 ERROR: 76 byte packet (86dd:3a) destined to ff02::16 was not forwarded (libnet_write_raw_ipv6(): -1 bytes written (No route to host)
)`
System : MAC OS Catalina
Start Command ：sudo /usr/local/Cellar/ettercap/0.8.3_2/bin/ettercap -Tq -i en0 -P dns_spoof -M arp /192.168.0.1//192.168.0.2-210/

I set /usr/local/Cellar/ettercap/0.8.3_2/.bottle/etc/ettercap/etter.dns    * A 192.168.0.7
my compute ip is :192.168.0.7, Apache Service is running, 192.168.0.7 can normal open website,i try it.
buy i use dns_spoof plugins redirect , any host Not affected。
Hi there! I'm currently using ettercap v.0.8.3 and none of the 3 scripts for macOS Mojave

- ipfw has been deprecated
- BSD PF resolves in segmentation fault on sniffing
- BSD PF for IPv6 doesn't resolve in segmentation fault but even though it "catches the dns" and says it spoofs it, it doesn't and microsoft.com (for instance) loads correctly.

*note:* 
ec_uid = 0
ec_gid = 0

Any insight on what the proper script for mojave might be?
Thanks!
[CMake Error LOG](https://pastebin.com/f9fP0Uv0)
can someone help me with this?
and this is the bash script for installing ettercap: [link](https://pastebin.com/AuxGqWBV)
Hi Alexander,

A quick question:

In Etterfilter, is it possible to pause the program block for 5 minutes before continuing?

For example:

# First block
if (tcp.src == 502 && DATA.data+11 == "\x00\xe1") {
DATA.data + 11 = "\x0b\xb8";
msg("Holding Register 1 data replaced");
}

sleep 5m # Waits 5 minutes.


# Second block
if (tcp.src == 502 && DATA.data+12 == "\x00\x00") {
DATA.data + 12 = "\x00\x7d";
msg("Holding Register 2 data replaced");
}

Sleep command is used in Shell script to pause between blocks.

Is there an equivalent command in etterfilter? At present, the unload filter option will completely stop all program blocks. I want the filter to be active and first block to be running during pause period

Is this possible? 
When I do arp poisoning mitm I get the error SEND L3 ERROR: 44 byte packet (0800:06) destined to 192.168.xxx.xxx was not forwarded (libnet_write_raw_ipv4(): -1 bytes written (Operation not permitted)

I copied the error from another page so the ip isn’t the same does anyone know how I can fix this? I’m on kali Linux 
I try to build and install from latest source code but i have the issue and not solved

<img width="817" alt="Screen Shot 2019-06-08 at 9 50 16 AM" src="https://user-images.githubusercontent.com/18057471/59142402-05356180-89d3-11e9-80d6-81d2e9417a03.png">

Hi!

I am trying to use ettercap as MitM with ARP spoofing, to inject big amount of data (>10kB) into a mail (TCP, SMTP connection).
This much data will clearly not fit in one packet, and this is a problem.

The filter is correctly identifying the desired packet (SMTP packet with the mail itself), and then using `replace` function, replacing some predefined string with long strings of base64 encoded data.

In wireshark I can see that the packet that has been matched by filter is correctly substituted and sent, then second packet is being sent (I guess it's being generated by ettercap), however after that ettercap exits with Segmentation Fault...
The last thing I see before ettercap crashes is an ACK from mailserver.

![image](https://user-images.githubusercontent.com/19323058/58655444-6053be00-831a-11e9-8fb7-99287155ee0c.png)

In packet capture above, packets 38,39,40 are the packets containing "original" email, the filter is matching the first (38) as it sontains the keyword "Subject: *", and therefore substituting strings "1czesc", "2czesc", ..., "5czesc" with total of 7700 characters.
After that two ettercap created packets are sent (41 and 42). Then the ACK packet is coming back from server, with seq# of both 41 and 42.
The injected message did not fit in those two packets sent by ettercap.

The code is simply two if statements to detect SMTP packet carrying the data, and 5 replace functions one ofter another. I the code below I omitted most of the gibberish, together in those 5 functions I am inserting almost 8000 characters.


if (ip.proto == TCP && tcp.dst == 25) {
	if (regex(DATA.data, "Subject: *")) {
replace("1czesc", "iVBORw0KGgoAAAANSUhEUgAAAoAAAAHgCAMAAAAC...");
replace("2czesc", "ydDtTY1ltNxDP9r2rN0MQsCkI/lyzzN14XtuVzduNdr4m8...");
replace("3czesc", "EKIAAC/h355TEoLfzLlS+YjEYFcRwBS/JFktFgSOwjSHh7...");
replace("4czesc", "vxrUrCtdGMVa+/5EUyLzGrgZ3/zY9GfDSpcC6XZ+mo9...");
replace("5czesc", "/zZs+yBDdc8RjlwTLQQ8xL/svNpZab8Og6VWWGA1jM...");
	}
}

I get the Segmentation Fault error regardless of how big the argument of each replace function is. I have tried injecting those ~7700 chars all with 1 replace, with 5 replaces, with 20 replaces, every time getting the same error.

Is it possible to achieve that kind of injection? If so, what am I doing wrong, or how should I approach the issue?
Is ettercap capable of injecting so much data, that it requires segmentation and creation of additional packets?

Any input will be highly appreciated.
