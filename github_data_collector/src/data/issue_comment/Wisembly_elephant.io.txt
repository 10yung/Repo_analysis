fix readBytes endless loop
in my case
sometimes(network error or ...) fread will alwarys return '' then while will become endless loop
how can i avoid it?

![image](https://user-images.githubusercontent.com/26519913/67613459-4ee6e300-f7e0-11e9-9d6f-9ed46878fd53.png)

Hello, I tried to use elephant.io v2 client as a PHP client that can establish keep-alive connection with my nodejs server thru websocket protocol, but connection closes automatically after some period of inactivity. Is there any possibility to open and support keep-alive connection? Please help.
Hello,

I would like to use elephantio with wss, but it does not work.

```php
try{
        $client = new Client(new Version2X('wss://'.$url));

        $client->initialize();

        $client->close();
      }catch(\Exception $e){
        Log::debug('<<<ERR curlWws:'.print_r($e->getMessage(),true));
      }
```

I have the following error message:

> :An error occurred while trying to establish a connection to the server

how can I fix this problem ??

Thanks.
<br />
<b>Fatal error</b>:  Uncaught UnexpectedValueException: The server returned an unexpected value. Expected &quot;HTTP/1.1 101&quot;, had &quot;HTTP/1.1 400&quot; in /var/www/html/yolo/api/vendor/wisembly/elephant.io/src/Engine/SocketIO/Version1X.php:266
Stack trace:
#0 /var/www/html/yolo/api/vendor/wisembly/elephant.io/src/Engine/SocketIO/Version1X.php(73): ElephantIO\Engine\SocketIO\Version1X-&gt;upgradeTransport()
#1 /var/www/html/yolo/api/vendor/wisembly/elephant.io/src/Client.php(60): ElephantIO\Engine\SocketIO\Version1X-&gt;connect()
#2 /var/www/html/yolo/api/api.php(757): ElephantIO\Client-&gt;initialize()
#3 /var/www/html/yolo/api/api.php(742): send_ping_notification_socket('2', 'Two', 'http://18.224.2...', '1', '1', 'One', 'http://18.224.2...', '1')
#4 /var/www/html/yolo/api/api.php(449): send_ping(Array, Array)
#5 /var/www/html/yolo/api/index.php(28): update_user('2', Array, Array)
#6 {main}
  thrown in <b>/var/www/html/yolo/api/vendor/wisembly/elephant.io/src/Engine/SocketIO/Version1X.php</b> on line <b>266</b><br />
Hello Good Day!

I have a problem establishing a connection server with my ssl certificate.

"An error occurred while trying to establish a connection to the server"

I have this code : 

```php
$this->client = new Client(new Version1X("https://www.sockettestserver.com:3000"));
```

And now I checked one of the tickets here like passing this $options:

```php
$options = [
    'context' => [
        'ssl' => [
            'verify_peer' => false,
             'verify_peer_name' => false
        ]
    ]
];

$this->client = new Client(new Version1X("https://www.sockettestserver.com:3000",  $options));
```

But still I can't establish any connection.

If I am sending an http request it is working and it listens to port 3000 just fine.
But when I changed the connection to https I am getting that error.

Hope you can help me. 

Thanks is advance.
When I try to node server, I get the error below:

```
Fatal error: Uncaught ElephantIO\Exception\ServerConnectionFailureException: An error occurred while trying to establish a connection to the server in /var/www/html/shared/socket-io/vendor/wisembly/elephant.io/src/Engine/SocketIO/Version1X.php:187 Stack trace: #0 /var/www/html/shared/socket-io/vendor/wisembly/elephant.io/src/Engine/SocketIO/Version1X.php(48): ElephantIO\Engine\SocketIO\Version1X->handshake() #1 /var/www/html/shared/socket-io/vendor/wisembly/elephant.io/src/Client.php(60): ElephantIO\Engine\SocketIO\Version1X->connect() #2 /var/www/html/shared/classes/socket.class.php(24): ElephantIO\Client->initialize() #3 /var/www/html/dashboard/news.php(83): Socket->__construct() #4 {main} thrown in /var/www/html/shared/socket-io/vendor/wisembly/elephant.io/src/Engine/SocketIO/Version1X.php on line 187
```

It is strange that when I use Version 2X still I get the same error. Actually it connects the server but throw the error and stop working.
Hi, how can I use this to send a message to a private socket id ?
   ErrorException  : fwrite(): SSL operation failed with code 1. OpenSSL Error messages:
error:140D00CF:SSL routines:SSL_write:protocol is shutdown

It crashes after for a while. I can get data only for a minute.

~~~
        $context = ['http' => ['method' => 'GET'], 'ssl' => ['verify_peer' => false, 'verify_peer_name' => false, 'allow_self_signed' => false]];
        $client = new Client(new Version2X('https://streamer.cryptocompare.com', [
            'context' => $context,
        ]));
        $client->initialize();
        $subscription = ["2~Binance~BTC~USDT"];
        $client->emit('SubAdd', ['subs' => $subscription]);
        while (true) {
            $message = $client->read();
            $message = substr($message, 8, -2);
            if (!empty($message)) {
                Unpacker::current($message);
            }
        }
        $client->close();
~~~


My setup:

- PHP 7.1
- socket.io 2.2.1 (latest) server

Take the following sample code:

server.js snippet
```
io.on('connection', (socket) => {
    socket.on('test', (data) => {
        console.log(data);
    });
});
```

client.php snippet
```
$client = new Client(new Version2X($url));
$client->initialize();
$client->emit('test', [2]);
```


Given this example the variable `data` in the nodejs socket.io server equals `[ 2 ]`, an array with a single element, `2`. However what i expected would be that `data` equals `2`.

Multiple arguments are handled as multiple parameters, so it would look like this:

```
socket.on('test', (param1, param2, param3) => {
    console.log(param1);
});
```

Thus (at least for me) this lib wont work with the socket.io server correctly.

To fix this i found it is enough to change
```
\json_encode([$event, $args])
```
to
```
\json_encode(array_merge([$event], $args))
```

in the `Version1X.php` engine.

Is this interfering or breaking anything, or could it be fixed via a PR like that?