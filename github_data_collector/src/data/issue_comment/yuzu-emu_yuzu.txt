Yuzu displays only a white screen on AMD FX 8350 processor and AMD R9 280 Graphics card, The sound works properly in 'The Legend Of Zelda Links Awakening' and 'Super Mario odyssey'.

The error log is says:

Extension GL_ARB_shader_viewport_layer_array is not supported on this card

```

[  19.613537] Debug <Critical> video_core/renderer_opengl/gl_shader_util.h:LoadProgram:88: Assertion Failed! Shader not linked
[  19.614333] Render.OpenGL <Info> video_core\renderer_opengl\gl_shader_cache.cpp:BuildShader:234: called. FS7755E206F1032E85
[  19.615960] Render.OpenGL <Error> video_core\renderer_opengl\gl_shader_util.cpp:LoadShader:48: Error compiling fragment shader:
Fragment shader failed to compile with the following errors:
ERROR: 0:5: error(#366) Extension GL_ARB_shader_viewport_layer_array is not supported on this card
ERROR: error(#273) 1 compilation errors.  No code generated

 
[  19.615999] Render.OpenGL <Error> video_core/renderer_opengl/gl_shader_util.h:LoadProgram:79: Error linking shader:
Fragment shader(s) were not successfully compiled before glLinkProgram() was called.  Link failed. 
 
[  19.616031] Render.OpenGL <Info> video_core/renderer_opengl/gl_shader_util.h:LogShaderSource:32: Shader source // FS7755E206F1032E85


```





See citra-emu/citra#5039 for more details.

The title of this PR is slightly misleading as we already weren't using a regex anymore for yuzu. 
Either way, this unifies and simplifies the implementation of this feature.

**Original description**:
The regex here is run on the emulation thread, and can cause slowdowns when there is excessive logging. Now the source file path trimming should be done at compile time.
godbolt.org/z/3vqPvB
They are outdated, it's an issue, resolve it by updating the project tab in https://github.com/yuzu-emu/yuzu/projects
See citra-emu/citra#5037 for more details. As I don't have a Linux machine with a toolchain installed, I'm just gonna wait for CI to finish.

**Original description**:
This significantly reduces unnecessary disk writes and space usage
when building Citra.

libcore.a is now only ~1MB rather than several hundred megabytes.
Front face was being forced to a certain value when cull face is
disabled. Set a default value on initialization and drop the forcefully
set front facing value with culling disabled.
This implements a rudimentary mixing system for voices in audren. 
So far it only supports Stereo mixing, but Sorround isn't implemented anywhere anyway.

Improvements by this can be seen in quite a few games, including Super Mario Odyssey.
[Before](https://streamable.com/6uk6v) and [After](https://streamable.com/dzp39) (thanks to BsoD Gaming).

This has been extensively hw-tested with a modified version of the `audren-simple` program.
[Version 1](https://cdn.discordapp.com/attachments/576428479726223370/668132374667722782/audren-simple-volumeTobiHex.nro) / [Version 2](https://cdn.discordapp.com/attachments/576428479726223370/668132377360596992/audren-simpleSide.nro)

The only new issue known with this is the menu music in Disgaea 5 not playing anymore, but I think I just uncovered a deeper lying bug here as there are many other audren issues there.
Per the request of a developer, I have compiled all current open issues that concern Pokémon Sword [0100abf008968000] and Pokémon Shield [01008db008c2c000].

The game soft locks.
=============
This happens for example when you finish the first cutscene and the player character is sitting on the couch. Or when you encounter the game's legendary Pokémon in Slumbering Weald.

Wireframe on certain models.
===================
Certain NPCs have a wireframe mesh across them.
This affects most NPCs and the Player character, but it does not affect and Pokémon.
This only affects AMD GPU's on OpenGL.
![69242376-a2a6db00-0b98-11ea-8bc4-1b3098f7dd85](https://user-images.githubusercontent.com/30736337/72665834-7975c000-3a0c-11ea-9ee7-e81cbe922a43.png)
[yuzu_log.txt](https://github.com/yuzu-emu/yuzu/files/4080837/yuzu_log.txt)

Rotomb Box screen does not render as it should.
===============================
yuzu Mainline 61
![68995819-3b381500-0892-11ea-987d-3e803c700f62](https://user-images.githubusercontent.com/30736337/72665891-1a647b00-3a0d-11ea-9d21-25ef79378a12.png)
Nintendo Switch
![68995822-5571f300-0892-11ea-851f-d1b48325c2d4](https://user-images.githubusercontent.com/30736337/72665895-2cdeb480-3a0d-11ea-9ede-4505f9ca6ebc.png)

Flickering in several areas of the game.
=========================
In several areas of the game, the shadows will violently flicker like this. It can be replicated by standing in this exact spot/area in Hulbery (Though it also occurs in many other places)

The same bug occurs on OpenGL & Vulkan, with and without Async GPU.
![71546568-89176100-2998-11ea-8e6a-5a72233243bd](https://user-images.githubusercontent.com/30736337/72665971-d3c35080-3a0d-11ea-906e-75cfdb067aad.gif)

Running in Tall Grass is not possible.
========================
It is currently not possible to run/sprint in any tall/long grass in the game (While it is possible on the Nintendo Switch). The player character simply defaults to the slow-moving/sneaking animation, regardless of input.

Video Example off the problem: https://youtu.be/16obz1-pwBM

Minor graphical issues.
===============
The shading on the character is incorrect as you can see in the examples below.
yuzu
![69053742-c213fb80-0a12-11ea-8acf-68950f0a6270](https://user-images.githubusercontent.com/30736337/72666297-f99e2480-3a10-11ea-9179-7fe767c3682e.png)
Nintendo Switch
![69012548-bcb9a100-097f-11ea-99d5-9f6accc2395c](https://user-images.githubusercontent.com/30736337/72666301-04f15000-3a11-11ea-910a-40b8dfd4698e.png)

[Here is another example of the graphical issue](https://youtu.be/3wt7X_zWTnQ)

Time shows incorrectly.
===============
Time always shows 1/1/1970
This will be fixed with #3271 

This abstraction is Vulkan's equivalent to OpenGL's rasterizer. It takes care of joining all parts of the backend and rendering accordingly on demand. I am aware of the large diff.

After this, we are only missing `renderer_vulkan`, `vk_blit_screen` and the Qt and SDL2 frontends.
This changes our current, very-time intensive interpolation algorithm to a faster one based on LUTs.

This fixes the so called "audio stutter" in SMO and other games.

**Thanks to Ryujinx for this awesome algorithm**.
(since this is taken from Unlicensed code, it doesn't require attribution)