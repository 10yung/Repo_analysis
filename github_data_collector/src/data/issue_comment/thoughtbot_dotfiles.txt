Hi there,

I'm running Vim 8.1 on macOS Catalina. When I open Vim, I always get this error message.

> Error detected while processing [~/.vimrc: line  176](https://github.com/thoughtbot/dotfiles/blob/master/vimrc#L176): E474: Invalid argument: diffopt+=vertical Press ENTER or type command to continue

Removing the "+" seemed to have silenced the error, but, because I'm a Vim neophyte I'm not convinced that this is the correct solution.
asdf has a very useful configuration setting called `legacy_version_file`. When set to `yes`, asdf will—in addition to a `.tool-versions` files)—read the version files used by other version managers (e.g. `.ruby-version`). This makes the migration to asdf much smoother, as many projects only specify these “legacy” dotfiles for versioning.

It would be helpful if our dotfiles came with this configuration enabled.

asdf documentation: https://asdf-vm.com/#/core-configuration?id=homeasdfrc
How to reproduce:

```
FROM ubuntu
RUN apt-get update && apt-get install -y software-properties-common
RUN add-apt-repository ppa:martin-frost/thoughtbot-rcm
RUN apt-get update && apt-get install -y vim git zsh curl rcm
RUN git clone git://github.com/thoughtbot/dotfiles.git ~/dotfiles && env RCRC=$HOME/dotfiles/rcrc rcup
RUN rcup
```

> docker build . -t dotfiles && docker run --rm -it dotfiles zsh

If I type `g ` and hit TAB, there is no suggestions. But I expect them to be present because there is: 
`compdef g=git`

in `zsh/completion/_g`
### Issue
This addresses the issue pointed out in https://github.com/thoughtbot/dotfiles/issues/634

### Description
Introduced in https://github.com/thoughtbot/dotfiles/commit/46af61168b07f3d738d461eb638eb5824bbeb813, the `_loadSettings()` func requires `extendedglob`. 

As such, its been moved from `options.zsh` to the `zshrc` file.
Hi! I'm trying to change the default Oh My Zsh theme, I created my `dotfiles-local/zshrc.local` and added the `ZSH_THEME="my_theme_name"` but it is not loading.

Do you know if there's some step I'm missing? I added the custom theme as [suggested by](https://github.com/robbyrussell/oh-my-zsh/wiki/Customization#overriding-and-adding-themes) the Oh My Zsh documentation .
Some Bash built-ins like export, alias can be run once instead of multiple times by using multiple arguments instead of calling it 6 times in a row for 6 alias. I also think the config looks nicer as a result.
When bringing my dotfiles up-to-date including the [Make _load_settings() more concise]( https://github.com/thoughtbot/dotfiles/commit/46af61168b07f3d738d461eb638eb5824bbeb813) commit, I noticed my prompt turned into 
![2019-05-21_10-45](https://user-images.githubusercontent.com/1740566/58106167-a93aa280-7bb5-11e9-95d6-81e7a4cafed1.png)
It turned out I had to `setopt extendedglob` as noted by the commit message.  I ended up adding this configuration in my `zshenv.local` so by the time `zshrc` runs `_load_settings`, the glob can work correctly.  Just wondering if it would make sense for `setopt extendedglob` to be in thoughtbot dotfiles (zshenv or zshrc?) instead of requiring custom config for `_load_settings` to work?
PR adds adds custom tmux binding keys to split window horizontally and vertically. 

Tmux Invocation for horizontal split: 
```
Ctrl + b + - 
```

Tmux Invocation for vertical split: 
```
Ctrl + b + | 
```
Thank you for a great repo guys, it helps me really a lot to organise all the dotfiles stuff! 

There is a **potential implicit issue/risk** covers in **symlinking hooks**. 

#### Description:
Let's say you have such scenario:
+ `git clone project-a`
+ `git clone project-b`
+ `cd project-a`
+ `composer install` // additionally installs f.e. post-commit hook

This will most probably break project-b by modifying the project hooks and additionally will modify template hooks in the root dotfiles folder.

In such a scenario composer changes `post-commit` hook in the `project-a` which following the links chain, leads to the changes in `project-b/.git/hooks/post-commit` as well as `~/dotfiles/git_template/hooks/post-commit`, since post-commit  in `project-a` is just a link to the initial file.

It's quite common that some tool like composer may change hooks, which leads to such implicit scenario if hooks were symlinked.

#### Possible solution:
`git_template/hooks` should be copied and not symlinked
`git pob` reaches out to the remote to find branches that have been deleted. If they have been deleted from the remote and you are tracking them, then those local branches will be deleted. This is completely safe on branches that you are tracking that have not been deleted. Local branches that you have not pushed up are also completely safe.