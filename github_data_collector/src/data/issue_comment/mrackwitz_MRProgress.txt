<img width="443" alt="capture d ecran 2017-07-03 a 10 40 05" src="https://user-images.githubusercontent.com/6453814/27797541-10319446-5fdc-11e7-8835-00fc7400db70.png">
`MRProgressHelper.h` and `MRBlurView.m` call `+[UIApplication sharedApplication]`, which is not available in App Extensions, meaning that MRProgress will not compile for extension targets.

> MRProgress/src/Utils/MRProgressHelper.h:41:56: 'sharedApplication' is unavailable: not available on iOS (App Extension) - Use view controller based solutions where appropriate instead.

![image](https://cloud.githubusercontent.com/assets/6547384/26442627/9ba28028-4135-11e7-9a19-6757a8871b03.png)

 **MRProgressOverlayView.showOverlayAdded(to: self.view, title: text, mode: .indeterminateSmallDefault, animated: true)**
i have added code to MRProgress and working fine but i need to change activity indicator colour from gray to orange. So,  how can i do this? please help me.
fix waring of iOS 10 
check changed api
https://developer.apple.com/library/content/releasenotes/General/iOS10APIDiffs/Objective-C/QuartzCore.html
Hi,
I want to send the MRProgressView to the other viewController. I used it like this but it did not work.

FirstViewController.m
```
self.overlayView = [MRProgressOverlayView showOverlayAddedTo:self.navigationController.view animated:YES];        
self.overlayView.mode = MRProgressOverlayViewModeIndeterminateSmall;
self.overlayView.titleLabelText = @"";
[AppDelegate setOverlayView:self.overlayView]
```

AppDelegate.m
```
// showing overlay = nil
-(void)setOverlayView:(MRProgressOverlayView *)overlay{
  self.overlayView = overlay;
}

// I will get from here
-(MRProgressOverlayView *)getOverlayView{
   return self.overlayView;
}
```

SecondViewController.m
```
// call from here
[[AppDelegate getOverlayView] dismiss:YES];
```
But it always calls setOverlayView and says overlay = nil.
why?



Hello, trying to use MRProgress with AVAssetExportSession in swift 2.2
I want to display the overlay according the the session.progress value (going from 0 to 1).
It seems however that setting the progress to the overlay does nothing until the value is equal to 1.
If i did something wrong in my code could someone point me to the good direction?
Here is the related code : 

if let exportSession = AVAssetExportSession(asset: urlAsset, presetName: Config.VIDEO_COMPRESSION_PRESET) {
            exportSession.outputURL = outputURL
            exportSession.outputFileType = AVFileTypeMPEG4
            exportSession.shouldOptimizeForNetworkUse = true
            exportSession.timeRange = CMTimeRangeMake(kCMTimeZero, urlAsset.duration)
            
            exportSession.exportAsynchronouslyWithCompletionHandler { () -> Void in
                handler(session: exportSession)
            }
            dispatch_async(dispatch_get_main_queue(), { () -> Void in
                let overlayView = MRProgressOverlayView.showOverlayAddedTo(self.view, title: "Preparing", mode: .DeterminateCircular, animated: true)
                while exportSession.status == .Waiting || exportSession.status == .Exporting {
                    print("Progress: \(exportSession.progress * 100.0)%., progress \(exportSession.progress)")
                    overlayView.setProgress(exportSession.progress, animated: true)
                }
                overlayView.dismiss(true)
            })
        }


output example from my print : 
Progress: 2.62599%., progress 0.0285576

Or it can be due to the animation delay for the overlay to appear, not sure about that.

Hi guys,

First off, thanks for putting this really amazing looking library out there

Could someone please provide a solution as to how to implement this beautiful library in Swift

I can load the OverlayView but I can't figure out how to connect the progress 

I am using Alamofire 

In my post request

```
var progressFloat: Float = 0.0
...
                    upload.uploadProgress(closure: { //Get Progress
                        progress in

                        print(progress.fractionCompleted)

                       // cast value as float
                       progressFloat = Float(progress.fractionCompleted)
                        
                        // the initial overlay view gets loaded 
                        MRProgressOverlayView.showOverlayAdded(to: self.view, title: "Uploading", mode: MRProgressOverlayViewMode.determinateCircular, animated: true)
                        
                        // this is where I am stuck 
                        // setProgress is a child, but throws error:
//  'use of instance member 'setProgress' on type MRProgressOverlayView'; did you mean to use a value of type MRProgressOverlayView
                        MRProgressOverlayView.setProgress(progressFloat, true)

                      // MRProgressView.setProgress doesn't work either 

I am also getting the error 
/Pods/MRProgress/src/Components/MRProgressOverlayView.m:815
2017-01-23 16:23:32.207 MyProject[5844:139083] *** Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Mode must support setProgress:animated:, but doesnot!'

                        if progress.fractionCompleted == 1 {
                            print("Completed")
 
                            // this is also throwing an error 
                            MRProgressOverlayView.dismiss(self)
                        }
                    })
```
Currently says "Loading..." at the top and forced to do the following:

```objc
[overlay setMode:MRProgressOverlayViewModeCross];
[overlay setTitleLabelText:@""];
```
I updated to Swift 3 and now I'm getting a crash every time I call "showOverlayAddedto"
 MRProgressOverlayView.showOverlayAdded(to: self.view, title: "Connecting...", mode: .indeterminate, animated: true)

See error below:

016-10-28 13:48:10.541[6475:86244] **\* Assertion failure in void PushNextClassForSettingIMP(id, SEL)(), /BuildRoot/Library/Caches/com.apple.xbs/Sources/UIKit_Sim/UIKit-3512.60.7/UIAppearance.m:760
2016-10-28 16:14:10.920 FileThis[6475:86244] **\* Terminating app due to uncaught exception 'NSInternalInconsistencyException', reason: 'Please file a radar on UIKit if you see this assertion.'
**\* First throw call stack:
(
    0   CoreFoundation                      0x000000010ca10d85 **exceptionPreprocess + 165
    1   libobjc.A.dylib                     0x000000010c06cdeb objc_exception_throw + 48
    2   CoreFoundation                      0x000000010ca10bea +[NSException raise:format:arguments:] + 106
    3   Foundation                          0x000000010bcb6e1e -[NSAssertionHandler handleFailureInFunction:file:lineNumber:description:] + 169
    4   UIKit                               0x0000000108bb8209 PushNextClassForSettingIMP + 469
    5   UIKit                               0x0000000108bc1587 __workaround10030904InvokeWithTarget_block_invoke + 26
    6   UIKit                               0x0000000108512920 +[UIView _performSystemAppearanceModifications:] + 66
    7   UIKit                               0x0000000108bc155b workaround10030904InvokeWithTarget + 1102
    8   UIKit                               0x0000000108bbb6fb applyInvocationsToTarget + 1864
    9   UIKit                               0x0000000108bba812 +[_UIAppearance _applyInvocationsTo:window:matchingSelector:onlySystemInvocations:] + 1888
    10  UIKit                               0x00000001085361df __88-[UIView(Internal) _performUpdatesForPossibleChangesOfIdiom:orScreen:traverseHierarchy:]_block_invoke + 64
    11  UIKit                               0x0000000108536169 -[UIView(Internal) _performUpdatesForPossibleChangesOfIdiom:orScreen:traverseHierarchy:] + 189
    12  UIKit                               0x000000010853607f -[UIView(Internal) _didChangeFromIdiomOnScreen:traverseHierarchy:] + 182
    13  UIKit                               0x000000010853560e -[UIView(Internal) _didMoveFromWindow:toWindow:] + 1739
    14  UIKit                               0x00000001085352a3 -[UIView(Internal) _didMoveFromWindow:toWindow:] + 864
    15  UIKit                               0x00000001085352a3 -[UIView(Internal) _didMoveFromWindow:toWindow:] + 864
    16  UIKit                               0x000000010852a562 __45-[UIView(Hierarchy) _postMovedFromSuperview:]_block_invoke + 155
    17  Foundation                          0x000000010bc403d3 -[NSISEngine withBehaviors:performModifications:] + 155
    18  UIKit                               0x000000010852a480 -[UIView(Hierarchy) _postMovedFromSuperview:] + 575
    19  UIKit                               0x000000010853826c -[UIView(Internal) _addSubview:positioned:relativeTo:] + 1967
    20  FileThis                            0x00000001078a02b2 +[MRProgressOverlayView showOverlayAddedTo:title:mode:animated:] + 194
    21  FileThis                            0x0000000107aac098 _TFC8FileThis30IntroDestinationViewController4nextfPs9AnyObject_T_ + 584
    22  FileThis                            0x0000000107aac736 _TToFC8FileThis30IntroDestinationViewController4nextfPs9AnyObject_T_ + 54
    23  UIKit                               0x0000000108482a8d -[UIApplication sendAction:to:from:forEvent:] + 92
    24  UIKit                               0x00000001085f5e67 -[UIControl sendAction:to:forEvent:] + 67
    25  UIKit                               0x00000001085f6143 -[UIControl _sendActionsForEvents:withEvent:] + 327
    26  UIKit                               0x00000001085f5263 -[UIControl touchesEnded:withEvent:] + 601
    27  UIKit                               0x00000001084f599f -[UIWindow _sendTouchesForEvent:] + 835
    28  UIKit                               0x00000001084f66d4 -[UIWindow sendEvent:] + 865
    29  UIKit                               0x00000001084a1dc6 -[UIApplication sendEvent:] + 263
    30  UIKit                               0x000000010847b553 _UIApplicationHandleEventQueue + 6660
    31  CoreFoundation                      0x000000010c936301 __CFRUNLOOP_IS_CALLING_OUT_TO_A_SOURCE0_PERFORM_FUNCTION** + 17
    32  CoreFoundation                      0x000000010c92c22c __CFRunLoopDoSources0 + 556
    33  CoreFoundation                      0x000000010c92b6e3 __CFRunLoopRun + 867
    34  CoreFoundation                      0x000000010c92b0f8 CFRunLoopRunSpecific + 488
    35  GraphicsServices                    0x000000010fa65ad2 GSEventRunModal + 161
    36  UIKit                               0x0000000108480f09 UIApplicationMain + 171
    37  FileThis                            0x0000000107ab6a8f main + 111
    38  libdyld.dylib                       0x000000010e17b92d start + 1
)
libc++abi.dylib: terminating with uncaught exception of type NSException

This is the line causing the crash in the MRProgressOverlayView.m class:
![screen shot 2016-10-28 at 4 13 56 pm](https://cloud.githubusercontent.com/assets/23044381/19825067/d44293f6-9d29-11e6-97a5-f1e8854d56ba.png)

how to add progressView (Mode: MRProgressOverlayViewModeIndeterminateSmall)  with blurred background
