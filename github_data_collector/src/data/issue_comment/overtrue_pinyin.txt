这是不然我用php7.4版本啊

$a = "php73";
 $b = (new Pinyin())->sentence($a);
//php73下 输出 php73
//php74下 输出 php

具体验证代码
https://github.com/gitdebugdemo/pinyin/blob/php74-4.0.5/tests/Test.php

验证集成环境:
php73-ok
https://github.com/gitdebugdemo/pinyin/tree/php73-4.0.5  
php74-不ok.数字73被删除了.
https://github.com/gitdebugdemo/pinyin/tree/php74-4.0.5 


![WX20191219-153946](https://user-images.githubusercontent.com/7278002/71154378-5f628980-2276-11ea-8f7f-dbb842095258.png)





找了许久才找到这个问题, 只要用 `$pinyin->abbr('中、文')` 就会导至php 直接崩溃.

奇怪的是, 这个问题在mac下面的php 7.3.10/11下面没有, 我的Linux服务器上的7.3.10/11只要有顿号, php直接奔溃, 什么错误提示都没有.


luò	hé : 地名，在中国河南省。漯河市双汇 食品的生产地
tà	hé : 古水名，在今中国山东省
这个觉得取 luò hé 会比较常用，字典里面好像特意标注成 tà hé
陕西和山西返回的拼音是一样的。。。
Use of undefined constant PINYIN_UMLAUT_V
PHP7.3.1
nginx
使用composer require "overtrue/pinyin:~4.0"进行安装
代码如下
`
require(dirname(__FILE__) . '/vendor/autoload.php');

use Overtrue\Pinyin\Pinyin;

$pinyin = new Pinyin();

$a = $pinyin->convert('带着希望去旅行，比到达终点更美好');

print_r($a);
`
输出以下内容

> Array
(
    [0] => d�
    [1] => i
    [2] => zhe
    [3] => xi
    [4] => w�
    [5] => ng
    [6] => qu
    [7] => lyu
    [8] => xing
    [9] => bi
    [10] => d�
    [11] => o
    [12] => da
    [13] => zhong
    [14] => dian
    [15] => geng
    [16] => mei
    [17] => hao
)

经测试，不管是abbr还是convert。前面几个有问题的都有问题
新版本里使用的这个方法在很多线上机器是不许使用的
加上PINYIN_KEEP_PUNCTUATION选项后，不报错，但也不会输出标点符号，比如书名号。convert函数和sentence函数都是这样。
composer.json > autoload  > files 的值应为数组，不应该是字符串