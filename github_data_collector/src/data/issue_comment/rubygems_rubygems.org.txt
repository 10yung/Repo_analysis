Some people enabled MFA in the site but their local gem version is 2.x which can't support MFA. Our current reponse is:

```
You have enabled multifactor authentication but no OTP code provided. Please fill it and retry.
```

We should add some text to notify that only >3.0 supports this feature.

ref: https://github.com/rubygems/rubygems/issues/3078
Bumps [rqrcode](https://github.com/whomwah/rqrcode) from 0.10.1 to 1.1.2.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href="https://github.com/whomwah/rqrcode/releases">rqrcode's releases</a>.</em></p>
<blockquote>
<h2>Version 1.0.0</h2>
<p><strong>NOTE:</strong> I will not be filling in this section any more, you can see the available packages here: <a href="https://github.com/whomwah/rqrcode/package">https://github.com/whomwah/rqrcode/package</a></p>
<p>Release of 1.0.0. It makes some changes to the organisation of the library plus a few other bits and pieces:</p>
<ul>
<li>Moves QRCode generation to new gem <a href="https://github.com/whomwah/rqrcode_core">https://github.com/whomwah/rqrcode_core</a></li>
<li>Renames internal dark? method to checked?</li>
<li>Implement standalone option to allow embedding svg in other svg</li>
<li>More Specs</li>
</ul>
<h2>v1.0.0.pre</h2>
<p>This pre-release of <code>1.0.0</code>. It contains no new functionality but makes some changes to the organisation of the library. Here's a list of high level changes:</p>
<ul>
<li>Moves QRCode generation to new gem <a href="https://github.com/whomwah/rqrcode_core">https://github.com/whomwah/rqrcode_core</a></li>
<li>Updates README</li>
<li>More Specs</li>
<li>Renames internal <code>dark?</code> method to <code>checked?</code></li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li>See full diff in <a href="https://github.com/whomwah/rqrcode/commits">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=rqrcode&package-manager=bundler&previous-version=0.10.1&new-version=1.1.2)](https://dependabot.com/compatibility-score.html?dependency-name=rqrcode&package-manager=bundler&previous-version=0.10.1&new-version=1.1.2)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
This is just a `bundle update rails` to a patch release that includes lots of bug and security fixes. I am not sure why Dependabot has not already made a PR. I'll have a look it the console, but i wanted to make this PR first.

[Rails 6.0.2.1 security release notes](https://weblog.rubyonrails.org/2019/12/18/Rails-6-0-2-1-has-been-released/)
Bumps [rotp](https://github.com/mdp/rotp) from 4.1.0 to 5.1.0.
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href="https://github.com/mdp/rotp/blob/master/CHANGELOG.md">rotp's changelog</a>.</em></p>
<blockquote>
<h3>5.1.0</h3>
<ul>
<li>Create <code>random_base32</code> to perform <code>random</code> to avoid breaking changes
<ul>
<li>Still needed to bump to 5.x due to Base32 cleanup</li>
</ul>
</li>
</ul>
<h3>5.0.0</h3>
<ul>
<li>Clean up base32 implementation to match Google Autheticator</li>
<li>BREAKING <code>Base32.random_base32</code> renamed to random
<ul>
<li>The argument is now byte length vs output string length for more precise bit strengths</li>
</ul>
</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href="https://github.com/mdp/rotp/commit/15d5104e3cb99f97d36c772f8f09cf7e2e77de20"><code>15d5104</code></a> Bump to v5.1.0</li>
<li><a href="https://github.com/mdp/rotp/commit/c6c24ab894e7c2b1579d45ac82c41454d1e98227"><code>c6c24ab</code></a> Alias random_base32 to random to avoid breaking changes</li>
<li><a href="https://github.com/mdp/rotp/commit/c38462855747b62607b8475d9b45c4cfd92ba66b"><code>c384628</code></a> Update to v5.0.0 due to breaking change to 'Base32.random' API</li>
<li><a href="https://github.com/mdp/rotp/commit/63ffbcaca5d0a57ff2466ad85f8ea2043219f2fc"><code>63ffbca</code></a> Correct Base32 implementation to exactly match Google Authenticator</li>
<li>See full diff in <a href="https://github.com/mdp/rotp/compare/v4.1.0...v5.1.0">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://api.dependabot.com/badges/compatibility_score?dependency-name=rotp&package-manager=bundler&previous-version=4.1.0&new-version=5.1.0)](https://dependabot.com/compatibility-score.html?dependency-name=rotp&package-manager=bundler&previous-version=4.1.0&new-version=5.1.0)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language
- `@dependabot badge me` will comment on this PR with code to add a "Dependabot enabled" badge to your readme

Additionally, you can set the following in your Dependabot [dashboard](https://app.dependabot.com):
- Update frequency (including time of day and day of week)
- Pull request limits (per update run and/or open at any time)
- Out-of-range updates (receive only lockfile updates, if desired)
- Security updates (receive only security updates, if desired)



</details>
There was recently a discussion on reddit (not started by me) about this gem here: 

https://rubygems.org/gems/make

The discussion can be seen here:

https://old.reddit.com/r/ruby/comments/e9smst/is_there_a_process_for_getting_a_gem_yanked_from/

The problem described was e. g. to have a **bin/make** entry that may be installed at the locally existing "make".

I personally don't think it is a big problem; I tend to use --user-install anyway and then just manage the bin/ files in my home directory. But it got me thinking ...

Would it be possible and useful to add an entry to an individual rubygems page, and give users a way to display the content (of that particular gem) online? In particular bin/ entries - a bit like github navigation but just simpler (the information can be obtained from the .gemspec file I assume or wherever else the files are being stored, so it does not need to be any "live" navigation as in github).

This is mostly for _convenience_ IMO.

It could be a new entry on the bottom right area, perhaps under the entry "Reverse dependencies" - some entry such as "Installed files" or some such. My primary use case for the description here is to let ruby users quickly see, online, which bin/ entries are installed.

It is not only related to the discussion on reddit, though - more of a general convenience feature to be had. (Not sure how problematic the issue description at reddit was, but I think we can decouple that from the suggestion here, since my aim is really convenience, not preventing any user action or anything - hence why it was filed here on  rubygems.org github, rather than rubygems github).
Customers are still having issues: aws/aws-sdk-ruby#2159.
We've got the spec dependency - https://github.com/aws/aws-sdk-ruby/blob/master/gems/aws-sdk-resources/aws-sdk-resources.gemspec#L180

But current status is when installing aws-sdk, aws-sdk-sso is never fetched. Is this some caching problem? The gem is published: https://rubygems.org/gems/aws-sdk-sso

Opening new issue for visibility.
When looking at https://rubygems.org/notifier just now, I noticed that 
it also keeps track of gems that I have already removed (yanked) before.

So for example:

-------------------------------------------------------------------------------

colour_e

On (recommended)
Off

-------------------------------------------------------------------------------

Something seems strange. I assume that the information about past owners
of gem is kept, which is fine; but that information is also displayed to
the former site owner on that /notifier route, which I think does not make sense,
since that site owner (gem author) already yanked/removed the gem. So even
IF the site owner could want to toggle this (let's just assume this), it would not
make sense since the gem is already gone completely, so even if set to "On",
there would never by any notification anyway. The notification would only
be triggered if a gem would be yanked, but if the last gem was yanked and
the namespace past the 100 days delay, the site author could not do much
with non-existing gems. So this seems like a no effect
situation.

I would recommend to change the affected code here - add a way to determine
whether the gem has already been yanked or not. And if it has been yanked
before, skip the display of it on the "notifier" route.

On a somewhat related note - since we can already manually toggle 
on/off on a per-gem basis here, I believe it should be simple to
add a new button for "toggle all off", which could be a bit of
javascript, doing all the manual action that we'd do right now
by pressing the "Off" checkbox there. That way new code additions would
be kept at a minimum.
Added chrome installation for js testing using selenium headless chrome

This is part of the following pull request where js testing is required:
https://github.com/rubygems/rubygems.org/pull/2029
> To aid detection of unauthorized gem changes, we email you each time a
> new version of a gem you own is pushed. By receiving and reading these
> emails, you help protect the Ruby ecosystem.

Hmmm.

The problem is that I am actually subscribed to my own gems, mostly 
because it gives me a way to sort stuff, e. g. to find out when the
last update happened (e. g. when I went to bed, wake up and don't
remember what I did in the last 72 hours or so).

With that change, I now get spammed by my own activity. :\ :/

I was looking for a way to disable this, but there was none that I
could find. So whenever I push a new gem, rubygems.org sends me
an email which I did not want to receive to begin with, nor does
it help me in any way really. I also disagree that by spamming me,
I "help protet the Ruby ecosystem".

I should clarify that I am all in favour of protecting USERS - but
NOT at the expense of usability. We have had problems before in the
past here, e. g. with the levensthein distance match or something
against typo-squatting annoying people; we also have seen discussion
from requiring "two factor authentification" or so, which ... 
requires a smartphone (which I don't have); and now this.

Please - if you really feel a need to make such changes then CONSIDER
EXISTING AND OLD DEVELOPERS who do not want to subscribe to all these
changes.

I actually logged in here just to see whether there is a simple way
to disable the notifications; and I could not find any. There is a
an individual entry for all gems, but I am not going to click
through +80 entries manually just to tick off all these email
notifications.

Anyway, now to suggestions how to change this:

- Add a SIMPLE way to disable all of these email notifications in
one go, somewhere. I guess a logical URL would be this one:

https://rubygems.org/notifier

but it could go elsewhere too. A simple form or so with a select
check button (or any other fitting form). When the user has selected
it to off, that user will no longer receive any email-updates.

You can of course say that this is useful, which may be; but to
me, whenever I am pushing new gem releases of my own gems,
rubygems.org spams me with this, which just is ... pointless. I'd
rather add a filter to get rid of rubygems.org than manually
tick off the individual entries ... :\ :/

So please, consider the UI of rubygems.org as a whole! Thanks.

PS: I should also add that I do not often check emails in general;
this is largely due to the way how I work (sorry). Right now I am
cleaning up all the gazillion emails in my gmail account in general,
which is quite boring and tedious; that is not the fault of rubygems.org
of course, but I can not change the infrequency of using emails in
general. (I actually much prefer issue trackers, webforum etc... 
han oldschool emails in general)

The specification for the `/api/v1/dependencies` endpoint does not define the format of the response when a gem has a dependency with a complex version requirement such as `foo (~> 1.1, >= 1.1.3)`.

The de facto spec is that such a dependency will be represented as a single string separated by commas and spaces, e.g. `["foo", "~> 1.1, >= 1.1.3"]`. This is what [bundler expects](https://github.com/bundler/bundler/blob/0b5da910e71760eb585b34d08d43ea31b988ca24/lib/bundler/fetcher/dependency.rb#L69).

However, the lack of codification here has contributed to issues such as https://issues.sonatype.org/browse/NEXUS-17477 with third-party gem servers, and having an explicit spec would be helpful toward resolving differences.