On versions that support it, we should include options to install Windows Terminal via both Store and Chocolatey (in scenarios where Store access is prohibited but choco installs are not) automatically from the Box Starter script. The Terminal should be available for all dev scripts as anybody doing any type of CLI will want to use it (even if they don't realize it at first). Additionally Win32-OpenSSH should be updated directly from github or from chocolately (currently chocolatey is a version behind). The reason behind this is simple: Releases on github are available sooner than installing via "optional features" on Windows 10 and also requires re-install in most cases during an OS upgrade when enabled via "optional features". This would also be available on all windows script so regardless of whether WSL is installed or not, the user can still use native SSH instead of Putty.


Beside Google Chrome, one click installation can't be done on the latest Microsoft Edge Insider beta (based on chromium). This should be taken under consideration if it's going to replace current edge version.
[boxstarter.log](https://github.com/Microsoft/windows-dev-box-setup-scripts/files/2600387/boxstarter.log)
Was running `dev_web.ps1` script and didn't get Hyper V installed, here is what I found in the Boxstarter log;

```
Installing the following packages:
Microsoft-Hyper-V-All
By installing you accept licenses for the packages.
Microsoft-Hyper-V-All not installed. The package was not found with the source(s) listed.
 If you specified a particular version and are receiving this message, it is possible that the package name exists but the version does not.
 Version: ""
 Source(s): "C:\Users\ddieppa\AppData\Local\Apps\2.0\073JBC6P.X42\WGX1XDKD.9PO\boxs..tion_c786fcdd1652c60a_0002.000c_efda7cf3ed105942\BuildPackages;https://chocolatey.org/api/v2"

Chocolatey installed 0/1 packages. 1 packages failed.
 See the log for details (C:\ProgramData\chocolatey\logs\chocolatey.log).

Failures
 - Microsoft-Hyper-V-All - Microsoft-Hyper-V-All not installed. The package was not found with the source(s) listed.
 If you specified a particular version and are receiving this message, it is possible that the package name exists but the version does not.
 Version: ""
 Source(s): "C:\Users\ddieppa\AppData\Local\Apps\2.0\073JBC6P.X42\WGX1XDKD.9PO\boxs..tion_c786fcdd1652c60a_0002.000c_efda7cf3ed105942\BuildPackages;https://chocolatey.org/api/v2"
Sending message 'PostRunMessage' out if there are subscribers...
[2018-11-20T08:39:36.2356583-05:00:::PID 6456] Boxstarter: restoring current directory location to C:\Windows\system32
VERBOSE: Boxstarter: restoring current directory location to C:\Windows\system32
[2018-11-20T08:39:36.2512840-05:00:::PID 6456] Boxstarter: Exit Code: 1
VERBOSE: Boxstarter: Exit Code: 1
```
Attached is the entire Boxstarter log file

Also noticed that after failing running the `HyperV.ps1` script, apparently none of the following scripts run: `Docker.ps1`, `WSL.ps1`, `Browsers.ps1`.
Didn't get installed any browser or docker or WSL

was running the `dev_web_nodejs` script and got a few red messages, but the problem really happens when installing **Visual Studio workloads,** here is the screenshot:

![image](https://user-images.githubusercontent.com/10607192/48286603-32696380-e434-11e8-8d92-fefe05930d78.png)

the script stall there like for more than an hour, any clue? and then got this:

![image](https://user-images.githubusercontent.com/10607192/48286698-7a888600-e434-11e8-8843-4614bef85dd4.png)

here are the print screen of the other issues found, perhaps they are related:

![image](https://user-images.githubusercontent.com/10607192/48286793-bde2f480-e434-11e8-9bb2-f2f20c1c0512.png)

![image](https://user-images.githubusercontent.com/10607192/48286857-f551a100-e434-11e8-9f04-4e6f0264bfdf.png)

![image](https://user-images.githubusercontent.com/10607192/48286875-026e9000-e435-11e8-8911-bcdf14694c0c.png)



Adds checks for operating system version, SKU, and architecture (where applicable) to WSL, Docker, Hyper-V, app removal, and developer mode enable scripts.
Tracking issue. https://github.com/chocolatey/boxstarter/issues/348

not sure if we care to track it but something i realized when i had a VM to test the desktop workloads
When I am looking at [dev_app.ps1](https://github.com/Microsoft/windows-dev-box-setup-scripts/blob/master/dev_app.ps1) I don't know what all of the following settings actually do:

```
Set-ItemProperty -Path HKCU:\Software\Microsoft\Windows\CurrentVersion\Explorer\Advanced -Name NavPaneExpandToCurrentFolder -Value 1
```

It would be great to see what all of these do, like jay harris [did in his dotfiles for windows](https://github.com/jayharris/dotfiles-windows/blob/master/windows.ps1#L157). 
There are a number of items that could be processed in parallel such as some of the settings and uninstalling of applications

https://blogs.technet.microsoft.com/uktechnet/2016/06/20/parallel-processing-with-powershell/
I'm going to work on improving the `dev_web` and `dev_web_nodejs` scripts. These are some of the ideas:

* [ ] Use `nvs`, with LTE and Latest Node Versions installed
* [ ] There is also an issue with the git VS Code wants to use not matching up with WSL git, so Iâ€™ve always bootstrapped this by using [WSLGIT](https://github.com/andy-5/wslgit) and pointing git in vscode towards that wslgit.exe
* [ ] Maybe install yarn as well
* [ ] Native WSL Deps Installed: (this would handle all of the native npm/node modules) that most people come across. (Zopfli, Reyon, neon-bindings etc.). `build-essentials` from apt-get
* [ ] Install [Microsoft Edge DevTools preview](https://www.microsoft.com/en-us/p/microsoft-edge-devtools-preview/9mzbfrmz0mnj)
* [ ] Install webdriver. If it is an insiders this should be part of the "developer mode"
* [x] VS Code with the Debugger extensions ([Chrome](https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-chrome), [Edge](https://marketplace.visualstudio.com/items?itemName=msjsdiag.debugger-for-edge)) #48

I'll keep this issue updated with the progress.