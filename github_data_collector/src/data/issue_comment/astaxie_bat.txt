The current bat help message says:

```
...
ITEM:
  Can be any of:
    Query string   key=value
    Header         key:value
    Post data      key=value
    File upload    key@/path/file
...
```

I was trying to send a JSON number and thought that it was not possible until I read the readme for bat and found that it *was* possible using the `key:=value` syntax. It would be great to see that syntax documented in the help message.
I've tried ` go build -ldflags '-extldflags "-fno-PIC -static"' -buildmode pie -tags 'osusergo netgo static_build'` and ` go build -ldflags '-extldflags "-fPIC -static"' -buildmode pie -tags 'osusergo netgo static_build'`.

Both get issues with trying to link.

```
/usr/local/go/pkg/tool/linux_amd64/link: running gcc failed: exit status 1
/usr/bin/ld: /usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/libpthread.a(pthread_create.o): relocation R_X86_64_32 against `.rodata.str1.1' can not be used when making a shared object; recompile with -fPIC
/usr/lib/gcc/x86_64-linux-gnu/4.9/../../../x86_64-linux-gnu/libpthread.a: error adding symbols: Bad value
collect2: error: ld returned 1 exit status
```

I don't want a shared object I want a self-contained static binary that I can use in a Docker container `FROM scratch`.
Every exported function in a program should have a doc comment. The first sentence should be a summary that starts with the name being declared.
From [effective go](https://golang.org/doc/effective_go.html#commentary).


PR generated by [CodeLingo](https://codelingo.io). [Install here](https://github.com/apps/codelingo) to drive Continuous Higher Standards.

![image](https://user-images.githubusercontent.com/7613160/45022407-c26ee380-b066-11e8-9eb9-cd28447a419e.png)


I need to post JSON containing Lucene queries, that tends to contain colons.  E.g. q=cm:title:foo

That did not work though, bat tries to parse it as a header and then complains about the equal sign.

There is an issue open for this: https://github.com/astaxie/bat/issues/62

I don't much like this solution, I think the function is too compliated as is.  But I could not come up with anything simpler, and I've been using this for a week now.




Reading https://github.com/astaxie/bat/blob/master/bat.go#L195-L204 bat attempts to parse stdin as JSON, and when it succeeds, the body content may be different to what was originally submitted. For example if that content has been previously used to calculate a signature such as `HMAC-SHA1`,
then the signature may no longer be valid.

In practice, when POSTing a file and adding its HMAC as a header, bat effectively appends 0x0a and it's possible that the final output JSON may be altered -- I haven't yet checked this but it could have different key/object order, or changed keys, as JSON allows repeated keys within objects.

I can understand if this is intended behaviour but it took a surprisingly long time to realise
this was the case, and track it down.

I'd propose that [PoLA](https://en.wikipedia.org/wiki/Principle_of_least_astonishment) should apply for content from `stdin` and it not be altered, or at least, only if the `-json=true` flag has been specified.

https://github.com/sharkdp/bat
One of my main use cases for curl is to check if https is setup correctly.
Having a flag to show certificate information would be very useful.
Example from curl:
```* SSL connection using TLSv1.2 / ECDHE-ECDSA-AES128-GCM-SHA256
* ALPN, server accepted to use http/1.1
* Server certificate:
*  subject: C=US; ST=California; L=Mountain View; O=Google Inc; CN=*.google.com
*  start date: Jan 10 09:55:43 2018 GMT
*  expire date: Apr  4 09:40:00 2018 GMT
*  subjectAltName: host "google.com" matched cert's "google.com"
*  issuer: C=US; O=Google Inc; CN=Google Internet Authority G2
*  SSL certificate verify ok.
```

Also having [curl --resolve](https://curl.haxx.se/libcurl/c/CURLOPT_RESOLVE.html) functionality would be super handy.

Thanks for creating a nice tool!