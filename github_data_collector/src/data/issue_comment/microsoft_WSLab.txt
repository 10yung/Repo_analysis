I've run WSLab while other VM's in Hyper-V were running and it timeouted on me when "Starting DC"

```
Starting DC
Start-VM : Nie można uruchomić maszyny „DC”.
Nie można przydzielić 2048 MB pamięci RAM: Zasoby systemowe nie wystarczają do ukończenia żądanej usługi. (0x800705AA).
Nie można uruchomić maszyny wirtualnej „DC”. (Identyfikator maszyny wirtualnej: B491206A-6188-4932-8B05-97D74D66B3A9)
Maszyna wirtualna „DC” nie może przydzielić 2048 MB pamięci RAM: Zasoby systemowe nie wystarczają do ukończenia żądanej usługi. (0x800705AA) (identyfikator maszyny wirtualnej: B491206A-6188-4932-8B05-97D74D66 B3A9).
At C:\temp\WSLab\2_CreateParentDisks.ps1:882 char:19
+             $DC | Start-VM
+                   ~~~~~~~~
    + CategoryInfo          : NotSpecified: (:) [Start-VM], VirtualizationException
    + FullyQualifiedErrorId : Unspecified,Microsoft.HyperV.PowerShell.Commands.StartVM
```
It's in Polish but surely you get the idea. It's saying that there are not enough resources available to complete the service

Maybe the script could check if there's enough RAM in Hyper-V before deploying the VMs?
Although not sure what difference is between DefaultQueueVrssQueueSchedulingModeRequested and DefaultQueueVrssQueueSchedulingMode :)
edit: More info: http://aka.ms/dvmmq-validation
The script looks for an interface with an alias `Ethernet` while configuring the DHCP role, but will fail if you use an non-English Windows Server iso. In my case I was using `14393.0.161119-1705.RS1_REFRESH_SERVER_EVAL_X64FRE_JA-JP.ISO` for the iso and the interface alias was `イーサネット`.
https://github.com/microsoft/WSLab/blob/95408e80df8587b445af9b0e21078d8b5779b53c/Scripts/2_CreateParentDisks.ps1#L735

As an workaround, I had to logon and rename the interface to `Ethernet` to proceed.
Hi Jaromirk, 

Thank you for the awesome lab!  I like that it's so easy to setup the environment.  
I tried out Cluster Sets scenario, and I noticed that the VM data is placed in Cluster master's InfraSOFS (\\MC-SOFS), but the docs (https://docs.microsoft.com/en-us/windows-server/storage/storage-spaces/cluster-sets) places them in each member clusters' InfraSOFS (ex. \\CL1-SOFS).  Is it a mistake or is it intentional?  If there are different usages for these InfraSOFSs, I would like to know the difference.    

Thanks!!
Looks like by design as NanoServer is no longer supported anyway. If you need NanoServer VHD for some testing, skip MSUs or select 14393.2724 as latest (kb4480961)
Could we get the PoSh in its own set of files to make things simpler to manage in VSCode/Git please?