Problem encountered on https://dotnet.microsoft.com/learn/aspnet/microservice-tutorial/docker-file
Operating System: windows

Is this supposed to be version 3.1 instead? I ran into issues when running the doctor build command. After altering this file to 3.1 I no longer had these issues. It specifically says in the myMicroservice.csproj file `<TargetFramework>netcoreapp3.1</TargetFramework>`

Not sure if this needs corrected or just something with my personal environment. Thanks!
I have an ASP.Net Core project that I started it using the .Net Core 2.2. I hosted it on the IIS 10 and windows server 2016 and it was working perfectly.  I upgraded the entire solution to 3.0 and then 3.1 after a while. And hosted it on the IIS. My current server is Windows Server 2019 and the IIS version is 10.0.17763.1, but when I browse the website address using the web browser it shows the 500.19(0x8007000d) error. I have installed the version 3.1.0 of the .Net Core Hosting Bundle on the system and following runtimes are installed with it:
![image](https://user-images.githubusercontent.com/11803924/72662985-aae98e00-3a02-11ea-8fce-388d51febd33.png)

After lots of tests, I found that the problem goes out by installing the version 3.0.1 of the .Net Core Hosting Bundle. This package adds the following runtimes to the system:
![image](https://user-images.githubusercontent.com/11803924/72663041-395e0f80-3a03-11ea-9671-93a1f032358d.png)
It seems that the `Microsoft.AspNetCore.App 3.0.1` is needed or covers the deficiency of the `Microsoft.AspNetCore.App 3.1.0`.
When I ran this code it gt this error : 
malith@malith-Aspire-E5-575G:~$ dotnet

Usage: dotnet [options]
Usage: dotnet [path-to-application]

Options:
  -h|--help         Display help.
  --info            Display .NET Core information.
  --list-sdks       Display the installed SDKs.
  --list-runtimes   Display the installed runtimes.

path-to-application:
  The path to an application .dll file to execute.
Install-Package System.Text.Json -Version 4.7.0
# Issue Title

I'm having problems with some .NET Core versions related to NTFS permissions

# General

Since .NET Framework 4.x and Windows Server 2012 (IIS 8.5), i'm using Application Pool Identity as Microsoft recomendation to have a more secure server publishing:
https://docs.microsoft.com/en-us/iis/manage/configuring-security/application-pool-identities
And this works very well, just give the "AppPoolId" the NTFS "Read only" permission to it's home directory and the site/system works great with least permission, giving the server more security.
However, if the application executes something or has to write some files, i need to give explicit NTFS permission to that folder.
When i start to work with .NET Core, i'm giving the same behavior: Application Pool user configured as "Application Pool Identity", and NTFS home directory's permission with "Read Only".
However, recently, i'm having problems with some systems running from .NET Core 2.x to 3.x. Seems like this is not standard to .NET Core framework, to run with less privileges (and i was shocked to see for example https://github.com/dotnet/cli/issues/5262 telling to change to LocalSystem to make it work).
Seems like some libraries are asking more permissions to work. After some debug, i find that i need to give "Traverse" permission on home directory of the system to make it work with "Read Only", because without that Traverse, the system tries to load things from C:\Windows\System32\Inetsrv as "LocalPath" instead of, for example, C:\Inetpub\SYSTEMXXXXXXX.

I tried to find a recomendation of permissions, something "official" to work with NTFS Permissions, i didn't find. So my suggestion to the .NET Core project it's that set the any default .NET Core app/system runs with "Read Only" NTFS permissions, and force libraries to work with that.

Today if you want to put a DLL inside your project, you are "forced" to set NTFS Permission on root folder to Read and Execute, potencially insecure as any code injected in your site could be executed remotely.

I believe this version should be the 2.1 LTS package?
Problem encountered on https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/edit
Operating System: windows

Provide details about the problem you are experiencing. Include your operating system version, exact error message, code sample, and anything else that is relevant.
[3.1.1 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.1/3.1.1/3.1.1.md)
[3.1.1 Download](https://www.microsoft.com/net/download/dotnet-core/3.1)

[3.0.2 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/3.0/3.0.2/3.0.2.md)
[3.0.2 Download](https://www.microsoft.com/net/download/dotnet-core/3.0)


[2.1.15 Release Notes](https://github.com/dotnet/core/blob/master/release-notes/2.1/2.1.15/2.1.15.md)
[2.1.15 Download](https://www.microsoft.com/net/download/dotnet-core/2.1)

**Blog posts**

[.NET Core](https://devblogs.microsoft.com/dotnet/net-core-january-2020/)

Please report any issues you find with 2.1.15, 3.0.2 or 3.1.1, either responding to this issue, creating a new issue or creating a new issue in one of the following repos:

* [aspnet/Home](https://github.com/dotnet/aspnetcore/issues) - for ASP.NET Core questions
* [aspnet/EntityFrameworkCore](https://github.com/dotnet/efcore/issues) - for Entity Framework Core questions
* [dotnet/cli](https://github.com/dotnet/cli/issues) - for CLI tools and questions
* [dotnet/corefx](https://github.com/dotnet/corefx/issues) - for API issues and questions
* [dotnet/coreclr](https://github.com/dotnet/coreclr/issues) - for runtime issues
* [dotnet/core-setup](https://github.com/dotnet/core-setup/issues) - for installer issues
* [dotnet/winforms](https://github.com/dotnet/winforms/issues) - for Winfroms issues
* [dotnet/wpf](https://github.com/dotnet/wpf/issues) - for WPF issues


-----

Here is a list of issues that we are tracking and working to resolve with the Jan 2020 release. We'll tick them off as each is resolved. See any linked issue for progress or resolution details.

- [x] SUSE 12/15 Linux package repository broken (https://github.com/dotnet/core/issues/4136)
- [x] 2.1.15 not yet available on Linux package repositories (https://github.com/dotnet/core/issues/4124)
- [x] Centos 7 Linux package repository broken on 2.1.15 (https://github.com/dotnet/core/issues/4124#issuecomment-574720022 , https://github.com/dotnet/core-setup/issues/8951, https://github.com/dotnet/runtime/issues/1757)
- [x] yum install dotnet-sdk-3.0 fails on Centos7 (https://github.com/dotnet/core/issues/4121)
- [x] Linux package repositories are temporarily down (Debian and RPM packages) (https://github.com/dotnet/core/issues/4122)


Problem encountered on https://dotnet.microsoft.com/learn/dotnet/hello-world-tutorial/create
Operating System: windows

Provide details about the problem you are experiencing. Include your operating system version, exact error message, code sample, and anything else that is relevant.
Problem encountered on https://dotnet.microsoft.com/learn/aspnet/hello-world-tutorial/install
Operating System: windows

Provide details about the problem you are experiencing. Include your operating system version, exact error message, code sample, and anything else that is relevant.