
When I create the Viz object and try to pass in a different color_function_type value (e.g. 'step'), the Viz display maintains the interpolate function even though the attribute in the Viz object has been changed.

Any ideas on why this is happening?
Not sure if this is only a problem in recent IPython versions but for me every plot is accompanied by:
```
/Users/brett/venvs/model/src/ipython/IPython/core/display.py:694: UserWarning: Consider using IPython.display.IFrame instead
  warnings.warn("Consider using IPython.display.IFrame instead")
```
Seems safe enough...?
https://github.com/mapbox/mapboxgl-jupyter/issues/146

Each time I open a pull request, I no longer see the report from Coverage/Coveralls on the test coverage.  Is there an update to https://coveralls.io/github/mapbox/mapboxgl-jupyter/settings that would fix this?
<img width="691" alt="Screen Shot" src="https://user-images.githubusercontent.com/13527707/62071678-ea70b380-b1f1-11e9-85a1-8e594588ba3a.png">


I am trying to run the example Jupyter Notebook in
`../master/examples/notebooks/scale-annotation.ipynb`

I've set up my environment with conda:
`conda install -c conda-forge mapboxgl`

The file paths I've tested:

1. relative path

```
--mapboxgl-jupyter
----scale-annotation.ipynb
----data
------healthcare_points.geojson
----templates
------circle.html
```

2. up directory path

```
--mapboxgl-jupyter
----scale-annotation.ipynb
--data
----healthcare_points.geojson
--templates
----circle.html
```

3. local

```
--mapboxgl-jupyter
----scale-annotation.ipynb
----healthcare_points.geojson
----circle.html
```

All of these give me:

```bash
~/miniconda3/envs/jupyter_env/lib/python3.6/site-packages/jinja2/loaders.py in load(self, environment, name, globals)
    111         # first we try to get the source for this template together
    112         # with the filename and the uptodate function.
--> 113         source, filename, uptodate = self.get_source(environment, name)
    114 
    115         # try to load the code from the bytecode cache if there is a

~/miniconda3/envs/jupyter_env/lib/python3.6/site-packages/jinja2/loaders.py in get_source(self, environment, template)
    233         p = '/'.join((self.package_path,) + tuple(pieces))
    234         if not self.provider.has_resource(p):
--> 235             raise TemplateNotFound(template)
    236 
    237         filename = uptodate = None

TemplateNotFound: circle.html
```
Hi,
It'd be great if we could edit the title of legend. Currently, the name of the `color_property` is being rendered as the title for the colour legend. 

A new feature to edit the legend title name would be helpful if the name on `color_property` doesn't make sense. 

Thanks. 
Adds support for 'identity' and 'step' expression types for `color_function_type`, `radius_function_type` or `height_function_type`.  Closes #144 and #169.
If you pass a GeoJSON dict with single apostrophee's in it, the notebook fails to render the map eg:

```
{ ... 'properties': {'address': 'foo 'bar'}}
```
